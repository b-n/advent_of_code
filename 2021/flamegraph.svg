<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1142" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1125.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1125.00"> </text><svg id="frames" x="10" width="1180" total_samples="209"><g><title>perf (5 samples, 2.39%)</title><rect x="0.0000%" y="1077" width="2.3923%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1087.50">pe..</text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 2.39%)</title><rect x="0.0000%" y="1061" width="2.3923%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1071.50">en..</text></g><g><title>do_syscall_64 (5 samples, 2.39%)</title><rect x="0.0000%" y="1045" width="2.3923%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1055.50">do..</text></g><g><title>__x64_sys_execve (5 samples, 2.39%)</title><rect x="0.0000%" y="1029" width="2.3923%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1039.50">__..</text></g><g><title>do_execveat_common.isra.0 (5 samples, 2.39%)</title><rect x="0.0000%" y="1013" width="2.3923%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1023.50">do..</text></g><g><title>bprm_execve (5 samples, 2.39%)</title><rect x="0.0000%" y="997" width="2.3923%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1007.50">bp..</text></g><g><title>exec_binprm (5 samples, 2.39%)</title><rect x="0.0000%" y="981" width="2.3923%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="991.50">ex..</text></g><g><title>load_elf_binary (5 samples, 2.39%)</title><rect x="0.0000%" y="965" width="2.3923%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="5"/><text x="0.2500%" y="975.50">lo..</text></g><g><title>begin_new_exec (5 samples, 2.39%)</title><rect x="0.0000%" y="949" width="2.3923%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="5"/><text x="0.2500%" y="959.50">be..</text></g><g><title>__set_task_comm (5 samples, 2.39%)</title><rect x="0.0000%" y="933" width="2.3923%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="5"/><text x="0.2500%" y="943.50">__..</text></g><g><title>perf_event_comm (5 samples, 2.39%)</title><rect x="0.0000%" y="917" width="2.3923%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="5"/><text x="0.2500%" y="927.50">pe..</text></g><g><title>perf_iterate_sb (5 samples, 2.39%)</title><rect x="0.0000%" y="901" width="2.3923%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="5"/><text x="0.2500%" y="911.50">pe..</text></g><g><title>perf_event_comm_output (5 samples, 2.39%)</title><rect x="0.0000%" y="885" width="2.3923%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="5"/><text x="0.2500%" y="895.50">pe..</text></g><g><title>__libc_start_main (1 samples, 0.48%)</title><rect x="2.3923%" y="1045" width="0.4785%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="1"/><text x="2.6423%" y="1055.50"></text></g><g><title>main (1 samples, 0.48%)</title><rect x="2.3923%" y="1029" width="0.4785%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="2.6423%" y="1039.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.48%)</title><rect x="2.3923%" y="1013" width="0.4785%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="1"/><text x="2.6423%" y="1023.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.48%)</title><rect x="2.3923%" y="997" width="0.4785%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="1"/><text x="2.6423%" y="1007.50"></text></g><g><title>std::panicking::try (1 samples, 0.48%)</title><rect x="2.3923%" y="981" width="0.4785%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="2.6423%" y="991.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.48%)</title><rect x="2.3923%" y="965" width="0.4785%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="1"/><text x="2.6423%" y="975.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.48%)</title><rect x="2.3923%" y="949" width="0.4785%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="1"/><text x="2.6423%" y="959.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.48%)</title><rect x="2.3923%" y="933" width="0.4785%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="1"/><text x="2.6423%" y="943.50"></text></g><g><title>std::panicking::try (1 samples, 0.48%)</title><rect x="2.3923%" y="917" width="0.4785%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="1"/><text x="2.6423%" y="927.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.48%)</title><rect x="2.3923%" y="901" width="0.4785%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="1"/><text x="2.6423%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.48%)</title><rect x="2.3923%" y="885" width="0.4785%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="1"/><text x="2.6423%" y="895.50"></text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 0.48%)</title><rect x="2.3923%" y="869" width="0.4785%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="1"/><text x="2.6423%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.48%)</title><rect x="2.3923%" y="853" width="0.4785%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="1"/><text x="2.6423%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.48%)</title><rect x="2.3923%" y="837" width="0.4785%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="1"/><text x="2.6423%" y="847.50"></text></g><g><title>y2021::main (1 samples, 0.48%)</title><rect x="2.3923%" y="821" width="0.4785%" height="15" fill="rgb(238,160,17)" fg:x="5" fg:w="1"/><text x="2.6423%" y="831.50"></text></g><g><title>y2021::d12::main2::run (1 samples, 0.48%)</title><rect x="2.3923%" y="805" width="0.4785%" height="15" fill="rgb(214,148,48)" fg:x="5" fg:w="1"/><text x="2.6423%" y="815.50"></text></g><g><title>y2021::d12::main2::p02 (1 samples, 0.48%)</title><rect x="2.3923%" y="789" width="0.4785%" height="15" fill="rgb(232,36,49)" fg:x="5" fg:w="1"/><text x="2.6423%" y="799.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="2.3923%" y="773" width="0.4785%" height="15" fill="rgb(209,103,24)" fg:x="5" fg:w="1"/><text x="2.6423%" y="783.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="2.3923%" y="757" width="0.4785%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="1"/><text x="2.6423%" y="767.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="2.3923%" y="741" width="0.4785%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="1"/><text x="2.6423%" y="751.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="2.3923%" y="725" width="0.4785%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="1"/><text x="2.6423%" y="735.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="2.3923%" y="709" width="0.4785%" height="15" fill="rgb(241,83,37)" fg:x="5" fg:w="1"/><text x="2.6423%" y="719.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="2.3923%" y="693" width="0.4785%" height="15" fill="rgb(233,36,39)" fg:x="5" fg:w="1"/><text x="2.6423%" y="703.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="2.3923%" y="677" width="0.4785%" height="15" fill="rgb(226,3,54)" fg:x="5" fg:w="1"/><text x="2.6423%" y="687.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="2.3923%" y="661" width="0.4785%" height="15" fill="rgb(245,192,40)" fg:x="5" fg:w="1"/><text x="2.6423%" y="671.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="2.3923%" y="645" width="0.4785%" height="15" fill="rgb(238,167,29)" fg:x="5" fg:w="1"/><text x="2.6423%" y="655.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="2.3923%" y="629" width="0.4785%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="1"/><text x="2.6423%" y="639.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="2.3923%" y="613" width="0.4785%" height="15" fill="rgb(231,60,39)" fg:x="5" fg:w="1"/><text x="2.6423%" y="623.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="2.3923%" y="597" width="0.4785%" height="15" fill="rgb(208,69,12)" fg:x="5" fg:w="1"/><text x="2.6423%" y="607.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="2.3923%" y="581" width="0.4785%" height="15" fill="rgb(235,93,37)" fg:x="5" fg:w="1"/><text x="2.6423%" y="591.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="2.3923%" y="565" width="0.4785%" height="15" fill="rgb(213,116,39)" fg:x="5" fg:w="1"/><text x="2.6423%" y="575.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="2.3923%" y="549" width="0.4785%" height="15" fill="rgb(222,207,29)" fg:x="5" fg:w="1"/><text x="2.6423%" y="559.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.48%)</title><rect x="2.3923%" y="533" width="0.4785%" height="15" fill="rgb(206,96,30)" fg:x="5" fg:w="1"/><text x="2.6423%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.48%)</title><rect x="2.3923%" y="517" width="0.4785%" height="15" fill="rgb(218,138,4)" fg:x="5" fg:w="1"/><text x="2.6423%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.48%)</title><rect x="2.3923%" y="501" width="0.4785%" height="15" fill="rgb(250,191,14)" fg:x="5" fg:w="1"/><text x="2.6423%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.48%)</title><rect x="2.3923%" y="485" width="0.4785%" height="15" fill="rgb(239,60,40)" fg:x="5" fg:w="1"/><text x="2.6423%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.48%)</title><rect x="2.3923%" y="469" width="0.4785%" height="15" fill="rgb(206,27,48)" fg:x="5" fg:w="1"/><text x="2.6423%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.48%)</title><rect x="2.3923%" y="453" width="0.4785%" height="15" fill="rgb(225,35,8)" fg:x="5" fg:w="1"/><text x="2.6423%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.48%)</title><rect x="2.3923%" y="437" width="0.4785%" height="15" fill="rgb(250,213,24)" fg:x="5" fg:w="1"/><text x="2.6423%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.48%)</title><rect x="2.3923%" y="421" width="0.4785%" height="15" fill="rgb(247,123,22)" fg:x="5" fg:w="1"/><text x="2.6423%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.48%)</title><rect x="2.3923%" y="405" width="0.4785%" height="15" fill="rgb(231,138,38)" fg:x="5" fg:w="1"/><text x="2.6423%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.48%)</title><rect x="2.3923%" y="389" width="0.4785%" height="15" fill="rgb(231,145,46)" fg:x="5" fg:w="1"/><text x="2.6423%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.48%)</title><rect x="2.3923%" y="373" width="0.4785%" height="15" fill="rgb(251,118,11)" fg:x="5" fg:w="1"/><text x="2.6423%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.48%)</title><rect x="2.3923%" y="357" width="0.4785%" height="15" fill="rgb(217,147,25)" fg:x="5" fg:w="1"/><text x="2.6423%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.48%)</title><rect x="2.3923%" y="341" width="0.4785%" height="15" fill="rgb(247,81,37)" fg:x="5" fg:w="1"/><text x="2.6423%" y="351.50"></text></g><g><title>core::cmp::max (1 samples, 0.48%)</title><rect x="2.3923%" y="325" width="0.4785%" height="15" fill="rgb(209,12,38)" fg:x="5" fg:w="1"/><text x="2.6423%" y="335.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.48%)</title><rect x="2.3923%" y="309" width="0.4785%" height="15" fill="rgb(227,1,9)" fg:x="5" fg:w="1"/><text x="2.6423%" y="319.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.48%)</title><rect x="2.3923%" y="293" width="0.4785%" height="15" fill="rgb(248,47,43)" fg:x="5" fg:w="1"/><text x="2.6423%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="2.8708%" y="549" width="0.4785%" height="15" fill="rgb(221,10,30)" fg:x="6" fg:w="1"/><text x="3.1208%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.48%)</title><rect x="2.8708%" y="533" width="0.4785%" height="15" fill="rgb(210,229,1)" fg:x="6" fg:w="1"/><text x="3.1208%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.48%)</title><rect x="2.8708%" y="517" width="0.4785%" height="15" fill="rgb(222,148,37)" fg:x="6" fg:w="1"/><text x="3.1208%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.48%)</title><rect x="2.8708%" y="501" width="0.4785%" height="15" fill="rgb(234,67,33)" fg:x="6" fg:w="1"/><text x="3.1208%" y="511.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.48%)</title><rect x="2.8708%" y="485" width="0.4785%" height="15" fill="rgb(247,98,35)" fg:x="6" fg:w="1"/><text x="3.1208%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.48%)</title><rect x="2.8708%" y="469" width="0.4785%" height="15" fill="rgb(247,138,52)" fg:x="6" fg:w="1"/><text x="3.1208%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.48%)</title><rect x="2.8708%" y="453" width="0.4785%" height="15" fill="rgb(213,79,30)" fg:x="6" fg:w="1"/><text x="3.1208%" y="463.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.48%)</title><rect x="2.8708%" y="437" width="0.4785%" height="15" fill="rgb(246,177,23)" fg:x="6" fg:w="1"/><text x="3.1208%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.48%)</title><rect x="2.8708%" y="421" width="0.4785%" height="15" fill="rgb(230,62,27)" fg:x="6" fg:w="1"/><text x="3.1208%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.48%)</title><rect x="2.8708%" y="405" width="0.4785%" height="15" fill="rgb(216,154,8)" fg:x="6" fg:w="1"/><text x="3.1208%" y="415.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="2.8708%" y="389" width="0.4785%" height="15" fill="rgb(244,35,45)" fg:x="6" fg:w="1"/><text x="3.1208%" y="399.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.48%)</title><rect x="2.8708%" y="373" width="0.4785%" height="15" fill="rgb(251,115,12)" fg:x="6" fg:w="1"/><text x="3.1208%" y="383.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.48%)</title><rect x="2.8708%" y="357" width="0.4785%" height="15" fill="rgb(240,54,50)" fg:x="6" fg:w="1"/><text x="3.1208%" y="367.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.48%)</title><rect x="2.8708%" y="341" width="0.4785%" height="15" fill="rgb(233,84,52)" fg:x="6" fg:w="1"/><text x="3.1208%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.48%)</title><rect x="2.8708%" y="325" width="0.4785%" height="15" fill="rgb(207,117,47)" fg:x="6" fg:w="1"/><text x="3.1208%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.48%)</title><rect x="2.8708%" y="309" width="0.4785%" height="15" fill="rgb(249,43,39)" fg:x="6" fg:w="1"/><text x="3.1208%" y="319.50"></text></g><g><title>[unknown] (3 samples, 1.44%)</title><rect x="2.3923%" y="1061" width="1.4354%" height="15" fill="rgb(209,38,44)" fg:x="5" fg:w="3"/><text x="2.6423%" y="1071.50"></text></g><g><title>std::rt::lang_start_internal (2 samples, 0.96%)</title><rect x="2.8708%" y="1045" width="0.9569%" height="15" fill="rgb(236,212,23)" fg:x="6" fg:w="2"/><text x="3.1208%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.96%)</title><rect x="2.8708%" y="1029" width="0.9569%" height="15" fill="rgb(242,79,21)" fg:x="6" fg:w="2"/><text x="3.1208%" y="1039.50"></text></g><g><title>std::panicking::try (2 samples, 0.96%)</title><rect x="2.8708%" y="1013" width="0.9569%" height="15" fill="rgb(211,96,35)" fg:x="6" fg:w="2"/><text x="3.1208%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.96%)</title><rect x="2.8708%" y="997" width="0.9569%" height="15" fill="rgb(253,215,40)" fg:x="6" fg:w="2"/><text x="3.1208%" y="1007.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (2 samples, 0.96%)</title><rect x="2.8708%" y="981" width="0.9569%" height="15" fill="rgb(211,81,21)" fg:x="6" fg:w="2"/><text x="3.1208%" y="991.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.96%)</title><rect x="2.8708%" y="965" width="0.9569%" height="15" fill="rgb(208,190,38)" fg:x="6" fg:w="2"/><text x="3.1208%" y="975.50"></text></g><g><title>std::panicking::try (2 samples, 0.96%)</title><rect x="2.8708%" y="949" width="0.9569%" height="15" fill="rgb(235,213,38)" fg:x="6" fg:w="2"/><text x="3.1208%" y="959.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.96%)</title><rect x="2.8708%" y="933" width="0.9569%" height="15" fill="rgb(237,122,38)" fg:x="6" fg:w="2"/><text x="3.1208%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2 samples, 0.96%)</title><rect x="2.8708%" y="917" width="0.9569%" height="15" fill="rgb(244,218,35)" fg:x="6" fg:w="2"/><text x="3.1208%" y="927.50"></text></g><g><title>std::rt::lang_start::{{closure}} (2 samples, 0.96%)</title><rect x="2.8708%" y="901" width="0.9569%" height="15" fill="rgb(240,68,47)" fg:x="6" fg:w="2"/><text x="3.1208%" y="911.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.96%)</title><rect x="2.8708%" y="885" width="0.9569%" height="15" fill="rgb(210,16,53)" fg:x="6" fg:w="2"/><text x="3.1208%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.96%)</title><rect x="2.8708%" y="869" width="0.9569%" height="15" fill="rgb(235,124,12)" fg:x="6" fg:w="2"/><text x="3.1208%" y="879.50"></text></g><g><title>y2021::main (2 samples, 0.96%)</title><rect x="2.8708%" y="853" width="0.9569%" height="15" fill="rgb(224,169,11)" fg:x="6" fg:w="2"/><text x="3.1208%" y="863.50"></text></g><g><title>y2021::d12::main2::run (2 samples, 0.96%)</title><rect x="2.8708%" y="837" width="0.9569%" height="15" fill="rgb(250,166,2)" fg:x="6" fg:w="2"/><text x="3.1208%" y="847.50"></text></g><g><title>y2021::d12::main2::p02 (2 samples, 0.96%)</title><rect x="2.8708%" y="821" width="0.9569%" height="15" fill="rgb(242,216,29)" fg:x="6" fg:w="2"/><text x="3.1208%" y="831.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="805" width="0.9569%" height="15" fill="rgb(230,116,27)" fg:x="6" fg:w="2"/><text x="3.1208%" y="815.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="789" width="0.9569%" height="15" fill="rgb(228,99,48)" fg:x="6" fg:w="2"/><text x="3.1208%" y="799.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="773" width="0.9569%" height="15" fill="rgb(253,11,6)" fg:x="6" fg:w="2"/><text x="3.1208%" y="783.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="757" width="0.9569%" height="15" fill="rgb(247,143,39)" fg:x="6" fg:w="2"/><text x="3.1208%" y="767.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="741" width="0.9569%" height="15" fill="rgb(236,97,10)" fg:x="6" fg:w="2"/><text x="3.1208%" y="751.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="725" width="0.9569%" height="15" fill="rgb(233,208,19)" fg:x="6" fg:w="2"/><text x="3.1208%" y="735.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="709" width="0.9569%" height="15" fill="rgb(216,164,2)" fg:x="6" fg:w="2"/><text x="3.1208%" y="719.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="693" width="0.9569%" height="15" fill="rgb(220,129,5)" fg:x="6" fg:w="2"/><text x="3.1208%" y="703.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="677" width="0.9569%" height="15" fill="rgb(242,17,10)" fg:x="6" fg:w="2"/><text x="3.1208%" y="687.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="661" width="0.9569%" height="15" fill="rgb(242,107,0)" fg:x="6" fg:w="2"/><text x="3.1208%" y="671.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="645" width="0.9569%" height="15" fill="rgb(251,28,31)" fg:x="6" fg:w="2"/><text x="3.1208%" y="655.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="629" width="0.9569%" height="15" fill="rgb(233,223,10)" fg:x="6" fg:w="2"/><text x="3.1208%" y="639.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="613" width="0.9569%" height="15" fill="rgb(215,21,27)" fg:x="6" fg:w="2"/><text x="3.1208%" y="623.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="597" width="0.9569%" height="15" fill="rgb(232,23,21)" fg:x="6" fg:w="2"/><text x="3.1208%" y="607.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="581" width="0.9569%" height="15" fill="rgb(244,5,23)" fg:x="6" fg:w="2"/><text x="3.1208%" y="591.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="2.8708%" y="565" width="0.9569%" height="15" fill="rgb(226,81,46)" fg:x="6" fg:w="2"/><text x="3.1208%" y="575.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.48%)</title><rect x="3.3493%" y="549" width="0.4785%" height="15" fill="rgb(247,70,30)" fg:x="7" fg:w="1"/><text x="3.5993%" y="559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.48%)</title><rect x="3.3493%" y="533" width="0.4785%" height="15" fill="rgb(212,68,19)" fg:x="7" fg:w="1"/><text x="3.5993%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.48%)</title><rect x="3.3493%" y="517" width="0.4785%" height="15" fill="rgb(240,187,13)" fg:x="7" fg:w="1"/><text x="3.5993%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.48%)</title><rect x="3.3493%" y="501" width="0.4785%" height="15" fill="rgb(223,113,26)" fg:x="7" fg:w="1"/><text x="3.5993%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.48%)</title><rect x="3.3493%" y="485" width="0.4785%" height="15" fill="rgb(206,192,2)" fg:x="7" fg:w="1"/><text x="3.5993%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.48%)</title><rect x="3.3493%" y="469" width="0.4785%" height="15" fill="rgb(241,108,4)" fg:x="7" fg:w="1"/><text x="3.5993%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.48%)</title><rect x="3.3493%" y="453" width="0.4785%" height="15" fill="rgb(247,173,49)" fg:x="7" fg:w="1"/><text x="3.5993%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.48%)</title><rect x="3.3493%" y="437" width="0.4785%" height="15" fill="rgb(224,114,35)" fg:x="7" fg:w="1"/><text x="3.5993%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.48%)</title><rect x="3.3493%" y="421" width="0.4785%" height="15" fill="rgb(245,159,27)" fg:x="7" fg:w="1"/><text x="3.5993%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.48%)</title><rect x="3.3493%" y="405" width="0.4785%" height="15" fill="rgb(245,172,44)" fg:x="7" fg:w="1"/><text x="3.5993%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.48%)</title><rect x="3.3493%" y="389" width="0.4785%" height="15" fill="rgb(236,23,11)" fg:x="7" fg:w="1"/><text x="3.5993%" y="399.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.48%)</title><rect x="3.3493%" y="373" width="0.4785%" height="15" fill="rgb(205,117,38)" fg:x="7" fg:w="1"/><text x="3.5993%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.48%)</title><rect x="3.8278%" y="325" width="0.4785%" height="15" fill="rgb(237,72,25)" fg:x="8" fg:w="1"/><text x="4.0778%" y="335.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (2 samples, 0.96%)</title><rect x="3.8278%" y="421" width="0.9569%" height="15" fill="rgb(244,70,9)" fg:x="8" fg:w="2"/><text x="4.0778%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.96%)</title><rect x="3.8278%" y="405" width="0.9569%" height="15" fill="rgb(217,125,39)" fg:x="8" fg:w="2"/><text x="4.0778%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.96%)</title><rect x="3.8278%" y="389" width="0.9569%" height="15" fill="rgb(235,36,10)" fg:x="8" fg:w="2"/><text x="4.0778%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.96%)</title><rect x="3.8278%" y="373" width="0.9569%" height="15" fill="rgb(251,123,47)" fg:x="8" fg:w="2"/><text x="4.0778%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.96%)</title><rect x="3.8278%" y="357" width="0.9569%" height="15" fill="rgb(221,13,13)" fg:x="8" fg:w="2"/><text x="4.0778%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.96%)</title><rect x="3.8278%" y="341" width="0.9569%" height="15" fill="rgb(238,131,9)" fg:x="8" fg:w="2"/><text x="4.0778%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.48%)</title><rect x="4.3062%" y="325" width="0.4785%" height="15" fill="rgb(211,50,8)" fg:x="9" fg:w="1"/><text x="4.5562%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (1 samples, 0.48%)</title><rect x="4.7847%" y="421" width="0.4785%" height="15" fill="rgb(245,182,24)" fg:x="10" fg:w="1"/><text x="5.0347%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1 samples, 0.48%)</title><rect x="4.7847%" y="405" width="0.4785%" height="15" fill="rgb(242,14,37)" fg:x="10" fg:w="1"/><text x="5.0347%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.48%)</title><rect x="4.7847%" y="389" width="0.4785%" height="15" fill="rgb(246,228,12)" fg:x="10" fg:w="1"/><text x="5.0347%" y="399.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.48%)</title><rect x="4.7847%" y="373" width="0.4785%" height="15" fill="rgb(213,55,15)" fg:x="10" fg:w="1"/><text x="5.0347%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (4 samples, 1.91%)</title><rect x="3.8278%" y="485" width="1.9139%" height="15" fill="rgb(209,9,3)" fg:x="8" fg:w="4"/><text x="4.0778%" y="495.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 1.91%)</title><rect x="3.8278%" y="469" width="1.9139%" height="15" fill="rgb(230,59,30)" fg:x="8" fg:w="4"/><text x="4.0778%" y="479.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 1.91%)</title><rect x="3.8278%" y="453" width="1.9139%" height="15" fill="rgb(209,121,21)" fg:x="8" fg:w="4"/><text x="4.0778%" y="463.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (4 samples, 1.91%)</title><rect x="3.8278%" y="437" width="1.9139%" height="15" fill="rgb(220,109,13)" fg:x="8" fg:w="4"/><text x="4.0778%" y="447.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.48%)</title><rect x="5.2632%" y="421" width="0.4785%" height="15" fill="rgb(232,18,1)" fg:x="11" fg:w="1"/><text x="5.5132%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.48%)</title><rect x="5.2632%" y="405" width="0.4785%" height="15" fill="rgb(215,41,42)" fg:x="11" fg:w="1"/><text x="5.5132%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.48%)</title><rect x="5.2632%" y="389" width="0.4785%" height="15" fill="rgb(224,123,36)" fg:x="11" fg:w="1"/><text x="5.5132%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.48%)</title><rect x="5.2632%" y="373" width="0.4785%" height="15" fill="rgb(240,125,3)" fg:x="11" fg:w="1"/><text x="5.5132%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 2.39%)</title><rect x="3.8278%" y="773" width="2.3923%" height="15" fill="rgb(205,98,50)" fg:x="8" fg:w="5"/><text x="4.0778%" y="783.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 2.39%)</title><rect x="3.8278%" y="757" width="2.3923%" height="15" fill="rgb(205,185,37)" fg:x="8" fg:w="5"/><text x="4.0778%" y="767.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 2.39%)</title><rect x="3.8278%" y="741" width="2.3923%" height="15" fill="rgb(238,207,15)" fg:x="8" fg:w="5"/><text x="4.0778%" y="751.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 2.39%)</title><rect x="3.8278%" y="725" width="2.3923%" height="15" fill="rgb(213,199,42)" fg:x="8" fg:w="5"/><text x="4.0778%" y="735.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 2.39%)</title><rect x="3.8278%" y="709" width="2.3923%" height="15" fill="rgb(235,201,11)" fg:x="8" fg:w="5"/><text x="4.0778%" y="719.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 2.39%)</title><rect x="3.8278%" y="693" width="2.3923%" height="15" fill="rgb(207,46,11)" fg:x="8" fg:w="5"/><text x="4.0778%" y="703.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 2.39%)</title><rect x="3.8278%" y="677" width="2.3923%" height="15" fill="rgb(241,35,35)" fg:x="8" fg:w="5"/><text x="4.0778%" y="687.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 2.39%)</title><rect x="3.8278%" y="661" width="2.3923%" height="15" fill="rgb(243,32,47)" fg:x="8" fg:w="5"/><text x="4.0778%" y="671.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 2.39%)</title><rect x="3.8278%" y="645" width="2.3923%" height="15" fill="rgb(247,202,23)" fg:x="8" fg:w="5"/><text x="4.0778%" y="655.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 2.39%)</title><rect x="3.8278%" y="629" width="2.3923%" height="15" fill="rgb(219,102,11)" fg:x="8" fg:w="5"/><text x="4.0778%" y="639.50">co..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (5 samples, 2.39%)</title><rect x="3.8278%" y="613" width="2.3923%" height="15" fill="rgb(243,110,44)" fg:x="8" fg:w="5"/><text x="4.0778%" y="623.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 2.39%)</title><rect x="3.8278%" y="597" width="2.3923%" height="15" fill="rgb(222,74,54)" fg:x="8" fg:w="5"/><text x="4.0778%" y="607.50">co..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (5 samples, 2.39%)</title><rect x="3.8278%" y="581" width="2.3923%" height="15" fill="rgb(216,99,12)" fg:x="8" fg:w="5"/><text x="4.0778%" y="591.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 2.39%)</title><rect x="3.8278%" y="565" width="2.3923%" height="15" fill="rgb(226,22,26)" fg:x="8" fg:w="5"/><text x="4.0778%" y="575.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 2.39%)</title><rect x="3.8278%" y="549" width="2.3923%" height="15" fill="rgb(217,163,10)" fg:x="8" fg:w="5"/><text x="4.0778%" y="559.50">co..</text></g><g><title>y2021::d05::main::p01::{{closure}} (5 samples, 2.39%)</title><rect x="3.8278%" y="533" width="2.3923%" height="15" fill="rgb(213,25,53)" fg:x="8" fg:w="5"/><text x="4.0778%" y="543.50">y2..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (5 samples, 2.39%)</title><rect x="3.8278%" y="517" width="2.3923%" height="15" fill="rgb(252,105,26)" fg:x="8" fg:w="5"/><text x="4.0778%" y="527.50">st..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (5 samples, 2.39%)</title><rect x="3.8278%" y="501" width="2.3923%" height="15" fill="rgb(220,39,43)" fg:x="8" fg:w="5"/><text x="4.0778%" y="511.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.48%)</title><rect x="5.7416%" y="485" width="0.4785%" height="15" fill="rgb(229,68,48)" fg:x="12" fg:w="1"/><text x="5.9916%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.48%)</title><rect x="5.7416%" y="469" width="0.4785%" height="15" fill="rgb(252,8,32)" fg:x="12" fg:w="1"/><text x="5.9916%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.48%)</title><rect x="5.7416%" y="453" width="0.4785%" height="15" fill="rgb(223,20,43)" fg:x="12" fg:w="1"/><text x="5.9916%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.48%)</title><rect x="5.7416%" y="437" width="0.4785%" height="15" fill="rgb(229,81,49)" fg:x="12" fg:w="1"/><text x="5.9916%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.48%)</title><rect x="5.7416%" y="421" width="0.4785%" height="15" fill="rgb(236,28,36)" fg:x="12" fg:w="1"/><text x="5.9916%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.48%)</title><rect x="5.7416%" y="405" width="0.4785%" height="15" fill="rgb(249,185,26)" fg:x="12" fg:w="1"/><text x="5.9916%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.48%)</title><rect x="5.7416%" y="389" width="0.4785%" height="15" fill="rgb(249,174,33)" fg:x="12" fg:w="1"/><text x="5.9916%" y="399.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.48%)</title><rect x="5.7416%" y="373" width="0.4785%" height="15" fill="rgb(233,201,37)" fg:x="12" fg:w="1"/><text x="5.9916%" y="383.50"></text></g><g><title>y2021::d05::main::p01 (6 samples, 2.87%)</title><rect x="3.8278%" y="789" width="2.8708%" height="15" fill="rgb(221,78,26)" fg:x="8" fg:w="6"/><text x="4.0778%" y="799.50">y2..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.48%)</title><rect x="6.2201%" y="773" width="0.4785%" height="15" fill="rgb(250,127,30)" fg:x="13" fg:w="1"/><text x="6.4701%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="6.2201%" y="757" width="0.4785%" height="15" fill="rgb(230,49,44)" fg:x="13" fg:w="1"/><text x="6.4701%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="6.2201%" y="741" width="0.4785%" height="15" fill="rgb(229,67,23)" fg:x="13" fg:w="1"/><text x="6.4701%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="6.2201%" y="725" width="0.4785%" height="15" fill="rgb(249,83,47)" fg:x="13" fg:w="1"/><text x="6.4701%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.48%)</title><rect x="6.2201%" y="709" width="0.4785%" height="15" fill="rgb(215,43,3)" fg:x="13" fg:w="1"/><text x="6.4701%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.48%)</title><rect x="6.2201%" y="693" width="0.4785%" height="15" fill="rgb(238,154,13)" fg:x="13" fg:w="1"/><text x="6.4701%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="6.2201%" y="677" width="0.4785%" height="15" fill="rgb(219,56,2)" fg:x="13" fg:w="1"/><text x="6.4701%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.48%)</title><rect x="6.2201%" y="661" width="0.4785%" height="15" fill="rgb(233,0,4)" fg:x="13" fg:w="1"/><text x="6.4701%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.48%)</title><rect x="6.2201%" y="645" width="0.4785%" height="15" fill="rgb(235,30,7)" fg:x="13" fg:w="1"/><text x="6.4701%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="6.2201%" y="629" width="0.4785%" height="15" fill="rgb(250,79,13)" fg:x="13" fg:w="1"/><text x="6.4701%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="6.2201%" y="613" width="0.4785%" height="15" fill="rgb(211,146,34)" fg:x="13" fg:w="1"/><text x="6.4701%" y="623.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="6.2201%" y="597" width="0.4785%" height="15" fill="rgb(228,22,38)" fg:x="13" fg:w="1"/><text x="6.4701%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="6.2201%" y="581" width="0.4785%" height="15" fill="rgb(235,168,5)" fg:x="13" fg:w="1"/><text x="6.4701%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="6.2201%" y="565" width="0.4785%" height="15" fill="rgb(221,155,16)" fg:x="13" fg:w="1"/><text x="6.4701%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.48%)</title><rect x="7.1770%" y="485" width="0.4785%" height="15" fill="rgb(215,215,53)" fg:x="15" fg:w="1"/><text x="7.4270%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.48%)</title><rect x="7.1770%" y="469" width="0.4785%" height="15" fill="rgb(223,4,10)" fg:x="15" fg:w="1"/><text x="7.4270%" y="479.50"></text></g><g><title>core::ptr::write (1 samples, 0.48%)</title><rect x="7.1770%" y="453" width="0.4785%" height="15" fill="rgb(234,103,6)" fg:x="15" fg:w="1"/><text x="7.4270%" y="463.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (2 samples, 0.96%)</title><rect x="7.1770%" y="549" width="0.9569%" height="15" fill="rgb(227,97,0)" fg:x="15" fg:w="2"/><text x="7.4270%" y="559.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (2 samples, 0.96%)</title><rect x="7.1770%" y="533" width="0.9569%" height="15" fill="rgb(234,150,53)" fg:x="15" fg:w="2"/><text x="7.4270%" y="543.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.96%)</title><rect x="7.1770%" y="517" width="0.9569%" height="15" fill="rgb(228,201,54)" fg:x="15" fg:w="2"/><text x="7.4270%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (2 samples, 0.96%)</title><rect x="7.1770%" y="501" width="0.9569%" height="15" fill="rgb(222,22,37)" fg:x="15" fg:w="2"/><text x="7.4270%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.48%)</title><rect x="7.6555%" y="485" width="0.4785%" height="15" fill="rgb(237,53,32)" fg:x="16" fg:w="1"/><text x="7.9055%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.48%)</title><rect x="7.6555%" y="469" width="0.4785%" height="15" fill="rgb(233,25,53)" fg:x="16" fg:w="1"/><text x="7.9055%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.48%)</title><rect x="7.6555%" y="453" width="0.4785%" height="15" fill="rgb(210,40,34)" fg:x="16" fg:w="1"/><text x="7.9055%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.48%)</title><rect x="8.6124%" y="421" width="0.4785%" height="15" fill="rgb(241,220,44)" fg:x="18" fg:w="1"/><text x="8.8624%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.48%)</title><rect x="8.6124%" y="405" width="0.4785%" height="15" fill="rgb(235,28,35)" fg:x="18" fg:w="1"/><text x="8.8624%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.48%)</title><rect x="8.6124%" y="389" width="0.4785%" height="15" fill="rgb(210,56,17)" fg:x="18" fg:w="1"/><text x="8.8624%" y="399.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (4 samples, 1.91%)</title><rect x="8.6124%" y="453" width="1.9139%" height="15" fill="rgb(224,130,29)" fg:x="18" fg:w="4"/><text x="8.8624%" y="463.50">h..</text></g><g><title>hashbrown::map::make_hash (4 samples, 1.91%)</title><rect x="8.6124%" y="437" width="1.9139%" height="15" fill="rgb(235,212,8)" fg:x="18" fg:w="4"/><text x="8.8624%" y="447.50">h..</text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (3 samples, 1.44%)</title><rect x="9.0909%" y="421" width="1.4354%" height="15" fill="rgb(223,33,50)" fg:x="19" fg:w="3"/><text x="9.3409%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 1.44%)</title><rect x="9.0909%" y="405" width="1.4354%" height="15" fill="rgb(219,149,13)" fg:x="19" fg:w="3"/><text x="9.3409%" y="415.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 1.44%)</title><rect x="9.0909%" y="389" width="1.4354%" height="15" fill="rgb(250,156,29)" fg:x="19" fg:w="3"/><text x="9.3409%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 1.44%)</title><rect x="9.0909%" y="373" width="1.4354%" height="15" fill="rgb(216,193,19)" fg:x="19" fg:w="3"/><text x="9.3409%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 1.44%)</title><rect x="9.0909%" y="357" width="1.4354%" height="15" fill="rgb(216,135,14)" fg:x="19" fg:w="3"/><text x="9.3409%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 1.44%)</title><rect x="9.0909%" y="341" width="1.4354%" height="15" fill="rgb(241,47,5)" fg:x="19" fg:w="3"/><text x="9.3409%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.48%)</title><rect x="10.0478%" y="325" width="0.4785%" height="15" fill="rgb(233,42,35)" fg:x="21" fg:w="1"/><text x="10.2978%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (1 samples, 0.48%)</title><rect x="10.5263%" y="453" width="0.4785%" height="15" fill="rgb(231,13,6)" fg:x="22" fg:w="1"/><text x="10.7763%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1 samples, 0.48%)</title><rect x="10.5263%" y="437" width="0.4785%" height="15" fill="rgb(207,181,40)" fg:x="22" fg:w="1"/><text x="10.7763%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.48%)</title><rect x="10.5263%" y="421" width="0.4785%" height="15" fill="rgb(254,173,49)" fg:x="22" fg:w="1"/><text x="10.7763%" y="431.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.48%)</title><rect x="10.5263%" y="405" width="0.4785%" height="15" fill="rgb(221,1,38)" fg:x="22" fg:w="1"/><text x="10.7763%" y="415.50"></text></g><g><title>exc_page_fault (1 samples, 0.48%)</title><rect x="10.5263%" y="389" width="0.4785%" height="15" fill="rgb(206,124,46)" fg:x="22" fg:w="1"/><text x="10.7763%" y="399.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.48%)</title><rect x="10.5263%" y="373" width="0.4785%" height="15" fill="rgb(249,21,11)" fg:x="22" fg:w="1"/><text x="10.7763%" y="383.50"></text></g><g><title>handle_mm_fault (1 samples, 0.48%)</title><rect x="10.5263%" y="357" width="0.4785%" height="15" fill="rgb(222,201,40)" fg:x="22" fg:w="1"/><text x="10.7763%" y="367.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.48%)</title><rect x="10.5263%" y="341" width="0.4785%" height="15" fill="rgb(235,61,29)" fg:x="22" fg:w="1"/><text x="10.7763%" y="351.50"></text></g><g><title>do_anonymous_page (1 samples, 0.48%)</title><rect x="10.5263%" y="325" width="0.4785%" height="15" fill="rgb(219,207,3)" fg:x="22" fg:w="1"/><text x="10.7763%" y="335.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.48%)</title><rect x="10.5263%" y="309" width="0.4785%" height="15" fill="rgb(222,56,46)" fg:x="22" fg:w="1"/><text x="10.7763%" y="319.50"></text></g><g><title>lru_cache_add (1 samples, 0.48%)</title><rect x="10.5263%" y="293" width="0.4785%" height="15" fill="rgb(239,76,54)" fg:x="22" fg:w="1"/><text x="10.7763%" y="303.50"></text></g><g><title>__pagevec_lru_add (1 samples, 0.48%)</title><rect x="10.5263%" y="277" width="0.4785%" height="15" fill="rgb(231,124,27)" fg:x="22" fg:w="1"/><text x="10.7763%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (8 samples, 3.83%)</title><rect x="8.6124%" y="517" width="3.8278%" height="15" fill="rgb(249,195,6)" fg:x="18" fg:w="8"/><text x="8.8624%" y="527.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (8 samples, 3.83%)</title><rect x="8.6124%" y="501" width="3.8278%" height="15" fill="rgb(237,174,47)" fg:x="18" fg:w="8"/><text x="8.8624%" y="511.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 3.83%)</title><rect x="8.6124%" y="485" width="3.8278%" height="15" fill="rgb(206,201,31)" fg:x="18" fg:w="8"/><text x="8.8624%" y="495.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (8 samples, 3.83%)</title><rect x="8.6124%" y="469" width="3.8278%" height="15" fill="rgb(231,57,52)" fg:x="18" fg:w="8"/><text x="8.8624%" y="479.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (3 samples, 1.44%)</title><rect x="11.0048%" y="453" width="1.4354%" height="15" fill="rgb(248,177,22)" fg:x="23" fg:w="3"/><text x="11.2548%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (3 samples, 1.44%)</title><rect x="11.0048%" y="437" width="1.4354%" height="15" fill="rgb(215,211,37)" fg:x="23" fg:w="3"/><text x="11.2548%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.48%)</title><rect x="11.9617%" y="421" width="0.4785%" height="15" fill="rgb(241,128,51)" fg:x="25" fg:w="1"/><text x="12.2117%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.48%)</title><rect x="11.9617%" y="405" width="0.4785%" height="15" fill="rgb(227,165,31)" fg:x="25" fg:w="1"/><text x="12.2117%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.48%)</title><rect x="12.4402%" y="405" width="0.4785%" height="15" fill="rgb(228,167,24)" fg:x="26" fg:w="1"/><text x="12.6902%" y="415.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.96%)</title><rect x="12.4402%" y="517" width="0.9569%" height="15" fill="rgb(228,143,12)" fg:x="26" fg:w="2"/><text x="12.6902%" y="527.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (2 samples, 0.96%)</title><rect x="12.4402%" y="501" width="0.9569%" height="15" fill="rgb(249,149,8)" fg:x="26" fg:w="2"/><text x="12.6902%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.96%)</title><rect x="12.4402%" y="485" width="0.9569%" height="15" fill="rgb(243,35,44)" fg:x="26" fg:w="2"/><text x="12.6902%" y="495.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.96%)</title><rect x="12.4402%" y="469" width="0.9569%" height="15" fill="rgb(246,89,9)" fg:x="26" fg:w="2"/><text x="12.6902%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.96%)</title><rect x="12.4402%" y="453" width="0.9569%" height="15" fill="rgb(233,213,13)" fg:x="26" fg:w="2"/><text x="12.6902%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.96%)</title><rect x="12.4402%" y="437" width="0.9569%" height="15" fill="rgb(233,141,41)" fg:x="26" fg:w="2"/><text x="12.6902%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.96%)</title><rect x="12.4402%" y="421" width="0.9569%" height="15" fill="rgb(239,167,4)" fg:x="26" fg:w="2"/><text x="12.6902%" y="431.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.48%)</title><rect x="12.9187%" y="405" width="0.4785%" height="15" fill="rgb(209,217,16)" fg:x="27" fg:w="1"/><text x="13.1687%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="13.3971%" y="501" width="0.4785%" height="15" fill="rgb(219,88,35)" fg:x="28" fg:w="1"/><text x="13.6471%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="13.3971%" y="485" width="0.4785%" height="15" fill="rgb(220,193,23)" fg:x="28" fg:w="1"/><text x="13.6471%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (16 samples, 7.66%)</title><rect x="6.6986%" y="613" width="7.6555%" height="15" fill="rgb(230,90,52)" fg:x="14" fg:w="16"/><text x="6.9486%" y="623.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 7.66%)</title><rect x="6.6986%" y="597" width="7.6555%" height="15" fill="rgb(252,106,19)" fg:x="14" fg:w="16"/><text x="6.9486%" y="607.50">core::iter..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (16 samples, 7.66%)</title><rect x="6.6986%" y="581" width="7.6555%" height="15" fill="rgb(206,74,20)" fg:x="14" fg:w="16"/><text x="6.9486%" y="591.50">core::ops:..</text></g><g><title>y2021::d05::main::p02::{{closure}} (16 samples, 7.66%)</title><rect x="6.6986%" y="565" width="7.6555%" height="15" fill="rgb(230,138,44)" fg:x="14" fg:w="16"/><text x="6.9486%" y="575.50">y2021::d05..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (13 samples, 6.22%)</title><rect x="8.1340%" y="549" width="6.2201%" height="15" fill="rgb(235,182,43)" fg:x="17" fg:w="13"/><text x="8.3840%" y="559.50">std::col..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (13 samples, 6.22%)</title><rect x="8.1340%" y="533" width="6.2201%" height="15" fill="rgb(242,16,51)" fg:x="17" fg:w="13"/><text x="8.3840%" y="543.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.96%)</title><rect x="13.3971%" y="517" width="0.9569%" height="15" fill="rgb(248,9,4)" fg:x="28" fg:w="2"/><text x="13.6471%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.48%)</title><rect x="13.8756%" y="501" width="0.4785%" height="15" fill="rgb(210,31,22)" fg:x="29" fg:w="1"/><text x="14.1256%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.48%)</title><rect x="13.8756%" y="485" width="0.4785%" height="15" fill="rgb(239,54,39)" fg:x="29" fg:w="1"/><text x="14.1256%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.48%)</title><rect x="13.8756%" y="469" width="0.4785%" height="15" fill="rgb(230,99,41)" fg:x="29" fg:w="1"/><text x="14.1256%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.48%)</title><rect x="13.8756%" y="453" width="0.4785%" height="15" fill="rgb(253,106,12)" fg:x="29" fg:w="1"/><text x="14.1256%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.48%)</title><rect x="13.8756%" y="437" width="0.4785%" height="15" fill="rgb(213,46,41)" fg:x="29" fg:w="1"/><text x="14.1256%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.48%)</title><rect x="13.8756%" y="421" width="0.4785%" height="15" fill="rgb(215,133,35)" fg:x="29" fg:w="1"/><text x="14.1256%" y="431.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.48%)</title><rect x="13.8756%" y="405" width="0.4785%" height="15" fill="rgb(213,28,5)" fg:x="29" fg:w="1"/><text x="14.1256%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 8.13%)</title><rect x="6.6986%" y="773" width="8.1340%" height="15" fill="rgb(215,77,49)" fg:x="14" fg:w="17"/><text x="6.9486%" y="783.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 8.13%)</title><rect x="6.6986%" y="757" width="8.1340%" height="15" fill="rgb(248,100,22)" fg:x="14" fg:w="17"/><text x="6.9486%" y="767.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 8.13%)</title><rect x="6.6986%" y="741" width="8.1340%" height="15" fill="rgb(208,67,9)" fg:x="14" fg:w="17"/><text x="6.9486%" y="751.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 8.13%)</title><rect x="6.6986%" y="725" width="8.1340%" height="15" fill="rgb(219,133,21)" fg:x="14" fg:w="17"/><text x="6.9486%" y="735.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 8.13%)</title><rect x="6.6986%" y="709" width="8.1340%" height="15" fill="rgb(246,46,29)" fg:x="14" fg:w="17"/><text x="6.9486%" y="719.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 8.13%)</title><rect x="6.6986%" y="693" width="8.1340%" height="15" fill="rgb(246,185,52)" fg:x="14" fg:w="17"/><text x="6.9486%" y="703.50">&lt;core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (17 samples, 8.13%)</title><rect x="6.6986%" y="677" width="8.1340%" height="15" fill="rgb(252,136,11)" fg:x="14" fg:w="17"/><text x="6.9486%" y="687.50">core::iter:..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (17 samples, 8.13%)</title><rect x="6.6986%" y="661" width="8.1340%" height="15" fill="rgb(219,138,53)" fg:x="14" fg:w="17"/><text x="6.9486%" y="671.50">core::iter:..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (17 samples, 8.13%)</title><rect x="6.6986%" y="645" width="8.1340%" height="15" fill="rgb(211,51,23)" fg:x="14" fg:w="17"/><text x="6.9486%" y="655.50">core::iter:..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (17 samples, 8.13%)</title><rect x="6.6986%" y="629" width="8.1340%" height="15" fill="rgb(247,221,28)" fg:x="14" fg:w="17"/><text x="6.9486%" y="639.50">core::iter:..</text></g><g><title>y2021::d05::main::p02::{{closure}} (1 samples, 0.48%)</title><rect x="14.3541%" y="613" width="0.4785%" height="15" fill="rgb(251,222,45)" fg:x="30" fg:w="1"/><text x="14.6041%" y="623.50"></text></g><g><title>y2021::types::line::Line::points (1 samples, 0.48%)</title><rect x="14.3541%" y="597" width="0.4785%" height="15" fill="rgb(217,162,53)" fg:x="30" fg:w="1"/><text x="14.6041%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.48%)</title><rect x="14.3541%" y="581" width="0.4785%" height="15" fill="rgb(229,93,14)" fg:x="30" fg:w="1"/><text x="14.6041%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="14.3541%" y="565" width="0.4785%" height="15" fill="rgb(209,67,49)" fg:x="30" fg:w="1"/><text x="14.6041%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="14.3541%" y="549" width="0.4785%" height="15" fill="rgb(213,87,29)" fg:x="30" fg:w="1"/><text x="14.6041%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="14.3541%" y="533" width="0.4785%" height="15" fill="rgb(205,151,52)" fg:x="30" fg:w="1"/><text x="14.6041%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.48%)</title><rect x="14.3541%" y="517" width="0.4785%" height="15" fill="rgb(253,215,39)" fg:x="30" fg:w="1"/><text x="14.6041%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.48%)</title><rect x="14.3541%" y="501" width="0.4785%" height="15" fill="rgb(221,220,41)" fg:x="30" fg:w="1"/><text x="14.6041%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.48%)</title><rect x="14.3541%" y="485" width="0.4785%" height="15" fill="rgb(218,133,21)" fg:x="30" fg:w="1"/><text x="14.6041%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (1 samples, 0.48%)</title><rect x="14.3541%" y="469" width="0.4785%" height="15" fill="rgb(221,193,43)" fg:x="30" fg:w="1"/><text x="14.6041%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (1 samples, 0.48%)</title><rect x="14.3541%" y="453" width="0.4785%" height="15" fill="rgb(240,128,52)" fg:x="30" fg:w="1"/><text x="14.6041%" y="463.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (1 samples, 0.48%)</title><rect x="14.3541%" y="437" width="0.4785%" height="15" fill="rgb(253,114,12)" fg:x="30" fg:w="1"/><text x="14.6041%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (1 samples, 0.48%)</title><rect x="14.3541%" y="421" width="0.4785%" height="15" fill="rgb(215,223,47)" fg:x="30" fg:w="1"/><text x="14.6041%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.48%)</title><rect x="14.3541%" y="405" width="0.4785%" height="15" fill="rgb(248,225,23)" fg:x="30" fg:w="1"/><text x="14.6041%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.48%)</title><rect x="14.3541%" y="389" width="0.4785%" height="15" fill="rgb(250,108,0)" fg:x="30" fg:w="1"/><text x="14.6041%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.48%)</title><rect x="14.3541%" y="373" width="0.4785%" height="15" fill="rgb(228,208,7)" fg:x="30" fg:w="1"/><text x="14.6041%" y="383.50"></text></g><g><title>core::ptr::write (1 samples, 0.48%)</title><rect x="14.3541%" y="357" width="0.4785%" height="15" fill="rgb(244,45,10)" fg:x="30" fg:w="1"/><text x="14.6041%" y="367.50"></text></g><g><title>y2021::d05::main::run (24 samples, 11.48%)</title><rect x="3.8278%" y="805" width="11.4833%" height="15" fill="rgb(207,125,25)" fg:x="8" fg:w="24"/><text x="4.0778%" y="815.50">y2021::d05::main:..</text></g><g><title>y2021::d05::main::p02 (18 samples, 8.61%)</title><rect x="6.6986%" y="789" width="8.6124%" height="15" fill="rgb(210,195,18)" fg:x="14" fg:w="18"/><text x="6.9486%" y="799.50">y2021::d05::..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.48%)</title><rect x="14.8325%" y="773" width="0.4785%" height="15" fill="rgb(249,80,12)" fg:x="31" fg:w="1"/><text x="15.0825%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="14.8325%" y="757" width="0.4785%" height="15" fill="rgb(221,65,9)" fg:x="31" fg:w="1"/><text x="15.0825%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="14.8325%" y="741" width="0.4785%" height="15" fill="rgb(235,49,36)" fg:x="31" fg:w="1"/><text x="15.0825%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="14.8325%" y="725" width="0.4785%" height="15" fill="rgb(225,32,20)" fg:x="31" fg:w="1"/><text x="15.0825%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.48%)</title><rect x="14.8325%" y="709" width="0.4785%" height="15" fill="rgb(215,141,46)" fg:x="31" fg:w="1"/><text x="15.0825%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.48%)</title><rect x="14.8325%" y="693" width="0.4785%" height="15" fill="rgb(250,160,47)" fg:x="31" fg:w="1"/><text x="15.0825%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="14.8325%" y="677" width="0.4785%" height="15" fill="rgb(216,222,40)" fg:x="31" fg:w="1"/><text x="15.0825%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.48%)</title><rect x="14.8325%" y="661" width="0.4785%" height="15" fill="rgb(234,217,39)" fg:x="31" fg:w="1"/><text x="15.0825%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.48%)</title><rect x="14.8325%" y="645" width="0.4785%" height="15" fill="rgb(207,178,40)" fg:x="31" fg:w="1"/><text x="15.0825%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="14.8325%" y="629" width="0.4785%" height="15" fill="rgb(221,136,13)" fg:x="31" fg:w="1"/><text x="15.0825%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="14.8325%" y="613" width="0.4785%" height="15" fill="rgb(249,199,10)" fg:x="31" fg:w="1"/><text x="15.0825%" y="623.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="14.8325%" y="597" width="0.4785%" height="15" fill="rgb(249,222,13)" fg:x="31" fg:w="1"/><text x="15.0825%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="14.8325%" y="581" width="0.4785%" height="15" fill="rgb(244,185,38)" fg:x="31" fg:w="1"/><text x="15.0825%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="14.8325%" y="565" width="0.4785%" height="15" fill="rgb(236,202,9)" fg:x="31" fg:w="1"/><text x="15.0825%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.48%)</title><rect x="14.8325%" y="549" width="0.4785%" height="15" fill="rgb(250,229,37)" fg:x="31" fg:w="1"/><text x="15.0825%" y="559.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.48%)</title><rect x="14.8325%" y="533" width="0.4785%" height="15" fill="rgb(206,174,23)" fg:x="31" fg:w="1"/><text x="15.0825%" y="543.50"></text></g><g><title>y2021::d06::main::run (1 samples, 0.48%)</title><rect x="15.3110%" y="805" width="0.4785%" height="15" fill="rgb(211,33,43)" fg:x="32" fg:w="1"/><text x="15.5610%" y="815.50"></text></g><g><title>y2021::d06::main::p02 (1 samples, 0.48%)</title><rect x="15.3110%" y="789" width="0.4785%" height="15" fill="rgb(245,58,50)" fg:x="32" fg:w="1"/><text x="15.5610%" y="799.50"></text></g><g><title>y2021::utils::file::csv_to_vec (1 samples, 0.48%)</title><rect x="15.3110%" y="773" width="0.4785%" height="15" fill="rgb(244,68,36)" fg:x="32" fg:w="1"/><text x="15.5610%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.48%)</title><rect x="15.3110%" y="757" width="0.4785%" height="15" fill="rgb(232,229,15)" fg:x="32" fg:w="1"/><text x="15.5610%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="15.3110%" y="741" width="0.4785%" height="15" fill="rgb(254,30,23)" fg:x="32" fg:w="1"/><text x="15.5610%" y="751.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.48%)</title><rect x="15.3110%" y="725" width="0.4785%" height="15" fill="rgb(235,160,14)" fg:x="32" fg:w="1"/><text x="15.5610%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.48%)</title><rect x="15.3110%" y="709" width="0.4785%" height="15" fill="rgb(212,155,44)" fg:x="32" fg:w="1"/><text x="15.5610%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.48%)</title><rect x="15.3110%" y="693" width="0.4785%" height="15" fill="rgb(226,2,50)" fg:x="32" fg:w="1"/><text x="15.5610%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="15.3110%" y="677" width="0.4785%" height="15" fill="rgb(234,177,6)" fg:x="32" fg:w="1"/><text x="15.5610%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="15.3110%" y="661" width="0.4785%" height="15" fill="rgb(217,24,9)" fg:x="32" fg:w="1"/><text x="15.5610%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="15.3110%" y="645" width="0.4785%" height="15" fill="rgb(220,13,46)" fg:x="32" fg:w="1"/><text x="15.5610%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.48%)</title><rect x="15.3110%" y="629" width="0.4785%" height="15" fill="rgb(239,221,27)" fg:x="32" fg:w="1"/><text x="15.5610%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.48%)</title><rect x="15.3110%" y="613" width="0.4785%" height="15" fill="rgb(222,198,25)" fg:x="32" fg:w="1"/><text x="15.5610%" y="623.50"></text></g><g><title>y2021::d07::main::p01 (1 samples, 0.48%)</title><rect x="15.7895%" y="789" width="0.4785%" height="15" fill="rgb(211,99,13)" fg:x="33" fg:w="1"/><text x="16.0395%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.48%)</title><rect x="15.7895%" y="773" width="0.4785%" height="15" fill="rgb(232,111,31)" fg:x="33" fg:w="1"/><text x="16.0395%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="15.7895%" y="757" width="0.4785%" height="15" fill="rgb(245,82,37)" fg:x="33" fg:w="1"/><text x="16.0395%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="15.7895%" y="741" width="0.4785%" height="15" fill="rgb(227,149,46)" fg:x="33" fg:w="1"/><text x="16.0395%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="15.7895%" y="725" width="0.4785%" height="15" fill="rgb(218,36,50)" fg:x="33" fg:w="1"/><text x="16.0395%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.48%)</title><rect x="15.7895%" y="709" width="0.4785%" height="15" fill="rgb(226,80,48)" fg:x="33" fg:w="1"/><text x="16.0395%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.48%)</title><rect x="15.7895%" y="693" width="0.4785%" height="15" fill="rgb(238,224,15)" fg:x="33" fg:w="1"/><text x="16.0395%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.48%)</title><rect x="15.7895%" y="677" width="0.4785%" height="15" fill="rgb(241,136,10)" fg:x="33" fg:w="1"/><text x="16.0395%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (1 samples, 0.48%)</title><rect x="15.7895%" y="661" width="0.4785%" height="15" fill="rgb(208,32,45)" fg:x="33" fg:w="1"/><text x="16.0395%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (1 samples, 0.48%)</title><rect x="15.7895%" y="645" width="0.4785%" height="15" fill="rgb(207,135,9)" fg:x="33" fg:w="1"/><text x="16.0395%" y="655.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (1 samples, 0.48%)</title><rect x="15.7895%" y="629" width="0.4785%" height="15" fill="rgb(206,86,44)" fg:x="33" fg:w="1"/><text x="16.0395%" y="639.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (1 samples, 0.48%)</title><rect x="15.7895%" y="613" width="0.4785%" height="15" fill="rgb(245,177,15)" fg:x="33" fg:w="1"/><text x="16.0395%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.48%)</title><rect x="15.7895%" y="597" width="0.4785%" height="15" fill="rgb(206,64,50)" fg:x="33" fg:w="1"/><text x="16.0395%" y="607.50"></text></g><g><title>y2021::d07::main::p01::{{closure}} (1 samples, 0.48%)</title><rect x="15.7895%" y="581" width="0.4785%" height="15" fill="rgb(234,36,40)" fg:x="33" fg:w="1"/><text x="16.0395%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.48%)</title><rect x="15.7895%" y="565" width="0.4785%" height="15" fill="rgb(213,64,8)" fg:x="33" fg:w="1"/><text x="16.0395%" y="575.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.48%)</title><rect x="15.7895%" y="549" width="0.4785%" height="15" fill="rgb(210,75,36)" fg:x="33" fg:w="1"/><text x="16.0395%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.48%)</title><rect x="15.7895%" y="533" width="0.4785%" height="15" fill="rgb(229,88,21)" fg:x="33" fg:w="1"/><text x="16.0395%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.48%)</title><rect x="15.7895%" y="517" width="0.4785%" height="15" fill="rgb(252,204,47)" fg:x="33" fg:w="1"/><text x="16.0395%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.48%)</title><rect x="15.7895%" y="501" width="0.4785%" height="15" fill="rgb(208,77,27)" fg:x="33" fg:w="1"/><text x="16.0395%" y="511.50"></text></g><g><title>y2021::d07::main::p01::{{closure}}::{{closure}} (1 samples, 0.48%)</title><rect x="15.7895%" y="485" width="0.4785%" height="15" fill="rgb(221,76,26)" fg:x="33" fg:w="1"/><text x="16.0395%" y="495.50"></text></g><g><title>y2021::utils::math::abs_diff (1 samples, 0.48%)</title><rect x="15.7895%" y="469" width="0.4785%" height="15" fill="rgb(225,139,18)" fg:x="33" fg:w="1"/><text x="16.0395%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (1 samples, 0.48%)</title><rect x="15.7895%" y="453" width="0.4785%" height="15" fill="rgb(230,137,11)" fg:x="33" fg:w="1"/><text x="16.0395%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::gt (1 samples, 0.48%)</title><rect x="15.7895%" y="437" width="0.4785%" height="15" fill="rgb(212,28,1)" fg:x="33" fg:w="1"/><text x="16.0395%" y="447.50"></text></g><g><title>y2021::d07::main::run (2 samples, 0.96%)</title><rect x="15.7895%" y="805" width="0.9569%" height="15" fill="rgb(248,164,17)" fg:x="33" fg:w="2"/><text x="16.0395%" y="815.50"></text></g><g><title>y2021::d07::main::p02 (1 samples, 0.48%)</title><rect x="16.2679%" y="789" width="0.4785%" height="15" fill="rgb(222,171,42)" fg:x="34" fg:w="1"/><text x="16.5179%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.48%)</title><rect x="16.2679%" y="773" width="0.4785%" height="15" fill="rgb(243,84,45)" fg:x="34" fg:w="1"/><text x="16.5179%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="16.2679%" y="757" width="0.4785%" height="15" fill="rgb(252,49,23)" fg:x="34" fg:w="1"/><text x="16.5179%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="16.2679%" y="741" width="0.4785%" height="15" fill="rgb(215,19,7)" fg:x="34" fg:w="1"/><text x="16.5179%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="16.2679%" y="725" width="0.4785%" height="15" fill="rgb(238,81,41)" fg:x="34" fg:w="1"/><text x="16.5179%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.48%)</title><rect x="16.2679%" y="709" width="0.4785%" height="15" fill="rgb(210,199,37)" fg:x="34" fg:w="1"/><text x="16.5179%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.48%)</title><rect x="16.2679%" y="693" width="0.4785%" height="15" fill="rgb(244,192,49)" fg:x="34" fg:w="1"/><text x="16.5179%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.48%)</title><rect x="16.2679%" y="677" width="0.4785%" height="15" fill="rgb(226,211,11)" fg:x="34" fg:w="1"/><text x="16.5179%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (1 samples, 0.48%)</title><rect x="16.2679%" y="661" width="0.4785%" height="15" fill="rgb(236,162,54)" fg:x="34" fg:w="1"/><text x="16.5179%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (1 samples, 0.48%)</title><rect x="16.2679%" y="645" width="0.4785%" height="15" fill="rgb(220,229,9)" fg:x="34" fg:w="1"/><text x="16.5179%" y="655.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (1 samples, 0.48%)</title><rect x="16.2679%" y="629" width="0.4785%" height="15" fill="rgb(250,87,22)" fg:x="34" fg:w="1"/><text x="16.5179%" y="639.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (1 samples, 0.48%)</title><rect x="16.2679%" y="613" width="0.4785%" height="15" fill="rgb(239,43,17)" fg:x="34" fg:w="1"/><text x="16.5179%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.48%)</title><rect x="16.2679%" y="597" width="0.4785%" height="15" fill="rgb(231,177,25)" fg:x="34" fg:w="1"/><text x="16.5179%" y="607.50"></text></g><g><title>y2021::d07::main::p02::{{closure}} (1 samples, 0.48%)</title><rect x="16.2679%" y="581" width="0.4785%" height="15" fill="rgb(219,179,1)" fg:x="34" fg:w="1"/><text x="16.5179%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.48%)</title><rect x="16.2679%" y="565" width="0.4785%" height="15" fill="rgb(238,219,53)" fg:x="34" fg:w="1"/><text x="16.5179%" y="575.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.48%)</title><rect x="16.2679%" y="549" width="0.4785%" height="15" fill="rgb(232,167,36)" fg:x="34" fg:w="1"/><text x="16.5179%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.48%)</title><rect x="16.2679%" y="533" width="0.4785%" height="15" fill="rgb(244,19,51)" fg:x="34" fg:w="1"/><text x="16.5179%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.48%)</title><rect x="16.2679%" y="517" width="0.4785%" height="15" fill="rgb(224,6,22)" fg:x="34" fg:w="1"/><text x="16.5179%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.48%)</title><rect x="16.2679%" y="501" width="0.4785%" height="15" fill="rgb(224,145,5)" fg:x="34" fg:w="1"/><text x="16.5179%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.48%)</title><rect x="16.2679%" y="485" width="0.4785%" height="15" fill="rgb(234,130,49)" fg:x="34" fg:w="1"/><text x="16.5179%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.48%)</title><rect x="16.2679%" y="469" width="0.4785%" height="15" fill="rgb(254,6,2)" fg:x="34" fg:w="1"/><text x="16.5179%" y="479.50"></text></g><g><title>y2021::d07::main::p02::{{closure}}::{{closure}} (1 samples, 0.48%)</title><rect x="16.2679%" y="453" width="0.4785%" height="15" fill="rgb(208,96,46)" fg:x="34" fg:w="1"/><text x="16.5179%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.48%)</title><rect x="19.1388%" y="421" width="0.4785%" height="15" fill="rgb(239,3,39)" fg:x="40" fg:w="1"/><text x="19.3888%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.48%)</title><rect x="19.1388%" y="405" width="0.4785%" height="15" fill="rgb(233,210,1)" fg:x="40" fg:w="1"/><text x="19.3888%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.48%)</title><rect x="19.1388%" y="389" width="0.4785%" height="15" fill="rgb(244,137,37)" fg:x="40" fg:w="1"/><text x="19.3888%" y="399.50"></text></g><g><title>core::cmp::PartialEq::ne (1 samples, 0.48%)</title><rect x="19.1388%" y="373" width="0.4785%" height="15" fill="rgb(240,136,2)" fg:x="40" fg:w="1"/><text x="19.3888%" y="383.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.48%)</title><rect x="19.1388%" y="357" width="0.4785%" height="15" fill="rgb(239,18,37)" fg:x="40" fg:w="1"/><text x="19.3888%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.48%)</title><rect x="19.1388%" y="341" width="0.4785%" height="15" fill="rgb(218,185,22)" fg:x="40" fg:w="1"/><text x="19.3888%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.48%)</title><rect x="19.1388%" y="325" width="0.4785%" height="15" fill="rgb(225,218,4)" fg:x="40" fg:w="1"/><text x="19.3888%" y="335.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="19.1388%" y="309" width="0.4785%" height="15" fill="rgb(230,182,32)" fg:x="40" fg:w="1"/><text x="19.3888%" y="319.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="19.1388%" y="293" width="0.4785%" height="15" fill="rgb(242,56,43)" fg:x="40" fg:w="1"/><text x="19.3888%" y="303.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="19.1388%" y="277" width="0.4785%" height="15" fill="rgb(233,99,24)" fg:x="40" fg:w="1"/><text x="19.3888%" y="287.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="19.1388%" y="261" width="0.4785%" height="15" fill="rgb(234,209,42)" fg:x="40" fg:w="1"/><text x="19.3888%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="19.1388%" y="245" width="0.4785%" height="15" fill="rgb(227,7,12)" fg:x="40" fg:w="1"/><text x="19.3888%" y="255.50"></text></g><g><title>y2021::d08::main::run (8 samples, 3.83%)</title><rect x="16.7464%" y="805" width="3.8278%" height="15" fill="rgb(245,203,43)" fg:x="35" fg:w="8"/><text x="16.9964%" y="815.50">y202..</text></g><g><title>y2021::d08::main::p02 (8 samples, 3.83%)</title><rect x="16.7464%" y="789" width="3.8278%" height="15" fill="rgb(238,205,33)" fg:x="35" fg:w="8"/><text x="16.9964%" y="799.50">y202..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (8 samples, 3.83%)</title><rect x="16.7464%" y="773" width="3.8278%" height="15" fill="rgb(231,56,7)" fg:x="35" fg:w="8"/><text x="16.9964%" y="783.50">core..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::iter::traits::accum::Sum&lt;core::option::Option&lt;U&gt;&gt;&gt;::sum (8 samples, 3.83%)</title><rect x="16.7464%" y="757" width="3.8278%" height="15" fill="rgb(244,186,29)" fg:x="35" fg:w="8"/><text x="16.9964%" y="767.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (8 samples, 3.83%)</title><rect x="16.7464%" y="741" width="3.8278%" height="15" fill="rgb(234,111,31)" fg:x="35" fg:w="8"/><text x="16.9964%" y="751.50">core..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::accum::Sum&lt;core::result::Result&lt;U,E&gt;&gt;&gt;::sum (8 samples, 3.83%)</title><rect x="16.7464%" y="725" width="3.8278%" height="15" fill="rgb(241,149,10)" fg:x="35" fg:w="8"/><text x="16.9964%" y="735.50">&lt;cor..</text></g><g><title>core::iter::adapters::process_results (8 samples, 3.83%)</title><rect x="16.7464%" y="709" width="3.8278%" height="15" fill="rgb(249,206,44)" fg:x="35" fg:w="8"/><text x="16.9964%" y="719.50">core..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::accum::Sum&lt;core::result::Result&lt;U,E&gt;&gt;&gt;::sum::{{closure}} (8 samples, 3.83%)</title><rect x="16.7464%" y="693" width="3.8278%" height="15" fill="rgb(251,153,30)" fg:x="35" fg:w="8"/><text x="16.9964%" y="703.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (8 samples, 3.83%)</title><rect x="16.7464%" y="677" width="3.8278%" height="15" fill="rgb(239,152,38)" fg:x="35" fg:w="8"/><text x="16.9964%" y="687.50">core..</text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (8 samples, 3.83%)</title><rect x="16.7464%" y="661" width="3.8278%" height="15" fill="rgb(249,139,47)" fg:x="35" fg:w="8"/><text x="16.9964%" y="671.50">&lt;usi..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 3.83%)</title><rect x="16.7464%" y="645" width="3.8278%" height="15" fill="rgb(244,64,35)" fg:x="35" fg:w="8"/><text x="16.9964%" y="655.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 3.83%)</title><rect x="16.7464%" y="629" width="3.8278%" height="15" fill="rgb(216,46,15)" fg:x="35" fg:w="8"/><text x="16.9964%" y="639.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 3.83%)</title><rect x="16.7464%" y="613" width="3.8278%" height="15" fill="rgb(250,74,19)" fg:x="35" fg:w="8"/><text x="16.9964%" y="623.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 3.83%)</title><rect x="16.7464%" y="597" width="3.8278%" height="15" fill="rgb(249,42,33)" fg:x="35" fg:w="8"/><text x="16.9964%" y="607.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 3.83%)</title><rect x="16.7464%" y="581" width="3.8278%" height="15" fill="rgb(242,149,17)" fg:x="35" fg:w="8"/><text x="16.9964%" y="591.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 3.83%)</title><rect x="16.7464%" y="565" width="3.8278%" height="15" fill="rgb(244,29,21)" fg:x="35" fg:w="8"/><text x="16.9964%" y="575.50">core..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (8 samples, 3.83%)</title><rect x="16.7464%" y="549" width="3.8278%" height="15" fill="rgb(220,130,37)" fg:x="35" fg:w="8"/><text x="16.9964%" y="559.50">core..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (8 samples, 3.83%)</title><rect x="16.7464%" y="533" width="3.8278%" height="15" fill="rgb(211,67,2)" fg:x="35" fg:w="8"/><text x="16.9964%" y="543.50">core..</text></g><g><title>y2021::d08::main::p02::{{closure}} (8 samples, 3.83%)</title><rect x="16.7464%" y="517" width="3.8278%" height="15" fill="rgb(235,68,52)" fg:x="35" fg:w="8"/><text x="16.9964%" y="527.50">y202..</text></g><g><title>y2021::d08::main::signal_value (8 samples, 3.83%)</title><rect x="16.7464%" y="501" width="3.8278%" height="15" fill="rgb(246,142,3)" fg:x="35" fg:w="8"/><text x="16.9964%" y="511.50">y202..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.44%)</title><rect x="19.1388%" y="485" width="1.4354%" height="15" fill="rgb(241,25,7)" fg:x="40" fg:w="3"/><text x="19.3888%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (3 samples, 1.44%)</title><rect x="19.1388%" y="469" width="1.4354%" height="15" fill="rgb(242,119,39)" fg:x="40" fg:w="3"/><text x="19.3888%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 1.44%)</title><rect x="19.1388%" y="453" width="1.4354%" height="15" fill="rgb(241,98,45)" fg:x="40" fg:w="3"/><text x="19.3888%" y="463.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (3 samples, 1.44%)</title><rect x="19.1388%" y="437" width="1.4354%" height="15" fill="rgb(254,28,30)" fg:x="40" fg:w="3"/><text x="19.3888%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.96%)</title><rect x="19.6172%" y="421" width="0.9569%" height="15" fill="rgb(241,142,54)" fg:x="41" fg:w="2"/><text x="19.8672%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.96%)</title><rect x="19.6172%" y="405" width="0.9569%" height="15" fill="rgb(222,85,15)" fg:x="41" fg:w="2"/><text x="19.8672%" y="415.50"></text></g><g><title>&lt;std::collections::hash::set::Difference&lt;T,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.96%)</title><rect x="19.6172%" y="389" width="0.9569%" height="15" fill="rgb(210,85,47)" fg:x="41" fg:w="2"/><text x="19.8672%" y="399.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.96%)</title><rect x="19.6172%" y="373" width="0.9569%" height="15" fill="rgb(224,206,25)" fg:x="41" fg:w="2"/><text x="19.8672%" y="383.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.96%)</title><rect x="19.6172%" y="357" width="0.9569%" height="15" fill="rgb(243,201,19)" fg:x="41" fg:w="2"/><text x="19.8672%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.96%)</title><rect x="19.6172%" y="341" width="0.9569%" height="15" fill="rgb(236,59,4)" fg:x="41" fg:w="2"/><text x="19.8672%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.96%)</title><rect x="19.6172%" y="325" width="0.9569%" height="15" fill="rgb(254,179,45)" fg:x="41" fg:w="2"/><text x="19.8672%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.96%)</title><rect x="19.6172%" y="309" width="0.9569%" height="15" fill="rgb(226,14,10)" fg:x="41" fg:w="2"/><text x="19.8672%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.96%)</title><rect x="19.6172%" y="293" width="0.9569%" height="15" fill="rgb(244,27,41)" fg:x="41" fg:w="2"/><text x="19.8672%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.48%)</title><rect x="20.0957%" y="277" width="0.4785%" height="15" fill="rgb(235,35,32)" fg:x="42" fg:w="1"/><text x="20.3457%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.48%)</title><rect x="20.0957%" y="261" width="0.4785%" height="15" fill="rgb(218,68,31)" fg:x="42" fg:w="1"/><text x="20.3457%" y="271.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.48%)</title><rect x="20.0957%" y="245" width="0.4785%" height="15" fill="rgb(207,120,37)" fg:x="42" fg:w="1"/><text x="20.3457%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.48%)</title><rect x="20.0957%" y="229" width="0.4785%" height="15" fill="rgb(227,98,0)" fg:x="42" fg:w="1"/><text x="20.3457%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.48%)</title><rect x="20.0957%" y="213" width="0.4785%" height="15" fill="rgb(207,7,3)" fg:x="42" fg:w="1"/><text x="20.3457%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.48%)</title><rect x="20.0957%" y="197" width="0.4785%" height="15" fill="rgb(206,98,19)" fg:x="42" fg:w="1"/><text x="20.3457%" y="207.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.48%)</title><rect x="20.0957%" y="181" width="0.4785%" height="15" fill="rgb(217,5,26)" fg:x="42" fg:w="1"/><text x="20.3457%" y="191.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.48%)</title><rect x="20.0957%" y="165" width="0.4785%" height="15" fill="rgb(235,190,38)" fg:x="42" fg:w="1"/><text x="20.3457%" y="175.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.48%)</title><rect x="20.0957%" y="149" width="0.4785%" height="15" fill="rgb(247,86,24)" fg:x="42" fg:w="1"/><text x="20.3457%" y="159.50"></text></g><g><title>irqentry_exit (1 samples, 0.48%)</title><rect x="20.0957%" y="133" width="0.4785%" height="15" fill="rgb(205,101,16)" fg:x="42" fg:w="1"/><text x="20.3457%" y="143.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.48%)</title><rect x="20.0957%" y="117" width="0.4785%" height="15" fill="rgb(246,168,33)" fg:x="42" fg:w="1"/><text x="20.3457%" y="127.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.48%)</title><rect x="20.0957%" y="101" width="0.4785%" height="15" fill="rgb(231,114,1)" fg:x="42" fg:w="1"/><text x="20.3457%" y="111.50"></text></g><g><title>schedule (1 samples, 0.48%)</title><rect x="20.0957%" y="85" width="0.4785%" height="15" fill="rgb(207,184,53)" fg:x="42" fg:w="1"/><text x="20.3457%" y="95.50"></text></g><g><title>__schedule (1 samples, 0.48%)</title><rect x="20.0957%" y="69" width="0.4785%" height="15" fill="rgb(224,95,51)" fg:x="42" fg:w="1"/><text x="20.3457%" y="79.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.48%)</title><rect x="20.0957%" y="53" width="0.4785%" height="15" fill="rgb(212,188,45)" fg:x="42" fg:w="1"/><text x="20.3457%" y="63.50"></text></g><g><title>pick_next_entity (1 samples, 0.48%)</title><rect x="20.0957%" y="37" width="0.4785%" height="15" fill="rgb(223,154,38)" fg:x="42" fg:w="1"/><text x="20.3457%" y="47.50"></text></g><g><title>y2021::d09::main::run (1 samples, 0.48%)</title><rect x="20.5742%" y="805" width="0.4785%" height="15" fill="rgb(251,22,52)" fg:x="43" fg:w="1"/><text x="20.8242%" y="815.50"></text></g><g><title>y2021::d09::main::p02 (1 samples, 0.48%)</title><rect x="20.5742%" y="789" width="0.4785%" height="15" fill="rgb(229,209,22)" fg:x="43" fg:w="1"/><text x="20.8242%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.48%)</title><rect x="20.5742%" y="773" width="0.4785%" height="15" fill="rgb(234,138,34)" fg:x="43" fg:w="1"/><text x="20.8242%" y="783.50"></text></g><g><title>y2021::d12::main2::p01 (1 samples, 0.48%)</title><rect x="21.0526%" y="789" width="0.4785%" height="15" fill="rgb(212,95,11)" fg:x="44" fg:w="1"/><text x="21.3026%" y="799.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="21.0526%" y="773" width="0.4785%" height="15" fill="rgb(240,179,47)" fg:x="44" fg:w="1"/><text x="21.3026%" y="783.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="21.0526%" y="757" width="0.4785%" height="15" fill="rgb(240,163,11)" fg:x="44" fg:w="1"/><text x="21.3026%" y="767.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="21.0526%" y="741" width="0.4785%" height="15" fill="rgb(236,37,12)" fg:x="44" fg:w="1"/><text x="21.3026%" y="751.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="21.0526%" y="725" width="0.4785%" height="15" fill="rgb(232,164,16)" fg:x="44" fg:w="1"/><text x="21.3026%" y="735.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="21.0526%" y="709" width="0.4785%" height="15" fill="rgb(244,205,15)" fg:x="44" fg:w="1"/><text x="21.3026%" y="719.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="21.0526%" y="693" width="0.4785%" height="15" fill="rgb(223,117,47)" fg:x="44" fg:w="1"/><text x="21.3026%" y="703.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="21.0526%" y="677" width="0.4785%" height="15" fill="rgb(244,107,35)" fg:x="44" fg:w="1"/><text x="21.3026%" y="687.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="21.0526%" y="661" width="0.4785%" height="15" fill="rgb(205,140,8)" fg:x="44" fg:w="1"/><text x="21.3026%" y="671.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="21.0526%" y="645" width="0.4785%" height="15" fill="rgb(228,84,46)" fg:x="44" fg:w="1"/><text x="21.3026%" y="655.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="21.0526%" y="629" width="0.4785%" height="15" fill="rgb(254,188,9)" fg:x="44" fg:w="1"/><text x="21.3026%" y="639.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.48%)</title><rect x="21.0526%" y="613" width="0.4785%" height="15" fill="rgb(206,112,54)" fg:x="44" fg:w="1"/><text x="21.3026%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="21.0526%" y="597" width="0.4785%" height="15" fill="rgb(216,84,49)" fg:x="44" fg:w="1"/><text x="21.3026%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.48%)</title><rect x="21.0526%" y="581" width="0.4785%" height="15" fill="rgb(214,194,35)" fg:x="44" fg:w="1"/><text x="21.3026%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.48%)</title><rect x="21.0526%" y="565" width="0.4785%" height="15" fill="rgb(249,28,3)" fg:x="44" fg:w="1"/><text x="21.3026%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.48%)</title><rect x="21.0526%" y="549" width="0.4785%" height="15" fill="rgb(222,56,52)" fg:x="44" fg:w="1"/><text x="21.3026%" y="559.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.48%)</title><rect x="21.0526%" y="533" width="0.4785%" height="15" fill="rgb(245,217,50)" fg:x="44" fg:w="1"/><text x="21.3026%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.48%)</title><rect x="21.0526%" y="517" width="0.4785%" height="15" fill="rgb(213,201,24)" fg:x="44" fg:w="1"/><text x="21.3026%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.48%)</title><rect x="21.0526%" y="501" width="0.4785%" height="15" fill="rgb(248,116,28)" fg:x="44" fg:w="1"/><text x="21.3026%" y="511.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.48%)</title><rect x="21.0526%" y="485" width="0.4785%" height="15" fill="rgb(219,72,43)" fg:x="44" fg:w="1"/><text x="21.3026%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.48%)</title><rect x="21.0526%" y="469" width="0.4785%" height="15" fill="rgb(209,138,14)" fg:x="44" fg:w="1"/><text x="21.3026%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.48%)</title><rect x="21.0526%" y="453" width="0.4785%" height="15" fill="rgb(222,18,33)" fg:x="44" fg:w="1"/><text x="21.3026%" y="463.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="21.0526%" y="437" width="0.4785%" height="15" fill="rgb(213,199,7)" fg:x="44" fg:w="1"/><text x="21.3026%" y="447.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.48%)</title><rect x="21.0526%" y="421" width="0.4785%" height="15" fill="rgb(250,110,10)" fg:x="44" fg:w="1"/><text x="21.3026%" y="431.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.48%)</title><rect x="21.0526%" y="405" width="0.4785%" height="15" fill="rgb(248,123,6)" fg:x="44" fg:w="1"/><text x="21.3026%" y="415.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.48%)</title><rect x="21.0526%" y="389" width="0.4785%" height="15" fill="rgb(206,91,31)" fg:x="44" fg:w="1"/><text x="21.3026%" y="399.50"></text></g><g><title>__GI___libc_free (2 samples, 0.96%)</title><rect x="21.5311%" y="533" width="0.9569%" height="15" fill="rgb(211,154,13)" fg:x="45" fg:w="2"/><text x="21.7811%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (5 samples, 2.39%)</title><rect x="21.5311%" y="693" width="2.3923%" height="15" fill="rgb(225,148,7)" fg:x="45" fg:w="5"/><text x="21.7811%" y="703.50">ha..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5 samples, 2.39%)</title><rect x="21.5311%" y="677" width="2.3923%" height="15" fill="rgb(220,160,43)" fg:x="45" fg:w="5"/><text x="21.7811%" y="687.50">ha..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (5 samples, 2.39%)</title><rect x="21.5311%" y="661" width="2.3923%" height="15" fill="rgb(213,52,39)" fg:x="45" fg:w="5"/><text x="21.7811%" y="671.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (5 samples, 2.39%)</title><rect x="21.5311%" y="645" width="2.3923%" height="15" fill="rgb(243,137,7)" fg:x="45" fg:w="5"/><text x="21.7811%" y="655.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 2.39%)</title><rect x="21.5311%" y="629" width="2.3923%" height="15" fill="rgb(230,79,13)" fg:x="45" fg:w="5"/><text x="21.7811%" y="639.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 2.39%)</title><rect x="21.5311%" y="613" width="2.3923%" height="15" fill="rgb(247,105,23)" fg:x="45" fg:w="5"/><text x="21.7811%" y="623.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 2.39%)</title><rect x="21.5311%" y="597" width="2.3923%" height="15" fill="rgb(223,179,41)" fg:x="45" fg:w="5"/><text x="21.7811%" y="607.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 2.39%)</title><rect x="21.5311%" y="581" width="2.3923%" height="15" fill="rgb(218,9,34)" fg:x="45" fg:w="5"/><text x="21.7811%" y="591.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 2.39%)</title><rect x="21.5311%" y="565" width="2.3923%" height="15" fill="rgb(222,106,8)" fg:x="45" fg:w="5"/><text x="21.7811%" y="575.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (5 samples, 2.39%)</title><rect x="21.5311%" y="549" width="2.3923%" height="15" fill="rgb(211,220,0)" fg:x="45" fg:w="5"/><text x="21.7811%" y="559.50">al..</text></g><g><title>_int_free (3 samples, 1.44%)</title><rect x="22.4880%" y="533" width="1.4354%" height="15" fill="rgb(229,52,16)" fg:x="47" fg:w="3"/><text x="22.7380%" y="543.50"></text></g><g><title>malloc_consolidate (3 samples, 1.44%)</title><rect x="23.9234%" y="613" width="1.4354%" height="15" fill="rgb(212,155,18)" fg:x="50" fg:w="3"/><text x="24.1734%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (9 samples, 4.31%)</title><rect x="21.5311%" y="773" width="4.3062%" height="15" fill="rgb(242,21,14)" fg:x="45" fg:w="9"/><text x="21.7811%" y="783.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (9 samples, 4.31%)</title><rect x="21.5311%" y="757" width="4.3062%" height="15" fill="rgb(222,19,48)" fg:x="45" fg:w="9"/><text x="21.7811%" y="767.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (9 samples, 4.31%)</title><rect x="21.5311%" y="741" width="4.3062%" height="15" fill="rgb(232,45,27)" fg:x="45" fg:w="9"/><text x="21.7811%" y="751.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (9 samples, 4.31%)</title><rect x="21.5311%" y="725" width="4.3062%" height="15" fill="rgb(249,103,42)" fg:x="45" fg:w="9"/><text x="21.7811%" y="735.50">core:..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 4.31%)</title><rect x="21.5311%" y="709" width="4.3062%" height="15" fill="rgb(246,81,33)" fg:x="45" fg:w="9"/><text x="21.7811%" y="719.50">&lt;hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (4 samples, 1.91%)</title><rect x="23.9234%" y="693" width="1.9139%" height="15" fill="rgb(252,33,42)" fg:x="50" fg:w="4"/><text x="24.1734%" y="703.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (4 samples, 1.91%)</title><rect x="23.9234%" y="677" width="1.9139%" height="15" fill="rgb(209,212,41)" fg:x="50" fg:w="4"/><text x="24.1734%" y="687.50">h..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 1.91%)</title><rect x="23.9234%" y="661" width="1.9139%" height="15" fill="rgb(207,154,6)" fg:x="50" fg:w="4"/><text x="24.1734%" y="671.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (4 samples, 1.91%)</title><rect x="23.9234%" y="645" width="1.9139%" height="15" fill="rgb(223,64,47)" fg:x="50" fg:w="4"/><text x="24.1734%" y="655.50">a..</text></g><g><title>_int_free (4 samples, 1.91%)</title><rect x="23.9234%" y="629" width="1.9139%" height="15" fill="rgb(211,161,38)" fg:x="50" fg:w="4"/><text x="24.1734%" y="639.50">_..</text></g><g><title>systrim (1 samples, 0.48%)</title><rect x="25.3589%" y="613" width="0.4785%" height="15" fill="rgb(219,138,40)" fg:x="53" fg:w="1"/><text x="25.6089%" y="623.50"></text></g><g><title>__GI___default_morecore (1 samples, 0.48%)</title><rect x="25.3589%" y="597" width="0.4785%" height="15" fill="rgb(241,228,46)" fg:x="53" fg:w="1"/><text x="25.6089%" y="607.50"></text></g><g><title>__GI___sbrk (1 samples, 0.48%)</title><rect x="25.3589%" y="581" width="0.4785%" height="15" fill="rgb(223,209,38)" fg:x="53" fg:w="1"/><text x="25.6089%" y="591.50"></text></g><g><title>__GI___sbrk (1 samples, 0.48%)</title><rect x="25.3589%" y="565" width="0.4785%" height="15" fill="rgb(236,164,45)" fg:x="53" fg:w="1"/><text x="25.6089%" y="575.50"></text></g><g><title>__brk (1 samples, 0.48%)</title><rect x="25.3589%" y="549" width="0.4785%" height="15" fill="rgb(231,15,5)" fg:x="53" fg:w="1"/><text x="25.6089%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.48%)</title><rect x="25.3589%" y="533" width="0.4785%" height="15" fill="rgb(252,35,15)" fg:x="53" fg:w="1"/><text x="25.6089%" y="543.50"></text></g><g><title>do_syscall_64 (1 samples, 0.48%)</title><rect x="25.3589%" y="517" width="0.4785%" height="15" fill="rgb(248,181,18)" fg:x="53" fg:w="1"/><text x="25.6089%" y="527.50"></text></g><g><title>__x64_sys_brk (1 samples, 0.48%)</title><rect x="25.3589%" y="501" width="0.4785%" height="15" fill="rgb(233,39,42)" fg:x="53" fg:w="1"/><text x="25.6089%" y="511.50"></text></g><g><title>__do_munmap (1 samples, 0.48%)</title><rect x="25.3589%" y="485" width="0.4785%" height="15" fill="rgb(238,110,33)" fg:x="53" fg:w="1"/><text x="25.6089%" y="495.50"></text></g><g><title>unmap_region (1 samples, 0.48%)</title><rect x="25.3589%" y="469" width="0.4785%" height="15" fill="rgb(233,195,10)" fg:x="53" fg:w="1"/><text x="25.6089%" y="479.50"></text></g><g><title>unmap_vmas (1 samples, 0.48%)</title><rect x="25.3589%" y="453" width="0.4785%" height="15" fill="rgb(254,105,3)" fg:x="53" fg:w="1"/><text x="25.6089%" y="463.50"></text></g><g><title>unmap_single_vma (1 samples, 0.48%)</title><rect x="25.3589%" y="437" width="0.4785%" height="15" fill="rgb(221,225,9)" fg:x="53" fg:w="1"/><text x="25.6089%" y="447.50"></text></g><g><title>unmap_page_range (1 samples, 0.48%)</title><rect x="25.3589%" y="421" width="0.4785%" height="15" fill="rgb(224,227,45)" fg:x="53" fg:w="1"/><text x="25.6089%" y="431.50"></text></g><g><title>zap_pte_range.isra.0 (1 samples, 0.48%)</title><rect x="25.3589%" y="405" width="0.4785%" height="15" fill="rgb(229,198,43)" fg:x="53" fg:w="1"/><text x="25.6089%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="26.3158%" y="677" width="0.4785%" height="15" fill="rgb(206,209,35)" fg:x="55" fg:w="1"/><text x="26.5658%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.48%)</title><rect x="26.3158%" y="661" width="0.4785%" height="15" fill="rgb(245,195,53)" fg:x="55" fg:w="1"/><text x="26.5658%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.48%)</title><rect x="26.3158%" y="645" width="0.4785%" height="15" fill="rgb(240,92,26)" fg:x="55" fg:w="1"/><text x="26.5658%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.48%)</title><rect x="26.3158%" y="629" width="0.4785%" height="15" fill="rgb(207,40,23)" fg:x="55" fg:w="1"/><text x="26.5658%" y="639.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.48%)</title><rect x="26.3158%" y="613" width="0.4785%" height="15" fill="rgb(223,111,35)" fg:x="55" fg:w="1"/><text x="26.5658%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.48%)</title><rect x="26.3158%" y="597" width="0.4785%" height="15" fill="rgb(229,147,28)" fg:x="55" fg:w="1"/><text x="26.5658%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.48%)</title><rect x="26.3158%" y="581" width="0.4785%" height="15" fill="rgb(211,29,28)" fg:x="55" fg:w="1"/><text x="26.5658%" y="591.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.48%)</title><rect x="26.3158%" y="565" width="0.4785%" height="15" fill="rgb(228,72,33)" fg:x="55" fg:w="1"/><text x="26.5658%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.48%)</title><rect x="26.3158%" y="549" width="0.4785%" height="15" fill="rgb(205,214,31)" fg:x="55" fg:w="1"/><text x="26.5658%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.48%)</title><rect x="26.3158%" y="533" width="0.4785%" height="15" fill="rgb(224,111,15)" fg:x="55" fg:w="1"/><text x="26.5658%" y="543.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="26.3158%" y="517" width="0.4785%" height="15" fill="rgb(253,21,26)" fg:x="55" fg:w="1"/><text x="26.5658%" y="527.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.48%)</title><rect x="26.3158%" y="501" width="0.4785%" height="15" fill="rgb(245,139,43)" fg:x="55" fg:w="1"/><text x="26.5658%" y="511.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.48%)</title><rect x="26.3158%" y="485" width="0.4785%" height="15" fill="rgb(252,170,7)" fg:x="55" fg:w="1"/><text x="26.5658%" y="495.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.48%)</title><rect x="26.3158%" y="469" width="0.4785%" height="15" fill="rgb(231,118,14)" fg:x="55" fg:w="1"/><text x="26.5658%" y="479.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.48%)</title><rect x="26.3158%" y="453" width="0.4785%" height="15" fill="rgb(238,83,0)" fg:x="55" fg:w="1"/><text x="26.5658%" y="463.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.48%)</title><rect x="26.7943%" y="677" width="0.4785%" height="15" fill="rgb(221,39,39)" fg:x="56" fg:w="1"/><text x="27.0443%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.48%)</title><rect x="26.7943%" y="661" width="0.4785%" height="15" fill="rgb(222,119,46)" fg:x="56" fg:w="1"/><text x="27.0443%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.48%)</title><rect x="26.7943%" y="645" width="0.4785%" height="15" fill="rgb(222,165,49)" fg:x="56" fg:w="1"/><text x="27.0443%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.48%)</title><rect x="26.7943%" y="629" width="0.4785%" height="15" fill="rgb(219,113,52)" fg:x="56" fg:w="1"/><text x="27.0443%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.48%)</title><rect x="26.7943%" y="613" width="0.4785%" height="15" fill="rgb(214,7,15)" fg:x="56" fg:w="1"/><text x="27.0443%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.48%)</title><rect x="26.7943%" y="597" width="0.4785%" height="15" fill="rgb(235,32,4)" fg:x="56" fg:w="1"/><text x="27.0443%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.48%)</title><rect x="26.7943%" y="581" width="0.4785%" height="15" fill="rgb(238,90,54)" fg:x="56" fg:w="1"/><text x="27.0443%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.48%)</title><rect x="26.7943%" y="565" width="0.4785%" height="15" fill="rgb(213,208,19)" fg:x="56" fg:w="1"/><text x="27.0443%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.48%)</title><rect x="26.7943%" y="549" width="0.4785%" height="15" fill="rgb(233,156,4)" fg:x="56" fg:w="1"/><text x="27.0443%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.48%)</title><rect x="26.7943%" y="533" width="0.4785%" height="15" fill="rgb(207,194,5)" fg:x="56" fg:w="1"/><text x="27.0443%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.48%)</title><rect x="26.7943%" y="517" width="0.4785%" height="15" fill="rgb(206,111,30)" fg:x="56" fg:w="1"/><text x="27.0443%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="27.2727%" y="661" width="0.4785%" height="15" fill="rgb(243,70,54)" fg:x="57" fg:w="1"/><text x="27.5227%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.48%)</title><rect x="27.2727%" y="645" width="0.4785%" height="15" fill="rgb(242,28,8)" fg:x="57" fg:w="1"/><text x="27.5227%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.48%)</title><rect x="27.2727%" y="629" width="0.4785%" height="15" fill="rgb(219,106,18)" fg:x="57" fg:w="1"/><text x="27.5227%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.48%)</title><rect x="27.2727%" y="613" width="0.4785%" height="15" fill="rgb(244,222,10)" fg:x="57" fg:w="1"/><text x="27.5227%" y="623.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.48%)</title><rect x="27.2727%" y="597" width="0.4785%" height="15" fill="rgb(236,179,52)" fg:x="57" fg:w="1"/><text x="27.5227%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.48%)</title><rect x="27.2727%" y="581" width="0.4785%" height="15" fill="rgb(213,23,39)" fg:x="57" fg:w="1"/><text x="27.5227%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.48%)</title><rect x="27.2727%" y="565" width="0.4785%" height="15" fill="rgb(238,48,10)" fg:x="57" fg:w="1"/><text x="27.5227%" y="575.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.48%)</title><rect x="27.2727%" y="549" width="0.4785%" height="15" fill="rgb(251,196,23)" fg:x="57" fg:w="1"/><text x="27.5227%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.48%)</title><rect x="27.2727%" y="533" width="0.4785%" height="15" fill="rgb(250,152,24)" fg:x="57" fg:w="1"/><text x="27.5227%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.48%)</title><rect x="27.2727%" y="517" width="0.4785%" height="15" fill="rgb(209,150,17)" fg:x="57" fg:w="1"/><text x="27.5227%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.48%)</title><rect x="27.2727%" y="501" width="0.4785%" height="15" fill="rgb(234,202,34)" fg:x="57" fg:w="1"/><text x="27.5227%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.48%)</title><rect x="27.2727%" y="485" width="0.4785%" height="15" fill="rgb(253,148,53)" fg:x="57" fg:w="1"/><text x="27.5227%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.48%)</title><rect x="27.2727%" y="469" width="0.4785%" height="15" fill="rgb(218,129,16)" fg:x="57" fg:w="1"/><text x="27.5227%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.48%)</title><rect x="27.2727%" y="453" width="0.4785%" height="15" fill="rgb(216,85,19)" fg:x="57" fg:w="1"/><text x="27.5227%" y="463.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.48%)</title><rect x="27.7512%" y="661" width="0.4785%" height="15" fill="rgb(235,228,7)" fg:x="58" fg:w="1"/><text x="28.0012%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.48%)</title><rect x="27.7512%" y="645" width="0.4785%" height="15" fill="rgb(245,175,0)" fg:x="58" fg:w="1"/><text x="28.0012%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.48%)</title><rect x="27.7512%" y="629" width="0.4785%" height="15" fill="rgb(208,168,36)" fg:x="58" fg:w="1"/><text x="28.0012%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.48%)</title><rect x="27.7512%" y="613" width="0.4785%" height="15" fill="rgb(246,171,24)" fg:x="58" fg:w="1"/><text x="28.0012%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.48%)</title><rect x="27.7512%" y="597" width="0.4785%" height="15" fill="rgb(215,142,24)" fg:x="58" fg:w="1"/><text x="28.0012%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.48%)</title><rect x="27.7512%" y="581" width="0.4785%" height="15" fill="rgb(250,187,7)" fg:x="58" fg:w="1"/><text x="28.0012%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="27.7512%" y="565" width="0.4785%" height="15" fill="rgb(228,66,33)" fg:x="58" fg:w="1"/><text x="28.0012%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="27.7512%" y="549" width="0.4785%" height="15" fill="rgb(234,215,21)" fg:x="58" fg:w="1"/><text x="28.0012%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (4 samples, 1.91%)</title><rect x="29.1866%" y="517" width="1.9139%" height="15" fill="rgb(222,191,20)" fg:x="61" fg:w="4"/><text x="29.4366%" y="527.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 1.44%)</title><rect x="29.6651%" y="501" width="1.4354%" height="15" fill="rgb(245,79,54)" fg:x="62" fg:w="3"/><text x="29.9151%" y="511.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.44%)</title><rect x="29.6651%" y="485" width="1.4354%" height="15" fill="rgb(240,10,37)" fg:x="62" fg:w="3"/><text x="29.9151%" y="495.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (3 samples, 1.44%)</title><rect x="29.6651%" y="469" width="1.4354%" height="15" fill="rgb(214,192,32)" fg:x="62" fg:w="3"/><text x="29.9151%" y="479.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (3 samples, 1.44%)</title><rect x="29.6651%" y="453" width="1.4354%" height="15" fill="rgb(209,36,54)" fg:x="62" fg:w="3"/><text x="29.9151%" y="463.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (3 samples, 1.44%)</title><rect x="29.6651%" y="437" width="1.4354%" height="15" fill="rgb(220,10,11)" fg:x="62" fg:w="3"/><text x="29.9151%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 2.39%)</title><rect x="29.1866%" y="645" width="2.3923%" height="15" fill="rgb(221,106,17)" fg:x="61" fg:w="5"/><text x="29.4366%" y="655.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find (5 samples, 2.39%)</title><rect x="29.1866%" y="629" width="2.3923%" height="15" fill="rgb(251,142,44)" fg:x="61" fg:w="5"/><text x="29.4366%" y="639.50">co..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 2.39%)</title><rect x="29.1866%" y="613" width="2.3923%" height="15" fill="rgb(238,13,15)" fg:x="61" fg:w="5"/><text x="29.4366%" y="623.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 2.39%)</title><rect x="29.1866%" y="597" width="2.3923%" height="15" fill="rgb(208,107,27)" fg:x="61" fg:w="5"/><text x="29.4366%" y="607.50">co..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (5 samples, 2.39%)</title><rect x="29.1866%" y="581" width="2.3923%" height="15" fill="rgb(205,136,37)" fg:x="61" fg:w="5"/><text x="29.4366%" y="591.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (5 samples, 2.39%)</title><rect x="29.1866%" y="565" width="2.3923%" height="15" fill="rgb(250,205,27)" fg:x="61" fg:w="5"/><text x="29.4366%" y="575.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 2.39%)</title><rect x="29.1866%" y="549" width="2.3923%" height="15" fill="rgb(210,80,43)" fg:x="61" fg:w="5"/><text x="29.4366%" y="559.50">co..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (5 samples, 2.39%)</title><rect x="29.1866%" y="533" width="2.3923%" height="15" fill="rgb(247,160,36)" fg:x="61" fg:w="5"/><text x="29.4366%" y="543.50">y2..</text></g><g><title>core::str::&lt;impl str&gt;::matches (1 samples, 0.48%)</title><rect x="31.1005%" y="517" width="0.4785%" height="15" fill="rgb(234,13,49)" fg:x="65" fg:w="1"/><text x="31.3505%" y="527.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.48%)</title><rect x="31.1005%" y="501" width="0.4785%" height="15" fill="rgb(234,122,0)" fg:x="65" fg:w="1"/><text x="31.3505%" y="511.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.48%)</title><rect x="31.1005%" y="485" width="0.4785%" height="15" fill="rgb(207,146,38)" fg:x="65" fg:w="1"/><text x="31.3505%" y="495.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.48%)</title><rect x="31.1005%" y="469" width="0.4785%" height="15" fill="rgb(207,177,25)" fg:x="65" fg:w="1"/><text x="31.3505%" y="479.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.48%)</title><rect x="31.1005%" y="453" width="0.4785%" height="15" fill="rgb(211,178,42)" fg:x="65" fg:w="1"/><text x="31.3505%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.48%)</title><rect x="31.1005%" y="437" width="0.4785%" height="15" fill="rgb(230,69,54)" fg:x="65" fg:w="1"/><text x="31.3505%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.48%)</title><rect x="31.1005%" y="421" width="0.4785%" height="15" fill="rgb(214,135,41)" fg:x="65" fg:w="1"/><text x="31.3505%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.48%)</title><rect x="31.5789%" y="421" width="0.4785%" height="15" fill="rgb(237,67,25)" fg:x="66" fg:w="1"/><text x="31.8289%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.48%)</title><rect x="31.5789%" y="405" width="0.4785%" height="15" fill="rgb(222,189,50)" fg:x="66" fg:w="1"/><text x="31.8289%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.48%)</title><rect x="31.5789%" y="389" width="0.4785%" height="15" fill="rgb(245,148,34)" fg:x="66" fg:w="1"/><text x="31.8289%" y="399.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.48%)</title><rect x="31.5789%" y="373" width="0.4785%" height="15" fill="rgb(222,29,6)" fg:x="66" fg:w="1"/><text x="31.8289%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.96%)</title><rect x="31.5789%" y="501" width="0.9569%" height="15" fill="rgb(221,189,43)" fg:x="66" fg:w="2"/><text x="31.8289%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.96%)</title><rect x="31.5789%" y="485" width="0.9569%" height="15" fill="rgb(207,36,27)" fg:x="66" fg:w="2"/><text x="31.8289%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.96%)</title><rect x="31.5789%" y="469" width="0.9569%" height="15" fill="rgb(217,90,24)" fg:x="66" fg:w="2"/><text x="31.8289%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.96%)</title><rect x="31.5789%" y="453" width="0.9569%" height="15" fill="rgb(224,66,35)" fg:x="66" fg:w="2"/><text x="31.8289%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.96%)</title><rect x="31.5789%" y="437" width="0.9569%" height="15" fill="rgb(221,13,50)" fg:x="66" fg:w="2"/><text x="31.8289%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.48%)</title><rect x="32.0574%" y="421" width="0.4785%" height="15" fill="rgb(236,68,49)" fg:x="67" fg:w="1"/><text x="32.3074%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 1.44%)</title><rect x="31.5789%" y="597" width="1.4354%" height="15" fill="rgb(229,146,28)" fg:x="66" fg:w="3"/><text x="31.8289%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 1.44%)</title><rect x="31.5789%" y="581" width="1.4354%" height="15" fill="rgb(225,31,38)" fg:x="66" fg:w="3"/><text x="31.8289%" y="591.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 1.44%)</title><rect x="31.5789%" y="565" width="1.4354%" height="15" fill="rgb(250,208,3)" fg:x="66" fg:w="3"/><text x="31.8289%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 1.44%)</title><rect x="31.5789%" y="549" width="1.4354%" height="15" fill="rgb(246,54,23)" fg:x="66" fg:w="3"/><text x="31.8289%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 1.44%)</title><rect x="31.5789%" y="533" width="1.4354%" height="15" fill="rgb(243,76,11)" fg:x="66" fg:w="3"/><text x="31.8289%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 1.44%)</title><rect x="31.5789%" y="517" width="1.4354%" height="15" fill="rgb(245,21,50)" fg:x="66" fg:w="3"/><text x="31.8289%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.48%)</title><rect x="32.5359%" y="501" width="0.4785%" height="15" fill="rgb(228,9,43)" fg:x="68" fg:w="1"/><text x="32.7859%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.48%)</title><rect x="32.5359%" y="485" width="0.4785%" height="15" fill="rgb(208,100,47)" fg:x="68" fg:w="1"/><text x="32.7859%" y="495.50"></text></g><g><title>alloc::fmt::format (4 samples, 1.91%)</title><rect x="31.5789%" y="645" width="1.9139%" height="15" fill="rgb(232,26,8)" fg:x="66" fg:w="4"/><text x="31.8289%" y="655.50">a..</text></g><g><title>core::fmt::Write::write_fmt (4 samples, 1.91%)</title><rect x="31.5789%" y="629" width="1.9139%" height="15" fill="rgb(216,166,38)" fg:x="66" fg:w="4"/><text x="31.8289%" y="639.50">c..</text></g><g><title>core::fmt::write (4 samples, 1.91%)</title><rect x="31.5789%" y="613" width="1.9139%" height="15" fill="rgb(251,202,51)" fg:x="66" fg:w="4"/><text x="31.8289%" y="623.50">c..</text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.48%)</title><rect x="33.0144%" y="597" width="0.4785%" height="15" fill="rgb(254,216,34)" fg:x="69" fg:w="1"/><text x="33.2644%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.48%)</title><rect x="33.4928%" y="565" width="0.4785%" height="15" fill="rgb(251,32,27)" fg:x="70" fg:w="1"/><text x="33.7428%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.48%)</title><rect x="33.4928%" y="549" width="0.4785%" height="15" fill="rgb(208,127,28)" fg:x="70" fg:w="1"/><text x="33.7428%" y="559.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.48%)</title><rect x="33.4928%" y="533" width="0.4785%" height="15" fill="rgb(224,137,22)" fg:x="70" fg:w="1"/><text x="33.7428%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="33.4928%" y="517" width="0.4785%" height="15" fill="rgb(254,70,32)" fg:x="70" fg:w="1"/><text x="33.7428%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="33.4928%" y="501" width="0.4785%" height="15" fill="rgb(229,75,37)" fg:x="70" fg:w="1"/><text x="33.7428%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="33.4928%" y="485" width="0.4785%" height="15" fill="rgb(252,64,23)" fg:x="70" fg:w="1"/><text x="33.7428%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.96%)</title><rect x="33.4928%" y="581" width="0.9569%" height="15" fill="rgb(232,162,48)" fg:x="70" fg:w="2"/><text x="33.7428%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.48%)</title><rect x="33.9713%" y="565" width="0.4785%" height="15" fill="rgb(246,160,12)" fg:x="71" fg:w="1"/><text x="34.2213%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.48%)</title><rect x="33.9713%" y="549" width="0.4785%" height="15" fill="rgb(247,166,0)" fg:x="71" fg:w="1"/><text x="34.2213%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.48%)</title><rect x="33.9713%" y="533" width="0.4785%" height="15" fill="rgb(249,219,21)" fg:x="71" fg:w="1"/><text x="34.2213%" y="543.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (3 samples, 1.44%)</title><rect x="33.4928%" y="645" width="1.4354%" height="15" fill="rgb(205,209,3)" fg:x="70" fg:w="3"/><text x="33.7428%" y="655.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (3 samples, 1.44%)</title><rect x="33.4928%" y="629" width="1.4354%" height="15" fill="rgb(243,44,1)" fg:x="70" fg:w="3"/><text x="33.7428%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 1.44%)</title><rect x="33.4928%" y="613" width="1.4354%" height="15" fill="rgb(206,159,16)" fg:x="70" fg:w="3"/><text x="33.7428%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 1.44%)</title><rect x="33.4928%" y="597" width="1.4354%" height="15" fill="rgb(244,77,30)" fg:x="70" fg:w="3"/><text x="33.7428%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.48%)</title><rect x="34.4498%" y="581" width="0.4785%" height="15" fill="rgb(218,69,12)" fg:x="72" fg:w="1"/><text x="34.6998%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.48%)</title><rect x="34.4498%" y="565" width="0.4785%" height="15" fill="rgb(212,87,7)" fg:x="72" fg:w="1"/><text x="34.6998%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.48%)</title><rect x="34.4498%" y="549" width="0.4785%" height="15" fill="rgb(245,114,25)" fg:x="72" fg:w="1"/><text x="34.6998%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.48%)</title><rect x="34.4498%" y="533" width="0.4785%" height="15" fill="rgb(210,61,42)" fg:x="72" fg:w="1"/><text x="34.6998%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.48%)</title><rect x="34.4498%" y="517" width="0.4785%" height="15" fill="rgb(211,52,33)" fg:x="72" fg:w="1"/><text x="34.6998%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.48%)</title><rect x="34.4498%" y="501" width="0.4785%" height="15" fill="rgb(234,58,33)" fg:x="72" fg:w="1"/><text x="34.6998%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.48%)</title><rect x="34.4498%" y="485" width="0.4785%" height="15" fill="rgb(220,115,36)" fg:x="72" fg:w="1"/><text x="34.6998%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.48%)</title><rect x="34.4498%" y="469" width="0.4785%" height="15" fill="rgb(243,153,54)" fg:x="72" fg:w="1"/><text x="34.6998%" y="479.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.48%)</title><rect x="34.4498%" y="453" width="0.4785%" height="15" fill="rgb(251,47,18)" fg:x="72" fg:w="1"/><text x="34.6998%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.48%)</title><rect x="34.9282%" y="501" width="0.4785%" height="15" fill="rgb(242,102,42)" fg:x="73" fg:w="1"/><text x="35.1782%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.48%)</title><rect x="34.9282%" y="485" width="0.4785%" height="15" fill="rgb(234,31,38)" fg:x="73" fg:w="1"/><text x="35.1782%" y="495.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="34.9282%" y="469" width="0.4785%" height="15" fill="rgb(221,117,51)" fg:x="73" fg:w="1"/><text x="35.1782%" y="479.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.48%)</title><rect x="34.9282%" y="453" width="0.4785%" height="15" fill="rgb(212,20,18)" fg:x="73" fg:w="1"/><text x="35.1782%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="34.9282%" y="437" width="0.4785%" height="15" fill="rgb(245,133,36)" fg:x="73" fg:w="1"/><text x="35.1782%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.48%)</title><rect x="34.9282%" y="421" width="0.4785%" height="15" fill="rgb(212,6,19)" fg:x="73" fg:w="1"/><text x="35.1782%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.48%)</title><rect x="34.9282%" y="405" width="0.4785%" height="15" fill="rgb(218,1,36)" fg:x="73" fg:w="1"/><text x="35.1782%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 1.91%)</title><rect x="34.9282%" y="629" width="1.9139%" height="15" fill="rgb(246,84,54)" fg:x="73" fg:w="4"/><text x="35.1782%" y="639.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (4 samples, 1.91%)</title><rect x="34.9282%" y="613" width="1.9139%" height="15" fill="rgb(242,110,6)" fg:x="73" fg:w="4"/><text x="35.1782%" y="623.50">c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 1.91%)</title><rect x="34.9282%" y="597" width="1.9139%" height="15" fill="rgb(214,47,5)" fg:x="73" fg:w="4"/><text x="35.1782%" y="607.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 1.91%)</title><rect x="34.9282%" y="581" width="1.9139%" height="15" fill="rgb(218,159,25)" fg:x="73" fg:w="4"/><text x="35.1782%" y="591.50">c..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (4 samples, 1.91%)</title><rect x="34.9282%" y="565" width="1.9139%" height="15" fill="rgb(215,211,28)" fg:x="73" fg:w="4"/><text x="35.1782%" y="575.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (4 samples, 1.91%)</title><rect x="34.9282%" y="549" width="1.9139%" height="15" fill="rgb(238,59,32)" fg:x="73" fg:w="4"/><text x="35.1782%" y="559.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 1.91%)</title><rect x="34.9282%" y="533" width="1.9139%" height="15" fill="rgb(226,82,3)" fg:x="73" fg:w="4"/><text x="35.1782%" y="543.50">c..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (4 samples, 1.91%)</title><rect x="34.9282%" y="517" width="1.9139%" height="15" fill="rgb(240,164,32)" fg:x="73" fg:w="4"/><text x="35.1782%" y="527.50">y..</text></g><g><title>core::iter::traits::iterator::Iterator::count (3 samples, 1.44%)</title><rect x="35.4067%" y="501" width="1.4354%" height="15" fill="rgb(232,46,7)" fg:x="74" fg:w="3"/><text x="35.6567%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.48%)</title><rect x="36.3636%" y="485" width="0.4785%" height="15" fill="rgb(229,129,53)" fg:x="76" fg:w="1"/><text x="36.6136%" y="495.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="36.3636%" y="469" width="0.4785%" height="15" fill="rgb(234,188,29)" fg:x="76" fg:w="1"/><text x="36.6136%" y="479.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.48%)</title><rect x="36.3636%" y="453" width="0.4785%" height="15" fill="rgb(246,141,4)" fg:x="76" fg:w="1"/><text x="36.6136%" y="463.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.48%)</title><rect x="36.3636%" y="437" width="0.4785%" height="15" fill="rgb(229,23,39)" fg:x="76" fg:w="1"/><text x="36.6136%" y="447.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.48%)</title><rect x="36.3636%" y="421" width="0.4785%" height="15" fill="rgb(206,12,3)" fg:x="76" fg:w="1"/><text x="36.6136%" y="431.50"></text></g><g><title>alloc::fmt::format (4 samples, 1.91%)</title><rect x="36.8421%" y="629" width="1.9139%" height="15" fill="rgb(252,226,20)" fg:x="77" fg:w="4"/><text x="37.0921%" y="639.50">a..</text></g><g><title>core::fmt::Write::write_fmt (4 samples, 1.91%)</title><rect x="36.8421%" y="613" width="1.9139%" height="15" fill="rgb(216,123,35)" fg:x="77" fg:w="4"/><text x="37.0921%" y="623.50">c..</text></g><g><title>core::fmt::write (3 samples, 1.44%)</title><rect x="37.3206%" y="597" width="1.4354%" height="15" fill="rgb(212,68,40)" fg:x="78" fg:w="3"/><text x="37.5706%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.96%)</title><rect x="37.7990%" y="581" width="0.9569%" height="15" fill="rgb(254,125,32)" fg:x="79" fg:w="2"/><text x="38.0490%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.96%)</title><rect x="37.7990%" y="565" width="0.9569%" height="15" fill="rgb(253,97,22)" fg:x="79" fg:w="2"/><text x="38.0490%" y="575.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.96%)</title><rect x="37.7990%" y="549" width="0.9569%" height="15" fill="rgb(241,101,14)" fg:x="79" fg:w="2"/><text x="38.0490%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.96%)</title><rect x="37.7990%" y="533" width="0.9569%" height="15" fill="rgb(238,103,29)" fg:x="79" fg:w="2"/><text x="38.0490%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.96%)</title><rect x="37.7990%" y="517" width="0.9569%" height="15" fill="rgb(233,195,47)" fg:x="79" fg:w="2"/><text x="38.0490%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.96%)</title><rect x="37.7990%" y="501" width="0.9569%" height="15" fill="rgb(246,218,30)" fg:x="79" fg:w="2"/><text x="38.0490%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.96%)</title><rect x="37.7990%" y="485" width="0.9569%" height="15" fill="rgb(219,145,47)" fg:x="79" fg:w="2"/><text x="38.0490%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.96%)</title><rect x="37.7990%" y="469" width="0.9569%" height="15" fill="rgb(243,12,26)" fg:x="79" fg:w="2"/><text x="38.0490%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.96%)</title><rect x="37.7990%" y="453" width="0.9569%" height="15" fill="rgb(214,87,16)" fg:x="79" fg:w="2"/><text x="38.0490%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.96%)</title><rect x="37.7990%" y="437" width="0.9569%" height="15" fill="rgb(208,99,42)" fg:x="79" fg:w="2"/><text x="38.0490%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.96%)</title><rect x="37.7990%" y="421" width="0.9569%" height="15" fill="rgb(253,99,2)" fg:x="79" fg:w="2"/><text x="38.0490%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.96%)</title><rect x="37.7990%" y="405" width="0.9569%" height="15" fill="rgb(220,168,23)" fg:x="79" fg:w="2"/><text x="38.0490%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.96%)</title><rect x="37.7990%" y="389" width="0.9569%" height="15" fill="rgb(242,38,24)" fg:x="79" fg:w="2"/><text x="38.0490%" y="399.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.96%)</title><rect x="37.7990%" y="373" width="0.9569%" height="15" fill="rgb(225,182,9)" fg:x="79" fg:w="2"/><text x="38.0490%" y="383.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.96%)</title><rect x="37.7990%" y="357" width="0.9569%" height="15" fill="rgb(243,178,37)" fg:x="79" fg:w="2"/><text x="38.0490%" y="367.50"></text></g><g><title>_int_realloc (1 samples, 0.48%)</title><rect x="38.2775%" y="341" width="0.4785%" height="15" fill="rgb(232,139,19)" fg:x="80" fg:w="1"/><text x="38.5275%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 3.35%)</title><rect x="38.7560%" y="453" width="3.3493%" height="15" fill="rgb(225,201,24)" fg:x="81" fg:w="7"/><text x="39.0060%" y="463.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 3.35%)</title><rect x="38.7560%" y="437" width="3.3493%" height="15" fill="rgb(221,47,46)" fg:x="81" fg:w="7"/><text x="39.0060%" y="447.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 3.35%)</title><rect x="38.7560%" y="421" width="3.3493%" height="15" fill="rgb(249,23,13)" fg:x="81" fg:w="7"/><text x="39.0060%" y="431.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 3.35%)</title><rect x="38.7560%" y="405" width="3.3493%" height="15" fill="rgb(219,9,5)" fg:x="81" fg:w="7"/><text x="39.0060%" y="415.50">&lt;co..</text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (8 samples, 3.83%)</title><rect x="38.7560%" y="485" width="3.8278%" height="15" fill="rgb(254,171,16)" fg:x="81" fg:w="8"/><text x="39.0060%" y="495.50">&lt;all..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (8 samples, 3.83%)</title><rect x="38.7560%" y="469" width="3.8278%" height="15" fill="rgb(230,171,20)" fg:x="81" fg:w="8"/><text x="39.0060%" y="479.50">core..</text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.48%)</title><rect x="42.1053%" y="453" width="0.4785%" height="15" fill="rgb(210,71,41)" fg:x="88" fg:w="1"/><text x="42.3553%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="42.1053%" y="437" width="0.4785%" height="15" fill="rgb(206,173,20)" fg:x="88" fg:w="1"/><text x="42.3553%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="42.1053%" y="421" width="0.4785%" height="15" fill="rgb(233,88,34)" fg:x="88" fg:w="1"/><text x="42.3553%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="42.1053%" y="405" width="0.4785%" height="15" fill="rgb(223,209,46)" fg:x="88" fg:w="1"/><text x="42.3553%" y="415.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.48%)</title><rect x="42.1053%" y="389" width="0.4785%" height="15" fill="rgb(250,43,18)" fg:x="88" fg:w="1"/><text x="42.3553%" y="399.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (9 samples, 4.31%)</title><rect x="38.7560%" y="517" width="4.3062%" height="15" fill="rgb(208,13,10)" fg:x="81" fg:w="9"/><text x="39.0060%" y="527.50">hashb..</text></g><g><title>hashbrown::map::make_hash (9 samples, 4.31%)</title><rect x="38.7560%" y="501" width="4.3062%" height="15" fill="rgb(212,200,36)" fg:x="81" fg:w="9"/><text x="39.0060%" y="511.50">hashb..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.48%)</title><rect x="42.5837%" y="485" width="0.4785%" height="15" fill="rgb(225,90,30)" fg:x="89" fg:w="1"/><text x="42.8337%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.48%)</title><rect x="42.5837%" y="469" width="0.4785%" height="15" fill="rgb(236,182,39)" fg:x="89" fg:w="1"/><text x="42.8337%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.48%)</title><rect x="42.5837%" y="453" width="0.4785%" height="15" fill="rgb(212,144,35)" fg:x="89" fg:w="1"/><text x="42.8337%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.48%)</title><rect x="42.5837%" y="437" width="0.4785%" height="15" fill="rgb(228,63,44)" fg:x="89" fg:w="1"/><text x="42.8337%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (2 samples, 0.96%)</title><rect x="43.0622%" y="517" width="0.9569%" height="15" fill="rgb(228,109,6)" fg:x="90" fg:w="2"/><text x="43.3122%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (2 samples, 0.96%)</title><rect x="43.0622%" y="501" width="0.9569%" height="15" fill="rgb(238,117,24)" fg:x="90" fg:w="2"/><text x="43.3122%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.96%)</title><rect x="43.0622%" y="485" width="0.9569%" height="15" fill="rgb(242,26,26)" fg:x="90" fg:w="2"/><text x="43.3122%" y="495.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.96%)</title><rect x="43.0622%" y="469" width="0.9569%" height="15" fill="rgb(221,92,48)" fg:x="90" fg:w="2"/><text x="43.3122%" y="479.50"></text></g><g><title>exc_page_fault (1 samples, 0.48%)</title><rect x="43.5407%" y="453" width="0.4785%" height="15" fill="rgb(209,209,32)" fg:x="91" fg:w="1"/><text x="43.7907%" y="463.50"></text></g><g><title>irqentry_exit (1 samples, 0.48%)</title><rect x="43.5407%" y="437" width="0.4785%" height="15" fill="rgb(221,70,22)" fg:x="91" fg:w="1"/><text x="43.7907%" y="447.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.48%)</title><rect x="43.5407%" y="421" width="0.4785%" height="15" fill="rgb(248,145,5)" fg:x="91" fg:w="1"/><text x="43.7907%" y="431.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.48%)</title><rect x="43.5407%" y="405" width="0.4785%" height="15" fill="rgb(226,116,26)" fg:x="91" fg:w="1"/><text x="43.7907%" y="415.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (12 samples, 5.74%)</title><rect x="38.7560%" y="629" width="5.7416%" height="15" fill="rgb(244,5,17)" fg:x="81" fg:w="12"/><text x="39.0060%" y="639.50">std::co..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (12 samples, 5.74%)</title><rect x="38.7560%" y="613" width="5.7416%" height="15" fill="rgb(252,159,33)" fg:x="81" fg:w="12"/><text x="39.0060%" y="623.50">hashbro..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 5.74%)</title><rect x="38.7560%" y="597" width="5.7416%" height="15" fill="rgb(206,71,0)" fg:x="81" fg:w="12"/><text x="39.0060%" y="607.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (12 samples, 5.74%)</title><rect x="38.7560%" y="581" width="5.7416%" height="15" fill="rgb(233,118,54)" fg:x="81" fg:w="12"/><text x="39.0060%" y="591.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (12 samples, 5.74%)</title><rect x="38.7560%" y="565" width="5.7416%" height="15" fill="rgb(234,83,48)" fg:x="81" fg:w="12"/><text x="39.0060%" y="575.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 5.74%)</title><rect x="38.7560%" y="549" width="5.7416%" height="15" fill="rgb(228,3,54)" fg:x="81" fg:w="12"/><text x="39.0060%" y="559.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (12 samples, 5.74%)</title><rect x="38.7560%" y="533" width="5.7416%" height="15" fill="rgb(226,155,13)" fg:x="81" fg:w="12"/><text x="39.0060%" y="543.50">hashbro..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.48%)</title><rect x="44.0191%" y="517" width="0.4785%" height="15" fill="rgb(241,28,37)" fg:x="92" fg:w="1"/><text x="44.2691%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.48%)</title><rect x="44.0191%" y="501" width="0.4785%" height="15" fill="rgb(233,93,10)" fg:x="92" fg:w="1"/><text x="44.2691%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (6 samples, 2.87%)</title><rect x="44.9761%" y="485" width="2.8708%" height="15" fill="rgb(225,113,19)" fg:x="94" fg:w="6"/><text x="45.2261%" y="495.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 2.39%)</title><rect x="45.4545%" y="469" width="2.3923%" height="15" fill="rgb(241,2,18)" fg:x="95" fg:w="5"/><text x="45.7045%" y="479.50">co..</text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 2.39%)</title><rect x="45.4545%" y="453" width="2.3923%" height="15" fill="rgb(228,207,21)" fg:x="95" fg:w="5"/><text x="45.7045%" y="463.50">&lt;c..</text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (5 samples, 2.39%)</title><rect x="45.4545%" y="437" width="2.3923%" height="15" fill="rgb(213,211,35)" fg:x="95" fg:w="5"/><text x="45.7045%" y="447.50">co..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (5 samples, 2.39%)</title><rect x="45.4545%" y="421" width="2.3923%" height="15" fill="rgb(209,83,10)" fg:x="95" fg:w="5"/><text x="45.7045%" y="431.50">&lt;c..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (5 samples, 2.39%)</title><rect x="45.4545%" y="405" width="2.3923%" height="15" fill="rgb(209,164,1)" fg:x="95" fg:w="5"/><text x="45.7045%" y="415.50">co..</text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.48%)</title><rect x="47.3684%" y="389" width="0.4785%" height="15" fill="rgb(213,184,43)" fg:x="99" fg:w="1"/><text x="47.6184%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 3.35%)</title><rect x="44.9761%" y="613" width="3.3493%" height="15" fill="rgb(231,61,34)" fg:x="94" fg:w="7"/><text x="45.2261%" y="623.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::find (7 samples, 3.35%)</title><rect x="44.9761%" y="597" width="3.3493%" height="15" fill="rgb(235,75,3)" fg:x="94" fg:w="7"/><text x="45.2261%" y="607.50">cor..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 3.35%)</title><rect x="44.9761%" y="581" width="3.3493%" height="15" fill="rgb(220,106,47)" fg:x="94" fg:w="7"/><text x="45.2261%" y="591.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 3.35%)</title><rect x="44.9761%" y="565" width="3.3493%" height="15" fill="rgb(210,196,33)" fg:x="94" fg:w="7"/><text x="45.2261%" y="575.50">cor..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (7 samples, 3.35%)</title><rect x="44.9761%" y="549" width="3.3493%" height="15" fill="rgb(229,154,42)" fg:x="94" fg:w="7"/><text x="45.2261%" y="559.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (7 samples, 3.35%)</title><rect x="44.9761%" y="533" width="3.3493%" height="15" fill="rgb(228,114,26)" fg:x="94" fg:w="7"/><text x="45.2261%" y="543.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 3.35%)</title><rect x="44.9761%" y="517" width="3.3493%" height="15" fill="rgb(208,144,1)" fg:x="94" fg:w="7"/><text x="45.2261%" y="527.50">cor..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (7 samples, 3.35%)</title><rect x="44.9761%" y="501" width="3.3493%" height="15" fill="rgb(239,112,37)" fg:x="94" fg:w="7"/><text x="45.2261%" y="511.50">y20..</text></g><g><title>core::str::&lt;impl str&gt;::matches (1 samples, 0.48%)</title><rect x="47.8469%" y="485" width="0.4785%" height="15" fill="rgb(210,96,50)" fg:x="100" fg:w="1"/><text x="48.0969%" y="495.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.48%)</title><rect x="47.8469%" y="469" width="0.4785%" height="15" fill="rgb(222,178,2)" fg:x="100" fg:w="1"/><text x="48.0969%" y="479.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.48%)</title><rect x="47.8469%" y="453" width="0.4785%" height="15" fill="rgb(226,74,18)" fg:x="100" fg:w="1"/><text x="48.0969%" y="463.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.48%)</title><rect x="47.8469%" y="437" width="0.4785%" height="15" fill="rgb(225,67,54)" fg:x="100" fg:w="1"/><text x="48.0969%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.48%)</title><rect x="48.3254%" y="389" width="0.4785%" height="15" fill="rgb(251,92,32)" fg:x="101" fg:w="1"/><text x="48.5754%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.48%)</title><rect x="48.3254%" y="373" width="0.4785%" height="15" fill="rgb(228,149,22)" fg:x="101" fg:w="1"/><text x="48.5754%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.48%)</title><rect x="48.3254%" y="357" width="0.4785%" height="15" fill="rgb(243,54,13)" fg:x="101" fg:w="1"/><text x="48.5754%" y="367.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.48%)</title><rect x="48.3254%" y="341" width="0.4785%" height="15" fill="rgb(243,180,28)" fg:x="101" fg:w="1"/><text x="48.5754%" y="351.50"></text></g><g><title>_int_realloc (1 samples, 0.48%)</title><rect x="48.3254%" y="325" width="0.4785%" height="15" fill="rgb(208,167,24)" fg:x="101" fg:w="1"/><text x="48.5754%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.96%)</title><rect x="48.3254%" y="469" width="0.9569%" height="15" fill="rgb(245,73,45)" fg:x="101" fg:w="2"/><text x="48.5754%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.96%)</title><rect x="48.3254%" y="453" width="0.9569%" height="15" fill="rgb(237,203,48)" fg:x="101" fg:w="2"/><text x="48.5754%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.96%)</title><rect x="48.3254%" y="437" width="0.9569%" height="15" fill="rgb(211,197,16)" fg:x="101" fg:w="2"/><text x="48.5754%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.96%)</title><rect x="48.3254%" y="421" width="0.9569%" height="15" fill="rgb(243,99,51)" fg:x="101" fg:w="2"/><text x="48.5754%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.96%)</title><rect x="48.3254%" y="405" width="0.9569%" height="15" fill="rgb(215,123,29)" fg:x="101" fg:w="2"/><text x="48.5754%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.48%)</title><rect x="48.8038%" y="389" width="0.4785%" height="15" fill="rgb(239,186,37)" fg:x="102" fg:w="1"/><text x="49.0538%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.48%)</title><rect x="48.8038%" y="373" width="0.4785%" height="15" fill="rgb(252,136,39)" fg:x="102" fg:w="1"/><text x="49.0538%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 1.44%)</title><rect x="48.3254%" y="565" width="1.4354%" height="15" fill="rgb(223,213,32)" fg:x="101" fg:w="3"/><text x="48.5754%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 1.44%)</title><rect x="48.3254%" y="549" width="1.4354%" height="15" fill="rgb(233,115,5)" fg:x="101" fg:w="3"/><text x="48.5754%" y="559.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 1.44%)</title><rect x="48.3254%" y="533" width="1.4354%" height="15" fill="rgb(207,226,44)" fg:x="101" fg:w="3"/><text x="48.5754%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 1.44%)</title><rect x="48.3254%" y="517" width="1.4354%" height="15" fill="rgb(208,126,0)" fg:x="101" fg:w="3"/><text x="48.5754%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 1.44%)</title><rect x="48.3254%" y="501" width="1.4354%" height="15" fill="rgb(244,66,21)" fg:x="101" fg:w="3"/><text x="48.5754%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 1.44%)</title><rect x="48.3254%" y="485" width="1.4354%" height="15" fill="rgb(222,97,12)" fg:x="101" fg:w="3"/><text x="48.5754%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.48%)</title><rect x="49.2823%" y="469" width="0.4785%" height="15" fill="rgb(219,213,19)" fg:x="103" fg:w="1"/><text x="49.5323%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.48%)</title><rect x="49.2823%" y="453" width="0.4785%" height="15" fill="rgb(252,169,30)" fg:x="103" fg:w="1"/><text x="49.5323%" y="463.50"></text></g><g><title>alloc::fmt::format (4 samples, 1.91%)</title><rect x="48.3254%" y="613" width="1.9139%" height="15" fill="rgb(206,32,51)" fg:x="101" fg:w="4"/><text x="48.5754%" y="623.50">a..</text></g><g><title>core::fmt::Write::write_fmt (4 samples, 1.91%)</title><rect x="48.3254%" y="597" width="1.9139%" height="15" fill="rgb(250,172,42)" fg:x="101" fg:w="4"/><text x="48.5754%" y="607.50">c..</text></g><g><title>core::fmt::write (4 samples, 1.91%)</title><rect x="48.3254%" y="581" width="1.9139%" height="15" fill="rgb(209,34,43)" fg:x="101" fg:w="4"/><text x="48.5754%" y="591.50">c..</text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.48%)</title><rect x="49.7608%" y="565" width="0.4785%" height="15" fill="rgb(223,11,35)" fg:x="104" fg:w="1"/><text x="50.0108%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.48%)</title><rect x="50.2392%" y="453" width="0.4785%" height="15" fill="rgb(251,219,26)" fg:x="105" fg:w="1"/><text x="50.4892%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.48%)</title><rect x="50.2392%" y="437" width="0.4785%" height="15" fill="rgb(231,119,3)" fg:x="105" fg:w="1"/><text x="50.4892%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.96%)</title><rect x="50.2392%" y="533" width="0.9569%" height="15" fill="rgb(216,97,11)" fg:x="105" fg:w="2"/><text x="50.4892%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.96%)</title><rect x="50.2392%" y="517" width="0.9569%" height="15" fill="rgb(223,59,9)" fg:x="105" fg:w="2"/><text x="50.4892%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.96%)</title><rect x="50.2392%" y="501" width="0.9569%" height="15" fill="rgb(233,93,31)" fg:x="105" fg:w="2"/><text x="50.4892%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.96%)</title><rect x="50.2392%" y="485" width="0.9569%" height="15" fill="rgb(239,81,33)" fg:x="105" fg:w="2"/><text x="50.4892%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.96%)</title><rect x="50.2392%" y="469" width="0.9569%" height="15" fill="rgb(213,120,34)" fg:x="105" fg:w="2"/><text x="50.4892%" y="479.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.48%)</title><rect x="50.7177%" y="453" width="0.4785%" height="15" fill="rgb(243,49,53)" fg:x="106" fg:w="1"/><text x="50.9677%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 1.44%)</title><rect x="50.2392%" y="549" width="1.4354%" height="15" fill="rgb(247,216,33)" fg:x="105" fg:w="3"/><text x="50.4892%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.48%)</title><rect x="51.1962%" y="533" width="0.4785%" height="15" fill="rgb(226,26,14)" fg:x="107" fg:w="1"/><text x="51.4462%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="51.6746%" y="517" width="0.4785%" height="15" fill="rgb(215,49,53)" fg:x="108" fg:w="1"/><text x="51.9246%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="51.6746%" y="501" width="0.4785%" height="15" fill="rgb(245,162,40)" fg:x="108" fg:w="1"/><text x="51.9246%" y="511.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.48%)</title><rect x="52.1531%" y="517" width="0.4785%" height="15" fill="rgb(229,68,17)" fg:x="109" fg:w="1"/><text x="52.4031%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.48%)</title><rect x="52.1531%" y="501" width="0.4785%" height="15" fill="rgb(213,182,10)" fg:x="109" fg:w="1"/><text x="52.4031%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.48%)</title><rect x="52.1531%" y="485" width="0.4785%" height="15" fill="rgb(245,125,30)" fg:x="109" fg:w="1"/><text x="52.4031%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.48%)</title><rect x="52.1531%" y="469" width="0.4785%" height="15" fill="rgb(232,202,2)" fg:x="109" fg:w="1"/><text x="52.4031%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.48%)</title><rect x="52.1531%" y="453" width="0.4785%" height="15" fill="rgb(237,140,51)" fg:x="109" fg:w="1"/><text x="52.4031%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.48%)</title><rect x="52.1531%" y="437" width="0.4785%" height="15" fill="rgb(236,157,25)" fg:x="109" fg:w="1"/><text x="52.4031%" y="447.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (6 samples, 2.87%)</title><rect x="50.2392%" y="613" width="2.8708%" height="15" fill="rgb(219,209,0)" fg:x="105" fg:w="6"/><text x="50.4892%" y="623.50">st..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (6 samples, 2.87%)</title><rect x="50.2392%" y="597" width="2.8708%" height="15" fill="rgb(240,116,54)" fg:x="105" fg:w="6"/><text x="50.4892%" y="607.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (6 samples, 2.87%)</title><rect x="50.2392%" y="581" width="2.8708%" height="15" fill="rgb(216,10,36)" fg:x="105" fg:w="6"/><text x="50.4892%" y="591.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 2.87%)</title><rect x="50.2392%" y="565" width="2.8708%" height="15" fill="rgb(222,72,44)" fg:x="105" fg:w="6"/><text x="50.4892%" y="575.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 1.44%)</title><rect x="51.6746%" y="549" width="1.4354%" height="15" fill="rgb(232,159,9)" fg:x="108" fg:w="3"/><text x="51.9246%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 1.44%)</title><rect x="51.6746%" y="533" width="1.4354%" height="15" fill="rgb(210,39,32)" fg:x="108" fg:w="3"/><text x="51.9246%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.48%)</title><rect x="52.6316%" y="517" width="0.4785%" height="15" fill="rgb(216,194,45)" fg:x="110" fg:w="1"/><text x="52.8816%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.48%)</title><rect x="52.6316%" y="501" width="0.4785%" height="15" fill="rgb(218,18,35)" fg:x="110" fg:w="1"/><text x="52.8816%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.48%)</title><rect x="52.6316%" y="485" width="0.4785%" height="15" fill="rgb(207,83,51)" fg:x="110" fg:w="1"/><text x="52.8816%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.48%)</title><rect x="52.6316%" y="469" width="0.4785%" height="15" fill="rgb(225,63,43)" fg:x="110" fg:w="1"/><text x="52.8816%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.48%)</title><rect x="52.6316%" y="453" width="0.4785%" height="15" fill="rgb(207,57,36)" fg:x="110" fg:w="1"/><text x="52.8816%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.48%)</title><rect x="52.6316%" y="437" width="0.4785%" height="15" fill="rgb(216,99,33)" fg:x="110" fg:w="1"/><text x="52.8816%" y="447.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.48%)</title><rect x="52.6316%" y="421" width="0.4785%" height="15" fill="rgb(225,42,16)" fg:x="110" fg:w="1"/><text x="52.8816%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="53.1100%" y="501" width="0.4785%" height="15" fill="rgb(220,201,45)" fg:x="111" fg:w="1"/><text x="53.3600%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="53.1100%" y="485" width="0.4785%" height="15" fill="rgb(225,33,4)" fg:x="111" fg:w="1"/><text x="53.3600%" y="495.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.48%)</title><rect x="53.1100%" y="469" width="0.4785%" height="15" fill="rgb(224,33,50)" fg:x="111" fg:w="1"/><text x="53.3600%" y="479.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.48%)</title><rect x="53.5885%" y="501" width="0.4785%" height="15" fill="rgb(246,198,51)" fg:x="112" fg:w="1"/><text x="53.8385%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.48%)</title><rect x="53.5885%" y="485" width="0.4785%" height="15" fill="rgb(205,22,4)" fg:x="112" fg:w="1"/><text x="53.8385%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.48%)</title><rect x="53.5885%" y="469" width="0.4785%" height="15" fill="rgb(206,3,8)" fg:x="112" fg:w="1"/><text x="53.8385%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.48%)</title><rect x="53.5885%" y="453" width="0.4785%" height="15" fill="rgb(251,23,15)" fg:x="112" fg:w="1"/><text x="53.8385%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="53.5885%" y="437" width="0.4785%" height="15" fill="rgb(252,88,28)" fg:x="112" fg:w="1"/><text x="53.8385%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="53.5885%" y="421" width="0.4785%" height="15" fill="rgb(212,127,14)" fg:x="112" fg:w="1"/><text x="53.8385%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="53.5885%" y="405" width="0.4785%" height="15" fill="rgb(247,145,37)" fg:x="112" fg:w="1"/><text x="53.8385%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.48%)</title><rect x="53.5885%" y="389" width="0.4785%" height="15" fill="rgb(209,117,53)" fg:x="112" fg:w="1"/><text x="53.8385%" y="399.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (4 samples, 1.91%)</title><rect x="53.1100%" y="613" width="1.9139%" height="15" fill="rgb(212,90,42)" fg:x="111" fg:w="4"/><text x="53.3600%" y="623.50">s..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (4 samples, 1.91%)</title><rect x="53.1100%" y="597" width="1.9139%" height="15" fill="rgb(218,164,37)" fg:x="111" fg:w="4"/><text x="53.3600%" y="607.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 1.91%)</title><rect x="53.1100%" y="581" width="1.9139%" height="15" fill="rgb(246,65,34)" fg:x="111" fg:w="4"/><text x="53.3600%" y="591.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 1.91%)</title><rect x="53.1100%" y="565" width="1.9139%" height="15" fill="rgb(231,100,33)" fg:x="111" fg:w="4"/><text x="53.3600%" y="575.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 1.91%)</title><rect x="53.1100%" y="549" width="1.9139%" height="15" fill="rgb(228,126,14)" fg:x="111" fg:w="4"/><text x="53.3600%" y="559.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 1.91%)</title><rect x="53.1100%" y="533" width="1.9139%" height="15" fill="rgb(215,173,21)" fg:x="111" fg:w="4"/><text x="53.3600%" y="543.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (4 samples, 1.91%)</title><rect x="53.1100%" y="517" width="1.9139%" height="15" fill="rgb(210,6,40)" fg:x="111" fg:w="4"/><text x="53.3600%" y="527.50">h..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (2 samples, 0.96%)</title><rect x="54.0670%" y="501" width="0.9569%" height="15" fill="rgb(212,48,18)" fg:x="113" fg:w="2"/><text x="54.3170%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (2 samples, 0.96%)</title><rect x="54.0670%" y="485" width="0.9569%" height="15" fill="rgb(230,214,11)" fg:x="113" fg:w="2"/><text x="54.3170%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.96%)</title><rect x="54.0670%" y="469" width="0.9569%" height="15" fill="rgb(254,105,39)" fg:x="113" fg:w="2"/><text x="54.3170%" y="479.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.48%)</title><rect x="54.5455%" y="453" width="0.4785%" height="15" fill="rgb(245,158,5)" fg:x="114" fg:w="1"/><text x="54.7955%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.48%)</title><rect x="59.8086%" y="373" width="0.4785%" height="15" fill="rgb(249,208,11)" fg:x="125" fg:w="1"/><text x="60.0586%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.48%)</title><rect x="59.8086%" y="357" width="0.4785%" height="15" fill="rgb(210,39,28)" fg:x="125" fg:w="1"/><text x="60.0586%" y="367.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.48%)</title><rect x="59.8086%" y="341" width="0.4785%" height="15" fill="rgb(211,56,53)" fg:x="125" fg:w="1"/><text x="60.0586%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.48%)</title><rect x="59.8086%" y="325" width="0.4785%" height="15" fill="rgb(226,201,30)" fg:x="125" fg:w="1"/><text x="60.0586%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (10 samples, 4.78%)</title><rect x="55.9809%" y="469" width="4.7847%" height="15" fill="rgb(239,101,34)" fg:x="117" fg:w="10"/><text x="56.2309%" y="479.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 2.87%)</title><rect x="57.8947%" y="453" width="2.8708%" height="15" fill="rgb(226,209,5)" fg:x="121" fg:w="6"/><text x="58.1447%" y="463.50">co..</text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 2.87%)</title><rect x="57.8947%" y="437" width="2.8708%" height="15" fill="rgb(250,105,47)" fg:x="121" fg:w="6"/><text x="58.1447%" y="447.50">&lt;c..</text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (6 samples, 2.87%)</title><rect x="57.8947%" y="421" width="2.8708%" height="15" fill="rgb(230,72,3)" fg:x="121" fg:w="6"/><text x="58.1447%" y="431.50">co..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (6 samples, 2.87%)</title><rect x="57.8947%" y="405" width="2.8708%" height="15" fill="rgb(232,218,39)" fg:x="121" fg:w="6"/><text x="58.1447%" y="415.50">&lt;c..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (5 samples, 2.39%)</title><rect x="58.3732%" y="389" width="2.3923%" height="15" fill="rgb(248,166,6)" fg:x="122" fg:w="5"/><text x="58.6232%" y="399.50">co..</text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.48%)</title><rect x="60.2871%" y="373" width="0.4785%" height="15" fill="rgb(247,89,20)" fg:x="126" fg:w="1"/><text x="60.5371%" y="383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.48%)</title><rect x="61.2440%" y="389" width="0.4785%" height="15" fill="rgb(248,130,54)" fg:x="128" fg:w="1"/><text x="61.4940%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.48%)</title><rect x="61.2440%" y="373" width="0.4785%" height="15" fill="rgb(234,196,4)" fg:x="128" fg:w="1"/><text x="61.4940%" y="383.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.48%)</title><rect x="61.2440%" y="357" width="0.4785%" height="15" fill="rgb(250,143,31)" fg:x="128" fg:w="1"/><text x="61.4940%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 6.22%)</title><rect x="55.9809%" y="597" width="6.2201%" height="15" fill="rgb(211,110,34)" fg:x="117" fg:w="13"/><text x="56.2309%" y="607.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::find (13 samples, 6.22%)</title><rect x="55.9809%" y="581" width="6.2201%" height="15" fill="rgb(215,124,48)" fg:x="117" fg:w="13"/><text x="56.2309%" y="591.50">core::it..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 6.22%)</title><rect x="55.9809%" y="565" width="6.2201%" height="15" fill="rgb(216,46,13)" fg:x="117" fg:w="13"/><text x="56.2309%" y="575.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 6.22%)</title><rect x="55.9809%" y="549" width="6.2201%" height="15" fill="rgb(205,184,25)" fg:x="117" fg:w="13"/><text x="56.2309%" y="559.50">core::it..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (13 samples, 6.22%)</title><rect x="55.9809%" y="533" width="6.2201%" height="15" fill="rgb(228,1,10)" fg:x="117" fg:w="13"/><text x="56.2309%" y="543.50">core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (13 samples, 6.22%)</title><rect x="55.9809%" y="517" width="6.2201%" height="15" fill="rgb(213,116,27)" fg:x="117" fg:w="13"/><text x="56.2309%" y="527.50">core::it..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 6.22%)</title><rect x="55.9809%" y="501" width="6.2201%" height="15" fill="rgb(241,95,50)" fg:x="117" fg:w="13"/><text x="56.2309%" y="511.50">core::op..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (13 samples, 6.22%)</title><rect x="55.9809%" y="485" width="6.2201%" height="15" fill="rgb(238,48,32)" fg:x="117" fg:w="13"/><text x="56.2309%" y="495.50">y2021::d..</text></g><g><title>core::str::&lt;impl str&gt;::matches (3 samples, 1.44%)</title><rect x="60.7656%" y="469" width="1.4354%" height="15" fill="rgb(235,113,49)" fg:x="127" fg:w="3"/><text x="61.0156%" y="479.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (3 samples, 1.44%)</title><rect x="60.7656%" y="453" width="1.4354%" height="15" fill="rgb(205,127,43)" fg:x="127" fg:w="3"/><text x="61.0156%" y="463.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (3 samples, 1.44%)</title><rect x="60.7656%" y="437" width="1.4354%" height="15" fill="rgb(250,162,2)" fg:x="127" fg:w="3"/><text x="61.0156%" y="447.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3 samples, 1.44%)</title><rect x="60.7656%" y="421" width="1.4354%" height="15" fill="rgb(220,13,41)" fg:x="127" fg:w="3"/><text x="61.0156%" y="431.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2 samples, 0.96%)</title><rect x="61.2440%" y="405" width="0.9569%" height="15" fill="rgb(249,221,25)" fg:x="128" fg:w="2"/><text x="61.4940%" y="415.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1 samples, 0.48%)</title><rect x="61.7225%" y="389" width="0.4785%" height="15" fill="rgb(215,208,19)" fg:x="129" fg:w="1"/><text x="61.9725%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.48%)</title><rect x="61.7225%" y="373" width="0.4785%" height="15" fill="rgb(236,175,2)" fg:x="129" fg:w="1"/><text x="61.9725%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="61.7225%" y="357" width="0.4785%" height="15" fill="rgb(241,52,2)" fg:x="129" fg:w="1"/><text x="61.9725%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.48%)</title><rect x="62.2010%" y="389" width="0.4785%" height="15" fill="rgb(248,140,14)" fg:x="130" fg:w="1"/><text x="62.4510%" y="399.50"></text></g><g><title>_int_free (1 samples, 0.48%)</title><rect x="63.1579%" y="293" width="0.4785%" height="15" fill="rgb(253,22,42)" fg:x="132" fg:w="1"/><text x="63.4079%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.96%)</title><rect x="63.1579%" y="373" width="0.9569%" height="15" fill="rgb(234,61,47)" fg:x="132" fg:w="2"/><text x="63.4079%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.96%)</title><rect x="63.1579%" y="357" width="0.9569%" height="15" fill="rgb(208,226,15)" fg:x="132" fg:w="2"/><text x="63.4079%" y="367.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.96%)</title><rect x="63.1579%" y="341" width="0.9569%" height="15" fill="rgb(217,221,4)" fg:x="132" fg:w="2"/><text x="63.4079%" y="351.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.96%)</title><rect x="63.1579%" y="325" width="0.9569%" height="15" fill="rgb(212,174,34)" fg:x="132" fg:w="2"/><text x="63.4079%" y="335.50"></text></g><g><title>_int_realloc (2 samples, 0.96%)</title><rect x="63.1579%" y="309" width="0.9569%" height="15" fill="rgb(253,83,4)" fg:x="132" fg:w="2"/><text x="63.4079%" y="319.50"></text></g><g><title>_int_malloc (1 samples, 0.48%)</title><rect x="63.6364%" y="293" width="0.4785%" height="15" fill="rgb(250,195,49)" fg:x="133" fg:w="1"/><text x="63.8864%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.48%)</title><rect x="64.1148%" y="373" width="0.4785%" height="15" fill="rgb(241,192,25)" fg:x="134" fg:w="1"/><text x="64.3648%" y="383.50"></text></g><g><title>tcache_get (1 samples, 0.48%)</title><rect x="64.1148%" y="357" width="0.4785%" height="15" fill="rgb(208,124,10)" fg:x="134" fg:w="1"/><text x="64.3648%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.48%)</title><rect x="64.5933%" y="373" width="0.4785%" height="15" fill="rgb(222,33,0)" fg:x="135" fg:w="1"/><text x="64.8433%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.48%)</title><rect x="64.5933%" y="357" width="0.4785%" height="15" fill="rgb(234,209,28)" fg:x="135" fg:w="1"/><text x="64.8433%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 3.35%)</title><rect x="62.2010%" y="453" width="3.3493%" height="15" fill="rgb(224,11,23)" fg:x="130" fg:w="7"/><text x="62.4510%" y="463.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 3.35%)</title><rect x="62.2010%" y="437" width="3.3493%" height="15" fill="rgb(232,99,1)" fg:x="130" fg:w="7"/><text x="62.4510%" y="447.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 3.35%)</title><rect x="62.2010%" y="421" width="3.3493%" height="15" fill="rgb(237,95,45)" fg:x="130" fg:w="7"/><text x="62.4510%" y="431.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 3.35%)</title><rect x="62.2010%" y="405" width="3.3493%" height="15" fill="rgb(208,109,11)" fg:x="130" fg:w="7"/><text x="62.4510%" y="415.50">all..</text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 2.87%)</title><rect x="62.6794%" y="389" width="2.8708%" height="15" fill="rgb(216,190,48)" fg:x="131" fg:w="6"/><text x="62.9294%" y="399.50">al..</text></g><g><title>__rust_alloc (1 samples, 0.48%)</title><rect x="65.0718%" y="373" width="0.4785%" height="15" fill="rgb(251,171,36)" fg:x="136" fg:w="1"/><text x="65.3218%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.48%)</title><rect x="65.5502%" y="453" width="0.4785%" height="15" fill="rgb(230,62,22)" fg:x="137" fg:w="1"/><text x="65.8002%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.48%)</title><rect x="65.5502%" y="437" width="0.4785%" height="15" fill="rgb(225,114,35)" fg:x="137" fg:w="1"/><text x="65.8002%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (9 samples, 4.31%)</title><rect x="62.2010%" y="549" width="4.3062%" height="15" fill="rgb(215,118,42)" fg:x="130" fg:w="9"/><text x="62.4510%" y="559.50">&lt;&amp;mut..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 4.31%)</title><rect x="62.2010%" y="533" width="4.3062%" height="15" fill="rgb(243,119,21)" fg:x="130" fg:w="9"/><text x="62.4510%" y="543.50">&lt;allo..</text></g><g><title>alloc::string::String::push_str (9 samples, 4.31%)</title><rect x="62.2010%" y="517" width="4.3062%" height="15" fill="rgb(252,177,53)" fg:x="130" fg:w="9"/><text x="62.4510%" y="527.50">alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 4.31%)</title><rect x="62.2010%" y="501" width="4.3062%" height="15" fill="rgb(237,209,29)" fg:x="130" fg:w="9"/><text x="62.4510%" y="511.50">alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 4.31%)</title><rect x="62.2010%" y="485" width="4.3062%" height="15" fill="rgb(212,65,23)" fg:x="130" fg:w="9"/><text x="62.4510%" y="495.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 4.31%)</title><rect x="62.2010%" y="469" width="4.3062%" height="15" fill="rgb(230,222,46)" fg:x="130" fg:w="9"/><text x="62.4510%" y="479.50">alloc..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.48%)</title><rect x="66.0287%" y="453" width="0.4785%" height="15" fill="rgb(215,135,32)" fg:x="138" fg:w="1"/><text x="66.2787%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.48%)</title><rect x="66.0287%" y="437" width="0.4785%" height="15" fill="rgb(246,101,22)" fg:x="138" fg:w="1"/><text x="66.2787%" y="447.50"></text></g><g><title>alloc::fmt::format (10 samples, 4.78%)</title><rect x="62.2010%" y="597" width="4.7847%" height="15" fill="rgb(206,107,13)" fg:x="130" fg:w="10"/><text x="62.4510%" y="607.50">alloc:..</text></g><g><title>core::fmt::Write::write_fmt (10 samples, 4.78%)</title><rect x="62.2010%" y="581" width="4.7847%" height="15" fill="rgb(250,100,44)" fg:x="130" fg:w="10"/><text x="62.4510%" y="591.50">core::..</text></g><g><title>core::fmt::write (10 samples, 4.78%)</title><rect x="62.2010%" y="565" width="4.7847%" height="15" fill="rgb(231,147,38)" fg:x="130" fg:w="10"/><text x="62.4510%" y="575.50">core::..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.48%)</title><rect x="66.5072%" y="549" width="0.4785%" height="15" fill="rgb(229,8,40)" fg:x="139" fg:w="1"/><text x="66.7572%" y="559.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.48%)</title><rect x="66.5072%" y="533" width="0.4785%" height="15" fill="rgb(221,135,30)" fg:x="139" fg:w="1"/><text x="66.7572%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.48%)</title><rect x="66.9856%" y="597" width="0.4785%" height="15" fill="rgb(249,193,18)" fg:x="140" fg:w="1"/><text x="67.2356%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.48%)</title><rect x="66.9856%" y="581" width="0.4785%" height="15" fill="rgb(209,133,39)" fg:x="140" fg:w="1"/><text x="67.2356%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.48%)</title><rect x="66.9856%" y="565" width="0.4785%" height="15" fill="rgb(232,100,14)" fg:x="140" fg:w="1"/><text x="67.2356%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.48%)</title><rect x="66.9856%" y="549" width="0.4785%" height="15" fill="rgb(224,185,1)" fg:x="140" fg:w="1"/><text x="67.2356%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.48%)</title><rect x="66.9856%" y="533" width="0.4785%" height="15" fill="rgb(223,139,8)" fg:x="140" fg:w="1"/><text x="67.2356%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.48%)</title><rect x="66.9856%" y="517" width="0.4785%" height="15" fill="rgb(232,213,38)" fg:x="140" fg:w="1"/><text x="67.2356%" y="527.50"></text></g><g><title>_int_free (1 samples, 0.48%)</title><rect x="66.9856%" y="501" width="0.4785%" height="15" fill="rgb(207,94,22)" fg:x="140" fg:w="1"/><text x="67.2356%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.48%)</title><rect x="67.4641%" y="517" width="0.4785%" height="15" fill="rgb(219,183,54)" fg:x="141" fg:w="1"/><text x="67.7141%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.48%)</title><rect x="67.4641%" y="501" width="0.4785%" height="15" fill="rgb(216,185,54)" fg:x="141" fg:w="1"/><text x="67.7141%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="67.4641%" y="485" width="0.4785%" height="15" fill="rgb(254,217,39)" fg:x="141" fg:w="1"/><text x="67.7141%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="67.4641%" y="469" width="0.4785%" height="15" fill="rgb(240,178,23)" fg:x="141" fg:w="1"/><text x="67.7141%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="67.4641%" y="453" width="0.4785%" height="15" fill="rgb(218,11,47)" fg:x="141" fg:w="1"/><text x="67.7141%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.48%)</title><rect x="67.4641%" y="437" width="0.4785%" height="15" fill="rgb(218,51,51)" fg:x="141" fg:w="1"/><text x="67.7141%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.48%)</title><rect x="67.4641%" y="421" width="0.4785%" height="15" fill="rgb(238,126,27)" fg:x="141" fg:w="1"/><text x="67.7141%" y="431.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.96%)</title><rect x="67.4641%" y="597" width="0.9569%" height="15" fill="rgb(249,202,22)" fg:x="141" fg:w="2"/><text x="67.7141%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.96%)</title><rect x="67.4641%" y="581" width="0.9569%" height="15" fill="rgb(254,195,49)" fg:x="141" fg:w="2"/><text x="67.7141%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.96%)</title><rect x="67.4641%" y="565" width="0.9569%" height="15" fill="rgb(208,123,14)" fg:x="141" fg:w="2"/><text x="67.7141%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.96%)</title><rect x="67.4641%" y="549" width="0.9569%" height="15" fill="rgb(224,200,8)" fg:x="141" fg:w="2"/><text x="67.7141%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.96%)</title><rect x="67.4641%" y="533" width="0.9569%" height="15" fill="rgb(217,61,36)" fg:x="141" fg:w="2"/><text x="67.7141%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.48%)</title><rect x="67.9426%" y="517" width="0.4785%" height="15" fill="rgb(206,35,45)" fg:x="142" fg:w="1"/><text x="68.1926%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.48%)</title><rect x="67.9426%" y="501" width="0.4785%" height="15" fill="rgb(217,65,33)" fg:x="142" fg:w="1"/><text x="68.1926%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.48%)</title><rect x="67.9426%" y="485" width="0.4785%" height="15" fill="rgb(222,158,48)" fg:x="142" fg:w="1"/><text x="68.1926%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.48%)</title><rect x="67.9426%" y="469" width="0.4785%" height="15" fill="rgb(254,2,54)" fg:x="142" fg:w="1"/><text x="68.1926%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.48%)</title><rect x="67.9426%" y="453" width="0.4785%" height="15" fill="rgb(250,143,38)" fg:x="142" fg:w="1"/><text x="68.1926%" y="463.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.96%)</title><rect x="68.4211%" y="597" width="0.9569%" height="15" fill="rgb(248,25,0)" fg:x="143" fg:w="2"/><text x="68.6711%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.96%)</title><rect x="68.4211%" y="581" width="0.9569%" height="15" fill="rgb(206,152,27)" fg:x="143" fg:w="2"/><text x="68.6711%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.96%)</title><rect x="68.4211%" y="565" width="0.9569%" height="15" fill="rgb(240,77,30)" fg:x="143" fg:w="2"/><text x="68.6711%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.96%)</title><rect x="68.4211%" y="549" width="0.9569%" height="15" fill="rgb(231,5,3)" fg:x="143" fg:w="2"/><text x="68.6711%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.96%)</title><rect x="68.4211%" y="533" width="0.9569%" height="15" fill="rgb(207,226,32)" fg:x="143" fg:w="2"/><text x="68.6711%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.96%)</title><rect x="68.4211%" y="517" width="0.9569%" height="15" fill="rgb(222,207,47)" fg:x="143" fg:w="2"/><text x="68.6711%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.96%)</title><rect x="68.4211%" y="501" width="0.9569%" height="15" fill="rgb(229,115,45)" fg:x="143" fg:w="2"/><text x="68.6711%" y="511.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (2 samples, 0.96%)</title><rect x="68.4211%" y="485" width="0.9569%" height="15" fill="rgb(224,191,6)" fg:x="143" fg:w="2"/><text x="68.6711%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.96%)</title><rect x="68.4211%" y="469" width="0.9569%" height="15" fill="rgb(230,227,24)" fg:x="143" fg:w="2"/><text x="68.6711%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.96%)</title><rect x="68.4211%" y="453" width="0.9569%" height="15" fill="rgb(228,80,19)" fg:x="143" fg:w="2"/><text x="68.6711%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.96%)</title><rect x="68.4211%" y="437" width="0.9569%" height="15" fill="rgb(247,229,0)" fg:x="143" fg:w="2"/><text x="68.6711%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.96%)</title><rect x="68.4211%" y="421" width="0.9569%" height="15" fill="rgb(237,194,15)" fg:x="143" fg:w="2"/><text x="68.6711%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.96%)</title><rect x="68.4211%" y="405" width="0.9569%" height="15" fill="rgb(219,203,20)" fg:x="143" fg:w="2"/><text x="68.6711%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.96%)</title><rect x="68.4211%" y="389" width="0.9569%" height="15" fill="rgb(234,128,8)" fg:x="143" fg:w="2"/><text x="68.6711%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.96%)</title><rect x="68.4211%" y="373" width="0.9569%" height="15" fill="rgb(248,202,8)" fg:x="143" fg:w="2"/><text x="68.6711%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.48%)</title><rect x="69.3780%" y="453" width="0.4785%" height="15" fill="rgb(206,104,37)" fg:x="145" fg:w="1"/><text x="69.6280%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.48%)</title><rect x="69.3780%" y="437" width="0.4785%" height="15" fill="rgb(223,8,27)" fg:x="145" fg:w="1"/><text x="69.6280%" y="447.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="69.3780%" y="421" width="0.4785%" height="15" fill="rgb(216,217,28)" fg:x="145" fg:w="1"/><text x="69.6280%" y="431.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.48%)</title><rect x="69.3780%" y="405" width="0.4785%" height="15" fill="rgb(249,199,1)" fg:x="145" fg:w="1"/><text x="69.6280%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (7 samples, 3.35%)</title><rect x="69.8565%" y="453" width="3.3493%" height="15" fill="rgb(240,85,17)" fg:x="146" fg:w="7"/><text x="70.1065%" y="463.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 2.87%)</title><rect x="70.3349%" y="437" width="2.8708%" height="15" fill="rgb(206,108,45)" fg:x="147" fg:w="6"/><text x="70.5849%" y="447.50">co..</text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 2.87%)</title><rect x="70.3349%" y="421" width="2.8708%" height="15" fill="rgb(245,210,41)" fg:x="147" fg:w="6"/><text x="70.5849%" y="431.50">&lt;c..</text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (6 samples, 2.87%)</title><rect x="70.3349%" y="405" width="2.8708%" height="15" fill="rgb(206,13,37)" fg:x="147" fg:w="6"/><text x="70.5849%" y="415.50">co..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (6 samples, 2.87%)</title><rect x="70.3349%" y="389" width="2.8708%" height="15" fill="rgb(250,61,18)" fg:x="147" fg:w="6"/><text x="70.5849%" y="399.50">&lt;c..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (6 samples, 2.87%)</title><rect x="70.3349%" y="373" width="2.8708%" height="15" fill="rgb(235,172,48)" fg:x="147" fg:w="6"/><text x="70.5849%" y="383.50">co..</text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (4 samples, 1.91%)</title><rect x="71.2919%" y="357" width="1.9139%" height="15" fill="rgb(249,201,17)" fg:x="149" fg:w="4"/><text x="71.5419%" y="367.50">c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 4.31%)</title><rect x="69.3780%" y="581" width="4.3062%" height="15" fill="rgb(219,208,6)" fg:x="145" fg:w="9"/><text x="69.6280%" y="591.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::find (9 samples, 4.31%)</title><rect x="69.3780%" y="565" width="4.3062%" height="15" fill="rgb(248,31,23)" fg:x="145" fg:w="9"/><text x="69.6280%" y="575.50">core:..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 4.31%)</title><rect x="69.3780%" y="549" width="4.3062%" height="15" fill="rgb(245,15,42)" fg:x="145" fg:w="9"/><text x="69.6280%" y="559.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 4.31%)</title><rect x="69.3780%" y="533" width="4.3062%" height="15" fill="rgb(222,217,39)" fg:x="145" fg:w="9"/><text x="69.6280%" y="543.50">core:..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (9 samples, 4.31%)</title><rect x="69.3780%" y="517" width="4.3062%" height="15" fill="rgb(210,219,27)" fg:x="145" fg:w="9"/><text x="69.6280%" y="527.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (9 samples, 4.31%)</title><rect x="69.3780%" y="501" width="4.3062%" height="15" fill="rgb(252,166,36)" fg:x="145" fg:w="9"/><text x="69.6280%" y="511.50">core:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 4.31%)</title><rect x="69.3780%" y="485" width="4.3062%" height="15" fill="rgb(245,132,34)" fg:x="145" fg:w="9"/><text x="69.6280%" y="495.50">core:..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (9 samples, 4.31%)</title><rect x="69.3780%" y="469" width="4.3062%" height="15" fill="rgb(236,54,3)" fg:x="145" fg:w="9"/><text x="69.6280%" y="479.50">y2021..</text></g><g><title>core::str::&lt;impl str&gt;::matches (1 samples, 0.48%)</title><rect x="73.2057%" y="453" width="0.4785%" height="15" fill="rgb(241,173,43)" fg:x="153" fg:w="1"/><text x="73.4557%" y="463.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.48%)</title><rect x="73.2057%" y="437" width="0.4785%" height="15" fill="rgb(215,190,9)" fg:x="153" fg:w="1"/><text x="73.4557%" y="447.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.48%)</title><rect x="73.2057%" y="421" width="0.4785%" height="15" fill="rgb(242,101,16)" fg:x="153" fg:w="1"/><text x="73.4557%" y="431.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.48%)</title><rect x="73.2057%" y="405" width="0.4785%" height="15" fill="rgb(223,190,21)" fg:x="153" fg:w="1"/><text x="73.4557%" y="415.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.48%)</title><rect x="73.2057%" y="389" width="0.4785%" height="15" fill="rgb(215,228,25)" fg:x="153" fg:w="1"/><text x="73.4557%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (2 samples, 0.96%)</title><rect x="74.1627%" y="373" width="0.9569%" height="15" fill="rgb(225,36,22)" fg:x="155" fg:w="2"/><text x="74.4127%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 1.44%)</title><rect x="75.1196%" y="357" width="1.4354%" height="15" fill="rgb(251,106,46)" fg:x="157" fg:w="3"/><text x="75.3696%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 1.44%)</title><rect x="75.1196%" y="341" width="1.4354%" height="15" fill="rgb(208,90,1)" fg:x="157" fg:w="3"/><text x="75.3696%" y="351.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 1.44%)</title><rect x="75.1196%" y="325" width="1.4354%" height="15" fill="rgb(243,10,4)" fg:x="157" fg:w="3"/><text x="75.3696%" y="335.50"></text></g><g><title>__GI___libc_realloc (3 samples, 1.44%)</title><rect x="75.1196%" y="309" width="1.4354%" height="15" fill="rgb(212,137,27)" fg:x="157" fg:w="3"/><text x="75.3696%" y="319.50"></text></g><g><title>_int_realloc (3 samples, 1.44%)</title><rect x="75.1196%" y="293" width="1.4354%" height="15" fill="rgb(231,220,49)" fg:x="157" fg:w="3"/><text x="75.3696%" y="303.50"></text></g><g><title>_int_malloc (1 samples, 0.48%)</title><rect x="76.0766%" y="277" width="0.4785%" height="15" fill="rgb(237,96,20)" fg:x="159" fg:w="1"/><text x="76.3266%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 2.87%)</title><rect x="74.1627%" y="533" width="2.8708%" height="15" fill="rgb(239,229,30)" fg:x="155" fg:w="6"/><text x="74.4127%" y="543.50">&lt;&amp;..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 2.87%)</title><rect x="74.1627%" y="517" width="2.8708%" height="15" fill="rgb(219,65,33)" fg:x="155" fg:w="6"/><text x="74.4127%" y="527.50">&lt;a..</text></g><g><title>alloc::string::String::push_str (6 samples, 2.87%)</title><rect x="74.1627%" y="501" width="2.8708%" height="15" fill="rgb(243,134,7)" fg:x="155" fg:w="6"/><text x="74.4127%" y="511.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 2.87%)</title><rect x="74.1627%" y="485" width="2.8708%" height="15" fill="rgb(216,177,54)" fg:x="155" fg:w="6"/><text x="74.4127%" y="495.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 2.87%)</title><rect x="74.1627%" y="469" width="2.8708%" height="15" fill="rgb(211,160,20)" fg:x="155" fg:w="6"/><text x="74.4127%" y="479.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 2.87%)</title><rect x="74.1627%" y="453" width="2.8708%" height="15" fill="rgb(239,85,39)" fg:x="155" fg:w="6"/><text x="74.4127%" y="463.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 2.87%)</title><rect x="74.1627%" y="437" width="2.8708%" height="15" fill="rgb(232,125,22)" fg:x="155" fg:w="6"/><text x="74.4127%" y="447.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 2.87%)</title><rect x="74.1627%" y="421" width="2.8708%" height="15" fill="rgb(244,57,34)" fg:x="155" fg:w="6"/><text x="74.4127%" y="431.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 2.87%)</title><rect x="74.1627%" y="405" width="2.8708%" height="15" fill="rgb(214,203,32)" fg:x="155" fg:w="6"/><text x="74.4127%" y="415.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 2.87%)</title><rect x="74.1627%" y="389" width="2.8708%" height="15" fill="rgb(207,58,43)" fg:x="155" fg:w="6"/><text x="74.4127%" y="399.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 1.91%)</title><rect x="75.1196%" y="373" width="1.9139%" height="15" fill="rgb(215,193,15)" fg:x="157" fg:w="4"/><text x="75.3696%" y="383.50">a..</text></g><g><title>__GI___libc_malloc (1 samples, 0.48%)</title><rect x="76.5550%" y="357" width="0.4785%" height="15" fill="rgb(232,15,44)" fg:x="160" fg:w="1"/><text x="76.8050%" y="367.50"></text></g><g><title>alloc::fmt::format (8 samples, 3.83%)</title><rect x="73.6842%" y="581" width="3.8278%" height="15" fill="rgb(212,3,48)" fg:x="154" fg:w="8"/><text x="73.9342%" y="591.50">allo..</text></g><g><title>core::fmt::Write::write_fmt (7 samples, 3.35%)</title><rect x="74.1627%" y="565" width="3.3493%" height="15" fill="rgb(218,128,7)" fg:x="155" fg:w="7"/><text x="74.4127%" y="575.50">cor..</text></g><g><title>core::fmt::write (7 samples, 3.35%)</title><rect x="74.1627%" y="549" width="3.3493%" height="15" fill="rgb(226,216,39)" fg:x="155" fg:w="7"/><text x="74.4127%" y="559.50">cor..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="77.0335%" y="533" width="0.4785%" height="15" fill="rgb(243,47,51)" fg:x="161" fg:w="1"/><text x="77.2835%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="77.0335%" y="517" width="0.4785%" height="15" fill="rgb(241,183,40)" fg:x="161" fg:w="1"/><text x="77.2835%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 1.91%)</title><rect x="77.5120%" y="517" width="1.9139%" height="15" fill="rgb(231,217,32)" fg:x="162" fg:w="4"/><text x="77.7620%" y="527.50">h..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 1.91%)</title><rect x="77.5120%" y="501" width="1.9139%" height="15" fill="rgb(229,61,38)" fg:x="162" fg:w="4"/><text x="77.7620%" y="511.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 1.91%)</title><rect x="77.5120%" y="485" width="1.9139%" height="15" fill="rgb(225,210,5)" fg:x="162" fg:w="4"/><text x="77.7620%" y="495.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 1.91%)</title><rect x="77.5120%" y="469" width="1.9139%" height="15" fill="rgb(231,79,45)" fg:x="162" fg:w="4"/><text x="77.7620%" y="479.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.96%)</title><rect x="78.4689%" y="453" width="0.9569%" height="15" fill="rgb(224,100,7)" fg:x="164" fg:w="2"/><text x="78.7189%" y="463.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (5 samples, 2.39%)</title><rect x="77.5120%" y="581" width="2.3923%" height="15" fill="rgb(241,198,18)" fg:x="162" fg:w="5"/><text x="77.7620%" y="591.50">st..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (5 samples, 2.39%)</title><rect x="77.5120%" y="565" width="2.3923%" height="15" fill="rgb(252,97,53)" fg:x="162" fg:w="5"/><text x="77.7620%" y="575.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (5 samples, 2.39%)</title><rect x="77.5120%" y="549" width="2.3923%" height="15" fill="rgb(220,88,7)" fg:x="162" fg:w="5"/><text x="77.7620%" y="559.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 2.39%)</title><rect x="77.5120%" y="533" width="2.3923%" height="15" fill="rgb(213,176,14)" fg:x="162" fg:w="5"/><text x="77.7620%" y="543.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.48%)</title><rect x="79.4258%" y="517" width="0.4785%" height="15" fill="rgb(246,73,7)" fg:x="166" fg:w="1"/><text x="79.6758%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.48%)</title><rect x="79.4258%" y="501" width="0.4785%" height="15" fill="rgb(245,64,36)" fg:x="166" fg:w="1"/><text x="79.6758%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="79.4258%" y="485" width="0.4785%" height="15" fill="rgb(245,80,10)" fg:x="166" fg:w="1"/><text x="79.6758%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="79.4258%" y="469" width="0.4785%" height="15" fill="rgb(232,107,50)" fg:x="166" fg:w="1"/><text x="79.6758%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="79.4258%" y="453" width="0.4785%" height="15" fill="rgb(253,3,0)" fg:x="166" fg:w="1"/><text x="79.6758%" y="463.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.48%)</title><rect x="79.4258%" y="437" width="0.4785%" height="15" fill="rgb(212,99,53)" fg:x="166" fg:w="1"/><text x="79.6758%" y="447.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.48%)</title><rect x="79.9043%" y="581" width="0.4785%" height="15" fill="rgb(249,111,54)" fg:x="167" fg:w="1"/><text x="80.1543%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.48%)</title><rect x="79.9043%" y="565" width="0.4785%" height="15" fill="rgb(249,55,30)" fg:x="167" fg:w="1"/><text x="80.1543%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.48%)</title><rect x="79.9043%" y="549" width="0.4785%" height="15" fill="rgb(237,47,42)" fg:x="167" fg:w="1"/><text x="80.1543%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.48%)</title><rect x="79.9043%" y="533" width="0.4785%" height="15" fill="rgb(211,20,18)" fg:x="167" fg:w="1"/><text x="80.1543%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.48%)</title><rect x="79.9043%" y="517" width="0.4785%" height="15" fill="rgb(231,203,46)" fg:x="167" fg:w="1"/><text x="80.1543%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.48%)</title><rect x="80.8612%" y="437" width="0.4785%" height="15" fill="rgb(237,142,3)" fg:x="169" fg:w="1"/><text x="81.1112%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.48%)</title><rect x="80.8612%" y="421" width="0.4785%" height="15" fill="rgb(241,107,1)" fg:x="169" fg:w="1"/><text x="81.1112%" y="431.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.48%)</title><rect x="80.8612%" y="405" width="0.4785%" height="15" fill="rgb(229,83,13)" fg:x="169" fg:w="1"/><text x="81.1112%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.48%)</title><rect x="80.8612%" y="389" width="0.4785%" height="15" fill="rgb(241,91,40)" fg:x="169" fg:w="1"/><text x="81.1112%" y="399.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.48%)</title><rect x="80.8612%" y="373" width="0.4785%" height="15" fill="rgb(225,3,45)" fg:x="169" fg:w="1"/><text x="81.1112%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.48%)</title><rect x="80.8612%" y="357" width="0.4785%" height="15" fill="rgb(244,223,14)" fg:x="169" fg:w="1"/><text x="81.1112%" y="367.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.48%)</title><rect x="80.8612%" y="341" width="0.4785%" height="15" fill="rgb(224,124,37)" fg:x="169" fg:w="1"/><text x="81.1112%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (7 samples, 3.35%)</title><rect x="81.3397%" y="437" width="3.3493%" height="15" fill="rgb(251,171,30)" fg:x="170" fg:w="7"/><text x="81.5897%" y="447.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 3.35%)</title><rect x="81.3397%" y="421" width="3.3493%" height="15" fill="rgb(236,46,54)" fg:x="170" fg:w="7"/><text x="81.5897%" y="431.50">cor..</text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 3.35%)</title><rect x="81.3397%" y="405" width="3.3493%" height="15" fill="rgb(245,213,5)" fg:x="170" fg:w="7"/><text x="81.5897%" y="415.50">&lt;co..</text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (7 samples, 3.35%)</title><rect x="81.3397%" y="389" width="3.3493%" height="15" fill="rgb(230,144,27)" fg:x="170" fg:w="7"/><text x="81.5897%" y="399.50">cor..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (6 samples, 2.87%)</title><rect x="81.8182%" y="373" width="2.8708%" height="15" fill="rgb(220,86,6)" fg:x="171" fg:w="6"/><text x="82.0682%" y="383.50">&lt;c..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (5 samples, 2.39%)</title><rect x="82.2967%" y="357" width="2.3923%" height="15" fill="rgb(240,20,13)" fg:x="172" fg:w="5"/><text x="82.5467%" y="367.50">co..</text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.48%)</title><rect x="84.2105%" y="341" width="0.4785%" height="15" fill="rgb(217,89,34)" fg:x="176" fg:w="1"/><text x="84.4605%" y="351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.96%)</title><rect x="85.6459%" y="357" width="0.9569%" height="15" fill="rgb(229,13,5)" fg:x="179" fg:w="2"/><text x="85.8959%" y="367.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.96%)</title><rect x="85.6459%" y="341" width="0.9569%" height="15" fill="rgb(244,67,35)" fg:x="179" fg:w="2"/><text x="85.8959%" y="351.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.96%)</title><rect x="85.6459%" y="325" width="0.9569%" height="15" fill="rgb(221,40,2)" fg:x="179" fg:w="2"/><text x="85.8959%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 6.22%)</title><rect x="80.8612%" y="565" width="6.2201%" height="15" fill="rgb(237,157,21)" fg:x="169" fg:w="13"/><text x="81.1112%" y="575.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::find (13 samples, 6.22%)</title><rect x="80.8612%" y="549" width="6.2201%" height="15" fill="rgb(222,94,11)" fg:x="169" fg:w="13"/><text x="81.1112%" y="559.50">core::it..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 6.22%)</title><rect x="80.8612%" y="533" width="6.2201%" height="15" fill="rgb(249,113,6)" fg:x="169" fg:w="13"/><text x="81.1112%" y="543.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 6.22%)</title><rect x="80.8612%" y="517" width="6.2201%" height="15" fill="rgb(238,137,36)" fg:x="169" fg:w="13"/><text x="81.1112%" y="527.50">core::it..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (13 samples, 6.22%)</title><rect x="80.8612%" y="501" width="6.2201%" height="15" fill="rgb(210,102,26)" fg:x="169" fg:w="13"/><text x="81.1112%" y="511.50">core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (13 samples, 6.22%)</title><rect x="80.8612%" y="485" width="6.2201%" height="15" fill="rgb(218,30,30)" fg:x="169" fg:w="13"/><text x="81.1112%" y="495.50">core::it..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 6.22%)</title><rect x="80.8612%" y="469" width="6.2201%" height="15" fill="rgb(214,67,26)" fg:x="169" fg:w="13"/><text x="81.1112%" y="479.50">core::op..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (13 samples, 6.22%)</title><rect x="80.8612%" y="453" width="6.2201%" height="15" fill="rgb(251,9,53)" fg:x="169" fg:w="13"/><text x="81.1112%" y="463.50">y2021::d..</text></g><g><title>core::str::&lt;impl str&gt;::matches (5 samples, 2.39%)</title><rect x="84.6890%" y="437" width="2.3923%" height="15" fill="rgb(228,204,25)" fg:x="177" fg:w="5"/><text x="84.9390%" y="447.50">co..</text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (5 samples, 2.39%)</title><rect x="84.6890%" y="421" width="2.3923%" height="15" fill="rgb(207,153,8)" fg:x="177" fg:w="5"/><text x="84.9390%" y="431.50">&lt;&amp;..</text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (5 samples, 2.39%)</title><rect x="84.6890%" y="405" width="2.3923%" height="15" fill="rgb(242,9,16)" fg:x="177" fg:w="5"/><text x="84.9390%" y="415.50">&lt;&amp;..</text></g><g><title>core::str::pattern::StrSearcher::new (4 samples, 1.91%)</title><rect x="85.1675%" y="389" width="1.9139%" height="15" fill="rgb(217,211,10)" fg:x="178" fg:w="4"/><text x="85.4175%" y="399.50">c..</text></g><g><title>core::str::pattern::TwoWaySearcher::new (3 samples, 1.44%)</title><rect x="85.6459%" y="373" width="1.4354%" height="15" fill="rgb(219,228,52)" fg:x="179" fg:w="3"/><text x="85.8959%" y="383.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.48%)</title><rect x="86.6029%" y="357" width="0.4785%" height="15" fill="rgb(231,92,29)" fg:x="181" fg:w="1"/><text x="86.8529%" y="367.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.48%)</title><rect x="87.0813%" y="549" width="0.4785%" height="15" fill="rgb(232,8,23)" fg:x="182" fg:w="1"/><text x="87.3313%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.48%)</title><rect x="87.0813%" y="533" width="0.4785%" height="15" fill="rgb(216,211,34)" fg:x="182" fg:w="1"/><text x="87.3313%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.48%)</title><rect x="87.0813%" y="517" width="0.4785%" height="15" fill="rgb(236,151,0)" fg:x="182" fg:w="1"/><text x="87.3313%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.48%)</title><rect x="87.0813%" y="501" width="0.4785%" height="15" fill="rgb(209,168,3)" fg:x="182" fg:w="1"/><text x="87.3313%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.48%)</title><rect x="87.0813%" y="485" width="0.4785%" height="15" fill="rgb(208,129,28)" fg:x="182" fg:w="1"/><text x="87.3313%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="87.0813%" y="469" width="0.4785%" height="15" fill="rgb(229,78,22)" fg:x="182" fg:w="1"/><text x="87.3313%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.48%)</title><rect x="87.5598%" y="341" width="0.4785%" height="15" fill="rgb(228,187,13)" fg:x="183" fg:w="1"/><text x="87.8098%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.48%)</title><rect x="87.5598%" y="325" width="0.4785%" height="15" fill="rgb(240,119,24)" fg:x="183" fg:w="1"/><text x="87.8098%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.48%)</title><rect x="87.5598%" y="309" width="0.4785%" height="15" fill="rgb(209,194,42)" fg:x="183" fg:w="1"/><text x="87.8098%" y="319.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.48%)</title><rect x="87.5598%" y="293" width="0.4785%" height="15" fill="rgb(247,200,46)" fg:x="183" fg:w="1"/><text x="87.8098%" y="303.50"></text></g><g><title>_int_realloc (1 samples, 0.48%)</title><rect x="87.5598%" y="277" width="0.4785%" height="15" fill="rgb(218,76,16)" fg:x="183" fg:w="1"/><text x="87.8098%" y="287.50"></text></g><g><title>_int_free (1 samples, 0.48%)</title><rect x="87.5598%" y="261" width="0.4785%" height="15" fill="rgb(225,21,48)" fg:x="183" fg:w="1"/><text x="87.8098%" y="271.50"></text></g><g><title>__rust_alloc (1 samples, 0.48%)</title><rect x="88.0383%" y="341" width="0.4785%" height="15" fill="rgb(239,223,50)" fg:x="184" fg:w="1"/><text x="88.2883%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 1.91%)</title><rect x="87.5598%" y="517" width="1.9139%" height="15" fill="rgb(244,45,21)" fg:x="183" fg:w="4"/><text x="87.8098%" y="527.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 1.91%)</title><rect x="87.5598%" y="501" width="1.9139%" height="15" fill="rgb(232,33,43)" fg:x="183" fg:w="4"/><text x="87.8098%" y="511.50">&lt;..</text></g><g><title>alloc::string::String::push_str (4 samples, 1.91%)</title><rect x="87.5598%" y="485" width="1.9139%" height="15" fill="rgb(209,8,3)" fg:x="183" fg:w="4"/><text x="87.8098%" y="495.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 1.91%)</title><rect x="87.5598%" y="469" width="1.9139%" height="15" fill="rgb(214,25,53)" fg:x="183" fg:w="4"/><text x="87.8098%" y="479.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 1.91%)</title><rect x="87.5598%" y="453" width="1.9139%" height="15" fill="rgb(254,186,54)" fg:x="183" fg:w="4"/><text x="87.8098%" y="463.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 1.91%)</title><rect x="87.5598%" y="437" width="1.9139%" height="15" fill="rgb(208,174,49)" fg:x="183" fg:w="4"/><text x="87.8098%" y="447.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 1.91%)</title><rect x="87.5598%" y="421" width="1.9139%" height="15" fill="rgb(233,191,51)" fg:x="183" fg:w="4"/><text x="87.8098%" y="431.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 1.91%)</title><rect x="87.5598%" y="405" width="1.9139%" height="15" fill="rgb(222,134,10)" fg:x="183" fg:w="4"/><text x="87.8098%" y="415.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 1.91%)</title><rect x="87.5598%" y="389" width="1.9139%" height="15" fill="rgb(230,226,20)" fg:x="183" fg:w="4"/><text x="87.8098%" y="399.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 1.91%)</title><rect x="87.5598%" y="373" width="1.9139%" height="15" fill="rgb(251,111,25)" fg:x="183" fg:w="4"/><text x="87.8098%" y="383.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 1.91%)</title><rect x="87.5598%" y="357" width="1.9139%" height="15" fill="rgb(224,40,46)" fg:x="183" fg:w="4"/><text x="87.8098%" y="367.50">a..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.96%)</title><rect x="88.5167%" y="341" width="0.9569%" height="15" fill="rgb(236,108,47)" fg:x="185" fg:w="2"/><text x="88.7667%" y="351.50"></text></g><g><title>alloc::fmt::format (6 samples, 2.87%)</title><rect x="87.0813%" y="565" width="2.8708%" height="15" fill="rgb(234,93,0)" fg:x="182" fg:w="6"/><text x="87.3313%" y="575.50">al..</text></g><g><title>core::fmt::Write::write_fmt (5 samples, 2.39%)</title><rect x="87.5598%" y="549" width="2.3923%" height="15" fill="rgb(224,213,32)" fg:x="183" fg:w="5"/><text x="87.8098%" y="559.50">co..</text></g><g><title>core::fmt::write (5 samples, 2.39%)</title><rect x="87.5598%" y="533" width="2.3923%" height="15" fill="rgb(251,11,48)" fg:x="183" fg:w="5"/><text x="87.8098%" y="543.50">co..</text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.48%)</title><rect x="89.4737%" y="517" width="0.4785%" height="15" fill="rgb(236,173,5)" fg:x="187" fg:w="1"/><text x="89.7237%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.48%)</title><rect x="89.9522%" y="565" width="0.4785%" height="15" fill="rgb(230,95,12)" fg:x="188" fg:w="1"/><text x="90.2022%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.48%)</title><rect x="89.9522%" y="549" width="0.4785%" height="15" fill="rgb(232,209,1)" fg:x="188" fg:w="1"/><text x="90.2022%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.48%)</title><rect x="89.9522%" y="533" width="0.4785%" height="15" fill="rgb(232,6,1)" fg:x="188" fg:w="1"/><text x="90.2022%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.48%)</title><rect x="89.9522%" y="517" width="0.4785%" height="15" fill="rgb(210,224,50)" fg:x="188" fg:w="1"/><text x="90.2022%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.48%)</title><rect x="89.9522%" y="501" width="0.4785%" height="15" fill="rgb(228,127,35)" fg:x="188" fg:w="1"/><text x="90.2022%" y="511.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.48%)</title><rect x="89.9522%" y="485" width="0.4785%" height="15" fill="rgb(245,102,45)" fg:x="188" fg:w="1"/><text x="90.2022%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="89.9522%" y="469" width="0.4785%" height="15" fill="rgb(214,1,49)" fg:x="188" fg:w="1"/><text x="90.2022%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="89.9522%" y="453" width="0.4785%" height="15" fill="rgb(226,163,40)" fg:x="188" fg:w="1"/><text x="90.2022%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="89.9522%" y="437" width="0.4785%" height="15" fill="rgb(239,212,28)" fg:x="188" fg:w="1"/><text x="90.2022%" y="447.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.48%)</title><rect x="89.9522%" y="421" width="0.4785%" height="15" fill="rgb(220,20,13)" fg:x="188" fg:w="1"/><text x="90.2022%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.48%)</title><rect x="90.4306%" y="485" width="0.4785%" height="15" fill="rgb(210,164,35)" fg:x="189" fg:w="1"/><text x="90.6806%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.48%)</title><rect x="90.4306%" y="469" width="0.4785%" height="15" fill="rgb(248,109,41)" fg:x="189" fg:w="1"/><text x="90.6806%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="90.4306%" y="453" width="0.4785%" height="15" fill="rgb(238,23,50)" fg:x="189" fg:w="1"/><text x="90.6806%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="90.4306%" y="437" width="0.4785%" height="15" fill="rgb(211,48,49)" fg:x="189" fg:w="1"/><text x="90.6806%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="90.4306%" y="421" width="0.4785%" height="15" fill="rgb(223,36,21)" fg:x="189" fg:w="1"/><text x="90.6806%" y="431.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.48%)</title><rect x="90.4306%" y="405" width="0.4785%" height="15" fill="rgb(207,123,46)" fg:x="189" fg:w="1"/><text x="90.6806%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.48%)</title><rect x="90.4306%" y="389" width="0.4785%" height="15" fill="rgb(240,218,32)" fg:x="189" fg:w="1"/><text x="90.6806%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.48%)</title><rect x="90.9091%" y="485" width="0.4785%" height="15" fill="rgb(252,5,43)" fg:x="190" fg:w="1"/><text x="91.1591%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.48%)</title><rect x="90.9091%" y="469" width="0.4785%" height="15" fill="rgb(252,84,19)" fg:x="190" fg:w="1"/><text x="91.1591%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.48%)</title><rect x="90.9091%" y="453" width="0.4785%" height="15" fill="rgb(243,152,39)" fg:x="190" fg:w="1"/><text x="91.1591%" y="463.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (3 samples, 1.44%)</title><rect x="90.4306%" y="565" width="1.4354%" height="15" fill="rgb(234,160,15)" fg:x="189" fg:w="3"/><text x="90.6806%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (3 samples, 1.44%)</title><rect x="90.4306%" y="549" width="1.4354%" height="15" fill="rgb(237,34,20)" fg:x="189" fg:w="3"/><text x="90.6806%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 1.44%)</title><rect x="90.4306%" y="533" width="1.4354%" height="15" fill="rgb(229,97,13)" fg:x="189" fg:w="3"/><text x="90.6806%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 1.44%)</title><rect x="90.4306%" y="517" width="1.4354%" height="15" fill="rgb(234,71,50)" fg:x="189" fg:w="3"/><text x="90.6806%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 1.44%)</title><rect x="90.4306%" y="501" width="1.4354%" height="15" fill="rgb(253,155,4)" fg:x="189" fg:w="3"/><text x="90.6806%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.48%)</title><rect x="91.3876%" y="485" width="0.4785%" height="15" fill="rgb(222,185,37)" fg:x="191" fg:w="1"/><text x="91.6376%" y="495.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.48%)</title><rect x="91.3876%" y="469" width="0.4785%" height="15" fill="rgb(251,177,13)" fg:x="191" fg:w="1"/><text x="91.6376%" y="479.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.48%)</title><rect x="91.3876%" y="453" width="0.4785%" height="15" fill="rgb(250,179,40)" fg:x="191" fg:w="1"/><text x="91.6376%" y="463.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.48%)</title><rect x="91.3876%" y="437" width="0.4785%" height="15" fill="rgb(242,44,2)" fg:x="191" fg:w="1"/><text x="91.6376%" y="447.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.48%)</title><rect x="91.8660%" y="565" width="0.4785%" height="15" fill="rgb(216,177,13)" fg:x="192" fg:w="1"/><text x="92.1160%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.48%)</title><rect x="91.8660%" y="549" width="0.4785%" height="15" fill="rgb(216,106,43)" fg:x="192" fg:w="1"/><text x="92.1160%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.48%)</title><rect x="91.8660%" y="533" width="0.4785%" height="15" fill="rgb(216,183,2)" fg:x="192" fg:w="1"/><text x="92.1160%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.48%)</title><rect x="91.8660%" y="517" width="0.4785%" height="15" fill="rgb(249,75,3)" fg:x="192" fg:w="1"/><text x="92.1160%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.48%)</title><rect x="91.8660%" y="501" width="0.4785%" height="15" fill="rgb(219,67,39)" fg:x="192" fg:w="1"/><text x="92.1160%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 3.83%)</title><rect x="92.3445%" y="549" width="3.8278%" height="15" fill="rgb(253,228,2)" fg:x="193" fg:w="8"/><text x="92.5945%" y="559.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find (8 samples, 3.83%)</title><rect x="92.3445%" y="533" width="3.8278%" height="15" fill="rgb(235,138,27)" fg:x="193" fg:w="8"/><text x="92.5945%" y="543.50">core..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 3.83%)</title><rect x="92.3445%" y="517" width="3.8278%" height="15" fill="rgb(236,97,51)" fg:x="193" fg:w="8"/><text x="92.5945%" y="527.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 3.83%)</title><rect x="92.3445%" y="501" width="3.8278%" height="15" fill="rgb(240,80,30)" fg:x="193" fg:w="8"/><text x="92.5945%" y="511.50">core..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (8 samples, 3.83%)</title><rect x="92.3445%" y="485" width="3.8278%" height="15" fill="rgb(230,178,19)" fg:x="193" fg:w="8"/><text x="92.5945%" y="495.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (8 samples, 3.83%)</title><rect x="92.3445%" y="469" width="3.8278%" height="15" fill="rgb(210,190,27)" fg:x="193" fg:w="8"/><text x="92.5945%" y="479.50">core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8 samples, 3.83%)</title><rect x="92.3445%" y="453" width="3.8278%" height="15" fill="rgb(222,107,31)" fg:x="193" fg:w="8"/><text x="92.5945%" y="463.50">core..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (8 samples, 3.83%)</title><rect x="92.3445%" y="437" width="3.8278%" height="15" fill="rgb(216,127,34)" fg:x="193" fg:w="8"/><text x="92.5945%" y="447.50">y202..</text></g><g><title>core::iter::traits::iterator::Iterator::count (8 samples, 3.83%)</title><rect x="92.3445%" y="421" width="3.8278%" height="15" fill="rgb(234,116,52)" fg:x="193" fg:w="8"/><text x="92.5945%" y="431.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 2.87%)</title><rect x="93.3014%" y="405" width="2.8708%" height="15" fill="rgb(222,124,15)" fg:x="195" fg:w="6"/><text x="93.5514%" y="415.50">co..</text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 2.39%)</title><rect x="93.7799%" y="389" width="2.3923%" height="15" fill="rgb(231,179,28)" fg:x="196" fg:w="5"/><text x="94.0299%" y="399.50">&lt;c..</text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (5 samples, 2.39%)</title><rect x="93.7799%" y="373" width="2.3923%" height="15" fill="rgb(226,93,45)" fg:x="196" fg:w="5"/><text x="94.0299%" y="383.50">co..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (5 samples, 2.39%)</title><rect x="93.7799%" y="357" width="2.3923%" height="15" fill="rgb(215,8,51)" fg:x="196" fg:w="5"/><text x="94.0299%" y="367.50">&lt;c..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (5 samples, 2.39%)</title><rect x="93.7799%" y="341" width="2.3923%" height="15" fill="rgb(223,106,5)" fg:x="196" fg:w="5"/><text x="94.0299%" y="351.50">co..</text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (3 samples, 1.44%)</title><rect x="94.7368%" y="325" width="1.4354%" height="15" fill="rgb(250,191,5)" fg:x="198" fg:w="3"/><text x="94.9868%" y="335.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.48%)</title><rect x="96.1722%" y="549" width="0.4785%" height="15" fill="rgb(242,132,44)" fg:x="201" fg:w="1"/><text x="96.4222%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.48%)</title><rect x="96.1722%" y="533" width="0.4785%" height="15" fill="rgb(251,152,29)" fg:x="201" fg:w="1"/><text x="96.4222%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.48%)</title><rect x="96.1722%" y="517" width="0.4785%" height="15" fill="rgb(218,179,5)" fg:x="201" fg:w="1"/><text x="96.4222%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.48%)</title><rect x="96.1722%" y="501" width="0.4785%" height="15" fill="rgb(227,67,19)" fg:x="201" fg:w="1"/><text x="96.4222%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.48%)</title><rect x="96.1722%" y="485" width="0.4785%" height="15" fill="rgb(233,119,31)" fg:x="201" fg:w="1"/><text x="96.4222%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.48%)</title><rect x="96.1722%" y="469" width="0.4785%" height="15" fill="rgb(241,120,22)" fg:x="201" fg:w="1"/><text x="96.4222%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.48%)</title><rect x="96.1722%" y="453" width="0.4785%" height="15" fill="rgb(224,102,30)" fg:x="201" fg:w="1"/><text x="96.4222%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.48%)</title><rect x="96.1722%" y="437" width="0.4785%" height="15" fill="rgb(210,164,37)" fg:x="201" fg:w="1"/><text x="96.4222%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.48%)</title><rect x="96.1722%" y="421" width="0.4785%" height="15" fill="rgb(226,191,16)" fg:x="201" fg:w="1"/><text x="96.4222%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.48%)</title><rect x="96.1722%" y="405" width="0.4785%" height="15" fill="rgb(214,40,45)" fg:x="201" fg:w="1"/><text x="96.4222%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.48%)</title><rect x="96.1722%" y="389" width="0.4785%" height="15" fill="rgb(244,29,26)" fg:x="201" fg:w="1"/><text x="96.4222%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.48%)</title><rect x="96.1722%" y="373" width="0.4785%" height="15" fill="rgb(216,16,5)" fg:x="201" fg:w="1"/><text x="96.4222%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.48%)</title><rect x="96.1722%" y="357" width="0.4785%" height="15" fill="rgb(249,76,35)" fg:x="201" fg:w="1"/><text x="96.4222%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.48%)</title><rect x="96.1722%" y="341" width="0.4785%" height="15" fill="rgb(207,11,44)" fg:x="201" fg:w="1"/><text x="96.4222%" y="351.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.48%)</title><rect x="96.6507%" y="549" width="0.4785%" height="15" fill="rgb(228,190,49)" fg:x="202" fg:w="1"/><text x="96.9007%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.48%)</title><rect x="96.6507%" y="533" width="0.4785%" height="15" fill="rgb(214,173,12)" fg:x="202" fg:w="1"/><text x="96.9007%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.48%)</title><rect x="96.6507%" y="517" width="0.4785%" height="15" fill="rgb(218,26,35)" fg:x="202" fg:w="1"/><text x="96.9007%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.48%)</title><rect x="96.6507%" y="501" width="0.4785%" height="15" fill="rgb(220,200,19)" fg:x="202" fg:w="1"/><text x="96.9007%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.48%)</title><rect x="96.6507%" y="485" width="0.4785%" height="15" fill="rgb(239,95,49)" fg:x="202" fg:w="1"/><text x="96.9007%" y="495.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.48%)</title><rect x="96.6507%" y="469" width="0.4785%" height="15" fill="rgb(235,85,53)" fg:x="202" fg:w="1"/><text x="96.9007%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.48%)</title><rect x="96.6507%" y="453" width="0.4785%" height="15" fill="rgb(233,133,31)" fg:x="202" fg:w="1"/><text x="96.9007%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.48%)</title><rect x="96.6507%" y="437" width="0.4785%" height="15" fill="rgb(218,25,20)" fg:x="202" fg:w="1"/><text x="96.9007%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.48%)</title><rect x="96.6507%" y="421" width="0.4785%" height="15" fill="rgb(252,210,38)" fg:x="202" fg:w="1"/><text x="96.9007%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.48%)</title><rect x="96.6507%" y="405" width="0.4785%" height="15" fill="rgb(242,134,21)" fg:x="202" fg:w="1"/><text x="96.9007%" y="415.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.48%)</title><rect x="96.6507%" y="389" width="0.4785%" height="15" fill="rgb(213,28,48)" fg:x="202" fg:w="1"/><text x="96.9007%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.48%)</title><rect x="97.1292%" y="405" width="0.4785%" height="15" fill="rgb(250,196,2)" fg:x="203" fg:w="1"/><text x="97.3792%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.48%)</title><rect x="97.1292%" y="389" width="0.4785%" height="15" fill="rgb(227,5,17)" fg:x="203" fg:w="1"/><text x="97.3792%" y="399.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.48%)</title><rect x="97.1292%" y="373" width="0.4785%" height="15" fill="rgb(221,226,24)" fg:x="203" fg:w="1"/><text x="97.3792%" y="383.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.48%)</title><rect x="97.1292%" y="357" width="0.4785%" height="15" fill="rgb(211,5,48)" fg:x="203" fg:w="1"/><text x="97.3792%" y="367.50"></text></g><g><title>y2021::d12::main2::run (161 samples, 77.03%)</title><rect x="21.0526%" y="805" width="77.0335%" height="15" fill="rgb(219,150,6)" fg:x="44" fg:w="161"/><text x="21.3026%" y="815.50">y2021::d12::main2::run</text></g><g><title>y2021::d12::main2::p02 (160 samples, 76.56%)</title><rect x="21.5311%" y="789" width="76.5550%" height="15" fill="rgb(251,46,16)" fg:x="45" fg:w="160"/><text x="21.7811%" y="799.50">y2021::d12::main2::p02</text></g><g><title>y2021::d12::main2::traverse (151 samples, 72.25%)</title><rect x="25.8373%" y="773" width="72.2488%" height="15" fill="rgb(220,204,40)" fg:x="54" fg:w="151"/><text x="26.0873%" y="783.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (151 samples, 72.25%)</title><rect x="25.8373%" y="757" width="72.2488%" height="15" fill="rgb(211,85,2)" fg:x="54" fg:w="151"/><text x="26.0873%" y="767.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (151 samples, 72.25%)</title><rect x="25.8373%" y="741" width="72.2488%" height="15" fill="rgb(229,17,7)" fg:x="54" fg:w="151"/><text x="26.0873%" y="751.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (151 samples, 72.25%)</title><rect x="25.8373%" y="725" width="72.2488%" height="15" fill="rgb(239,72,28)" fg:x="54" fg:w="151"/><text x="26.0873%" y="735.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (151 samples, 72.25%)</title><rect x="25.8373%" y="709" width="72.2488%" height="15" fill="rgb(230,47,54)" fg:x="54" fg:w="151"/><text x="26.0873%" y="719.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (151 samples, 72.25%)</title><rect x="25.8373%" y="693" width="72.2488%" height="15" fill="rgb(214,50,8)" fg:x="54" fg:w="151"/><text x="26.0873%" y="703.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (148 samples, 70.81%)</title><rect x="27.2727%" y="677" width="70.8134%" height="15" fill="rgb(216,198,43)" fg:x="57" fg:w="148"/><text x="27.5227%" y="687.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (146 samples, 69.86%)</title><rect x="28.2297%" y="661" width="69.8565%" height="15" fill="rgb(234,20,35)" fg:x="59" fg:w="146"/><text x="28.4797%" y="671.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (132 samples, 63.16%)</title><rect x="34.9282%" y="645" width="63.1579%" height="15" fill="rgb(254,45,19)" fg:x="73" fg:w="132"/><text x="35.1782%" y="655.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (112 samples, 53.59%)</title><rect x="44.4976%" y="629" width="53.5885%" height="15" fill="rgb(219,14,44)" fg:x="93" fg:w="112"/><text x="44.7476%" y="639.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (90 samples, 43.06%)</title><rect x="55.0239%" y="613" width="43.0622%" height="15" fill="rgb(217,220,26)" fg:x="115" fg:w="90"/><text x="55.2739%" y="623.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (60 samples, 28.71%)</title><rect x="69.3780%" y="597" width="28.7081%" height="15" fill="rgb(213,158,28)" fg:x="145" fg:w="60"/><text x="69.6280%" y="607.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (37 samples, 17.70%)</title><rect x="80.3828%" y="581" width="17.7033%" height="15" fill="rgb(252,51,52)" fg:x="168" fg:w="37"/><text x="80.6328%" y="591.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (12 samples, 5.74%)</title><rect x="92.3445%" y="565" width="5.7416%" height="15" fill="rgb(246,89,16)" fg:x="193" fg:w="12"/><text x="92.5945%" y="575.50">y2021::..</text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.96%)</title><rect x="97.1292%" y="549" width="0.9569%" height="15" fill="rgb(216,158,49)" fg:x="203" fg:w="2"/><text x="97.3792%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.96%)</title><rect x="97.1292%" y="533" width="0.9569%" height="15" fill="rgb(236,107,19)" fg:x="203" fg:w="2"/><text x="97.3792%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.96%)</title><rect x="97.1292%" y="517" width="0.9569%" height="15" fill="rgb(228,185,30)" fg:x="203" fg:w="2"/><text x="97.3792%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.96%)</title><rect x="97.1292%" y="501" width="0.9569%" height="15" fill="rgb(246,134,8)" fg:x="203" fg:w="2"/><text x="97.3792%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.96%)</title><rect x="97.1292%" y="485" width="0.9569%" height="15" fill="rgb(214,143,50)" fg:x="203" fg:w="2"/><text x="97.3792%" y="495.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.96%)</title><rect x="97.1292%" y="469" width="0.9569%" height="15" fill="rgb(228,75,8)" fg:x="203" fg:w="2"/><text x="97.3792%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.96%)</title><rect x="97.1292%" y="453" width="0.9569%" height="15" fill="rgb(207,175,4)" fg:x="203" fg:w="2"/><text x="97.3792%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.96%)</title><rect x="97.1292%" y="437" width="0.9569%" height="15" fill="rgb(205,108,24)" fg:x="203" fg:w="2"/><text x="97.3792%" y="447.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.96%)</title><rect x="97.1292%" y="421" width="0.9569%" height="15" fill="rgb(244,120,49)" fg:x="203" fg:w="2"/><text x="97.3792%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.48%)</title><rect x="97.6077%" y="405" width="0.4785%" height="15" fill="rgb(223,47,38)" fg:x="204" fg:w="1"/><text x="97.8577%" y="415.50"></text></g><g><title>y2021::d13::main::run (1 samples, 0.48%)</title><rect x="98.0861%" y="805" width="0.4785%" height="15" fill="rgb(229,179,11)" fg:x="205" fg:w="1"/><text x="98.3361%" y="815.50"></text></g><g><title>y2021::d13::main::p01 (1 samples, 0.48%)</title><rect x="98.0861%" y="789" width="0.4785%" height="15" fill="rgb(231,122,1)" fg:x="205" fg:w="1"/><text x="98.3361%" y="799.50"></text></g><g><title>y2021::d13::main::parse_input (1 samples, 0.48%)</title><rect x="98.0861%" y="773" width="0.4785%" height="15" fill="rgb(245,119,9)" fg:x="205" fg:w="1"/><text x="98.3361%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.48%)</title><rect x="98.0861%" y="757" width="0.4785%" height="15" fill="rgb(241,163,25)" fg:x="205" fg:w="1"/><text x="98.3361%" y="767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="98.0861%" y="741" width="0.4785%" height="15" fill="rgb(217,214,3)" fg:x="205" fg:w="1"/><text x="98.3361%" y="751.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.48%)</title><rect x="98.0861%" y="725" width="0.4785%" height="15" fill="rgb(240,86,28)" fg:x="205" fg:w="1"/><text x="98.3361%" y="735.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.48%)</title><rect x="98.0861%" y="709" width="0.4785%" height="15" fill="rgb(215,47,9)" fg:x="205" fg:w="1"/><text x="98.3361%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.48%)</title><rect x="98.0861%" y="693" width="0.4785%" height="15" fill="rgb(252,25,45)" fg:x="205" fg:w="1"/><text x="98.3361%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.48%)</title><rect x="98.0861%" y="677" width="0.4785%" height="15" fill="rgb(251,164,9)" fg:x="205" fg:w="1"/><text x="98.3361%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.48%)</title><rect x="98.0861%" y="661" width="0.4785%" height="15" fill="rgb(233,194,0)" fg:x="205" fg:w="1"/><text x="98.3361%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.48%)</title><rect x="98.0861%" y="645" width="0.4785%" height="15" fill="rgb(249,111,24)" fg:x="205" fg:w="1"/><text x="98.3361%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.48%)</title><rect x="98.0861%" y="629" width="0.4785%" height="15" fill="rgb(250,223,3)" fg:x="205" fg:w="1"/><text x="98.3361%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.48%)</title><rect x="98.0861%" y="613" width="0.4785%" height="15" fill="rgb(236,178,37)" fg:x="205" fg:w="1"/><text x="98.3361%" y="623.50"></text></g><g><title>y2021::d13::main::parse_input::{{closure}} (1 samples, 0.48%)</title><rect x="98.0861%" y="597" width="0.4785%" height="15" fill="rgb(241,158,50)" fg:x="205" fg:w="1"/><text x="98.3361%" y="607.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 0.48%)</title><rect x="98.0861%" y="581" width="0.4785%" height="15" fill="rgb(213,121,41)" fg:x="205" fg:w="1"/><text x="98.3361%" y="591.50"></text></g><g><title>&lt;y2021::types::point::Point as core::str::traits::FromStr&gt;::from_str (1 samples, 0.48%)</title><rect x="98.0861%" y="565" width="0.4785%" height="15" fill="rgb(240,92,3)" fg:x="205" fg:w="1"/><text x="98.3361%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.48%)</title><rect x="98.0861%" y="549" width="0.4785%" height="15" fill="rgb(205,123,3)" fg:x="205" fg:w="1"/><text x="98.3361%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="98.0861%" y="533" width="0.4785%" height="15" fill="rgb(205,97,47)" fg:x="205" fg:w="1"/><text x="98.3361%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="98.0861%" y="517" width="0.4785%" height="15" fill="rgb(247,152,14)" fg:x="205" fg:w="1"/><text x="98.3361%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.48%)</title><rect x="98.0861%" y="501" width="0.4785%" height="15" fill="rgb(248,195,53)" fg:x="205" fg:w="1"/><text x="98.3361%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.48%)</title><rect x="98.0861%" y="485" width="0.4785%" height="15" fill="rgb(226,201,16)" fg:x="205" fg:w="1"/><text x="98.3361%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.48%)</title><rect x="98.0861%" y="469" width="0.4785%" height="15" fill="rgb(205,98,0)" fg:x="205" fg:w="1"/><text x="98.3361%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.48%)</title><rect x="98.0861%" y="453" width="0.4785%" height="15" fill="rgb(214,191,48)" fg:x="205" fg:w="1"/><text x="98.3361%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.48%)</title><rect x="98.0861%" y="437" width="0.4785%" height="15" fill="rgb(237,112,39)" fg:x="205" fg:w="1"/><text x="98.3361%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.48%)</title><rect x="98.0861%" y="421" width="0.4785%" height="15" fill="rgb(247,203,27)" fg:x="205" fg:w="1"/><text x="98.3361%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.48%)</title><rect x="98.0861%" y="405" width="0.4785%" height="15" fill="rgb(235,124,28)" fg:x="205" fg:w="1"/><text x="98.3361%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.48%)</title><rect x="98.0861%" y="389" width="0.4785%" height="15" fill="rgb(208,207,46)" fg:x="205" fg:w="1"/><text x="98.3361%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.48%)</title><rect x="98.0861%" y="373" width="0.4785%" height="15" fill="rgb(234,176,4)" fg:x="205" fg:w="1"/><text x="98.3361%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.48%)</title><rect x="98.0861%" y="357" width="0.4785%" height="15" fill="rgb(230,133,28)" fg:x="205" fg:w="1"/><text x="98.3361%" y="367.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.48%)</title><rect x="98.0861%" y="341" width="0.4785%" height="15" fill="rgb(211,137,40)" fg:x="205" fg:w="1"/><text x="98.3361%" y="351.50"></text></g><g><title>__rdl_realloc (1 samples, 0.48%)</title><rect x="98.0861%" y="325" width="0.4785%" height="15" fill="rgb(254,35,13)" fg:x="205" fg:w="1"/><text x="98.3361%" y="335.50"></text></g><g><title>__libc_start_main (199 samples, 95.22%)</title><rect x="3.8278%" y="1045" width="95.2153%" height="15" fill="rgb(225,49,51)" fg:x="8" fg:w="199"/><text x="4.0778%" y="1055.50">__libc_start_main</text></g><g><title>main (199 samples, 95.22%)</title><rect x="3.8278%" y="1029" width="95.2153%" height="15" fill="rgb(251,10,15)" fg:x="8" fg:w="199"/><text x="4.0778%" y="1039.50">main</text></g><g><title>std::rt::lang_start_internal (199 samples, 95.22%)</title><rect x="3.8278%" y="1013" width="95.2153%" height="15" fill="rgb(228,207,15)" fg:x="8" fg:w="199"/><text x="4.0778%" y="1023.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (199 samples, 95.22%)</title><rect x="3.8278%" y="997" width="95.2153%" height="15" fill="rgb(241,99,19)" fg:x="8" fg:w="199"/><text x="4.0778%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (199 samples, 95.22%)</title><rect x="3.8278%" y="981" width="95.2153%" height="15" fill="rgb(207,104,49)" fg:x="8" fg:w="199"/><text x="4.0778%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (199 samples, 95.22%)</title><rect x="3.8278%" y="965" width="95.2153%" height="15" fill="rgb(234,99,18)" fg:x="8" fg:w="199"/><text x="4.0778%" y="975.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (199 samples, 95.22%)</title><rect x="3.8278%" y="949" width="95.2153%" height="15" fill="rgb(213,191,49)" fg:x="8" fg:w="199"/><text x="4.0778%" y="959.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (199 samples, 95.22%)</title><rect x="3.8278%" y="933" width="95.2153%" height="15" fill="rgb(210,226,19)" fg:x="8" fg:w="199"/><text x="4.0778%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (199 samples, 95.22%)</title><rect x="3.8278%" y="917" width="95.2153%" height="15" fill="rgb(229,97,18)" fg:x="8" fg:w="199"/><text x="4.0778%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (199 samples, 95.22%)</title><rect x="3.8278%" y="901" width="95.2153%" height="15" fill="rgb(211,167,15)" fg:x="8" fg:w="199"/><text x="4.0778%" y="911.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (199 samples, 95.22%)</title><rect x="3.8278%" y="885" width="95.2153%" height="15" fill="rgb(210,169,34)" fg:x="8" fg:w="199"/><text x="4.0778%" y="895.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (199 samples, 95.22%)</title><rect x="3.8278%" y="869" width="95.2153%" height="15" fill="rgb(241,121,31)" fg:x="8" fg:w="199"/><text x="4.0778%" y="879.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (199 samples, 95.22%)</title><rect x="3.8278%" y="853" width="95.2153%" height="15" fill="rgb(232,40,11)" fg:x="8" fg:w="199"/><text x="4.0778%" y="863.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (199 samples, 95.22%)</title><rect x="3.8278%" y="837" width="95.2153%" height="15" fill="rgb(205,86,26)" fg:x="8" fg:w="199"/><text x="4.0778%" y="847.50">core::ops::function::FnOnce::call_once</text></g><g><title>y2021::main (199 samples, 95.22%)</title><rect x="3.8278%" y="821" width="95.2153%" height="15" fill="rgb(231,126,28)" fg:x="8" fg:w="199"/><text x="4.0778%" y="831.50">y2021::main</text></g><g><title>y2021::d14::main::run (1 samples, 0.48%)</title><rect x="98.5646%" y="805" width="0.4785%" height="15" fill="rgb(219,221,18)" fg:x="206" fg:w="1"/><text x="98.8146%" y="815.50"></text></g><g><title>y2021::d14::main::p02 (1 samples, 0.48%)</title><rect x="98.5646%" y="789" width="0.4785%" height="15" fill="rgb(211,40,0)" fg:x="206" fg:w="1"/><text x="98.8146%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.48%)</title><rect x="98.5646%" y="773" width="0.4785%" height="15" fill="rgb(239,85,43)" fg:x="206" fg:w="1"/><text x="98.8146%" y="783.50"></text></g><g><title>y2021::d14::main::p02::{{closure}} (1 samples, 0.48%)</title><rect x="98.5646%" y="757" width="0.4785%" height="15" fill="rgb(231,55,21)" fg:x="206" fg:w="1"/><text x="98.8146%" y="767.50"></text></g><g><title>y2021::d14::main::better_step (1 samples, 0.48%)</title><rect x="98.5646%" y="741" width="0.4785%" height="15" fill="rgb(225,184,43)" fg:x="206" fg:w="1"/><text x="98.8146%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.48%)</title><rect x="98.5646%" y="725" width="0.4785%" height="15" fill="rgb(251,158,41)" fg:x="206" fg:w="1"/><text x="98.8146%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.48%)</title><rect x="98.5646%" y="709" width="0.4785%" height="15" fill="rgb(234,159,37)" fg:x="206" fg:w="1"/><text x="98.8146%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.48%)</title><rect x="98.5646%" y="693" width="0.4785%" height="15" fill="rgb(216,204,22)" fg:x="206" fg:w="1"/><text x="98.8146%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.48%)</title><rect x="98.5646%" y="677" width="0.4785%" height="15" fill="rgb(214,17,3)" fg:x="206" fg:w="1"/><text x="98.8146%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.48%)</title><rect x="98.5646%" y="661" width="0.4785%" height="15" fill="rgb(212,111,17)" fg:x="206" fg:w="1"/><text x="98.8146%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.48%)</title><rect x="98.5646%" y="645" width="0.4785%" height="15" fill="rgb(221,157,24)" fg:x="206" fg:w="1"/><text x="98.8146%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (1 samples, 0.48%)</title><rect x="98.5646%" y="629" width="0.4785%" height="15" fill="rgb(252,16,13)" fg:x="206" fg:w="1"/><text x="98.8146%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.48%)</title><rect x="98.5646%" y="613" width="0.4785%" height="15" fill="rgb(221,62,2)" fg:x="206" fg:w="1"/><text x="98.8146%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.48%)</title><rect x="98.5646%" y="597" width="0.4785%" height="15" fill="rgb(247,87,22)" fg:x="206" fg:w="1"/><text x="98.8146%" y="607.50"></text></g><g><title>y2021::d14::main::better_step::{{closure}} (1 samples, 0.48%)</title><rect x="98.5646%" y="581" width="0.4785%" height="15" fill="rgb(215,73,9)" fg:x="206" fg:w="1"/><text x="98.8146%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.48%)</title><rect x="98.5646%" y="565" width="0.4785%" height="15" fill="rgb(207,175,33)" fg:x="206" fg:w="1"/><text x="98.8146%" y="575.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.48%)</title><rect x="98.5646%" y="549" width="0.4785%" height="15" fill="rgb(243,129,54)" fg:x="206" fg:w="1"/><text x="98.8146%" y="559.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.48%)</title><rect x="98.5646%" y="533" width="0.4785%" height="15" fill="rgb(227,119,45)" fg:x="206" fg:w="1"/><text x="98.8146%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.48%)</title><rect x="98.5646%" y="517" width="0.4785%" height="15" fill="rgb(205,109,36)" fg:x="206" fg:w="1"/><text x="98.8146%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.48%)</title><rect x="98.5646%" y="501" width="0.4785%" height="15" fill="rgb(205,6,39)" fg:x="206" fg:w="1"/><text x="98.8146%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="98.5646%" y="485" width="0.4785%" height="15" fill="rgb(221,32,16)" fg:x="206" fg:w="1"/><text x="98.8146%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="98.5646%" y="469" width="0.4785%" height="15" fill="rgb(228,144,50)" fg:x="206" fg:w="1"/><text x="98.8146%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.48%)</title><rect x="98.5646%" y="453" width="0.4785%" height="15" fill="rgb(229,201,53)" fg:x="206" fg:w="1"/><text x="98.8146%" y="463.50"></text></g><g><title>_start (200 samples, 95.69%)</title><rect x="3.8278%" y="1061" width="95.6938%" height="15" fill="rgb(249,153,27)" fg:x="8" fg:w="200"/><text x="4.0778%" y="1071.50">_start</text></g><g><title>_dl_start (1 samples, 0.48%)</title><rect x="99.0431%" y="1045" width="0.4785%" height="15" fill="rgb(227,106,25)" fg:x="207" fg:w="1"/><text x="99.2931%" y="1055.50"></text></g><g><title>_dl_start_final (1 samples, 0.48%)</title><rect x="99.0431%" y="1029" width="0.4785%" height="15" fill="rgb(230,65,29)" fg:x="207" fg:w="1"/><text x="99.2931%" y="1039.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.48%)</title><rect x="99.0431%" y="1013" width="0.4785%" height="15" fill="rgb(221,57,46)" fg:x="207" fg:w="1"/><text x="99.2931%" y="1023.50"></text></g><g><title>dl_main (1 samples, 0.48%)</title><rect x="99.0431%" y="997" width="0.4785%" height="15" fill="rgb(229,161,17)" fg:x="207" fg:w="1"/><text x="99.2931%" y="1007.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.48%)</title><rect x="99.0431%" y="981" width="0.4785%" height="15" fill="rgb(222,213,11)" fg:x="207" fg:w="1"/><text x="99.2931%" y="991.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.48%)</title><rect x="99.0431%" y="965" width="0.4785%" height="15" fill="rgb(235,35,13)" fg:x="207" fg:w="1"/><text x="99.2931%" y="975.50"></text></g><g><title>elf_machine_lazy_rel (1 samples, 0.48%)</title><rect x="99.0431%" y="949" width="0.4785%" height="15" fill="rgb(233,158,34)" fg:x="207" fg:w="1"/><text x="99.2931%" y="959.50"></text></g><g><title>__cosf_ifunc (1 samples, 0.48%)</title><rect x="99.0431%" y="933" width="0.4785%" height="15" fill="rgb(215,151,48)" fg:x="207" fg:w="1"/><text x="99.2931%" y="943.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.48%)</title><rect x="99.0431%" y="917" width="0.4785%" height="15" fill="rgb(229,84,14)" fg:x="207" fg:w="1"/><text x="99.2931%" y="927.50"></text></g><g><title>all (209 samples, 100%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(229,68,14)" fg:x="0" fg:w="209"/><text x="0.2500%" y="1103.50"></text></g><g><title>y2021 (204 samples, 97.61%)</title><rect x="2.3923%" y="1077" width="97.6077%" height="15" fill="rgb(243,106,26)" fg:x="5" fg:w="204"/><text x="2.6423%" y="1087.50">y2021</text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.48%)</title><rect x="99.5215%" y="1061" width="0.4785%" height="15" fill="rgb(206,45,38)" fg:x="208" fg:w="1"/><text x="99.7715%" y="1071.50"></text></g><g><title>do_syscall_64 (1 samples, 0.48%)</title><rect x="99.5215%" y="1045" width="0.4785%" height="15" fill="rgb(226,6,15)" fg:x="208" fg:w="1"/><text x="99.7715%" y="1055.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.48%)</title><rect x="99.5215%" y="1029" width="0.4785%" height="15" fill="rgb(232,22,54)" fg:x="208" fg:w="1"/><text x="99.7715%" y="1039.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.48%)</title><rect x="99.5215%" y="1013" width="0.4785%" height="15" fill="rgb(229,222,32)" fg:x="208" fg:w="1"/><text x="99.7715%" y="1023.50"></text></g><g><title>bprm_execve (1 samples, 0.48%)</title><rect x="99.5215%" y="997" width="0.4785%" height="15" fill="rgb(228,62,29)" fg:x="208" fg:w="1"/><text x="99.7715%" y="1007.50"></text></g><g><title>exec_binprm (1 samples, 0.48%)</title><rect x="99.5215%" y="981" width="0.4785%" height="15" fill="rgb(251,103,34)" fg:x="208" fg:w="1"/><text x="99.7715%" y="991.50"></text></g><g><title>load_elf_binary (1 samples, 0.48%)</title><rect x="99.5215%" y="965" width="0.4785%" height="15" fill="rgb(233,12,30)" fg:x="208" fg:w="1"/><text x="99.7715%" y="975.50"></text></g><g><title>setup_arg_pages (1 samples, 0.48%)</title><rect x="99.5215%" y="949" width="0.4785%" height="15" fill="rgb(238,52,0)" fg:x="208" fg:w="1"/><text x="99.7715%" y="959.50"></text></g><g><title>mprotect_fixup (1 samples, 0.48%)</title><rect x="99.5215%" y="933" width="0.4785%" height="15" fill="rgb(223,98,5)" fg:x="208" fg:w="1"/><text x="99.7715%" y="943.50"></text></g><g><title>vm_pgprot_modify (1 samples, 0.48%)</title><rect x="99.5215%" y="917" width="0.4785%" height="15" fill="rgb(228,75,37)" fg:x="208" fg:w="1"/><text x="99.7715%" y="927.50"></text></g></svg></svg>