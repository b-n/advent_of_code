<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="949.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="10560"><g><title>perf (6 samples, 0.06%)</title><rect x="0.0000%" y="901" width="0.0568%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="6"/><text x="0.2500%" y="911.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.06%)</title><rect x="0.0000%" y="885" width="0.0568%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="6"/><text x="0.2500%" y="895.50"></text></g><g><title>do_syscall_64 (6 samples, 0.06%)</title><rect x="0.0000%" y="869" width="0.0568%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="6"/><text x="0.2500%" y="879.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.06%)</title><rect x="0.0000%" y="853" width="0.0568%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="6"/><text x="0.2500%" y="863.50"></text></g><g><title>do_execveat_common.isra.0 (6 samples, 0.06%)</title><rect x="0.0000%" y="837" width="0.0568%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="6"/><text x="0.2500%" y="847.50"></text></g><g><title>bprm_execve (6 samples, 0.06%)</title><rect x="0.0000%" y="821" width="0.0568%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="6"/><text x="0.2500%" y="831.50"></text></g><g><title>exec_binprm (6 samples, 0.06%)</title><rect x="0.0000%" y="805" width="0.0568%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="6"/><text x="0.2500%" y="815.50"></text></g><g><title>load_elf_binary (6 samples, 0.06%)</title><rect x="0.0000%" y="789" width="0.0568%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="6"/><text x="0.2500%" y="799.50"></text></g><g><title>begin_new_exec (6 samples, 0.06%)</title><rect x="0.0000%" y="773" width="0.0568%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="6"/><text x="0.2500%" y="783.50"></text></g><g><title>__set_task_comm (6 samples, 0.06%)</title><rect x="0.0000%" y="757" width="0.0568%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="6"/><text x="0.2500%" y="767.50"></text></g><g><title>perf_event_comm (6 samples, 0.06%)</title><rect x="0.0000%" y="741" width="0.0568%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="6"/><text x="0.2500%" y="751.50"></text></g><g><title>perf_iterate_sb (6 samples, 0.06%)</title><rect x="0.0000%" y="725" width="0.0568%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="6"/><text x="0.2500%" y="735.50"></text></g><g><title>perf_event_comm_output (6 samples, 0.06%)</title><rect x="0.0000%" y="709" width="0.0568%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="6"/><text x="0.2500%" y="719.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.03%)</title><rect x="0.0663%" y="357" width="0.0284%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="3"/><text x="0.3163%" y="367.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.03%)</title><rect x="0.0663%" y="341" width="0.0284%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="3"/><text x="0.3163%" y="351.50"></text></g><g><title>core::fmt::write (3 samples, 0.03%)</title><rect x="0.0663%" y="325" width="0.0284%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="3"/><text x="0.3163%" y="335.50"></text></g><g><title>__libc_start_main (6 samples, 0.06%)</title><rect x="0.0568%" y="869" width="0.0568%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="6"/><text x="0.3068%" y="879.50"></text></g><g><title>main (6 samples, 0.06%)</title><rect x="0.0568%" y="853" width="0.0568%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="6"/><text x="0.3068%" y="863.50"></text></g><g><title>std::rt::lang_start_internal (6 samples, 0.06%)</title><rect x="0.0568%" y="837" width="0.0568%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="6"/><text x="0.3068%" y="847.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.06%)</title><rect x="0.0568%" y="821" width="0.0568%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="6"/><text x="0.3068%" y="831.50"></text></g><g><title>std::panicking::try (6 samples, 0.06%)</title><rect x="0.0568%" y="805" width="0.0568%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="6"/><text x="0.3068%" y="815.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.06%)</title><rect x="0.0568%" y="789" width="0.0568%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="6"/><text x="0.3068%" y="799.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (6 samples, 0.06%)</title><rect x="0.0568%" y="773" width="0.0568%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="6"/><text x="0.3068%" y="783.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.06%)</title><rect x="0.0568%" y="757" width="0.0568%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="6"/><text x="0.3068%" y="767.50"></text></g><g><title>std::panicking::try (6 samples, 0.06%)</title><rect x="0.0568%" y="741" width="0.0568%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="6"/><text x="0.3068%" y="751.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.06%)</title><rect x="0.0568%" y="725" width="0.0568%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="6"/><text x="0.3068%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (6 samples, 0.06%)</title><rect x="0.0568%" y="709" width="0.0568%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="6"/><text x="0.3068%" y="719.50"></text></g><g><title>std::rt::lang_start::{{closure}} (6 samples, 0.06%)</title><rect x="0.0568%" y="693" width="0.0568%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="6"/><text x="0.3068%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.06%)</title><rect x="0.0568%" y="677" width="0.0568%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="6"/><text x="0.3068%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.06%)</title><rect x="0.0568%" y="661" width="0.0568%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="6"/><text x="0.3068%" y="671.50"></text></g><g><title>y2021::main (6 samples, 0.06%)</title><rect x="0.0568%" y="645" width="0.0568%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="6"/><text x="0.3068%" y="655.50"></text></g><g><title>y2021::d12::main2::run (6 samples, 0.06%)</title><rect x="0.0568%" y="629" width="0.0568%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="6"/><text x="0.3068%" y="639.50"></text></g><g><title>y2021::d12::main2::p02 (6 samples, 0.06%)</title><rect x="0.0568%" y="613" width="0.0568%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="6"/><text x="0.3068%" y="623.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.06%)</title><rect x="0.0568%" y="597" width="0.0568%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="6"/><text x="0.3068%" y="607.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.06%)</title><rect x="0.0568%" y="581" width="0.0568%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="6"/><text x="0.3068%" y="591.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.06%)</title><rect x="0.0568%" y="565" width="0.0568%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="6"/><text x="0.3068%" y="575.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.06%)</title><rect x="0.0568%" y="549" width="0.0568%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="6"/><text x="0.3068%" y="559.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.06%)</title><rect x="0.0568%" y="533" width="0.0568%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="6"/><text x="0.3068%" y="543.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.06%)</title><rect x="0.0568%" y="517" width="0.0568%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="6"/><text x="0.3068%" y="527.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.06%)</title><rect x="0.0568%" y="501" width="0.0568%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="6"/><text x="0.3068%" y="511.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.06%)</title><rect x="0.0568%" y="485" width="0.0568%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="6"/><text x="0.3068%" y="495.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.06%)</title><rect x="0.0568%" y="469" width="0.0568%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="6"/><text x="0.3068%" y="479.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.06%)</title><rect x="0.0568%" y="453" width="0.0568%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="6"/><text x="0.3068%" y="463.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.06%)</title><rect x="0.0568%" y="437" width="0.0568%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="6"/><text x="0.3068%" y="447.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.06%)</title><rect x="0.0568%" y="421" width="0.0568%" height="15" fill="rgb(222,207,29)" fg:x="6" fg:w="6"/><text x="0.3068%" y="431.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.06%)</title><rect x="0.0568%" y="405" width="0.0568%" height="15" fill="rgb(206,96,30)" fg:x="6" fg:w="6"/><text x="0.3068%" y="415.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.06%)</title><rect x="0.0568%" y="389" width="0.0568%" height="15" fill="rgb(218,138,4)" fg:x="6" fg:w="6"/><text x="0.3068%" y="399.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.0663%" y="373" width="0.0473%" height="15" fill="rgb(250,191,14)" fg:x="7" fg:w="5"/><text x="0.3163%" y="383.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.02%)</title><rect x="0.0947%" y="357" width="0.0189%" height="15" fill="rgb(239,60,40)" fg:x="10" fg:w="2"/><text x="0.3447%" y="367.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="0.0947%" y="341" width="0.0189%" height="15" fill="rgb(206,27,48)" fg:x="10" fg:w="2"/><text x="0.3447%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="0.0947%" y="325" width="0.0189%" height="15" fill="rgb(225,35,8)" fg:x="10" fg:w="2"/><text x="0.3447%" y="335.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.02%)</title><rect x="0.0947%" y="309" width="0.0189%" height="15" fill="rgb(250,213,24)" fg:x="10" fg:w="2"/><text x="0.3447%" y="319.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.02%)</title><rect x="0.1231%" y="389" width="0.0189%" height="15" fill="rgb(247,123,22)" fg:x="13" fg:w="2"/><text x="0.3731%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.02%)</title><rect x="0.1231%" y="373" width="0.0189%" height="15" fill="rgb(231,138,38)" fg:x="13" fg:w="2"/><text x="0.3731%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.02%)</title><rect x="0.1231%" y="357" width="0.0189%" height="15" fill="rgb(231,145,46)" fg:x="13" fg:w="2"/><text x="0.3731%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="0.1231%" y="341" width="0.0189%" height="15" fill="rgb(251,118,11)" fg:x="13" fg:w="2"/><text x="0.3731%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="0.1231%" y="325" width="0.0189%" height="15" fill="rgb(217,147,25)" fg:x="13" fg:w="2"/><text x="0.3731%" y="335.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="0.1231%" y="309" width="0.0189%" height="15" fill="rgb(247,81,37)" fg:x="13" fg:w="2"/><text x="0.3731%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="0.1231%" y="293" width="0.0189%" height="15" fill="rgb(209,12,38)" fg:x="13" fg:w="2"/><text x="0.3731%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="0.1231%" y="277" width="0.0189%" height="15" fill="rgb(227,1,9)" fg:x="13" fg:w="2"/><text x="0.3731%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="0.1231%" y="261" width="0.0189%" height="15" fill="rgb(248,47,43)" fg:x="13" fg:w="2"/><text x="0.3731%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="0.1231%" y="245" width="0.0189%" height="15" fill="rgb(221,10,30)" fg:x="13" fg:w="2"/><text x="0.3731%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="0.1231%" y="229" width="0.0189%" height="15" fill="rgb(210,229,1)" fg:x="13" fg:w="2"/><text x="0.3731%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="0.1231%" y="213" width="0.0189%" height="15" fill="rgb(222,148,37)" fg:x="13" fg:w="2"/><text x="0.3731%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="0.1231%" y="197" width="0.0189%" height="15" fill="rgb(234,67,33)" fg:x="13" fg:w="2"/><text x="0.3731%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="0.1231%" y="181" width="0.0189%" height="15" fill="rgb(247,98,35)" fg:x="13" fg:w="2"/><text x="0.3731%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="0.1231%" y="165" width="0.0189%" height="15" fill="rgb(247,138,52)" fg:x="13" fg:w="2"/><text x="0.3731%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="0.1231%" y="149" width="0.0189%" height="15" fill="rgb(213,79,30)" fg:x="13" fg:w="2"/><text x="0.3731%" y="159.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="0.1231%" y="133" width="0.0189%" height="15" fill="rgb(246,177,23)" fg:x="13" fg:w="2"/><text x="0.3731%" y="143.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="0.1231%" y="117" width="0.0189%" height="15" fill="rgb(230,62,27)" fg:x="13" fg:w="2"/><text x="0.3731%" y="127.50"></text></g><g><title>_int_realloc (2 samples, 0.02%)</title><rect x="0.1231%" y="101" width="0.0189%" height="15" fill="rgb(216,154,8)" fg:x="13" fg:w="2"/><text x="0.3731%" y="111.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="0.1231%" y="85" width="0.0189%" height="15" fill="rgb(244,35,45)" fg:x="13" fg:w="2"/><text x="0.3731%" y="95.50"></text></g><g><title>std::rt::lang_start_internal (5 samples, 0.05%)</title><rect x="0.1231%" y="869" width="0.0473%" height="15" fill="rgb(251,115,12)" fg:x="13" fg:w="5"/><text x="0.3731%" y="879.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.05%)</title><rect x="0.1231%" y="853" width="0.0473%" height="15" fill="rgb(240,54,50)" fg:x="13" fg:w="5"/><text x="0.3731%" y="863.50"></text></g><g><title>std::panicking::try (5 samples, 0.05%)</title><rect x="0.1231%" y="837" width="0.0473%" height="15" fill="rgb(233,84,52)" fg:x="13" fg:w="5"/><text x="0.3731%" y="847.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.05%)</title><rect x="0.1231%" y="821" width="0.0473%" height="15" fill="rgb(207,117,47)" fg:x="13" fg:w="5"/><text x="0.3731%" y="831.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (5 samples, 0.05%)</title><rect x="0.1231%" y="805" width="0.0473%" height="15" fill="rgb(249,43,39)" fg:x="13" fg:w="5"/><text x="0.3731%" y="815.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.05%)</title><rect x="0.1231%" y="789" width="0.0473%" height="15" fill="rgb(209,38,44)" fg:x="13" fg:w="5"/><text x="0.3731%" y="799.50"></text></g><g><title>std::panicking::try (5 samples, 0.05%)</title><rect x="0.1231%" y="773" width="0.0473%" height="15" fill="rgb(236,212,23)" fg:x="13" fg:w="5"/><text x="0.3731%" y="783.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.05%)</title><rect x="0.1231%" y="757" width="0.0473%" height="15" fill="rgb(242,79,21)" fg:x="13" fg:w="5"/><text x="0.3731%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5 samples, 0.05%)</title><rect x="0.1231%" y="741" width="0.0473%" height="15" fill="rgb(211,96,35)" fg:x="13" fg:w="5"/><text x="0.3731%" y="751.50"></text></g><g><title>std::rt::lang_start::{{closure}} (5 samples, 0.05%)</title><rect x="0.1231%" y="725" width="0.0473%" height="15" fill="rgb(253,215,40)" fg:x="13" fg:w="5"/><text x="0.3731%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.05%)</title><rect x="0.1231%" y="709" width="0.0473%" height="15" fill="rgb(211,81,21)" fg:x="13" fg:w="5"/><text x="0.3731%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.05%)</title><rect x="0.1231%" y="693" width="0.0473%" height="15" fill="rgb(208,190,38)" fg:x="13" fg:w="5"/><text x="0.3731%" y="703.50"></text></g><g><title>y2021::main (5 samples, 0.05%)</title><rect x="0.1231%" y="677" width="0.0473%" height="15" fill="rgb(235,213,38)" fg:x="13" fg:w="5"/><text x="0.3731%" y="687.50"></text></g><g><title>y2021::d12::main2::run (5 samples, 0.05%)</title><rect x="0.1231%" y="661" width="0.0473%" height="15" fill="rgb(237,122,38)" fg:x="13" fg:w="5"/><text x="0.3731%" y="671.50"></text></g><g><title>y2021::d12::main2::p02 (5 samples, 0.05%)</title><rect x="0.1231%" y="645" width="0.0473%" height="15" fill="rgb(244,218,35)" fg:x="13" fg:w="5"/><text x="0.3731%" y="655.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.1231%" y="629" width="0.0473%" height="15" fill="rgb(240,68,47)" fg:x="13" fg:w="5"/><text x="0.3731%" y="639.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.1231%" y="613" width="0.0473%" height="15" fill="rgb(210,16,53)" fg:x="13" fg:w="5"/><text x="0.3731%" y="623.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.1231%" y="597" width="0.0473%" height="15" fill="rgb(235,124,12)" fg:x="13" fg:w="5"/><text x="0.3731%" y="607.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.1231%" y="581" width="0.0473%" height="15" fill="rgb(224,169,11)" fg:x="13" fg:w="5"/><text x="0.3731%" y="591.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.1231%" y="565" width="0.0473%" height="15" fill="rgb(250,166,2)" fg:x="13" fg:w="5"/><text x="0.3731%" y="575.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.1231%" y="549" width="0.0473%" height="15" fill="rgb(242,216,29)" fg:x="13" fg:w="5"/><text x="0.3731%" y="559.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.1231%" y="533" width="0.0473%" height="15" fill="rgb(230,116,27)" fg:x="13" fg:w="5"/><text x="0.3731%" y="543.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.1231%" y="517" width="0.0473%" height="15" fill="rgb(228,99,48)" fg:x="13" fg:w="5"/><text x="0.3731%" y="527.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.1231%" y="501" width="0.0473%" height="15" fill="rgb(253,11,6)" fg:x="13" fg:w="5"/><text x="0.3731%" y="511.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.1231%" y="485" width="0.0473%" height="15" fill="rgb(247,143,39)" fg:x="13" fg:w="5"/><text x="0.3731%" y="495.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.1231%" y="469" width="0.0473%" height="15" fill="rgb(236,97,10)" fg:x="13" fg:w="5"/><text x="0.3731%" y="479.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.1231%" y="453" width="0.0473%" height="15" fill="rgb(233,208,19)" fg:x="13" fg:w="5"/><text x="0.3731%" y="463.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.1231%" y="437" width="0.0473%" height="15" fill="rgb(216,164,2)" fg:x="13" fg:w="5"/><text x="0.3731%" y="447.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.1231%" y="421" width="0.0473%" height="15" fill="rgb(220,129,5)" fg:x="13" fg:w="5"/><text x="0.3731%" y="431.50"></text></g><g><title>y2021::d12::main2::traverse (5 samples, 0.05%)</title><rect x="0.1231%" y="405" width="0.0473%" height="15" fill="rgb(242,17,10)" fg:x="13" fg:w="5"/><text x="0.3731%" y="415.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.03%)</title><rect x="0.1420%" y="389" width="0.0284%" height="15" fill="rgb(242,107,0)" fg:x="15" fg:w="3"/><text x="0.3920%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="0.1420%" y="373" width="0.0284%" height="15" fill="rgb(251,28,31)" fg:x="15" fg:w="3"/><text x="0.3920%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.03%)</title><rect x="0.1420%" y="357" width="0.0284%" height="15" fill="rgb(233,223,10)" fg:x="15" fg:w="3"/><text x="0.3920%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.03%)</title><rect x="0.1420%" y="341" width="0.0284%" height="15" fill="rgb(215,21,27)" fg:x="15" fg:w="3"/><text x="0.3920%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.03%)</title><rect x="0.1420%" y="325" width="0.0284%" height="15" fill="rgb(232,23,21)" fg:x="15" fg:w="3"/><text x="0.3920%" y="335.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3 samples, 0.03%)</title><rect x="0.1420%" y="309" width="0.0284%" height="15" fill="rgb(244,5,23)" fg:x="15" fg:w="3"/><text x="0.3920%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.03%)</title><rect x="0.1420%" y="293" width="0.0284%" height="15" fill="rgb(226,81,46)" fg:x="15" fg:w="3"/><text x="0.3920%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.03%)</title><rect x="0.1420%" y="277" width="0.0284%" height="15" fill="rgb(247,70,30)" fg:x="15" fg:w="3"/><text x="0.3920%" y="287.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (3 samples, 0.03%)</title><rect x="0.1420%" y="261" width="0.0284%" height="15" fill="rgb(212,68,19)" fg:x="15" fg:w="3"/><text x="0.3920%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (3 samples, 0.03%)</title><rect x="0.1420%" y="245" width="0.0284%" height="15" fill="rgb(240,187,13)" fg:x="15" fg:w="3"/><text x="0.3920%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="0.1515%" y="229" width="0.0189%" height="15" fill="rgb(223,113,26)" fg:x="16" fg:w="2"/><text x="0.4015%" y="239.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="0.1515%" y="213" width="0.0189%" height="15" fill="rgb(206,192,2)" fg:x="16" fg:w="2"/><text x="0.4015%" y="223.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (2 samples, 0.02%)</title><rect x="0.1515%" y="197" width="0.0189%" height="15" fill="rgb(241,108,4)" fg:x="16" fg:w="2"/><text x="0.4015%" y="207.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.02%)</title><rect x="0.1515%" y="181" width="0.0189%" height="15" fill="rgb(247,173,49)" fg:x="16" fg:w="2"/><text x="0.4015%" y="191.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.02%)</title><rect x="0.1515%" y="165" width="0.0189%" height="15" fill="rgb(224,114,35)" fg:x="16" fg:w="2"/><text x="0.4015%" y="175.50"></text></g><g><title>[unknown] (13 samples, 0.12%)</title><rect x="0.0568%" y="885" width="0.1231%" height="15" fill="rgb(245,159,27)" fg:x="6" fg:w="13"/><text x="0.3068%" y="895.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (4 samples, 0.04%)</title><rect x="0.3030%" y="341" width="0.0379%" height="15" fill="rgb(245,172,44)" fg:x="32" fg:w="4"/><text x="0.5530%" y="351.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (4 samples, 0.04%)</title><rect x="0.3030%" y="325" width="0.0379%" height="15" fill="rgb(236,23,11)" fg:x="32" fg:w="4"/><text x="0.5530%" y="335.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.04%)</title><rect x="0.3030%" y="309" width="0.0379%" height="15" fill="rgb(205,117,38)" fg:x="32" fg:w="4"/><text x="0.5530%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (3 samples, 0.03%)</title><rect x="0.3125%" y="293" width="0.0284%" height="15" fill="rgb(237,72,25)" fg:x="33" fg:w="3"/><text x="0.5625%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3 samples, 0.03%)</title><rect x="0.3125%" y="277" width="0.0284%" height="15" fill="rgb(244,70,9)" fg:x="33" fg:w="3"/><text x="0.5625%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.03%)</title><rect x="0.3125%" y="261" width="0.0284%" height="15" fill="rgb(217,125,39)" fg:x="33" fg:w="3"/><text x="0.5625%" y="271.50"></text></g><g><title>core::ptr::write (3 samples, 0.03%)</title><rect x="0.3125%" y="245" width="0.0284%" height="15" fill="rgb(235,36,10)" fg:x="33" fg:w="3"/><text x="0.5625%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.03%)</title><rect x="0.3598%" y="165" width="0.0284%" height="15" fill="rgb(251,123,47)" fg:x="38" fg:w="3"/><text x="0.6098%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.09%)</title><rect x="0.3504%" y="213" width="0.0947%" height="15" fill="rgb(221,13,13)" fg:x="37" fg:w="10"/><text x="0.6004%" y="223.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.09%)</title><rect x="0.3504%" y="197" width="0.0947%" height="15" fill="rgb(238,131,9)" fg:x="37" fg:w="10"/><text x="0.6004%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.09%)</title><rect x="0.3504%" y="181" width="0.0947%" height="15" fill="rgb(211,50,8)" fg:x="37" fg:w="10"/><text x="0.6004%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.06%)</title><rect x="0.3883%" y="165" width="0.0568%" height="15" fill="rgb(245,182,24)" fg:x="41" fg:w="6"/><text x="0.6383%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.04%)</title><rect x="0.4072%" y="149" width="0.0379%" height="15" fill="rgb(242,14,37)" fg:x="43" fg:w="4"/><text x="0.6572%" y="159.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (14 samples, 0.13%)</title><rect x="0.3409%" y="245" width="0.1326%" height="15" fill="rgb(246,228,12)" fg:x="36" fg:w="14"/><text x="0.5909%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.13%)</title><rect x="0.3409%" y="229" width="0.1326%" height="15" fill="rgb(213,55,15)" fg:x="36" fg:w="14"/><text x="0.5909%" y="239.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="0.4545%" y="213" width="0.0189%" height="15" fill="rgb(209,9,3)" fg:x="48" fg:w="2"/><text x="0.7045%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.02%)</title><rect x="0.4545%" y="197" width="0.0189%" height="15" fill="rgb(230,59,30)" fg:x="48" fg:w="2"/><text x="0.7045%" y="207.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="0.4545%" y="181" width="0.0189%" height="15" fill="rgb(209,121,21)" fg:x="48" fg:w="2"/><text x="0.7045%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="0.4545%" y="165" width="0.0189%" height="15" fill="rgb(220,109,13)" fg:x="48" fg:w="2"/><text x="0.7045%" y="175.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="0.4545%" y="149" width="0.0189%" height="15" fill="rgb(232,18,1)" fg:x="48" fg:w="2"/><text x="0.7045%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="0.4545%" y="133" width="0.0189%" height="15" fill="rgb(215,41,42)" fg:x="48" fg:w="2"/><text x="0.7045%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="0.4545%" y="117" width="0.0189%" height="15" fill="rgb(224,123,36)" fg:x="48" fg:w="2"/><text x="0.7045%" y="127.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (2 samples, 0.02%)</title><rect x="0.5398%" y="101" width="0.0189%" height="15" fill="rgb(240,125,3)" fg:x="57" fg:w="2"/><text x="0.7898%" y="111.50"></text></g><g><title>lru_cache_add (2 samples, 0.02%)</title><rect x="0.5398%" y="85" width="0.0189%" height="15" fill="rgb(205,98,50)" fg:x="57" fg:w="2"/><text x="0.7898%" y="95.50"></text></g><g><title>__pagevec_lru_add (2 samples, 0.02%)</title><rect x="0.5398%" y="69" width="0.0189%" height="15" fill="rgb(205,185,37)" fg:x="57" fg:w="2"/><text x="0.7898%" y="79.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.03%)</title><rect x="0.5398%" y="133" width="0.0284%" height="15" fill="rgb(238,207,15)" fg:x="57" fg:w="3"/><text x="0.7898%" y="143.50"></text></g><g><title>do_anonymous_page (3 samples, 0.03%)</title><rect x="0.5398%" y="117" width="0.0284%" height="15" fill="rgb(213,199,42)" fg:x="57" fg:w="3"/><text x="0.7898%" y="127.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (11 samples, 0.10%)</title><rect x="0.4735%" y="245" width="0.1042%" height="15" fill="rgb(235,201,11)" fg:x="50" fg:w="11"/><text x="0.7235%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (11 samples, 0.10%)</title><rect x="0.4735%" y="229" width="0.1042%" height="15" fill="rgb(207,46,11)" fg:x="50" fg:w="11"/><text x="0.7235%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.10%)</title><rect x="0.4735%" y="213" width="0.1042%" height="15" fill="rgb(241,35,35)" fg:x="50" fg:w="11"/><text x="0.7235%" y="223.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.07%)</title><rect x="0.5114%" y="197" width="0.0663%" height="15" fill="rgb(243,32,47)" fg:x="54" fg:w="7"/><text x="0.7614%" y="207.50"></text></g><g><title>exc_page_fault (5 samples, 0.05%)</title><rect x="0.5303%" y="181" width="0.0473%" height="15" fill="rgb(247,202,23)" fg:x="56" fg:w="5"/><text x="0.7803%" y="191.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.05%)</title><rect x="0.5303%" y="165" width="0.0473%" height="15" fill="rgb(219,102,11)" fg:x="56" fg:w="5"/><text x="0.7803%" y="175.50"></text></g><g><title>handle_mm_fault (4 samples, 0.04%)</title><rect x="0.5398%" y="149" width="0.0379%" height="15" fill="rgb(243,110,44)" fg:x="57" fg:w="4"/><text x="0.7898%" y="159.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="0.5777%" y="213" width="0.0189%" height="15" fill="rgb(222,74,54)" fg:x="61" fg:w="2"/><text x="0.8277%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (5 samples, 0.05%)</title><rect x="0.5777%" y="245" width="0.0473%" height="15" fill="rgb(216,99,12)" fg:x="61" fg:w="5"/><text x="0.8277%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (5 samples, 0.05%)</title><rect x="0.5777%" y="229" width="0.0473%" height="15" fill="rgb(226,22,26)" fg:x="61" fg:w="5"/><text x="0.8277%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (3 samples, 0.03%)</title><rect x="0.5966%" y="213" width="0.0284%" height="15" fill="rgb(217,163,10)" fg:x="63" fg:w="3"/><text x="0.8466%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.03%)</title><rect x="0.5966%" y="197" width="0.0284%" height="15" fill="rgb(213,25,53)" fg:x="63" fg:w="3"/><text x="0.8466%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (31 samples, 0.29%)</title><rect x="0.3409%" y="309" width="0.2936%" height="15" fill="rgb(252,105,26)" fg:x="36" fg:w="31"/><text x="0.5909%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (31 samples, 0.29%)</title><rect x="0.3409%" y="293" width="0.2936%" height="15" fill="rgb(220,39,43)" fg:x="36" fg:w="31"/><text x="0.5909%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (31 samples, 0.29%)</title><rect x="0.3409%" y="277" width="0.2936%" height="15" fill="rgb(229,68,48)" fg:x="36" fg:w="31"/><text x="0.5909%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (31 samples, 0.29%)</title><rect x="0.3409%" y="261" width="0.2936%" height="15" fill="rgb(252,8,32)" fg:x="36" fg:w="31"/><text x="0.5909%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="0.6345%" y="293" width="0.0189%" height="15" fill="rgb(223,20,43)" fg:x="67" fg:w="2"/><text x="0.8845%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="0.6345%" y="277" width="0.0189%" height="15" fill="rgb(229,81,49)" fg:x="67" fg:w="2"/><text x="0.8845%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="0.6345%" y="261" width="0.0189%" height="15" fill="rgb(236,28,36)" fg:x="67" fg:w="2"/><text x="0.8845%" y="271.50"></text></g><g><title>hashbrown::map::make_insert_hash (9 samples, 0.09%)</title><rect x="0.6345%" y="309" width="0.0852%" height="15" fill="rgb(249,185,26)" fg:x="67" fg:w="9"/><text x="0.8845%" y="319.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (7 samples, 0.07%)</title><rect x="0.6534%" y="293" width="0.0663%" height="15" fill="rgb(249,174,33)" fg:x="69" fg:w="7"/><text x="0.9034%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (7 samples, 0.07%)</title><rect x="0.6534%" y="277" width="0.0663%" height="15" fill="rgb(233,201,37)" fg:x="69" fg:w="7"/><text x="0.9034%" y="287.50"></text></g><g><title>core::hash::Hasher::write_usize (6 samples, 0.06%)</title><rect x="0.6629%" y="261" width="0.0568%" height="15" fill="rgb(221,78,26)" fg:x="70" fg:w="6"/><text x="0.9129%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="0.6723%" y="245" width="0.0473%" height="15" fill="rgb(250,127,30)" fg:x="71" fg:w="5"/><text x="0.9223%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="0.6723%" y="229" width="0.0473%" height="15" fill="rgb(230,49,44)" fg:x="71" fg:w="5"/><text x="0.9223%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="0.6723%" y="213" width="0.0473%" height="15" fill="rgb(229,67,23)" fg:x="71" fg:w="5"/><text x="0.9223%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="0.7481%" y="261" width="0.0189%" height="15" fill="rgb(249,83,47)" fg:x="79" fg:w="2"/><text x="0.9981%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="0.7386%" y="293" width="0.0379%" height="15" fill="rgb(215,43,3)" fg:x="78" fg:w="4"/><text x="0.9886%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="0.7386%" y="277" width="0.0379%" height="15" fill="rgb(238,154,13)" fg:x="78" fg:w="4"/><text x="0.9886%" y="287.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (51 samples, 0.48%)</title><rect x="0.3409%" y="325" width="0.4830%" height="15" fill="rgb(219,56,2)" fg:x="36" fg:w="51"/><text x="0.5909%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.10%)</title><rect x="0.7197%" y="309" width="0.1042%" height="15" fill="rgb(233,0,4)" fg:x="76" fg:w="11"/><text x="0.9697%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.05%)</title><rect x="0.7765%" y="293" width="0.0473%" height="15" fill="rgb(235,30,7)" fg:x="82" fg:w="5"/><text x="1.0265%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.05%)</title><rect x="0.7765%" y="277" width="0.0473%" height="15" fill="rgb(250,79,13)" fg:x="82" fg:w="5"/><text x="1.0265%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.05%)</title><rect x="0.7765%" y="261" width="0.0473%" height="15" fill="rgb(211,146,34)" fg:x="82" fg:w="5"/><text x="1.0265%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.04%)</title><rect x="0.7860%" y="245" width="0.0379%" height="15" fill="rgb(228,22,38)" fg:x="83" fg:w="4"/><text x="1.0360%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.04%)</title><rect x="0.7860%" y="229" width="0.0379%" height="15" fill="rgb(235,168,5)" fg:x="83" fg:w="4"/><text x="1.0360%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.04%)</title><rect x="0.7860%" y="213" width="0.0379%" height="15" fill="rgb(221,155,16)" fg:x="83" fg:w="4"/><text x="1.0360%" y="223.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4 samples, 0.04%)</title><rect x="0.7860%" y="197" width="0.0379%" height="15" fill="rgb(215,215,53)" fg:x="83" fg:w="4"/><text x="1.0360%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (69 samples, 0.65%)</title><rect x="0.2273%" y="405" width="0.6534%" height="15" fill="rgb(223,4,10)" fg:x="24" fg:w="69"/><text x="0.4773%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (69 samples, 0.65%)</title><rect x="0.2273%" y="389" width="0.6534%" height="15" fill="rgb(234,103,6)" fg:x="24" fg:w="69"/><text x="0.4773%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (69 samples, 0.65%)</title><rect x="0.2273%" y="373" width="0.6534%" height="15" fill="rgb(227,97,0)" fg:x="24" fg:w="69"/><text x="0.4773%" y="383.50"></text></g><g><title>y2021::d05::main::p01::{{closure}} (66 samples, 0.62%)</title><rect x="0.2557%" y="357" width="0.6250%" height="15" fill="rgb(234,150,53)" fg:x="27" fg:w="66"/><text x="0.5057%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (57 samples, 0.54%)</title><rect x="0.3409%" y="341" width="0.5398%" height="15" fill="rgb(228,201,54)" fg:x="36" fg:w="57"/><text x="0.5909%" y="351.50"></text></g><g><title>std::collections::hash::map::map_entry (6 samples, 0.06%)</title><rect x="0.8239%" y="325" width="0.0568%" height="15" fill="rgb(222,22,37)" fg:x="87" fg:w="6"/><text x="1.0739%" y="335.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (71 samples, 0.67%)</title><rect x="0.2178%" y="437" width="0.6723%" height="15" fill="rgb(237,53,32)" fg:x="23" fg:w="71"/><text x="0.4678%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (71 samples, 0.67%)</title><rect x="0.2178%" y="421" width="0.6723%" height="15" fill="rgb(233,25,53)" fg:x="23" fg:w="71"/><text x="0.4678%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 0.69%)</title><rect x="0.2083%" y="597" width="0.6913%" height="15" fill="rgb(210,40,34)" fg:x="22" fg:w="73"/><text x="0.4583%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 0.69%)</title><rect x="0.2083%" y="581" width="0.6913%" height="15" fill="rgb(241,220,44)" fg:x="22" fg:w="73"/><text x="0.4583%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 0.69%)</title><rect x="0.2083%" y="565" width="0.6913%" height="15" fill="rgb(235,28,35)" fg:x="22" fg:w="73"/><text x="0.4583%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 0.69%)</title><rect x="0.2083%" y="549" width="0.6913%" height="15" fill="rgb(210,56,17)" fg:x="22" fg:w="73"/><text x="0.4583%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 0.69%)</title><rect x="0.2083%" y="533" width="0.6913%" height="15" fill="rgb(224,130,29)" fg:x="22" fg:w="73"/><text x="0.4583%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 0.69%)</title><rect x="0.2083%" y="517" width="0.6913%" height="15" fill="rgb(235,212,8)" fg:x="22" fg:w="73"/><text x="0.4583%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 0.69%)</title><rect x="0.2083%" y="501" width="0.6913%" height="15" fill="rgb(223,33,50)" fg:x="22" fg:w="73"/><text x="0.4583%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (73 samples, 0.69%)</title><rect x="0.2083%" y="485" width="0.6913%" height="15" fill="rgb(219,149,13)" fg:x="22" fg:w="73"/><text x="0.4583%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (72 samples, 0.68%)</title><rect x="0.2178%" y="469" width="0.6818%" height="15" fill="rgb(250,156,29)" fg:x="23" fg:w="72"/><text x="0.4678%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (72 samples, 0.68%)</title><rect x="0.2178%" y="453" width="0.6818%" height="15" fill="rgb(216,193,19)" fg:x="23" fg:w="72"/><text x="0.4678%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.03%)</title><rect x="0.8996%" y="597" width="0.0284%" height="15" fill="rgb(216,135,14)" fg:x="95" fg:w="3"/><text x="1.1496%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="0.8996%" y="581" width="0.0284%" height="15" fill="rgb(241,47,5)" fg:x="95" fg:w="3"/><text x="1.1496%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="0.8996%" y="565" width="0.0284%" height="15" fill="rgb(233,42,35)" fg:x="95" fg:w="3"/><text x="1.1496%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="0.8996%" y="549" width="0.0284%" height="15" fill="rgb(231,13,6)" fg:x="95" fg:w="3"/><text x="1.1496%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.03%)</title><rect x="0.8996%" y="533" width="0.0284%" height="15" fill="rgb(207,181,40)" fg:x="95" fg:w="3"/><text x="1.1496%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.03%)</title><rect x="0.8996%" y="517" width="0.0284%" height="15" fill="rgb(254,173,49)" fg:x="95" fg:w="3"/><text x="1.1496%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="0.8996%" y="501" width="0.0284%" height="15" fill="rgb(221,1,38)" fg:x="95" fg:w="3"/><text x="1.1496%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.03%)</title><rect x="0.8996%" y="485" width="0.0284%" height="15" fill="rgb(206,124,46)" fg:x="95" fg:w="3"/><text x="1.1496%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.03%)</title><rect x="0.8996%" y="469" width="0.0284%" height="15" fill="rgb(249,21,11)" fg:x="95" fg:w="3"/><text x="1.1496%" y="479.50"></text></g><g><title>y2021::d05::main::p01 (77 samples, 0.73%)</title><rect x="0.2083%" y="613" width="0.7292%" height="15" fill="rgb(222,201,40)" fg:x="22" fg:w="77"/><text x="0.4583%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (5 samples, 0.05%)</title><rect x="1.1553%" y="309" width="0.0473%" height="15" fill="rgb(235,61,29)" fg:x="122" fg:w="5"/><text x="1.4053%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (5 samples, 0.05%)</title><rect x="1.1553%" y="293" width="0.0473%" height="15" fill="rgb(219,207,3)" fg:x="122" fg:w="5"/><text x="1.4053%" y="303.50"></text></g><g><title>core::ptr::write (5 samples, 0.05%)</title><rect x="1.1553%" y="277" width="0.0473%" height="15" fill="rgb(222,56,46)" fg:x="122" fg:w="5"/><text x="1.4053%" y="287.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (11 samples, 0.10%)</title><rect x="1.1174%" y="373" width="0.1042%" height="15" fill="rgb(239,76,54)" fg:x="118" fg:w="11"/><text x="1.3674%" y="383.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (11 samples, 0.10%)</title><rect x="1.1174%" y="357" width="0.1042%" height="15" fill="rgb(231,124,27)" fg:x="118" fg:w="11"/><text x="1.3674%" y="367.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (11 samples, 0.10%)</title><rect x="1.1174%" y="341" width="0.1042%" height="15" fill="rgb(249,195,6)" fg:x="118" fg:w="11"/><text x="1.3674%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (10 samples, 0.09%)</title><rect x="1.1269%" y="325" width="0.0947%" height="15" fill="rgb(237,174,47)" fg:x="119" fg:w="10"/><text x="1.3769%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.02%)</title><rect x="1.2027%" y="309" width="0.0189%" height="15" fill="rgb(206,201,31)" fg:x="127" fg:w="2"/><text x="1.4527%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.02%)</title><rect x="1.2027%" y="293" width="0.0189%" height="15" fill="rgb(231,57,52)" fg:x="127" fg:w="2"/><text x="1.4527%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.03%)</title><rect x="1.3163%" y="197" width="0.0284%" height="15" fill="rgb(248,177,22)" fg:x="139" fg:w="3"/><text x="1.5663%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="1.3258%" y="181" width="0.0189%" height="15" fill="rgb(215,211,37)" fg:x="140" fg:w="2"/><text x="1.5758%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="1.3542%" y="181" width="0.0284%" height="15" fill="rgb(241,128,51)" fg:x="143" fg:w="3"/><text x="1.6042%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.12%)</title><rect x="1.2879%" y="245" width="0.1231%" height="15" fill="rgb(227,165,31)" fg:x="136" fg:w="13"/><text x="1.5379%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.12%)</title><rect x="1.2879%" y="229" width="0.1231%" height="15" fill="rgb(228,167,24)" fg:x="136" fg:w="13"/><text x="1.5379%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.12%)</title><rect x="1.2879%" y="213" width="0.1231%" height="15" fill="rgb(228,143,12)" fg:x="136" fg:w="13"/><text x="1.5379%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.07%)</title><rect x="1.3447%" y="197" width="0.0663%" height="15" fill="rgb(249,149,8)" fg:x="142" fg:w="7"/><text x="1.5947%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="1.3826%" y="181" width="0.0284%" height="15" fill="rgb(243,35,44)" fg:x="146" fg:w="3"/><text x="1.6326%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.05%)</title><rect x="1.5814%" y="149" width="0.0473%" height="15" fill="rgb(246,89,9)" fg:x="167" fg:w="5"/><text x="1.8314%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="1.6098%" y="133" width="0.0189%" height="15" fill="rgb(233,213,13)" fg:x="170" fg:w="2"/><text x="1.8598%" y="143.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (41 samples, 0.39%)</title><rect x="1.2595%" y="277" width="0.3883%" height="15" fill="rgb(233,141,41)" fg:x="133" fg:w="41"/><text x="1.5095%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (40 samples, 0.38%)</title><rect x="1.2689%" y="261" width="0.3788%" height="15" fill="rgb(239,167,4)" fg:x="134" fg:w="40"/><text x="1.5189%" y="271.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (25 samples, 0.24%)</title><rect x="1.4110%" y="245" width="0.2367%" height="15" fill="rgb(209,217,16)" fg:x="149" fg:w="25"/><text x="1.6610%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (22 samples, 0.21%)</title><rect x="1.4394%" y="229" width="0.2083%" height="15" fill="rgb(219,88,35)" fg:x="152" fg:w="22"/><text x="1.6894%" y="239.50"></text></g><g><title>core::hash::Hasher::write_usize (19 samples, 0.18%)</title><rect x="1.4678%" y="213" width="0.1799%" height="15" fill="rgb(220,193,23)" fg:x="155" fg:w="19"/><text x="1.7178%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.18%)</title><rect x="1.4678%" y="197" width="0.1799%" height="15" fill="rgb(230,90,52)" fg:x="155" fg:w="19"/><text x="1.7178%" y="207.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.18%)</title><rect x="1.4678%" y="181" width="0.1799%" height="15" fill="rgb(252,106,19)" fg:x="155" fg:w="19"/><text x="1.7178%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.18%)</title><rect x="1.4678%" y="165" width="0.1799%" height="15" fill="rgb(206,74,20)" fg:x="155" fg:w="19"/><text x="1.7178%" y="175.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="1.6288%" y="149" width="0.0189%" height="15" fill="rgb(230,138,44)" fg:x="172" fg:w="2"/><text x="1.8788%" y="159.50"></text></g><g><title>clear_page_rep (5 samples, 0.05%)</title><rect x="1.6951%" y="85" width="0.0473%" height="15" fill="rgb(235,182,43)" fg:x="179" fg:w="5"/><text x="1.9451%" y="95.50"></text></g><g><title>alloc_pages_vma (8 samples, 0.08%)</title><rect x="1.6951%" y="133" width="0.0758%" height="15" fill="rgb(242,16,51)" fg:x="179" fg:w="8"/><text x="1.9451%" y="143.50"></text></g><g><title>__alloc_pages_nodemask (8 samples, 0.08%)</title><rect x="1.6951%" y="117" width="0.0758%" height="15" fill="rgb(248,9,4)" fg:x="179" fg:w="8"/><text x="1.9451%" y="127.50"></text></g><g><title>get_page_from_freelist (8 samples, 0.08%)</title><rect x="1.6951%" y="101" width="0.0758%" height="15" fill="rgb(210,31,22)" fg:x="179" fg:w="8"/><text x="1.9451%" y="111.50"></text></g><g><title>rmqueue (3 samples, 0.03%)</title><rect x="1.7424%" y="85" width="0.0284%" height="15" fill="rgb(239,54,39)" fg:x="184" fg:w="3"/><text x="1.9924%" y="95.50"></text></g><g><title>do_user_addr_fault (10 samples, 0.09%)</title><rect x="1.6951%" y="197" width="0.0947%" height="15" fill="rgb(230,99,41)" fg:x="179" fg:w="10"/><text x="1.9451%" y="207.50"></text></g><g><title>handle_mm_fault (10 samples, 0.09%)</title><rect x="1.6951%" y="181" width="0.0947%" height="15" fill="rgb(253,106,12)" fg:x="179" fg:w="10"/><text x="1.9451%" y="191.50"></text></g><g><title>__handle_mm_fault (10 samples, 0.09%)</title><rect x="1.6951%" y="165" width="0.0947%" height="15" fill="rgb(213,46,41)" fg:x="179" fg:w="10"/><text x="1.9451%" y="175.50"></text></g><g><title>do_anonymous_page (10 samples, 0.09%)</title><rect x="1.6951%" y="149" width="0.0947%" height="15" fill="rgb(215,133,35)" fg:x="179" fg:w="10"/><text x="1.9451%" y="159.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (16 samples, 0.15%)</title><rect x="1.6477%" y="277" width="0.1515%" height="15" fill="rgb(213,28,5)" fg:x="174" fg:w="16"/><text x="1.8977%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (16 samples, 0.15%)</title><rect x="1.6477%" y="261" width="0.1515%" height="15" fill="rgb(215,77,49)" fg:x="174" fg:w="16"/><text x="1.8977%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.15%)</title><rect x="1.6477%" y="245" width="0.1515%" height="15" fill="rgb(248,100,22)" fg:x="174" fg:w="16"/><text x="1.8977%" y="255.50"></text></g><g><title>asm_exc_page_fault (13 samples, 0.12%)</title><rect x="1.6761%" y="229" width="0.1231%" height="15" fill="rgb(208,67,9)" fg:x="177" fg:w="13"/><text x="1.9261%" y="239.50"></text></g><g><title>exc_page_fault (11 samples, 0.10%)</title><rect x="1.6951%" y="213" width="0.1042%" height="15" fill="rgb(219,133,21)" fg:x="179" fg:w="11"/><text x="1.9451%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (2 samples, 0.02%)</title><rect x="1.7992%" y="277" width="0.0189%" height="15" fill="rgb(246,46,29)" fg:x="190" fg:w="2"/><text x="2.0492%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.02%)</title><rect x="1.7992%" y="261" width="0.0189%" height="15" fill="rgb(246,185,52)" fg:x="190" fg:w="2"/><text x="2.0492%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.02%)</title><rect x="1.7992%" y="245" width="0.0189%" height="15" fill="rgb(252,136,11)" fg:x="190" fg:w="2"/><text x="2.0492%" y="255.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (2 samples, 0.02%)</title><rect x="1.7992%" y="229" width="0.0189%" height="15" fill="rgb(219,138,53)" fg:x="190" fg:w="2"/><text x="2.0492%" y="239.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (2 samples, 0.02%)</title><rect x="1.7992%" y="213" width="0.0189%" height="15" fill="rgb(211,51,23)" fg:x="190" fg:w="2"/><text x="2.0492%" y="223.50"></text></g><g><title>hashbrown::raw::is_full (4 samples, 0.04%)</title><rect x="1.9129%" y="245" width="0.0379%" height="15" fill="rgb(247,221,28)" fg:x="202" fg:w="4"/><text x="2.1629%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (78 samples, 0.74%)</title><rect x="1.2311%" y="341" width="0.7386%" height="15" fill="rgb(251,222,45)" fg:x="130" fg:w="78"/><text x="1.4811%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (78 samples, 0.74%)</title><rect x="1.2311%" y="325" width="0.7386%" height="15" fill="rgb(217,162,53)" fg:x="130" fg:w="78"/><text x="1.4811%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (76 samples, 0.72%)</title><rect x="1.2500%" y="309" width="0.7197%" height="15" fill="rgb(229,93,14)" fg:x="132" fg:w="76"/><text x="1.5000%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (76 samples, 0.72%)</title><rect x="1.2500%" y="293" width="0.7197%" height="15" fill="rgb(209,67,49)" fg:x="132" fg:w="76"/><text x="1.5000%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (16 samples, 0.15%)</title><rect x="1.8182%" y="277" width="0.1515%" height="15" fill="rgb(213,87,29)" fg:x="192" fg:w="16"/><text x="2.0682%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (16 samples, 0.15%)</title><rect x="1.8182%" y="261" width="0.1515%" height="15" fill="rgb(205,151,52)" fg:x="192" fg:w="16"/><text x="2.0682%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.02%)</title><rect x="1.9508%" y="245" width="0.0189%" height="15" fill="rgb(253,215,39)" fg:x="206" fg:w="2"/><text x="2.2008%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="1.9508%" y="229" width="0.0189%" height="15" fill="rgb(221,220,41)" fg:x="206" fg:w="2"/><text x="2.2008%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="1.9697%" y="325" width="0.0379%" height="15" fill="rgb(218,133,21)" fg:x="208" fg:w="4"/><text x="2.2197%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="1.9697%" y="309" width="0.0379%" height="15" fill="rgb(221,193,43)" fg:x="208" fg:w="4"/><text x="2.2197%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="1.9697%" y="293" width="0.0379%" height="15" fill="rgb(240,128,52)" fg:x="208" fg:w="4"/><text x="2.2197%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="2.0076%" y="325" width="0.0189%" height="15" fill="rgb(253,114,12)" fg:x="212" fg:w="2"/><text x="2.2576%" y="335.50"></text></g><g><title>hashbrown::map::make_insert_hash (12 samples, 0.11%)</title><rect x="1.9697%" y="341" width="0.1136%" height="15" fill="rgb(215,223,47)" fg:x="208" fg:w="12"/><text x="2.2197%" y="351.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (6 samples, 0.06%)</title><rect x="2.0265%" y="325" width="0.0568%" height="15" fill="rgb(248,225,23)" fg:x="214" fg:w="6"/><text x="2.2765%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (6 samples, 0.06%)</title><rect x="2.0265%" y="309" width="0.0568%" height="15" fill="rgb(250,108,0)" fg:x="214" fg:w="6"/><text x="2.2765%" y="319.50"></text></g><g><title>core::hash::Hasher::write_usize (5 samples, 0.05%)</title><rect x="2.0360%" y="293" width="0.0473%" height="15" fill="rgb(228,208,7)" fg:x="215" fg:w="5"/><text x="2.2860%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="2.0360%" y="277" width="0.0473%" height="15" fill="rgb(244,45,10)" fg:x="215" fg:w="5"/><text x="2.2860%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="2.0360%" y="261" width="0.0473%" height="15" fill="rgb(207,125,25)" fg:x="215" fg:w="5"/><text x="2.2860%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="2.0360%" y="245" width="0.0473%" height="15" fill="rgb(210,195,18)" fg:x="215" fg:w="5"/><text x="2.2860%" y="255.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="2.0644%" y="229" width="0.0189%" height="15" fill="rgb(249,80,12)" fg:x="218" fg:w="2"/><text x="2.3144%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="2.1780%" y="325" width="0.0379%" height="15" fill="rgb(221,65,9)" fg:x="230" fg:w="4"/><text x="2.4280%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="2.1780%" y="309" width="0.0379%" height="15" fill="rgb(235,49,36)" fg:x="230" fg:w="4"/><text x="2.4280%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="2.1970%" y="293" width="0.0189%" height="15" fill="rgb(225,32,20)" fg:x="232" fg:w="2"/><text x="2.4470%" y="303.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (109 samples, 1.03%)</title><rect x="1.2216%" y="357" width="1.0322%" height="15" fill="rgb(215,141,46)" fg:x="129" fg:w="109"/><text x="1.4716%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.17%)</title><rect x="2.0833%" y="341" width="0.1705%" height="15" fill="rgb(250,160,47)" fg:x="220" fg:w="18"/><text x="2.3333%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.04%)</title><rect x="2.2159%" y="325" width="0.0379%" height="15" fill="rgb(216,222,40)" fg:x="234" fg:w="4"/><text x="2.4659%" y="335.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.04%)</title><rect x="2.2159%" y="309" width="0.0379%" height="15" fill="rgb(234,217,39)" fg:x="234" fg:w="4"/><text x="2.4659%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.04%)</title><rect x="2.2159%" y="293" width="0.0379%" height="15" fill="rgb(207,178,40)" fg:x="234" fg:w="4"/><text x="2.4659%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.04%)</title><rect x="2.2159%" y="277" width="0.0379%" height="15" fill="rgb(221,136,13)" fg:x="234" fg:w="4"/><text x="2.4659%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.04%)</title><rect x="2.2159%" y="261" width="0.0379%" height="15" fill="rgb(249,199,10)" fg:x="234" fg:w="4"/><text x="2.4659%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.04%)</title><rect x="2.2159%" y="245" width="0.0379%" height="15" fill="rgb(249,222,13)" fg:x="234" fg:w="4"/><text x="2.4659%" y="255.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4 samples, 0.04%)</title><rect x="2.2159%" y="229" width="0.0379%" height="15" fill="rgb(244,185,38)" fg:x="234" fg:w="4"/><text x="2.4659%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (142 samples, 1.34%)</title><rect x="0.9375%" y="437" width="1.3447%" height="15" fill="rgb(236,202,9)" fg:x="99" fg:w="142"/><text x="1.1875%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (142 samples, 1.34%)</title><rect x="0.9375%" y="421" width="1.3447%" height="15" fill="rgb(250,229,37)" fg:x="99" fg:w="142"/><text x="1.1875%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (142 samples, 1.34%)</title><rect x="0.9375%" y="405" width="1.3447%" height="15" fill="rgb(206,174,23)" fg:x="99" fg:w="142"/><text x="1.1875%" y="415.50"></text></g><g><title>y2021::d05::main::p02::{{closure}} (140 samples, 1.33%)</title><rect x="0.9564%" y="389" width="1.3258%" height="15" fill="rgb(211,33,43)" fg:x="101" fg:w="140"/><text x="1.2064%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (112 samples, 1.06%)</title><rect x="1.2216%" y="373" width="1.0606%" height="15" fill="rgb(245,58,50)" fg:x="129" fg:w="112"/><text x="1.4716%" y="383.50"></text></g><g><title>std::collections::hash::map::map_entry (3 samples, 0.03%)</title><rect x="2.2538%" y="357" width="0.0284%" height="15" fill="rgb(244,68,36)" fg:x="238" fg:w="3"/><text x="2.5038%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (144 samples, 1.36%)</title><rect x="0.9375%" y="597" width="1.3636%" height="15" fill="rgb(232,229,15)" fg:x="99" fg:w="144"/><text x="1.1875%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (144 samples, 1.36%)</title><rect x="0.9375%" y="581" width="1.3636%" height="15" fill="rgb(254,30,23)" fg:x="99" fg:w="144"/><text x="1.1875%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (144 samples, 1.36%)</title><rect x="0.9375%" y="565" width="1.3636%" height="15" fill="rgb(235,160,14)" fg:x="99" fg:w="144"/><text x="1.1875%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (144 samples, 1.36%)</title><rect x="0.9375%" y="549" width="1.3636%" height="15" fill="rgb(212,155,44)" fg:x="99" fg:w="144"/><text x="1.1875%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (144 samples, 1.36%)</title><rect x="0.9375%" y="533" width="1.3636%" height="15" fill="rgb(226,2,50)" fg:x="99" fg:w="144"/><text x="1.1875%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (144 samples, 1.36%)</title><rect x="0.9375%" y="517" width="1.3636%" height="15" fill="rgb(234,177,6)" fg:x="99" fg:w="144"/><text x="1.1875%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (144 samples, 1.36%)</title><rect x="0.9375%" y="501" width="1.3636%" height="15" fill="rgb(217,24,9)" fg:x="99" fg:w="144"/><text x="1.1875%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (144 samples, 1.36%)</title><rect x="0.9375%" y="485" width="1.3636%" height="15" fill="rgb(220,13,46)" fg:x="99" fg:w="144"/><text x="1.1875%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (144 samples, 1.36%)</title><rect x="0.9375%" y="469" width="1.3636%" height="15" fill="rgb(239,221,27)" fg:x="99" fg:w="144"/><text x="1.1875%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (144 samples, 1.36%)</title><rect x="0.9375%" y="453" width="1.3636%" height="15" fill="rgb(222,198,25)" fg:x="99" fg:w="144"/><text x="1.1875%" y="463.50"></text></g><g><title>y2021::d05::main::p02::{{closure}} (2 samples, 0.02%)</title><rect x="2.2822%" y="437" width="0.0189%" height="15" fill="rgb(211,99,13)" fg:x="241" fg:w="2"/><text x="2.5322%" y="447.50"></text></g><g><title>y2021::types::line::Line::points (2 samples, 0.02%)</title><rect x="2.2822%" y="421" width="0.0189%" height="15" fill="rgb(232,111,31)" fg:x="241" fg:w="2"/><text x="2.5322%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="2.2822%" y="405" width="0.0189%" height="15" fill="rgb(245,82,37)" fg:x="241" fg:w="2"/><text x="2.5322%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="2.2822%" y="389" width="0.0189%" height="15" fill="rgb(227,149,46)" fg:x="241" fg:w="2"/><text x="2.5322%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="2.2822%" y="373" width="0.0189%" height="15" fill="rgb(218,36,50)" fg:x="241" fg:w="2"/><text x="2.5322%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="2.2822%" y="357" width="0.0189%" height="15" fill="rgb(226,80,48)" fg:x="241" fg:w="2"/><text x="2.5322%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="2.2822%" y="341" width="0.0189%" height="15" fill="rgb(238,224,15)" fg:x="241" fg:w="2"/><text x="2.5322%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.02%)</title><rect x="2.2822%" y="325" width="0.0189%" height="15" fill="rgb(241,136,10)" fg:x="241" fg:w="2"/><text x="2.5322%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="2.2822%" y="309" width="0.0189%" height="15" fill="rgb(208,32,45)" fg:x="241" fg:w="2"/><text x="2.5322%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (2 samples, 0.02%)</title><rect x="2.2822%" y="293" width="0.0189%" height="15" fill="rgb(207,135,9)" fg:x="241" fg:w="2"/><text x="2.5322%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (2 samples, 0.02%)</title><rect x="2.2822%" y="277" width="0.0189%" height="15" fill="rgb(206,86,44)" fg:x="241" fg:w="2"/><text x="2.5322%" y="287.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (2 samples, 0.02%)</title><rect x="2.2822%" y="261" width="0.0189%" height="15" fill="rgb(245,177,15)" fg:x="241" fg:w="2"/><text x="2.5322%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (2 samples, 0.02%)</title><rect x="2.2822%" y="245" width="0.0189%" height="15" fill="rgb(206,64,50)" fg:x="241" fg:w="2"/><text x="2.5322%" y="255.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.02%)</title><rect x="2.2822%" y="229" width="0.0189%" height="15" fill="rgb(234,36,40)" fg:x="241" fg:w="2"/><text x="2.5322%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="2.3011%" y="501" width="0.0379%" height="15" fill="rgb(213,64,8)" fg:x="243" fg:w="4"/><text x="2.5511%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4 samples, 0.04%)</title><rect x="2.3011%" y="485" width="0.0379%" height="15" fill="rgb(210,75,36)" fg:x="243" fg:w="4"/><text x="2.5511%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.04%)</title><rect x="2.3011%" y="469" width="0.0379%" height="15" fill="rgb(229,88,21)" fg:x="243" fg:w="4"/><text x="2.5511%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.05%)</title><rect x="2.3011%" y="597" width="0.0473%" height="15" fill="rgb(252,204,47)" fg:x="243" fg:w="5"/><text x="2.5511%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.05%)</title><rect x="2.3011%" y="581" width="0.0473%" height="15" fill="rgb(208,77,27)" fg:x="243" fg:w="5"/><text x="2.5511%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.05%)</title><rect x="2.3011%" y="565" width="0.0473%" height="15" fill="rgb(221,76,26)" fg:x="243" fg:w="5"/><text x="2.5511%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.05%)</title><rect x="2.3011%" y="549" width="0.0473%" height="15" fill="rgb(225,139,18)" fg:x="243" fg:w="5"/><text x="2.5511%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.05%)</title><rect x="2.3011%" y="533" width="0.0473%" height="15" fill="rgb(230,137,11)" fg:x="243" fg:w="5"/><text x="2.5511%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.05%)</title><rect x="2.3011%" y="517" width="0.0473%" height="15" fill="rgb(212,28,1)" fg:x="243" fg:w="5"/><text x="2.5511%" y="527.50"></text></g><g><title>tlb_finish_mmu (2 samples, 0.02%)</title><rect x="2.3580%" y="293" width="0.0189%" height="15" fill="rgb(248,164,17)" fg:x="249" fg:w="2"/><text x="2.6080%" y="303.50"></text></g><g><title>tlb_flush_mmu (2 samples, 0.02%)</title><rect x="2.3580%" y="277" width="0.0189%" height="15" fill="rgb(222,171,42)" fg:x="249" fg:w="2"/><text x="2.6080%" y="287.50"></text></g><g><title>free_pages_and_swap_cache (2 samples, 0.02%)</title><rect x="2.3580%" y="261" width="0.0189%" height="15" fill="rgb(243,84,45)" fg:x="249" fg:w="2"/><text x="2.6080%" y="271.50"></text></g><g><title>release_pages (2 samples, 0.02%)</title><rect x="2.3580%" y="245" width="0.0189%" height="15" fill="rgb(252,49,23)" fg:x="249" fg:w="2"/><text x="2.6080%" y="255.50"></text></g><g><title>y2021::d05::main::run (230 samples, 2.18%)</title><rect x="0.2083%" y="629" width="2.1780%" height="15" fill="rgb(215,19,7)" fg:x="22" fg:w="230"/><text x="0.4583%" y="639.50">y..</text></g><g><title>y2021::d05::main::p02 (153 samples, 1.45%)</title><rect x="0.9375%" y="613" width="1.4489%" height="15" fill="rgb(238,81,41)" fg:x="99" fg:w="153"/><text x="1.1875%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::types::point::Point,i32&gt;&gt; (4 samples, 0.04%)</title><rect x="2.3485%" y="597" width="0.0379%" height="15" fill="rgb(210,199,37)" fg:x="248" fg:w="4"/><text x="2.5985%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::types::point::Point,i32,std::collections::hash::map::RandomState&gt;&gt; (4 samples, 0.04%)</title><rect x="2.3485%" y="581" width="0.0379%" height="15" fill="rgb(244,192,49)" fg:x="248" fg:w="4"/><text x="2.5985%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::types::point::Point,i32)&gt;&gt; (4 samples, 0.04%)</title><rect x="2.3485%" y="565" width="0.0379%" height="15" fill="rgb(226,211,11)" fg:x="248" fg:w="4"/><text x="2.5985%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="2.3485%" y="549" width="0.0379%" height="15" fill="rgb(236,162,54)" fg:x="248" fg:w="4"/><text x="2.5985%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (4 samples, 0.04%)</title><rect x="2.3485%" y="533" width="0.0379%" height="15" fill="rgb(220,229,9)" fg:x="248" fg:w="4"/><text x="2.5985%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (4 samples, 0.04%)</title><rect x="2.3485%" y="517" width="0.0379%" height="15" fill="rgb(250,87,22)" fg:x="248" fg:w="4"/><text x="2.5985%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="2.3485%" y="501" width="0.0379%" height="15" fill="rgb(239,43,17)" fg:x="248" fg:w="4"/><text x="2.5985%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="2.3485%" y="485" width="0.0379%" height="15" fill="rgb(231,177,25)" fg:x="248" fg:w="4"/><text x="2.5985%" y="495.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="2.3580%" y="469" width="0.0284%" height="15" fill="rgb(219,179,1)" fg:x="249" fg:w="3"/><text x="2.6080%" y="479.50"></text></g><g><title>systrim (3 samples, 0.03%)</title><rect x="2.3580%" y="453" width="0.0284%" height="15" fill="rgb(238,219,53)" fg:x="249" fg:w="3"/><text x="2.6080%" y="463.50"></text></g><g><title>__GI___default_morecore (3 samples, 0.03%)</title><rect x="2.3580%" y="437" width="0.0284%" height="15" fill="rgb(232,167,36)" fg:x="249" fg:w="3"/><text x="2.6080%" y="447.50"></text></g><g><title>__GI___sbrk (3 samples, 0.03%)</title><rect x="2.3580%" y="421" width="0.0284%" height="15" fill="rgb(244,19,51)" fg:x="249" fg:w="3"/><text x="2.6080%" y="431.50"></text></g><g><title>__GI___sbrk (3 samples, 0.03%)</title><rect x="2.3580%" y="405" width="0.0284%" height="15" fill="rgb(224,6,22)" fg:x="249" fg:w="3"/><text x="2.6080%" y="415.50"></text></g><g><title>__brk (3 samples, 0.03%)</title><rect x="2.3580%" y="389" width="0.0284%" height="15" fill="rgb(224,145,5)" fg:x="249" fg:w="3"/><text x="2.6080%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="2.3580%" y="373" width="0.0284%" height="15" fill="rgb(234,130,49)" fg:x="249" fg:w="3"/><text x="2.6080%" y="383.50"></text></g><g><title>do_syscall_64 (3 samples, 0.03%)</title><rect x="2.3580%" y="357" width="0.0284%" height="15" fill="rgb(254,6,2)" fg:x="249" fg:w="3"/><text x="2.6080%" y="367.50"></text></g><g><title>__x64_sys_brk (3 samples, 0.03%)</title><rect x="2.3580%" y="341" width="0.0284%" height="15" fill="rgb(208,96,46)" fg:x="249" fg:w="3"/><text x="2.6080%" y="351.50"></text></g><g><title>__do_munmap (3 samples, 0.03%)</title><rect x="2.3580%" y="325" width="0.0284%" height="15" fill="rgb(239,3,39)" fg:x="249" fg:w="3"/><text x="2.6080%" y="335.50"></text></g><g><title>unmap_region (3 samples, 0.03%)</title><rect x="2.3580%" y="309" width="0.0284%" height="15" fill="rgb(233,210,1)" fg:x="249" fg:w="3"/><text x="2.6080%" y="319.50"></text></g><g><title>y2021::d07::main::p01 (4 samples, 0.04%)</title><rect x="2.3864%" y="613" width="0.0379%" height="15" fill="rgb(244,137,37)" fg:x="252" fg:w="4"/><text x="2.6364%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.04%)</title><rect x="2.3864%" y="597" width="0.0379%" height="15" fill="rgb(240,136,2)" fg:x="252" fg:w="4"/><text x="2.6364%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.04%)</title><rect x="2.3864%" y="581" width="0.0379%" height="15" fill="rgb(239,18,37)" fg:x="252" fg:w="4"/><text x="2.6364%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.04%)</title><rect x="2.3864%" y="565" width="0.0379%" height="15" fill="rgb(218,185,22)" fg:x="252" fg:w="4"/><text x="2.6364%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.04%)</title><rect x="2.3864%" y="549" width="0.0379%" height="15" fill="rgb(225,218,4)" fg:x="252" fg:w="4"/><text x="2.6364%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.04%)</title><rect x="2.3864%" y="533" width="0.0379%" height="15" fill="rgb(230,182,32)" fg:x="252" fg:w="4"/><text x="2.6364%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.04%)</title><rect x="2.3864%" y="517" width="0.0379%" height="15" fill="rgb(242,56,43)" fg:x="252" fg:w="4"/><text x="2.6364%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.04%)</title><rect x="2.3864%" y="501" width="0.0379%" height="15" fill="rgb(233,99,24)" fg:x="252" fg:w="4"/><text x="2.6364%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (4 samples, 0.04%)</title><rect x="2.3864%" y="485" width="0.0379%" height="15" fill="rgb(234,209,42)" fg:x="252" fg:w="4"/><text x="2.6364%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (4 samples, 0.04%)</title><rect x="2.3864%" y="469" width="0.0379%" height="15" fill="rgb(227,7,12)" fg:x="252" fg:w="4"/><text x="2.6364%" y="479.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (4 samples, 0.04%)</title><rect x="2.3864%" y="453" width="0.0379%" height="15" fill="rgb(245,203,43)" fg:x="252" fg:w="4"/><text x="2.6364%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (4 samples, 0.04%)</title><rect x="2.3864%" y="437" width="0.0379%" height="15" fill="rgb(238,205,33)" fg:x="252" fg:w="4"/><text x="2.6364%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.04%)</title><rect x="2.3864%" y="421" width="0.0379%" height="15" fill="rgb(231,56,7)" fg:x="252" fg:w="4"/><text x="2.6364%" y="431.50"></text></g><g><title>y2021::d07::main::p01::{{closure}} (4 samples, 0.04%)</title><rect x="2.3864%" y="405" width="0.0379%" height="15" fill="rgb(244,186,29)" fg:x="252" fg:w="4"/><text x="2.6364%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4 samples, 0.04%)</title><rect x="2.3864%" y="389" width="0.0379%" height="15" fill="rgb(234,111,31)" fg:x="252" fg:w="4"/><text x="2.6364%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4 samples, 0.04%)</title><rect x="2.3864%" y="373" width="0.0379%" height="15" fill="rgb(241,149,10)" fg:x="252" fg:w="4"/><text x="2.6364%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.04%)</title><rect x="2.3864%" y="357" width="0.0379%" height="15" fill="rgb(249,206,44)" fg:x="252" fg:w="4"/><text x="2.6364%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.04%)</title><rect x="2.3864%" y="341" width="0.0379%" height="15" fill="rgb(251,153,30)" fg:x="252" fg:w="4"/><text x="2.6364%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.03%)</title><rect x="2.3958%" y="325" width="0.0284%" height="15" fill="rgb(239,152,38)" fg:x="253" fg:w="3"/><text x="2.6458%" y="335.50"></text></g><g><title>y2021::d07::main::p01::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="2.4053%" y="309" width="0.0189%" height="15" fill="rgb(249,139,47)" fg:x="254" fg:w="2"/><text x="2.6553%" y="319.50"></text></g><g><title>y2021::utils::math::abs_diff (2 samples, 0.02%)</title><rect x="2.4053%" y="293" width="0.0189%" height="15" fill="rgb(244,64,35)" fg:x="254" fg:w="2"/><text x="2.6553%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (2 samples, 0.02%)</title><rect x="2.4053%" y="277" width="0.0189%" height="15" fill="rgb(216,46,15)" fg:x="254" fg:w="2"/><text x="2.6553%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::gt (2 samples, 0.02%)</title><rect x="2.4053%" y="261" width="0.0189%" height="15" fill="rgb(250,74,19)" fg:x="254" fg:w="2"/><text x="2.6553%" y="271.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (3 samples, 0.03%)</title><rect x="2.4337%" y="277" width="0.0284%" height="15" fill="rgb(249,42,33)" fg:x="257" fg:w="3"/><text x="2.6837%" y="287.50"></text></g><g><title>y2021::d07::main::run (11 samples, 0.10%)</title><rect x="2.3864%" y="629" width="0.1042%" height="15" fill="rgb(242,149,17)" fg:x="252" fg:w="11"/><text x="2.6364%" y="639.50"></text></g><g><title>y2021::d07::main::p02 (7 samples, 0.07%)</title><rect x="2.4242%" y="613" width="0.0663%" height="15" fill="rgb(244,29,21)" fg:x="256" fg:w="7"/><text x="2.6742%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.07%)</title><rect x="2.4242%" y="597" width="0.0663%" height="15" fill="rgb(220,130,37)" fg:x="256" fg:w="7"/><text x="2.6742%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.07%)</title><rect x="2.4242%" y="581" width="0.0663%" height="15" fill="rgb(211,67,2)" fg:x="256" fg:w="7"/><text x="2.6742%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.07%)</title><rect x="2.4242%" y="565" width="0.0663%" height="15" fill="rgb(235,68,52)" fg:x="256" fg:w="7"/><text x="2.6742%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.07%)</title><rect x="2.4242%" y="549" width="0.0663%" height="15" fill="rgb(246,142,3)" fg:x="256" fg:w="7"/><text x="2.6742%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.07%)</title><rect x="2.4242%" y="533" width="0.0663%" height="15" fill="rgb(241,25,7)" fg:x="256" fg:w="7"/><text x="2.6742%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.07%)</title><rect x="2.4242%" y="517" width="0.0663%" height="15" fill="rgb(242,119,39)" fg:x="256" fg:w="7"/><text x="2.6742%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.07%)</title><rect x="2.4242%" y="501" width="0.0663%" height="15" fill="rgb(241,98,45)" fg:x="256" fg:w="7"/><text x="2.6742%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (7 samples, 0.07%)</title><rect x="2.4242%" y="485" width="0.0663%" height="15" fill="rgb(254,28,30)" fg:x="256" fg:w="7"/><text x="2.6742%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (7 samples, 0.07%)</title><rect x="2.4242%" y="469" width="0.0663%" height="15" fill="rgb(241,142,54)" fg:x="256" fg:w="7"/><text x="2.6742%" y="479.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (7 samples, 0.07%)</title><rect x="2.4242%" y="453" width="0.0663%" height="15" fill="rgb(222,85,15)" fg:x="256" fg:w="7"/><text x="2.6742%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (7 samples, 0.07%)</title><rect x="2.4242%" y="437" width="0.0663%" height="15" fill="rgb(210,85,47)" fg:x="256" fg:w="7"/><text x="2.6742%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.07%)</title><rect x="2.4242%" y="421" width="0.0663%" height="15" fill="rgb(224,206,25)" fg:x="256" fg:w="7"/><text x="2.6742%" y="431.50"></text></g><g><title>y2021::d07::main::p02::{{closure}} (7 samples, 0.07%)</title><rect x="2.4242%" y="405" width="0.0663%" height="15" fill="rgb(243,201,19)" fg:x="256" fg:w="7"/><text x="2.6742%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (7 samples, 0.07%)</title><rect x="2.4242%" y="389" width="0.0663%" height="15" fill="rgb(236,59,4)" fg:x="256" fg:w="7"/><text x="2.6742%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (7 samples, 0.07%)</title><rect x="2.4242%" y="373" width="0.0663%" height="15" fill="rgb(254,179,45)" fg:x="256" fg:w="7"/><text x="2.6742%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.07%)</title><rect x="2.4242%" y="357" width="0.0663%" height="15" fill="rgb(226,14,10)" fg:x="256" fg:w="7"/><text x="2.6742%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.07%)</title><rect x="2.4242%" y="341" width="0.0663%" height="15" fill="rgb(244,27,41)" fg:x="256" fg:w="7"/><text x="2.6742%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.07%)</title><rect x="2.4242%" y="325" width="0.0663%" height="15" fill="rgb(235,35,32)" fg:x="256" fg:w="7"/><text x="2.6742%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.06%)</title><rect x="2.4337%" y="309" width="0.0568%" height="15" fill="rgb(218,68,31)" fg:x="257" fg:w="6"/><text x="2.6837%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.06%)</title><rect x="2.4337%" y="293" width="0.0568%" height="15" fill="rgb(207,120,37)" fg:x="257" fg:w="6"/><text x="2.6837%" y="303.50"></text></g><g><title>y2021::d07::main::p02::{{closure}}::{{closure}} (3 samples, 0.03%)</title><rect x="2.4621%" y="277" width="0.0284%" height="15" fill="rgb(227,98,0)" fg:x="260" fg:w="3"/><text x="2.7121%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="2.5284%" y="309" width="0.0189%" height="15" fill="rgb(207,7,3)" fg:x="267" fg:w="2"/><text x="2.7784%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="2.5284%" y="293" width="0.0189%" height="15" fill="rgb(206,98,19)" fg:x="267" fg:w="2"/><text x="2.7784%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="2.5284%" y="277" width="0.0189%" height="15" fill="rgb(217,5,26)" fg:x="267" fg:w="2"/><text x="2.7784%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="2.5284%" y="261" width="0.0189%" height="15" fill="rgb(235,190,38)" fg:x="267" fg:w="2"/><text x="2.7784%" y="271.50"></text></g><g><title>y2021::d08::main::run (8 samples, 0.08%)</title><rect x="2.4905%" y="629" width="0.0758%" height="15" fill="rgb(247,86,24)" fg:x="263" fg:w="8"/><text x="2.7405%" y="639.50"></text></g><g><title>y2021::d08::main::p02 (7 samples, 0.07%)</title><rect x="2.5000%" y="613" width="0.0663%" height="15" fill="rgb(205,101,16)" fg:x="264" fg:w="7"/><text x="2.7500%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (7 samples, 0.07%)</title><rect x="2.5000%" y="597" width="0.0663%" height="15" fill="rgb(246,168,33)" fg:x="264" fg:w="7"/><text x="2.7500%" y="607.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::iter::traits::accum::Sum&lt;core::option::Option&lt;U&gt;&gt;&gt;::sum (7 samples, 0.07%)</title><rect x="2.5000%" y="581" width="0.0663%" height="15" fill="rgb(231,114,1)" fg:x="264" fg:w="7"/><text x="2.7500%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (7 samples, 0.07%)</title><rect x="2.5000%" y="565" width="0.0663%" height="15" fill="rgb(207,184,53)" fg:x="264" fg:w="7"/><text x="2.7500%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::accum::Sum&lt;core::result::Result&lt;U,E&gt;&gt;&gt;::sum (7 samples, 0.07%)</title><rect x="2.5000%" y="549" width="0.0663%" height="15" fill="rgb(224,95,51)" fg:x="264" fg:w="7"/><text x="2.7500%" y="559.50"></text></g><g><title>core::iter::adapters::process_results (7 samples, 0.07%)</title><rect x="2.5000%" y="533" width="0.0663%" height="15" fill="rgb(212,188,45)" fg:x="264" fg:w="7"/><text x="2.7500%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::accum::Sum&lt;core::result::Result&lt;U,E&gt;&gt;&gt;::sum::{{closure}} (7 samples, 0.07%)</title><rect x="2.5000%" y="517" width="0.0663%" height="15" fill="rgb(223,154,38)" fg:x="264" fg:w="7"/><text x="2.7500%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (7 samples, 0.07%)</title><rect x="2.5000%" y="501" width="0.0663%" height="15" fill="rgb(251,22,52)" fg:x="264" fg:w="7"/><text x="2.7500%" y="511.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (7 samples, 0.07%)</title><rect x="2.5000%" y="485" width="0.0663%" height="15" fill="rgb(229,209,22)" fg:x="264" fg:w="7"/><text x="2.7500%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.07%)</title><rect x="2.5000%" y="469" width="0.0663%" height="15" fill="rgb(234,138,34)" fg:x="264" fg:w="7"/><text x="2.7500%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.07%)</title><rect x="2.5000%" y="453" width="0.0663%" height="15" fill="rgb(212,95,11)" fg:x="264" fg:w="7"/><text x="2.7500%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.07%)</title><rect x="2.5000%" y="437" width="0.0663%" height="15" fill="rgb(240,179,47)" fg:x="264" fg:w="7"/><text x="2.7500%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.07%)</title><rect x="2.5000%" y="421" width="0.0663%" height="15" fill="rgb(240,163,11)" fg:x="264" fg:w="7"/><text x="2.7500%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.07%)</title><rect x="2.5000%" y="405" width="0.0663%" height="15" fill="rgb(236,37,12)" fg:x="264" fg:w="7"/><text x="2.7500%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.07%)</title><rect x="2.5000%" y="389" width="0.0663%" height="15" fill="rgb(232,164,16)" fg:x="264" fg:w="7"/><text x="2.7500%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (7 samples, 0.07%)</title><rect x="2.5000%" y="373" width="0.0663%" height="15" fill="rgb(244,205,15)" fg:x="264" fg:w="7"/><text x="2.7500%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (7 samples, 0.07%)</title><rect x="2.5000%" y="357" width="0.0663%" height="15" fill="rgb(223,117,47)" fg:x="264" fg:w="7"/><text x="2.7500%" y="367.50"></text></g><g><title>y2021::d08::main::p02::{{closure}} (7 samples, 0.07%)</title><rect x="2.5000%" y="341" width="0.0663%" height="15" fill="rgb(244,107,35)" fg:x="264" fg:w="7"/><text x="2.7500%" y="351.50"></text></g><g><title>y2021::d08::main::signal_value (5 samples, 0.05%)</title><rect x="2.5189%" y="325" width="0.0473%" height="15" fill="rgb(205,140,8)" fg:x="266" fg:w="5"/><text x="2.7689%" y="335.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.02%)</title><rect x="2.5473%" y="309" width="0.0189%" height="15" fill="rgb(228,84,46)" fg:x="269" fg:w="2"/><text x="2.7973%" y="319.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="2.5473%" y="293" width="0.0189%" height="15" fill="rgb(254,188,9)" fg:x="269" fg:w="2"/><text x="2.7973%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="2.5473%" y="277" width="0.0189%" height="15" fill="rgb(206,112,54)" fg:x="269" fg:w="2"/><text x="2.7973%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="2.5473%" y="261" width="0.0189%" height="15" fill="rgb(216,84,49)" fg:x="269" fg:w="2"/><text x="2.7973%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="2.5473%" y="245" width="0.0189%" height="15" fill="rgb(214,194,35)" fg:x="269" fg:w="2"/><text x="2.7973%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="2.5473%" y="229" width="0.0189%" height="15" fill="rgb(249,28,3)" fg:x="269" fg:w="2"/><text x="2.7973%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="2.5473%" y="213" width="0.0189%" height="15" fill="rgb(222,56,52)" fg:x="269" fg:w="2"/><text x="2.7973%" y="223.50"></text></g><g><title>y2021::d09::main::get_basin_size (5 samples, 0.05%)</title><rect x="2.5758%" y="357" width="0.0473%" height="15" fill="rgb(245,217,50)" fg:x="272" fg:w="5"/><text x="2.8258%" y="367.50"></text></g><g><title>y2021::d09::main::get_basin_size (5 samples, 0.05%)</title><rect x="2.5758%" y="341" width="0.0473%" height="15" fill="rgb(213,201,24)" fg:x="272" fg:w="5"/><text x="2.8258%" y="351.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.04%)</title><rect x="2.5852%" y="325" width="0.0379%" height="15" fill="rgb(248,116,28)" fg:x="273" fg:w="4"/><text x="2.8352%" y="335.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.04%)</title><rect x="2.5852%" y="309" width="0.0379%" height="15" fill="rgb(219,72,43)" fg:x="273" fg:w="4"/><text x="2.8352%" y="319.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.04%)</title><rect x="2.5852%" y="293" width="0.0379%" height="15" fill="rgb(209,138,14)" fg:x="273" fg:w="4"/><text x="2.8352%" y="303.50"></text></g><g><title>y2021::d09::main::get_basin_size (3 samples, 0.03%)</title><rect x="2.5947%" y="277" width="0.0284%" height="15" fill="rgb(222,18,33)" fg:x="274" fg:w="3"/><text x="2.8447%" y="287.50"></text></g><g><title>y2021::d09::main::get_basin_size (3 samples, 0.03%)</title><rect x="2.5947%" y="261" width="0.0284%" height="15" fill="rgb(213,199,7)" fg:x="274" fg:w="3"/><text x="2.8447%" y="271.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.02%)</title><rect x="2.6042%" y="245" width="0.0189%" height="15" fill="rgb(250,110,10)" fg:x="275" fg:w="2"/><text x="2.8542%" y="255.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.02%)</title><rect x="2.6042%" y="229" width="0.0189%" height="15" fill="rgb(248,123,6)" fg:x="275" fg:w="2"/><text x="2.8542%" y="239.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.02%)</title><rect x="2.6042%" y="213" width="0.0189%" height="15" fill="rgb(206,91,31)" fg:x="275" fg:w="2"/><text x="2.8542%" y="223.50"></text></g><g><title>y2021::d09::main::run (7 samples, 0.07%)</title><rect x="2.5663%" y="629" width="0.0663%" height="15" fill="rgb(211,154,13)" fg:x="271" fg:w="7"/><text x="2.8163%" y="639.50"></text></g><g><title>y2021::d09::main::p02 (6 samples, 0.06%)</title><rect x="2.5758%" y="613" width="0.0568%" height="15" fill="rgb(225,148,7)" fg:x="272" fg:w="6"/><text x="2.8258%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.06%)</title><rect x="2.5758%" y="597" width="0.0568%" height="15" fill="rgb(220,160,43)" fg:x="272" fg:w="6"/><text x="2.8258%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.06%)</title><rect x="2.5758%" y="581" width="0.0568%" height="15" fill="rgb(213,52,39)" fg:x="272" fg:w="6"/><text x="2.8258%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.06%)</title><rect x="2.5758%" y="565" width="0.0568%" height="15" fill="rgb(243,137,7)" fg:x="272" fg:w="6"/><text x="2.8258%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.06%)</title><rect x="2.5758%" y="549" width="0.0568%" height="15" fill="rgb(230,79,13)" fg:x="272" fg:w="6"/><text x="2.8258%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.06%)</title><rect x="2.5758%" y="533" width="0.0568%" height="15" fill="rgb(247,105,23)" fg:x="272" fg:w="6"/><text x="2.8258%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.06%)</title><rect x="2.5758%" y="517" width="0.0568%" height="15" fill="rgb(223,179,41)" fg:x="272" fg:w="6"/><text x="2.8258%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.06%)</title><rect x="2.5758%" y="501" width="0.0568%" height="15" fill="rgb(218,9,34)" fg:x="272" fg:w="6"/><text x="2.8258%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.06%)</title><rect x="2.5758%" y="485" width="0.0568%" height="15" fill="rgb(222,106,8)" fg:x="272" fg:w="6"/><text x="2.8258%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.06%)</title><rect x="2.5758%" y="469" width="0.0568%" height="15" fill="rgb(211,220,0)" fg:x="272" fg:w="6"/><text x="2.8258%" y="479.50"></text></g><g><title>y2021::d09::main::p02::{{closure}} (6 samples, 0.06%)</title><rect x="2.5758%" y="453" width="0.0568%" height="15" fill="rgb(229,52,16)" fg:x="272" fg:w="6"/><text x="2.8258%" y="463.50"></text></g><g><title>y2021::d09::main::get_basin_size (6 samples, 0.06%)</title><rect x="2.5758%" y="437" width="0.0568%" height="15" fill="rgb(212,155,18)" fg:x="272" fg:w="6"/><text x="2.8258%" y="447.50"></text></g><g><title>y2021::d09::main::get_basin_size (6 samples, 0.06%)</title><rect x="2.5758%" y="421" width="0.0568%" height="15" fill="rgb(242,21,14)" fg:x="272" fg:w="6"/><text x="2.8258%" y="431.50"></text></g><g><title>y2021::d09::main::get_basin_size (6 samples, 0.06%)</title><rect x="2.5758%" y="405" width="0.0568%" height="15" fill="rgb(222,19,48)" fg:x="272" fg:w="6"/><text x="2.8258%" y="415.50"></text></g><g><title>y2021::d09::main::get_basin_size (6 samples, 0.06%)</title><rect x="2.5758%" y="389" width="0.0568%" height="15" fill="rgb(232,45,27)" fg:x="272" fg:w="6"/><text x="2.8258%" y="399.50"></text></g><g><title>y2021::d09::main::get_basin_size (6 samples, 0.06%)</title><rect x="2.5758%" y="373" width="0.0568%" height="15" fill="rgb(249,103,42)" fg:x="272" fg:w="6"/><text x="2.8258%" y="383.50"></text></g><g><title>y2021::d10::main::run (2 samples, 0.02%)</title><rect x="2.6326%" y="629" width="0.0189%" height="15" fill="rgb(246,81,33)" fg:x="278" fg:w="2"/><text x="2.8826%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="2.6515%" y="421" width="0.0189%" height="15" fill="rgb(252,33,42)" fg:x="280" fg:w="2"/><text x="2.9015%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.02%)</title><rect x="2.6515%" y="405" width="0.0189%" height="15" fill="rgb(209,212,41)" fg:x="280" fg:w="2"/><text x="2.9015%" y="415.50"></text></g><g><title>y2021::d11::main::p01 (5 samples, 0.05%)</title><rect x="2.6515%" y="613" width="0.0473%" height="15" fill="rgb(207,154,6)" fg:x="280" fg:w="5"/><text x="2.9015%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (5 samples, 0.05%)</title><rect x="2.6515%" y="597" width="0.0473%" height="15" fill="rgb(223,64,47)" fg:x="280" fg:w="5"/><text x="2.9015%" y="607.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (5 samples, 0.05%)</title><rect x="2.6515%" y="581" width="0.0473%" height="15" fill="rgb(211,161,38)" fg:x="280" fg:w="5"/><text x="2.9015%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.05%)</title><rect x="2.6515%" y="565" width="0.0473%" height="15" fill="rgb(219,138,40)" fg:x="280" fg:w="5"/><text x="2.9015%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.05%)</title><rect x="2.6515%" y="549" width="0.0473%" height="15" fill="rgb(241,228,46)" fg:x="280" fg:w="5"/><text x="2.9015%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.05%)</title><rect x="2.6515%" y="533" width="0.0473%" height="15" fill="rgb(223,209,38)" fg:x="280" fg:w="5"/><text x="2.9015%" y="543.50"></text></g><g><title>y2021::d11::main::p01::{{closure}} (5 samples, 0.05%)</title><rect x="2.6515%" y="517" width="0.0473%" height="15" fill="rgb(236,164,45)" fg:x="280" fg:w="5"/><text x="2.9015%" y="527.50"></text></g><g><title>y2021::d11::main::cycle_step (5 samples, 0.05%)</title><rect x="2.6515%" y="501" width="0.0473%" height="15" fill="rgb(231,15,5)" fg:x="280" fg:w="5"/><text x="2.9015%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.05%)</title><rect x="2.6515%" y="485" width="0.0473%" height="15" fill="rgb(252,35,15)" fg:x="280" fg:w="5"/><text x="2.9015%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.05%)</title><rect x="2.6515%" y="469" width="0.0473%" height="15" fill="rgb(248,181,18)" fg:x="280" fg:w="5"/><text x="2.9015%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.05%)</title><rect x="2.6515%" y="453" width="0.0473%" height="15" fill="rgb(233,39,42)" fg:x="280" fg:w="5"/><text x="2.9015%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.05%)</title><rect x="2.6515%" y="437" width="0.0473%" height="15" fill="rgb(238,110,33)" fg:x="280" fg:w="5"/><text x="2.9015%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="2.6705%" y="421" width="0.0284%" height="15" fill="rgb(233,195,10)" fg:x="282" fg:w="3"/><text x="2.9205%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="2.6705%" y="405" width="0.0284%" height="15" fill="rgb(254,105,3)" fg:x="282" fg:w="3"/><text x="2.9205%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.03%)</title><rect x="2.6705%" y="389" width="0.0284%" height="15" fill="rgb(221,225,9)" fg:x="282" fg:w="3"/><text x="2.9205%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.03%)</title><rect x="2.6705%" y="373" width="0.0284%" height="15" fill="rgb(224,227,45)" fg:x="282" fg:w="3"/><text x="2.9205%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.03%)</title><rect x="2.6705%" y="357" width="0.0284%" height="15" fill="rgb(229,198,43)" fg:x="282" fg:w="3"/><text x="2.9205%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.03%)</title><rect x="2.6705%" y="341" width="0.0284%" height="15" fill="rgb(206,209,35)" fg:x="282" fg:w="3"/><text x="2.9205%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (3 samples, 0.03%)</title><rect x="2.6705%" y="325" width="0.0284%" height="15" fill="rgb(245,195,53)" fg:x="282" fg:w="3"/><text x="2.9205%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.03%)</title><rect x="2.6705%" y="309" width="0.0284%" height="15" fill="rgb(240,92,26)" fg:x="282" fg:w="3"/><text x="2.9205%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.03%)</title><rect x="2.6705%" y="293" width="0.0284%" height="15" fill="rgb(207,40,23)" fg:x="282" fg:w="3"/><text x="2.9205%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.03%)</title><rect x="2.6705%" y="277" width="0.0284%" height="15" fill="rgb(223,111,35)" fg:x="282" fg:w="3"/><text x="2.9205%" y="287.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.03%)</title><rect x="2.6705%" y="261" width="0.0284%" height="15" fill="rgb(229,147,28)" fg:x="282" fg:w="3"/><text x="2.9205%" y="271.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.03%)</title><rect x="2.6705%" y="245" width="0.0284%" height="15" fill="rgb(211,29,28)" fg:x="282" fg:w="3"/><text x="2.9205%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (3 samples, 0.03%)</title><rect x="2.6705%" y="229" width="0.0284%" height="15" fill="rgb(228,72,33)" fg:x="282" fg:w="3"/><text x="2.9205%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.03%)</title><rect x="2.6705%" y="213" width="0.0284%" height="15" fill="rgb(205,214,31)" fg:x="282" fg:w="3"/><text x="2.9205%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.03%)</title><rect x="2.6705%" y="197" width="0.0284%" height="15" fill="rgb(224,111,15)" fg:x="282" fg:w="3"/><text x="2.9205%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.03%)</title><rect x="2.6705%" y="181" width="0.0284%" height="15" fill="rgb(253,21,26)" fg:x="282" fg:w="3"/><text x="2.9205%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.02%)</title><rect x="2.6799%" y="165" width="0.0189%" height="15" fill="rgb(245,139,43)" fg:x="283" fg:w="2"/><text x="2.9299%" y="175.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (2 samples, 0.02%)</title><rect x="2.6799%" y="149" width="0.0189%" height="15" fill="rgb(252,170,7)" fg:x="283" fg:w="2"/><text x="2.9299%" y="159.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.02%)</title><rect x="2.6799%" y="133" width="0.0189%" height="15" fill="rgb(231,118,14)" fg:x="283" fg:w="2"/><text x="2.9299%" y="143.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.02%)</title><rect x="2.6799%" y="117" width="0.0189%" height="15" fill="rgb(238,83,0)" fg:x="283" fg:w="2"/><text x="2.9299%" y="127.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2 samples, 0.02%)</title><rect x="2.6799%" y="101" width="0.0189%" height="15" fill="rgb(221,39,39)" fg:x="283" fg:w="2"/><text x="2.9299%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="2.6989%" y="485" width="0.0568%" height="15" fill="rgb(222,119,46)" fg:x="285" fg:w="6"/><text x="2.9489%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="2.6989%" y="469" width="0.0568%" height="15" fill="rgb(222,165,49)" fg:x="285" fg:w="6"/><text x="2.9489%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (6 samples, 0.06%)</title><rect x="2.6989%" y="453" width="0.0568%" height="15" fill="rgb(219,113,52)" fg:x="285" fg:w="6"/><text x="2.9489%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.06%)</title><rect x="2.6989%" y="437" width="0.0568%" height="15" fill="rgb(214,7,15)" fg:x="285" fg:w="6"/><text x="2.9489%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.06%)</title><rect x="2.6989%" y="421" width="0.0568%" height="15" fill="rgb(235,32,4)" fg:x="285" fg:w="6"/><text x="2.9489%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.06%)</title><rect x="2.6989%" y="405" width="0.0568%" height="15" fill="rgb(238,90,54)" fg:x="285" fg:w="6"/><text x="2.9489%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (6 samples, 0.06%)</title><rect x="2.6989%" y="389" width="0.0568%" height="15" fill="rgb(213,208,19)" fg:x="285" fg:w="6"/><text x="2.9489%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.06%)</title><rect x="2.6989%" y="373" width="0.0568%" height="15" fill="rgb(233,156,4)" fg:x="285" fg:w="6"/><text x="2.9489%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.06%)</title><rect x="2.6989%" y="357" width="0.0568%" height="15" fill="rgb(207,194,5)" fg:x="285" fg:w="6"/><text x="2.9489%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.06%)</title><rect x="2.6989%" y="341" width="0.0568%" height="15" fill="rgb(206,111,30)" fg:x="285" fg:w="6"/><text x="2.9489%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.06%)</title><rect x="2.6989%" y="325" width="0.0568%" height="15" fill="rgb(243,70,54)" fg:x="285" fg:w="6"/><text x="2.9489%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.06%)</title><rect x="2.6989%" y="309" width="0.0568%" height="15" fill="rgb(242,28,8)" fg:x="285" fg:w="6"/><text x="2.9489%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (6 samples, 0.06%)</title><rect x="2.6989%" y="293" width="0.0568%" height="15" fill="rgb(219,106,18)" fg:x="285" fg:w="6"/><text x="2.9489%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.06%)</title><rect x="2.6989%" y="277" width="0.0568%" height="15" fill="rgb(244,222,10)" fg:x="285" fg:w="6"/><text x="2.9489%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.06%)</title><rect x="2.6989%" y="261" width="0.0568%" height="15" fill="rgb(236,179,52)" fg:x="285" fg:w="6"/><text x="2.9489%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (6 samples, 0.06%)</title><rect x="2.6989%" y="245" width="0.0568%" height="15" fill="rgb(213,23,39)" fg:x="285" fg:w="6"/><text x="2.9489%" y="255.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.05%)</title><rect x="2.7083%" y="229" width="0.0473%" height="15" fill="rgb(238,48,10)" fg:x="286" fg:w="5"/><text x="2.9583%" y="239.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (5 samples, 0.05%)</title><rect x="2.7083%" y="213" width="0.0473%" height="15" fill="rgb(251,196,23)" fg:x="286" fg:w="5"/><text x="2.9583%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (5 samples, 0.05%)</title><rect x="2.7083%" y="197" width="0.0473%" height="15" fill="rgb(250,152,24)" fg:x="286" fg:w="5"/><text x="2.9583%" y="207.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (5 samples, 0.05%)</title><rect x="2.7083%" y="181" width="0.0473%" height="15" fill="rgb(209,150,17)" fg:x="286" fg:w="5"/><text x="2.9583%" y="191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (5 samples, 0.05%)</title><rect x="2.7083%" y="165" width="0.0473%" height="15" fill="rgb(234,202,34)" fg:x="286" fg:w="5"/><text x="2.9583%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.07%)</title><rect x="2.6989%" y="517" width="0.0663%" height="15" fill="rgb(253,148,53)" fg:x="285" fg:w="7"/><text x="2.9489%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (7 samples, 0.07%)</title><rect x="2.6989%" y="501" width="0.0663%" height="15" fill="rgb(218,129,16)" fg:x="285" fg:w="7"/><text x="2.9489%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.11%)</title><rect x="2.6989%" y="581" width="0.1136%" height="15" fill="rgb(216,85,19)" fg:x="285" fg:w="12"/><text x="2.9489%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 0.11%)</title><rect x="2.6989%" y="565" width="0.1136%" height="15" fill="rgb(235,228,7)" fg:x="285" fg:w="12"/><text x="2.9489%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.11%)</title><rect x="2.6989%" y="549" width="0.1136%" height="15" fill="rgb(245,175,0)" fg:x="285" fg:w="12"/><text x="2.9489%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (12 samples, 0.11%)</title><rect x="2.6989%" y="533" width="0.1136%" height="15" fill="rgb(208,168,36)" fg:x="285" fg:w="12"/><text x="2.9489%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="2.7652%" y="517" width="0.0473%" height="15" fill="rgb(246,171,24)" fg:x="292" fg:w="5"/><text x="3.0152%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="2.7652%" y="501" width="0.0473%" height="15" fill="rgb(215,142,24)" fg:x="292" fg:w="5"/><text x="3.0152%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (5 samples, 0.05%)</title><rect x="2.7652%" y="485" width="0.0473%" height="15" fill="rgb(250,187,7)" fg:x="292" fg:w="5"/><text x="3.0152%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.05%)</title><rect x="2.7652%" y="469" width="0.0473%" height="15" fill="rgb(228,66,33)" fg:x="292" fg:w="5"/><text x="3.0152%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.05%)</title><rect x="2.7652%" y="453" width="0.0473%" height="15" fill="rgb(234,215,21)" fg:x="292" fg:w="5"/><text x="3.0152%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.05%)</title><rect x="2.7652%" y="437" width="0.0473%" height="15" fill="rgb(222,191,20)" fg:x="292" fg:w="5"/><text x="3.0152%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (5 samples, 0.05%)</title><rect x="2.7652%" y="421" width="0.0473%" height="15" fill="rgb(245,79,54)" fg:x="292" fg:w="5"/><text x="3.0152%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.05%)</title><rect x="2.7652%" y="405" width="0.0473%" height="15" fill="rgb(240,10,37)" fg:x="292" fg:w="5"/><text x="3.0152%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.05%)</title><rect x="2.7652%" y="389" width="0.0473%" height="15" fill="rgb(214,192,32)" fg:x="292" fg:w="5"/><text x="3.0152%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.05%)</title><rect x="2.7652%" y="373" width="0.0473%" height="15" fill="rgb(209,36,54)" fg:x="292" fg:w="5"/><text x="3.0152%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.05%)</title><rect x="2.7652%" y="357" width="0.0473%" height="15" fill="rgb(220,10,11)" fg:x="292" fg:w="5"/><text x="3.0152%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.05%)</title><rect x="2.7652%" y="341" width="0.0473%" height="15" fill="rgb(221,106,17)" fg:x="292" fg:w="5"/><text x="3.0152%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (5 samples, 0.05%)</title><rect x="2.7652%" y="325" width="0.0473%" height="15" fill="rgb(251,142,44)" fg:x="292" fg:w="5"/><text x="3.0152%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.05%)</title><rect x="2.7652%" y="309" width="0.0473%" height="15" fill="rgb(238,13,15)" fg:x="292" fg:w="5"/><text x="3.0152%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.05%)</title><rect x="2.7652%" y="293" width="0.0473%" height="15" fill="rgb(208,107,27)" fg:x="292" fg:w="5"/><text x="3.0152%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (5 samples, 0.05%)</title><rect x="2.7652%" y="277" width="0.0473%" height="15" fill="rgb(205,136,37)" fg:x="292" fg:w="5"/><text x="3.0152%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.04%)</title><rect x="2.7746%" y="261" width="0.0379%" height="15" fill="rgb(250,205,27)" fg:x="293" fg:w="4"/><text x="3.0246%" y="271.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (4 samples, 0.04%)</title><rect x="2.7746%" y="245" width="0.0379%" height="15" fill="rgb(210,80,43)" fg:x="293" fg:w="4"/><text x="3.0246%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (4 samples, 0.04%)</title><rect x="2.7746%" y="229" width="0.0379%" height="15" fill="rgb(247,160,36)" fg:x="293" fg:w="4"/><text x="3.0246%" y="239.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (4 samples, 0.04%)</title><rect x="2.7746%" y="213" width="0.0379%" height="15" fill="rgb(234,13,49)" fg:x="293" fg:w="4"/><text x="3.0246%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (4 samples, 0.04%)</title><rect x="2.7746%" y="197" width="0.0379%" height="15" fill="rgb(234,122,0)" fg:x="293" fg:w="4"/><text x="3.0246%" y="207.50"></text></g><g><title>y2021::d11::main::run (18 samples, 0.17%)</title><rect x="2.6515%" y="629" width="0.1705%" height="15" fill="rgb(207,146,38)" fg:x="280" fg:w="18"/><text x="2.9015%" y="639.50"></text></g><g><title>y2021::d11::main::p02 (13 samples, 0.12%)</title><rect x="2.6989%" y="613" width="0.1231%" height="15" fill="rgb(207,177,25)" fg:x="285" fg:w="13"/><text x="2.9489%" y="623.50"></text></g><g><title>y2021::d11::main::cycle_step (13 samples, 0.12%)</title><rect x="2.6989%" y="597" width="0.1231%" height="15" fill="rgb(211,178,42)" fg:x="285" fg:w="13"/><text x="2.9489%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="2.8883%" y="453" width="0.0189%" height="15" fill="rgb(230,69,54)" fg:x="305" fg:w="2"/><text x="3.1383%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.02%)</title><rect x="2.8883%" y="437" width="0.0189%" height="15" fill="rgb(214,135,41)" fg:x="305" fg:w="2"/><text x="3.1383%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.02%)</title><rect x="2.8883%" y="421" width="0.0189%" height="15" fill="rgb(237,67,25)" fg:x="305" fg:w="2"/><text x="3.1383%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.02%)</title><rect x="2.8883%" y="405" width="0.0189%" height="15" fill="rgb(222,189,50)" fg:x="305" fg:w="2"/><text x="3.1383%" y="415.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.02%)</title><rect x="2.8883%" y="389" width="0.0189%" height="15" fill="rgb(245,148,34)" fg:x="305" fg:w="2"/><text x="3.1383%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.02%)</title><rect x="2.8883%" y="373" width="0.0189%" height="15" fill="rgb(222,29,6)" fg:x="305" fg:w="2"/><text x="3.1383%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.02%)</title><rect x="2.8883%" y="357" width="0.0189%" height="15" fill="rgb(221,189,43)" fg:x="305" fg:w="2"/><text x="3.1383%" y="367.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.02%)</title><rect x="2.8883%" y="341" width="0.0189%" height="15" fill="rgb(207,36,27)" fg:x="305" fg:w="2"/><text x="3.1383%" y="351.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.02%)</title><rect x="2.9072%" y="453" width="0.0189%" height="15" fill="rgb(217,90,24)" fg:x="307" fg:w="2"/><text x="3.1572%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="2.9261%" y="213" width="0.0189%" height="15" fill="rgb(224,66,35)" fg:x="309" fg:w="2"/><text x="3.1761%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="2.9261%" y="197" width="0.0189%" height="15" fill="rgb(221,13,50)" fg:x="309" fg:w="2"/><text x="3.1761%" y="207.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="2.9261%" y="181" width="0.0189%" height="15" fill="rgb(236,68,49)" fg:x="309" fg:w="2"/><text x="3.1761%" y="191.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="2.9261%" y="165" width="0.0189%" height="15" fill="rgb(229,146,28)" fg:x="309" fg:w="2"/><text x="3.1761%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="2.9261%" y="293" width="0.0284%" height="15" fill="rgb(225,31,38)" fg:x="309" fg:w="3"/><text x="3.1761%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="2.9261%" y="277" width="0.0284%" height="15" fill="rgb(250,208,3)" fg:x="309" fg:w="3"/><text x="3.1761%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="2.9261%" y="261" width="0.0284%" height="15" fill="rgb(246,54,23)" fg:x="309" fg:w="3"/><text x="3.1761%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.03%)</title><rect x="2.9261%" y="245" width="0.0284%" height="15" fill="rgb(243,76,11)" fg:x="309" fg:w="3"/><text x="3.1761%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="2.9261%" y="229" width="0.0284%" height="15" fill="rgb(245,21,50)" fg:x="309" fg:w="3"/><text x="3.1761%" y="239.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.04%)</title><rect x="2.9261%" y="437" width="0.0379%" height="15" fill="rgb(228,9,43)" fg:x="309" fg:w="4"/><text x="3.1761%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.04%)</title><rect x="2.9261%" y="421" width="0.0379%" height="15" fill="rgb(208,100,47)" fg:x="309" fg:w="4"/><text x="3.1761%" y="431.50"></text></g><g><title>core::fmt::write (4 samples, 0.04%)</title><rect x="2.9261%" y="405" width="0.0379%" height="15" fill="rgb(232,26,8)" fg:x="309" fg:w="4"/><text x="3.1761%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.04%)</title><rect x="2.9261%" y="389" width="0.0379%" height="15" fill="rgb(216,166,38)" fg:x="309" fg:w="4"/><text x="3.1761%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.04%)</title><rect x="2.9261%" y="373" width="0.0379%" height="15" fill="rgb(251,202,51)" fg:x="309" fg:w="4"/><text x="3.1761%" y="383.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.04%)</title><rect x="2.9261%" y="357" width="0.0379%" height="15" fill="rgb(254,216,34)" fg:x="309" fg:w="4"/><text x="3.1761%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.04%)</title><rect x="2.9261%" y="341" width="0.0379%" height="15" fill="rgb(251,32,27)" fg:x="309" fg:w="4"/><text x="3.1761%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.04%)</title><rect x="2.9261%" y="325" width="0.0379%" height="15" fill="rgb(208,127,28)" fg:x="309" fg:w="4"/><text x="3.1761%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.04%)</title><rect x="2.9261%" y="309" width="0.0379%" height="15" fill="rgb(224,137,22)" fg:x="309" fg:w="4"/><text x="3.1761%" y="319.50"></text></g><g><title>y2021::d12::main2::p01 (21 samples, 0.20%)</title><rect x="2.8220%" y="613" width="0.1989%" height="15" fill="rgb(254,70,32)" fg:x="298" fg:w="21"/><text x="3.0720%" y="623.50"></text></g><g><title>y2021::d12::main2::traverse (21 samples, 0.20%)</title><rect x="2.8220%" y="597" width="0.1989%" height="15" fill="rgb(229,75,37)" fg:x="298" fg:w="21"/><text x="3.0720%" y="607.50"></text></g><g><title>y2021::d12::main2::traverse (21 samples, 0.20%)</title><rect x="2.8220%" y="581" width="0.1989%" height="15" fill="rgb(252,64,23)" fg:x="298" fg:w="21"/><text x="3.0720%" y="591.50"></text></g><g><title>y2021::d12::main2::traverse (21 samples, 0.20%)</title><rect x="2.8220%" y="565" width="0.1989%" height="15" fill="rgb(232,162,48)" fg:x="298" fg:w="21"/><text x="3.0720%" y="575.50"></text></g><g><title>y2021::d12::main2::traverse (21 samples, 0.20%)</title><rect x="2.8220%" y="549" width="0.1989%" height="15" fill="rgb(246,160,12)" fg:x="298" fg:w="21"/><text x="3.0720%" y="559.50"></text></g><g><title>y2021::d12::main2::traverse (21 samples, 0.20%)</title><rect x="2.8220%" y="533" width="0.1989%" height="15" fill="rgb(247,166,0)" fg:x="298" fg:w="21"/><text x="3.0720%" y="543.50"></text></g><g><title>y2021::d12::main2::traverse (21 samples, 0.20%)</title><rect x="2.8220%" y="517" width="0.1989%" height="15" fill="rgb(249,219,21)" fg:x="298" fg:w="21"/><text x="3.0720%" y="527.50"></text></g><g><title>y2021::d12::main2::traverse (21 samples, 0.20%)</title><rect x="2.8220%" y="501" width="0.1989%" height="15" fill="rgb(205,209,3)" fg:x="298" fg:w="21"/><text x="3.0720%" y="511.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.17%)</title><rect x="2.8504%" y="485" width="0.1705%" height="15" fill="rgb(243,44,1)" fg:x="301" fg:w="18"/><text x="3.1004%" y="495.50"></text></g><g><title>y2021::d12::main2::traverse (14 samples, 0.13%)</title><rect x="2.8883%" y="469" width="0.1326%" height="15" fill="rgb(206,159,16)" fg:x="305" fg:w="14"/><text x="3.1383%" y="479.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.09%)</title><rect x="2.9261%" y="453" width="0.0947%" height="15" fill="rgb(244,77,30)" fg:x="309" fg:w="10"/><text x="3.1761%" y="463.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.06%)</title><rect x="2.9640%" y="437" width="0.0568%" height="15" fill="rgb(218,69,12)" fg:x="313" fg:w="6"/><text x="3.2140%" y="447.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.04%)</title><rect x="2.9830%" y="421" width="0.0379%" height="15" fill="rgb(212,87,7)" fg:x="315" fg:w="4"/><text x="3.2330%" y="431.50"></text></g><g><title>__GI___libc_free (19 samples, 0.18%)</title><rect x="3.0303%" y="357" width="0.1799%" height="15" fill="rgb(245,114,25)" fg:x="320" fg:w="19"/><text x="3.2803%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (24 samples, 0.23%)</title><rect x="3.0208%" y="517" width="0.2273%" height="15" fill="rgb(210,61,42)" fg:x="319" fg:w="24"/><text x="3.2708%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (24 samples, 0.23%)</title><rect x="3.0208%" y="501" width="0.2273%" height="15" fill="rgb(211,52,33)" fg:x="319" fg:w="24"/><text x="3.2708%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (24 samples, 0.23%)</title><rect x="3.0208%" y="485" width="0.2273%" height="15" fill="rgb(234,58,33)" fg:x="319" fg:w="24"/><text x="3.2708%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (24 samples, 0.23%)</title><rect x="3.0208%" y="469" width="0.2273%" height="15" fill="rgb(220,115,36)" fg:x="319" fg:w="24"/><text x="3.2708%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (24 samples, 0.23%)</title><rect x="3.0208%" y="453" width="0.2273%" height="15" fill="rgb(243,153,54)" fg:x="319" fg:w="24"/><text x="3.2708%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (24 samples, 0.23%)</title><rect x="3.0208%" y="437" width="0.2273%" height="15" fill="rgb(251,47,18)" fg:x="319" fg:w="24"/><text x="3.2708%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (24 samples, 0.23%)</title><rect x="3.0208%" y="421" width="0.2273%" height="15" fill="rgb(242,102,42)" fg:x="319" fg:w="24"/><text x="3.2708%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.23%)</title><rect x="3.0208%" y="405" width="0.2273%" height="15" fill="rgb(234,31,38)" fg:x="319" fg:w="24"/><text x="3.2708%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.23%)</title><rect x="3.0208%" y="389" width="0.2273%" height="15" fill="rgb(221,117,51)" fg:x="319" fg:w="24"/><text x="3.2708%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.23%)</title><rect x="3.0208%" y="373" width="0.2273%" height="15" fill="rgb(212,20,18)" fg:x="319" fg:w="24"/><text x="3.2708%" y="383.50"></text></g><g><title>_int_free (4 samples, 0.04%)</title><rect x="3.2102%" y="357" width="0.0379%" height="15" fill="rgb(245,133,36)" fg:x="339" fg:w="4"/><text x="3.4602%" y="367.50"></text></g><g><title>malloc_consolidate (12 samples, 0.11%)</title><rect x="3.2481%" y="437" width="0.1136%" height="15" fill="rgb(212,6,19)" fg:x="343" fg:w="12"/><text x="3.4981%" y="447.50"></text></g><g><title>unlink_chunk (5 samples, 0.05%)</title><rect x="3.3144%" y="421" width="0.0473%" height="15" fill="rgb(218,1,36)" fg:x="350" fg:w="5"/><text x="3.5644%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (39 samples, 0.37%)</title><rect x="3.0208%" y="597" width="0.3693%" height="15" fill="rgb(246,84,54)" fg:x="319" fg:w="39"/><text x="3.2708%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (39 samples, 0.37%)</title><rect x="3.0208%" y="581" width="0.3693%" height="15" fill="rgb(242,110,6)" fg:x="319" fg:w="39"/><text x="3.2708%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (39 samples, 0.37%)</title><rect x="3.0208%" y="565" width="0.3693%" height="15" fill="rgb(214,47,5)" fg:x="319" fg:w="39"/><text x="3.2708%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (39 samples, 0.37%)</title><rect x="3.0208%" y="549" width="0.3693%" height="15" fill="rgb(218,159,25)" fg:x="319" fg:w="39"/><text x="3.2708%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.37%)</title><rect x="3.0208%" y="533" width="0.3693%" height="15" fill="rgb(215,211,28)" fg:x="319" fg:w="39"/><text x="3.2708%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (15 samples, 0.14%)</title><rect x="3.2481%" y="517" width="0.1420%" height="15" fill="rgb(238,59,32)" fg:x="343" fg:w="15"/><text x="3.4981%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (15 samples, 0.14%)</title><rect x="3.2481%" y="501" width="0.1420%" height="15" fill="rgb(226,82,3)" fg:x="343" fg:w="15"/><text x="3.4981%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.14%)</title><rect x="3.2481%" y="485" width="0.1420%" height="15" fill="rgb(240,164,32)" fg:x="343" fg:w="15"/><text x="3.4981%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.14%)</title><rect x="3.2481%" y="469" width="0.1420%" height="15" fill="rgb(232,46,7)" fg:x="343" fg:w="15"/><text x="3.4981%" y="479.50"></text></g><g><title>_int_free (15 samples, 0.14%)</title><rect x="3.2481%" y="453" width="0.1420%" height="15" fill="rgb(229,129,53)" fg:x="343" fg:w="15"/><text x="3.4981%" y="463.50"></text></g><g><title>systrim (3 samples, 0.03%)</title><rect x="3.3617%" y="437" width="0.0284%" height="15" fill="rgb(234,188,29)" fg:x="355" fg:w="3"/><text x="3.6117%" y="447.50"></text></g><g><title>__GI___default_morecore (3 samples, 0.03%)</title><rect x="3.3617%" y="421" width="0.0284%" height="15" fill="rgb(246,141,4)" fg:x="355" fg:w="3"/><text x="3.6117%" y="431.50"></text></g><g><title>__GI___sbrk (3 samples, 0.03%)</title><rect x="3.3617%" y="405" width="0.0284%" height="15" fill="rgb(229,23,39)" fg:x="355" fg:w="3"/><text x="3.6117%" y="415.50"></text></g><g><title>__GI___sbrk (3 samples, 0.03%)</title><rect x="3.3617%" y="389" width="0.0284%" height="15" fill="rgb(206,12,3)" fg:x="355" fg:w="3"/><text x="3.6117%" y="399.50"></text></g><g><title>__brk (3 samples, 0.03%)</title><rect x="3.3617%" y="373" width="0.0284%" height="15" fill="rgb(252,226,20)" fg:x="355" fg:w="3"/><text x="3.6117%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="3.3617%" y="357" width="0.0284%" height="15" fill="rgb(216,123,35)" fg:x="355" fg:w="3"/><text x="3.6117%" y="367.50"></text></g><g><title>do_syscall_64 (3 samples, 0.03%)</title><rect x="3.3617%" y="341" width="0.0284%" height="15" fill="rgb(212,68,40)" fg:x="355" fg:w="3"/><text x="3.6117%" y="351.50"></text></g><g><title>__x64_sys_brk (3 samples, 0.03%)</title><rect x="3.3617%" y="325" width="0.0284%" height="15" fill="rgb(254,125,32)" fg:x="355" fg:w="3"/><text x="3.6117%" y="335.50"></text></g><g><title>__do_munmap (3 samples, 0.03%)</title><rect x="3.3617%" y="309" width="0.0284%" height="15" fill="rgb(253,97,22)" fg:x="355" fg:w="3"/><text x="3.6117%" y="319.50"></text></g><g><title>unmap_region (3 samples, 0.03%)</title><rect x="3.3617%" y="293" width="0.0284%" height="15" fill="rgb(241,101,14)" fg:x="355" fg:w="3"/><text x="3.6117%" y="303.50"></text></g><g><title>unmap_vmas (2 samples, 0.02%)</title><rect x="3.3712%" y="277" width="0.0189%" height="15" fill="rgb(238,103,29)" fg:x="356" fg:w="2"/><text x="3.6212%" y="287.50"></text></g><g><title>unmap_single_vma (2 samples, 0.02%)</title><rect x="3.3712%" y="261" width="0.0189%" height="15" fill="rgb(233,195,47)" fg:x="356" fg:w="2"/><text x="3.6212%" y="271.50"></text></g><g><title>unmap_page_range (2 samples, 0.02%)</title><rect x="3.3712%" y="245" width="0.0189%" height="15" fill="rgb(246,218,30)" fg:x="356" fg:w="2"/><text x="3.6212%" y="255.50"></text></g><g><title>zap_pte_range.isra.0 (2 samples, 0.02%)</title><rect x="3.3712%" y="229" width="0.0189%" height="15" fill="rgb(219,145,47)" fg:x="356" fg:w="2"/><text x="3.6212%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.03%)</title><rect x="3.4280%" y="421" width="0.0284%" height="15" fill="rgb(243,12,26)" fg:x="362" fg:w="3"/><text x="3.6780%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.03%)</title><rect x="3.4280%" y="405" width="0.0284%" height="15" fill="rgb(214,87,16)" fg:x="362" fg:w="3"/><text x="3.6780%" y="415.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (3 samples, 0.03%)</title><rect x="3.4280%" y="389" width="0.0284%" height="15" fill="rgb(208,99,42)" fg:x="362" fg:w="3"/><text x="3.6780%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (3 samples, 0.03%)</title><rect x="3.4280%" y="373" width="0.0284%" height="15" fill="rgb(253,99,2)" fg:x="362" fg:w="3"/><text x="3.6780%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.03%)</title><rect x="3.4280%" y="357" width="0.0284%" height="15" fill="rgb(220,168,23)" fg:x="362" fg:w="3"/><text x="3.6780%" y="367.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="3.4280%" y="341" width="0.0284%" height="15" fill="rgb(242,38,24)" fg:x="362" fg:w="3"/><text x="3.6780%" y="351.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (3 samples, 0.03%)</title><rect x="3.4280%" y="325" width="0.0284%" height="15" fill="rgb(225,182,9)" fg:x="362" fg:w="3"/><text x="3.6780%" y="335.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (3 samples, 0.03%)</title><rect x="3.4280%" y="309" width="0.0284%" height="15" fill="rgb(243,178,37)" fg:x="362" fg:w="3"/><text x="3.6780%" y="319.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.02%)</title><rect x="3.4375%" y="293" width="0.0189%" height="15" fill="rgb(232,139,19)" fg:x="363" fg:w="2"/><text x="3.6875%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="3.4280%" y="501" width="0.0379%" height="15" fill="rgb(225,201,24)" fg:x="362" fg:w="4"/><text x="3.6780%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4 samples, 0.04%)</title><rect x="3.4280%" y="485" width="0.0379%" height="15" fill="rgb(221,47,46)" fg:x="362" fg:w="4"/><text x="3.6780%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.04%)</title><rect x="3.4280%" y="469" width="0.0379%" height="15" fill="rgb(249,23,13)" fg:x="362" fg:w="4"/><text x="3.6780%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.04%)</title><rect x="3.4280%" y="453" width="0.0379%" height="15" fill="rgb(219,9,5)" fg:x="362" fg:w="4"/><text x="3.6780%" y="463.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (4 samples, 0.04%)</title><rect x="3.4280%" y="437" width="0.0379%" height="15" fill="rgb(254,171,16)" fg:x="362" fg:w="4"/><text x="3.6780%" y="447.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.03%)</title><rect x="3.4659%" y="501" width="0.0284%" height="15" fill="rgb(230,171,20)" fg:x="366" fg:w="3"/><text x="3.7159%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.03%)</title><rect x="3.4659%" y="485" width="0.0284%" height="15" fill="rgb(210,71,41)" fg:x="366" fg:w="3"/><text x="3.7159%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.02%)</title><rect x="3.4754%" y="469" width="0.0189%" height="15" fill="rgb(206,173,20)" fg:x="367" fg:w="2"/><text x="3.7254%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="3.4943%" y="501" width="0.0189%" height="15" fill="rgb(233,88,34)" fg:x="369" fg:w="2"/><text x="3.7443%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="3.4943%" y="485" width="0.0189%" height="15" fill="rgb(223,209,46)" fg:x="369" fg:w="2"/><text x="3.7443%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="3.4943%" y="469" width="0.0189%" height="15" fill="rgb(250,43,18)" fg:x="369" fg:w="2"/><text x="3.7443%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (9 samples, 0.09%)</title><rect x="3.5417%" y="357" width="0.0852%" height="15" fill="rgb(208,13,10)" fg:x="374" fg:w="9"/><text x="3.7917%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.06%)</title><rect x="3.5701%" y="341" width="0.0568%" height="15" fill="rgb(212,200,36)" fg:x="377" fg:w="6"/><text x="3.8201%" y="351.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="3.5701%" y="325" width="0.0568%" height="15" fill="rgb(225,90,30)" fg:x="377" fg:w="6"/><text x="3.8201%" y="335.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (6 samples, 0.06%)</title><rect x="3.5701%" y="309" width="0.0568%" height="15" fill="rgb(236,182,39)" fg:x="377" fg:w="6"/><text x="3.8201%" y="319.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (6 samples, 0.06%)</title><rect x="3.5701%" y="293" width="0.0568%" height="15" fill="rgb(212,144,35)" fg:x="377" fg:w="6"/><text x="3.8201%" y="303.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (6 samples, 0.06%)</title><rect x="3.5701%" y="277" width="0.0568%" height="15" fill="rgb(228,63,44)" fg:x="377" fg:w="6"/><text x="3.8201%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.11%)</title><rect x="3.5227%" y="485" width="0.1136%" height="15" fill="rgb(228,109,6)" fg:x="372" fg:w="12"/><text x="3.7727%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (12 samples, 0.11%)</title><rect x="3.5227%" y="469" width="0.1136%" height="15" fill="rgb(238,117,24)" fg:x="372" fg:w="12"/><text x="3.7727%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.11%)</title><rect x="3.5227%" y="453" width="0.1136%" height="15" fill="rgb(242,26,26)" fg:x="372" fg:w="12"/><text x="3.7727%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.11%)</title><rect x="3.5227%" y="437" width="0.1136%" height="15" fill="rgb(221,92,48)" fg:x="372" fg:w="12"/><text x="3.7727%" y="447.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (12 samples, 0.11%)</title><rect x="3.5227%" y="421" width="0.1136%" height="15" fill="rgb(209,209,32)" fg:x="372" fg:w="12"/><text x="3.7727%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (12 samples, 0.11%)</title><rect x="3.5227%" y="405" width="0.1136%" height="15" fill="rgb(221,70,22)" fg:x="372" fg:w="12"/><text x="3.7727%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.11%)</title><rect x="3.5227%" y="389" width="0.1136%" height="15" fill="rgb(248,145,5)" fg:x="372" fg:w="12"/><text x="3.7727%" y="399.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (12 samples, 0.11%)</title><rect x="3.5227%" y="373" width="0.1136%" height="15" fill="rgb(226,116,26)" fg:x="372" fg:w="12"/><text x="3.7727%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="3.6553%" y="341" width="0.0284%" height="15" fill="rgb(244,5,17)" fg:x="386" fg:w="3"/><text x="3.9053%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="3.6553%" y="325" width="0.0284%" height="15" fill="rgb(252,159,33)" fg:x="386" fg:w="3"/><text x="3.9053%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="3.6553%" y="309" width="0.0284%" height="15" fill="rgb(206,71,0)" fg:x="386" fg:w="3"/><text x="3.9053%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.03%)</title><rect x="3.6553%" y="293" width="0.0284%" height="15" fill="rgb(233,118,54)" fg:x="386" fg:w="3"/><text x="3.9053%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="3.6553%" y="277" width="0.0284%" height="15" fill="rgb(234,83,48)" fg:x="386" fg:w="3"/><text x="3.9053%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="3.6648%" y="261" width="0.0189%" height="15" fill="rgb(228,3,54)" fg:x="387" fg:w="2"/><text x="3.9148%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="3.6648%" y="245" width="0.0189%" height="15" fill="rgb(226,155,13)" fg:x="387" fg:w="2"/><text x="3.9148%" y="255.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="3.6648%" y="229" width="0.0189%" height="15" fill="rgb(241,28,37)" fg:x="387" fg:w="2"/><text x="3.9148%" y="239.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="3.6648%" y="213" width="0.0189%" height="15" fill="rgb(233,93,10)" fg:x="387" fg:w="2"/><text x="3.9148%" y="223.50"></text></g><g><title>_int_realloc (2 samples, 0.02%)</title><rect x="3.6648%" y="197" width="0.0189%" height="15" fill="rgb(225,113,19)" fg:x="387" fg:w="2"/><text x="3.9148%" y="207.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.04%)</title><rect x="3.6553%" y="437" width="0.0379%" height="15" fill="rgb(241,2,18)" fg:x="386" fg:w="4"/><text x="3.9053%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.04%)</title><rect x="3.6553%" y="421" width="0.0379%" height="15" fill="rgb(228,207,21)" fg:x="386" fg:w="4"/><text x="3.9053%" y="431.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.04%)</title><rect x="3.6553%" y="405" width="0.0379%" height="15" fill="rgb(213,211,35)" fg:x="386" fg:w="4"/><text x="3.9053%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.04%)</title><rect x="3.6553%" y="389" width="0.0379%" height="15" fill="rgb(209,83,10)" fg:x="386" fg:w="4"/><text x="3.9053%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.04%)</title><rect x="3.6553%" y="373" width="0.0379%" height="15" fill="rgb(209,164,1)" fg:x="386" fg:w="4"/><text x="3.9053%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.04%)</title><rect x="3.6553%" y="357" width="0.0379%" height="15" fill="rgb(213,184,43)" fg:x="386" fg:w="4"/><text x="3.9053%" y="367.50"></text></g><g><title>alloc::fmt::format (7 samples, 0.07%)</title><rect x="3.6364%" y="485" width="0.0663%" height="15" fill="rgb(231,61,34)" fg:x="384" fg:w="7"/><text x="3.8864%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.07%)</title><rect x="3.6364%" y="469" width="0.0663%" height="15" fill="rgb(235,75,3)" fg:x="384" fg:w="7"/><text x="3.8864%" y="479.50"></text></g><g><title>core::fmt::write (7 samples, 0.07%)</title><rect x="3.6364%" y="453" width="0.0663%" height="15" fill="rgb(220,106,47)" fg:x="384" fg:w="7"/><text x="3.8864%" y="463.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (3 samples, 0.03%)</title><rect x="3.7027%" y="485" width="0.0284%" height="15" fill="rgb(210,196,33)" fg:x="391" fg:w="3"/><text x="3.9527%" y="495.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (3 samples, 0.03%)</title><rect x="3.7027%" y="469" width="0.0284%" height="15" fill="rgb(229,154,42)" fg:x="391" fg:w="3"/><text x="3.9527%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.03%)</title><rect x="3.7027%" y="453" width="0.0284%" height="15" fill="rgb(228,114,26)" fg:x="391" fg:w="3"/><text x="3.9527%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.03%)</title><rect x="3.7027%" y="437" width="0.0284%" height="15" fill="rgb(208,144,1)" fg:x="391" fg:w="3"/><text x="3.9527%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="3.7121%" y="421" width="0.0189%" height="15" fill="rgb(239,112,37)" fg:x="392" fg:w="2"/><text x="3.9621%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="3.7121%" y="405" width="0.0189%" height="15" fill="rgb(210,96,50)" fg:x="392" fg:w="2"/><text x="3.9621%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (7 samples, 0.07%)</title><rect x="3.7595%" y="341" width="0.0663%" height="15" fill="rgb(222,178,2)" fg:x="397" fg:w="7"/><text x="4.0095%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.05%)</title><rect x="3.7784%" y="325" width="0.0473%" height="15" fill="rgb(226,74,18)" fg:x="399" fg:w="5"/><text x="4.0284%" y="335.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="3.7784%" y="309" width="0.0473%" height="15" fill="rgb(225,67,54)" fg:x="399" fg:w="5"/><text x="4.0284%" y="319.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (5 samples, 0.05%)</title><rect x="3.7784%" y="293" width="0.0473%" height="15" fill="rgb(251,92,32)" fg:x="399" fg:w="5"/><text x="4.0284%" y="303.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (5 samples, 0.05%)</title><rect x="3.7784%" y="277" width="0.0473%" height="15" fill="rgb(228,149,22)" fg:x="399" fg:w="5"/><text x="4.0284%" y="287.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (3 samples, 0.03%)</title><rect x="3.7973%" y="261" width="0.0284%" height="15" fill="rgb(243,54,13)" fg:x="401" fg:w="3"/><text x="4.0473%" y="271.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (2 samples, 0.02%)</title><rect x="3.8068%" y="245" width="0.0189%" height="15" fill="rgb(243,180,28)" fg:x="402" fg:w="2"/><text x="4.0568%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.10%)</title><rect x="3.7405%" y="469" width="0.1042%" height="15" fill="rgb(208,167,24)" fg:x="395" fg:w="11"/><text x="3.9905%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (11 samples, 0.10%)</title><rect x="3.7405%" y="453" width="0.1042%" height="15" fill="rgb(245,73,45)" fg:x="395" fg:w="11"/><text x="3.9905%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.10%)</title><rect x="3.7405%" y="437" width="0.1042%" height="15" fill="rgb(237,203,48)" fg:x="395" fg:w="11"/><text x="3.9905%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.10%)</title><rect x="3.7405%" y="421" width="0.1042%" height="15" fill="rgb(211,197,16)" fg:x="395" fg:w="11"/><text x="3.9905%" y="431.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (11 samples, 0.10%)</title><rect x="3.7405%" y="405" width="0.1042%" height="15" fill="rgb(243,99,51)" fg:x="395" fg:w="11"/><text x="3.9905%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (11 samples, 0.10%)</title><rect x="3.7405%" y="389" width="0.1042%" height="15" fill="rgb(215,123,29)" fg:x="395" fg:w="11"/><text x="3.9905%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.10%)</title><rect x="3.7405%" y="373" width="0.1042%" height="15" fill="rgb(239,186,37)" fg:x="395" fg:w="11"/><text x="3.9905%" y="383.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (11 samples, 0.10%)</title><rect x="3.7405%" y="357" width="0.1042%" height="15" fill="rgb(252,136,39)" fg:x="395" fg:w="11"/><text x="3.9905%" y="367.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (2 samples, 0.02%)</title><rect x="3.8258%" y="341" width="0.0189%" height="15" fill="rgb(223,213,32)" fg:x="404" fg:w="2"/><text x="4.0758%" y="351.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.02%)</title><rect x="3.8258%" y="325" width="0.0189%" height="15" fill="rgb(233,115,5)" fg:x="404" fg:w="2"/><text x="4.0758%" y="335.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.02%)</title><rect x="3.8258%" y="309" width="0.0189%" height="15" fill="rgb(207,226,44)" fg:x="404" fg:w="2"/><text x="4.0758%" y="319.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.02%)</title><rect x="3.8258%" y="293" width="0.0189%" height="15" fill="rgb(208,126,0)" fg:x="404" fg:w="2"/><text x="4.0758%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="3.8826%" y="165" width="0.0189%" height="15" fill="rgb(244,66,21)" fg:x="410" fg:w="2"/><text x="4.1326%" y="175.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.03%)</title><rect x="3.8826%" y="197" width="0.0284%" height="15" fill="rgb(222,97,12)" fg:x="410" fg:w="3"/><text x="4.1326%" y="207.50"></text></g><g><title>_int_realloc (3 samples, 0.03%)</title><rect x="3.8826%" y="181" width="0.0284%" height="15" fill="rgb(219,213,19)" fg:x="410" fg:w="3"/><text x="4.1326%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.04%)</title><rect x="3.8826%" y="245" width="0.0379%" height="15" fill="rgb(252,169,30)" fg:x="410" fg:w="4"/><text x="4.1326%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.04%)</title><rect x="3.8826%" y="229" width="0.0379%" height="15" fill="rgb(206,32,51)" fg:x="410" fg:w="4"/><text x="4.1326%" y="239.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.04%)</title><rect x="3.8826%" y="213" width="0.0379%" height="15" fill="rgb(250,172,42)" fg:x="410" fg:w="4"/><text x="4.1326%" y="223.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="3.9205%" y="245" width="0.0189%" height="15" fill="rgb(209,34,43)" fg:x="414" fg:w="2"/><text x="4.1705%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.09%)</title><rect x="3.8636%" y="421" width="0.0947%" height="15" fill="rgb(223,11,35)" fg:x="408" fg:w="10"/><text x="4.1136%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.09%)</title><rect x="3.8731%" y="405" width="0.0852%" height="15" fill="rgb(251,219,26)" fg:x="409" fg:w="9"/><text x="4.1231%" y="415.50"></text></g><g><title>alloc::string::String::push_str (9 samples, 0.09%)</title><rect x="3.8731%" y="389" width="0.0852%" height="15" fill="rgb(231,119,3)" fg:x="409" fg:w="9"/><text x="4.1231%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.09%)</title><rect x="3.8731%" y="373" width="0.0852%" height="15" fill="rgb(216,97,11)" fg:x="409" fg:w="9"/><text x="4.1231%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.09%)</title><rect x="3.8731%" y="357" width="0.0852%" height="15" fill="rgb(223,59,9)" fg:x="409" fg:w="9"/><text x="4.1231%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.09%)</title><rect x="3.8731%" y="341" width="0.0852%" height="15" fill="rgb(233,93,31)" fg:x="409" fg:w="9"/><text x="4.1231%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.09%)</title><rect x="3.8731%" y="325" width="0.0852%" height="15" fill="rgb(239,81,33)" fg:x="409" fg:w="9"/><text x="4.1231%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.09%)</title><rect x="3.8731%" y="309" width="0.0852%" height="15" fill="rgb(213,120,34)" fg:x="409" fg:w="9"/><text x="4.1231%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.09%)</title><rect x="3.8731%" y="293" width="0.0852%" height="15" fill="rgb(243,49,53)" fg:x="409" fg:w="9"/><text x="4.1231%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.09%)</title><rect x="3.8731%" y="277" width="0.0852%" height="15" fill="rgb(247,216,33)" fg:x="409" fg:w="9"/><text x="4.1231%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.09%)</title><rect x="3.8731%" y="261" width="0.0852%" height="15" fill="rgb(226,26,14)" fg:x="409" fg:w="9"/><text x="4.1231%" y="271.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="3.9394%" y="245" width="0.0189%" height="15" fill="rgb(215,49,53)" fg:x="416" fg:w="2"/><text x="4.1894%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="3.9394%" y="229" width="0.0189%" height="15" fill="rgb(245,162,40)" fg:x="416" fg:w="2"/><text x="4.1894%" y="239.50"></text></g><g><title>alloc::fmt::format (13 samples, 0.12%)</title><rect x="3.8447%" y="469" width="0.1231%" height="15" fill="rgb(229,68,17)" fg:x="406" fg:w="13"/><text x="4.0947%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (13 samples, 0.12%)</title><rect x="3.8447%" y="453" width="0.1231%" height="15" fill="rgb(213,182,10)" fg:x="406" fg:w="13"/><text x="4.0947%" y="463.50"></text></g><g><title>core::fmt::write (12 samples, 0.11%)</title><rect x="3.8542%" y="437" width="0.1136%" height="15" fill="rgb(245,125,30)" fg:x="407" fg:w="12"/><text x="4.1042%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="3.9867%" y="357" width="0.0189%" height="15" fill="rgb(232,202,2)" fg:x="421" fg:w="2"/><text x="4.2367%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="3.9867%" y="341" width="0.0189%" height="15" fill="rgb(237,140,51)" fg:x="421" fg:w="2"/><text x="4.2367%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="3.9867%" y="325" width="0.0189%" height="15" fill="rgb(236,157,25)" fg:x="421" fg:w="2"/><text x="4.2367%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="3.9867%" y="389" width="0.0284%" height="15" fill="rgb(219,209,0)" fg:x="421" fg:w="3"/><text x="4.2367%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.03%)</title><rect x="3.9867%" y="373" width="0.0284%" height="15" fill="rgb(240,116,54)" fg:x="421" fg:w="3"/><text x="4.2367%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.04%)</title><rect x="3.9867%" y="405" width="0.0379%" height="15" fill="rgb(216,10,36)" fg:x="421" fg:w="4"/><text x="4.2367%" y="415.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (7 samples, 0.07%)</title><rect x="3.9773%" y="469" width="0.0663%" height="15" fill="rgb(222,72,44)" fg:x="420" fg:w="7"/><text x="4.2273%" y="479.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (7 samples, 0.07%)</title><rect x="3.9773%" y="453" width="0.0663%" height="15" fill="rgb(232,159,9)" fg:x="420" fg:w="7"/><text x="4.2273%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (7 samples, 0.07%)</title><rect x="3.9773%" y="437" width="0.0663%" height="15" fill="rgb(210,39,32)" fg:x="420" fg:w="7"/><text x="4.2273%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.07%)</title><rect x="3.9773%" y="421" width="0.0663%" height="15" fill="rgb(216,194,45)" fg:x="420" fg:w="7"/><text x="4.2273%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="4.0246%" y="405" width="0.0189%" height="15" fill="rgb(218,18,35)" fg:x="425" fg:w="2"/><text x="4.2746%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="4.0246%" y="389" width="0.0189%" height="15" fill="rgb(207,83,51)" fg:x="425" fg:w="2"/><text x="4.2746%" y="399.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (2 samples, 0.02%)</title><rect x="4.0436%" y="357" width="0.0189%" height="15" fill="rgb(225,63,43)" fg:x="427" fg:w="2"/><text x="4.2936%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="4.0436%" y="341" width="0.0189%" height="15" fill="rgb(207,57,36)" fg:x="427" fg:w="2"/><text x="4.2936%" y="351.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (3 samples, 0.03%)</title><rect x="4.0436%" y="469" width="0.0284%" height="15" fill="rgb(216,99,33)" fg:x="427" fg:w="3"/><text x="4.2936%" y="479.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (3 samples, 0.03%)</title><rect x="4.0436%" y="453" width="0.0284%" height="15" fill="rgb(225,42,16)" fg:x="427" fg:w="3"/><text x="4.2936%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.03%)</title><rect x="4.0436%" y="437" width="0.0284%" height="15" fill="rgb(220,201,45)" fg:x="427" fg:w="3"/><text x="4.2936%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.03%)</title><rect x="4.0436%" y="421" width="0.0284%" height="15" fill="rgb(225,33,4)" fg:x="427" fg:w="3"/><text x="4.2936%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="4.0436%" y="405" width="0.0284%" height="15" fill="rgb(224,33,50)" fg:x="427" fg:w="3"/><text x="4.2936%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.03%)</title><rect x="4.0436%" y="389" width="0.0284%" height="15" fill="rgb(246,198,51)" fg:x="427" fg:w="3"/><text x="4.2936%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.03%)</title><rect x="4.0436%" y="373" width="0.0284%" height="15" fill="rgb(205,22,4)" fg:x="427" fg:w="3"/><text x="4.2936%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.03%)</title><rect x="4.0720%" y="325" width="0.0284%" height="15" fill="rgb(206,3,8)" fg:x="430" fg:w="3"/><text x="4.3220%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.03%)</title><rect x="4.0720%" y="309" width="0.0284%" height="15" fill="rgb(251,23,15)" fg:x="430" fg:w="3"/><text x="4.3220%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.03%)</title><rect x="4.0720%" y="293" width="0.0284%" height="15" fill="rgb(252,88,28)" fg:x="430" fg:w="3"/><text x="4.3220%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.03%)</title><rect x="4.0720%" y="277" width="0.0284%" height="15" fill="rgb(212,127,14)" fg:x="430" fg:w="3"/><text x="4.3220%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.03%)</title><rect x="4.0720%" y="261" width="0.0284%" height="15" fill="rgb(247,145,37)" fg:x="430" fg:w="3"/><text x="4.3220%" y="271.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.03%)</title><rect x="4.0720%" y="245" width="0.0284%" height="15" fill="rgb(209,117,53)" fg:x="430" fg:w="3"/><text x="4.3220%" y="255.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="4.0814%" y="229" width="0.0189%" height="15" fill="rgb(212,90,42)" fg:x="431" fg:w="2"/><text x="4.3314%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (7 samples, 0.07%)</title><rect x="4.1098%" y="325" width="0.0663%" height="15" fill="rgb(218,164,37)" fg:x="434" fg:w="7"/><text x="4.3598%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.07%)</title><rect x="4.1098%" y="309" width="0.0663%" height="15" fill="rgb(246,65,34)" fg:x="434" fg:w="7"/><text x="4.3598%" y="319.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="4.1193%" y="293" width="0.0568%" height="15" fill="rgb(231,100,33)" fg:x="435" fg:w="6"/><text x="4.3693%" y="303.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (6 samples, 0.06%)</title><rect x="4.1193%" y="277" width="0.0568%" height="15" fill="rgb(228,126,14)" fg:x="435" fg:w="6"/><text x="4.3693%" y="287.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (6 samples, 0.06%)</title><rect x="4.1193%" y="261" width="0.0568%" height="15" fill="rgb(215,173,21)" fg:x="435" fg:w="6"/><text x="4.3693%" y="271.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (6 samples, 0.06%)</title><rect x="4.1193%" y="245" width="0.0568%" height="15" fill="rgb(210,6,40)" fg:x="435" fg:w="6"/><text x="4.3693%" y="255.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (3 samples, 0.03%)</title><rect x="4.1477%" y="229" width="0.0284%" height="15" fill="rgb(212,48,18)" fg:x="438" fg:w="3"/><text x="4.3977%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.17%)</title><rect x="4.0720%" y="453" width="0.1705%" height="15" fill="rgb(230,214,11)" fg:x="430" fg:w="18"/><text x="4.3220%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (18 samples, 0.17%)</title><rect x="4.0720%" y="437" width="0.1705%" height="15" fill="rgb(254,105,39)" fg:x="430" fg:w="18"/><text x="4.3220%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.17%)</title><rect x="4.0720%" y="421" width="0.1705%" height="15" fill="rgb(245,158,5)" fg:x="430" fg:w="18"/><text x="4.3220%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.17%)</title><rect x="4.0720%" y="405" width="0.1705%" height="15" fill="rgb(249,208,11)" fg:x="430" fg:w="18"/><text x="4.3220%" y="415.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (18 samples, 0.17%)</title><rect x="4.0720%" y="389" width="0.1705%" height="15" fill="rgb(210,39,28)" fg:x="430" fg:w="18"/><text x="4.3220%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (18 samples, 0.17%)</title><rect x="4.0720%" y="373" width="0.1705%" height="15" fill="rgb(211,56,53)" fg:x="430" fg:w="18"/><text x="4.3220%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (18 samples, 0.17%)</title><rect x="4.0720%" y="357" width="0.1705%" height="15" fill="rgb(226,201,30)" fg:x="430" fg:w="18"/><text x="4.3220%" y="367.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (18 samples, 0.17%)</title><rect x="4.0720%" y="341" width="0.1705%" height="15" fill="rgb(239,101,34)" fg:x="430" fg:w="18"/><text x="4.3220%" y="351.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (7 samples, 0.07%)</title><rect x="4.1761%" y="325" width="0.0663%" height="15" fill="rgb(226,209,5)" fg:x="441" fg:w="7"/><text x="4.4261%" y="335.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (7 samples, 0.07%)</title><rect x="4.1761%" y="309" width="0.0663%" height="15" fill="rgb(250,105,47)" fg:x="441" fg:w="7"/><text x="4.4261%" y="319.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (7 samples, 0.07%)</title><rect x="4.1761%" y="293" width="0.0663%" height="15" fill="rgb(230,72,3)" fg:x="441" fg:w="7"/><text x="4.4261%" y="303.50"></text></g><g><title>core::str::pattern::StrSearcher::new (7 samples, 0.07%)</title><rect x="4.1761%" y="277" width="0.0663%" height="15" fill="rgb(232,218,39)" fg:x="441" fg:w="7"/><text x="4.4261%" y="287.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (5 samples, 0.05%)</title><rect x="4.1951%" y="261" width="0.0473%" height="15" fill="rgb(248,166,6)" fg:x="443" fg:w="5"/><text x="4.4451%" y="271.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (5 samples, 0.05%)</title><rect x="4.1951%" y="245" width="0.0473%" height="15" fill="rgb(247,89,20)" fg:x="443" fg:w="5"/><text x="4.4451%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.06%)</title><rect x="4.2708%" y="229" width="0.0568%" height="15" fill="rgb(248,130,54)" fg:x="451" fg:w="6"/><text x="4.5208%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.06%)</title><rect x="4.2708%" y="213" width="0.0568%" height="15" fill="rgb(234,196,4)" fg:x="451" fg:w="6"/><text x="4.5208%" y="223.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.05%)</title><rect x="4.2803%" y="197" width="0.0473%" height="15" fill="rgb(250,143,31)" fg:x="452" fg:w="5"/><text x="4.5303%" y="207.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.05%)</title><rect x="4.2803%" y="181" width="0.0473%" height="15" fill="rgb(211,110,34)" fg:x="452" fg:w="5"/><text x="4.5303%" y="191.50"></text></g><g><title>_int_realloc (5 samples, 0.05%)</title><rect x="4.2803%" y="165" width="0.0473%" height="15" fill="rgb(215,124,48)" fg:x="452" fg:w="5"/><text x="4.5303%" y="175.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="4.3087%" y="149" width="0.0189%" height="15" fill="rgb(216,46,13)" fg:x="455" fg:w="2"/><text x="4.5587%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.09%)</title><rect x="4.2708%" y="309" width="0.0852%" height="15" fill="rgb(205,184,25)" fg:x="451" fg:w="9"/><text x="4.5208%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.09%)</title><rect x="4.2708%" y="293" width="0.0852%" height="15" fill="rgb(228,1,10)" fg:x="451" fg:w="9"/><text x="4.5208%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.09%)</title><rect x="4.2708%" y="277" width="0.0852%" height="15" fill="rgb(213,116,27)" fg:x="451" fg:w="9"/><text x="4.5208%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.09%)</title><rect x="4.2708%" y="261" width="0.0852%" height="15" fill="rgb(241,95,50)" fg:x="451" fg:w="9"/><text x="4.5208%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.09%)</title><rect x="4.2708%" y="245" width="0.0852%" height="15" fill="rgb(238,48,32)" fg:x="451" fg:w="9"/><text x="4.5208%" y="255.50"></text></g><g><title>alloc::fmt::format (15 samples, 0.14%)</title><rect x="4.2424%" y="453" width="0.1420%" height="15" fill="rgb(235,113,49)" fg:x="448" fg:w="15"/><text x="4.4924%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (14 samples, 0.13%)</title><rect x="4.2519%" y="437" width="0.1326%" height="15" fill="rgb(205,127,43)" fg:x="449" fg:w="14"/><text x="4.5019%" y="447.50"></text></g><g><title>core::fmt::write (14 samples, 0.13%)</title><rect x="4.2519%" y="421" width="0.1326%" height="15" fill="rgb(250,162,2)" fg:x="449" fg:w="14"/><text x="4.5019%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (12 samples, 0.11%)</title><rect x="4.2708%" y="405" width="0.1136%" height="15" fill="rgb(220,13,41)" fg:x="451" fg:w="12"/><text x="4.5208%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (12 samples, 0.11%)</title><rect x="4.2708%" y="389" width="0.1136%" height="15" fill="rgb(249,221,25)" fg:x="451" fg:w="12"/><text x="4.5208%" y="399.50"></text></g><g><title>alloc::string::String::push_str (12 samples, 0.11%)</title><rect x="4.2708%" y="373" width="0.1136%" height="15" fill="rgb(215,208,19)" fg:x="451" fg:w="12"/><text x="4.5208%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.11%)</title><rect x="4.2708%" y="357" width="0.1136%" height="15" fill="rgb(236,175,2)" fg:x="451" fg:w="12"/><text x="4.5208%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.11%)</title><rect x="4.2708%" y="341" width="0.1136%" height="15" fill="rgb(241,52,2)" fg:x="451" fg:w="12"/><text x="4.5208%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.11%)</title><rect x="4.2708%" y="325" width="0.1136%" height="15" fill="rgb(248,140,14)" fg:x="451" fg:w="12"/><text x="4.5208%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="4.3561%" y="309" width="0.0284%" height="15" fill="rgb(253,22,42)" fg:x="460" fg:w="3"/><text x="4.6061%" y="319.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.03%)</title><rect x="4.3561%" y="293" width="0.0284%" height="15" fill="rgb(234,61,47)" fg:x="460" fg:w="3"/><text x="4.6061%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.02%)</title><rect x="4.3845%" y="453" width="0.0189%" height="15" fill="rgb(208,226,15)" fg:x="463" fg:w="2"/><text x="4.6345%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="4.3845%" y="437" width="0.0189%" height="15" fill="rgb(217,221,4)" fg:x="463" fg:w="2"/><text x="4.6345%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="4.3845%" y="421" width="0.0189%" height="15" fill="rgb(212,174,34)" fg:x="463" fg:w="2"/><text x="4.6345%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="4.3845%" y="405" width="0.0189%" height="15" fill="rgb(253,83,4)" fg:x="463" fg:w="2"/><text x="4.6345%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="4.4129%" y="373" width="0.0189%" height="15" fill="rgb(250,195,49)" fg:x="466" fg:w="2"/><text x="4.6629%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="4.4129%" y="357" width="0.0189%" height="15" fill="rgb(241,192,25)" fg:x="466" fg:w="2"/><text x="4.6629%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="4.4129%" y="341" width="0.0189%" height="15" fill="rgb(208,124,10)" fg:x="466" fg:w="2"/><text x="4.6629%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="4.4129%" y="325" width="0.0189%" height="15" fill="rgb(222,33,0)" fg:x="466" fg:w="2"/><text x="4.6629%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="4.4129%" y="309" width="0.0189%" height="15" fill="rgb(234,209,28)" fg:x="466" fg:w="2"/><text x="4.6629%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.04%)</title><rect x="4.4034%" y="389" width="0.0379%" height="15" fill="rgb(224,11,23)" fg:x="465" fg:w="4"/><text x="4.6534%" y="399.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (6 samples, 0.06%)</title><rect x="4.4034%" y="453" width="0.0568%" height="15" fill="rgb(232,99,1)" fg:x="465" fg:w="6"/><text x="4.6534%" y="463.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (6 samples, 0.06%)</title><rect x="4.4034%" y="437" width="0.0568%" height="15" fill="rgb(237,95,45)" fg:x="465" fg:w="6"/><text x="4.6534%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (6 samples, 0.06%)</title><rect x="4.4034%" y="421" width="0.0568%" height="15" fill="rgb(208,109,11)" fg:x="465" fg:w="6"/><text x="4.6534%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.06%)</title><rect x="4.4034%" y="405" width="0.0568%" height="15" fill="rgb(216,190,48)" fg:x="465" fg:w="6"/><text x="4.6534%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="4.4413%" y="389" width="0.0189%" height="15" fill="rgb(251,171,36)" fg:x="469" fg:w="2"/><text x="4.6913%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="4.4413%" y="373" width="0.0189%" height="15" fill="rgb(230,62,22)" fg:x="469" fg:w="2"/><text x="4.6913%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="4.4413%" y="357" width="0.0189%" height="15" fill="rgb(225,114,35)" fg:x="469" fg:w="2"/><text x="4.6913%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="4.4413%" y="341" width="0.0189%" height="15" fill="rgb(215,118,42)" fg:x="469" fg:w="2"/><text x="4.6913%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (39 samples, 0.37%)</title><rect x="4.4981%" y="229" width="0.3693%" height="15" fill="rgb(243,119,21)" fg:x="475" fg:w="39"/><text x="4.7481%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (41 samples, 0.39%)</title><rect x="4.4981%" y="277" width="0.3883%" height="15" fill="rgb(252,177,53)" fg:x="475" fg:w="41"/><text x="4.7481%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (41 samples, 0.39%)</title><rect x="4.4981%" y="261" width="0.3883%" height="15" fill="rgb(237,209,29)" fg:x="475" fg:w="41"/><text x="4.7481%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (41 samples, 0.39%)</title><rect x="4.4981%" y="245" width="0.3883%" height="15" fill="rgb(212,65,23)" fg:x="475" fg:w="41"/><text x="4.7481%" y="255.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="4.8674%" y="229" width="0.0189%" height="15" fill="rgb(230,222,46)" fg:x="514" fg:w="2"/><text x="5.1174%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (44 samples, 0.42%)</title><rect x="4.4886%" y="309" width="0.4167%" height="15" fill="rgb(215,135,32)" fg:x="474" fg:w="44"/><text x="4.7386%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (43 samples, 0.41%)</title><rect x="4.4981%" y="293" width="0.4072%" height="15" fill="rgb(246,101,22)" fg:x="475" fg:w="43"/><text x="4.7481%" y="303.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="4.8864%" y="277" width="0.0189%" height="15" fill="rgb(206,107,13)" fg:x="516" fg:w="2"/><text x="5.1364%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="4.8864%" y="261" width="0.0189%" height="15" fill="rgb(250,100,44)" fg:x="516" fg:w="2"/><text x="5.1364%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="4.8864%" y="245" width="0.0189%" height="15" fill="rgb(231,147,38)" fg:x="516" fg:w="2"/><text x="5.1364%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="4.8864%" y="229" width="0.0189%" height="15" fill="rgb(229,8,40)" fg:x="516" fg:w="2"/><text x="5.1364%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="4.9053%" y="309" width="0.0284%" height="15" fill="rgb(221,135,30)" fg:x="518" fg:w="3"/><text x="5.1553%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="4.9053%" y="293" width="0.0284%" height="15" fill="rgb(249,193,18)" fg:x="518" fg:w="3"/><text x="5.1553%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="4.9053%" y="277" width="0.0284%" height="15" fill="rgb(209,133,39)" fg:x="518" fg:w="3"/><text x="5.1553%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="4.9148%" y="261" width="0.0189%" height="15" fill="rgb(232,100,14)" fg:x="519" fg:w="2"/><text x="5.1648%" y="271.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (48 samples, 0.45%)</title><rect x="4.4886%" y="341" width="0.4545%" height="15" fill="rgb(224,185,1)" fg:x="474" fg:w="48"/><text x="4.7386%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (48 samples, 0.45%)</title><rect x="4.4886%" y="325" width="0.4545%" height="15" fill="rgb(223,139,8)" fg:x="474" fg:w="48"/><text x="4.7386%" y="335.50"></text></g><g><title>clear_page_rep (2 samples, 0.02%)</title><rect x="4.9905%" y="149" width="0.0189%" height="15" fill="rgb(232,213,38)" fg:x="527" fg:w="2"/><text x="5.2405%" y="159.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.03%)</title><rect x="4.9905%" y="197" width="0.0284%" height="15" fill="rgb(207,94,22)" fg:x="527" fg:w="3"/><text x="5.2405%" y="207.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.03%)</title><rect x="4.9905%" y="181" width="0.0284%" height="15" fill="rgb(219,183,54)" fg:x="527" fg:w="3"/><text x="5.2405%" y="191.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.03%)</title><rect x="4.9905%" y="165" width="0.0284%" height="15" fill="rgb(216,185,54)" fg:x="527" fg:w="3"/><text x="5.2405%" y="175.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (9 samples, 0.09%)</title><rect x="4.9432%" y="341" width="0.0852%" height="15" fill="rgb(254,217,39)" fg:x="522" fg:w="9"/><text x="5.1932%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (9 samples, 0.09%)</title><rect x="4.9432%" y="325" width="0.0852%" height="15" fill="rgb(240,178,23)" fg:x="522" fg:w="9"/><text x="5.1932%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.09%)</title><rect x="4.9432%" y="309" width="0.0852%" height="15" fill="rgb(218,11,47)" fg:x="522" fg:w="9"/><text x="5.1932%" y="319.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.05%)</title><rect x="4.9811%" y="293" width="0.0473%" height="15" fill="rgb(218,51,51)" fg:x="526" fg:w="5"/><text x="5.2311%" y="303.50"></text></g><g><title>exc_page_fault (4 samples, 0.04%)</title><rect x="4.9905%" y="277" width="0.0379%" height="15" fill="rgb(238,126,27)" fg:x="527" fg:w="4"/><text x="5.2405%" y="287.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.04%)</title><rect x="4.9905%" y="261" width="0.0379%" height="15" fill="rgb(249,202,22)" fg:x="527" fg:w="4"/><text x="5.2405%" y="271.50"></text></g><g><title>handle_mm_fault (4 samples, 0.04%)</title><rect x="4.9905%" y="245" width="0.0379%" height="15" fill="rgb(254,195,49)" fg:x="527" fg:w="4"/><text x="5.2405%" y="255.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.04%)</title><rect x="4.9905%" y="229" width="0.0379%" height="15" fill="rgb(208,123,14)" fg:x="527" fg:w="4"/><text x="5.2405%" y="239.50"></text></g><g><title>do_anonymous_page (4 samples, 0.04%)</title><rect x="4.9905%" y="213" width="0.0379%" height="15" fill="rgb(224,200,8)" fg:x="527" fg:w="4"/><text x="5.2405%" y="223.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="5.0284%" y="309" width="0.0189%" height="15" fill="rgb(217,61,36)" fg:x="531" fg:w="2"/><text x="5.2784%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (4 samples, 0.04%)</title><rect x="5.0284%" y="341" width="0.0379%" height="15" fill="rgb(206,35,45)" fg:x="531" fg:w="4"/><text x="5.2784%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (4 samples, 0.04%)</title><rect x="5.0284%" y="325" width="0.0379%" height="15" fill="rgb(217,65,33)" fg:x="531" fg:w="4"/><text x="5.2784%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.02%)</title><rect x="5.0473%" y="309" width="0.0189%" height="15" fill="rgb(222,158,48)" fg:x="533" fg:w="2"/><text x="5.2973%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="5.0473%" y="293" width="0.0189%" height="15" fill="rgb(254,2,54)" fg:x="533" fg:w="2"/><text x="5.2973%" y="303.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (65 samples, 0.62%)</title><rect x="4.4602%" y="453" width="0.6155%" height="15" fill="rgb(250,143,38)" fg:x="471" fg:w="65"/><text x="4.7102%" y="463.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (65 samples, 0.62%)</title><rect x="4.4602%" y="437" width="0.6155%" height="15" fill="rgb(248,25,0)" fg:x="471" fg:w="65"/><text x="4.7102%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (65 samples, 0.62%)</title><rect x="4.4602%" y="421" width="0.6155%" height="15" fill="rgb(206,152,27)" fg:x="471" fg:w="65"/><text x="4.7102%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (63 samples, 0.60%)</title><rect x="4.4792%" y="405" width="0.5966%" height="15" fill="rgb(240,77,30)" fg:x="473" fg:w="63"/><text x="4.7292%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (63 samples, 0.60%)</title><rect x="4.4792%" y="389" width="0.5966%" height="15" fill="rgb(231,5,3)" fg:x="473" fg:w="63"/><text x="4.7292%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (63 samples, 0.60%)</title><rect x="4.4792%" y="373" width="0.5966%" height="15" fill="rgb(207,226,32)" fg:x="473" fg:w="63"/><text x="4.7292%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (63 samples, 0.60%)</title><rect x="4.4792%" y="357" width="0.5966%" height="15" fill="rgb(222,207,47)" fg:x="473" fg:w="63"/><text x="4.7292%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.02%)</title><rect x="5.1326%" y="309" width="0.0189%" height="15" fill="rgb(229,115,45)" fg:x="542" fg:w="2"/><text x="5.3826%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.02%)</title><rect x="5.1326%" y="293" width="0.0189%" height="15" fill="rgb(224,191,6)" fg:x="542" fg:w="2"/><text x="5.3826%" y="303.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="5.1326%" y="277" width="0.0189%" height="15" fill="rgb(230,227,24)" fg:x="542" fg:w="2"/><text x="5.3826%" y="287.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.02%)</title><rect x="5.1326%" y="261" width="0.0189%" height="15" fill="rgb(228,80,19)" fg:x="542" fg:w="2"/><text x="5.3826%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (25 samples, 0.24%)</title><rect x="5.1515%" y="309" width="0.2367%" height="15" fill="rgb(247,229,0)" fg:x="544" fg:w="25"/><text x="5.4015%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (20 samples, 0.19%)</title><rect x="5.1989%" y="293" width="0.1894%" height="15" fill="rgb(237,194,15)" fg:x="549" fg:w="20"/><text x="5.4489%" y="303.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.17%)</title><rect x="5.2178%" y="277" width="0.1705%" height="15" fill="rgb(219,203,20)" fg:x="551" fg:w="18"/><text x="5.4678%" y="287.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (18 samples, 0.17%)</title><rect x="5.2178%" y="261" width="0.1705%" height="15" fill="rgb(234,128,8)" fg:x="551" fg:w="18"/><text x="5.4678%" y="271.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (18 samples, 0.17%)</title><rect x="5.2178%" y="245" width="0.1705%" height="15" fill="rgb(248,202,8)" fg:x="551" fg:w="18"/><text x="5.4678%" y="255.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (14 samples, 0.13%)</title><rect x="5.2557%" y="229" width="0.1326%" height="15" fill="rgb(206,104,37)" fg:x="555" fg:w="14"/><text x="5.5057%" y="239.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (2 samples, 0.02%)</title><rect x="5.3693%" y="213" width="0.0189%" height="15" fill="rgb(223,8,27)" fg:x="567" fg:w="2"/><text x="5.6193%" y="223.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.02%)</title><rect x="5.4261%" y="229" width="0.0189%" height="15" fill="rgb(216,217,28)" fg:x="573" fg:w="2"/><text x="5.6761%" y="239.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (2 samples, 0.02%)</title><rect x="5.4451%" y="229" width="0.0189%" height="15" fill="rgb(249,199,1)" fg:x="575" fg:w="2"/><text x="5.6951%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="5.4451%" y="213" width="0.0189%" height="15" fill="rgb(240,85,17)" fg:x="575" fg:w="2"/><text x="5.6951%" y="223.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="5.4451%" y="197" width="0.0189%" height="15" fill="rgb(206,108,45)" fg:x="575" fg:w="2"/><text x="5.6951%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.38%)</title><rect x="5.1042%" y="437" width="0.3788%" height="15" fill="rgb(245,210,41)" fg:x="539" fg:w="40"/><text x="5.3542%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (40 samples, 0.38%)</title><rect x="5.1042%" y="421" width="0.3788%" height="15" fill="rgb(206,13,37)" fg:x="539" fg:w="40"/><text x="5.3542%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.38%)</title><rect x="5.1042%" y="405" width="0.3788%" height="15" fill="rgb(250,61,18)" fg:x="539" fg:w="40"/><text x="5.3542%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (40 samples, 0.38%)</title><rect x="5.1042%" y="389" width="0.3788%" height="15" fill="rgb(235,172,48)" fg:x="539" fg:w="40"/><text x="5.3542%" y="399.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (39 samples, 0.37%)</title><rect x="5.1136%" y="373" width="0.3693%" height="15" fill="rgb(249,201,17)" fg:x="540" fg:w="39"/><text x="5.3636%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (39 samples, 0.37%)</title><rect x="5.1136%" y="357" width="0.3693%" height="15" fill="rgb(219,208,6)" fg:x="540" fg:w="39"/><text x="5.3636%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (39 samples, 0.37%)</title><rect x="5.1136%" y="341" width="0.3693%" height="15" fill="rgb(248,31,23)" fg:x="540" fg:w="39"/><text x="5.3636%" y="351.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (39 samples, 0.37%)</title><rect x="5.1136%" y="325" width="0.3693%" height="15" fill="rgb(245,15,42)" fg:x="540" fg:w="39"/><text x="5.3636%" y="335.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (10 samples, 0.09%)</title><rect x="5.3883%" y="309" width="0.0947%" height="15" fill="rgb(222,217,39)" fg:x="569" fg:w="10"/><text x="5.6383%" y="319.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (10 samples, 0.09%)</title><rect x="5.3883%" y="293" width="0.0947%" height="15" fill="rgb(210,219,27)" fg:x="569" fg:w="10"/><text x="5.6383%" y="303.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (10 samples, 0.09%)</title><rect x="5.3883%" y="277" width="0.0947%" height="15" fill="rgb(252,166,36)" fg:x="569" fg:w="10"/><text x="5.6383%" y="287.50"></text></g><g><title>core::str::pattern::StrSearcher::new (10 samples, 0.09%)</title><rect x="5.3883%" y="261" width="0.0947%" height="15" fill="rgb(245,132,34)" fg:x="569" fg:w="10"/><text x="5.6383%" y="271.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (7 samples, 0.07%)</title><rect x="5.4167%" y="245" width="0.0663%" height="15" fill="rgb(236,54,3)" fg:x="572" fg:w="7"/><text x="5.6667%" y="255.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (2 samples, 0.02%)</title><rect x="5.4640%" y="229" width="0.0189%" height="15" fill="rgb(241,173,43)" fg:x="577" fg:w="2"/><text x="5.7140%" y="239.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="5.5871%" y="133" width="0.0189%" height="15" fill="rgb(215,190,9)" fg:x="590" fg:w="2"/><text x="5.8371%" y="143.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.08%)</title><rect x="5.5492%" y="165" width="0.0758%" height="15" fill="rgb(242,101,16)" fg:x="586" fg:w="8"/><text x="5.7992%" y="175.50"></text></g><g><title>_int_realloc (7 samples, 0.07%)</title><rect x="5.5587%" y="149" width="0.0663%" height="15" fill="rgb(223,190,21)" fg:x="587" fg:w="7"/><text x="5.8087%" y="159.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="5.6061%" y="133" width="0.0189%" height="15" fill="rgb(215,228,25)" fg:x="592" fg:w="2"/><text x="5.8561%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.10%)</title><rect x="5.5398%" y="293" width="0.1042%" height="15" fill="rgb(225,36,22)" fg:x="585" fg:w="11"/><text x="5.7898%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.10%)</title><rect x="5.5398%" y="277" width="0.1042%" height="15" fill="rgb(251,106,46)" fg:x="585" fg:w="11"/><text x="5.7898%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.10%)</title><rect x="5.5398%" y="261" width="0.1042%" height="15" fill="rgb(208,90,1)" fg:x="585" fg:w="11"/><text x="5.7898%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.10%)</title><rect x="5.5398%" y="245" width="0.1042%" height="15" fill="rgb(243,10,4)" fg:x="585" fg:w="11"/><text x="5.7898%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.09%)</title><rect x="5.5492%" y="229" width="0.0947%" height="15" fill="rgb(212,137,27)" fg:x="586" fg:w="10"/><text x="5.7992%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.09%)</title><rect x="5.5492%" y="213" width="0.0947%" height="15" fill="rgb(231,220,49)" fg:x="586" fg:w="10"/><text x="5.7992%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.09%)</title><rect x="5.5492%" y="197" width="0.0947%" height="15" fill="rgb(237,96,20)" fg:x="586" fg:w="10"/><text x="5.7992%" y="207.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.09%)</title><rect x="5.5492%" y="181" width="0.0947%" height="15" fill="rgb(239,229,30)" fg:x="586" fg:w="10"/><text x="5.7992%" y="191.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.02%)</title><rect x="5.6439%" y="277" width="0.0189%" height="15" fill="rgb(219,65,33)" fg:x="596" fg:w="2"/><text x="5.8939%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="5.6439%" y="293" width="0.0379%" height="15" fill="rgb(243,134,7)" fg:x="596" fg:w="4"/><text x="5.8939%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="5.6629%" y="277" width="0.0189%" height="15" fill="rgb(216,177,54)" fg:x="598" fg:w="2"/><text x="5.9129%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (17 samples, 0.16%)</title><rect x="5.5303%" y="389" width="0.1610%" height="15" fill="rgb(211,160,20)" fg:x="584" fg:w="17"/><text x="5.7803%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (16 samples, 0.15%)</title><rect x="5.5398%" y="373" width="0.1515%" height="15" fill="rgb(239,85,39)" fg:x="585" fg:w="16"/><text x="5.7898%" y="383.50"></text></g><g><title>alloc::string::String::push_str (16 samples, 0.15%)</title><rect x="5.5398%" y="357" width="0.1515%" height="15" fill="rgb(232,125,22)" fg:x="585" fg:w="16"/><text x="5.7898%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.15%)</title><rect x="5.5398%" y="341" width="0.1515%" height="15" fill="rgb(244,57,34)" fg:x="585" fg:w="16"/><text x="5.7898%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.15%)</title><rect x="5.5398%" y="325" width="0.1515%" height="15" fill="rgb(214,203,32)" fg:x="585" fg:w="16"/><text x="5.7898%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.15%)</title><rect x="5.5398%" y="309" width="0.1515%" height="15" fill="rgb(207,58,43)" fg:x="585" fg:w="16"/><text x="5.7898%" y="319.50"></text></g><g><title>alloc::fmt::format (25 samples, 0.24%)</title><rect x="5.4830%" y="437" width="0.2367%" height="15" fill="rgb(215,193,15)" fg:x="579" fg:w="25"/><text x="5.7330%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (23 samples, 0.22%)</title><rect x="5.5019%" y="421" width="0.2178%" height="15" fill="rgb(232,15,44)" fg:x="581" fg:w="23"/><text x="5.7519%" y="431.50"></text></g><g><title>core::fmt::write (22 samples, 0.21%)</title><rect x="5.5114%" y="405" width="0.2083%" height="15" fill="rgb(212,3,48)" fg:x="582" fg:w="22"/><text x="5.7614%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.03%)</title><rect x="5.6913%" y="389" width="0.0284%" height="15" fill="rgb(218,128,7)" fg:x="601" fg:w="3"/><text x="5.9413%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.02%)</title><rect x="5.7292%" y="437" width="0.0189%" height="15" fill="rgb(226,216,39)" fg:x="605" fg:w="2"/><text x="5.9792%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="5.7292%" y="421" width="0.0189%" height="15" fill="rgb(243,47,51)" fg:x="605" fg:w="2"/><text x="5.9792%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="5.7292%" y="405" width="0.0189%" height="15" fill="rgb(241,183,40)" fg:x="605" fg:w="2"/><text x="5.9792%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="5.7292%" y="389" width="0.0189%" height="15" fill="rgb(231,217,32)" fg:x="605" fg:w="2"/><text x="5.9792%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="5.7292%" y="373" width="0.0189%" height="15" fill="rgb(229,61,38)" fg:x="605" fg:w="2"/><text x="5.9792%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="5.7292%" y="357" width="0.0189%" height="15" fill="rgb(225,210,5)" fg:x="605" fg:w="2"/><text x="5.9792%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="5.7481%" y="389" width="0.0189%" height="15" fill="rgb(231,79,45)" fg:x="607" fg:w="2"/><text x="5.9981%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="5.7481%" y="373" width="0.0189%" height="15" fill="rgb(224,100,7)" fg:x="607" fg:w="2"/><text x="5.9981%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="5.7481%" y="357" width="0.0189%" height="15" fill="rgb(241,198,18)" fg:x="607" fg:w="2"/><text x="5.9981%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="5.7481%" y="341" width="0.0189%" height="15" fill="rgb(252,97,53)" fg:x="607" fg:w="2"/><text x="5.9981%" y="351.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.04%)</title><rect x="5.7481%" y="437" width="0.0379%" height="15" fill="rgb(220,88,7)" fg:x="607" fg:w="4"/><text x="5.9981%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.04%)</title><rect x="5.7481%" y="421" width="0.0379%" height="15" fill="rgb(213,176,14)" fg:x="607" fg:w="4"/><text x="5.9981%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.04%)</title><rect x="5.7481%" y="405" width="0.0379%" height="15" fill="rgb(246,73,7)" fg:x="607" fg:w="4"/><text x="5.9981%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="5.7670%" y="389" width="0.0189%" height="15" fill="rgb(245,64,36)" fg:x="609" fg:w="2"/><text x="6.0170%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="5.7670%" y="373" width="0.0189%" height="15" fill="rgb(245,80,10)" fg:x="609" fg:w="2"/><text x="6.0170%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="5.7955%" y="325" width="0.0568%" height="15" fill="rgb(232,107,50)" fg:x="612" fg:w="6"/><text x="6.0455%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="5.7955%" y="309" width="0.0568%" height="15" fill="rgb(253,3,0)" fg:x="612" fg:w="6"/><text x="6.0455%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="5.7955%" y="293" width="0.0568%" height="15" fill="rgb(212,99,53)" fg:x="612" fg:w="6"/><text x="6.0455%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.06%)</title><rect x="5.7955%" y="277" width="0.0568%" height="15" fill="rgb(249,111,54)" fg:x="612" fg:w="6"/><text x="6.0455%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.05%)</title><rect x="5.8049%" y="261" width="0.0473%" height="15" fill="rgb(249,55,30)" fg:x="613" fg:w="5"/><text x="6.0549%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (8 samples, 0.08%)</title><rect x="5.7955%" y="357" width="0.0758%" height="15" fill="rgb(237,47,42)" fg:x="612" fg:w="8"/><text x="6.0455%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (8 samples, 0.08%)</title><rect x="5.7955%" y="341" width="0.0758%" height="15" fill="rgb(211,20,18)" fg:x="612" fg:w="8"/><text x="6.0455%" y="351.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="5.8523%" y="325" width="0.0189%" height="15" fill="rgb(231,203,46)" fg:x="618" fg:w="2"/><text x="6.1023%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="5.8523%" y="309" width="0.0189%" height="15" fill="rgb(237,142,3)" fg:x="618" fg:w="2"/><text x="6.1023%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="5.8523%" y="293" width="0.0189%" height="15" fill="rgb(241,107,1)" fg:x="618" fg:w="2"/><text x="6.1023%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="5.8523%" y="277" width="0.0189%" height="15" fill="rgb(229,83,13)" fg:x="618" fg:w="2"/><text x="6.1023%" y="287.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="5.8523%" y="261" width="0.0189%" height="15" fill="rgb(241,91,40)" fg:x="618" fg:w="2"/><text x="6.1023%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.09%)</title><rect x="5.7860%" y="373" width="0.0947%" height="15" fill="rgb(225,3,45)" fg:x="611" fg:w="10"/><text x="6.0360%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="5.8807%" y="341" width="0.0189%" height="15" fill="rgb(244,223,14)" fg:x="621" fg:w="2"/><text x="6.1307%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="5.8807%" y="325" width="0.0189%" height="15" fill="rgb(224,124,37)" fg:x="621" fg:w="2"/><text x="6.1307%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="5.8807%" y="309" width="0.0189%" height="15" fill="rgb(251,171,30)" fg:x="621" fg:w="2"/><text x="6.1307%" y="319.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="5.8807%" y="293" width="0.0189%" height="15" fill="rgb(236,46,54)" fg:x="621" fg:w="2"/><text x="6.1307%" y="303.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.04%)</title><rect x="5.8996%" y="341" width="0.0379%" height="15" fill="rgb(245,213,5)" fg:x="623" fg:w="4"/><text x="6.1496%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (4 samples, 0.04%)</title><rect x="5.8996%" y="325" width="0.0379%" height="15" fill="rgb(230,144,27)" fg:x="623" fg:w="4"/><text x="6.1496%" y="335.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.04%)</title><rect x="5.8996%" y="309" width="0.0379%" height="15" fill="rgb(220,86,6)" fg:x="623" fg:w="4"/><text x="6.1496%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.04%)</title><rect x="5.8996%" y="293" width="0.0379%" height="15" fill="rgb(240,20,13)" fg:x="623" fg:w="4"/><text x="6.1496%" y="303.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.04%)</title><rect x="5.8996%" y="277" width="0.0379%" height="15" fill="rgb(217,89,34)" fg:x="623" fg:w="4"/><text x="6.1496%" y="287.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.04%)</title><rect x="5.8996%" y="261" width="0.0379%" height="15" fill="rgb(229,13,5)" fg:x="623" fg:w="4"/><text x="6.1496%" y="271.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="5.9186%" y="245" width="0.0189%" height="15" fill="rgb(244,67,35)" fg:x="625" fg:w="2"/><text x="6.1686%" y="255.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (17 samples, 0.16%)</title><rect x="5.7860%" y="437" width="0.1610%" height="15" fill="rgb(221,40,2)" fg:x="611" fg:w="17"/><text x="6.0360%" y="447.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (17 samples, 0.16%)</title><rect x="5.7860%" y="421" width="0.1610%" height="15" fill="rgb(237,157,21)" fg:x="611" fg:w="17"/><text x="6.0360%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (17 samples, 0.16%)</title><rect x="5.7860%" y="405" width="0.1610%" height="15" fill="rgb(222,94,11)" fg:x="611" fg:w="17"/><text x="6.0360%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 0.16%)</title><rect x="5.7860%" y="389" width="0.1610%" height="15" fill="rgb(249,113,6)" fg:x="611" fg:w="17"/><text x="6.0360%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 0.07%)</title><rect x="5.8807%" y="373" width="0.0663%" height="15" fill="rgb(238,137,36)" fg:x="621" fg:w="7"/><text x="6.1307%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.07%)</title><rect x="5.8807%" y="357" width="0.0663%" height="15" fill="rgb(210,102,26)" fg:x="621" fg:w="7"/><text x="6.1307%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (10 samples, 0.09%)</title><rect x="5.9470%" y="293" width="0.0947%" height="15" fill="rgb(218,30,30)" fg:x="628" fg:w="10"/><text x="6.1970%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (10 samples, 0.09%)</title><rect x="5.9470%" y="277" width="0.0947%" height="15" fill="rgb(214,67,26)" fg:x="628" fg:w="10"/><text x="6.1970%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.09%)</title><rect x="5.9470%" y="261" width="0.0947%" height="15" fill="rgb(251,9,53)" fg:x="628" fg:w="10"/><text x="6.1970%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.09%)</title><rect x="5.9470%" y="245" width="0.0947%" height="15" fill="rgb(228,204,25)" fg:x="628" fg:w="10"/><text x="6.1970%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.09%)</title><rect x="5.9470%" y="229" width="0.0947%" height="15" fill="rgb(207,153,8)" fg:x="628" fg:w="10"/><text x="6.1970%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.09%)</title><rect x="5.9470%" y="213" width="0.0947%" height="15" fill="rgb(242,9,16)" fg:x="628" fg:w="10"/><text x="6.1970%" y="223.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (14 samples, 0.13%)</title><rect x="5.9470%" y="325" width="0.1326%" height="15" fill="rgb(217,211,10)" fg:x="628" fg:w="14"/><text x="6.1970%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.13%)</title><rect x="5.9470%" y="309" width="0.1326%" height="15" fill="rgb(219,228,52)" fg:x="628" fg:w="14"/><text x="6.1970%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="6.0417%" y="293" width="0.0379%" height="15" fill="rgb(231,92,29)" fg:x="638" fg:w="4"/><text x="6.2917%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="6.0417%" y="277" width="0.0379%" height="15" fill="rgb(232,8,23)" fg:x="638" fg:w="4"/><text x="6.2917%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="6.0417%" y="261" width="0.0379%" height="15" fill="rgb(216,211,34)" fg:x="638" fg:w="4"/><text x="6.2917%" y="271.50"></text></g><g><title>handle_mm_fault (2 samples, 0.02%)</title><rect x="6.1080%" y="229" width="0.0189%" height="15" fill="rgb(236,151,0)" fg:x="645" fg:w="2"/><text x="6.3580%" y="239.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.02%)</title><rect x="6.1080%" y="213" width="0.0189%" height="15" fill="rgb(209,168,3)" fg:x="645" fg:w="2"/><text x="6.3580%" y="223.50"></text></g><g><title>do_anonymous_page (2 samples, 0.02%)</title><rect x="6.1080%" y="197" width="0.0189%" height="15" fill="rgb(208,129,28)" fg:x="645" fg:w="2"/><text x="6.3580%" y="207.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.02%)</title><rect x="6.1080%" y="181" width="0.0189%" height="15" fill="rgb(229,78,22)" fg:x="645" fg:w="2"/><text x="6.3580%" y="191.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.02%)</title><rect x="6.1080%" y="165" width="0.0189%" height="15" fill="rgb(228,187,13)" fg:x="645" fg:w="2"/><text x="6.3580%" y="175.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.02%)</title><rect x="6.1080%" y="149" width="0.0189%" height="15" fill="rgb(240,119,24)" fg:x="645" fg:w="2"/><text x="6.3580%" y="159.50"></text></g><g><title>clear_page_rep (2 samples, 0.02%)</title><rect x="6.1080%" y="133" width="0.0189%" height="15" fill="rgb(209,194,42)" fg:x="645" fg:w="2"/><text x="6.3580%" y="143.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (6 samples, 0.06%)</title><rect x="6.0795%" y="325" width="0.0568%" height="15" fill="rgb(247,200,46)" fg:x="642" fg:w="6"/><text x="6.3295%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (6 samples, 0.06%)</title><rect x="6.0795%" y="309" width="0.0568%" height="15" fill="rgb(218,76,16)" fg:x="642" fg:w="6"/><text x="6.3295%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.06%)</title><rect x="6.0795%" y="293" width="0.0568%" height="15" fill="rgb(225,21,48)" fg:x="642" fg:w="6"/><text x="6.3295%" y="303.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.03%)</title><rect x="6.1080%" y="277" width="0.0284%" height="15" fill="rgb(239,223,50)" fg:x="645" fg:w="3"/><text x="6.3580%" y="287.50"></text></g><g><title>exc_page_fault (3 samples, 0.03%)</title><rect x="6.1080%" y="261" width="0.0284%" height="15" fill="rgb(244,45,21)" fg:x="645" fg:w="3"/><text x="6.3580%" y="271.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.03%)</title><rect x="6.1080%" y="245" width="0.0284%" height="15" fill="rgb(232,33,43)" fg:x="645" fg:w="3"/><text x="6.3580%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (22 samples, 0.21%)</title><rect x="5.9470%" y="373" width="0.2083%" height="15" fill="rgb(209,8,3)" fg:x="628" fg:w="22"/><text x="6.1970%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (22 samples, 0.21%)</title><rect x="5.9470%" y="357" width="0.2083%" height="15" fill="rgb(214,25,53)" fg:x="628" fg:w="22"/><text x="6.1970%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (22 samples, 0.21%)</title><rect x="5.9470%" y="341" width="0.2083%" height="15" fill="rgb(254,186,54)" fg:x="628" fg:w="22"/><text x="6.1970%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.02%)</title><rect x="6.1364%" y="325" width="0.0189%" height="15" fill="rgb(208,174,49)" fg:x="648" fg:w="2"/><text x="6.3864%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.02%)</title><rect x="6.1364%" y="309" width="0.0189%" height="15" fill="rgb(233,191,51)" fg:x="648" fg:w="2"/><text x="6.3864%" y="319.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (23 samples, 0.22%)</title><rect x="5.9470%" y="437" width="0.2178%" height="15" fill="rgb(222,134,10)" fg:x="628" fg:w="23"/><text x="6.1970%" y="447.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (23 samples, 0.22%)</title><rect x="5.9470%" y="421" width="0.2178%" height="15" fill="rgb(230,226,20)" fg:x="628" fg:w="23"/><text x="6.1970%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23 samples, 0.22%)</title><rect x="5.9470%" y="405" width="0.2178%" height="15" fill="rgb(251,111,25)" fg:x="628" fg:w="23"/><text x="6.1970%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (23 samples, 0.22%)</title><rect x="5.9470%" y="389" width="0.2178%" height="15" fill="rgb(224,40,46)" fg:x="628" fg:w="23"/><text x="6.1970%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.02%)</title><rect x="6.2121%" y="293" width="0.0189%" height="15" fill="rgb(236,108,47)" fg:x="656" fg:w="2"/><text x="6.4621%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.02%)</title><rect x="6.2121%" y="277" width="0.0189%" height="15" fill="rgb(234,93,0)" fg:x="656" fg:w="2"/><text x="6.4621%" y="287.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="6.2121%" y="261" width="0.0189%" height="15" fill="rgb(224,213,32)" fg:x="656" fg:w="2"/><text x="6.4621%" y="271.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.02%)</title><rect x="6.2121%" y="245" width="0.0189%" height="15" fill="rgb(251,11,48)" fg:x="656" fg:w="2"/><text x="6.4621%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.02%)</title><rect x="6.5152%" y="197" width="0.0189%" height="15" fill="rgb(236,173,5)" fg:x="688" fg:w="2"/><text x="6.7652%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.02%)</title><rect x="6.5152%" y="181" width="0.0189%" height="15" fill="rgb(230,95,12)" fg:x="688" fg:w="2"/><text x="6.7652%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (37 samples, 0.35%)</title><rect x="6.2311%" y="293" width="0.3504%" height="15" fill="rgb(232,209,1)" fg:x="658" fg:w="37"/><text x="6.4811%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 0.25%)</title><rect x="6.3352%" y="277" width="0.2462%" height="15" fill="rgb(232,6,1)" fg:x="669" fg:w="26"/><text x="6.5852%" y="287.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.25%)</title><rect x="6.3352%" y="261" width="0.2462%" height="15" fill="rgb(210,224,50)" fg:x="669" fg:w="26"/><text x="6.5852%" y="271.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (26 samples, 0.25%)</title><rect x="6.3352%" y="245" width="0.2462%" height="15" fill="rgb(228,127,35)" fg:x="669" fg:w="26"/><text x="6.5852%" y="255.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (24 samples, 0.23%)</title><rect x="6.3542%" y="229" width="0.2273%" height="15" fill="rgb(245,102,45)" fg:x="671" fg:w="24"/><text x="6.6042%" y="239.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (22 samples, 0.21%)</title><rect x="6.3731%" y="213" width="0.2083%" height="15" fill="rgb(214,1,49)" fg:x="673" fg:w="22"/><text x="6.6231%" y="223.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (4 samples, 0.04%)</title><rect x="6.5436%" y="197" width="0.0379%" height="15" fill="rgb(226,163,40)" fg:x="691" fg:w="4"/><text x="6.7936%" y="207.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.03%)</title><rect x="6.6098%" y="213" width="0.0284%" height="15" fill="rgb(239,212,28)" fg:x="698" fg:w="3"/><text x="6.8598%" y="223.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.03%)</title><rect x="6.6098%" y="197" width="0.0284%" height="15" fill="rgb(220,20,13)" fg:x="698" fg:w="3"/><text x="6.8598%" y="207.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="6.6193%" y="181" width="0.0189%" height="15" fill="rgb(210,164,35)" fg:x="699" fg:w="2"/><text x="6.8693%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (50 samples, 0.47%)</title><rect x="6.1932%" y="341" width="0.4735%" height="15" fill="rgb(248,109,41)" fg:x="654" fg:w="50"/><text x="6.4432%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (50 samples, 0.47%)</title><rect x="6.1932%" y="325" width="0.4735%" height="15" fill="rgb(238,23,50)" fg:x="654" fg:w="50"/><text x="6.4432%" y="335.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (50 samples, 0.47%)</title><rect x="6.1932%" y="309" width="0.4735%" height="15" fill="rgb(211,48,49)" fg:x="654" fg:w="50"/><text x="6.4432%" y="319.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (9 samples, 0.09%)</title><rect x="6.5814%" y="293" width="0.0852%" height="15" fill="rgb(223,36,21)" fg:x="695" fg:w="9"/><text x="6.8314%" y="303.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (9 samples, 0.09%)</title><rect x="6.5814%" y="277" width="0.0852%" height="15" fill="rgb(207,123,46)" fg:x="695" fg:w="9"/><text x="6.8314%" y="287.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (9 samples, 0.09%)</title><rect x="6.5814%" y="261" width="0.0852%" height="15" fill="rgb(240,218,32)" fg:x="695" fg:w="9"/><text x="6.8314%" y="271.50"></text></g><g><title>core::str::pattern::StrSearcher::new (9 samples, 0.09%)</title><rect x="6.5814%" y="245" width="0.0852%" height="15" fill="rgb(252,5,43)" fg:x="695" fg:w="9"/><text x="6.8314%" y="255.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (6 samples, 0.06%)</title><rect x="6.6098%" y="229" width="0.0568%" height="15" fill="rgb(252,84,19)" fg:x="698" fg:w="6"/><text x="6.8598%" y="239.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (2 samples, 0.02%)</title><rect x="6.6477%" y="213" width="0.0189%" height="15" fill="rgb(243,152,39)" fg:x="702" fg:w="2"/><text x="6.8977%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.48%)</title><rect x="6.1932%" y="421" width="0.4830%" height="15" fill="rgb(234,160,15)" fg:x="654" fg:w="51"/><text x="6.4432%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (51 samples, 0.48%)</title><rect x="6.1932%" y="405" width="0.4830%" height="15" fill="rgb(237,34,20)" fg:x="654" fg:w="51"/><text x="6.4432%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (51 samples, 0.48%)</title><rect x="6.1932%" y="389" width="0.4830%" height="15" fill="rgb(229,97,13)" fg:x="654" fg:w="51"/><text x="6.4432%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (51 samples, 0.48%)</title><rect x="6.1932%" y="373" width="0.4830%" height="15" fill="rgb(234,71,50)" fg:x="654" fg:w="51"/><text x="6.4432%" y="383.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (51 samples, 0.48%)</title><rect x="6.1932%" y="357" width="0.4830%" height="15" fill="rgb(253,155,4)" fg:x="654" fg:w="51"/><text x="6.4432%" y="367.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="6.7614%" y="117" width="0.0189%" height="15" fill="rgb(222,185,37)" fg:x="714" fg:w="2"/><text x="7.0114%" y="127.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.09%)</title><rect x="6.7235%" y="149" width="0.0852%" height="15" fill="rgb(251,177,13)" fg:x="710" fg:w="9"/><text x="6.9735%" y="159.50"></text></g><g><title>_int_realloc (7 samples, 0.07%)</title><rect x="6.7424%" y="133" width="0.0663%" height="15" fill="rgb(250,179,40)" fg:x="712" fg:w="7"/><text x="6.9924%" y="143.50"></text></g><g><title>_int_malloc (3 samples, 0.03%)</title><rect x="6.7803%" y="117" width="0.0284%" height="15" fill="rgb(242,44,2)" fg:x="716" fg:w="3"/><text x="7.0303%" y="127.50"></text></g><g><title>__rdl_realloc (2 samples, 0.02%)</title><rect x="6.8087%" y="149" width="0.0189%" height="15" fill="rgb(216,177,13)" fg:x="719" fg:w="2"/><text x="7.0587%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.02%)</title><rect x="6.8087%" y="133" width="0.0189%" height="15" fill="rgb(216,106,43)" fg:x="719" fg:w="2"/><text x="7.0587%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.11%)</title><rect x="6.7235%" y="197" width="0.1136%" height="15" fill="rgb(216,183,2)" fg:x="710" fg:w="12"/><text x="6.9735%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.11%)</title><rect x="6.7235%" y="181" width="0.1136%" height="15" fill="rgb(249,75,3)" fg:x="710" fg:w="12"/><text x="6.9735%" y="191.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.11%)</title><rect x="6.7235%" y="165" width="0.1136%" height="15" fill="rgb(219,67,39)" fg:x="710" fg:w="12"/><text x="6.9735%" y="175.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.06%)</title><rect x="6.8371%" y="197" width="0.0568%" height="15" fill="rgb(253,228,2)" fg:x="722" fg:w="6"/><text x="7.0871%" y="207.50"></text></g><g><title>tcache_get (4 samples, 0.04%)</title><rect x="6.8561%" y="181" width="0.0379%" height="15" fill="rgb(235,138,27)" fg:x="724" fg:w="4"/><text x="7.1061%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.18%)</title><rect x="6.7235%" y="213" width="0.1799%" height="15" fill="rgb(236,97,51)" fg:x="710" fg:w="19"/><text x="6.9735%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.21%)</title><rect x="6.7045%" y="277" width="0.2083%" height="15" fill="rgb(240,80,30)" fg:x="708" fg:w="22"/><text x="6.9545%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.21%)</title><rect x="6.7045%" y="261" width="0.2083%" height="15" fill="rgb(230,178,19)" fg:x="708" fg:w="22"/><text x="6.9545%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 0.20%)</title><rect x="6.7140%" y="245" width="0.1989%" height="15" fill="rgb(210,190,27)" fg:x="709" fg:w="21"/><text x="6.9640%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.19%)</title><rect x="6.7235%" y="229" width="0.1894%" height="15" fill="rgb(222,107,31)" fg:x="710" fg:w="20"/><text x="6.9735%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.02%)</title><rect x="6.9129%" y="261" width="0.0189%" height="15" fill="rgb(216,127,34)" fg:x="730" fg:w="2"/><text x="7.1629%" y="271.50"></text></g><g><title>alloc::fmt::format (29 samples, 0.27%)</title><rect x="6.6761%" y="421" width="0.2746%" height="15" fill="rgb(234,116,52)" fg:x="705" fg:w="29"/><text x="6.9261%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (28 samples, 0.27%)</title><rect x="6.6856%" y="405" width="0.2652%" height="15" fill="rgb(222,124,15)" fg:x="706" fg:w="28"/><text x="6.9356%" y="415.50"></text></g><g><title>core::fmt::write (27 samples, 0.26%)</title><rect x="6.6951%" y="389" width="0.2557%" height="15" fill="rgb(231,179,28)" fg:x="707" fg:w="27"/><text x="6.9451%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (26 samples, 0.25%)</title><rect x="6.7045%" y="373" width="0.2462%" height="15" fill="rgb(226,93,45)" fg:x="708" fg:w="26"/><text x="6.9545%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (26 samples, 0.25%)</title><rect x="6.7045%" y="357" width="0.2462%" height="15" fill="rgb(215,8,51)" fg:x="708" fg:w="26"/><text x="6.9545%" y="367.50"></text></g><g><title>alloc::string::String::push_str (26 samples, 0.25%)</title><rect x="6.7045%" y="341" width="0.2462%" height="15" fill="rgb(223,106,5)" fg:x="708" fg:w="26"/><text x="6.9545%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (26 samples, 0.25%)</title><rect x="6.7045%" y="325" width="0.2462%" height="15" fill="rgb(250,191,5)" fg:x="708" fg:w="26"/><text x="6.9545%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (26 samples, 0.25%)</title><rect x="6.7045%" y="309" width="0.2462%" height="15" fill="rgb(242,132,44)" fg:x="708" fg:w="26"/><text x="6.9545%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (26 samples, 0.25%)</title><rect x="6.7045%" y="293" width="0.2462%" height="15" fill="rgb(251,152,29)" fg:x="708" fg:w="26"/><text x="6.9545%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="6.9129%" y="277" width="0.0379%" height="15" fill="rgb(218,179,5)" fg:x="730" fg:w="4"/><text x="7.1629%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="6.9318%" y="261" width="0.0189%" height="15" fill="rgb(227,67,19)" fg:x="732" fg:w="2"/><text x="7.1818%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.02%)</title><rect x="6.9508%" y="421" width="0.0189%" height="15" fill="rgb(233,119,31)" fg:x="734" fg:w="2"/><text x="7.2008%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="6.9508%" y="405" width="0.0189%" height="15" fill="rgb(241,120,22)" fg:x="734" fg:w="2"/><text x="7.2008%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="6.9508%" y="389" width="0.0189%" height="15" fill="rgb(224,102,30)" fg:x="734" fg:w="2"/><text x="7.2008%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="6.9508%" y="373" width="0.0189%" height="15" fill="rgb(210,164,37)" fg:x="734" fg:w="2"/><text x="7.2008%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="6.9508%" y="357" width="0.0189%" height="15" fill="rgb(226,191,16)" fg:x="734" fg:w="2"/><text x="7.2008%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="6.9508%" y="341" width="0.0189%" height="15" fill="rgb(214,40,45)" fg:x="734" fg:w="2"/><text x="7.2008%" y="351.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="6.9508%" y="325" width="0.0189%" height="15" fill="rgb(244,29,26)" fg:x="734" fg:w="2"/><text x="7.2008%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="6.9697%" y="373" width="0.0284%" height="15" fill="rgb(216,16,5)" fg:x="736" fg:w="3"/><text x="7.2197%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.02%)</title><rect x="6.9981%" y="341" width="0.0189%" height="15" fill="rgb(249,76,35)" fg:x="739" fg:w="2"/><text x="7.2481%" y="351.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="6.9981%" y="325" width="0.0189%" height="15" fill="rgb(207,11,44)" fg:x="739" fg:w="2"/><text x="7.2481%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="6.9981%" y="309" width="0.0189%" height="15" fill="rgb(228,190,49)" fg:x="739" fg:w="2"/><text x="7.2481%" y="319.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="6.9981%" y="293" width="0.0189%" height="15" fill="rgb(214,173,12)" fg:x="739" fg:w="2"/><text x="7.2481%" y="303.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="6.9981%" y="277" width="0.0189%" height="15" fill="rgb(218,26,35)" fg:x="739" fg:w="2"/><text x="7.2481%" y="287.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.06%)</title><rect x="6.9697%" y="421" width="0.0568%" height="15" fill="rgb(220,200,19)" fg:x="736" fg:w="6"/><text x="7.2197%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.06%)</title><rect x="6.9697%" y="405" width="0.0568%" height="15" fill="rgb(239,95,49)" fg:x="736" fg:w="6"/><text x="7.2197%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.06%)</title><rect x="6.9697%" y="389" width="0.0568%" height="15" fill="rgb(235,85,53)" fg:x="736" fg:w="6"/><text x="7.2197%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.03%)</title><rect x="6.9981%" y="373" width="0.0284%" height="15" fill="rgb(233,133,31)" fg:x="739" fg:w="3"/><text x="7.2481%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.03%)</title><rect x="6.9981%" y="357" width="0.0284%" height="15" fill="rgb(218,25,20)" fg:x="739" fg:w="3"/><text x="7.2481%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="7.0644%" y="245" width="0.0284%" height="15" fill="rgb(252,210,38)" fg:x="746" fg:w="3"/><text x="7.3144%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.07%)</title><rect x="7.0360%" y="309" width="0.0663%" height="15" fill="rgb(242,134,21)" fg:x="743" fg:w="7"/><text x="7.2860%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.07%)</title><rect x="7.0360%" y="293" width="0.0663%" height="15" fill="rgb(213,28,48)" fg:x="743" fg:w="7"/><text x="7.2860%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.07%)</title><rect x="7.0360%" y="277" width="0.0663%" height="15" fill="rgb(250,196,2)" fg:x="743" fg:w="7"/><text x="7.2860%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.04%)</title><rect x="7.0644%" y="261" width="0.0379%" height="15" fill="rgb(227,5,17)" fg:x="746" fg:w="4"/><text x="7.3144%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (8 samples, 0.08%)</title><rect x="7.0360%" y="341" width="0.0758%" height="15" fill="rgb(221,226,24)" fg:x="743" fg:w="8"/><text x="7.2860%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (8 samples, 0.08%)</title><rect x="7.0360%" y="325" width="0.0758%" height="15" fill="rgb(211,5,48)" fg:x="743" fg:w="8"/><text x="7.2860%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.10%)</title><rect x="7.0265%" y="357" width="0.1042%" height="15" fill="rgb(219,150,6)" fg:x="742" fg:w="11"/><text x="7.2765%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="7.1117%" y="341" width="0.0189%" height="15" fill="rgb(251,46,16)" fg:x="751" fg:w="2"/><text x="7.3617%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="7.1117%" y="325" width="0.0189%" height="15" fill="rgb(220,204,40)" fg:x="751" fg:w="2"/><text x="7.3617%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="7.1117%" y="309" width="0.0189%" height="15" fill="rgb(211,85,2)" fg:x="751" fg:w="2"/><text x="7.3617%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="7.1117%" y="293" width="0.0189%" height="15" fill="rgb(229,17,7)" fg:x="751" fg:w="2"/><text x="7.3617%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="7.1307%" y="325" width="0.0284%" height="15" fill="rgb(239,72,28)" fg:x="753" fg:w="3"/><text x="7.3807%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="7.1402%" y="309" width="0.0189%" height="15" fill="rgb(230,47,54)" fg:x="754" fg:w="2"/><text x="7.3902%" y="319.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (21 samples, 0.20%)</title><rect x="7.0265%" y="421" width="0.1989%" height="15" fill="rgb(214,50,8)" fg:x="742" fg:w="21"/><text x="7.2765%" y="431.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (21 samples, 0.20%)</title><rect x="7.0265%" y="405" width="0.1989%" height="15" fill="rgb(216,198,43)" fg:x="742" fg:w="21"/><text x="7.2765%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (21 samples, 0.20%)</title><rect x="7.0265%" y="389" width="0.1989%" height="15" fill="rgb(234,20,35)" fg:x="742" fg:w="21"/><text x="7.2765%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (21 samples, 0.20%)</title><rect x="7.0265%" y="373" width="0.1989%" height="15" fill="rgb(254,45,19)" fg:x="742" fg:w="21"/><text x="7.2765%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.09%)</title><rect x="7.1307%" y="357" width="0.0947%" height="15" fill="rgb(219,14,44)" fg:x="753" fg:w="10"/><text x="7.3807%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.09%)</title><rect x="7.1307%" y="341" width="0.0947%" height="15" fill="rgb(217,220,26)" fg:x="753" fg:w="10"/><text x="7.3807%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.06%)</title><rect x="7.1686%" y="325" width="0.0568%" height="15" fill="rgb(213,158,28)" fg:x="757" fg:w="6"/><text x="7.4186%" y="335.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.06%)</title><rect x="7.1686%" y="309" width="0.0568%" height="15" fill="rgb(252,51,52)" fg:x="757" fg:w="6"/><text x="7.4186%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.06%)</title><rect x="7.1686%" y="293" width="0.0568%" height="15" fill="rgb(246,89,16)" fg:x="757" fg:w="6"/><text x="7.4186%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.05%)</title><rect x="7.1780%" y="277" width="0.0473%" height="15" fill="rgb(216,158,49)" fg:x="758" fg:w="5"/><text x="7.4280%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.04%)</title><rect x="7.1875%" y="261" width="0.0379%" height="15" fill="rgb(236,107,19)" fg:x="759" fg:w="4"/><text x="7.4375%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.04%)</title><rect x="7.1875%" y="245" width="0.0379%" height="15" fill="rgb(228,185,30)" fg:x="759" fg:w="4"/><text x="7.4375%" y="255.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4 samples, 0.04%)</title><rect x="7.1875%" y="229" width="0.0379%" height="15" fill="rgb(246,134,8)" fg:x="759" fg:w="4"/><text x="7.4375%" y="239.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.03%)</title><rect x="7.2254%" y="373" width="0.0284%" height="15" fill="rgb(214,143,50)" fg:x="763" fg:w="3"/><text x="7.4754%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="7.2538%" y="373" width="0.0189%" height="15" fill="rgb(228,75,8)" fg:x="766" fg:w="2"/><text x="7.5038%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="7.2538%" y="357" width="0.0189%" height="15" fill="rgb(207,175,4)" fg:x="766" fg:w="2"/><text x="7.5038%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4 samples, 0.04%)</title><rect x="7.2727%" y="277" width="0.0379%" height="15" fill="rgb(205,108,24)" fg:x="768" fg:w="4"/><text x="7.5227%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.04%)</title><rect x="7.2727%" y="261" width="0.0379%" height="15" fill="rgb(244,120,49)" fg:x="768" fg:w="4"/><text x="7.5227%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="7.2727%" y="245" width="0.0379%" height="15" fill="rgb(223,47,38)" fg:x="768" fg:w="4"/><text x="7.5227%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="7.2727%" y="229" width="0.0379%" height="15" fill="rgb(229,179,11)" fg:x="768" fg:w="4"/><text x="7.5227%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="7.2727%" y="213" width="0.0379%" height="15" fill="rgb(231,122,1)" fg:x="768" fg:w="4"/><text x="7.5227%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.04%)</title><rect x="7.2727%" y="197" width="0.0379%" height="15" fill="rgb(245,119,9)" fg:x="768" fg:w="4"/><text x="7.5227%" y="207.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (7 samples, 0.07%)</title><rect x="7.2727%" y="309" width="0.0663%" height="15" fill="rgb(241,163,25)" fg:x="768" fg:w="7"/><text x="7.5227%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.07%)</title><rect x="7.2727%" y="293" width="0.0663%" height="15" fill="rgb(217,214,3)" fg:x="768" fg:w="7"/><text x="7.5227%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="7.3106%" y="277" width="0.0284%" height="15" fill="rgb(240,86,28)" fg:x="772" fg:w="3"/><text x="7.5606%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="7.3106%" y="261" width="0.0284%" height="15" fill="rgb(215,47,9)" fg:x="772" fg:w="3"/><text x="7.5606%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="7.3106%" y="245" width="0.0284%" height="15" fill="rgb(252,25,45)" fg:x="772" fg:w="3"/><text x="7.5606%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (2 samples, 0.02%)</title><rect x="7.3390%" y="293" width="0.0189%" height="15" fill="rgb(251,164,9)" fg:x="775" fg:w="2"/><text x="7.5890%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="7.3390%" y="277" width="0.0189%" height="15" fill="rgb(233,194,0)" fg:x="775" fg:w="2"/><text x="7.5890%" y="287.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.02%)</title><rect x="7.3390%" y="261" width="0.0189%" height="15" fill="rgb(249,111,24)" fg:x="775" fg:w="2"/><text x="7.5890%" y="271.50"></text></g><g><title>exc_page_fault (2 samples, 0.02%)</title><rect x="7.3390%" y="245" width="0.0189%" height="15" fill="rgb(250,223,3)" fg:x="775" fg:w="2"/><text x="7.5890%" y="255.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.02%)</title><rect x="7.3390%" y="229" width="0.0189%" height="15" fill="rgb(236,178,37)" fg:x="775" fg:w="2"/><text x="7.5890%" y="239.50"></text></g><g><title>handle_mm_fault (2 samples, 0.02%)</title><rect x="7.3390%" y="213" width="0.0189%" height="15" fill="rgb(241,158,50)" fg:x="775" fg:w="2"/><text x="7.5890%" y="223.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.02%)</title><rect x="7.3390%" y="197" width="0.0189%" height="15" fill="rgb(213,121,41)" fg:x="775" fg:w="2"/><text x="7.5890%" y="207.50"></text></g><g><title>do_anonymous_page (2 samples, 0.02%)</title><rect x="7.3390%" y="181" width="0.0189%" height="15" fill="rgb(240,92,3)" fg:x="775" fg:w="2"/><text x="7.5890%" y="191.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.02%)</title><rect x="7.3390%" y="165" width="0.0189%" height="15" fill="rgb(205,123,3)" fg:x="775" fg:w="2"/><text x="7.5890%" y="175.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.02%)</title><rect x="7.3390%" y="149" width="0.0189%" height="15" fill="rgb(205,97,47)" fg:x="775" fg:w="2"/><text x="7.5890%" y="159.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.02%)</title><rect x="7.3390%" y="133" width="0.0189%" height="15" fill="rgb(247,152,14)" fg:x="775" fg:w="2"/><text x="7.5890%" y="143.50"></text></g><g><title>clear_page_rep (2 samples, 0.02%)</title><rect x="7.3390%" y="117" width="0.0189%" height="15" fill="rgb(248,195,53)" fg:x="775" fg:w="2"/><text x="7.5890%" y="127.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (3 samples, 0.03%)</title><rect x="7.3390%" y="309" width="0.0284%" height="15" fill="rgb(226,201,16)" fg:x="775" fg:w="3"/><text x="7.5890%" y="319.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (16 samples, 0.15%)</title><rect x="7.2254%" y="421" width="0.1515%" height="15" fill="rgb(205,98,0)" fg:x="763" fg:w="16"/><text x="7.4754%" y="431.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (16 samples, 0.15%)</title><rect x="7.2254%" y="405" width="0.1515%" height="15" fill="rgb(214,191,48)" fg:x="763" fg:w="16"/><text x="7.4754%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.15%)</title><rect x="7.2254%" y="389" width="0.1515%" height="15" fill="rgb(237,112,39)" fg:x="763" fg:w="16"/><text x="7.4754%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (11 samples, 0.10%)</title><rect x="7.2727%" y="373" width="0.1042%" height="15" fill="rgb(247,203,27)" fg:x="768" fg:w="11"/><text x="7.5227%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (11 samples, 0.10%)</title><rect x="7.2727%" y="357" width="0.1042%" height="15" fill="rgb(235,124,28)" fg:x="768" fg:w="11"/><text x="7.5227%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.10%)</title><rect x="7.2727%" y="341" width="0.1042%" height="15" fill="rgb(208,207,46)" fg:x="768" fg:w="11"/><text x="7.5227%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (11 samples, 0.10%)</title><rect x="7.2727%" y="325" width="0.1042%" height="15" fill="rgb(234,176,4)" fg:x="768" fg:w="11"/><text x="7.5227%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.03%)</title><rect x="7.4432%" y="277" width="0.0284%" height="15" fill="rgb(230,133,28)" fg:x="786" fg:w="3"/><text x="7.6932%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.03%)</title><rect x="7.4432%" y="261" width="0.0284%" height="15" fill="rgb(211,137,40)" fg:x="786" fg:w="3"/><text x="7.6932%" y="271.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.03%)</title><rect x="7.4432%" y="245" width="0.0284%" height="15" fill="rgb(254,35,13)" fg:x="786" fg:w="3"/><text x="7.6932%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.03%)</title><rect x="7.4432%" y="229" width="0.0284%" height="15" fill="rgb(225,49,51)" fg:x="786" fg:w="3"/><text x="7.6932%" y="239.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.03%)</title><rect x="7.4432%" y="213" width="0.0284%" height="15" fill="rgb(251,10,15)" fg:x="786" fg:w="3"/><text x="7.6932%" y="223.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.03%)</title><rect x="7.4432%" y="197" width="0.0284%" height="15" fill="rgb(228,207,15)" fg:x="786" fg:w="3"/><text x="7.6932%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.02%)</title><rect x="7.4716%" y="277" width="0.0189%" height="15" fill="rgb(241,99,19)" fg:x="789" fg:w="2"/><text x="7.7216%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.02%)</title><rect x="7.4716%" y="261" width="0.0189%" height="15" fill="rgb(207,104,49)" fg:x="789" fg:w="2"/><text x="7.7216%" y="271.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="7.4716%" y="245" width="0.0189%" height="15" fill="rgb(234,99,18)" fg:x="789" fg:w="2"/><text x="7.7216%" y="255.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.02%)</title><rect x="7.4716%" y="229" width="0.0189%" height="15" fill="rgb(213,191,49)" fg:x="789" fg:w="2"/><text x="7.7216%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.04%)</title><rect x="7.7178%" y="181" width="0.0379%" height="15" fill="rgb(210,226,19)" fg:x="815" fg:w="4"/><text x="7.9678%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.04%)</title><rect x="7.7178%" y="165" width="0.0379%" height="15" fill="rgb(229,97,18)" fg:x="815" fg:w="4"/><text x="7.9678%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (37 samples, 0.35%)</title><rect x="7.4905%" y="277" width="0.3504%" height="15" fill="rgb(211,167,15)" fg:x="791" fg:w="37"/><text x="7.7405%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (27 samples, 0.26%)</title><rect x="7.5852%" y="261" width="0.2557%" height="15" fill="rgb(210,169,34)" fg:x="801" fg:w="27"/><text x="7.8352%" y="271.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.25%)</title><rect x="7.5947%" y="245" width="0.2462%" height="15" fill="rgb(241,121,31)" fg:x="802" fg:w="26"/><text x="7.8447%" y="255.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (26 samples, 0.25%)</title><rect x="7.5947%" y="229" width="0.2462%" height="15" fill="rgb(232,40,11)" fg:x="802" fg:w="26"/><text x="7.8447%" y="239.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (26 samples, 0.25%)</title><rect x="7.5947%" y="213" width="0.2462%" height="15" fill="rgb(205,86,26)" fg:x="802" fg:w="26"/><text x="7.8447%" y="223.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (26 samples, 0.25%)</title><rect x="7.5947%" y="197" width="0.2462%" height="15" fill="rgb(231,126,28)" fg:x="802" fg:w="26"/><text x="7.8447%" y="207.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (8 samples, 0.08%)</title><rect x="7.7652%" y="181" width="0.0758%" height="15" fill="rgb(219,221,18)" fg:x="820" fg:w="8"/><text x="8.0152%" y="191.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.03%)</title><rect x="7.8977%" y="197" width="0.0284%" height="15" fill="rgb(211,40,0)" fg:x="834" fg:w="3"/><text x="8.1477%" y="207.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.03%)</title><rect x="7.8977%" y="181" width="0.0284%" height="15" fill="rgb(239,85,43)" fg:x="834" fg:w="3"/><text x="8.1477%" y="191.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="7.9072%" y="165" width="0.0189%" height="15" fill="rgb(231,55,21)" fg:x="835" fg:w="2"/><text x="8.1572%" y="175.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.03%)</title><rect x="7.9261%" y="181" width="0.0284%" height="15" fill="rgb(225,184,43)" fg:x="837" fg:w="3"/><text x="8.1761%" y="191.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.04%)</title><rect x="7.9261%" y="197" width="0.0379%" height="15" fill="rgb(251,158,41)" fg:x="837" fg:w="4"/><text x="8.1761%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.56%)</title><rect x="7.4337%" y="405" width="0.5587%" height="15" fill="rgb(234,159,37)" fg:x="785" fg:w="59"/><text x="7.6837%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (59 samples, 0.56%)</title><rect x="7.4337%" y="389" width="0.5587%" height="15" fill="rgb(216,204,22)" fg:x="785" fg:w="59"/><text x="7.6837%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (59 samples, 0.56%)</title><rect x="7.4337%" y="373" width="0.5587%" height="15" fill="rgb(214,17,3)" fg:x="785" fg:w="59"/><text x="7.6837%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (59 samples, 0.56%)</title><rect x="7.4337%" y="357" width="0.5587%" height="15" fill="rgb(212,111,17)" fg:x="785" fg:w="59"/><text x="7.6837%" y="367.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (59 samples, 0.56%)</title><rect x="7.4337%" y="341" width="0.5587%" height="15" fill="rgb(221,157,24)" fg:x="785" fg:w="59"/><text x="7.6837%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (59 samples, 0.56%)</title><rect x="7.4337%" y="325" width="0.5587%" height="15" fill="rgb(252,16,13)" fg:x="785" fg:w="59"/><text x="7.6837%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (59 samples, 0.56%)</title><rect x="7.4337%" y="309" width="0.5587%" height="15" fill="rgb(221,62,2)" fg:x="785" fg:w="59"/><text x="7.6837%" y="319.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (59 samples, 0.56%)</title><rect x="7.4337%" y="293" width="0.5587%" height="15" fill="rgb(247,87,22)" fg:x="785" fg:w="59"/><text x="7.6837%" y="303.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (16 samples, 0.15%)</title><rect x="7.8409%" y="277" width="0.1515%" height="15" fill="rgb(215,73,9)" fg:x="828" fg:w="16"/><text x="8.0909%" y="287.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (16 samples, 0.15%)</title><rect x="7.8409%" y="261" width="0.1515%" height="15" fill="rgb(207,175,33)" fg:x="828" fg:w="16"/><text x="8.0909%" y="271.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (16 samples, 0.15%)</title><rect x="7.8409%" y="245" width="0.1515%" height="15" fill="rgb(243,129,54)" fg:x="828" fg:w="16"/><text x="8.0909%" y="255.50"></text></g><g><title>core::str::pattern::StrSearcher::new (16 samples, 0.15%)</title><rect x="7.8409%" y="229" width="0.1515%" height="15" fill="rgb(227,119,45)" fg:x="828" fg:w="16"/><text x="8.0909%" y="239.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (10 samples, 0.09%)</title><rect x="7.8977%" y="213" width="0.0947%" height="15" fill="rgb(205,109,36)" fg:x="834" fg:w="10"/><text x="8.1477%" y="223.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (2 samples, 0.02%)</title><rect x="7.9735%" y="197" width="0.0189%" height="15" fill="rgb(205,6,39)" fg:x="842" fg:w="2"/><text x="8.2235%" y="207.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.02%)</title><rect x="8.0114%" y="357" width="0.0189%" height="15" fill="rgb(221,32,16)" fg:x="846" fg:w="2"/><text x="8.2614%" y="367.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="8.1345%" y="101" width="0.0284%" height="15" fill="rgb(228,144,50)" fg:x="859" fg:w="3"/><text x="8.3845%" y="111.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.10%)</title><rect x="8.0966%" y="133" width="0.1042%" height="15" fill="rgb(229,201,53)" fg:x="855" fg:w="11"/><text x="8.3466%" y="143.50"></text></g><g><title>_int_realloc (10 samples, 0.09%)</title><rect x="8.1061%" y="117" width="0.0947%" height="15" fill="rgb(249,153,27)" fg:x="856" fg:w="10"/><text x="8.3561%" y="127.50"></text></g><g><title>_int_malloc (4 samples, 0.04%)</title><rect x="8.1629%" y="101" width="0.0379%" height="15" fill="rgb(227,106,25)" fg:x="862" fg:w="4"/><text x="8.4129%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.11%)</title><rect x="8.0966%" y="181" width="0.1136%" height="15" fill="rgb(230,65,29)" fg:x="855" fg:w="12"/><text x="8.3466%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.11%)</title><rect x="8.0966%" y="165" width="0.1136%" height="15" fill="rgb(221,57,46)" fg:x="855" fg:w="12"/><text x="8.3466%" y="175.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.11%)</title><rect x="8.0966%" y="149" width="0.1136%" height="15" fill="rgb(229,161,17)" fg:x="855" fg:w="12"/><text x="8.3466%" y="159.50"></text></g><g><title>__rdl_alloc (3 samples, 0.03%)</title><rect x="8.2102%" y="181" width="0.0284%" height="15" fill="rgb(222,213,11)" fg:x="867" fg:w="3"/><text x="8.4602%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="8.2197%" y="165" width="0.0189%" height="15" fill="rgb(235,35,13)" fg:x="868" fg:w="2"/><text x="8.4697%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.21%)</title><rect x="8.0492%" y="261" width="0.2083%" height="15" fill="rgb(233,158,34)" fg:x="850" fg:w="22"/><text x="8.2992%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.21%)</title><rect x="8.0492%" y="245" width="0.2083%" height="15" fill="rgb(215,151,48)" fg:x="850" fg:w="22"/><text x="8.2992%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.21%)</title><rect x="8.0492%" y="229" width="0.2083%" height="15" fill="rgb(229,84,14)" fg:x="850" fg:w="22"/><text x="8.2992%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.18%)</title><rect x="8.0777%" y="213" width="0.1799%" height="15" fill="rgb(229,68,14)" fg:x="853" fg:w="19"/><text x="8.3277%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.17%)</title><rect x="8.0871%" y="197" width="0.1705%" height="15" fill="rgb(243,106,26)" fg:x="854" fg:w="18"/><text x="8.3371%" y="207.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.02%)</title><rect x="8.2386%" y="181" width="0.0189%" height="15" fill="rgb(206,45,38)" fg:x="870" fg:w="2"/><text x="8.4886%" y="191.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (26 samples, 0.25%)</title><rect x="8.0303%" y="357" width="0.2462%" height="15" fill="rgb(226,6,15)" fg:x="848" fg:w="26"/><text x="8.2803%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (26 samples, 0.25%)</title><rect x="8.0303%" y="341" width="0.2462%" height="15" fill="rgb(232,22,54)" fg:x="848" fg:w="26"/><text x="8.2803%" y="351.50"></text></g><g><title>alloc::string::String::push_str (26 samples, 0.25%)</title><rect x="8.0303%" y="325" width="0.2462%" height="15" fill="rgb(229,222,32)" fg:x="848" fg:w="26"/><text x="8.2803%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (26 samples, 0.25%)</title><rect x="8.0303%" y="309" width="0.2462%" height="15" fill="rgb(228,62,29)" fg:x="848" fg:w="26"/><text x="8.2803%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (26 samples, 0.25%)</title><rect x="8.0303%" y="293" width="0.2462%" height="15" fill="rgb(251,103,34)" fg:x="848" fg:w="26"/><text x="8.2803%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (26 samples, 0.25%)</title><rect x="8.0303%" y="277" width="0.2462%" height="15" fill="rgb(233,12,30)" fg:x="848" fg:w="26"/><text x="8.2803%" y="287.50"></text></g><g><title>alloc::fmt::format (35 samples, 0.33%)</title><rect x="7.9924%" y="405" width="0.3314%" height="15" fill="rgb(238,52,0)" fg:x="844" fg:w="35"/><text x="8.2424%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (34 samples, 0.32%)</title><rect x="8.0019%" y="389" width="0.3220%" height="15" fill="rgb(223,98,5)" fg:x="845" fg:w="34"/><text x="8.2519%" y="399.50"></text></g><g><title>core::fmt::write (34 samples, 0.32%)</title><rect x="8.0019%" y="373" width="0.3220%" height="15" fill="rgb(228,75,37)" fg:x="845" fg:w="34"/><text x="8.2519%" y="383.50"></text></g><g><title>core::fmt::Formatter::pad (4 samples, 0.04%)</title><rect x="8.2860%" y="357" width="0.0379%" height="15" fill="rgb(205,115,49)" fg:x="875" fg:w="4"/><text x="8.5360%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.03%)</title><rect x="8.3239%" y="405" width="0.0284%" height="15" fill="rgb(250,154,43)" fg:x="879" fg:w="3"/><text x="8.5739%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.03%)</title><rect x="8.3239%" y="389" width="0.0284%" height="15" fill="rgb(226,43,29)" fg:x="879" fg:w="3"/><text x="8.5739%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.03%)</title><rect x="8.3239%" y="373" width="0.0284%" height="15" fill="rgb(249,228,39)" fg:x="879" fg:w="3"/><text x="8.5739%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="8.3239%" y="357" width="0.0284%" height="15" fill="rgb(216,79,43)" fg:x="879" fg:w="3"/><text x="8.5739%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="8.3333%" y="341" width="0.0189%" height="15" fill="rgb(228,95,12)" fg:x="880" fg:w="2"/><text x="8.5833%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="8.3333%" y="325" width="0.0189%" height="15" fill="rgb(249,221,15)" fg:x="880" fg:w="2"/><text x="8.5833%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="8.3523%" y="341" width="0.0189%" height="15" fill="rgb(233,34,13)" fg:x="882" fg:w="2"/><text x="8.6023%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="8.3523%" y="325" width="0.0189%" height="15" fill="rgb(214,103,39)" fg:x="882" fg:w="2"/><text x="8.6023%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="8.3523%" y="309" width="0.0189%" height="15" fill="rgb(251,126,39)" fg:x="882" fg:w="2"/><text x="8.6023%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.04%)</title><rect x="8.3523%" y="357" width="0.0379%" height="15" fill="rgb(214,216,36)" fg:x="882" fg:w="4"/><text x="8.6023%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="8.3712%" y="341" width="0.0189%" height="15" fill="rgb(220,221,8)" fg:x="884" fg:w="2"/><text x="8.6212%" y="351.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="8.3712%" y="325" width="0.0189%" height="15" fill="rgb(240,216,3)" fg:x="884" fg:w="2"/><text x="8.6212%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="8.3712%" y="309" width="0.0189%" height="15" fill="rgb(232,218,17)" fg:x="884" fg:w="2"/><text x="8.6212%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="8.3712%" y="293" width="0.0189%" height="15" fill="rgb(229,163,45)" fg:x="884" fg:w="2"/><text x="8.6212%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="8.3712%" y="277" width="0.0189%" height="15" fill="rgb(231,110,42)" fg:x="884" fg:w="2"/><text x="8.6212%" y="287.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 0.07%)</title><rect x="8.3523%" y="405" width="0.0663%" height="15" fill="rgb(208,170,48)" fg:x="882" fg:w="7"/><text x="8.6023%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 0.07%)</title><rect x="8.3523%" y="389" width="0.0663%" height="15" fill="rgb(239,116,25)" fg:x="882" fg:w="7"/><text x="8.6023%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.07%)</title><rect x="8.3523%" y="373" width="0.0663%" height="15" fill="rgb(219,200,50)" fg:x="882" fg:w="7"/><text x="8.6023%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.03%)</title><rect x="8.3902%" y="357" width="0.0284%" height="15" fill="rgb(245,200,0)" fg:x="886" fg:w="3"/><text x="8.6402%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.03%)</title><rect x="8.3902%" y="341" width="0.0284%" height="15" fill="rgb(245,119,33)" fg:x="886" fg:w="3"/><text x="8.6402%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.04%)</title><rect x="8.4375%" y="245" width="0.0379%" height="15" fill="rgb(231,125,12)" fg:x="891" fg:w="4"/><text x="8.6875%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="8.4470%" y="229" width="0.0284%" height="15" fill="rgb(216,96,41)" fg:x="892" fg:w="3"/><text x="8.6970%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="8.4375%" y="293" width="0.0473%" height="15" fill="rgb(248,43,45)" fg:x="891" fg:w="5"/><text x="8.6875%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="8.4375%" y="277" width="0.0473%" height="15" fill="rgb(217,222,7)" fg:x="891" fg:w="5"/><text x="8.6875%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="8.4375%" y="261" width="0.0473%" height="15" fill="rgb(233,28,6)" fg:x="891" fg:w="5"/><text x="8.6875%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (7 samples, 0.07%)</title><rect x="8.4280%" y="325" width="0.0663%" height="15" fill="rgb(231,218,15)" fg:x="890" fg:w="7"/><text x="8.6780%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6 samples, 0.06%)</title><rect x="8.4375%" y="309" width="0.0568%" height="15" fill="rgb(226,171,48)" fg:x="891" fg:w="6"/><text x="8.6875%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.12%)</title><rect x="8.4186%" y="341" width="0.1231%" height="15" fill="rgb(235,201,9)" fg:x="889" fg:w="13"/><text x="8.6686%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.05%)</title><rect x="8.4943%" y="325" width="0.0473%" height="15" fill="rgb(217,80,15)" fg:x="897" fg:w="5"/><text x="8.7443%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.05%)</title><rect x="8.4943%" y="309" width="0.0473%" height="15" fill="rgb(219,152,8)" fg:x="897" fg:w="5"/><text x="8.7443%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.05%)</title><rect x="8.4943%" y="293" width="0.0473%" height="15" fill="rgb(243,107,38)" fg:x="897" fg:w="5"/><text x="8.7443%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.03%)</title><rect x="8.5133%" y="277" width="0.0284%" height="15" fill="rgb(231,17,5)" fg:x="899" fg:w="3"/><text x="8.7633%" y="287.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.03%)</title><rect x="8.5511%" y="309" width="0.0284%" height="15" fill="rgb(209,25,54)" fg:x="903" fg:w="3"/><text x="8.8011%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="8.5511%" y="293" width="0.0284%" height="15" fill="rgb(219,0,2)" fg:x="903" fg:w="3"/><text x="8.8011%" y="303.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.03%)</title><rect x="8.5511%" y="277" width="0.0284%" height="15" fill="rgb(246,9,5)" fg:x="903" fg:w="3"/><text x="8.8011%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.03%)</title><rect x="8.5511%" y="261" width="0.0284%" height="15" fill="rgb(226,159,4)" fg:x="903" fg:w="3"/><text x="8.8011%" y="271.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.03%)</title><rect x="8.5511%" y="245" width="0.0284%" height="15" fill="rgb(219,175,34)" fg:x="903" fg:w="3"/><text x="8.8011%" y="255.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.03%)</title><rect x="8.5511%" y="229" width="0.0284%" height="15" fill="rgb(236,10,46)" fg:x="903" fg:w="3"/><text x="8.8011%" y="239.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (18 samples, 0.17%)</title><rect x="8.4186%" y="405" width="0.1705%" height="15" fill="rgb(240,211,16)" fg:x="889" fg:w="18"/><text x="8.6686%" y="415.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (18 samples, 0.17%)</title><rect x="8.4186%" y="389" width="0.1705%" height="15" fill="rgb(205,3,43)" fg:x="889" fg:w="18"/><text x="8.6686%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (18 samples, 0.17%)</title><rect x="8.4186%" y="373" width="0.1705%" height="15" fill="rgb(245,7,22)" fg:x="889" fg:w="18"/><text x="8.6686%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (18 samples, 0.17%)</title><rect x="8.4186%" y="357" width="0.1705%" height="15" fill="rgb(239,132,32)" fg:x="889" fg:w="18"/><text x="8.6686%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.05%)</title><rect x="8.5417%" y="341" width="0.0473%" height="15" fill="rgb(228,202,34)" fg:x="902" fg:w="5"/><text x="8.7917%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.05%)</title><rect x="8.5417%" y="325" width="0.0473%" height="15" fill="rgb(254,200,22)" fg:x="902" fg:w="5"/><text x="8.7917%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="8.5985%" y="357" width="0.0189%" height="15" fill="rgb(219,10,39)" fg:x="908" fg:w="2"/><text x="8.8485%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="8.5985%" y="341" width="0.0189%" height="15" fill="rgb(226,210,39)" fg:x="908" fg:w="2"/><text x="8.8485%" y="351.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (5 samples, 0.05%)</title><rect x="8.5890%" y="405" width="0.0473%" height="15" fill="rgb(208,219,16)" fg:x="907" fg:w="5"/><text x="8.8390%" y="415.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (5 samples, 0.05%)</title><rect x="8.5890%" y="389" width="0.0473%" height="15" fill="rgb(216,158,51)" fg:x="907" fg:w="5"/><text x="8.8390%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.05%)</title><rect x="8.5890%" y="373" width="0.0473%" height="15" fill="rgb(233,14,44)" fg:x="907" fg:w="5"/><text x="8.8390%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="8.6174%" y="357" width="0.0189%" height="15" fill="rgb(237,97,39)" fg:x="910" fg:w="2"/><text x="8.8674%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.05%)</title><rect x="8.6837%" y="261" width="0.0473%" height="15" fill="rgb(218,198,43)" fg:x="917" fg:w="5"/><text x="8.9337%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.05%)</title><rect x="8.6837%" y="245" width="0.0473%" height="15" fill="rgb(231,104,20)" fg:x="917" fg:w="5"/><text x="8.9337%" y="255.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.05%)</title><rect x="8.6837%" y="229" width="0.0473%" height="15" fill="rgb(254,36,13)" fg:x="917" fg:w="5"/><text x="8.9337%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.05%)</title><rect x="8.6837%" y="213" width="0.0473%" height="15" fill="rgb(248,14,50)" fg:x="917" fg:w="5"/><text x="8.9337%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.05%)</title><rect x="8.6837%" y="197" width="0.0473%" height="15" fill="rgb(217,107,29)" fg:x="917" fg:w="5"/><text x="8.9337%" y="207.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.05%)</title><rect x="8.6837%" y="181" width="0.0473%" height="15" fill="rgb(251,169,33)" fg:x="917" fg:w="5"/><text x="8.9337%" y="191.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.04%)</title><rect x="8.6932%" y="165" width="0.0379%" height="15" fill="rgb(217,108,32)" fg:x="918" fg:w="4"/><text x="8.9432%" y="175.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.02%)</title><rect x="8.9015%" y="165" width="0.0189%" height="15" fill="rgb(219,66,42)" fg:x="940" fg:w="2"/><text x="9.1515%" y="175.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.02%)</title><rect x="8.9015%" y="149" width="0.0189%" height="15" fill="rgb(206,180,7)" fg:x="940" fg:w="2"/><text x="9.1515%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (26 samples, 0.25%)</title><rect x="8.7311%" y="261" width="0.2462%" height="15" fill="rgb(208,226,31)" fg:x="922" fg:w="26"/><text x="8.9811%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (20 samples, 0.19%)</title><rect x="8.7879%" y="245" width="0.1894%" height="15" fill="rgb(218,26,49)" fg:x="928" fg:w="20"/><text x="9.0379%" y="255.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.18%)</title><rect x="8.7973%" y="229" width="0.1799%" height="15" fill="rgb(233,197,48)" fg:x="929" fg:w="19"/><text x="9.0473%" y="239.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (19 samples, 0.18%)</title><rect x="8.7973%" y="213" width="0.1799%" height="15" fill="rgb(252,181,51)" fg:x="929" fg:w="19"/><text x="9.0473%" y="223.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (19 samples, 0.18%)</title><rect x="8.7973%" y="197" width="0.1799%" height="15" fill="rgb(253,90,19)" fg:x="929" fg:w="19"/><text x="9.0473%" y="207.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (18 samples, 0.17%)</title><rect x="8.8068%" y="181" width="0.1705%" height="15" fill="rgb(215,171,30)" fg:x="930" fg:w="18"/><text x="9.0568%" y="191.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (5 samples, 0.05%)</title><rect x="8.9299%" y="165" width="0.0473%" height="15" fill="rgb(214,222,9)" fg:x="943" fg:w="5"/><text x="9.1799%" y="175.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="9.0341%" y="181" width="0.0189%" height="15" fill="rgb(223,3,22)" fg:x="954" fg:w="2"/><text x="9.2841%" y="191.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="9.0341%" y="165" width="0.0189%" height="15" fill="rgb(225,196,46)" fg:x="954" fg:w="2"/><text x="9.2841%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (40 samples, 0.38%)</title><rect x="8.6837%" y="309" width="0.3788%" height="15" fill="rgb(209,110,37)" fg:x="917" fg:w="40"/><text x="8.9337%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (40 samples, 0.38%)</title><rect x="8.6837%" y="293" width="0.3788%" height="15" fill="rgb(249,89,12)" fg:x="917" fg:w="40"/><text x="8.9337%" y="303.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (40 samples, 0.38%)</title><rect x="8.6837%" y="277" width="0.3788%" height="15" fill="rgb(226,27,33)" fg:x="917" fg:w="40"/><text x="8.9337%" y="287.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (9 samples, 0.09%)</title><rect x="8.9773%" y="261" width="0.0852%" height="15" fill="rgb(213,82,22)" fg:x="948" fg:w="9"/><text x="9.2273%" y="271.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (9 samples, 0.09%)</title><rect x="8.9773%" y="245" width="0.0852%" height="15" fill="rgb(248,140,0)" fg:x="948" fg:w="9"/><text x="9.2273%" y="255.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (9 samples, 0.09%)</title><rect x="8.9773%" y="229" width="0.0852%" height="15" fill="rgb(228,106,3)" fg:x="948" fg:w="9"/><text x="9.2273%" y="239.50"></text></g><g><title>core::str::pattern::StrSearcher::new (8 samples, 0.08%)</title><rect x="8.9867%" y="213" width="0.0758%" height="15" fill="rgb(209,23,37)" fg:x="949" fg:w="8"/><text x="9.2367%" y="223.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (4 samples, 0.04%)</title><rect x="9.0246%" y="197" width="0.0379%" height="15" fill="rgb(241,93,50)" fg:x="953" fg:w="4"/><text x="9.2746%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.39%)</title><rect x="8.6837%" y="389" width="0.3883%" height="15" fill="rgb(253,46,43)" fg:x="917" fg:w="41"/><text x="8.9337%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (41 samples, 0.39%)</title><rect x="8.6837%" y="373" width="0.3883%" height="15" fill="rgb(226,206,43)" fg:x="917" fg:w="41"/><text x="8.9337%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (41 samples, 0.39%)</title><rect x="8.6837%" y="357" width="0.3883%" height="15" fill="rgb(217,54,7)" fg:x="917" fg:w="41"/><text x="8.9337%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (41 samples, 0.39%)</title><rect x="8.6837%" y="341" width="0.3883%" height="15" fill="rgb(223,5,52)" fg:x="917" fg:w="41"/><text x="8.9337%" y="351.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (41 samples, 0.39%)</title><rect x="8.6837%" y="325" width="0.3883%" height="15" fill="rgb(206,52,46)" fg:x="917" fg:w="41"/><text x="8.9337%" y="335.50"></text></g><g><title>__memcpy_avx_unaligned (3 samples, 0.03%)</title><rect x="9.1951%" y="85" width="0.0284%" height="15" fill="rgb(253,136,11)" fg:x="971" fg:w="3"/><text x="9.4451%" y="95.50"></text></g><g><title>__GI___libc_realloc (12 samples, 0.11%)</title><rect x="9.1383%" y="117" width="0.1136%" height="15" fill="rgb(208,106,33)" fg:x="965" fg:w="12"/><text x="9.3883%" y="127.50"></text></g><g><title>_int_realloc (10 samples, 0.09%)</title><rect x="9.1572%" y="101" width="0.0947%" height="15" fill="rgb(206,54,4)" fg:x="967" fg:w="10"/><text x="9.4072%" y="111.50"></text></g><g><title>_int_malloc (3 samples, 0.03%)</title><rect x="9.2235%" y="85" width="0.0284%" height="15" fill="rgb(213,3,15)" fg:x="974" fg:w="3"/><text x="9.4735%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.12%)</title><rect x="9.1383%" y="165" width="0.1231%" height="15" fill="rgb(252,211,39)" fg:x="965" fg:w="13"/><text x="9.3883%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.12%)</title><rect x="9.1383%" y="149" width="0.1231%" height="15" fill="rgb(223,6,36)" fg:x="965" fg:w="13"/><text x="9.3883%" y="159.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.12%)</title><rect x="9.1383%" y="133" width="0.1231%" height="15" fill="rgb(252,169,45)" fg:x="965" fg:w="13"/><text x="9.3883%" y="143.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="9.2614%" y="165" width="0.0189%" height="15" fill="rgb(212,48,26)" fg:x="978" fg:w="2"/><text x="9.5114%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.17%)</title><rect x="9.1193%" y="181" width="0.1705%" height="15" fill="rgb(251,102,48)" fg:x="963" fg:w="18"/><text x="9.3693%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.21%)</title><rect x="9.0909%" y="245" width="0.2083%" height="15" fill="rgb(243,208,16)" fg:x="960" fg:w="22"/><text x="9.3409%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.21%)</title><rect x="9.0909%" y="229" width="0.2083%" height="15" fill="rgb(219,96,24)" fg:x="960" fg:w="22"/><text x="9.3409%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 0.20%)</title><rect x="9.1004%" y="213" width="0.1989%" height="15" fill="rgb(219,33,29)" fg:x="961" fg:w="21"/><text x="9.3504%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.19%)</title><rect x="9.1098%" y="197" width="0.1894%" height="15" fill="rgb(223,176,5)" fg:x="962" fg:w="20"/><text x="9.3598%" y="207.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (25 samples, 0.24%)</title><rect x="9.0909%" y="341" width="0.2367%" height="15" fill="rgb(228,140,14)" fg:x="960" fg:w="25"/><text x="9.3409%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (25 samples, 0.24%)</title><rect x="9.0909%" y="325" width="0.2367%" height="15" fill="rgb(217,179,31)" fg:x="960" fg:w="25"/><text x="9.3409%" y="335.50"></text></g><g><title>alloc::string::String::push_str (25 samples, 0.24%)</title><rect x="9.0909%" y="309" width="0.2367%" height="15" fill="rgb(230,9,30)" fg:x="960" fg:w="25"/><text x="9.3409%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (25 samples, 0.24%)</title><rect x="9.0909%" y="293" width="0.2367%" height="15" fill="rgb(230,136,20)" fg:x="960" fg:w="25"/><text x="9.3409%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (25 samples, 0.24%)</title><rect x="9.0909%" y="277" width="0.2367%" height="15" fill="rgb(215,210,22)" fg:x="960" fg:w="25"/><text x="9.3409%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (25 samples, 0.24%)</title><rect x="9.0909%" y="261" width="0.2367%" height="15" fill="rgb(218,43,5)" fg:x="960" fg:w="25"/><text x="9.3409%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.02%)</title><rect x="9.3087%" y="245" width="0.0189%" height="15" fill="rgb(216,11,5)" fg:x="983" fg:w="2"/><text x="9.5587%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.02%)</title><rect x="9.3087%" y="229" width="0.0189%" height="15" fill="rgb(209,82,29)" fg:x="983" fg:w="2"/><text x="9.5587%" y="239.50"></text></g><g><title>alloc::fmt::format (28 samples, 0.27%)</title><rect x="9.0720%" y="389" width="0.2652%" height="15" fill="rgb(244,115,12)" fg:x="958" fg:w="28"/><text x="9.3220%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (26 samples, 0.25%)</title><rect x="9.0909%" y="373" width="0.2462%" height="15" fill="rgb(222,82,18)" fg:x="960" fg:w="26"/><text x="9.3409%" y="383.50"></text></g><g><title>core::fmt::write (26 samples, 0.25%)</title><rect x="9.0909%" y="357" width="0.2462%" height="15" fill="rgb(249,227,8)" fg:x="960" fg:w="26"/><text x="9.3409%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.03%)</title><rect x="9.3371%" y="389" width="0.0284%" height="15" fill="rgb(253,141,45)" fg:x="986" fg:w="3"/><text x="9.5871%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.03%)</title><rect x="9.3371%" y="373" width="0.0284%" height="15" fill="rgb(234,184,4)" fg:x="986" fg:w="3"/><text x="9.5871%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.03%)</title><rect x="9.3371%" y="357" width="0.0284%" height="15" fill="rgb(218,194,23)" fg:x="986" fg:w="3"/><text x="9.5871%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="9.3371%" y="341" width="0.0284%" height="15" fill="rgb(235,66,41)" fg:x="986" fg:w="3"/><text x="9.5871%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="9.3371%" y="325" width="0.0284%" height="15" fill="rgb(245,217,1)" fg:x="986" fg:w="3"/><text x="9.5871%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="9.3371%" y="309" width="0.0284%" height="15" fill="rgb(229,91,1)" fg:x="986" fg:w="3"/><text x="9.5871%" y="319.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="9.3466%" y="293" width="0.0189%" height="15" fill="rgb(207,101,30)" fg:x="987" fg:w="2"/><text x="9.5966%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.04%)</title><rect x="9.3655%" y="341" width="0.0379%" height="15" fill="rgb(223,82,49)" fg:x="989" fg:w="4"/><text x="9.6155%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="9.3750%" y="325" width="0.0284%" height="15" fill="rgb(218,167,17)" fg:x="990" fg:w="3"/><text x="9.6250%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="9.3750%" y="309" width="0.0284%" height="15" fill="rgb(208,103,14)" fg:x="990" fg:w="3"/><text x="9.6250%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="9.3750%" y="293" width="0.0284%" height="15" fill="rgb(238,20,8)" fg:x="990" fg:w="3"/><text x="9.6250%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="9.4034%" y="309" width="0.0189%" height="15" fill="rgb(218,80,54)" fg:x="993" fg:w="2"/><text x="9.6534%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="9.4034%" y="293" width="0.0189%" height="15" fill="rgb(240,144,17)" fg:x="993" fg:w="2"/><text x="9.6534%" y="303.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.08%)</title><rect x="9.3655%" y="389" width="0.0758%" height="15" fill="rgb(245,27,50)" fg:x="989" fg:w="8"/><text x="9.6155%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.08%)</title><rect x="9.3655%" y="373" width="0.0758%" height="15" fill="rgb(251,51,7)" fg:x="989" fg:w="8"/><text x="9.6155%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.08%)</title><rect x="9.3655%" y="357" width="0.0758%" height="15" fill="rgb(245,217,29)" fg:x="989" fg:w="8"/><text x="9.6155%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.04%)</title><rect x="9.4034%" y="341" width="0.0379%" height="15" fill="rgb(221,176,29)" fg:x="993" fg:w="4"/><text x="9.6534%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.04%)</title><rect x="9.4034%" y="325" width="0.0379%" height="15" fill="rgb(212,180,24)" fg:x="993" fg:w="4"/><text x="9.6534%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="9.4697%" y="229" width="0.0189%" height="15" fill="rgb(254,24,2)" fg:x="1000" fg:w="2"/><text x="9.7197%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="9.4413%" y="277" width="0.0568%" height="15" fill="rgb(230,100,2)" fg:x="997" fg:w="6"/><text x="9.6913%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="9.4413%" y="261" width="0.0568%" height="15" fill="rgb(219,142,25)" fg:x="997" fg:w="6"/><text x="9.6913%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="9.4413%" y="245" width="0.0568%" height="15" fill="rgb(240,73,43)" fg:x="997" fg:w="6"/><text x="9.6913%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (8 samples, 0.08%)</title><rect x="9.4413%" y="309" width="0.0758%" height="15" fill="rgb(214,114,15)" fg:x="997" fg:w="8"/><text x="9.6913%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (8 samples, 0.08%)</title><rect x="9.4413%" y="293" width="0.0758%" height="15" fill="rgb(207,130,4)" fg:x="997" fg:w="8"/><text x="9.6913%" y="303.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.02%)</title><rect x="9.4981%" y="277" width="0.0189%" height="15" fill="rgb(221,25,40)" fg:x="1003" fg:w="2"/><text x="9.7481%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.11%)</title><rect x="9.4413%" y="325" width="0.1136%" height="15" fill="rgb(241,184,7)" fg:x="997" fg:w="12"/><text x="9.6913%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="9.5170%" y="309" width="0.0379%" height="15" fill="rgb(235,159,4)" fg:x="1005" fg:w="4"/><text x="9.7670%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="9.5170%" y="293" width="0.0379%" height="15" fill="rgb(214,87,48)" fg:x="1005" fg:w="4"/><text x="9.7670%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="9.5170%" y="277" width="0.0379%" height="15" fill="rgb(246,198,24)" fg:x="1005" fg:w="4"/><text x="9.7670%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="9.5360%" y="261" width="0.0189%" height="15" fill="rgb(209,66,40)" fg:x="1007" fg:w="2"/><text x="9.7860%" y="271.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (17 samples, 0.16%)</title><rect x="9.4413%" y="389" width="0.1610%" height="15" fill="rgb(233,147,39)" fg:x="997" fg:w="17"/><text x="9.6913%" y="399.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (17 samples, 0.16%)</title><rect x="9.4413%" y="373" width="0.1610%" height="15" fill="rgb(231,145,52)" fg:x="997" fg:w="17"/><text x="9.6913%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (17 samples, 0.16%)</title><rect x="9.4413%" y="357" width="0.1610%" height="15" fill="rgb(206,20,26)" fg:x="997" fg:w="17"/><text x="9.6913%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 0.16%)</title><rect x="9.4413%" y="341" width="0.1610%" height="15" fill="rgb(238,220,4)" fg:x="997" fg:w="17"/><text x="9.6913%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.05%)</title><rect x="9.5549%" y="325" width="0.0473%" height="15" fill="rgb(252,195,42)" fg:x="1009" fg:w="5"/><text x="9.8049%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.05%)</title><rect x="9.5549%" y="309" width="0.0473%" height="15" fill="rgb(209,10,6)" fg:x="1009" fg:w="5"/><text x="9.8049%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="9.5833%" y="293" width="0.0189%" height="15" fill="rgb(229,3,52)" fg:x="1012" fg:w="2"/><text x="9.8333%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="9.5833%" y="277" width="0.0189%" height="15" fill="rgb(253,49,37)" fg:x="1012" fg:w="2"/><text x="9.8333%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="9.5833%" y="261" width="0.0189%" height="15" fill="rgb(240,103,49)" fg:x="1012" fg:w="2"/><text x="9.8333%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="9.5833%" y="245" width="0.0189%" height="15" fill="rgb(250,182,30)" fg:x="1012" fg:w="2"/><text x="9.8333%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.02%)</title><rect x="9.5833%" y="229" width="0.0189%" height="15" fill="rgb(248,8,30)" fg:x="1012" fg:w="2"/><text x="9.8333%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.02%)</title><rect x="9.5833%" y="213" width="0.0189%" height="15" fill="rgb(237,120,30)" fg:x="1012" fg:w="2"/><text x="9.8333%" y="223.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.02%)</title><rect x="9.5833%" y="197" width="0.0189%" height="15" fill="rgb(221,146,34)" fg:x="1012" fg:w="2"/><text x="9.8333%" y="207.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.02%)</title><rect x="9.6023%" y="389" width="0.0189%" height="15" fill="rgb(242,55,13)" fg:x="1014" fg:w="2"/><text x="9.8523%" y="399.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="9.6023%" y="373" width="0.0189%" height="15" fill="rgb(242,112,31)" fg:x="1014" fg:w="2"/><text x="9.8523%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="9.6023%" y="357" width="0.0189%" height="15" fill="rgb(249,192,27)" fg:x="1014" fg:w="2"/><text x="9.8523%" y="367.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.02%)</title><rect x="9.6023%" y="341" width="0.0189%" height="15" fill="rgb(208,204,44)" fg:x="1014" fg:w="2"/><text x="9.8523%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="9.6023%" y="325" width="0.0189%" height="15" fill="rgb(208,93,54)" fg:x="1014" fg:w="2"/><text x="9.8523%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="9.6023%" y="309" width="0.0189%" height="15" fill="rgb(242,1,31)" fg:x="1014" fg:w="2"/><text x="9.8523%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="9.6023%" y="293" width="0.0189%" height="15" fill="rgb(241,83,25)" fg:x="1014" fg:w="2"/><text x="9.8523%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="9.6023%" y="277" width="0.0189%" height="15" fill="rgb(205,169,50)" fg:x="1014" fg:w="2"/><text x="9.8523%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="9.6023%" y="261" width="0.0189%" height="15" fill="rgb(239,186,37)" fg:x="1014" fg:w="2"/><text x="9.8523%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (29 samples, 0.27%)</title><rect x="9.6496%" y="245" width="0.2746%" height="15" fill="rgb(205,221,10)" fg:x="1019" fg:w="29"/><text x="9.8996%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.17%)</title><rect x="9.7538%" y="229" width="0.1705%" height="15" fill="rgb(218,196,15)" fg:x="1030" fg:w="18"/><text x="10.0038%" y="239.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.17%)</title><rect x="9.7538%" y="213" width="0.1705%" height="15" fill="rgb(218,196,35)" fg:x="1030" fg:w="18"/><text x="10.0038%" y="223.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (18 samples, 0.17%)</title><rect x="9.7538%" y="197" width="0.1705%" height="15" fill="rgb(233,63,24)" fg:x="1030" fg:w="18"/><text x="10.0038%" y="207.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (18 samples, 0.17%)</title><rect x="9.7538%" y="181" width="0.1705%" height="15" fill="rgb(225,8,4)" fg:x="1030" fg:w="18"/><text x="10.0038%" y="191.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (15 samples, 0.14%)</title><rect x="9.7822%" y="165" width="0.1420%" height="15" fill="rgb(234,105,35)" fg:x="1033" fg:w="15"/><text x="10.0322%" y="175.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (3 samples, 0.03%)</title><rect x="9.8958%" y="149" width="0.0284%" height="15" fill="rgb(236,21,32)" fg:x="1045" fg:w="3"/><text x="10.1458%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.32%)</title><rect x="9.6496%" y="373" width="0.3220%" height="15" fill="rgb(228,109,6)" fg:x="1019" fg:w="34"/><text x="9.8996%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (34 samples, 0.32%)</title><rect x="9.6496%" y="357" width="0.3220%" height="15" fill="rgb(229,215,31)" fg:x="1019" fg:w="34"/><text x="9.8996%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (34 samples, 0.32%)</title><rect x="9.6496%" y="341" width="0.3220%" height="15" fill="rgb(221,52,54)" fg:x="1019" fg:w="34"/><text x="9.8996%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34 samples, 0.32%)</title><rect x="9.6496%" y="325" width="0.3220%" height="15" fill="rgb(252,129,43)" fg:x="1019" fg:w="34"/><text x="9.8996%" y="335.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (34 samples, 0.32%)</title><rect x="9.6496%" y="309" width="0.3220%" height="15" fill="rgb(248,183,27)" fg:x="1019" fg:w="34"/><text x="9.8996%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (34 samples, 0.32%)</title><rect x="9.6496%" y="293" width="0.3220%" height="15" fill="rgb(250,0,22)" fg:x="1019" fg:w="34"/><text x="9.8996%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (34 samples, 0.32%)</title><rect x="9.6496%" y="277" width="0.3220%" height="15" fill="rgb(213,166,10)" fg:x="1019" fg:w="34"/><text x="9.8996%" y="287.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (34 samples, 0.32%)</title><rect x="9.6496%" y="261" width="0.3220%" height="15" fill="rgb(207,163,36)" fg:x="1019" fg:w="34"/><text x="9.8996%" y="271.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (5 samples, 0.05%)</title><rect x="9.9242%" y="245" width="0.0473%" height="15" fill="rgb(208,122,22)" fg:x="1048" fg:w="5"/><text x="10.1742%" y="255.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (5 samples, 0.05%)</title><rect x="9.9242%" y="229" width="0.0473%" height="15" fill="rgb(207,104,49)" fg:x="1048" fg:w="5"/><text x="10.1742%" y="239.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (5 samples, 0.05%)</title><rect x="9.9242%" y="213" width="0.0473%" height="15" fill="rgb(248,211,50)" fg:x="1048" fg:w="5"/><text x="10.1742%" y="223.50"></text></g><g><title>core::str::pattern::StrSearcher::new (5 samples, 0.05%)</title><rect x="9.9242%" y="197" width="0.0473%" height="15" fill="rgb(217,13,45)" fg:x="1048" fg:w="5"/><text x="10.1742%" y="207.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (4 samples, 0.04%)</title><rect x="9.9337%" y="181" width="0.0379%" height="15" fill="rgb(211,216,49)" fg:x="1049" fg:w="4"/><text x="10.1837%" y="191.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.04%)</title><rect x="10.0095%" y="101" width="0.0379%" height="15" fill="rgb(221,58,53)" fg:x="1057" fg:w="4"/><text x="10.2595%" y="111.50"></text></g><g><title>_int_realloc (3 samples, 0.03%)</title><rect x="10.0189%" y="85" width="0.0284%" height="15" fill="rgb(220,112,41)" fg:x="1058" fg:w="3"/><text x="10.2689%" y="95.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.02%)</title><rect x="10.0284%" y="69" width="0.0189%" height="15" fill="rgb(236,38,28)" fg:x="1059" fg:w="2"/><text x="10.2784%" y="79.50"></text></g><g><title>alloc::fmt::format (9 samples, 0.09%)</title><rect x="9.9716%" y="373" width="0.0852%" height="15" fill="rgb(227,195,22)" fg:x="1053" fg:w="9"/><text x="10.2216%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (8 samples, 0.08%)</title><rect x="9.9811%" y="357" width="0.0758%" height="15" fill="rgb(214,55,33)" fg:x="1054" fg:w="8"/><text x="10.2311%" y="367.50"></text></g><g><title>core::fmt::write (8 samples, 0.08%)</title><rect x="9.9811%" y="341" width="0.0758%" height="15" fill="rgb(248,80,13)" fg:x="1054" fg:w="8"/><text x="10.2311%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.07%)</title><rect x="9.9905%" y="325" width="0.0663%" height="15" fill="rgb(238,52,6)" fg:x="1055" fg:w="7"/><text x="10.2405%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.07%)</title><rect x="9.9905%" y="309" width="0.0663%" height="15" fill="rgb(224,198,47)" fg:x="1055" fg:w="7"/><text x="10.2405%" y="319.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.07%)</title><rect x="9.9905%" y="293" width="0.0663%" height="15" fill="rgb(233,171,20)" fg:x="1055" fg:w="7"/><text x="10.2405%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.07%)</title><rect x="9.9905%" y="277" width="0.0663%" height="15" fill="rgb(241,30,25)" fg:x="1055" fg:w="7"/><text x="10.2405%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.07%)</title><rect x="9.9905%" y="261" width="0.0663%" height="15" fill="rgb(207,171,38)" fg:x="1055" fg:w="7"/><text x="10.2405%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.07%)</title><rect x="9.9905%" y="245" width="0.0663%" height="15" fill="rgb(234,70,1)" fg:x="1055" fg:w="7"/><text x="10.2405%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.07%)</title><rect x="9.9905%" y="229" width="0.0663%" height="15" fill="rgb(232,178,18)" fg:x="1055" fg:w="7"/><text x="10.2405%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.07%)</title><rect x="9.9905%" y="213" width="0.0663%" height="15" fill="rgb(241,78,40)" fg:x="1055" fg:w="7"/><text x="10.2405%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.07%)</title><rect x="9.9905%" y="197" width="0.0663%" height="15" fill="rgb(222,35,25)" fg:x="1055" fg:w="7"/><text x="10.2405%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.05%)</title><rect x="10.0095%" y="181" width="0.0473%" height="15" fill="rgb(207,92,16)" fg:x="1057" fg:w="5"/><text x="10.2595%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.05%)</title><rect x="10.0095%" y="165" width="0.0473%" height="15" fill="rgb(216,59,51)" fg:x="1057" fg:w="5"/><text x="10.2595%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.05%)</title><rect x="10.0095%" y="149" width="0.0473%" height="15" fill="rgb(213,80,28)" fg:x="1057" fg:w="5"/><text x="10.2595%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.05%)</title><rect x="10.0095%" y="133" width="0.0473%" height="15" fill="rgb(220,93,7)" fg:x="1057" fg:w="5"/><text x="10.2595%" y="143.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.05%)</title><rect x="10.0095%" y="117" width="0.0473%" height="15" fill="rgb(225,24,44)" fg:x="1057" fg:w="5"/><text x="10.2595%" y="127.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="10.0663%" y="373" width="0.0189%" height="15" fill="rgb(243,74,40)" fg:x="1063" fg:w="2"/><text x="10.3163%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="10.0663%" y="357" width="0.0189%" height="15" fill="rgb(228,39,7)" fg:x="1063" fg:w="2"/><text x="10.3163%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="10.0663%" y="341" width="0.0189%" height="15" fill="rgb(227,79,8)" fg:x="1063" fg:w="2"/><text x="10.3163%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="10.0852%" y="293" width="0.0189%" height="15" fill="rgb(236,58,11)" fg:x="1065" fg:w="2"/><text x="10.3352%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="10.0852%" y="277" width="0.0189%" height="15" fill="rgb(249,63,35)" fg:x="1065" fg:w="2"/><text x="10.3352%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="10.0852%" y="261" width="0.0189%" height="15" fill="rgb(252,114,16)" fg:x="1065" fg:w="2"/><text x="10.3352%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="10.0852%" y="245" width="0.0189%" height="15" fill="rgb(254,151,24)" fg:x="1065" fg:w="2"/><text x="10.3352%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="10.0852%" y="229" width="0.0189%" height="15" fill="rgb(253,54,39)" fg:x="1065" fg:w="2"/><text x="10.3352%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="10.0852%" y="213" width="0.0189%" height="15" fill="rgb(243,25,45)" fg:x="1065" fg:w="2"/><text x="10.3352%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="10.0852%" y="197" width="0.0189%" height="15" fill="rgb(234,134,9)" fg:x="1065" fg:w="2"/><text x="10.3352%" y="207.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="10.0852%" y="309" width="0.0284%" height="15" fill="rgb(227,166,31)" fg:x="1065" fg:w="3"/><text x="10.3352%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="10.1136%" y="277" width="0.0284%" height="15" fill="rgb(245,143,41)" fg:x="1068" fg:w="3"/><text x="10.3636%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="10.1231%" y="261" width="0.0189%" height="15" fill="rgb(238,181,32)" fg:x="1069" fg:w="2"/><text x="10.3731%" y="271.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (9 samples, 0.09%)</title><rect x="10.0852%" y="373" width="0.0852%" height="15" fill="rgb(224,113,18)" fg:x="1065" fg:w="9"/><text x="10.3352%" y="383.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (9 samples, 0.09%)</title><rect x="10.0852%" y="357" width="0.0852%" height="15" fill="rgb(240,229,28)" fg:x="1065" fg:w="9"/><text x="10.3352%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (9 samples, 0.09%)</title><rect x="10.0852%" y="341" width="0.0852%" height="15" fill="rgb(250,185,3)" fg:x="1065" fg:w="9"/><text x="10.3352%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.09%)</title><rect x="10.0852%" y="325" width="0.0852%" height="15" fill="rgb(212,59,25)" fg:x="1065" fg:w="9"/><text x="10.3352%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.06%)</title><rect x="10.1136%" y="309" width="0.0568%" height="15" fill="rgb(221,87,20)" fg:x="1068" fg:w="6"/><text x="10.3636%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.06%)</title><rect x="10.1136%" y="293" width="0.0568%" height="15" fill="rgb(213,74,28)" fg:x="1068" fg:w="6"/><text x="10.3636%" y="303.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.03%)</title><rect x="10.1420%" y="277" width="0.0284%" height="15" fill="rgb(224,132,34)" fg:x="1071" fg:w="3"/><text x="10.3920%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="10.1420%" y="261" width="0.0284%" height="15" fill="rgb(222,101,24)" fg:x="1071" fg:w="3"/><text x="10.3920%" y="271.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.03%)</title><rect x="10.1420%" y="245" width="0.0284%" height="15" fill="rgb(254,142,4)" fg:x="1071" fg:w="3"/><text x="10.3920%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.03%)</title><rect x="10.1420%" y="229" width="0.0284%" height="15" fill="rgb(230,229,49)" fg:x="1071" fg:w="3"/><text x="10.3920%" y="239.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.03%)</title><rect x="10.1420%" y="213" width="0.0284%" height="15" fill="rgb(238,70,47)" fg:x="1071" fg:w="3"/><text x="10.3920%" y="223.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.03%)</title><rect x="10.1420%" y="197" width="0.0284%" height="15" fill="rgb(231,160,17)" fg:x="1071" fg:w="3"/><text x="10.3920%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="10.1705%" y="309" width="0.0189%" height="15" fill="rgb(218,68,53)" fg:x="1074" fg:w="2"/><text x="10.4205%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="10.1705%" y="293" width="0.0189%" height="15" fill="rgb(236,111,10)" fg:x="1074" fg:w="2"/><text x="10.4205%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="10.1705%" y="277" width="0.0189%" height="15" fill="rgb(224,34,41)" fg:x="1074" fg:w="2"/><text x="10.4205%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="10.1705%" y="261" width="0.0189%" height="15" fill="rgb(241,118,19)" fg:x="1074" fg:w="2"/><text x="10.4205%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="10.1705%" y="245" width="0.0189%" height="15" fill="rgb(238,129,25)" fg:x="1074" fg:w="2"/><text x="10.4205%" y="255.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.03%)</title><rect x="10.1705%" y="325" width="0.0284%" height="15" fill="rgb(238,22,31)" fg:x="1074" fg:w="3"/><text x="10.4205%" y="335.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (4 samples, 0.04%)</title><rect x="10.1705%" y="373" width="0.0379%" height="15" fill="rgb(222,174,48)" fg:x="1074" fg:w="4"/><text x="10.4205%" y="383.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (4 samples, 0.04%)</title><rect x="10.1705%" y="357" width="0.0379%" height="15" fill="rgb(206,152,40)" fg:x="1074" fg:w="4"/><text x="10.4205%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.04%)</title><rect x="10.1705%" y="341" width="0.0379%" height="15" fill="rgb(218,99,54)" fg:x="1074" fg:w="4"/><text x="10.4205%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.02%)</title><rect x="10.2273%" y="229" width="0.0189%" height="15" fill="rgb(220,174,26)" fg:x="1080" fg:w="2"/><text x="10.4773%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.02%)</title><rect x="10.2273%" y="213" width="0.0189%" height="15" fill="rgb(245,116,9)" fg:x="1080" fg:w="2"/><text x="10.4773%" y="223.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="10.2273%" y="197" width="0.0189%" height="15" fill="rgb(209,72,35)" fg:x="1080" fg:w="2"/><text x="10.4773%" y="207.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.02%)</title><rect x="10.2273%" y="181" width="0.0189%" height="15" fill="rgb(226,126,21)" fg:x="1080" fg:w="2"/><text x="10.4773%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (13 samples, 0.12%)</title><rect x="10.2462%" y="229" width="0.1231%" height="15" fill="rgb(227,192,1)" fg:x="1082" fg:w="13"/><text x="10.4962%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.09%)</title><rect x="10.2841%" y="213" width="0.0852%" height="15" fill="rgb(237,180,29)" fg:x="1086" fg:w="9"/><text x="10.5341%" y="223.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.09%)</title><rect x="10.2841%" y="197" width="0.0852%" height="15" fill="rgb(230,197,35)" fg:x="1086" fg:w="9"/><text x="10.5341%" y="207.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (9 samples, 0.09%)</title><rect x="10.2841%" y="181" width="0.0852%" height="15" fill="rgb(246,193,31)" fg:x="1086" fg:w="9"/><text x="10.5341%" y="191.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (9 samples, 0.09%)</title><rect x="10.2841%" y="165" width="0.0852%" height="15" fill="rgb(241,36,4)" fg:x="1086" fg:w="9"/><text x="10.5341%" y="175.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (6 samples, 0.06%)</title><rect x="10.3125%" y="149" width="0.0568%" height="15" fill="rgb(241,130,17)" fg:x="1089" fg:w="6"/><text x="10.5625%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.21%)</title><rect x="10.2178%" y="357" width="0.2083%" height="15" fill="rgb(206,137,32)" fg:x="1079" fg:w="22"/><text x="10.4678%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (22 samples, 0.21%)</title><rect x="10.2178%" y="341" width="0.2083%" height="15" fill="rgb(237,228,51)" fg:x="1079" fg:w="22"/><text x="10.4678%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.21%)</title><rect x="10.2178%" y="325" width="0.2083%" height="15" fill="rgb(243,6,42)" fg:x="1079" fg:w="22"/><text x="10.4678%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (22 samples, 0.21%)</title><rect x="10.2178%" y="309" width="0.2083%" height="15" fill="rgb(251,74,28)" fg:x="1079" fg:w="22"/><text x="10.4678%" y="319.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (22 samples, 0.21%)</title><rect x="10.2178%" y="293" width="0.2083%" height="15" fill="rgb(218,20,49)" fg:x="1079" fg:w="22"/><text x="10.4678%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (22 samples, 0.21%)</title><rect x="10.2178%" y="277" width="0.2083%" height="15" fill="rgb(238,28,14)" fg:x="1079" fg:w="22"/><text x="10.4678%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (22 samples, 0.21%)</title><rect x="10.2178%" y="261" width="0.2083%" height="15" fill="rgb(229,40,46)" fg:x="1079" fg:w="22"/><text x="10.4678%" y="271.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (22 samples, 0.21%)</title><rect x="10.2178%" y="245" width="0.2083%" height="15" fill="rgb(244,195,20)" fg:x="1079" fg:w="22"/><text x="10.4678%" y="255.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (6 samples, 0.06%)</title><rect x="10.3693%" y="229" width="0.0568%" height="15" fill="rgb(253,56,35)" fg:x="1095" fg:w="6"/><text x="10.6193%" y="239.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (6 samples, 0.06%)</title><rect x="10.3693%" y="213" width="0.0568%" height="15" fill="rgb(210,149,44)" fg:x="1095" fg:w="6"/><text x="10.6193%" y="223.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (6 samples, 0.06%)</title><rect x="10.3693%" y="197" width="0.0568%" height="15" fill="rgb(240,135,12)" fg:x="1095" fg:w="6"/><text x="10.6193%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (6 samples, 0.06%)</title><rect x="10.3693%" y="181" width="0.0568%" height="15" fill="rgb(251,24,50)" fg:x="1095" fg:w="6"/><text x="10.6193%" y="191.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2 samples, 0.02%)</title><rect x="10.4072%" y="165" width="0.0189%" height="15" fill="rgb(243,200,47)" fg:x="1099" fg:w="2"/><text x="10.6572%" y="175.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="10.4356%" y="293" width="0.0189%" height="15" fill="rgb(224,166,26)" fg:x="1102" fg:w="2"/><text x="10.6856%" y="303.50"></text></g><g><title>y2021::d12::main2::run (807 samples, 7.64%)</title><rect x="2.8220%" y="629" width="7.6420%" height="15" fill="rgb(233,0,47)" fg:x="298" fg:w="807"/><text x="3.0720%" y="639.50">y2021::d12..</text></g><g><title>y2021::d12::main2::p02 (786 samples, 7.44%)</title><rect x="3.0208%" y="613" width="7.4432%" height="15" fill="rgb(253,80,5)" fg:x="319" fg:w="786"/><text x="3.2708%" y="623.50">y2021::d12..</text></g><g><title>y2021::d12::main2::traverse (747 samples, 7.07%)</title><rect x="3.3902%" y="597" width="7.0739%" height="15" fill="rgb(214,133,25)" fg:x="358" fg:w="747"/><text x="3.6402%" y="607.50">y2021::d1..</text></g><g><title>y2021::d12::main2::traverse (747 samples, 7.07%)</title><rect x="3.3902%" y="581" width="7.0739%" height="15" fill="rgb(209,27,14)" fg:x="358" fg:w="747"/><text x="3.6402%" y="591.50">y2021::d1..</text></g><g><title>y2021::d12::main2::traverse (747 samples, 7.07%)</title><rect x="3.3902%" y="565" width="7.0739%" height="15" fill="rgb(219,102,51)" fg:x="358" fg:w="747"/><text x="3.6402%" y="575.50">y2021::d1..</text></g><g><title>y2021::d12::main2::traverse (746 samples, 7.06%)</title><rect x="3.3996%" y="549" width="7.0644%" height="15" fill="rgb(237,18,16)" fg:x="359" fg:w="746"/><text x="3.6496%" y="559.50">y2021::d1..</text></g><g><title>y2021::d12::main2::traverse (745 samples, 7.05%)</title><rect x="3.4091%" y="533" width="7.0549%" height="15" fill="rgb(241,85,17)" fg:x="360" fg:w="745"/><text x="3.6591%" y="543.50">y2021::d1..</text></g><g><title>y2021::d12::main2::traverse (743 samples, 7.04%)</title><rect x="3.4280%" y="517" width="7.0360%" height="15" fill="rgb(236,90,42)" fg:x="362" fg:w="743"/><text x="3.6780%" y="527.50">y2021::d1..</text></g><g><title>y2021::d12::main2::traverse (733 samples, 6.94%)</title><rect x="3.5227%" y="501" width="6.9413%" height="15" fill="rgb(249,57,21)" fg:x="372" fg:w="733"/><text x="3.7727%" y="511.50">y2021::d1..</text></g><g><title>y2021::d12::main2::traverse (711 samples, 6.73%)</title><rect x="3.7311%" y="485" width="6.7330%" height="15" fill="rgb(243,12,36)" fg:x="394" fg:w="711"/><text x="3.9811%" y="495.50">y2021::d1..</text></g><g><title>y2021::d12::main2::traverse (675 samples, 6.39%)</title><rect x="4.0720%" y="469" width="6.3920%" height="15" fill="rgb(253,128,47)" fg:x="430" fg:w="675"/><text x="4.3220%" y="479.50">y2021::d..</text></g><g><title>y2021::d12::main2::traverse (569 samples, 5.39%)</title><rect x="5.0758%" y="453" width="5.3883%" height="15" fill="rgb(207,33,20)" fg:x="536" fg:w="569"/><text x="5.3258%" y="463.50">y2021::..</text></g><g><title>y2021::d12::main2::traverse (454 samples, 4.30%)</title><rect x="6.1648%" y="437" width="4.2992%" height="15" fill="rgb(233,215,35)" fg:x="651" fg:w="454"/><text x="6.4148%" y="447.50">y2021..</text></g><g><title>y2021::d12::main2::traverse (326 samples, 3.09%)</title><rect x="7.3769%" y="421" width="3.0871%" height="15" fill="rgb(249,188,52)" fg:x="779" fg:w="326"/><text x="7.6269%" y="431.50">y20..</text></g><g><title>y2021::d12::main2::traverse (193 samples, 1.83%)</title><rect x="8.6364%" y="405" width="1.8277%" height="15" fill="rgb(225,12,32)" fg:x="912" fg:w="193"/><text x="8.8864%" y="415.50">y..</text></g><g><title>y2021::d12::main2::traverse (89 samples, 0.84%)</title><rect x="9.6212%" y="389" width="0.8428%" height="15" fill="rgb(247,98,14)" fg:x="1016" fg:w="89"/><text x="9.8712%" y="399.50"></text></g><g><title>y2021::d12::main2::traverse (27 samples, 0.26%)</title><rect x="10.2083%" y="373" width="0.2557%" height="15" fill="rgb(247,219,48)" fg:x="1078" fg:w="27"/><text x="10.4583%" y="383.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (3 samples, 0.03%)</title><rect x="10.4356%" y="357" width="0.0284%" height="15" fill="rgb(253,60,48)" fg:x="1102" fg:w="3"/><text x="10.6856%" y="367.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (3 samples, 0.03%)</title><rect x="10.4356%" y="341" width="0.0284%" height="15" fill="rgb(245,15,52)" fg:x="1102" fg:w="3"/><text x="10.6856%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.03%)</title><rect x="10.4356%" y="325" width="0.0284%" height="15" fill="rgb(220,133,28)" fg:x="1102" fg:w="3"/><text x="10.6856%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.03%)</title><rect x="10.4356%" y="309" width="0.0284%" height="15" fill="rgb(217,180,4)" fg:x="1102" fg:w="3"/><text x="10.6856%" y="319.50"></text></g><g><title>y2021::d13::main::run (3 samples, 0.03%)</title><rect x="10.4640%" y="629" width="0.0284%" height="15" fill="rgb(251,24,1)" fg:x="1105" fg:w="3"/><text x="10.7140%" y="639.50"></text></g><g><title>y2021::d13::main::p02 (2 samples, 0.02%)</title><rect x="10.4735%" y="613" width="0.0189%" height="15" fill="rgb(212,185,49)" fg:x="1106" fg:w="2"/><text x="10.7235%" y="623.50"></text></g><g><title>y2021::d14::main::run (3 samples, 0.03%)</title><rect x="10.4924%" y="629" width="0.0284%" height="15" fill="rgb(215,175,22)" fg:x="1108" fg:w="3"/><text x="10.7424%" y="639.50"></text></g><g><title>y2021::d14::main::p02 (2 samples, 0.02%)</title><rect x="10.5019%" y="613" width="0.0189%" height="15" fill="rgb(250,205,14)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="10.5019%" y="597" width="0.0189%" height="15" fill="rgb(225,211,22)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="607.50"></text></g><g><title>y2021::d14::main::p02::{{closure}} (2 samples, 0.02%)</title><rect x="10.5019%" y="581" width="0.0189%" height="15" fill="rgb(251,179,42)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="591.50"></text></g><g><title>y2021::d14::main::better_step (2 samples, 0.02%)</title><rect x="10.5019%" y="565" width="0.0189%" height="15" fill="rgb(208,216,51)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="10.5019%" y="549" width="0.0189%" height="15" fill="rgb(235,36,11)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="10.5019%" y="533" width="0.0189%" height="15" fill="rgb(213,189,28)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="10.5019%" y="517" width="0.0189%" height="15" fill="rgb(227,203,42)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="10.5019%" y="501" width="0.0189%" height="15" fill="rgb(244,72,36)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="10.5019%" y="485" width="0.0189%" height="15" fill="rgb(213,53,17)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.02%)</title><rect x="10.5019%" y="469" width="0.0189%" height="15" fill="rgb(207,167,3)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (2 samples, 0.02%)</title><rect x="10.5019%" y="453" width="0.0189%" height="15" fill="rgb(216,98,30)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="10.5019%" y="437" width="0.0189%" height="15" fill="rgb(236,123,15)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.02%)</title><rect x="10.5019%" y="421" width="0.0189%" height="15" fill="rgb(248,81,50)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="431.50"></text></g><g><title>y2021::d14::main::better_step::{{closure}} (2 samples, 0.02%)</title><rect x="10.5019%" y="405" width="0.0189%" height="15" fill="rgb(214,120,4)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="10.5019%" y="389" width="0.0189%" height="15" fill="rgb(208,179,34)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="399.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="10.5019%" y="373" width="0.0189%" height="15" fill="rgb(227,140,7)" fg:x="1109" fg:w="2"/><text x="10.7519%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="10.5682%" y="565" width="0.0189%" height="15" fill="rgb(214,22,6)" fg:x="1116" fg:w="2"/><text x="10.8182%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="10.5682%" y="549" width="0.0189%" height="15" fill="rgb(207,137,27)" fg:x="1116" fg:w="2"/><text x="10.8182%" y="559.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (2 samples, 0.02%)</title><rect x="10.5871%" y="501" width="0.0189%" height="15" fill="rgb(210,8,46)" fg:x="1118" fg:w="2"/><text x="10.8371%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="10.5871%" y="485" width="0.0189%" height="15" fill="rgb(240,16,54)" fg:x="1118" fg:w="2"/><text x="10.8371%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (2 samples, 0.02%)</title><rect x="10.5871%" y="469" width="0.0189%" height="15" fill="rgb(211,209,29)" fg:x="1118" fg:w="2"/><text x="10.8371%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.02%)</title><rect x="10.5871%" y="453" width="0.0189%" height="15" fill="rgb(226,228,24)" fg:x="1118" fg:w="2"/><text x="10.8371%" y="463.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="10.5871%" y="437" width="0.0189%" height="15" fill="rgb(222,84,9)" fg:x="1118" fg:w="2"/><text x="10.8371%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="10.5871%" y="421" width="0.0189%" height="15" fill="rgb(234,203,30)" fg:x="1118" fg:w="2"/><text x="10.8371%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="10.5871%" y="405" width="0.0189%" height="15" fill="rgb(238,109,14)" fg:x="1118" fg:w="2"/><text x="10.8371%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="10.5871%" y="389" width="0.0189%" height="15" fill="rgb(233,206,34)" fg:x="1118" fg:w="2"/><text x="10.8371%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (6 samples, 0.06%)</title><rect x="10.5587%" y="597" width="0.0568%" height="15" fill="rgb(220,167,47)" fg:x="1115" fg:w="6"/><text x="10.8087%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.06%)</title><rect x="10.5587%" y="581" width="0.0568%" height="15" fill="rgb(238,105,10)" fg:x="1115" fg:w="6"/><text x="10.8087%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.03%)</title><rect x="10.5871%" y="565" width="0.0284%" height="15" fill="rgb(213,227,17)" fg:x="1118" fg:w="3"/><text x="10.8371%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="10.5871%" y="549" width="0.0284%" height="15" fill="rgb(217,132,38)" fg:x="1118" fg:w="3"/><text x="10.8371%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.03%)</title><rect x="10.5871%" y="533" width="0.0284%" height="15" fill="rgb(242,146,4)" fg:x="1118" fg:w="3"/><text x="10.8371%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.03%)</title><rect x="10.5871%" y="517" width="0.0284%" height="15" fill="rgb(212,61,9)" fg:x="1118" fg:w="3"/><text x="10.8371%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.02%)</title><rect x="10.6155%" y="357" width="0.0189%" height="15" fill="rgb(247,126,22)" fg:x="1121" fg:w="2"/><text x="10.8655%" y="367.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (2 samples, 0.02%)</title><rect x="10.6155%" y="341" width="0.0189%" height="15" fill="rgb(220,196,2)" fg:x="1121" fg:w="2"/><text x="10.8655%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="10.6155%" y="325" width="0.0189%" height="15" fill="rgb(208,46,4)" fg:x="1121" fg:w="2"/><text x="10.8655%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="10.6155%" y="309" width="0.0189%" height="15" fill="rgb(252,104,46)" fg:x="1121" fg:w="2"/><text x="10.8655%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="10.6345%" y="277" width="0.0189%" height="15" fill="rgb(237,152,48)" fg:x="1123" fg:w="2"/><text x="10.8845%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="10.6345%" y="261" width="0.0189%" height="15" fill="rgb(221,59,37)" fg:x="1123" fg:w="2"/><text x="10.8845%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="10.6345%" y="245" width="0.0189%" height="15" fill="rgb(209,202,51)" fg:x="1123" fg:w="2"/><text x="10.8845%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="10.6345%" y="229" width="0.0189%" height="15" fill="rgb(228,81,30)" fg:x="1123" fg:w="2"/><text x="10.8845%" y="239.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="10.6345%" y="293" width="0.0284%" height="15" fill="rgb(227,42,39)" fg:x="1123" fg:w="3"/><text x="10.8845%" y="303.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (4 samples, 0.04%)</title><rect x="10.6345%" y="341" width="0.0379%" height="15" fill="rgb(221,26,2)" fg:x="1123" fg:w="4"/><text x="10.8845%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.04%)</title><rect x="10.6345%" y="325" width="0.0379%" height="15" fill="rgb(254,61,31)" fg:x="1123" fg:w="4"/><text x="10.8845%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.04%)</title><rect x="10.6345%" y="309" width="0.0379%" height="15" fill="rgb(222,173,38)" fg:x="1123" fg:w="4"/><text x="10.8845%" y="319.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (8 samples, 0.08%)</title><rect x="10.6155%" y="373" width="0.0758%" height="15" fill="rgb(218,50,12)" fg:x="1121" fg:w="8"/><text x="10.8655%" y="383.50"></text></g><g><title>y2021::d15::main::next_points::{{closure}} (6 samples, 0.06%)</title><rect x="10.6345%" y="357" width="0.0568%" height="15" fill="rgb(223,88,40)" fg:x="1123" fg:w="6"/><text x="10.8845%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="10.6723%" y="341" width="0.0189%" height="15" fill="rgb(237,54,19)" fg:x="1127" fg:w="2"/><text x="10.9223%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="10.6723%" y="325" width="0.0189%" height="15" fill="rgb(251,129,25)" fg:x="1127" fg:w="2"/><text x="10.9223%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="10.6723%" y="309" width="0.0189%" height="15" fill="rgb(238,97,19)" fg:x="1127" fg:w="2"/><text x="10.9223%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="10.6723%" y="293" width="0.0189%" height="15" fill="rgb(240,169,18)" fg:x="1127" fg:w="2"/><text x="10.9223%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="10.6723%" y="277" width="0.0189%" height="15" fill="rgb(230,187,49)" fg:x="1127" fg:w="2"/><text x="10.9223%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="10.6723%" y="261" width="0.0189%" height="15" fill="rgb(209,44,26)" fg:x="1127" fg:w="2"/><text x="10.9223%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="10.6723%" y="245" width="0.0189%" height="15" fill="rgb(244,0,6)" fg:x="1127" fg:w="2"/><text x="10.9223%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="10.6723%" y="229" width="0.0189%" height="15" fill="rgb(248,18,21)" fg:x="1127" fg:w="2"/><text x="10.9223%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="10.6913%" y="293" width="0.0189%" height="15" fill="rgb(245,180,19)" fg:x="1129" fg:w="2"/><text x="10.9413%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="10.6913%" y="277" width="0.0189%" height="15" fill="rgb(252,118,36)" fg:x="1129" fg:w="2"/><text x="10.9413%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="10.6913%" y="261" width="0.0189%" height="15" fill="rgb(210,224,19)" fg:x="1129" fg:w="2"/><text x="10.9413%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="10.6913%" y="309" width="0.0284%" height="15" fill="rgb(218,30,24)" fg:x="1129" fg:w="3"/><text x="10.9413%" y="319.50"></text></g><g><title>y2021::d15::main::next_points (12 samples, 0.11%)</title><rect x="10.6155%" y="597" width="0.1136%" height="15" fill="rgb(219,75,50)" fg:x="1121" fg:w="12"/><text x="10.8655%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.11%)</title><rect x="10.6155%" y="581" width="0.1136%" height="15" fill="rgb(234,72,50)" fg:x="1121" fg:w="12"/><text x="10.8655%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (12 samples, 0.11%)</title><rect x="10.6155%" y="565" width="0.1136%" height="15" fill="rgb(219,100,48)" fg:x="1121" fg:w="12"/><text x="10.8655%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (12 samples, 0.11%)</title><rect x="10.6155%" y="549" width="0.1136%" height="15" fill="rgb(253,5,41)" fg:x="1121" fg:w="12"/><text x="10.8655%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (12 samples, 0.11%)</title><rect x="10.6155%" y="533" width="0.1136%" height="15" fill="rgb(247,181,11)" fg:x="1121" fg:w="12"/><text x="10.8655%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.11%)</title><rect x="10.6155%" y="517" width="0.1136%" height="15" fill="rgb(222,223,25)" fg:x="1121" fg:w="12"/><text x="10.8655%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.11%)</title><rect x="10.6155%" y="501" width="0.1136%" height="15" fill="rgb(214,198,28)" fg:x="1121" fg:w="12"/><text x="10.8655%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.11%)</title><rect x="10.6155%" y="485" width="0.1136%" height="15" fill="rgb(230,46,43)" fg:x="1121" fg:w="12"/><text x="10.8655%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.11%)</title><rect x="10.6155%" y="469" width="0.1136%" height="15" fill="rgb(233,65,53)" fg:x="1121" fg:w="12"/><text x="10.8655%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.11%)</title><rect x="10.6155%" y="453" width="0.1136%" height="15" fill="rgb(221,121,27)" fg:x="1121" fg:w="12"/><text x="10.8655%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.11%)</title><rect x="10.6155%" y="437" width="0.1136%" height="15" fill="rgb(247,70,47)" fg:x="1121" fg:w="12"/><text x="10.8655%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (12 samples, 0.11%)</title><rect x="10.6155%" y="421" width="0.1136%" height="15" fill="rgb(228,85,35)" fg:x="1121" fg:w="12"/><text x="10.8655%" y="431.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (12 samples, 0.11%)</title><rect x="10.6155%" y="405" width="0.1136%" height="15" fill="rgb(209,50,18)" fg:x="1121" fg:w="12"/><text x="10.8655%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (12 samples, 0.11%)</title><rect x="10.6155%" y="389" width="0.1136%" height="15" fill="rgb(250,19,35)" fg:x="1121" fg:w="12"/><text x="10.8655%" y="399.50"></text></g><g><title>y2021::d15::main::next_points::{{closure}} (4 samples, 0.04%)</title><rect x="10.6913%" y="373" width="0.0379%" height="15" fill="rgb(253,107,29)" fg:x="1129" fg:w="4"/><text x="10.9413%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.04%)</title><rect x="10.6913%" y="357" width="0.0379%" height="15" fill="rgb(252,179,29)" fg:x="1129" fg:w="4"/><text x="10.9413%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.04%)</title><rect x="10.6913%" y="341" width="0.0379%" height="15" fill="rgb(238,194,6)" fg:x="1129" fg:w="4"/><text x="10.9413%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.04%)</title><rect x="10.6913%" y="325" width="0.0379%" height="15" fill="rgb(238,164,29)" fg:x="1129" fg:w="4"/><text x="10.9413%" y="335.50"></text></g><g><title>y2021::d15::main::p01 (25 samples, 0.24%)</title><rect x="10.5208%" y="613" width="0.2367%" height="15" fill="rgb(224,25,9)" fg:x="1111" fg:w="25"/><text x="10.7708%" y="623.50"></text></g><g><title>y2021::d15::main::parse_input (3 samples, 0.03%)</title><rect x="10.7292%" y="597" width="0.0284%" height="15" fill="rgb(244,153,23)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.03%)</title><rect x="10.7292%" y="581" width="0.0284%" height="15" fill="rgb(212,203,14)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="10.7292%" y="565" width="0.0284%" height="15" fill="rgb(220,164,20)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.03%)</title><rect x="10.7292%" y="549" width="0.0284%" height="15" fill="rgb(222,203,48)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.03%)</title><rect x="10.7292%" y="533" width="0.0284%" height="15" fill="rgb(215,159,22)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.03%)</title><rect x="10.7292%" y="517" width="0.0284%" height="15" fill="rgb(216,183,47)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="10.7292%" y="501" width="0.0284%" height="15" fill="rgb(229,195,25)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="10.7292%" y="485" width="0.0284%" height="15" fill="rgb(224,132,51)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="10.7292%" y="469" width="0.0284%" height="15" fill="rgb(240,63,7)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="10.7292%" y="453" width="0.0284%" height="15" fill="rgb(249,182,41)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="10.7292%" y="437" width="0.0284%" height="15" fill="rgb(243,47,26)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="10.7292%" y="421" width="0.0284%" height="15" fill="rgb(233,48,2)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.03%)</title><rect x="10.7292%" y="405" width="0.0284%" height="15" fill="rgb(244,165,34)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.03%)</title><rect x="10.7292%" y="389" width="0.0284%" height="15" fill="rgb(207,89,7)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="399.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (3 samples, 0.03%)</title><rect x="10.7292%" y="373" width="0.0284%" height="15" fill="rgb(244,117,36)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.03%)</title><rect x="10.7292%" y="357" width="0.0284%" height="15" fill="rgb(226,144,34)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (3 samples, 0.03%)</title><rect x="10.7292%" y="341" width="0.0284%" height="15" fill="rgb(213,23,19)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.03%)</title><rect x="10.7292%" y="325" width="0.0284%" height="15" fill="rgb(217,75,12)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.03%)</title><rect x="10.7292%" y="309" width="0.0284%" height="15" fill="rgb(224,159,17)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.03%)</title><rect x="10.7292%" y="293" width="0.0284%" height="15" fill="rgb(217,118,1)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="303.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (3 samples, 0.03%)</title><rect x="10.7292%" y="277" width="0.0284%" height="15" fill="rgb(232,180,48)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.03%)</title><rect x="10.7292%" y="261" width="0.0284%" height="15" fill="rgb(230,27,33)" fg:x="1133" fg:w="3"/><text x="10.9792%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="10.7386%" y="245" width="0.0189%" height="15" fill="rgb(205,31,21)" fg:x="1134" fg:w="2"/><text x="10.9886%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="10.7386%" y="229" width="0.0189%" height="15" fill="rgb(253,59,4)" fg:x="1134" fg:w="2"/><text x="10.9886%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="10.7386%" y="213" width="0.0189%" height="15" fill="rgb(224,201,9)" fg:x="1134" fg:w="2"/><text x="10.9886%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="10.7386%" y="197" width="0.0189%" height="15" fill="rgb(229,206,30)" fg:x="1134" fg:w="2"/><text x="10.9886%" y="207.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (2 samples, 0.02%)</title><rect x="10.7386%" y="181" width="0.0189%" height="15" fill="rgb(212,67,47)" fg:x="1134" fg:w="2"/><text x="10.9886%" y="191.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="10.7386%" y="165" width="0.0189%" height="15" fill="rgb(211,96,50)" fg:x="1134" fg:w="2"/><text x="10.9886%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (2 samples, 0.02%)</title><rect x="10.7386%" y="149" width="0.0189%" height="15" fill="rgb(252,114,18)" fg:x="1134" fg:w="2"/><text x="10.9886%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.02%)</title><rect x="10.7386%" y="133" width="0.0189%" height="15" fill="rgb(223,58,37)" fg:x="1134" fg:w="2"/><text x="10.9886%" y="143.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="10.7386%" y="117" width="0.0189%" height="15" fill="rgb(237,70,4)" fg:x="1134" fg:w="2"/><text x="10.9886%" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="10.7386%" y="101" width="0.0189%" height="15" fill="rgb(244,85,46)" fg:x="1134" fg:w="2"/><text x="10.9886%" y="111.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="10.7386%" y="85" width="0.0189%" height="15" fill="rgb(223,39,52)" fg:x="1134" fg:w="2"/><text x="10.9886%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="10.7386%" y="69" width="0.0189%" height="15" fill="rgb(218,200,14)" fg:x="1134" fg:w="2"/><text x="10.9886%" y="79.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="10.7386%" y="53" width="0.0189%" height="15" fill="rgb(208,171,16)" fg:x="1134" fg:w="2"/><text x="10.9886%" y="63.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (3 samples, 0.03%)</title><rect x="10.9470%" y="549" width="0.0284%" height="15" fill="rgb(234,200,18)" fg:x="1156" fg:w="3"/><text x="11.1970%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_allocation (3 samples, 0.03%)</title><rect x="10.9470%" y="533" width="0.0284%" height="15" fill="rgb(228,45,11)" fg:x="1156" fg:w="3"/><text x="11.1970%" y="543.50"></text></g><g><title>hashbrown::raw::calculate_layout (2 samples, 0.02%)</title><rect x="10.9564%" y="517" width="0.0189%" height="15" fill="rgb(237,182,11)" fg:x="1157" fg:w="2"/><text x="11.2064%" y="527.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (2 samples, 0.02%)</title><rect x="10.9564%" y="501" width="0.0189%" height="15" fill="rgb(241,175,49)" fg:x="1157" fg:w="2"/><text x="11.2064%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.02%)</title><rect x="10.9564%" y="485" width="0.0189%" height="15" fill="rgb(247,38,35)" fg:x="1157" fg:w="2"/><text x="11.2064%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.02%)</title><rect x="10.9564%" y="469" width="0.0189%" height="15" fill="rgb(228,39,49)" fg:x="1157" fg:w="2"/><text x="11.2064%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (22 samples, 0.21%)</title><rect x="10.7955%" y="597" width="0.2083%" height="15" fill="rgb(226,101,26)" fg:x="1140" fg:w="22"/><text x="11.0455%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (21 samples, 0.20%)</title><rect x="10.8049%" y="581" width="0.1989%" height="15" fill="rgb(206,141,19)" fg:x="1141" fg:w="21"/><text x="11.0549%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.07%)</title><rect x="10.9375%" y="565" width="0.0663%" height="15" fill="rgb(211,200,13)" fg:x="1155" fg:w="7"/><text x="11.1875%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (3 samples, 0.03%)</title><rect x="10.9754%" y="549" width="0.0284%" height="15" fill="rgb(241,121,6)" fg:x="1159" fg:w="3"/><text x="11.2254%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.07%)</title><rect x="11.0038%" y="549" width="0.0663%" height="15" fill="rgb(234,221,29)" fg:x="1162" fg:w="7"/><text x="11.2538%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.07%)</title><rect x="11.0038%" y="533" width="0.0663%" height="15" fill="rgb(229,136,5)" fg:x="1162" fg:w="7"/><text x="11.2538%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (2 samples, 0.02%)</title><rect x="11.0511%" y="517" width="0.0189%" height="15" fill="rgb(238,36,11)" fg:x="1167" fg:w="2"/><text x="11.3011%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.02%)</title><rect x="11.0511%" y="501" width="0.0189%" height="15" fill="rgb(251,55,41)" fg:x="1167" fg:w="2"/><text x="11.3011%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.08%)</title><rect x="11.0038%" y="597" width="0.0758%" height="15" fill="rgb(242,34,40)" fg:x="1162" fg:w="8"/><text x="11.2538%" y="607.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.08%)</title><rect x="11.0038%" y="581" width="0.0758%" height="15" fill="rgb(215,42,17)" fg:x="1162" fg:w="8"/><text x="11.2538%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.08%)</title><rect x="11.0038%" y="565" width="0.0758%" height="15" fill="rgb(207,44,46)" fg:x="1162" fg:w="8"/><text x="11.2538%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (2 samples, 0.02%)</title><rect x="11.4394%" y="517" width="0.0189%" height="15" fill="rgb(211,206,28)" fg:x="1208" fg:w="2"/><text x="11.6894%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::le (2 samples, 0.02%)</title><rect x="11.4394%" y="501" width="0.0189%" height="15" fill="rgb(237,167,16)" fg:x="1208" fg:w="2"/><text x="11.6894%" y="511.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (4 samples, 0.04%)</title><rect x="11.4299%" y="533" width="0.0379%" height="15" fill="rgb(233,66,6)" fg:x="1207" fg:w="4"/><text x="11.6799%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.13%)</title><rect x="11.4678%" y="517" width="0.1326%" height="15" fill="rgb(246,123,29)" fg:x="1211" fg:w="14"/><text x="11.7178%" y="527.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (18 samples, 0.17%)</title><rect x="11.4678%" y="533" width="0.1705%" height="15" fill="rgb(209,62,40)" fg:x="1211" fg:w="18"/><text x="11.7178%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.04%)</title><rect x="11.6004%" y="517" width="0.0379%" height="15" fill="rgb(218,4,25)" fg:x="1225" fg:w="4"/><text x="11.8504%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.04%)</title><rect x="11.6004%" y="501" width="0.0379%" height="15" fill="rgb(253,91,49)" fg:x="1225" fg:w="4"/><text x="11.8504%" y="511.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="11.6383%" y="533" width="0.0189%" height="15" fill="rgb(228,155,29)" fg:x="1229" fg:w="2"/><text x="11.8883%" y="543.50"></text></g><g><title>core::cmp::Ordering::then_with (11 samples, 0.10%)</title><rect x="11.7330%" y="469" width="0.1042%" height="15" fill="rgb(243,57,37)" fg:x="1239" fg:w="11"/><text x="11.9830%" y="479.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp::{{closure}} (9 samples, 0.09%)</title><rect x="11.7519%" y="453" width="0.0852%" height="15" fill="rgb(244,167,17)" fg:x="1241" fg:w="9"/><text x="12.0019%" y="463.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (8 samples, 0.08%)</title><rect x="11.7614%" y="437" width="0.0758%" height="15" fill="rgb(207,181,38)" fg:x="1242" fg:w="8"/><text x="12.0114%" y="447.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (92 samples, 0.87%)</title><rect x="11.0795%" y="597" width="0.8712%" height="15" fill="rgb(211,8,23)" fg:x="1170" fg:w="92"/><text x="11.3295%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (91 samples, 0.86%)</title><rect x="11.0890%" y="581" width="0.8617%" height="15" fill="rgb(235,11,44)" fg:x="1171" fg:w="91"/><text x="11.3390%" y="591.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (71 samples, 0.67%)</title><rect x="11.2784%" y="565" width="0.6723%" height="15" fill="rgb(248,18,52)" fg:x="1191" fg:w="71"/><text x="11.5284%" y="575.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (68 samples, 0.64%)</title><rect x="11.3068%" y="549" width="0.6439%" height="15" fill="rgb(208,4,7)" fg:x="1194" fg:w="68"/><text x="11.5568%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (31 samples, 0.29%)</title><rect x="11.6572%" y="533" width="0.2936%" height="15" fill="rgb(240,17,39)" fg:x="1231" fg:w="31"/><text x="11.9072%" y="543.50"></text></g><g><title>core::cmp::PartialOrd::le (31 samples, 0.29%)</title><rect x="11.6572%" y="517" width="0.2936%" height="15" fill="rgb(207,170,3)" fg:x="1231" fg:w="31"/><text x="11.9072%" y="527.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::PartialOrd&gt;::partial_cmp (27 samples, 0.26%)</title><rect x="11.6951%" y="501" width="0.2557%" height="15" fill="rgb(236,100,52)" fg:x="1235" fg:w="27"/><text x="11.9451%" y="511.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp (27 samples, 0.26%)</title><rect x="11.6951%" y="485" width="0.2557%" height="15" fill="rgb(246,78,51)" fg:x="1235" fg:w="27"/><text x="11.9451%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (12 samples, 0.11%)</title><rect x="11.8371%" y="469" width="0.1136%" height="15" fill="rgb(211,17,15)" fg:x="1250" fg:w="12"/><text x="12.0871%" y="479.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (2 samples, 0.02%)</title><rect x="11.9697%" y="581" width="0.0189%" height="15" fill="rgb(209,59,46)" fg:x="1264" fg:w="2"/><text x="12.2197%" y="591.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (6 samples, 0.06%)</title><rect x="11.9508%" y="597" width="0.0568%" height="15" fill="rgb(210,92,25)" fg:x="1262" fg:w="6"/><text x="12.2008%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="11.9886%" y="581" width="0.0189%" height="15" fill="rgb(238,174,52)" fg:x="1266" fg:w="2"/><text x="12.2386%" y="591.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="11.9886%" y="565" width="0.0189%" height="15" fill="rgb(230,73,7)" fg:x="1266" fg:w="2"/><text x="12.2386%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="12.0076%" y="517" width="0.0284%" height="15" fill="rgb(243,124,40)" fg:x="1268" fg:w="3"/><text x="12.2576%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="12.0076%" y="501" width="0.0284%" height="15" fill="rgb(244,170,11)" fg:x="1268" fg:w="3"/><text x="12.2576%" y="511.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="12.0170%" y="485" width="0.0189%" height="15" fill="rgb(207,114,54)" fg:x="1269" fg:w="2"/><text x="12.2670%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="12.0170%" y="469" width="0.0189%" height="15" fill="rgb(205,42,20)" fg:x="1269" fg:w="2"/><text x="12.2670%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="12.0170%" y="453" width="0.0189%" height="15" fill="rgb(230,30,28)" fg:x="1269" fg:w="2"/><text x="12.2670%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by::fold::{{closure}} (3 samples, 0.03%)</title><rect x="12.0360%" y="501" width="0.0284%" height="15" fill="rgb(205,73,54)" fg:x="1271" fg:w="3"/><text x="12.2860%" y="511.50"></text></g><g><title>core::cmp::max_by (3 samples, 0.03%)</title><rect x="12.0360%" y="485" width="0.0284%" height="15" fill="rgb(254,227,23)" fg:x="1271" fg:w="3"/><text x="12.2860%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (7 samples, 0.07%)</title><rect x="12.0076%" y="597" width="0.0663%" height="15" fill="rgb(228,202,34)" fg:x="1268" fg:w="7"/><text x="12.2576%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (7 samples, 0.07%)</title><rect x="12.0076%" y="581" width="0.0663%" height="15" fill="rgb(222,225,37)" fg:x="1268" fg:w="7"/><text x="12.2576%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (7 samples, 0.07%)</title><rect x="12.0076%" y="565" width="0.0663%" height="15" fill="rgb(221,14,54)" fg:x="1268" fg:w="7"/><text x="12.2576%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.07%)</title><rect x="12.0076%" y="549" width="0.0663%" height="15" fill="rgb(254,102,2)" fg:x="1268" fg:w="7"/><text x="12.2576%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.07%)</title><rect x="12.0076%" y="533" width="0.0663%" height="15" fill="rgb(232,104,17)" fg:x="1268" fg:w="7"/><text x="12.2576%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.04%)</title><rect x="12.0360%" y="517" width="0.0379%" height="15" fill="rgb(250,220,14)" fg:x="1271" fg:w="4"/><text x="12.2860%" y="527.50"></text></g><g><title>tlb_finish_mmu (4 samples, 0.04%)</title><rect x="12.0739%" y="357" width="0.0379%" height="15" fill="rgb(241,158,9)" fg:x="1275" fg:w="4"/><text x="12.3239%" y="367.50"></text></g><g><title>tlb_flush_mmu (4 samples, 0.04%)</title><rect x="12.0739%" y="341" width="0.0379%" height="15" fill="rgb(246,9,43)" fg:x="1275" fg:w="4"/><text x="12.3239%" y="351.50"></text></g><g><title>free_pages_and_swap_cache (4 samples, 0.04%)</title><rect x="12.0739%" y="325" width="0.0379%" height="15" fill="rgb(206,73,33)" fg:x="1275" fg:w="4"/><text x="12.3239%" y="335.50"></text></g><g><title>release_pages (4 samples, 0.04%)</title><rect x="12.0739%" y="309" width="0.0379%" height="15" fill="rgb(222,79,8)" fg:x="1275" fg:w="4"/><text x="12.3239%" y="319.50"></text></g><g><title>free_unref_page_list (2 samples, 0.02%)</title><rect x="12.0928%" y="293" width="0.0189%" height="15" fill="rgb(234,8,54)" fg:x="1277" fg:w="2"/><text x="12.3428%" y="303.50"></text></g><g><title>free_unref_page_commit (2 samples, 0.02%)</title><rect x="12.0928%" y="277" width="0.0189%" height="15" fill="rgb(209,134,38)" fg:x="1277" fg:w="2"/><text x="12.3428%" y="287.50"></text></g><g><title>free_pcppages_bulk (2 samples, 0.02%)</title><rect x="12.0928%" y="261" width="0.0189%" height="15" fill="rgb(230,127,29)" fg:x="1277" fg:w="2"/><text x="12.3428%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;(usize,usize),usize&gt;&gt; (6 samples, 0.06%)</title><rect x="12.0739%" y="597" width="0.0568%" height="15" fill="rgb(242,44,41)" fg:x="1275" fg:w="6"/><text x="12.3239%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(usize,usize),usize,std::collections::hash::map::RandomState&gt;&gt; (6 samples, 0.06%)</title><rect x="12.0739%" y="581" width="0.0568%" height="15" fill="rgb(222,56,43)" fg:x="1275" fg:w="6"/><text x="12.3239%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((usize,usize),usize)&gt;&gt; (6 samples, 0.06%)</title><rect x="12.0739%" y="565" width="0.0568%" height="15" fill="rgb(238,39,47)" fg:x="1275" fg:w="6"/><text x="12.3239%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="12.0739%" y="549" width="0.0568%" height="15" fill="rgb(226,79,43)" fg:x="1275" fg:w="6"/><text x="12.3239%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (6 samples, 0.06%)</title><rect x="12.0739%" y="533" width="0.0568%" height="15" fill="rgb(242,105,53)" fg:x="1275" fg:w="6"/><text x="12.3239%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (6 samples, 0.06%)</title><rect x="12.0739%" y="517" width="0.0568%" height="15" fill="rgb(251,132,46)" fg:x="1275" fg:w="6"/><text x="12.3239%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.06%)</title><rect x="12.0739%" y="501" width="0.0568%" height="15" fill="rgb(231,77,14)" fg:x="1275" fg:w="6"/><text x="12.3239%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.06%)</title><rect x="12.0739%" y="485" width="0.0568%" height="15" fill="rgb(240,135,9)" fg:x="1275" fg:w="6"/><text x="12.3239%" y="495.50"></text></g><g><title>__GI_munmap (6 samples, 0.06%)</title><rect x="12.0739%" y="469" width="0.0568%" height="15" fill="rgb(248,109,14)" fg:x="1275" fg:w="6"/><text x="12.3239%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.06%)</title><rect x="12.0739%" y="453" width="0.0568%" height="15" fill="rgb(227,146,52)" fg:x="1275" fg:w="6"/><text x="12.3239%" y="463.50"></text></g><g><title>do_syscall_64 (6 samples, 0.06%)</title><rect x="12.0739%" y="437" width="0.0568%" height="15" fill="rgb(232,54,3)" fg:x="1275" fg:w="6"/><text x="12.3239%" y="447.50"></text></g><g><title>__x64_sys_munmap (6 samples, 0.06%)</title><rect x="12.0739%" y="421" width="0.0568%" height="15" fill="rgb(229,201,43)" fg:x="1275" fg:w="6"/><text x="12.3239%" y="431.50"></text></g><g><title>__vm_munmap (6 samples, 0.06%)</title><rect x="12.0739%" y="405" width="0.0568%" height="15" fill="rgb(252,161,33)" fg:x="1275" fg:w="6"/><text x="12.3239%" y="415.50"></text></g><g><title>__do_munmap (6 samples, 0.06%)</title><rect x="12.0739%" y="389" width="0.0568%" height="15" fill="rgb(226,146,40)" fg:x="1275" fg:w="6"/><text x="12.3239%" y="399.50"></text></g><g><title>unmap_region (6 samples, 0.06%)</title><rect x="12.0739%" y="373" width="0.0568%" height="15" fill="rgb(219,47,25)" fg:x="1275" fg:w="6"/><text x="12.3239%" y="383.50"></text></g><g><title>unmap_vmas (2 samples, 0.02%)</title><rect x="12.1117%" y="357" width="0.0189%" height="15" fill="rgb(250,135,13)" fg:x="1279" fg:w="2"/><text x="12.3617%" y="367.50"></text></g><g><title>unmap_single_vma (2 samples, 0.02%)</title><rect x="12.1117%" y="341" width="0.0189%" height="15" fill="rgb(219,229,18)" fg:x="1279" fg:w="2"/><text x="12.3617%" y="351.50"></text></g><g><title>unmap_page_range (2 samples, 0.02%)</title><rect x="12.1117%" y="325" width="0.0189%" height="15" fill="rgb(217,152,27)" fg:x="1279" fg:w="2"/><text x="12.3617%" y="335.50"></text></g><g><title>zap_pte_range.isra.0 (2 samples, 0.02%)</title><rect x="12.1117%" y="309" width="0.0189%" height="15" fill="rgb(225,71,47)" fg:x="1279" fg:w="2"/><text x="12.3617%" y="319.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="12.1496%" y="501" width="0.0189%" height="15" fill="rgb(220,139,14)" fg:x="1283" fg:w="2"/><text x="12.3996%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;(usize,usize),usize&gt;&gt; (7 samples, 0.07%)</title><rect x="12.1307%" y="597" width="0.0663%" height="15" fill="rgb(247,54,32)" fg:x="1281" fg:w="7"/><text x="12.3807%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;(usize,usize),usize&gt;&gt; (7 samples, 0.07%)</title><rect x="12.1307%" y="581" width="0.0663%" height="15" fill="rgb(252,131,39)" fg:x="1281" fg:w="7"/><text x="12.3807%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;((usize,usize),usize)&gt;&gt; (7 samples, 0.07%)</title><rect x="12.1307%" y="565" width="0.0663%" height="15" fill="rgb(210,108,39)" fg:x="1281" fg:w="7"/><text x="12.3807%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.07%)</title><rect x="12.1307%" y="549" width="0.0663%" height="15" fill="rgb(205,23,29)" fg:x="1281" fg:w="7"/><text x="12.3807%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.05%)</title><rect x="12.1496%" y="533" width="0.0473%" height="15" fill="rgb(246,139,46)" fg:x="1283" fg:w="5"/><text x="12.3996%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.05%)</title><rect x="12.1496%" y="517" width="0.0473%" height="15" fill="rgb(250,81,26)" fg:x="1283" fg:w="5"/><text x="12.3996%" y="527.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="12.1686%" y="501" width="0.0284%" height="15" fill="rgb(214,104,7)" fg:x="1285" fg:w="3"/><text x="12.4186%" y="511.50"></text></g><g><title>tcache_put (2 samples, 0.02%)</title><rect x="12.1780%" y="485" width="0.0189%" height="15" fill="rgb(233,189,8)" fg:x="1286" fg:w="2"/><text x="12.4280%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="12.2348%" y="533" width="0.0284%" height="15" fill="rgb(228,141,17)" fg:x="1292" fg:w="3"/><text x="12.4848%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="12.2348%" y="517" width="0.0284%" height="15" fill="rgb(247,157,1)" fg:x="1292" fg:w="3"/><text x="12.4848%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="12.2348%" y="501" width="0.0284%" height="15" fill="rgb(249,225,5)" fg:x="1292" fg:w="3"/><text x="12.4848%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.07%)</title><rect x="12.2822%" y="437" width="0.0663%" height="15" fill="rgb(242,55,13)" fg:x="1297" fg:w="7"/><text x="12.5322%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="12.3295%" y="421" width="0.0189%" height="15" fill="rgb(230,49,50)" fg:x="1302" fg:w="2"/><text x="12.5795%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 0.18%)</title><rect x="12.1970%" y="549" width="0.1799%" height="15" fill="rgb(241,111,38)" fg:x="1288" fg:w="19"/><text x="12.4470%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (12 samples, 0.11%)</title><rect x="12.2633%" y="533" width="0.1136%" height="15" fill="rgb(252,155,4)" fg:x="1295" fg:w="12"/><text x="12.5133%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (12 samples, 0.11%)</title><rect x="12.2633%" y="517" width="0.1136%" height="15" fill="rgb(212,69,32)" fg:x="1295" fg:w="12"/><text x="12.5133%" y="527.50"></text></g><g><title>core::hash::Hasher::write_usize (12 samples, 0.11%)</title><rect x="12.2633%" y="501" width="0.1136%" height="15" fill="rgb(243,107,47)" fg:x="1295" fg:w="12"/><text x="12.5133%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.10%)</title><rect x="12.2727%" y="485" width="0.1042%" height="15" fill="rgb(247,130,12)" fg:x="1296" fg:w="11"/><text x="12.5227%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.10%)</title><rect x="12.2727%" y="469" width="0.1042%" height="15" fill="rgb(233,74,16)" fg:x="1296" fg:w="11"/><text x="12.5227%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.10%)</title><rect x="12.2727%" y="453" width="0.1042%" height="15" fill="rgb(208,58,18)" fg:x="1296" fg:w="11"/><text x="12.5227%" y="463.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.03%)</title><rect x="12.3485%" y="437" width="0.0284%" height="15" fill="rgb(242,225,1)" fg:x="1304" fg:w="3"/><text x="12.5985%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="12.3958%" y="485" width="0.0284%" height="15" fill="rgb(249,39,40)" fg:x="1309" fg:w="3"/><text x="12.6458%" y="495.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="12.4053%" y="469" width="0.0189%" height="15" fill="rgb(207,72,44)" fg:x="1310" fg:w="2"/><text x="12.6553%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="12.3864%" y="517" width="0.0473%" height="15" fill="rgb(215,193,12)" fg:x="1308" fg:w="5"/><text x="12.6364%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="12.3864%" y="501" width="0.0473%" height="15" fill="rgb(248,41,39)" fg:x="1308" fg:w="5"/><text x="12.6364%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (30 samples, 0.28%)</title><rect x="12.1970%" y="597" width="0.2841%" height="15" fill="rgb(253,85,4)" fg:x="1288" fg:w="30"/><text x="12.4470%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (30 samples, 0.28%)</title><rect x="12.1970%" y="581" width="0.2841%" height="15" fill="rgb(243,70,31)" fg:x="1288" fg:w="30"/><text x="12.4470%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30 samples, 0.28%)</title><rect x="12.1970%" y="565" width="0.2841%" height="15" fill="rgb(253,195,26)" fg:x="1288" fg:w="30"/><text x="12.4470%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11 samples, 0.10%)</title><rect x="12.3769%" y="549" width="0.1042%" height="15" fill="rgb(243,42,11)" fg:x="1307" fg:w="11"/><text x="12.6269%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.10%)</title><rect x="12.3769%" y="533" width="0.1042%" height="15" fill="rgb(239,66,17)" fg:x="1307" fg:w="11"/><text x="12.6269%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.05%)</title><rect x="12.4337%" y="517" width="0.0473%" height="15" fill="rgb(217,132,21)" fg:x="1313" fg:w="5"/><text x="12.6837%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.05%)</title><rect x="12.4337%" y="501" width="0.0473%" height="15" fill="rgb(252,202,21)" fg:x="1313" fg:w="5"/><text x="12.6837%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.05%)</title><rect x="12.4337%" y="485" width="0.0473%" height="15" fill="rgb(233,98,36)" fg:x="1313" fg:w="5"/><text x="12.6837%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.05%)</title><rect x="12.4337%" y="469" width="0.0473%" height="15" fill="rgb(216,153,54)" fg:x="1313" fg:w="5"/><text x="12.6837%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.05%)</title><rect x="12.4337%" y="453" width="0.0473%" height="15" fill="rgb(250,99,7)" fg:x="1313" fg:w="5"/><text x="12.6837%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.05%)</title><rect x="12.4337%" y="437" width="0.0473%" height="15" fill="rgb(207,56,50)" fg:x="1313" fg:w="5"/><text x="12.6837%" y="447.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.05%)</title><rect x="12.4337%" y="421" width="0.0473%" height="15" fill="rgb(244,61,34)" fg:x="1313" fg:w="5"/><text x="12.6837%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="12.6894%" y="485" width="0.0284%" height="15" fill="rgb(241,50,38)" fg:x="1340" fg:w="3"/><text x="12.9394%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.12%)</title><rect x="12.6136%" y="549" width="0.1231%" height="15" fill="rgb(212,166,30)" fg:x="1332" fg:w="13"/><text x="12.8636%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.12%)</title><rect x="12.6136%" y="533" width="0.1231%" height="15" fill="rgb(249,127,32)" fg:x="1332" fg:w="13"/><text x="12.8636%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.12%)</title><rect x="12.6136%" y="517" width="0.1231%" height="15" fill="rgb(209,103,0)" fg:x="1332" fg:w="13"/><text x="12.8636%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.07%)</title><rect x="12.6705%" y="501" width="0.0663%" height="15" fill="rgb(238,209,51)" fg:x="1338" fg:w="7"/><text x="12.9205%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="12.7178%" y="485" width="0.0189%" height="15" fill="rgb(237,56,23)" fg:x="1343" fg:w="2"/><text x="12.9678%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="12.7367%" y="549" width="0.0189%" height="15" fill="rgb(215,153,46)" fg:x="1345" fg:w="2"/><text x="12.9867%" y="559.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.02%)</title><rect x="12.7367%" y="533" width="0.0189%" height="15" fill="rgb(224,49,31)" fg:x="1345" fg:w="2"/><text x="12.9867%" y="543.50"></text></g><g><title>hashbrown::map::make_insert_hash (25 samples, 0.24%)</title><rect x="12.6136%" y="565" width="0.2367%" height="15" fill="rgb(250,18,42)" fg:x="1332" fg:w="25"/><text x="12.8636%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (10 samples, 0.09%)</title><rect x="12.7557%" y="549" width="0.0947%" height="15" fill="rgb(215,176,39)" fg:x="1347" fg:w="10"/><text x="13.0057%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (10 samples, 0.09%)</title><rect x="12.7557%" y="533" width="0.0947%" height="15" fill="rgb(223,77,29)" fg:x="1347" fg:w="10"/><text x="13.0057%" y="543.50"></text></g><g><title>core::hash::Hasher::write_usize (10 samples, 0.09%)</title><rect x="12.7557%" y="517" width="0.0947%" height="15" fill="rgb(234,94,52)" fg:x="1347" fg:w="10"/><text x="13.0057%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.09%)</title><rect x="12.7557%" y="501" width="0.0947%" height="15" fill="rgb(220,154,50)" fg:x="1347" fg:w="10"/><text x="13.0057%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.09%)</title><rect x="12.7652%" y="485" width="0.0852%" height="15" fill="rgb(212,11,10)" fg:x="1348" fg:w="9"/><text x="13.0152%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.09%)</title><rect x="12.7652%" y="469" width="0.0852%" height="15" fill="rgb(205,166,19)" fg:x="1348" fg:w="9"/><text x="13.0152%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.04%)</title><rect x="12.8125%" y="453" width="0.0379%" height="15" fill="rgb(244,198,16)" fg:x="1353" fg:w="4"/><text x="13.0625%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="12.8314%" y="437" width="0.0189%" height="15" fill="rgb(219,69,12)" fg:x="1355" fg:w="2"/><text x="13.0814%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="12.8788%" y="501" width="0.0189%" height="15" fill="rgb(245,30,7)" fg:x="1360" fg:w="2"/><text x="13.1288%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="12.8788%" y="533" width="0.0284%" height="15" fill="rgb(218,221,48)" fg:x="1360" fg:w="3"/><text x="13.1288%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="12.8788%" y="517" width="0.0284%" height="15" fill="rgb(216,66,15)" fg:x="1360" fg:w="3"/><text x="13.1288%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (13 samples, 0.12%)</title><rect x="12.8504%" y="565" width="0.1231%" height="15" fill="rgb(226,122,50)" fg:x="1357" fg:w="13"/><text x="13.1004%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.12%)</title><rect x="12.8504%" y="549" width="0.1231%" height="15" fill="rgb(239,156,16)" fg:x="1357" fg:w="13"/><text x="13.1004%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (7 samples, 0.07%)</title><rect x="12.9072%" y="533" width="0.0663%" height="15" fill="rgb(224,27,38)" fg:x="1363" fg:w="7"/><text x="13.1572%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (7 samples, 0.07%)</title><rect x="12.9072%" y="517" width="0.0663%" height="15" fill="rgb(224,39,27)" fg:x="1363" fg:w="7"/><text x="13.1572%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (7 samples, 0.07%)</title><rect x="12.9072%" y="501" width="0.0663%" height="15" fill="rgb(215,92,29)" fg:x="1363" fg:w="7"/><text x="13.1572%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.06%)</title><rect x="12.9167%" y="485" width="0.0568%" height="15" fill="rgb(207,159,16)" fg:x="1364" fg:w="6"/><text x="13.1667%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (6 samples, 0.06%)</title><rect x="12.9167%" y="469" width="0.0568%" height="15" fill="rgb(238,163,47)" fg:x="1364" fg:w="6"/><text x="13.1667%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (6 samples, 0.06%)</title><rect x="12.9167%" y="453" width="0.0568%" height="15" fill="rgb(219,91,49)" fg:x="1364" fg:w="6"/><text x="13.1667%" y="463.50"></text></g><g><title>core::core_arch::simd::i8x16::new (6 samples, 0.06%)</title><rect x="12.9167%" y="437" width="0.0568%" height="15" fill="rgb(227,167,31)" fg:x="1364" fg:w="6"/><text x="13.1667%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (21 samples, 0.20%)</title><rect x="12.9830%" y="549" width="0.1989%" height="15" fill="rgb(234,80,54)" fg:x="1371" fg:w="21"/><text x="13.2330%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (21 samples, 0.20%)</title><rect x="12.9830%" y="533" width="0.1989%" height="15" fill="rgb(212,114,2)" fg:x="1371" fg:w="21"/><text x="13.2330%" y="543.50"></text></g><g><title>core::ptr::write (21 samples, 0.20%)</title><rect x="12.9830%" y="517" width="0.1989%" height="15" fill="rgb(234,50,24)" fg:x="1371" fg:w="21"/><text x="13.2330%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="13.3239%" y="405" width="0.0189%" height="15" fill="rgb(221,68,8)" fg:x="1407" fg:w="2"/><text x="13.5739%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.04%)</title><rect x="13.3239%" y="421" width="0.0379%" height="15" fill="rgb(254,180,31)" fg:x="1407" fg:w="4"/><text x="13.5739%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="13.3428%" y="405" width="0.0189%" height="15" fill="rgb(247,130,50)" fg:x="1409" fg:w="2"/><text x="13.5928%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.06%)</title><rect x="13.3807%" y="405" width="0.0568%" height="15" fill="rgb(211,109,4)" fg:x="1413" fg:w="6"/><text x="13.6307%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.21%)</title><rect x="13.2481%" y="469" width="0.2083%" height="15" fill="rgb(238,50,21)" fg:x="1399" fg:w="22"/><text x="13.4981%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (22 samples, 0.21%)</title><rect x="13.2481%" y="453" width="0.2083%" height="15" fill="rgb(225,57,45)" fg:x="1399" fg:w="22"/><text x="13.4981%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22 samples, 0.21%)</title><rect x="13.2481%" y="437" width="0.2083%" height="15" fill="rgb(209,196,50)" fg:x="1399" fg:w="22"/><text x="13.4981%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.09%)</title><rect x="13.3617%" y="421" width="0.0947%" height="15" fill="rgb(242,140,13)" fg:x="1411" fg:w="10"/><text x="13.6117%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="13.4375%" y="405" width="0.0189%" height="15" fill="rgb(217,111,7)" fg:x="1419" fg:w="2"/><text x="13.6875%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.04%)</title><rect x="13.7311%" y="357" width="0.0379%" height="15" fill="rgb(253,193,51)" fg:x="1450" fg:w="4"/><text x="13.9811%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (19 samples, 0.18%)</title><rect x="13.6269%" y="373" width="0.1799%" height="15" fill="rgb(252,70,29)" fg:x="1439" fg:w="19"/><text x="13.8769%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.04%)</title><rect x="13.7689%" y="357" width="0.0379%" height="15" fill="rgb(232,127,12)" fg:x="1454" fg:w="4"/><text x="14.0189%" y="367.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (67 samples, 0.63%)</title><rect x="13.1913%" y="501" width="0.6345%" height="15" fill="rgb(211,180,21)" fg:x="1393" fg:w="67"/><text x="13.4413%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (66 samples, 0.62%)</title><rect x="13.2008%" y="485" width="0.6250%" height="15" fill="rgb(229,72,13)" fg:x="1394" fg:w="66"/><text x="13.4508%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (39 samples, 0.37%)</title><rect x="13.4564%" y="469" width="0.3693%" height="15" fill="rgb(240,211,49)" fg:x="1421" fg:w="39"/><text x="13.7064%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (39 samples, 0.37%)</title><rect x="13.4564%" y="453" width="0.3693%" height="15" fill="rgb(219,149,40)" fg:x="1421" fg:w="39"/><text x="13.7064%" y="463.50"></text></g><g><title>core::hash::Hasher::write_usize (39 samples, 0.37%)</title><rect x="13.4564%" y="437" width="0.3693%" height="15" fill="rgb(210,127,46)" fg:x="1421" fg:w="39"/><text x="13.7064%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (38 samples, 0.36%)</title><rect x="13.4659%" y="421" width="0.3598%" height="15" fill="rgb(220,106,7)" fg:x="1422" fg:w="38"/><text x="13.7159%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (37 samples, 0.35%)</title><rect x="13.4754%" y="405" width="0.3504%" height="15" fill="rgb(249,31,22)" fg:x="1423" fg:w="37"/><text x="13.7254%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (37 samples, 0.35%)</title><rect x="13.4754%" y="389" width="0.3504%" height="15" fill="rgb(253,1,49)" fg:x="1423" fg:w="37"/><text x="13.7254%" y="399.50"></text></g><g><title>clear_page_rep (8 samples, 0.08%)</title><rect x="14.0057%" y="309" width="0.0758%" height="15" fill="rgb(227,144,33)" fg:x="1479" fg:w="8"/><text x="14.2557%" y="319.50"></text></g><g><title>alloc_pages_vma (13 samples, 0.12%)</title><rect x="13.9962%" y="357" width="0.1231%" height="15" fill="rgb(249,163,44)" fg:x="1478" fg:w="13"/><text x="14.2462%" y="367.50"></text></g><g><title>__alloc_pages_nodemask (12 samples, 0.11%)</title><rect x="14.0057%" y="341" width="0.1136%" height="15" fill="rgb(234,15,39)" fg:x="1479" fg:w="12"/><text x="14.2557%" y="351.50"></text></g><g><title>get_page_from_freelist (12 samples, 0.11%)</title><rect x="14.0057%" y="325" width="0.1136%" height="15" fill="rgb(207,66,16)" fg:x="1479" fg:w="12"/><text x="14.2557%" y="335.50"></text></g><g><title>rmqueue (4 samples, 0.04%)</title><rect x="14.0814%" y="309" width="0.0379%" height="15" fill="rgb(233,112,24)" fg:x="1487" fg:w="4"/><text x="14.3314%" y="319.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (3 samples, 0.03%)</title><rect x="14.1193%" y="357" width="0.0284%" height="15" fill="rgb(230,90,22)" fg:x="1491" fg:w="3"/><text x="14.3693%" y="367.50"></text></g><g><title>lru_cache_add (3 samples, 0.03%)</title><rect x="14.1193%" y="341" width="0.0284%" height="15" fill="rgb(229,61,13)" fg:x="1491" fg:w="3"/><text x="14.3693%" y="351.50"></text></g><g><title>__pagevec_lru_add (3 samples, 0.03%)</title><rect x="14.1193%" y="325" width="0.0284%" height="15" fill="rgb(225,57,24)" fg:x="1491" fg:w="3"/><text x="14.3693%" y="335.50"></text></g><g><title>release_pages (2 samples, 0.02%)</title><rect x="14.1288%" y="309" width="0.0189%" height="15" fill="rgb(208,169,48)" fg:x="1492" fg:w="2"/><text x="14.3788%" y="319.50"></text></g><g><title>asm_exc_page_fault (24 samples, 0.23%)</title><rect x="13.9394%" y="453" width="0.2273%" height="15" fill="rgb(244,218,51)" fg:x="1472" fg:w="24"/><text x="14.1894%" y="463.50"></text></g><g><title>exc_page_fault (22 samples, 0.21%)</title><rect x="13.9583%" y="437" width="0.2083%" height="15" fill="rgb(214,148,10)" fg:x="1474" fg:w="22"/><text x="14.2083%" y="447.50"></text></g><g><title>do_user_addr_fault (22 samples, 0.21%)</title><rect x="13.9583%" y="421" width="0.2083%" height="15" fill="rgb(225,174,27)" fg:x="1474" fg:w="22"/><text x="14.2083%" y="431.50"></text></g><g><title>handle_mm_fault (20 samples, 0.19%)</title><rect x="13.9773%" y="405" width="0.1894%" height="15" fill="rgb(230,96,26)" fg:x="1476" fg:w="20"/><text x="14.2273%" y="415.50"></text></g><g><title>__handle_mm_fault (19 samples, 0.18%)</title><rect x="13.9867%" y="389" width="0.1799%" height="15" fill="rgb(232,10,30)" fg:x="1477" fg:w="19"/><text x="14.2367%" y="399.50"></text></g><g><title>do_anonymous_page (18 samples, 0.17%)</title><rect x="13.9962%" y="373" width="0.1705%" height="15" fill="rgb(222,8,50)" fg:x="1478" fg:w="18"/><text x="14.2462%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (36 samples, 0.34%)</title><rect x="13.8352%" y="501" width="0.3409%" height="15" fill="rgb(213,81,27)" fg:x="1461" fg:w="36"/><text x="14.0852%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (36 samples, 0.34%)</title><rect x="13.8352%" y="485" width="0.3409%" height="15" fill="rgb(245,50,10)" fg:x="1461" fg:w="36"/><text x="14.0852%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36 samples, 0.34%)</title><rect x="13.8352%" y="469" width="0.3409%" height="15" fill="rgb(216,100,18)" fg:x="1461" fg:w="36"/><text x="14.0852%" y="479.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.08%)</title><rect x="14.3087%" y="469" width="0.0758%" height="15" fill="rgb(236,147,54)" fg:x="1511" fg:w="8"/><text x="14.5587%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (29 samples, 0.27%)</title><rect x="14.1856%" y="501" width="0.2746%" height="15" fill="rgb(205,143,26)" fg:x="1498" fg:w="29"/><text x="14.4356%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (29 samples, 0.27%)</title><rect x="14.1856%" y="485" width="0.2746%" height="15" fill="rgb(236,26,9)" fg:x="1498" fg:w="29"/><text x="14.4356%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (8 samples, 0.08%)</title><rect x="14.3845%" y="469" width="0.0758%" height="15" fill="rgb(221,165,53)" fg:x="1519" fg:w="8"/><text x="14.6345%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.08%)</title><rect x="14.3845%" y="453" width="0.0758%" height="15" fill="rgb(214,110,17)" fg:x="1519" fg:w="8"/><text x="14.6345%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (137 samples, 1.30%)</title><rect x="13.1818%" y="549" width="1.2973%" height="15" fill="rgb(237,197,12)" fg:x="1392" fg:w="137"/><text x="13.4318%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (137 samples, 1.30%)</title><rect x="13.1818%" y="533" width="1.2973%" height="15" fill="rgb(205,84,17)" fg:x="1392" fg:w="137"/><text x="13.4318%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (137 samples, 1.30%)</title><rect x="13.1818%" y="517" width="1.2973%" height="15" fill="rgb(237,18,45)" fg:x="1392" fg:w="137"/><text x="13.4318%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.02%)</title><rect x="14.4602%" y="501" width="0.0189%" height="15" fill="rgb(221,87,14)" fg:x="1527" fg:w="2"/><text x="14.7102%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.02%)</title><rect x="14.4602%" y="485" width="0.0189%" height="15" fill="rgb(238,186,15)" fg:x="1527" fg:w="2"/><text x="14.7102%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (2 samples, 0.02%)</title><rect x="14.4602%" y="469" width="0.0189%" height="15" fill="rgb(208,115,11)" fg:x="1527" fg:w="2"/><text x="14.7102%" y="479.50"></text></g><g><title>core::intrinsics::write_bytes (2 samples, 0.02%)</title><rect x="14.4602%" y="453" width="0.0189%" height="15" fill="rgb(254,175,0)" fg:x="1527" fg:w="2"/><text x="14.7102%" y="463.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.02%)</title><rect x="14.4602%" y="437" width="0.0189%" height="15" fill="rgb(227,24,42)" fg:x="1527" fg:w="2"/><text x="14.7102%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="14.4981%" y="533" width="0.0189%" height="15" fill="rgb(223,211,37)" fg:x="1531" fg:w="2"/><text x="14.7481%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (10 samples, 0.09%)</title><rect x="14.4792%" y="549" width="0.0947%" height="15" fill="rgb(235,49,27)" fg:x="1529" fg:w="10"/><text x="14.7292%" y="559.50"></text></g><g><title>hashbrown::raw::is_full (6 samples, 0.06%)</title><rect x="14.5170%" y="533" width="0.0568%" height="15" fill="rgb(254,97,51)" fg:x="1533" fg:w="6"/><text x="14.7670%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (224 samples, 2.12%)</title><rect x="12.4811%" y="597" width="2.1212%" height="15" fill="rgb(249,51,40)" fg:x="1318" fg:w="224"/><text x="12.7311%" y="607.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (214 samples, 2.03%)</title><rect x="12.5758%" y="581" width="2.0265%" height="15" fill="rgb(210,128,45)" fg:x="1328" fg:w="214"/><text x="12.8258%" y="591.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (172 samples, 1.63%)</title><rect x="12.9735%" y="565" width="1.6288%" height="15" fill="rgb(224,137,50)" fg:x="1370" fg:w="172"/><text x="13.2235%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (3 samples, 0.03%)</title><rect x="14.5739%" y="549" width="0.0284%" height="15" fill="rgb(242,15,9)" fg:x="1539" fg:w="3"/><text x="14.8239%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.05%)</title><rect x="14.7254%" y="229" width="0.0473%" height="15" fill="rgb(233,187,41)" fg:x="1555" fg:w="5"/><text x="14.9754%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.08%)</title><rect x="14.7159%" y="293" width="0.0758%" height="15" fill="rgb(227,2,29)" fg:x="1554" fg:w="8"/><text x="14.9659%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.08%)</title><rect x="14.7159%" y="277" width="0.0758%" height="15" fill="rgb(222,70,3)" fg:x="1554" fg:w="8"/><text x="14.9659%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.08%)</title><rect x="14.7159%" y="261" width="0.0758%" height="15" fill="rgb(213,11,42)" fg:x="1554" fg:w="8"/><text x="14.9659%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.07%)</title><rect x="14.7254%" y="245" width="0.0663%" height="15" fill="rgb(225,150,9)" fg:x="1555" fg:w="7"/><text x="14.9754%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="14.7727%" y="229" width="0.0189%" height="15" fill="rgb(230,162,45)" fg:x="1560" fg:w="2"/><text x="15.0227%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="14.8295%" y="181" width="0.0284%" height="15" fill="rgb(222,14,52)" fg:x="1566" fg:w="3"/><text x="15.0795%" y="191.50"></text></g><g><title>hashbrown::map::make_insert_hash (16 samples, 0.15%)</title><rect x="14.7159%" y="309" width="0.1515%" height="15" fill="rgb(254,198,14)" fg:x="1554" fg:w="16"/><text x="14.9659%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (7 samples, 0.07%)</title><rect x="14.8011%" y="293" width="0.0663%" height="15" fill="rgb(220,217,30)" fg:x="1563" fg:w="7"/><text x="15.0511%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (7 samples, 0.07%)</title><rect x="14.8011%" y="277" width="0.0663%" height="15" fill="rgb(215,146,41)" fg:x="1563" fg:w="7"/><text x="15.0511%" y="287.50"></text></g><g><title>core::hash::Hasher::write_usize (7 samples, 0.07%)</title><rect x="14.8011%" y="261" width="0.0663%" height="15" fill="rgb(217,27,36)" fg:x="1563" fg:w="7"/><text x="15.0511%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.07%)</title><rect x="14.8011%" y="245" width="0.0663%" height="15" fill="rgb(219,218,39)" fg:x="1563" fg:w="7"/><text x="15.0511%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.07%)</title><rect x="14.8011%" y="229" width="0.0663%" height="15" fill="rgb(219,4,42)" fg:x="1563" fg:w="7"/><text x="15.0511%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.07%)</title><rect x="14.8011%" y="213" width="0.0663%" height="15" fill="rgb(249,119,36)" fg:x="1563" fg:w="7"/><text x="15.0511%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.04%)</title><rect x="14.8295%" y="197" width="0.0379%" height="15" fill="rgb(209,23,33)" fg:x="1566" fg:w="4"/><text x="15.0795%" y="207.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.02%)</title><rect x="14.8864%" y="229" width="0.0189%" height="15" fill="rgb(211,10,0)" fg:x="1572" fg:w="2"/><text x="15.1364%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (7 samples, 0.07%)</title><rect x="14.8674%" y="309" width="0.0663%" height="15" fill="rgb(208,99,37)" fg:x="1570" fg:w="7"/><text x="15.1174%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.07%)</title><rect x="14.8674%" y="293" width="0.0663%" height="15" fill="rgb(213,132,31)" fg:x="1570" fg:w="7"/><text x="15.1174%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.05%)</title><rect x="14.8864%" y="277" width="0.0473%" height="15" fill="rgb(243,129,40)" fg:x="1572" fg:w="5"/><text x="15.1364%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.05%)</title><rect x="14.8864%" y="261" width="0.0473%" height="15" fill="rgb(210,66,33)" fg:x="1572" fg:w="5"/><text x="15.1364%" y="271.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.05%)</title><rect x="14.8864%" y="245" width="0.0473%" height="15" fill="rgb(209,189,4)" fg:x="1572" fg:w="5"/><text x="15.1364%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.03%)</title><rect x="14.9053%" y="229" width="0.0284%" height="15" fill="rgb(214,107,37)" fg:x="1574" fg:w="3"/><text x="15.1553%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.03%)</title><rect x="14.9053%" y="213" width="0.0284%" height="15" fill="rgb(245,88,54)" fg:x="1574" fg:w="3"/><text x="15.1553%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.03%)</title><rect x="14.9053%" y="197" width="0.0284%" height="15" fill="rgb(205,146,20)" fg:x="1574" fg:w="3"/><text x="15.1553%" y="207.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.03%)</title><rect x="14.9053%" y="181" width="0.0284%" height="15" fill="rgb(220,161,25)" fg:x="1574" fg:w="3"/><text x="15.1553%" y="191.50"></text></g><g><title>core::mem::swap (7 samples, 0.07%)</title><rect x="14.9621%" y="245" width="0.0663%" height="15" fill="rgb(215,152,15)" fg:x="1580" fg:w="7"/><text x="15.2121%" y="255.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (7 samples, 0.07%)</title><rect x="14.9621%" y="229" width="0.0663%" height="15" fill="rgb(233,192,44)" fg:x="1580" fg:w="7"/><text x="15.2121%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping (7 samples, 0.07%)</title><rect x="14.9621%" y="213" width="0.0663%" height="15" fill="rgb(240,170,46)" fg:x="1580" fg:w="7"/><text x="15.2121%" y="223.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (7 samples, 0.07%)</title><rect x="14.9621%" y="197" width="0.0663%" height="15" fill="rgb(207,104,33)" fg:x="1580" fg:w="7"/><text x="15.2121%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.07%)</title><rect x="14.9621%" y="181" width="0.0663%" height="15" fill="rgb(219,21,39)" fg:x="1580" fg:w="7"/><text x="15.2121%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2 samples, 0.02%)</title><rect x="15.0284%" y="245" width="0.0189%" height="15" fill="rgb(214,133,29)" fg:x="1587" fg:w="2"/><text x="15.2784%" y="255.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="15.0284%" y="229" width="0.0189%" height="15" fill="rgb(226,93,6)" fg:x="1587" fg:w="2"/><text x="15.2784%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (2 samples, 0.02%)</title><rect x="15.0284%" y="213" width="0.0189%" height="15" fill="rgb(252,222,34)" fg:x="1587" fg:w="2"/><text x="15.2784%" y="223.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (3 samples, 0.03%)</title><rect x="15.0568%" y="197" width="0.0284%" height="15" fill="rgb(252,92,48)" fg:x="1590" fg:w="3"/><text x="15.3068%" y="207.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.07%)</title><rect x="15.0852%" y="133" width="0.0663%" height="15" fill="rgb(245,223,24)" fg:x="1593" fg:w="7"/><text x="15.3352%" y="143.50"></text></g><g><title>checked_request2size (4 samples, 0.04%)</title><rect x="15.1136%" y="117" width="0.0379%" height="15" fill="rgb(205,176,3)" fg:x="1596" fg:w="4"/><text x="15.3636%" y="127.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (13 samples, 0.12%)</title><rect x="15.0568%" y="213" width="0.1231%" height="15" fill="rgb(235,151,15)" fg:x="1590" fg:w="13"/><text x="15.3068%" y="223.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (10 samples, 0.09%)</title><rect x="15.0852%" y="197" width="0.0947%" height="15" fill="rgb(237,209,11)" fg:x="1593" fg:w="10"/><text x="15.3352%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.09%)</title><rect x="15.0852%" y="181" width="0.0947%" height="15" fill="rgb(243,227,24)" fg:x="1593" fg:w="10"/><text x="15.3352%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.09%)</title><rect x="15.0852%" y="165" width="0.0947%" height="15" fill="rgb(239,193,16)" fg:x="1593" fg:w="10"/><text x="15.3352%" y="175.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.09%)</title><rect x="15.0852%" y="149" width="0.0947%" height="15" fill="rgb(231,27,9)" fg:x="1593" fg:w="10"/><text x="15.3352%" y="159.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="15.1610%" y="133" width="0.0189%" height="15" fill="rgb(219,169,10)" fg:x="1601" fg:w="2"/><text x="15.4110%" y="143.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (26 samples, 0.25%)</title><rect x="14.9432%" y="293" width="0.2462%" height="15" fill="rgb(244,229,43)" fg:x="1578" fg:w="26"/><text x="15.1932%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (26 samples, 0.25%)</title><rect x="14.9432%" y="277" width="0.2462%" height="15" fill="rgb(254,38,20)" fg:x="1578" fg:w="26"/><text x="15.1932%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (24 samples, 0.23%)</title><rect x="14.9621%" y="261" width="0.2273%" height="15" fill="rgb(250,47,30)" fg:x="1580" fg:w="24"/><text x="15.2121%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (15 samples, 0.14%)</title><rect x="15.0473%" y="245" width="0.1420%" height="15" fill="rgb(224,124,36)" fg:x="1589" fg:w="15"/><text x="15.2973%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (15 samples, 0.14%)</title><rect x="15.0473%" y="229" width="0.1420%" height="15" fill="rgb(246,68,51)" fg:x="1589" fg:w="15"/><text x="15.2973%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (59 samples, 0.56%)</title><rect x="14.6780%" y="357" width="0.5587%" height="15" fill="rgb(253,43,49)" fg:x="1550" fg:w="59"/><text x="14.9280%" y="367.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (59 samples, 0.56%)</title><rect x="14.6780%" y="341" width="0.5587%" height="15" fill="rgb(219,54,36)" fg:x="1550" fg:w="59"/><text x="14.9280%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (59 samples, 0.56%)</title><rect x="14.6780%" y="325" width="0.5587%" height="15" fill="rgb(227,133,34)" fg:x="1550" fg:w="59"/><text x="14.9280%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (32 samples, 0.30%)</title><rect x="14.9337%" y="309" width="0.3030%" height="15" fill="rgb(247,227,15)" fg:x="1577" fg:w="32"/><text x="15.1837%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (5 samples, 0.05%)</title><rect x="15.1894%" y="293" width="0.0473%" height="15" fill="rgb(229,96,14)" fg:x="1604" fg:w="5"/><text x="15.4394%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="15.3314%" y="213" width="0.0189%" height="15" fill="rgb(220,79,17)" fg:x="1619" fg:w="2"/><text x="15.5814%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.09%)</title><rect x="15.2936%" y="277" width="0.0852%" height="15" fill="rgb(205,131,53)" fg:x="1615" fg:w="9"/><text x="15.5436%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.09%)</title><rect x="15.2936%" y="261" width="0.0852%" height="15" fill="rgb(209,50,29)" fg:x="1615" fg:w="9"/><text x="15.5436%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.09%)</title><rect x="15.2936%" y="245" width="0.0852%" height="15" fill="rgb(245,86,46)" fg:x="1615" fg:w="9"/><text x="15.5436%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.05%)</title><rect x="15.3314%" y="229" width="0.0473%" height="15" fill="rgb(235,66,46)" fg:x="1619" fg:w="5"/><text x="15.5814%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="15.3504%" y="213" width="0.0284%" height="15" fill="rgb(232,148,31)" fg:x="1621" fg:w="3"/><text x="15.6004%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="15.3788%" y="277" width="0.0189%" height="15" fill="rgb(217,149,8)" fg:x="1624" fg:w="2"/><text x="15.6288%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.08%)</title><rect x="15.4545%" y="181" width="0.0758%" height="15" fill="rgb(209,183,11)" fg:x="1632" fg:w="8"/><text x="15.7045%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.04%)</title><rect x="15.4924%" y="165" width="0.0379%" height="15" fill="rgb(208,55,20)" fg:x="1636" fg:w="4"/><text x="15.7424%" y="175.50"></text></g><g><title>hashbrown::map::make_hash (33 samples, 0.31%)</title><rect x="15.2462%" y="293" width="0.3125%" height="15" fill="rgb(218,39,14)" fg:x="1610" fg:w="33"/><text x="15.4962%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (17 samples, 0.16%)</title><rect x="15.3977%" y="277" width="0.1610%" height="15" fill="rgb(216,169,33)" fg:x="1626" fg:w="17"/><text x="15.6477%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (17 samples, 0.16%)</title><rect x="15.3977%" y="261" width="0.1610%" height="15" fill="rgb(233,80,24)" fg:x="1626" fg:w="17"/><text x="15.6477%" y="271.50"></text></g><g><title>core::hash::Hasher::write_usize (17 samples, 0.16%)</title><rect x="15.3977%" y="245" width="0.1610%" height="15" fill="rgb(213,179,31)" fg:x="1626" fg:w="17"/><text x="15.6477%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.16%)</title><rect x="15.3977%" y="229" width="0.1610%" height="15" fill="rgb(209,19,5)" fg:x="1626" fg:w="17"/><text x="15.6477%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (16 samples, 0.15%)</title><rect x="15.4072%" y="213" width="0.1515%" height="15" fill="rgb(219,18,35)" fg:x="1627" fg:w="16"/><text x="15.6572%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.15%)</title><rect x="15.4072%" y="197" width="0.1515%" height="15" fill="rgb(209,169,16)" fg:x="1627" fg:w="16"/><text x="15.6572%" y="207.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.03%)</title><rect x="15.5303%" y="181" width="0.0284%" height="15" fill="rgb(245,90,51)" fg:x="1640" fg:w="3"/><text x="15.7803%" y="191.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.06%)</title><rect x="16.0701%" y="213" width="0.0568%" height="15" fill="rgb(220,99,45)" fg:x="1697" fg:w="6"/><text x="16.3201%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.08%)</title><rect x="16.0606%" y="229" width="0.0758%" height="15" fill="rgb(249,89,25)" fg:x="1696" fg:w="8"/><text x="16.3106%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.17%)</title><rect x="16.0038%" y="261" width="0.1705%" height="15" fill="rgb(239,193,0)" fg:x="1690" fg:w="18"/><text x="16.2538%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.17%)</title><rect x="16.0038%" y="245" width="0.1705%" height="15" fill="rgb(231,126,1)" fg:x="1690" fg:w="18"/><text x="16.2538%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2 samples, 0.02%)</title><rect x="16.1553%" y="229" width="0.0189%" height="15" fill="rgb(243,166,3)" fg:x="1706" fg:w="2"/><text x="16.4053%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="16.1553%" y="213" width="0.0189%" height="15" fill="rgb(223,22,34)" fg:x="1706" fg:w="2"/><text x="16.4053%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="16.1553%" y="197" width="0.0189%" height="15" fill="rgb(251,52,51)" fg:x="1706" fg:w="2"/><text x="16.4053%" y="207.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (139 samples, 1.32%)</title><rect x="15.2367%" y="341" width="1.3163%" height="15" fill="rgb(221,165,28)" fg:x="1609" fg:w="139"/><text x="15.4867%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (139 samples, 1.32%)</title><rect x="15.2367%" y="325" width="1.3163%" height="15" fill="rgb(218,121,47)" fg:x="1609" fg:w="139"/><text x="15.4867%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (139 samples, 1.32%)</title><rect x="15.2367%" y="309" width="1.3163%" height="15" fill="rgb(209,120,9)" fg:x="1609" fg:w="139"/><text x="15.4867%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (105 samples, 0.99%)</title><rect x="15.5587%" y="293" width="0.9943%" height="15" fill="rgb(236,68,12)" fg:x="1643" fg:w="105"/><text x="15.8087%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (105 samples, 0.99%)</title><rect x="15.5587%" y="277" width="0.9943%" height="15" fill="rgb(225,194,26)" fg:x="1643" fg:w="105"/><text x="15.8087%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (40 samples, 0.38%)</title><rect x="16.1742%" y="261" width="0.3788%" height="15" fill="rgb(231,84,39)" fg:x="1708" fg:w="40"/><text x="16.4242%" y="271.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (40 samples, 0.38%)</title><rect x="16.1742%" y="245" width="0.3788%" height="15" fill="rgb(210,11,45)" fg:x="1708" fg:w="40"/><text x="16.4242%" y="255.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (40 samples, 0.38%)</title><rect x="16.1742%" y="229" width="0.3788%" height="15" fill="rgb(224,54,52)" fg:x="1708" fg:w="40"/><text x="16.4242%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (37 samples, 0.35%)</title><rect x="16.2027%" y="213" width="0.3504%" height="15" fill="rgb(238,102,14)" fg:x="1711" fg:w="37"/><text x="16.4527%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (37 samples, 0.35%)</title><rect x="16.2027%" y="197" width="0.3504%" height="15" fill="rgb(243,160,52)" fg:x="1711" fg:w="37"/><text x="16.4527%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (37 samples, 0.35%)</title><rect x="16.2027%" y="181" width="0.3504%" height="15" fill="rgb(216,114,19)" fg:x="1711" fg:w="37"/><text x="16.4527%" y="191.50"></text></g><g><title>core::core_arch::simd::i8x16::new (37 samples, 0.35%)</title><rect x="16.2027%" y="165" width="0.3504%" height="15" fill="rgb(244,166,37)" fg:x="1711" fg:w="37"/><text x="16.4527%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.04%)</title><rect x="16.6193%" y="213" width="0.0379%" height="15" fill="rgb(246,29,44)" fg:x="1755" fg:w="4"/><text x="16.8693%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.08%)</title><rect x="16.6004%" y="277" width="0.0758%" height="15" fill="rgb(215,56,53)" fg:x="1753" fg:w="8"/><text x="16.8504%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.08%)</title><rect x="16.6004%" y="261" width="0.0758%" height="15" fill="rgb(217,60,2)" fg:x="1753" fg:w="8"/><text x="16.8504%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.08%)</title><rect x="16.6004%" y="245" width="0.0758%" height="15" fill="rgb(207,26,24)" fg:x="1753" fg:w="8"/><text x="16.8504%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.06%)</title><rect x="16.6193%" y="229" width="0.0568%" height="15" fill="rgb(252,210,15)" fg:x="1755" fg:w="6"/><text x="16.8693%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="16.6572%" y="213" width="0.0189%" height="15" fill="rgb(253,209,26)" fg:x="1759" fg:w="2"/><text x="16.9072%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="16.7803%" y="165" width="0.0189%" height="15" fill="rgb(238,170,14)" fg:x="1772" fg:w="2"/><text x="17.0303%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.05%)</title><rect x="16.7708%" y="181" width="0.0473%" height="15" fill="rgb(216,178,15)" fg:x="1771" fg:w="5"/><text x="17.0208%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="16.7992%" y="165" width="0.0189%" height="15" fill="rgb(250,197,2)" fg:x="1774" fg:w="2"/><text x="17.0492%" y="175.50"></text></g><g><title>hashbrown::map::make_hash (29 samples, 0.27%)</title><rect x="16.5625%" y="293" width="0.2746%" height="15" fill="rgb(212,70,42)" fg:x="1749" fg:w="29"/><text x="16.8125%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (16 samples, 0.15%)</title><rect x="16.6856%" y="277" width="0.1515%" height="15" fill="rgb(227,213,9)" fg:x="1762" fg:w="16"/><text x="16.9356%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (16 samples, 0.15%)</title><rect x="16.6856%" y="261" width="0.1515%" height="15" fill="rgb(245,99,25)" fg:x="1762" fg:w="16"/><text x="16.9356%" y="271.50"></text></g><g><title>core::hash::Hasher::write_usize (16 samples, 0.15%)</title><rect x="16.6856%" y="245" width="0.1515%" height="15" fill="rgb(250,82,29)" fg:x="1762" fg:w="16"/><text x="16.9356%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.14%)</title><rect x="16.6951%" y="229" width="0.1420%" height="15" fill="rgb(241,226,54)" fg:x="1763" fg:w="15"/><text x="16.9451%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.12%)</title><rect x="16.7140%" y="213" width="0.1231%" height="15" fill="rgb(221,99,41)" fg:x="1765" fg:w="13"/><text x="16.9640%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.12%)</title><rect x="16.7140%" y="197" width="0.1231%" height="15" fill="rgb(213,90,21)" fg:x="1765" fg:w="13"/><text x="16.9640%" y="207.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="16.8182%" y="181" width="0.0189%" height="15" fill="rgb(205,208,24)" fg:x="1776" fg:w="2"/><text x="17.0682%" y="191.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="16.9508%" y="261" width="0.0379%" height="15" fill="rgb(246,31,12)" fg:x="1790" fg:w="4"/><text x="17.2008%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="16.9508%" y="245" width="0.0379%" height="15" fill="rgb(213,154,6)" fg:x="1790" fg:w="4"/><text x="17.2008%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="16.9602%" y="229" width="0.0284%" height="15" fill="rgb(222,163,29)" fg:x="1791" fg:w="3"/><text x="17.2102%" y="239.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="16.9697%" y="213" width="0.0189%" height="15" fill="rgb(227,201,8)" fg:x="1792" fg:w="2"/><text x="17.2197%" y="223.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (249 samples, 2.36%)</title><rect x="14.6686%" y="373" width="2.3580%" height="15" fill="rgb(233,9,32)" fg:x="1549" fg:w="249"/><text x="14.9186%" y="383.50">c..</text></g><g><title>y2021::d15::main::next_points::{{closure}} (189 samples, 1.79%)</title><rect x="15.2367%" y="357" width="1.7898%" height="15" fill="rgb(217,54,24)" fg:x="1609" fg:w="189"/><text x="15.4867%" y="367.50">y..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (50 samples, 0.47%)</title><rect x="16.5530%" y="341" width="0.4735%" height="15" fill="rgb(235,192,0)" fg:x="1748" fg:w="50"/><text x="16.8030%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (50 samples, 0.47%)</title><rect x="16.5530%" y="325" width="0.4735%" height="15" fill="rgb(235,45,9)" fg:x="1748" fg:w="50"/><text x="16.8030%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (50 samples, 0.47%)</title><rect x="16.5530%" y="309" width="0.4735%" height="15" fill="rgb(246,42,40)" fg:x="1748" fg:w="50"/><text x="16.8030%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (20 samples, 0.19%)</title><rect x="16.8371%" y="293" width="0.1894%" height="15" fill="rgb(248,111,24)" fg:x="1778" fg:w="20"/><text x="17.0871%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.19%)</title><rect x="16.8371%" y="277" width="0.1894%" height="15" fill="rgb(249,65,22)" fg:x="1778" fg:w="20"/><text x="17.0871%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.04%)</title><rect x="16.9886%" y="261" width="0.0379%" height="15" fill="rgb(238,111,51)" fg:x="1794" fg:w="4"/><text x="17.2386%" y="271.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.04%)</title><rect x="16.9886%" y="245" width="0.0379%" height="15" fill="rgb(250,118,22)" fg:x="1794" fg:w="4"/><text x="17.2386%" y="255.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.04%)</title><rect x="16.9886%" y="229" width="0.0379%" height="15" fill="rgb(234,84,26)" fg:x="1794" fg:w="4"/><text x="17.2386%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="17.1307%" y="229" width="0.0284%" height="15" fill="rgb(243,172,12)" fg:x="1809" fg:w="3"/><text x="17.3807%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.04%)</title><rect x="17.1307%" y="245" width="0.0379%" height="15" fill="rgb(236,150,49)" fg:x="1809" fg:w="4"/><text x="17.3807%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.09%)</title><rect x="17.1875%" y="229" width="0.0852%" height="15" fill="rgb(225,197,26)" fg:x="1815" fg:w="9"/><text x="17.4375%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.19%)</title><rect x="17.0928%" y="293" width="0.1894%" height="15" fill="rgb(214,17,42)" fg:x="1805" fg:w="20"/><text x="17.3428%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20 samples, 0.19%)</title><rect x="17.0928%" y="277" width="0.1894%" height="15" fill="rgb(224,165,40)" fg:x="1805" fg:w="20"/><text x="17.3428%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20 samples, 0.19%)</title><rect x="17.0928%" y="261" width="0.1894%" height="15" fill="rgb(246,100,4)" fg:x="1805" fg:w="20"/><text x="17.3428%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (12 samples, 0.11%)</title><rect x="17.1686%" y="245" width="0.1136%" height="15" fill="rgb(222,103,0)" fg:x="1813" fg:w="12"/><text x="17.4186%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.03%)</title><rect x="17.2822%" y="293" width="0.0284%" height="15" fill="rgb(227,189,26)" fg:x="1825" fg:w="3"/><text x="17.5322%" y="303.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.02%)</title><rect x="17.2917%" y="277" width="0.0189%" height="15" fill="rgb(214,202,17)" fg:x="1826" fg:w="2"/><text x="17.5417%" y="287.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.02%)</title><rect x="17.2917%" y="261" width="0.0189%" height="15" fill="rgb(229,111,3)" fg:x="1826" fg:w="2"/><text x="17.5417%" y="271.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.02%)</title><rect x="17.2917%" y="245" width="0.0189%" height="15" fill="rgb(229,172,15)" fg:x="1826" fg:w="2"/><text x="17.5417%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.04%)</title><rect x="17.4905%" y="181" width="0.0379%" height="15" fill="rgb(230,224,35)" fg:x="1847" fg:w="4"/><text x="17.7405%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.09%)</title><rect x="17.4716%" y="197" width="0.0947%" height="15" fill="rgb(251,141,6)" fg:x="1845" fg:w="10"/><text x="17.7216%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.04%)</title><rect x="17.5284%" y="181" width="0.0379%" height="15" fill="rgb(225,208,6)" fg:x="1851" fg:w="4"/><text x="17.7784%" y="191.50"></text></g><g><title>hashbrown::map::make_hash (58 samples, 0.55%)</title><rect x="17.0549%" y="309" width="0.5492%" height="15" fill="rgb(246,181,16)" fg:x="1801" fg:w="58"/><text x="17.3049%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (31 samples, 0.29%)</title><rect x="17.3106%" y="293" width="0.2936%" height="15" fill="rgb(227,129,36)" fg:x="1828" fg:w="31"/><text x="17.5606%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (31 samples, 0.29%)</title><rect x="17.3106%" y="277" width="0.2936%" height="15" fill="rgb(248,117,24)" fg:x="1828" fg:w="31"/><text x="17.5606%" y="287.50"></text></g><g><title>core::hash::Hasher::write_usize (31 samples, 0.29%)</title><rect x="17.3106%" y="261" width="0.2936%" height="15" fill="rgb(214,185,35)" fg:x="1828" fg:w="31"/><text x="17.5606%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (29 samples, 0.27%)</title><rect x="17.3295%" y="245" width="0.2746%" height="15" fill="rgb(236,150,34)" fg:x="1830" fg:w="29"/><text x="17.5795%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (29 samples, 0.27%)</title><rect x="17.3295%" y="229" width="0.2746%" height="15" fill="rgb(243,228,27)" fg:x="1830" fg:w="29"/><text x="17.5795%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (29 samples, 0.27%)</title><rect x="17.3295%" y="213" width="0.2746%" height="15" fill="rgb(245,77,44)" fg:x="1830" fg:w="29"/><text x="17.5795%" y="223.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.04%)</title><rect x="17.5663%" y="197" width="0.0379%" height="15" fill="rgb(235,214,42)" fg:x="1855" fg:w="4"/><text x="17.8163%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="19.1951%" y="277" width="0.0284%" height="15" fill="rgb(221,74,3)" fg:x="2027" fg:w="3"/><text x="19.4451%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="19.1951%" y="261" width="0.0284%" height="15" fill="rgb(206,121,29)" fg:x="2027" fg:w="3"/><text x="19.4451%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="19.1951%" y="245" width="0.0284%" height="15" fill="rgb(249,131,53)" fg:x="2027" fg:w="3"/><text x="19.4451%" y="255.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.03%)</title><rect x="19.1951%" y="229" width="0.0284%" height="15" fill="rgb(236,170,29)" fg:x="2027" fg:w="3"/><text x="19.4451%" y="239.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.04%)</title><rect x="19.2235%" y="277" width="0.0379%" height="15" fill="rgb(247,96,15)" fg:x="2030" fg:w="4"/><text x="19.4735%" y="287.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (4 samples, 0.04%)</title><rect x="19.2235%" y="261" width="0.0379%" height="15" fill="rgb(211,210,7)" fg:x="2030" fg:w="4"/><text x="19.4735%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (4 samples, 0.04%)</title><rect x="19.2235%" y="245" width="0.0379%" height="15" fill="rgb(240,88,50)" fg:x="2030" fg:w="4"/><text x="19.4735%" y="255.50"></text></g><g><title>y2021::d15::main::next_points (551 samples, 5.22%)</title><rect x="14.6023%" y="597" width="5.2178%" height="15" fill="rgb(209,229,26)" fg:x="1542" fg:w="551"/><text x="14.8523%" y="607.50">y2021:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (551 samples, 5.22%)</title><rect x="14.6023%" y="581" width="5.2178%" height="15" fill="rgb(210,68,23)" fg:x="1542" fg:w="551"/><text x="14.8523%" y="591.50">core::..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (551 samples, 5.22%)</title><rect x="14.6023%" y="565" width="5.2178%" height="15" fill="rgb(229,180,13)" fg:x="1542" fg:w="551"/><text x="14.8523%" y="575.50">&lt;std::..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (551 samples, 5.22%)</title><rect x="14.6023%" y="549" width="5.2178%" height="15" fill="rgb(236,53,44)" fg:x="1542" fg:w="551"/><text x="14.8523%" y="559.50">&lt;std::..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (551 samples, 5.22%)</title><rect x="14.6023%" y="533" width="5.2178%" height="15" fill="rgb(244,214,29)" fg:x="1542" fg:w="551"/><text x="14.8523%" y="543.50">&lt;hashb..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (551 samples, 5.22%)</title><rect x="14.6023%" y="517" width="5.2178%" height="15" fill="rgb(220,75,29)" fg:x="1542" fg:w="551"/><text x="14.8523%" y="527.50">core::..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (551 samples, 5.22%)</title><rect x="14.6023%" y="501" width="5.2178%" height="15" fill="rgb(214,183,37)" fg:x="1542" fg:w="551"/><text x="14.8523%" y="511.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (551 samples, 5.22%)</title><rect x="14.6023%" y="485" width="5.2178%" height="15" fill="rgb(239,117,29)" fg:x="1542" fg:w="551"/><text x="14.8523%" y="495.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (551 samples, 5.22%)</title><rect x="14.6023%" y="469" width="5.2178%" height="15" fill="rgb(237,171,35)" fg:x="1542" fg:w="551"/><text x="14.8523%" y="479.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (551 samples, 5.22%)</title><rect x="14.6023%" y="453" width="5.2178%" height="15" fill="rgb(229,178,53)" fg:x="1542" fg:w="551"/><text x="14.8523%" y="463.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (551 samples, 5.22%)</title><rect x="14.6023%" y="437" width="5.2178%" height="15" fill="rgb(210,102,19)" fg:x="1542" fg:w="551"/><text x="14.8523%" y="447.50">core::..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (549 samples, 5.20%)</title><rect x="14.6212%" y="421" width="5.1989%" height="15" fill="rgb(235,127,22)" fg:x="1544" fg:w="549"/><text x="14.8712%" y="431.50">core::..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (549 samples, 5.20%)</title><rect x="14.6212%" y="405" width="5.1989%" height="15" fill="rgb(244,31,31)" fg:x="1544" fg:w="549"/><text x="14.8712%" y="415.50">core::..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (547 samples, 5.18%)</title><rect x="14.6402%" y="389" width="5.1799%" height="15" fill="rgb(231,43,21)" fg:x="1546" fg:w="547"/><text x="14.8902%" y="399.50">core::..</text></g><g><title>y2021::d15::main::next_points::{{closure}} (295 samples, 2.79%)</title><rect x="17.0265%" y="373" width="2.7936%" height="15" fill="rgb(217,131,35)" fg:x="1798" fg:w="295"/><text x="17.2765%" y="383.50">y2..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (292 samples, 2.77%)</title><rect x="17.0549%" y="357" width="2.7652%" height="15" fill="rgb(221,149,4)" fg:x="1801" fg:w="292"/><text x="17.3049%" y="367.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (292 samples, 2.77%)</title><rect x="17.0549%" y="341" width="2.7652%" height="15" fill="rgb(232,170,28)" fg:x="1801" fg:w="292"/><text x="17.3049%" y="351.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (292 samples, 2.77%)</title><rect x="17.0549%" y="325" width="2.7652%" height="15" fill="rgb(238,56,10)" fg:x="1801" fg:w="292"/><text x="17.3049%" y="335.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (234 samples, 2.22%)</title><rect x="17.6042%" y="309" width="2.2159%" height="15" fill="rgb(235,196,14)" fg:x="1859" fg:w="234"/><text x="17.8542%" y="319.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (234 samples, 2.22%)</title><rect x="17.6042%" y="293" width="2.2159%" height="15" fill="rgb(216,45,48)" fg:x="1859" fg:w="234"/><text x="17.8542%" y="303.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (59 samples, 0.56%)</title><rect x="19.2614%" y="277" width="0.5587%" height="15" fill="rgb(238,213,17)" fg:x="2034" fg:w="59"/><text x="19.5114%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (59 samples, 0.56%)</title><rect x="19.2614%" y="261" width="0.5587%" height="15" fill="rgb(212,13,2)" fg:x="2034" fg:w="59"/><text x="19.5114%" y="271.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (59 samples, 0.56%)</title><rect x="19.2614%" y="245" width="0.5587%" height="15" fill="rgb(240,114,20)" fg:x="2034" fg:w="59"/><text x="19.5114%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (59 samples, 0.56%)</title><rect x="19.2614%" y="229" width="0.5587%" height="15" fill="rgb(228,41,40)" fg:x="2034" fg:w="59"/><text x="19.5114%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (59 samples, 0.56%)</title><rect x="19.2614%" y="213" width="0.5587%" height="15" fill="rgb(244,132,35)" fg:x="2034" fg:w="59"/><text x="19.5114%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (59 samples, 0.56%)</title><rect x="19.2614%" y="197" width="0.5587%" height="15" fill="rgb(253,189,4)" fg:x="2034" fg:w="59"/><text x="19.5114%" y="207.50"></text></g><g><title>core::core_arch::simd::i8x16::new (59 samples, 0.56%)</title><rect x="19.2614%" y="181" width="0.5587%" height="15" fill="rgb(224,37,19)" fg:x="2034" fg:w="59"/><text x="19.5114%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (2 samples, 0.02%)</title><rect x="19.8201%" y="341" width="0.0189%" height="15" fill="rgb(235,223,18)" fg:x="2093" fg:w="2"/><text x="20.0701%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="19.8201%" y="325" width="0.0189%" height="15" fill="rgb(235,163,25)" fg:x="2093" fg:w="2"/><text x="20.0701%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.02%)</title><rect x="19.8201%" y="309" width="0.0189%" height="15" fill="rgb(217,145,28)" fg:x="2093" fg:w="2"/><text x="20.0701%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.02%)</title><rect x="19.8201%" y="293" width="0.0189%" height="15" fill="rgb(223,223,32)" fg:x="2093" fg:w="2"/><text x="20.0701%" y="303.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (2 samples, 0.02%)</title><rect x="19.8201%" y="277" width="0.0189%" height="15" fill="rgb(227,189,39)" fg:x="2093" fg:w="2"/><text x="20.0701%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="19.8201%" y="261" width="0.0189%" height="15" fill="rgb(248,10,22)" fg:x="2093" fg:w="2"/><text x="20.0701%" y="271.50"></text></g><g><title>y2021::d15::main::run (985 samples, 9.33%)</title><rect x="10.5208%" y="629" width="9.3277%" height="15" fill="rgb(248,46,39)" fg:x="1111" fg:w="985"/><text x="10.7708%" y="639.50">y2021::d15::m..</text></g><g><title>y2021::d15::main::p02 (960 samples, 9.09%)</title><rect x="10.7576%" y="613" width="9.0909%" height="15" fill="rgb(248,113,48)" fg:x="1136" fg:w="960"/><text x="11.0076%" y="623.50">y2021::d15::m..</text></g><g><title>y2021::d15::main::parse_input (3 samples, 0.03%)</title><rect x="19.8201%" y="597" width="0.0284%" height="15" fill="rgb(245,16,25)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.03%)</title><rect x="19.8201%" y="581" width="0.0284%" height="15" fill="rgb(249,152,16)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="19.8201%" y="565" width="0.0284%" height="15" fill="rgb(250,16,1)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.03%)</title><rect x="19.8201%" y="549" width="0.0284%" height="15" fill="rgb(249,138,3)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.03%)</title><rect x="19.8201%" y="533" width="0.0284%" height="15" fill="rgb(227,71,41)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.03%)</title><rect x="19.8201%" y="517" width="0.0284%" height="15" fill="rgb(209,184,23)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="19.8201%" y="501" width="0.0284%" height="15" fill="rgb(223,215,31)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="19.8201%" y="485" width="0.0284%" height="15" fill="rgb(210,146,28)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="19.8201%" y="469" width="0.0284%" height="15" fill="rgb(209,183,41)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="19.8201%" y="453" width="0.0284%" height="15" fill="rgb(209,224,45)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="19.8201%" y="437" width="0.0284%" height="15" fill="rgb(224,209,51)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="19.8201%" y="421" width="0.0284%" height="15" fill="rgb(223,17,39)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.03%)</title><rect x="19.8201%" y="405" width="0.0284%" height="15" fill="rgb(234,204,37)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.03%)</title><rect x="19.8201%" y="389" width="0.0284%" height="15" fill="rgb(236,120,5)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="399.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (3 samples, 0.03%)</title><rect x="19.8201%" y="373" width="0.0284%" height="15" fill="rgb(248,97,27)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.03%)</title><rect x="19.8201%" y="357" width="0.0284%" height="15" fill="rgb(240,66,17)" fg:x="2093" fg:w="3"/><text x="20.0701%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.06%)</title><rect x="19.9716%" y="373" width="0.0568%" height="15" fill="rgb(210,79,3)" fg:x="2109" fg:w="6"/><text x="20.2216%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.10%)</title><rect x="19.9337%" y="437" width="0.1042%" height="15" fill="rgb(214,176,27)" fg:x="2105" fg:w="11"/><text x="20.1837%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.10%)</title><rect x="19.9337%" y="421" width="0.1042%" height="15" fill="rgb(235,185,3)" fg:x="2105" fg:w="11"/><text x="20.1837%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.10%)</title><rect x="19.9337%" y="405" width="0.1042%" height="15" fill="rgb(227,24,12)" fg:x="2105" fg:w="11"/><text x="20.1837%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.08%)</title><rect x="19.9621%" y="389" width="0.0758%" height="15" fill="rgb(252,169,48)" fg:x="2108" fg:w="8"/><text x="20.2121%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.15%)</title><rect x="19.9337%" y="453" width="0.1515%" height="15" fill="rgb(212,65,1)" fg:x="2105" fg:w="16"/><text x="20.1837%" y="463.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (5 samples, 0.05%)</title><rect x="20.0379%" y="437" width="0.0473%" height="15" fill="rgb(242,39,24)" fg:x="2116" fg:w="5"/><text x="20.2879%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (5 samples, 0.05%)</title><rect x="20.0379%" y="421" width="0.0473%" height="15" fill="rgb(249,32,23)" fg:x="2116" fg:w="5"/><text x="20.2879%" y="431.50"></text></g><g><title>core::hash::Hasher::write_isize (5 samples, 0.05%)</title><rect x="20.0379%" y="405" width="0.0473%" height="15" fill="rgb(251,195,23)" fg:x="2116" fg:w="5"/><text x="20.2879%" y="415.50"></text></g><g><title>core::hash::Hasher::write_usize (5 samples, 0.05%)</title><rect x="20.0379%" y="389" width="0.0473%" height="15" fill="rgb(236,174,8)" fg:x="2116" fg:w="5"/><text x="20.2879%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="20.0379%" y="373" width="0.0473%" height="15" fill="rgb(220,197,8)" fg:x="2116" fg:w="5"/><text x="20.2879%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="20.0379%" y="357" width="0.0473%" height="15" fill="rgb(240,108,37)" fg:x="2116" fg:w="5"/><text x="20.2879%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="20.0379%" y="341" width="0.0473%" height="15" fill="rgb(232,176,24)" fg:x="2116" fg:w="5"/><text x="20.2879%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="20.0663%" y="325" width="0.0189%" height="15" fill="rgb(243,35,29)" fg:x="2119" fg:w="2"/><text x="20.3163%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="20.0947%" y="421" width="0.0189%" height="15" fill="rgb(210,37,18)" fg:x="2122" fg:w="2"/><text x="20.3447%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="20.0947%" y="405" width="0.0189%" height="15" fill="rgb(224,184,40)" fg:x="2122" fg:w="2"/><text x="20.3447%" y="415.50"></text></g><g><title>y2021::d18::main::Snail::has (27 samples, 0.26%)</title><rect x="19.9242%" y="517" width="0.2557%" height="15" fill="rgb(236,39,29)" fg:x="2104" fg:w="27"/><text x="20.1742%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (27 samples, 0.26%)</title><rect x="19.9242%" y="501" width="0.2557%" height="15" fill="rgb(232,48,39)" fg:x="2104" fg:w="27"/><text x="20.1742%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (27 samples, 0.26%)</title><rect x="19.9242%" y="485" width="0.2557%" height="15" fill="rgb(236,34,42)" fg:x="2104" fg:w="27"/><text x="20.1742%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.25%)</title><rect x="19.9337%" y="469" width="0.2462%" height="15" fill="rgb(243,106,37)" fg:x="2105" fg:w="26"/><text x="20.1837%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.09%)</title><rect x="20.0852%" y="453" width="0.0947%" height="15" fill="rgb(218,96,6)" fg:x="2121" fg:w="10"/><text x="20.3352%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.09%)</title><rect x="20.0852%" y="437" width="0.0947%" height="15" fill="rgb(235,130,12)" fg:x="2121" fg:w="10"/><text x="20.3352%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (7 samples, 0.07%)</title><rect x="20.1136%" y="421" width="0.0663%" height="15" fill="rgb(231,95,0)" fg:x="2124" fg:w="7"/><text x="20.3636%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (7 samples, 0.07%)</title><rect x="20.1136%" y="405" width="0.0663%" height="15" fill="rgb(228,12,23)" fg:x="2124" fg:w="7"/><text x="20.3636%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (7 samples, 0.07%)</title><rect x="20.1136%" y="389" width="0.0663%" height="15" fill="rgb(216,12,1)" fg:x="2124" fg:w="7"/><text x="20.3636%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.07%)</title><rect x="20.1136%" y="373" width="0.0663%" height="15" fill="rgb(219,59,3)" fg:x="2124" fg:w="7"/><text x="20.3636%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (7 samples, 0.07%)</title><rect x="20.1136%" y="357" width="0.0663%" height="15" fill="rgb(215,208,46)" fg:x="2124" fg:w="7"/><text x="20.3636%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (7 samples, 0.07%)</title><rect x="20.1136%" y="341" width="0.0663%" height="15" fill="rgb(254,224,29)" fg:x="2124" fg:w="7"/><text x="20.3636%" y="351.50"></text></g><g><title>core::core_arch::simd::i8x16::new (7 samples, 0.07%)</title><rect x="20.1136%" y="325" width="0.0663%" height="15" fill="rgb(232,14,29)" fg:x="2124" fg:w="7"/><text x="20.3636%" y="335.50"></text></g><g><title>y2021::d18::main::Snail::explode (31 samples, 0.29%)</title><rect x="19.9148%" y="533" width="0.2936%" height="15" fill="rgb(208,45,52)" fg:x="2103" fg:w="31"/><text x="20.1648%" y="543.50"></text></g><g><title>y2021::d18::main::Snail::prune (3 samples, 0.03%)</title><rect x="20.1799%" y="517" width="0.0284%" height="15" fill="rgb(234,191,28)" fg:x="2131" fg:w="3"/><text x="20.4299%" y="527.50"></text></g><g><title>y2021::d18::main::Snail::remove (2 samples, 0.02%)</title><rect x="20.1894%" y="501" width="0.0189%" height="15" fill="rgb(244,67,43)" fg:x="2132" fg:w="2"/><text x="20.4394%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (2 samples, 0.02%)</title><rect x="20.1894%" y="485" width="0.0189%" height="15" fill="rgb(236,189,24)" fg:x="2132" fg:w="2"/><text x="20.4394%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (2 samples, 0.02%)</title><rect x="20.1894%" y="469" width="0.0189%" height="15" fill="rgb(239,214,33)" fg:x="2132" fg:w="2"/><text x="20.4394%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (2 samples, 0.02%)</title><rect x="20.1894%" y="453" width="0.0189%" height="15" fill="rgb(226,176,41)" fg:x="2132" fg:w="2"/><text x="20.4394%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2 samples, 0.02%)</title><rect x="20.1894%" y="437" width="0.0189%" height="15" fill="rgb(248,47,8)" fg:x="2132" fg:w="2"/><text x="20.4394%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="20.1894%" y="421" width="0.0189%" height="15" fill="rgb(218,81,44)" fg:x="2132" fg:w="2"/><text x="20.4394%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="20.2273%" y="453" width="0.0284%" height="15" fill="rgb(213,98,6)" fg:x="2136" fg:w="3"/><text x="20.4773%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="20.2273%" y="437" width="0.0284%" height="15" fill="rgb(222,85,22)" fg:x="2136" fg:w="3"/><text x="20.4773%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="20.2273%" y="421" width="0.0284%" height="15" fill="rgb(239,46,39)" fg:x="2136" fg:w="3"/><text x="20.4773%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.03%)</title><rect x="20.2273%" y="405" width="0.0284%" height="15" fill="rgb(237,12,29)" fg:x="2136" fg:w="3"/><text x="20.4773%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="20.2273%" y="389" width="0.0284%" height="15" fill="rgb(214,77,8)" fg:x="2136" fg:w="3"/><text x="20.4773%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.04%)</title><rect x="20.2273%" y="469" width="0.0379%" height="15" fill="rgb(217,168,37)" fg:x="2136" fg:w="4"/><text x="20.4773%" y="479.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (8 samples, 0.08%)</title><rect x="20.2083%" y="533" width="0.0758%" height="15" fill="rgb(221,217,23)" fg:x="2134" fg:w="8"/><text x="20.4583%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (8 samples, 0.08%)</title><rect x="20.2083%" y="517" width="0.0758%" height="15" fill="rgb(243,229,36)" fg:x="2134" fg:w="8"/><text x="20.4583%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (7 samples, 0.07%)</title><rect x="20.2178%" y="501" width="0.0663%" height="15" fill="rgb(251,163,40)" fg:x="2135" fg:w="7"/><text x="20.4678%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (7 samples, 0.07%)</title><rect x="20.2178%" y="485" width="0.0663%" height="15" fill="rgb(237,222,12)" fg:x="2135" fg:w="7"/><text x="20.4678%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="20.2652%" y="469" width="0.0189%" height="15" fill="rgb(248,132,6)" fg:x="2140" fg:w="2"/><text x="20.5152%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="20.2652%" y="453" width="0.0189%" height="15" fill="rgb(227,167,50)" fg:x="2140" fg:w="2"/><text x="20.5152%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="20.3030%" y="405" width="0.0189%" height="15" fill="rgb(242,84,37)" fg:x="2144" fg:w="2"/><text x="20.5530%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="20.3314%" y="389" width="0.0284%" height="15" fill="rgb(212,4,50)" fg:x="2147" fg:w="3"/><text x="20.5814%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.09%)</title><rect x="20.2841%" y="453" width="0.0852%" height="15" fill="rgb(230,228,32)" fg:x="2142" fg:w="9"/><text x="20.5341%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.09%)</title><rect x="20.2841%" y="437" width="0.0852%" height="15" fill="rgb(248,217,23)" fg:x="2142" fg:w="9"/><text x="20.5341%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.09%)</title><rect x="20.2841%" y="421" width="0.0852%" height="15" fill="rgb(238,197,32)" fg:x="2142" fg:w="9"/><text x="20.5341%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.05%)</title><rect x="20.3220%" y="405" width="0.0473%" height="15" fill="rgb(236,106,1)" fg:x="2146" fg:w="5"/><text x="20.5720%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.10%)</title><rect x="20.2841%" y="469" width="0.1042%" height="15" fill="rgb(219,228,13)" fg:x="2142" fg:w="11"/><text x="20.5341%" y="479.50"></text></g><g><title>y2021::d18::main::Snail::explode (57 samples, 0.54%)</title><rect x="19.9053%" y="549" width="0.5398%" height="15" fill="rgb(238,30,35)" fg:x="2102" fg:w="57"/><text x="20.1553%" y="559.50"></text></g><g><title>y2021::d18::main::Snail::has (17 samples, 0.16%)</title><rect x="20.2841%" y="533" width="0.1610%" height="15" fill="rgb(236,70,23)" fg:x="2142" fg:w="17"/><text x="20.5341%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (17 samples, 0.16%)</title><rect x="20.2841%" y="517" width="0.1610%" height="15" fill="rgb(249,104,48)" fg:x="2142" fg:w="17"/><text x="20.5341%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (17 samples, 0.16%)</title><rect x="20.2841%" y="501" width="0.1610%" height="15" fill="rgb(254,117,50)" fg:x="2142" fg:w="17"/><text x="20.5341%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 0.16%)</title><rect x="20.2841%" y="485" width="0.1610%" height="15" fill="rgb(223,152,4)" fg:x="2142" fg:w="17"/><text x="20.5341%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.06%)</title><rect x="20.3883%" y="469" width="0.0568%" height="15" fill="rgb(245,6,2)" fg:x="2153" fg:w="6"/><text x="20.6383%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.06%)</title><rect x="20.3883%" y="453" width="0.0568%" height="15" fill="rgb(249,150,24)" fg:x="2153" fg:w="6"/><text x="20.6383%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="20.4261%" y="437" width="0.0189%" height="15" fill="rgb(228,185,42)" fg:x="2157" fg:w="2"/><text x="20.6761%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="20.4261%" y="421" width="0.0189%" height="15" fill="rgb(226,39,33)" fg:x="2157" fg:w="2"/><text x="20.6761%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="20.4261%" y="405" width="0.0189%" height="15" fill="rgb(221,166,19)" fg:x="2157" fg:w="2"/><text x="20.6761%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="20.4261%" y="389" width="0.0189%" height="15" fill="rgb(209,109,2)" fg:x="2157" fg:w="2"/><text x="20.6761%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.02%)</title><rect x="20.4261%" y="373" width="0.0189%" height="15" fill="rgb(252,216,26)" fg:x="2157" fg:w="2"/><text x="20.6761%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.02%)</title><rect x="20.4261%" y="357" width="0.0189%" height="15" fill="rgb(227,173,36)" fg:x="2157" fg:w="2"/><text x="20.6761%" y="367.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.02%)</title><rect x="20.4261%" y="341" width="0.0189%" height="15" fill="rgb(209,90,7)" fg:x="2157" fg:w="2"/><text x="20.6761%" y="351.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (4 samples, 0.04%)</title><rect x="20.4451%" y="549" width="0.0379%" height="15" fill="rgb(250,194,11)" fg:x="2159" fg:w="4"/><text x="20.6951%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4 samples, 0.04%)</title><rect x="20.4451%" y="533" width="0.0379%" height="15" fill="rgb(220,72,50)" fg:x="2159" fg:w="4"/><text x="20.6951%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4 samples, 0.04%)</title><rect x="20.4451%" y="517" width="0.0379%" height="15" fill="rgb(222,106,48)" fg:x="2159" fg:w="4"/><text x="20.6951%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (3 samples, 0.03%)</title><rect x="20.4545%" y="501" width="0.0284%" height="15" fill="rgb(216,220,45)" fg:x="2160" fg:w="3"/><text x="20.7045%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="20.4640%" y="485" width="0.0189%" height="15" fill="rgb(234,112,18)" fg:x="2161" fg:w="2"/><text x="20.7140%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="20.4640%" y="469" width="0.0189%" height="15" fill="rgb(206,179,9)" fg:x="2161" fg:w="2"/><text x="20.7140%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="20.4830%" y="421" width="0.0189%" height="15" fill="rgb(215,115,40)" fg:x="2163" fg:w="2"/><text x="20.7330%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="20.4830%" y="469" width="0.0379%" height="15" fill="rgb(222,69,34)" fg:x="2163" fg:w="4"/><text x="20.7330%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="20.4830%" y="453" width="0.0379%" height="15" fill="rgb(209,161,10)" fg:x="2163" fg:w="4"/><text x="20.7330%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="20.4830%" y="437" width="0.0379%" height="15" fill="rgb(217,6,38)" fg:x="2163" fg:w="4"/><text x="20.7330%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="20.5019%" y="421" width="0.0189%" height="15" fill="rgb(229,229,48)" fg:x="2165" fg:w="2"/><text x="20.7519%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="20.5208%" y="469" width="0.0189%" height="15" fill="rgb(225,21,28)" fg:x="2167" fg:w="2"/><text x="20.7708%" y="479.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.02%)</title><rect x="20.5208%" y="453" width="0.0189%" height="15" fill="rgb(206,33,13)" fg:x="2167" fg:w="2"/><text x="20.7708%" y="463.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.02%)</title><rect x="20.5208%" y="437" width="0.0189%" height="15" fill="rgb(242,178,17)" fg:x="2167" fg:w="2"/><text x="20.7708%" y="447.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.02%)</title><rect x="20.5208%" y="421" width="0.0189%" height="15" fill="rgb(220,162,5)" fg:x="2167" fg:w="2"/><text x="20.7708%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.07%)</title><rect x="20.4830%" y="485" width="0.0663%" height="15" fill="rgb(210,33,43)" fg:x="2163" fg:w="7"/><text x="20.7330%" y="495.50"></text></g><g><title>y2021::d18::main::Snail::explode (71 samples, 0.67%)</title><rect x="19.8958%" y="565" width="0.6723%" height="15" fill="rgb(216,116,54)" fg:x="2101" fg:w="71"/><text x="20.1458%" y="575.50"></text></g><g><title>y2021::d18::main::Snail::has (9 samples, 0.09%)</title><rect x="20.4830%" y="549" width="0.0852%" height="15" fill="rgb(249,92,24)" fg:x="2163" fg:w="9"/><text x="20.7330%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (9 samples, 0.09%)</title><rect x="20.4830%" y="533" width="0.0852%" height="15" fill="rgb(231,189,14)" fg:x="2163" fg:w="9"/><text x="20.7330%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (9 samples, 0.09%)</title><rect x="20.4830%" y="517" width="0.0852%" height="15" fill="rgb(230,8,41)" fg:x="2163" fg:w="9"/><text x="20.7330%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.09%)</title><rect x="20.4830%" y="501" width="0.0852%" height="15" fill="rgb(249,7,27)" fg:x="2163" fg:w="9"/><text x="20.7330%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="20.5492%" y="485" width="0.0189%" height="15" fill="rgb(232,86,5)" fg:x="2170" fg:w="2"/><text x="20.7992%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="20.5492%" y="469" width="0.0189%" height="15" fill="rgb(224,175,18)" fg:x="2170" fg:w="2"/><text x="20.7992%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="20.5492%" y="453" width="0.0189%" height="15" fill="rgb(220,129,12)" fg:x="2170" fg:w="2"/><text x="20.7992%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="20.5492%" y="437" width="0.0189%" height="15" fill="rgb(210,19,36)" fg:x="2170" fg:w="2"/><text x="20.7992%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="20.5492%" y="421" width="0.0189%" height="15" fill="rgb(219,96,14)" fg:x="2170" fg:w="2"/><text x="20.7992%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="20.5492%" y="405" width="0.0189%" height="15" fill="rgb(249,106,1)" fg:x="2170" fg:w="2"/><text x="20.7992%" y="415.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (2 samples, 0.02%)</title><rect x="20.5682%" y="565" width="0.0189%" height="15" fill="rgb(249,155,20)" fg:x="2172" fg:w="2"/><text x="20.8182%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="20.5682%" y="549" width="0.0189%" height="15" fill="rgb(244,168,9)" fg:x="2172" fg:w="2"/><text x="20.8182%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="20.5682%" y="533" width="0.0189%" height="15" fill="rgb(216,23,50)" fg:x="2172" fg:w="2"/><text x="20.8182%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (2 samples, 0.02%)</title><rect x="20.5682%" y="517" width="0.0189%" height="15" fill="rgb(224,219,20)" fg:x="2172" fg:w="2"/><text x="20.8182%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="20.5682%" y="501" width="0.0189%" height="15" fill="rgb(222,156,15)" fg:x="2172" fg:w="2"/><text x="20.8182%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="20.5682%" y="485" width="0.0189%" height="15" fill="rgb(231,97,17)" fg:x="2172" fg:w="2"/><text x="20.8182%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="20.5871%" y="501" width="0.0284%" height="15" fill="rgb(218,70,48)" fg:x="2174" fg:w="3"/><text x="20.8371%" y="511.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="20.5966%" y="485" width="0.0189%" height="15" fill="rgb(212,196,52)" fg:x="2175" fg:w="2"/><text x="20.8466%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.02%)</title><rect x="20.5966%" y="469" width="0.0189%" height="15" fill="rgb(243,203,18)" fg:x="2175" fg:w="2"/><text x="20.8466%" y="479.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.02%)</title><rect x="20.5966%" y="453" width="0.0189%" height="15" fill="rgb(252,125,41)" fg:x="2175" fg:w="2"/><text x="20.8466%" y="463.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="20.5966%" y="437" width="0.0189%" height="15" fill="rgb(223,180,33)" fg:x="2175" fg:w="2"/><text x="20.8466%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="20.5966%" y="421" width="0.0189%" height="15" fill="rgb(254,159,46)" fg:x="2175" fg:w="2"/><text x="20.8466%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="20.5966%" y="405" width="0.0189%" height="15" fill="rgb(254,38,10)" fg:x="2175" fg:w="2"/><text x="20.8466%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="20.5966%" y="389" width="0.0189%" height="15" fill="rgb(208,217,32)" fg:x="2175" fg:w="2"/><text x="20.8466%" y="399.50"></text></g><g><title>y2021::d18::main::Snail::explode (80 samples, 0.76%)</title><rect x="19.8864%" y="581" width="0.7576%" height="15" fill="rgb(221,120,13)" fg:x="2100" fg:w="80"/><text x="20.1364%" y="591.50"></text></g><g><title>y2021::d18::main::Snail::has (6 samples, 0.06%)</title><rect x="20.5871%" y="565" width="0.0568%" height="15" fill="rgb(246,54,52)" fg:x="2174" fg:w="6"/><text x="20.8371%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (6 samples, 0.06%)</title><rect x="20.5871%" y="549" width="0.0568%" height="15" fill="rgb(242,34,25)" fg:x="2174" fg:w="6"/><text x="20.8371%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (6 samples, 0.06%)</title><rect x="20.5871%" y="533" width="0.0568%" height="15" fill="rgb(247,209,9)" fg:x="2174" fg:w="6"/><text x="20.8371%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.06%)</title><rect x="20.5871%" y="517" width="0.0568%" height="15" fill="rgb(228,71,26)" fg:x="2174" fg:w="6"/><text x="20.8371%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.03%)</title><rect x="20.6155%" y="501" width="0.0284%" height="15" fill="rgb(222,145,49)" fg:x="2177" fg:w="3"/><text x="20.8655%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.03%)</title><rect x="20.6155%" y="485" width="0.0284%" height="15" fill="rgb(218,121,17)" fg:x="2177" fg:w="3"/><text x="20.8655%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="20.6439%" y="501" width="0.0189%" height="15" fill="rgb(244,50,7)" fg:x="2180" fg:w="2"/><text x="20.8939%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="20.6439%" y="485" width="0.0189%" height="15" fill="rgb(246,229,37)" fg:x="2180" fg:w="2"/><text x="20.8939%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="20.6439%" y="469" width="0.0189%" height="15" fill="rgb(225,18,5)" fg:x="2180" fg:w="2"/><text x="20.8939%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="20.6439%" y="453" width="0.0189%" height="15" fill="rgb(213,204,8)" fg:x="2180" fg:w="2"/><text x="20.8939%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="20.6439%" y="437" width="0.0189%" height="15" fill="rgb(238,103,6)" fg:x="2180" fg:w="2"/><text x="20.8939%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="20.6439%" y="421" width="0.0189%" height="15" fill="rgb(222,25,35)" fg:x="2180" fg:w="2"/><text x="20.8939%" y="431.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (3 samples, 0.03%)</title><rect x="20.6439%" y="565" width="0.0284%" height="15" fill="rgb(213,203,35)" fg:x="2180" fg:w="3"/><text x="20.8939%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (3 samples, 0.03%)</title><rect x="20.6439%" y="549" width="0.0284%" height="15" fill="rgb(221,79,53)" fg:x="2180" fg:w="3"/><text x="20.8939%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (3 samples, 0.03%)</title><rect x="20.6439%" y="533" width="0.0284%" height="15" fill="rgb(243,200,35)" fg:x="2180" fg:w="3"/><text x="20.8939%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (3 samples, 0.03%)</title><rect x="20.6439%" y="517" width="0.0284%" height="15" fill="rgb(248,60,25)" fg:x="2180" fg:w="3"/><text x="20.8939%" y="527.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (3 samples, 0.03%)</title><rect x="20.6818%" y="549" width="0.0284%" height="15" fill="rgb(227,53,46)" fg:x="2184" fg:w="3"/><text x="20.9318%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (3 samples, 0.03%)</title><rect x="20.6818%" y="533" width="0.0284%" height="15" fill="rgb(216,120,32)" fg:x="2184" fg:w="3"/><text x="20.9318%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (3 samples, 0.03%)</title><rect x="20.6818%" y="517" width="0.0284%" height="15" fill="rgb(220,134,1)" fg:x="2184" fg:w="3"/><text x="20.9318%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (3 samples, 0.03%)</title><rect x="20.6818%" y="501" width="0.0284%" height="15" fill="rgb(237,168,5)" fg:x="2184" fg:w="3"/><text x="20.9318%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="20.6913%" y="485" width="0.0189%" height="15" fill="rgb(231,100,33)" fg:x="2185" fg:w="2"/><text x="20.9413%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="20.6913%" y="469" width="0.0189%" height="15" fill="rgb(236,177,47)" fg:x="2185" fg:w="2"/><text x="20.9413%" y="479.50"></text></g><g><title>y2021::d18::main::Snail::has (2 samples, 0.02%)</title><rect x="20.7102%" y="549" width="0.0189%" height="15" fill="rgb(235,7,49)" fg:x="2187" fg:w="2"/><text x="20.9602%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.02%)</title><rect x="20.7102%" y="533" width="0.0189%" height="15" fill="rgb(232,119,22)" fg:x="2187" fg:w="2"/><text x="20.9602%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.02%)</title><rect x="20.7102%" y="517" width="0.0189%" height="15" fill="rgb(254,73,53)" fg:x="2187" fg:w="2"/><text x="20.9602%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="20.7102%" y="501" width="0.0189%" height="15" fill="rgb(251,35,20)" fg:x="2187" fg:w="2"/><text x="20.9602%" y="511.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (2 samples, 0.02%)</title><rect x="20.7292%" y="533" width="0.0189%" height="15" fill="rgb(241,119,20)" fg:x="2189" fg:w="2"/><text x="20.9792%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="20.7292%" y="517" width="0.0189%" height="15" fill="rgb(207,102,14)" fg:x="2189" fg:w="2"/><text x="20.9792%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="20.7292%" y="501" width="0.0189%" height="15" fill="rgb(248,201,50)" fg:x="2189" fg:w="2"/><text x="20.9792%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (2 samples, 0.02%)</title><rect x="20.7292%" y="485" width="0.0189%" height="15" fill="rgb(222,185,44)" fg:x="2189" fg:w="2"/><text x="20.9792%" y="495.50"></text></g><g><title>y2021::d18::main::Snail::has (3 samples, 0.03%)</title><rect x="20.7481%" y="533" width="0.0284%" height="15" fill="rgb(218,107,18)" fg:x="2191" fg:w="3"/><text x="20.9981%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (3 samples, 0.03%)</title><rect x="20.7481%" y="517" width="0.0284%" height="15" fill="rgb(237,177,39)" fg:x="2191" fg:w="3"/><text x="20.9981%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.03%)</title><rect x="20.7481%" y="501" width="0.0284%" height="15" fill="rgb(246,69,6)" fg:x="2191" fg:w="3"/><text x="20.9981%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.03%)</title><rect x="20.7481%" y="485" width="0.0284%" height="15" fill="rgb(234,208,37)" fg:x="2191" fg:w="3"/><text x="20.9981%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="20.7576%" y="469" width="0.0189%" height="15" fill="rgb(225,4,6)" fg:x="2192" fg:w="2"/><text x="21.0076%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="20.7576%" y="453" width="0.0189%" height="15" fill="rgb(233,45,0)" fg:x="2192" fg:w="2"/><text x="21.0076%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.04%)</title><rect x="20.7765%" y="517" width="0.0379%" height="15" fill="rgb(226,136,5)" fg:x="2194" fg:w="4"/><text x="21.0265%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="20.7955%" y="501" width="0.0189%" height="15" fill="rgb(211,91,47)" fg:x="2196" fg:w="2"/><text x="21.0455%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="20.8239%" y="437" width="0.0189%" height="15" fill="rgb(242,88,51)" fg:x="2199" fg:w="2"/><text x="21.0739%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="20.8239%" y="421" width="0.0189%" height="15" fill="rgb(230,91,28)" fg:x="2199" fg:w="2"/><text x="21.0739%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="20.8239%" y="405" width="0.0189%" height="15" fill="rgb(254,186,29)" fg:x="2199" fg:w="2"/><text x="21.0739%" y="415.50"></text></g><g><title>y2021::d18::main::p01 (104 samples, 0.98%)</title><rect x="19.8674%" y="613" width="0.9848%" height="15" fill="rgb(238,6,4)" fg:x="2098" fg:w="104"/><text x="20.1174%" y="623.50"></text></g><g><title>y2021::d18::main::Snail::reduce (102 samples, 0.97%)</title><rect x="19.8864%" y="597" width="0.9659%" height="15" fill="rgb(221,151,16)" fg:x="2100" fg:w="102"/><text x="20.1364%" y="607.50"></text></g><g><title>y2021::d18::main::Snail::split (22 samples, 0.21%)</title><rect x="20.6439%" y="581" width="0.2083%" height="15" fill="rgb(251,143,52)" fg:x="2180" fg:w="22"/><text x="20.8939%" y="591.50"></text></g><g><title>y2021::d18::main::Snail::split (18 samples, 0.17%)</title><rect x="20.6818%" y="565" width="0.1705%" height="15" fill="rgb(206,90,15)" fg:x="2184" fg:w="18"/><text x="20.9318%" y="575.50"></text></g><g><title>y2021::d18::main::Snail::split (13 samples, 0.12%)</title><rect x="20.7292%" y="549" width="0.1231%" height="15" fill="rgb(218,35,8)" fg:x="2189" fg:w="13"/><text x="20.9792%" y="559.50"></text></g><g><title>y2021::d18::main::Snail::split (8 samples, 0.08%)</title><rect x="20.7765%" y="533" width="0.0758%" height="15" fill="rgb(239,215,6)" fg:x="2194" fg:w="8"/><text x="21.0265%" y="543.50"></text></g><g><title>y2021::d18::main::Snail::has (3 samples, 0.03%)</title><rect x="20.8239%" y="517" width="0.0284%" height="15" fill="rgb(245,116,39)" fg:x="2199" fg:w="3"/><text x="21.0739%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (3 samples, 0.03%)</title><rect x="20.8239%" y="501" width="0.0284%" height="15" fill="rgb(242,65,28)" fg:x="2199" fg:w="3"/><text x="21.0739%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.03%)</title><rect x="20.8239%" y="485" width="0.0284%" height="15" fill="rgb(252,132,53)" fg:x="2199" fg:w="3"/><text x="21.0739%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.03%)</title><rect x="20.8239%" y="469" width="0.0284%" height="15" fill="rgb(224,159,50)" fg:x="2199" fg:w="3"/><text x="21.0739%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="20.8239%" y="453" width="0.0284%" height="15" fill="rgb(224,93,4)" fg:x="2199" fg:w="3"/><text x="21.0739%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (2 samples, 0.02%)</title><rect x="20.8523%" y="229" width="0.0189%" height="15" fill="rgb(208,81,34)" fg:x="2202" fg:w="2"/><text x="21.1023%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="20.8523%" y="245" width="0.0284%" height="15" fill="rgb(233,92,54)" fg:x="2202" fg:w="3"/><text x="21.1023%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="20.8523%" y="389" width="0.0379%" height="15" fill="rgb(237,21,14)" fg:x="2202" fg:w="4"/><text x="21.1023%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (4 samples, 0.04%)</title><rect x="20.8523%" y="373" width="0.0379%" height="15" fill="rgb(249,128,51)" fg:x="2202" fg:w="4"/><text x="21.1023%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (4 samples, 0.04%)</title><rect x="20.8523%" y="357" width="0.0379%" height="15" fill="rgb(223,129,24)" fg:x="2202" fg:w="4"/><text x="21.1023%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (4 samples, 0.04%)</title><rect x="20.8523%" y="341" width="0.0379%" height="15" fill="rgb(231,168,25)" fg:x="2202" fg:w="4"/><text x="21.1023%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;(y2021::d18::main::Side,y2021::d18::main::Snail)&gt; (4 samples, 0.04%)</title><rect x="20.8523%" y="325" width="0.0379%" height="15" fill="rgb(224,39,20)" fg:x="2202" fg:w="4"/><text x="21.1023%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d18::main::Snail&gt; (4 samples, 0.04%)</title><rect x="20.8523%" y="309" width="0.0379%" height="15" fill="rgb(225,152,53)" fg:x="2202" fg:w="4"/><text x="21.1023%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail&gt;&gt; (4 samples, 0.04%)</title><rect x="20.8523%" y="293" width="0.0379%" height="15" fill="rgb(252,17,24)" fg:x="2202" fg:w="4"/><text x="21.1023%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail,std::collections::hash::map::RandomState&gt;&gt; (4 samples, 0.04%)</title><rect x="20.8523%" y="277" width="0.0379%" height="15" fill="rgb(250,114,30)" fg:x="2202" fg:w="4"/><text x="21.1023%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::d18::main::Side,y2021::d18::main::Snail)&gt;&gt; (4 samples, 0.04%)</title><rect x="20.8523%" y="261" width="0.0379%" height="15" fill="rgb(229,5,4)" fg:x="2202" fg:w="4"/><text x="21.1023%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="20.8523%" y="533" width="0.0473%" height="15" fill="rgb(225,176,49)" fg:x="2202" fg:w="5"/><text x="21.1023%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (5 samples, 0.05%)</title><rect x="20.8523%" y="517" width="0.0473%" height="15" fill="rgb(224,221,49)" fg:x="2202" fg:w="5"/><text x="21.1023%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5 samples, 0.05%)</title><rect x="20.8523%" y="501" width="0.0473%" height="15" fill="rgb(253,169,27)" fg:x="2202" fg:w="5"/><text x="21.1023%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (5 samples, 0.05%)</title><rect x="20.8523%" y="485" width="0.0473%" height="15" fill="rgb(211,206,16)" fg:x="2202" fg:w="5"/><text x="21.1023%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(y2021::d18::main::Side,y2021::d18::main::Snail)&gt; (5 samples, 0.05%)</title><rect x="20.8523%" y="469" width="0.0473%" height="15" fill="rgb(244,87,35)" fg:x="2202" fg:w="5"/><text x="21.1023%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d18::main::Snail&gt; (5 samples, 0.05%)</title><rect x="20.8523%" y="453" width="0.0473%" height="15" fill="rgb(246,28,10)" fg:x="2202" fg:w="5"/><text x="21.1023%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail&gt;&gt; (5 samples, 0.05%)</title><rect x="20.8523%" y="437" width="0.0473%" height="15" fill="rgb(229,12,44)" fg:x="2202" fg:w="5"/><text x="21.1023%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail,std::collections::hash::map::RandomState&gt;&gt; (5 samples, 0.05%)</title><rect x="20.8523%" y="421" width="0.0473%" height="15" fill="rgb(210,145,37)" fg:x="2202" fg:w="5"/><text x="21.1023%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::d18::main::Side,y2021::d18::main::Snail)&gt;&gt; (5 samples, 0.05%)</title><rect x="20.8523%" y="405" width="0.0473%" height="15" fill="rgb(227,112,52)" fg:x="2202" fg:w="5"/><text x="21.1023%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d18::main::Snail&gt; (6 samples, 0.06%)</title><rect x="20.8523%" y="597" width="0.0568%" height="15" fill="rgb(238,155,34)" fg:x="2202" fg:w="6"/><text x="21.1023%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail&gt;&gt; (6 samples, 0.06%)</title><rect x="20.8523%" y="581" width="0.0568%" height="15" fill="rgb(239,226,36)" fg:x="2202" fg:w="6"/><text x="21.1023%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail,std::collections::hash::map::RandomState&gt;&gt; (6 samples, 0.06%)</title><rect x="20.8523%" y="565" width="0.0568%" height="15" fill="rgb(230,16,23)" fg:x="2202" fg:w="6"/><text x="21.1023%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::d18::main::Side,y2021::d18::main::Snail)&gt;&gt; (6 samples, 0.06%)</title><rect x="20.8523%" y="549" width="0.0568%" height="15" fill="rgb(236,171,36)" fg:x="2202" fg:w="6"/><text x="21.1023%" y="559.50"></text></g><g><title>&lt;y2021::d18::main::Snail as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="20.9375%" y="533" width="0.0189%" height="15" fill="rgb(221,22,14)" fg:x="2211" fg:w="2"/><text x="21.1875%" y="543.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.02%)</title><rect x="20.9754%" y="501" width="0.0189%" height="15" fill="rgb(242,43,11)" fg:x="2215" fg:w="2"/><text x="21.2254%" y="511.50"></text></g><g><title>_int_malloc (8 samples, 0.08%)</title><rect x="21.0133%" y="309" width="0.0758%" height="15" fill="rgb(232,69,23)" fg:x="2219" fg:w="8"/><text x="21.2633%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (11 samples, 0.10%)</title><rect x="20.9943%" y="485" width="0.1042%" height="15" fill="rgb(216,180,54)" fg:x="2217" fg:w="11"/><text x="21.2443%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.10%)</title><rect x="20.9943%" y="469" width="0.1042%" height="15" fill="rgb(216,5,24)" fg:x="2217" fg:w="11"/><text x="21.2443%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (11 samples, 0.10%)</title><rect x="20.9943%" y="453" width="0.1042%" height="15" fill="rgb(225,89,9)" fg:x="2217" fg:w="11"/><text x="21.2443%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (10 samples, 0.09%)</title><rect x="21.0038%" y="437" width="0.0947%" height="15" fill="rgb(243,75,33)" fg:x="2218" fg:w="10"/><text x="21.2538%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (10 samples, 0.09%)</title><rect x="21.0038%" y="421" width="0.0947%" height="15" fill="rgb(247,141,45)" fg:x="2218" fg:w="10"/><text x="21.2538%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (10 samples, 0.09%)</title><rect x="21.0038%" y="405" width="0.0947%" height="15" fill="rgb(232,177,36)" fg:x="2218" fg:w="10"/><text x="21.2538%" y="415.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (10 samples, 0.09%)</title><rect x="21.0038%" y="389" width="0.0947%" height="15" fill="rgb(219,125,36)" fg:x="2218" fg:w="10"/><text x="21.2538%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.09%)</title><rect x="21.0038%" y="373" width="0.0947%" height="15" fill="rgb(227,94,9)" fg:x="2218" fg:w="10"/><text x="21.2538%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.09%)</title><rect x="21.0038%" y="357" width="0.0947%" height="15" fill="rgb(240,34,52)" fg:x="2218" fg:w="10"/><text x="21.2538%" y="367.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.09%)</title><rect x="21.0038%" y="341" width="0.0947%" height="15" fill="rgb(216,45,12)" fg:x="2218" fg:w="10"/><text x="21.2538%" y="351.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.09%)</title><rect x="21.0038%" y="325" width="0.0947%" height="15" fill="rgb(246,21,19)" fg:x="2218" fg:w="10"/><text x="21.2538%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (16 samples, 0.15%)</title><rect x="20.9564%" y="533" width="0.1515%" height="15" fill="rgb(213,98,42)" fg:x="2213" fg:w="16"/><text x="21.2064%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.13%)</title><rect x="20.9754%" y="517" width="0.1326%" height="15" fill="rgb(250,136,47)" fg:x="2215" fg:w="14"/><text x="21.2254%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (12 samples, 0.11%)</title><rect x="20.9943%" y="501" width="0.1136%" height="15" fill="rgb(251,124,27)" fg:x="2217" fg:w="12"/><text x="21.2443%" y="511.50"></text></g><g><title>&lt;y2021::d18::main::Snail as core::clone::Clone&gt;::clone (20 samples, 0.19%)</title><rect x="20.9280%" y="549" width="0.1894%" height="15" fill="rgb(229,180,14)" fg:x="2210" fg:w="20"/><text x="21.1780%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="21.1553%" y="501" width="0.0189%" height="15" fill="rgb(245,216,25)" fg:x="2234" fg:w="2"/><text x="21.4053%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.02%)</title><rect x="21.1553%" y="485" width="0.0189%" height="15" fill="rgb(251,43,5)" fg:x="2234" fg:w="2"/><text x="21.4053%" y="495.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="21.1553%" y="469" width="0.0189%" height="15" fill="rgb(250,128,24)" fg:x="2234" fg:w="2"/><text x="21.4053%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="21.1742%" y="501" width="0.0284%" height="15" fill="rgb(217,117,27)" fg:x="2236" fg:w="3"/><text x="21.4242%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.03%)</title><rect x="21.1742%" y="485" width="0.0284%" height="15" fill="rgb(245,147,4)" fg:x="2236" fg:w="3"/><text x="21.4242%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.03%)</title><rect x="21.1742%" y="469" width="0.0284%" height="15" fill="rgb(242,201,35)" fg:x="2236" fg:w="3"/><text x="21.4242%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.02%)</title><rect x="21.1837%" y="453" width="0.0189%" height="15" fill="rgb(218,181,1)" fg:x="2237" fg:w="2"/><text x="21.4337%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.02%)</title><rect x="21.1837%" y="437" width="0.0189%" height="15" fill="rgb(222,6,29)" fg:x="2237" fg:w="2"/><text x="21.4337%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (11 samples, 0.10%)</title><rect x="21.1174%" y="549" width="0.1042%" height="15" fill="rgb(208,186,3)" fg:x="2230" fg:w="11"/><text x="21.3674%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.08%)</title><rect x="21.1458%" y="533" width="0.0758%" height="15" fill="rgb(216,36,26)" fg:x="2233" fg:w="8"/><text x="21.3958%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.07%)</title><rect x="21.1553%" y="517" width="0.0663%" height="15" fill="rgb(248,201,23)" fg:x="2234" fg:w="7"/><text x="21.4053%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.02%)</title><rect x="21.2027%" y="501" width="0.0189%" height="15" fill="rgb(251,170,31)" fg:x="2239" fg:w="2"/><text x="21.4527%" y="511.50"></text></g><g><title>&lt;y2021::d18::main::Snail as core::clone::Clone&gt;::clone (32 samples, 0.30%)</title><rect x="20.9280%" y="565" width="0.3030%" height="15" fill="rgb(207,110,25)" fg:x="2210" fg:w="32"/><text x="21.1780%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2 samples, 0.02%)</title><rect x="21.2595%" y="469" width="0.0189%" height="15" fill="rgb(250,54,15)" fg:x="2245" fg:w="2"/><text x="21.5095%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="21.2595%" y="453" width="0.0189%" height="15" fill="rgb(227,68,33)" fg:x="2245" fg:w="2"/><text x="21.5095%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (2 samples, 0.02%)</title><rect x="21.2595%" y="437" width="0.0189%" height="15" fill="rgb(238,34,41)" fg:x="2245" fg:w="2"/><text x="21.5095%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (2 samples, 0.02%)</title><rect x="21.2595%" y="421" width="0.0189%" height="15" fill="rgb(220,11,15)" fg:x="2245" fg:w="2"/><text x="21.5095%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.04%)</title><rect x="21.2595%" y="517" width="0.0379%" height="15" fill="rgb(246,111,35)" fg:x="2245" fg:w="4"/><text x="21.5095%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.04%)</title><rect x="21.2595%" y="501" width="0.0379%" height="15" fill="rgb(209,88,53)" fg:x="2245" fg:w="4"/><text x="21.5095%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (4 samples, 0.04%)</title><rect x="21.2595%" y="485" width="0.0379%" height="15" fill="rgb(231,185,47)" fg:x="2245" fg:w="4"/><text x="21.5095%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.02%)</title><rect x="21.2784%" y="469" width="0.0189%" height="15" fill="rgb(233,154,1)" fg:x="2247" fg:w="2"/><text x="21.5284%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.02%)</title><rect x="21.2784%" y="453" width="0.0189%" height="15" fill="rgb(225,15,46)" fg:x="2247" fg:w="2"/><text x="21.5284%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="21.2784%" y="437" width="0.0189%" height="15" fill="rgb(211,135,41)" fg:x="2247" fg:w="2"/><text x="21.5284%" y="447.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="21.2784%" y="421" width="0.0189%" height="15" fill="rgb(208,54,0)" fg:x="2247" fg:w="2"/><text x="21.5284%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="21.2784%" y="405" width="0.0189%" height="15" fill="rgb(244,136,14)" fg:x="2247" fg:w="2"/><text x="21.5284%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="21.2784%" y="389" width="0.0189%" height="15" fill="rgb(241,56,14)" fg:x="2247" fg:w="2"/><text x="21.5284%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="21.2784%" y="373" width="0.0189%" height="15" fill="rgb(205,80,24)" fg:x="2247" fg:w="2"/><text x="21.5284%" y="383.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="21.2784%" y="357" width="0.0189%" height="15" fill="rgb(220,57,4)" fg:x="2247" fg:w="2"/><text x="21.5284%" y="367.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="21.2784%" y="341" width="0.0189%" height="15" fill="rgb(226,193,50)" fg:x="2247" fg:w="2"/><text x="21.5284%" y="351.50"></text></g><g><title>&lt;y2021::d18::main::Snail as core::clone::Clone&gt;::clone (42 samples, 0.40%)</title><rect x="20.9091%" y="581" width="0.3977%" height="15" fill="rgb(231,168,22)" fg:x="2208" fg:w="42"/><text x="21.1591%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (8 samples, 0.08%)</title><rect x="21.2311%" y="565" width="0.0758%" height="15" fill="rgb(254,215,14)" fg:x="2242" fg:w="8"/><text x="21.4811%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.07%)</title><rect x="21.2405%" y="549" width="0.0663%" height="15" fill="rgb(211,115,16)" fg:x="2243" fg:w="7"/><text x="21.4905%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.06%)</title><rect x="21.2500%" y="533" width="0.0568%" height="15" fill="rgb(236,210,16)" fg:x="2244" fg:w="6"/><text x="21.5000%" y="543.50"></text></g><g><title>y2021::d18::main::Snail::combine (45 samples, 0.43%)</title><rect x="20.9091%" y="597" width="0.4261%" height="15" fill="rgb(221,94,12)" fg:x="2208" fg:w="45"/><text x="21.1591%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (3 samples, 0.03%)</title><rect x="21.3068%" y="581" width="0.0284%" height="15" fill="rgb(235,218,49)" fg:x="2250" fg:w="3"/><text x="21.5568%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="21.3163%" y="565" width="0.0189%" height="15" fill="rgb(217,114,14)" fg:x="2251" fg:w="2"/><text x="21.5663%" y="575.50"></text></g><g><title>y2021::d18::main::Snail::get (5 samples, 0.05%)</title><rect x="21.3352%" y="581" width="0.0473%" height="15" fill="rgb(216,145,22)" fg:x="2253" fg:w="5"/><text x="21.5852%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.05%)</title><rect x="21.3352%" y="565" width="0.0473%" height="15" fill="rgb(217,112,39)" fg:x="2253" fg:w="5"/><text x="21.5852%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.05%)</title><rect x="21.3352%" y="549" width="0.0473%" height="15" fill="rgb(225,85,32)" fg:x="2253" fg:w="5"/><text x="21.5852%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.05%)</title><rect x="21.3352%" y="533" width="0.0473%" height="15" fill="rgb(245,209,47)" fg:x="2253" fg:w="5"/><text x="21.5852%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.03%)</title><rect x="21.3542%" y="517" width="0.0284%" height="15" fill="rgb(218,220,15)" fg:x="2255" fg:w="3"/><text x="21.6042%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.03%)</title><rect x="21.3542%" y="501" width="0.0284%" height="15" fill="rgb(222,202,31)" fg:x="2255" fg:w="3"/><text x="21.6042%" y="511.50"></text></g><g><title>y2021::d18::main::Snail::get (2 samples, 0.02%)</title><rect x="21.3920%" y="565" width="0.0189%" height="15" fill="rgb(243,203,4)" fg:x="2259" fg:w="2"/><text x="21.6420%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="21.3920%" y="549" width="0.0189%" height="15" fill="rgb(237,92,17)" fg:x="2259" fg:w="2"/><text x="21.6420%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="21.3920%" y="533" width="0.0189%" height="15" fill="rgb(231,119,7)" fg:x="2259" fg:w="2"/><text x="21.6420%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="21.3920%" y="517" width="0.0189%" height="15" fill="rgb(237,82,41)" fg:x="2259" fg:w="2"/><text x="21.6420%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="21.3920%" y="501" width="0.0189%" height="15" fill="rgb(226,81,48)" fg:x="2259" fg:w="2"/><text x="21.6420%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="21.3920%" y="485" width="0.0189%" height="15" fill="rgb(234,70,51)" fg:x="2259" fg:w="2"/><text x="21.6420%" y="495.50"></text></g><g><title>y2021::d18::main::Snail::has (3 samples, 0.03%)</title><rect x="21.4110%" y="565" width="0.0284%" height="15" fill="rgb(251,86,4)" fg:x="2261" fg:w="3"/><text x="21.6610%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (3 samples, 0.03%)</title><rect x="21.4110%" y="549" width="0.0284%" height="15" fill="rgb(244,144,28)" fg:x="2261" fg:w="3"/><text x="21.6610%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.03%)</title><rect x="21.4110%" y="533" width="0.0284%" height="15" fill="rgb(232,161,39)" fg:x="2261" fg:w="3"/><text x="21.6610%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.03%)</title><rect x="21.4110%" y="517" width="0.0284%" height="15" fill="rgb(247,34,51)" fg:x="2261" fg:w="3"/><text x="21.6610%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="21.4205%" y="501" width="0.0189%" height="15" fill="rgb(225,132,2)" fg:x="2262" fg:w="2"/><text x="21.6705%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="21.4205%" y="485" width="0.0189%" height="15" fill="rgb(209,159,44)" fg:x="2262" fg:w="2"/><text x="21.6705%" y="495.50"></text></g><g><title>y2021::d18::main::Snail::get (2 samples, 0.02%)</title><rect x="21.4394%" y="549" width="0.0189%" height="15" fill="rgb(251,214,1)" fg:x="2264" fg:w="2"/><text x="21.6894%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="21.4394%" y="533" width="0.0189%" height="15" fill="rgb(247,84,47)" fg:x="2264" fg:w="2"/><text x="21.6894%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="21.4394%" y="517" width="0.0189%" height="15" fill="rgb(240,111,43)" fg:x="2264" fg:w="2"/><text x="21.6894%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="21.4394%" y="501" width="0.0189%" height="15" fill="rgb(215,214,35)" fg:x="2264" fg:w="2"/><text x="21.6894%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="21.4678%" y="485" width="0.0189%" height="15" fill="rgb(248,207,23)" fg:x="2267" fg:w="2"/><text x="21.7178%" y="495.50"></text></g><g><title>y2021::d18::main::Snail::has (8 samples, 0.08%)</title><rect x="21.4583%" y="549" width="0.0758%" height="15" fill="rgb(214,186,4)" fg:x="2266" fg:w="8"/><text x="21.7083%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (8 samples, 0.08%)</title><rect x="21.4583%" y="533" width="0.0758%" height="15" fill="rgb(220,133,22)" fg:x="2266" fg:w="8"/><text x="21.7083%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (8 samples, 0.08%)</title><rect x="21.4583%" y="517" width="0.0758%" height="15" fill="rgb(239,134,19)" fg:x="2266" fg:w="8"/><text x="21.7083%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.08%)</title><rect x="21.4583%" y="501" width="0.0758%" height="15" fill="rgb(250,140,9)" fg:x="2266" fg:w="8"/><text x="21.7083%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.05%)</title><rect x="21.4867%" y="485" width="0.0473%" height="15" fill="rgb(225,59,14)" fg:x="2269" fg:w="5"/><text x="21.7367%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.05%)</title><rect x="21.4867%" y="469" width="0.0473%" height="15" fill="rgb(214,152,51)" fg:x="2269" fg:w="5"/><text x="21.7367%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="21.5341%" y="453" width="0.0284%" height="15" fill="rgb(251,227,43)" fg:x="2274" fg:w="3"/><text x="21.7841%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="21.5341%" y="437" width="0.0284%" height="15" fill="rgb(241,96,17)" fg:x="2274" fg:w="3"/><text x="21.7841%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="21.5341%" y="421" width="0.0284%" height="15" fill="rgb(234,198,43)" fg:x="2274" fg:w="3"/><text x="21.7841%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="21.5625%" y="453" width="0.0189%" height="15" fill="rgb(220,108,29)" fg:x="2277" fg:w="2"/><text x="21.8125%" y="463.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.02%)</title><rect x="21.5625%" y="437" width="0.0189%" height="15" fill="rgb(226,163,33)" fg:x="2277" fg:w="2"/><text x="21.8125%" y="447.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.02%)</title><rect x="21.5625%" y="421" width="0.0189%" height="15" fill="rgb(205,194,45)" fg:x="2277" fg:w="2"/><text x="21.8125%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.02%)</title><rect x="21.5625%" y="405" width="0.0189%" height="15" fill="rgb(206,143,44)" fg:x="2277" fg:w="2"/><text x="21.8125%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="21.5814%" y="341" width="0.0189%" height="15" fill="rgb(236,136,36)" fg:x="2279" fg:w="2"/><text x="21.8314%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.08%)</title><rect x="21.5341%" y="469" width="0.0758%" height="15" fill="rgb(249,172,42)" fg:x="2274" fg:w="8"/><text x="21.7841%" y="479.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="21.5814%" y="453" width="0.0284%" height="15" fill="rgb(216,139,23)" fg:x="2279" fg:w="3"/><text x="21.8314%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (3 samples, 0.03%)</title><rect x="21.5814%" y="437" width="0.0284%" height="15" fill="rgb(207,166,20)" fg:x="2279" fg:w="3"/><text x="21.8314%" y="447.50"></text></g><g><title>core::hash::Hasher::write_isize (3 samples, 0.03%)</title><rect x="21.5814%" y="421" width="0.0284%" height="15" fill="rgb(210,209,22)" fg:x="2279" fg:w="3"/><text x="21.8314%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.03%)</title><rect x="21.5814%" y="405" width="0.0284%" height="15" fill="rgb(232,118,20)" fg:x="2279" fg:w="3"/><text x="21.8314%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="21.5814%" y="389" width="0.0284%" height="15" fill="rgb(238,113,42)" fg:x="2279" fg:w="3"/><text x="21.8314%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="21.5814%" y="373" width="0.0284%" height="15" fill="rgb(231,42,5)" fg:x="2279" fg:w="3"/><text x="21.8314%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="21.5814%" y="357" width="0.0284%" height="15" fill="rgb(243,166,24)" fg:x="2279" fg:w="3"/><text x="21.8314%" y="367.50"></text></g><g><title>y2021::d18::main::Snail::magnitude (31 samples, 0.29%)</title><rect x="21.3352%" y="597" width="0.2936%" height="15" fill="rgb(237,226,12)" fg:x="2253" fg:w="31"/><text x="21.5852%" y="607.50"></text></g><g><title>y2021::d18::main::Snail::magnitude (25 samples, 0.24%)</title><rect x="21.3920%" y="581" width="0.2367%" height="15" fill="rgb(229,133,24)" fg:x="2259" fg:w="25"/><text x="21.6420%" y="591.50"></text></g><g><title>y2021::d18::main::Snail::magnitude (20 samples, 0.19%)</title><rect x="21.4394%" y="565" width="0.1894%" height="15" fill="rgb(238,33,43)" fg:x="2264" fg:w="20"/><text x="21.6894%" y="575.50"></text></g><g><title>y2021::d18::main::Snail::magnitude (10 samples, 0.09%)</title><rect x="21.5341%" y="549" width="0.0947%" height="15" fill="rgb(227,59,38)" fg:x="2274" fg:w="10"/><text x="21.7841%" y="559.50"></text></g><g><title>y2021::d18::main::Snail::has (10 samples, 0.09%)</title><rect x="21.5341%" y="533" width="0.0947%" height="15" fill="rgb(230,97,0)" fg:x="2274" fg:w="10"/><text x="21.7841%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (10 samples, 0.09%)</title><rect x="21.5341%" y="517" width="0.0947%" height="15" fill="rgb(250,173,50)" fg:x="2274" fg:w="10"/><text x="21.7841%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (10 samples, 0.09%)</title><rect x="21.5341%" y="501" width="0.0947%" height="15" fill="rgb(240,15,50)" fg:x="2274" fg:w="10"/><text x="21.7841%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.09%)</title><rect x="21.5341%" y="485" width="0.0947%" height="15" fill="rgb(221,93,22)" fg:x="2274" fg:w="10"/><text x="21.7841%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="21.6098%" y="469" width="0.0189%" height="15" fill="rgb(245,180,53)" fg:x="2282" fg:w="2"/><text x="21.8598%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="21.6098%" y="453" width="0.0189%" height="15" fill="rgb(231,88,51)" fg:x="2282" fg:w="2"/><text x="21.8598%" y="463.50"></text></g><g><title>y2021::d18::main::Snail::add (2 samples, 0.02%)</title><rect x="21.6572%" y="549" width="0.0189%" height="15" fill="rgb(240,58,21)" fg:x="2287" fg:w="2"/><text x="21.9072%" y="559.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (2 samples, 0.02%)</title><rect x="21.6761%" y="549" width="0.0189%" height="15" fill="rgb(237,21,10)" fg:x="2289" fg:w="2"/><text x="21.9261%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="21.6761%" y="533" width="0.0189%" height="15" fill="rgb(218,43,11)" fg:x="2289" fg:w="2"/><text x="21.9261%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="21.6761%" y="517" width="0.0189%" height="15" fill="rgb(218,221,29)" fg:x="2289" fg:w="2"/><text x="21.9261%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (2 samples, 0.02%)</title><rect x="21.6761%" y="501" width="0.0189%" height="15" fill="rgb(214,118,42)" fg:x="2289" fg:w="2"/><text x="21.9261%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="21.6761%" y="485" width="0.0189%" height="15" fill="rgb(251,200,26)" fg:x="2289" fg:w="2"/><text x="21.9261%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="21.6761%" y="469" width="0.0189%" height="15" fill="rgb(237,101,39)" fg:x="2289" fg:w="2"/><text x="21.9261%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="21.6761%" y="453" width="0.0189%" height="15" fill="rgb(251,117,11)" fg:x="2289" fg:w="2"/><text x="21.9261%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="21.6761%" y="437" width="0.0189%" height="15" fill="rgb(216,223,23)" fg:x="2289" fg:w="2"/><text x="21.9261%" y="447.50"></text></g><g><title>y2021::d18::main::Snail::add (7 samples, 0.07%)</title><rect x="21.6572%" y="565" width="0.0663%" height="15" fill="rgb(251,54,12)" fg:x="2287" fg:w="7"/><text x="21.9072%" y="575.50"></text></g><g><title>y2021::d18::main::Snail::has (3 samples, 0.03%)</title><rect x="21.6951%" y="549" width="0.0284%" height="15" fill="rgb(254,176,54)" fg:x="2291" fg:w="3"/><text x="21.9451%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (3 samples, 0.03%)</title><rect x="21.6951%" y="533" width="0.0284%" height="15" fill="rgb(210,32,8)" fg:x="2291" fg:w="3"/><text x="21.9451%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.03%)</title><rect x="21.6951%" y="517" width="0.0284%" height="15" fill="rgb(235,52,38)" fg:x="2291" fg:w="3"/><text x="21.9451%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.03%)</title><rect x="21.6951%" y="501" width="0.0284%" height="15" fill="rgb(231,4,44)" fg:x="2291" fg:w="3"/><text x="21.9451%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="21.7045%" y="485" width="0.0189%" height="15" fill="rgb(249,2,32)" fg:x="2292" fg:w="2"/><text x="21.9545%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="21.7045%" y="469" width="0.0189%" height="15" fill="rgb(224,65,26)" fg:x="2292" fg:w="2"/><text x="21.9545%" y="479.50"></text></g><g><title>y2021::d18::main::Snail::add (4 samples, 0.04%)</title><rect x="21.7424%" y="533" width="0.0379%" height="15" fill="rgb(250,73,40)" fg:x="2296" fg:w="4"/><text x="21.9924%" y="543.50"></text></g><g><title>y2021::d18::main::Snail::has (3 samples, 0.03%)</title><rect x="21.7519%" y="517" width="0.0284%" height="15" fill="rgb(253,177,16)" fg:x="2297" fg:w="3"/><text x="22.0019%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (3 samples, 0.03%)</title><rect x="21.7519%" y="501" width="0.0284%" height="15" fill="rgb(217,32,34)" fg:x="2297" fg:w="3"/><text x="22.0019%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.03%)</title><rect x="21.7519%" y="485" width="0.0284%" height="15" fill="rgb(212,7,10)" fg:x="2297" fg:w="3"/><text x="22.0019%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.03%)</title><rect x="21.7519%" y="469" width="0.0284%" height="15" fill="rgb(245,89,8)" fg:x="2297" fg:w="3"/><text x="22.0019%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="21.7614%" y="453" width="0.0189%" height="15" fill="rgb(237,16,53)" fg:x="2298" fg:w="2"/><text x="22.0114%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="21.7614%" y="437" width="0.0189%" height="15" fill="rgb(250,204,30)" fg:x="2298" fg:w="2"/><text x="22.0114%" y="447.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (2 samples, 0.02%)</title><rect x="21.7803%" y="533" width="0.0189%" height="15" fill="rgb(208,77,27)" fg:x="2300" fg:w="2"/><text x="22.0303%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="21.7803%" y="517" width="0.0189%" height="15" fill="rgb(250,204,28)" fg:x="2300" fg:w="2"/><text x="22.0303%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="21.7803%" y="501" width="0.0189%" height="15" fill="rgb(244,63,21)" fg:x="2300" fg:w="2"/><text x="22.0303%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (2 samples, 0.02%)</title><rect x="21.7803%" y="485" width="0.0189%" height="15" fill="rgb(236,85,44)" fg:x="2300" fg:w="2"/><text x="22.0303%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="21.7992%" y="453" width="0.0379%" height="15" fill="rgb(215,98,4)" fg:x="2302" fg:w="4"/><text x="22.0492%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="21.7992%" y="437" width="0.0379%" height="15" fill="rgb(235,38,11)" fg:x="2302" fg:w="4"/><text x="22.0492%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="21.7992%" y="421" width="0.0379%" height="15" fill="rgb(254,186,25)" fg:x="2302" fg:w="4"/><text x="22.0492%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.03%)</title><rect x="21.8087%" y="405" width="0.0284%" height="15" fill="rgb(225,55,31)" fg:x="2303" fg:w="3"/><text x="22.0587%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="21.8182%" y="389" width="0.0189%" height="15" fill="rgb(211,15,21)" fg:x="2304" fg:w="2"/><text x="22.0682%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.06%)</title><rect x="21.7992%" y="469" width="0.0568%" height="15" fill="rgb(215,187,41)" fg:x="2302" fg:w="6"/><text x="22.0492%" y="479.50"></text></g><g><title>y2021::d18::main::Snail::add (13 samples, 0.12%)</title><rect x="21.7424%" y="549" width="0.1231%" height="15" fill="rgb(248,69,32)" fg:x="2296" fg:w="13"/><text x="21.9924%" y="559.50"></text></g><g><title>y2021::d18::main::Snail::has (7 samples, 0.07%)</title><rect x="21.7992%" y="533" width="0.0663%" height="15" fill="rgb(252,102,52)" fg:x="2302" fg:w="7"/><text x="22.0492%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (7 samples, 0.07%)</title><rect x="21.7992%" y="517" width="0.0663%" height="15" fill="rgb(253,140,32)" fg:x="2302" fg:w="7"/><text x="22.0492%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (7 samples, 0.07%)</title><rect x="21.7992%" y="501" width="0.0663%" height="15" fill="rgb(216,56,42)" fg:x="2302" fg:w="7"/><text x="22.0492%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.07%)</title><rect x="21.7992%" y="485" width="0.0663%" height="15" fill="rgb(216,184,14)" fg:x="2302" fg:w="7"/><text x="22.0492%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.03%)</title><rect x="21.8939%" y="533" width="0.0284%" height="15" fill="rgb(237,187,27)" fg:x="2312" fg:w="3"/><text x="22.1439%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="21.9318%" y="437" width="0.0189%" height="15" fill="rgb(219,65,3)" fg:x="2316" fg:w="2"/><text x="22.1818%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="21.9318%" y="421" width="0.0189%" height="15" fill="rgb(245,83,25)" fg:x="2316" fg:w="2"/><text x="22.1818%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="21.9318%" y="405" width="0.0189%" height="15" fill="rgb(214,205,45)" fg:x="2316" fg:w="2"/><text x="22.1818%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="21.9318%" y="389" width="0.0189%" height="15" fill="rgb(241,20,18)" fg:x="2316" fg:w="2"/><text x="22.1818%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.04%)</title><rect x="21.9318%" y="453" width="0.0379%" height="15" fill="rgb(232,163,23)" fg:x="2316" fg:w="4"/><text x="22.1818%" y="463.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="21.9508%" y="437" width="0.0189%" height="15" fill="rgb(214,5,46)" fg:x="2318" fg:w="2"/><text x="22.2008%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.02%)</title><rect x="21.9508%" y="421" width="0.0189%" height="15" fill="rgb(229,78,17)" fg:x="2318" fg:w="2"/><text x="22.2008%" y="431.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.02%)</title><rect x="21.9508%" y="405" width="0.0189%" height="15" fill="rgb(248,89,10)" fg:x="2318" fg:w="2"/><text x="22.2008%" y="415.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="21.9508%" y="389" width="0.0189%" height="15" fill="rgb(248,54,15)" fg:x="2318" fg:w="2"/><text x="22.2008%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="21.9508%" y="373" width="0.0189%" height="15" fill="rgb(223,116,6)" fg:x="2318" fg:w="2"/><text x="22.2008%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="21.9508%" y="357" width="0.0189%" height="15" fill="rgb(205,125,38)" fg:x="2318" fg:w="2"/><text x="22.2008%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="21.9508%" y="341" width="0.0189%" height="15" fill="rgb(251,78,38)" fg:x="2318" fg:w="2"/><text x="22.2008%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="21.9508%" y="325" width="0.0189%" height="15" fill="rgb(253,78,28)" fg:x="2318" fg:w="2"/><text x="22.2008%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="21.9508%" y="309" width="0.0189%" height="15" fill="rgb(209,120,3)" fg:x="2318" fg:w="2"/><text x="22.2008%" y="319.50"></text></g><g><title>y2021::d18::main::Snail::add (6 samples, 0.06%)</title><rect x="21.9223%" y="533" width="0.0568%" height="15" fill="rgb(238,229,9)" fg:x="2315" fg:w="6"/><text x="22.1723%" y="543.50"></text></g><g><title>y2021::d18::main::Snail::has (5 samples, 0.05%)</title><rect x="21.9318%" y="517" width="0.0473%" height="15" fill="rgb(253,159,18)" fg:x="2316" fg:w="5"/><text x="22.1818%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (5 samples, 0.05%)</title><rect x="21.9318%" y="501" width="0.0473%" height="15" fill="rgb(244,42,34)" fg:x="2316" fg:w="5"/><text x="22.1818%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (5 samples, 0.05%)</title><rect x="21.9318%" y="485" width="0.0473%" height="15" fill="rgb(224,8,7)" fg:x="2316" fg:w="5"/><text x="22.1818%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.05%)</title><rect x="21.9318%" y="469" width="0.0473%" height="15" fill="rgb(210,201,45)" fg:x="2316" fg:w="5"/><text x="22.1818%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="22.1686%" y="373" width="0.0189%" height="15" fill="rgb(252,185,21)" fg:x="2341" fg:w="2"/><text x="22.4186%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.06%)</title><rect x="22.2064%" y="357" width="0.0568%" height="15" fill="rgb(223,131,1)" fg:x="2345" fg:w="6"/><text x="22.4564%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (19 samples, 0.18%)</title><rect x="22.0928%" y="421" width="0.1799%" height="15" fill="rgb(245,141,16)" fg:x="2333" fg:w="19"/><text x="22.3428%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (19 samples, 0.18%)</title><rect x="22.0928%" y="405" width="0.1799%" height="15" fill="rgb(229,55,45)" fg:x="2333" fg:w="19"/><text x="22.3428%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (19 samples, 0.18%)</title><rect x="22.0928%" y="389" width="0.1799%" height="15" fill="rgb(208,92,15)" fg:x="2333" fg:w="19"/><text x="22.3428%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.09%)</title><rect x="22.1875%" y="373" width="0.0852%" height="15" fill="rgb(234,185,47)" fg:x="2343" fg:w="9"/><text x="22.4375%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.05%)</title><rect x="22.2727%" y="421" width="0.0473%" height="15" fill="rgb(253,104,50)" fg:x="2352" fg:w="5"/><text x="22.5227%" y="431.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.04%)</title><rect x="22.2822%" y="405" width="0.0379%" height="15" fill="rgb(205,70,7)" fg:x="2353" fg:w="4"/><text x="22.5322%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4 samples, 0.04%)</title><rect x="22.2822%" y="389" width="0.0379%" height="15" fill="rgb(240,178,43)" fg:x="2353" fg:w="4"/><text x="22.5322%" y="399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4 samples, 0.04%)</title><rect x="22.2822%" y="373" width="0.0379%" height="15" fill="rgb(214,112,2)" fg:x="2353" fg:w="4"/><text x="22.5322%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (27 samples, 0.26%)</title><rect x="22.0739%" y="437" width="0.2557%" height="15" fill="rgb(206,46,17)" fg:x="2331" fg:w="27"/><text x="22.3239%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="22.3485%" y="405" width="0.0189%" height="15" fill="rgb(225,220,16)" fg:x="2360" fg:w="2"/><text x="22.5985%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="22.3485%" y="389" width="0.0189%" height="15" fill="rgb(238,65,40)" fg:x="2360" fg:w="2"/><text x="22.5985%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="22.3674%" y="357" width="0.0189%" height="15" fill="rgb(230,151,21)" fg:x="2362" fg:w="2"/><text x="22.6174%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="22.3674%" y="341" width="0.0189%" height="15" fill="rgb(218,58,49)" fg:x="2362" fg:w="2"/><text x="22.6174%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="22.3674%" y="325" width="0.0189%" height="15" fill="rgb(219,179,14)" fg:x="2362" fg:w="2"/><text x="22.6174%" y="335.50"></text></g><g><title>y2021::d18::main::Snail::explode (38 samples, 0.36%)</title><rect x="22.0644%" y="517" width="0.3598%" height="15" fill="rgb(223,72,1)" fg:x="2330" fg:w="38"/><text x="22.3144%" y="527.50"></text></g><g><title>y2021::d18::main::Snail::has (37 samples, 0.35%)</title><rect x="22.0739%" y="501" width="0.3504%" height="15" fill="rgb(238,126,10)" fg:x="2331" fg:w="37"/><text x="22.3239%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (37 samples, 0.35%)</title><rect x="22.0739%" y="485" width="0.3504%" height="15" fill="rgb(224,206,38)" fg:x="2331" fg:w="37"/><text x="22.3239%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (37 samples, 0.35%)</title><rect x="22.0739%" y="469" width="0.3504%" height="15" fill="rgb(212,201,54)" fg:x="2331" fg:w="37"/><text x="22.3239%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (37 samples, 0.35%)</title><rect x="22.0739%" y="453" width="0.3504%" height="15" fill="rgb(218,154,48)" fg:x="2331" fg:w="37"/><text x="22.3239%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.09%)</title><rect x="22.3295%" y="437" width="0.0947%" height="15" fill="rgb(232,93,24)" fg:x="2358" fg:w="10"/><text x="22.5795%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.09%)</title><rect x="22.3295%" y="421" width="0.0947%" height="15" fill="rgb(245,30,21)" fg:x="2358" fg:w="10"/><text x="22.5795%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.06%)</title><rect x="22.3674%" y="405" width="0.0568%" height="15" fill="rgb(242,148,29)" fg:x="2362" fg:w="6"/><text x="22.6174%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.06%)</title><rect x="22.3674%" y="389" width="0.0568%" height="15" fill="rgb(244,153,54)" fg:x="2362" fg:w="6"/><text x="22.6174%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.06%)</title><rect x="22.3674%" y="373" width="0.0568%" height="15" fill="rgb(252,87,22)" fg:x="2362" fg:w="6"/><text x="22.6174%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.04%)</title><rect x="22.3864%" y="357" width="0.0379%" height="15" fill="rgb(210,51,29)" fg:x="2364" fg:w="4"/><text x="22.6364%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.04%)</title><rect x="22.3864%" y="341" width="0.0379%" height="15" fill="rgb(242,136,47)" fg:x="2364" fg:w="4"/><text x="22.6364%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.04%)</title><rect x="22.3864%" y="325" width="0.0379%" height="15" fill="rgb(238,68,4)" fg:x="2364" fg:w="4"/><text x="22.6364%" y="335.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4 samples, 0.04%)</title><rect x="22.3864%" y="309" width="0.0379%" height="15" fill="rgb(242,161,30)" fg:x="2364" fg:w="4"/><text x="22.6364%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="22.4337%" y="437" width="0.0284%" height="15" fill="rgb(218,58,44)" fg:x="2369" fg:w="3"/><text x="22.6837%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="22.4337%" y="421" width="0.0284%" height="15" fill="rgb(252,125,32)" fg:x="2369" fg:w="3"/><text x="22.6837%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="22.4337%" y="405" width="0.0284%" height="15" fill="rgb(219,178,0)" fg:x="2369" fg:w="3"/><text x="22.6837%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.05%)</title><rect x="22.4337%" y="453" width="0.0473%" height="15" fill="rgb(213,152,7)" fg:x="2369" fg:w="5"/><text x="22.6837%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="22.5189%" y="421" width="0.0473%" height="15" fill="rgb(249,109,34)" fg:x="2378" fg:w="5"/><text x="22.7689%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="22.5189%" y="405" width="0.0473%" height="15" fill="rgb(232,96,21)" fg:x="2378" fg:w="5"/><text x="22.7689%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="22.5189%" y="389" width="0.0473%" height="15" fill="rgb(228,27,39)" fg:x="2378" fg:w="5"/><text x="22.7689%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.03%)</title><rect x="22.5379%" y="373" width="0.0284%" height="15" fill="rgb(211,182,52)" fg:x="2380" fg:w="3"/><text x="22.7879%" y="383.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (17 samples, 0.16%)</title><rect x="22.4242%" y="517" width="0.1610%" height="15" fill="rgb(234,178,38)" fg:x="2368" fg:w="17"/><text x="22.6742%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (17 samples, 0.16%)</title><rect x="22.4242%" y="501" width="0.1610%" height="15" fill="rgb(221,111,3)" fg:x="2368" fg:w="17"/><text x="22.6742%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (16 samples, 0.15%)</title><rect x="22.4337%" y="485" width="0.1515%" height="15" fill="rgb(228,175,21)" fg:x="2369" fg:w="16"/><text x="22.6837%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (16 samples, 0.15%)</title><rect x="22.4337%" y="469" width="0.1515%" height="15" fill="rgb(228,174,43)" fg:x="2369" fg:w="16"/><text x="22.6837%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (11 samples, 0.10%)</title><rect x="22.4811%" y="453" width="0.1042%" height="15" fill="rgb(211,191,0)" fg:x="2374" fg:w="11"/><text x="22.7311%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.10%)</title><rect x="22.4811%" y="437" width="0.1042%" height="15" fill="rgb(253,117,3)" fg:x="2374" fg:w="11"/><text x="22.7311%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="22.5663%" y="421" width="0.0189%" height="15" fill="rgb(241,127,19)" fg:x="2383" fg:w="2"/><text x="22.8163%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.02%)</title><rect x="22.5663%" y="405" width="0.0189%" height="15" fill="rgb(218,103,12)" fg:x="2383" fg:w="2"/><text x="22.8163%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.02%)</title><rect x="22.5663%" y="389" width="0.0189%" height="15" fill="rgb(236,214,43)" fg:x="2383" fg:w="2"/><text x="22.8163%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.02%)</title><rect x="22.5663%" y="373" width="0.0189%" height="15" fill="rgb(244,144,19)" fg:x="2383" fg:w="2"/><text x="22.8163%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (28 samples, 0.27%)</title><rect x="23.3902%" y="373" width="0.2652%" height="15" fill="rgb(246,188,10)" fg:x="2470" fg:w="28"/><text x="23.6402%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (45 samples, 0.43%)</title><rect x="23.3144%" y="389" width="0.4261%" height="15" fill="rgb(212,193,33)" fg:x="2462" fg:w="45"/><text x="23.5644%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.09%)</title><rect x="23.6553%" y="373" width="0.0852%" height="15" fill="rgb(241,51,29)" fg:x="2498" fg:w="9"/><text x="23.9053%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (83 samples, 0.79%)</title><rect x="23.9867%" y="373" width="0.7860%" height="15" fill="rgb(211,58,19)" fg:x="2533" fg:w="83"/><text x="24.2367%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (238 samples, 2.25%)</title><rect x="22.9072%" y="437" width="2.2538%" height="15" fill="rgb(229,111,26)" fg:x="2419" fg:w="238"/><text x="23.1572%" y="447.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (238 samples, 2.25%)</title><rect x="22.9072%" y="421" width="2.2538%" height="15" fill="rgb(213,115,40)" fg:x="2419" fg:w="238"/><text x="23.1572%" y="431.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (238 samples, 2.25%)</title><rect x="22.9072%" y="405" width="2.2538%" height="15" fill="rgb(209,56,44)" fg:x="2419" fg:w="238"/><text x="23.1572%" y="415.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (150 samples, 1.42%)</title><rect x="23.7405%" y="389" width="1.4205%" height="15" fill="rgb(230,108,32)" fg:x="2507" fg:w="150"/><text x="23.9905%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (41 samples, 0.39%)</title><rect x="24.7727%" y="373" width="0.3883%" height="15" fill="rgb(216,165,31)" fg:x="2616" fg:w="41"/><text x="25.0227%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (32 samples, 0.30%)</title><rect x="25.1610%" y="437" width="0.3030%" height="15" fill="rgb(218,122,21)" fg:x="2657" fg:w="32"/><text x="25.4110%" y="447.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (22 samples, 0.21%)</title><rect x="25.2557%" y="421" width="0.2083%" height="15" fill="rgb(223,224,47)" fg:x="2667" fg:w="22"/><text x="25.5057%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (22 samples, 0.21%)</title><rect x="25.2557%" y="405" width="0.2083%" height="15" fill="rgb(238,102,44)" fg:x="2667" fg:w="22"/><text x="25.5057%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (22 samples, 0.21%)</title><rect x="25.2557%" y="389" width="0.2083%" height="15" fill="rgb(236,46,40)" fg:x="2667" fg:w="22"/><text x="25.5057%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.14%)</title><rect x="25.8428%" y="309" width="0.1420%" height="15" fill="rgb(247,202,50)" fg:x="2729" fg:w="15"/><text x="26.0928%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (27 samples, 0.26%)</title><rect x="25.7765%" y="325" width="0.2557%" height="15" fill="rgb(209,99,20)" fg:x="2722" fg:w="27"/><text x="26.0265%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.05%)</title><rect x="25.9848%" y="309" width="0.0473%" height="15" fill="rgb(252,27,34)" fg:x="2744" fg:w="5"/><text x="26.2348%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (343 samples, 3.25%)</title><rect x="22.8693%" y="453" width="3.2481%" height="15" fill="rgb(215,206,23)" fg:x="2415" fg:w="343"/><text x="23.1193%" y="463.50">has..</text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (69 samples, 0.65%)</title><rect x="25.4640%" y="437" width="0.6534%" height="15" fill="rgb(212,135,36)" fg:x="2689" fg:w="69"/><text x="25.7140%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (60 samples, 0.57%)</title><rect x="25.5492%" y="421" width="0.5682%" height="15" fill="rgb(240,189,1)" fg:x="2698" fg:w="60"/><text x="25.7992%" y="431.50"></text></g><g><title>core::hash::Hasher::write_isize (60 samples, 0.57%)</title><rect x="25.5492%" y="405" width="0.5682%" height="15" fill="rgb(242,56,20)" fg:x="2698" fg:w="60"/><text x="25.7992%" y="415.50"></text></g><g><title>core::hash::Hasher::write_usize (60 samples, 0.57%)</title><rect x="25.5492%" y="389" width="0.5682%" height="15" fill="rgb(247,132,33)" fg:x="2698" fg:w="60"/><text x="25.7992%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (57 samples, 0.54%)</title><rect x="25.5777%" y="373" width="0.5398%" height="15" fill="rgb(208,149,11)" fg:x="2701" fg:w="57"/><text x="25.8277%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (57 samples, 0.54%)</title><rect x="25.5777%" y="357" width="0.5398%" height="15" fill="rgb(211,33,11)" fg:x="2701" fg:w="57"/><text x="25.8277%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (57 samples, 0.54%)</title><rect x="25.5777%" y="341" width="0.5398%" height="15" fill="rgb(221,29,38)" fg:x="2701" fg:w="57"/><text x="25.8277%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (9 samples, 0.09%)</title><rect x="26.0322%" y="325" width="0.0852%" height="15" fill="rgb(206,182,49)" fg:x="2749" fg:w="9"/><text x="26.2822%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.20%)</title><rect x="26.4867%" y="389" width="0.1989%" height="15" fill="rgb(216,140,1)" fg:x="2797" fg:w="21"/><text x="26.7367%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.08%)</title><rect x="26.6098%" y="373" width="0.0758%" height="15" fill="rgb(232,57,40)" fg:x="2810" fg:w="8"/><text x="26.8598%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.27%)</title><rect x="26.4394%" y="421" width="0.2652%" height="15" fill="rgb(224,186,18)" fg:x="2792" fg:w="28"/><text x="26.6894%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.27%)</title><rect x="26.4394%" y="405" width="0.2652%" height="15" fill="rgb(215,121,11)" fg:x="2792" fg:w="28"/><text x="26.6894%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.03%)</title><rect x="26.7803%" y="373" width="0.0284%" height="15" fill="rgb(245,147,10)" fg:x="2828" fg:w="3"/><text x="27.0303%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.03%)</title><rect x="26.7803%" y="357" width="0.0284%" height="15" fill="rgb(238,153,13)" fg:x="2828" fg:w="3"/><text x="27.0303%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="26.7803%" y="341" width="0.0284%" height="15" fill="rgb(233,108,0)" fg:x="2828" fg:w="3"/><text x="27.0303%" y="351.50"></text></g><g><title>y2021::d18::main::Snail::has (505 samples, 4.78%)</title><rect x="22.5852%" y="517" width="4.7822%" height="15" fill="rgb(212,157,17)" fg:x="2385" fg:w="505"/><text x="22.8352%" y="527.50">y2021:..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (505 samples, 4.78%)</title><rect x="22.5852%" y="501" width="4.7822%" height="15" fill="rgb(225,213,38)" fg:x="2385" fg:w="505"/><text x="22.8352%" y="511.50">std::c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (496 samples, 4.70%)</title><rect x="22.6705%" y="485" width="4.6970%" height="15" fill="rgb(248,16,11)" fg:x="2394" fg:w="496"/><text x="22.9205%" y="495.50">hashb..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (486 samples, 4.60%)</title><rect x="22.7652%" y="469" width="4.6023%" height="15" fill="rgb(241,33,4)" fg:x="2404" fg:w="486"/><text x="23.0152%" y="479.50">hashb..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (132 samples, 1.25%)</title><rect x="26.1174%" y="453" width="1.2500%" height="15" fill="rgb(222,26,43)" fg:x="2758" fg:w="132"/><text x="26.3674%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (132 samples, 1.25%)</title><rect x="26.1174%" y="437" width="1.2500%" height="15" fill="rgb(243,29,36)" fg:x="2758" fg:w="132"/><text x="26.3674%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (70 samples, 0.66%)</title><rect x="26.7045%" y="421" width="0.6629%" height="15" fill="rgb(241,9,27)" fg:x="2820" fg:w="70"/><text x="26.9545%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (70 samples, 0.66%)</title><rect x="26.7045%" y="405" width="0.6629%" height="15" fill="rgb(205,117,26)" fg:x="2820" fg:w="70"/><text x="26.9545%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (70 samples, 0.66%)</title><rect x="26.7045%" y="389" width="0.6629%" height="15" fill="rgb(209,80,39)" fg:x="2820" fg:w="70"/><text x="26.9545%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (59 samples, 0.56%)</title><rect x="26.8087%" y="373" width="0.5587%" height="15" fill="rgb(239,155,6)" fg:x="2831" fg:w="59"/><text x="27.0587%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (59 samples, 0.56%)</title><rect x="26.8087%" y="357" width="0.5587%" height="15" fill="rgb(212,104,12)" fg:x="2831" fg:w="59"/><text x="27.0587%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (59 samples, 0.56%)</title><rect x="26.8087%" y="341" width="0.5587%" height="15" fill="rgb(234,204,3)" fg:x="2831" fg:w="59"/><text x="27.0587%" y="351.50"></text></g><g><title>core::core_arch::simd::i8x16::new (59 samples, 0.56%)</title><rect x="26.8087%" y="325" width="0.5587%" height="15" fill="rgb(251,218,7)" fg:x="2831" fg:w="59"/><text x="27.0587%" y="335.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.06%)</title><rect x="27.3674%" y="501" width="0.0568%" height="15" fill="rgb(221,81,32)" fg:x="2890" fg:w="6"/><text x="27.6174%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="27.4527%" y="373" width="0.0189%" height="15" fill="rgb(214,152,26)" fg:x="2899" fg:w="2"/><text x="27.7027%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.05%)</title><rect x="27.4432%" y="421" width="0.0473%" height="15" fill="rgb(223,22,3)" fg:x="2898" fg:w="5"/><text x="27.6932%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.05%)</title><rect x="27.4432%" y="405" width="0.0473%" height="15" fill="rgb(207,174,7)" fg:x="2898" fg:w="5"/><text x="27.6932%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.05%)</title><rect x="27.4432%" y="389" width="0.0473%" height="15" fill="rgb(224,19,52)" fg:x="2898" fg:w="5"/><text x="27.6932%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="27.4716%" y="373" width="0.0189%" height="15" fill="rgb(228,24,14)" fg:x="2901" fg:w="2"/><text x="27.7216%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.07%)</title><rect x="27.4432%" y="437" width="0.0663%" height="15" fill="rgb(230,153,43)" fg:x="2898" fg:w="7"/><text x="27.6932%" y="447.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="27.4905%" y="421" width="0.0189%" height="15" fill="rgb(231,106,12)" fg:x="2903" fg:w="2"/><text x="27.7405%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.02%)</title><rect x="27.4905%" y="405" width="0.0189%" height="15" fill="rgb(215,92,2)" fg:x="2903" fg:w="2"/><text x="27.7405%" y="415.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.02%)</title><rect x="27.4905%" y="389" width="0.0189%" height="15" fill="rgb(249,143,25)" fg:x="2903" fg:w="2"/><text x="27.7405%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="27.4905%" y="373" width="0.0189%" height="15" fill="rgb(252,7,35)" fg:x="2903" fg:w="2"/><text x="27.7405%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="27.4905%" y="357" width="0.0189%" height="15" fill="rgb(216,69,40)" fg:x="2903" fg:w="2"/><text x="27.7405%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="27.4905%" y="341" width="0.0189%" height="15" fill="rgb(240,36,33)" fg:x="2903" fg:w="2"/><text x="27.7405%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="27.4905%" y="325" width="0.0189%" height="15" fill="rgb(231,128,14)" fg:x="2903" fg:w="2"/><text x="27.7405%" y="335.50"></text></g><g><title>y2021::d18::main::Snail::get (12 samples, 0.11%)</title><rect x="27.4337%" y="501" width="0.1136%" height="15" fill="rgb(245,143,14)" fg:x="2897" fg:w="12"/><text x="27.6837%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.11%)</title><rect x="27.4337%" y="485" width="0.1136%" height="15" fill="rgb(222,130,28)" fg:x="2897" fg:w="12"/><text x="27.6837%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12 samples, 0.11%)</title><rect x="27.4337%" y="469" width="0.1136%" height="15" fill="rgb(212,10,48)" fg:x="2897" fg:w="12"/><text x="27.6837%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 0.11%)</title><rect x="27.4337%" y="453" width="0.1136%" height="15" fill="rgb(254,118,45)" fg:x="2897" fg:w="12"/><text x="27.6837%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.04%)</title><rect x="27.5095%" y="437" width="0.0379%" height="15" fill="rgb(228,6,45)" fg:x="2905" fg:w="4"/><text x="27.7595%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.04%)</title><rect x="27.5095%" y="421" width="0.0379%" height="15" fill="rgb(241,18,35)" fg:x="2905" fg:w="4"/><text x="27.7595%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.03%)</title><rect x="27.5189%" y="405" width="0.0284%" height="15" fill="rgb(227,214,53)" fg:x="2906" fg:w="3"/><text x="27.7689%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.03%)</title><rect x="27.5189%" y="389" width="0.0284%" height="15" fill="rgb(224,107,51)" fg:x="2906" fg:w="3"/><text x="27.7689%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.03%)</title><rect x="27.5189%" y="373" width="0.0284%" height="15" fill="rgb(248,60,28)" fg:x="2906" fg:w="3"/><text x="27.7689%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.03%)</title><rect x="27.5189%" y="357" width="0.0284%" height="15" fill="rgb(249,101,23)" fg:x="2906" fg:w="3"/><text x="27.7689%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.03%)</title><rect x="27.5189%" y="341" width="0.0284%" height="15" fill="rgb(228,51,19)" fg:x="2906" fg:w="3"/><text x="27.7689%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.03%)</title><rect x="27.5189%" y="325" width="0.0284%" height="15" fill="rgb(213,20,6)" fg:x="2906" fg:w="3"/><text x="27.7689%" y="335.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.03%)</title><rect x="27.5189%" y="309" width="0.0284%" height="15" fill="rgb(212,124,10)" fg:x="2906" fg:w="3"/><text x="27.7689%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.07%)</title><rect x="27.5568%" y="421" width="0.0663%" height="15" fill="rgb(248,3,40)" fg:x="2910" fg:w="7"/><text x="27.8068%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.07%)</title><rect x="27.5568%" y="405" width="0.0663%" height="15" fill="rgb(223,178,23)" fg:x="2910" fg:w="7"/><text x="27.8068%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.07%)</title><rect x="27.5568%" y="389" width="0.0663%" height="15" fill="rgb(240,132,45)" fg:x="2910" fg:w="7"/><text x="27.8068%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.06%)</title><rect x="27.5663%" y="373" width="0.0568%" height="15" fill="rgb(245,164,36)" fg:x="2911" fg:w="6"/><text x="27.8163%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.04%)</title><rect x="27.5852%" y="357" width="0.0379%" height="15" fill="rgb(231,188,53)" fg:x="2913" fg:w="4"/><text x="27.8352%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.09%)</title><rect x="27.5568%" y="437" width="0.0947%" height="15" fill="rgb(237,198,39)" fg:x="2910" fg:w="10"/><text x="27.8068%" y="447.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="27.6231%" y="421" width="0.0284%" height="15" fill="rgb(223,120,35)" fg:x="2917" fg:w="3"/><text x="27.8731%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (3 samples, 0.03%)</title><rect x="27.6231%" y="405" width="0.0284%" height="15" fill="rgb(253,107,49)" fg:x="2917" fg:w="3"/><text x="27.8731%" y="415.50"></text></g><g><title>core::hash::Hasher::write_isize (3 samples, 0.03%)</title><rect x="27.6231%" y="389" width="0.0284%" height="15" fill="rgb(216,44,31)" fg:x="2917" fg:w="3"/><text x="27.8731%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.03%)</title><rect x="27.6231%" y="373" width="0.0284%" height="15" fill="rgb(253,87,21)" fg:x="2917" fg:w="3"/><text x="27.8731%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="27.6231%" y="357" width="0.0284%" height="15" fill="rgb(226,18,2)" fg:x="2917" fg:w="3"/><text x="27.8731%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="27.6231%" y="341" width="0.0284%" height="15" fill="rgb(216,8,46)" fg:x="2917" fg:w="3"/><text x="27.8731%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="27.6231%" y="325" width="0.0284%" height="15" fill="rgb(226,140,39)" fg:x="2917" fg:w="3"/><text x="27.8731%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="27.6326%" y="309" width="0.0189%" height="15" fill="rgb(221,194,54)" fg:x="2918" fg:w="2"/><text x="27.8826%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="27.6326%" y="293" width="0.0189%" height="15" fill="rgb(213,92,11)" fg:x="2918" fg:w="2"/><text x="27.8826%" y="303.50"></text></g><g><title>y2021::d18::main::Snail::has (15 samples, 0.14%)</title><rect x="27.5473%" y="501" width="0.1420%" height="15" fill="rgb(229,162,46)" fg:x="2909" fg:w="15"/><text x="27.7973%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (15 samples, 0.14%)</title><rect x="27.5473%" y="485" width="0.1420%" height="15" fill="rgb(214,111,36)" fg:x="2909" fg:w="15"/><text x="27.7973%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (14 samples, 0.13%)</title><rect x="27.5568%" y="469" width="0.1326%" height="15" fill="rgb(207,6,21)" fg:x="2910" fg:w="14"/><text x="27.8068%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.13%)</title><rect x="27.5568%" y="453" width="0.1326%" height="15" fill="rgb(213,127,38)" fg:x="2910" fg:w="14"/><text x="27.8068%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.04%)</title><rect x="27.6515%" y="437" width="0.0379%" height="15" fill="rgb(238,118,32)" fg:x="2920" fg:w="4"/><text x="27.9015%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.04%)</title><rect x="27.6515%" y="421" width="0.0379%" height="15" fill="rgb(240,139,39)" fg:x="2920" fg:w="4"/><text x="27.9015%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="27.8220%" y="405" width="0.0189%" height="15" fill="rgb(235,10,37)" fg:x="2938" fg:w="2"/><text x="28.0720%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.06%)</title><rect x="27.7936%" y="421" width="0.0568%" height="15" fill="rgb(249,171,38)" fg:x="2935" fg:w="6"/><text x="28.0436%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (3 samples, 0.03%)</title><rect x="27.8693%" y="341" width="0.0284%" height="15" fill="rgb(242,144,32)" fg:x="2943" fg:w="3"/><text x="28.1193%" y="351.50"></text></g><g><title>y2021::d18::main::Snail::explode (626 samples, 5.93%)</title><rect x="21.9792%" y="533" width="5.9280%" height="15" fill="rgb(217,117,21)" fg:x="2321" fg:w="626"/><text x="22.2292%" y="543.50">y2021::d..</text></g><g><title>y2021::d18::main::Snail::prune (57 samples, 0.54%)</title><rect x="27.3674%" y="517" width="0.5398%" height="15" fill="rgb(249,87,1)" fg:x="2890" fg:w="57"/><text x="27.6174%" y="527.50"></text></g><g><title>y2021::d18::main::Snail::remove (23 samples, 0.22%)</title><rect x="27.6894%" y="501" width="0.2178%" height="15" fill="rgb(248,196,48)" fg:x="2924" fg:w="23"/><text x="27.9394%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (23 samples, 0.22%)</title><rect x="27.6894%" y="485" width="0.2178%" height="15" fill="rgb(251,206,33)" fg:x="2924" fg:w="23"/><text x="27.9394%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (23 samples, 0.22%)</title><rect x="27.6894%" y="469" width="0.2178%" height="15" fill="rgb(232,141,28)" fg:x="2924" fg:w="23"/><text x="27.9394%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (14 samples, 0.13%)</title><rect x="27.7746%" y="453" width="0.1326%" height="15" fill="rgb(209,167,14)" fg:x="2933" fg:w="14"/><text x="28.0246%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (13 samples, 0.12%)</title><rect x="27.7841%" y="437" width="0.1231%" height="15" fill="rgb(225,11,50)" fg:x="2934" fg:w="13"/><text x="28.0341%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (6 samples, 0.06%)</title><rect x="27.8504%" y="421" width="0.0568%" height="15" fill="rgb(209,50,20)" fg:x="2941" fg:w="6"/><text x="28.1004%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (6 samples, 0.06%)</title><rect x="27.8504%" y="405" width="0.0568%" height="15" fill="rgb(212,17,46)" fg:x="2941" fg:w="6"/><text x="28.1004%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::erase (6 samples, 0.06%)</title><rect x="27.8504%" y="389" width="0.0568%" height="15" fill="rgb(216,101,39)" fg:x="2941" fg:w="6"/><text x="28.1004%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (4 samples, 0.04%)</title><rect x="27.8693%" y="373" width="0.0379%" height="15" fill="rgb(212,228,48)" fg:x="2943" fg:w="4"/><text x="28.1193%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.04%)</title><rect x="27.8693%" y="357" width="0.0379%" height="15" fill="rgb(250,6,50)" fg:x="2943" fg:w="4"/><text x="28.1193%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.07%)</title><rect x="28.0587%" y="389" width="0.0663%" height="15" fill="rgb(250,160,48)" fg:x="2963" fg:w="7"/><text x="28.3087%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.09%)</title><rect x="28.0492%" y="405" width="0.0947%" height="15" fill="rgb(244,216,33)" fg:x="2962" fg:w="10"/><text x="28.2992%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="28.1250%" y="389" width="0.0189%" height="15" fill="rgb(207,157,5)" fg:x="2970" fg:w="2"/><text x="28.3750%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.11%)</title><rect x="28.1629%" y="389" width="0.1136%" height="15" fill="rgb(228,199,8)" fg:x="2974" fg:w="12"/><text x="28.4129%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (36 samples, 0.34%)</title><rect x="28.0019%" y="453" width="0.3409%" height="15" fill="rgb(227,80,20)" fg:x="2957" fg:w="36"/><text x="28.2519%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (36 samples, 0.34%)</title><rect x="28.0019%" y="437" width="0.3409%" height="15" fill="rgb(222,9,33)" fg:x="2957" fg:w="36"/><text x="28.2519%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (36 samples, 0.34%)</title><rect x="28.0019%" y="421" width="0.3409%" height="15" fill="rgb(239,44,28)" fg:x="2957" fg:w="36"/><text x="28.2519%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21 samples, 0.20%)</title><rect x="28.1439%" y="405" width="0.1989%" height="15" fill="rgb(249,187,43)" fg:x="2972" fg:w="21"/><text x="28.3939%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.07%)</title><rect x="28.2765%" y="389" width="0.0663%" height="15" fill="rgb(216,141,28)" fg:x="2986" fg:w="7"/><text x="28.5265%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (56 samples, 0.53%)</title><rect x="27.9735%" y="469" width="0.5303%" height="15" fill="rgb(230,154,53)" fg:x="2954" fg:w="56"/><text x="28.2235%" y="479.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (17 samples, 0.16%)</title><rect x="28.3428%" y="453" width="0.1610%" height="15" fill="rgb(227,82,4)" fg:x="2993" fg:w="17"/><text x="28.5928%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (17 samples, 0.16%)</title><rect x="28.3428%" y="437" width="0.1610%" height="15" fill="rgb(220,107,16)" fg:x="2993" fg:w="17"/><text x="28.5928%" y="447.50"></text></g><g><title>core::hash::Hasher::write_isize (17 samples, 0.16%)</title><rect x="28.3428%" y="421" width="0.1610%" height="15" fill="rgb(207,187,2)" fg:x="2993" fg:w="17"/><text x="28.5928%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (17 samples, 0.16%)</title><rect x="28.3428%" y="405" width="0.1610%" height="15" fill="rgb(210,162,52)" fg:x="2993" fg:w="17"/><text x="28.5928%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.16%)</title><rect x="28.3428%" y="389" width="0.1610%" height="15" fill="rgb(217,216,49)" fg:x="2993" fg:w="17"/><text x="28.5928%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.16%)</title><rect x="28.3428%" y="373" width="0.1610%" height="15" fill="rgb(218,146,49)" fg:x="2993" fg:w="17"/><text x="28.5928%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.16%)</title><rect x="28.3428%" y="357" width="0.1610%" height="15" fill="rgb(216,55,40)" fg:x="2993" fg:w="17"/><text x="28.5928%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="28.4659%" y="341" width="0.0379%" height="15" fill="rgb(208,196,21)" fg:x="3006" fg:w="4"/><text x="28.7159%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.12%)</title><rect x="28.6837%" y="437" width="0.1231%" height="15" fill="rgb(242,117,42)" fg:x="3029" fg:w="13"/><text x="28.9337%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.12%)</title><rect x="28.6837%" y="421" width="0.1231%" height="15" fill="rgb(210,11,23)" fg:x="3029" fg:w="13"/><text x="28.9337%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.12%)</title><rect x="28.6837%" y="405" width="0.1231%" height="15" fill="rgb(217,110,2)" fg:x="3029" fg:w="13"/><text x="28.9337%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.06%)</title><rect x="28.7500%" y="389" width="0.0568%" height="15" fill="rgb(229,77,54)" fg:x="3036" fg:w="6"/><text x="29.0000%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (3 samples, 0.03%)</title><rect x="28.8163%" y="437" width="0.0284%" height="15" fill="rgb(218,53,16)" fg:x="3043" fg:w="3"/><text x="29.0663%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (3 samples, 0.03%)</title><rect x="28.8163%" y="421" width="0.0284%" height="15" fill="rgb(215,38,13)" fg:x="3043" fg:w="3"/><text x="29.0663%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.03%)</title><rect x="28.8163%" y="405" width="0.0284%" height="15" fill="rgb(235,42,18)" fg:x="3043" fg:w="3"/><text x="29.0663%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.03%)</title><rect x="28.8163%" y="389" width="0.0284%" height="15" fill="rgb(219,66,54)" fg:x="3043" fg:w="3"/><text x="29.0663%" y="399.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (116 samples, 1.10%)</title><rect x="27.9072%" y="533" width="1.0985%" height="15" fill="rgb(222,205,4)" fg:x="2947" fg:w="116"/><text x="28.1572%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (116 samples, 1.10%)</title><rect x="27.9072%" y="517" width="1.0985%" height="15" fill="rgb(227,213,46)" fg:x="2947" fg:w="116"/><text x="28.1572%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (114 samples, 1.08%)</title><rect x="27.9261%" y="501" width="1.0795%" height="15" fill="rgb(250,145,42)" fg:x="2949" fg:w="114"/><text x="28.1761%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (113 samples, 1.07%)</title><rect x="27.9356%" y="485" width="1.0701%" height="15" fill="rgb(219,15,2)" fg:x="2950" fg:w="113"/><text x="28.1856%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (53 samples, 0.50%)</title><rect x="28.5038%" y="469" width="0.5019%" height="15" fill="rgb(231,181,52)" fg:x="3010" fg:w="53"/><text x="28.7538%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (53 samples, 0.50%)</title><rect x="28.5038%" y="453" width="0.5019%" height="15" fill="rgb(235,1,42)" fg:x="3010" fg:w="53"/><text x="28.7538%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (17 samples, 0.16%)</title><rect x="28.8447%" y="437" width="0.1610%" height="15" fill="rgb(249,88,27)" fg:x="3046" fg:w="17"/><text x="29.0947%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (17 samples, 0.16%)</title><rect x="28.8447%" y="421" width="0.1610%" height="15" fill="rgb(235,145,16)" fg:x="3046" fg:w="17"/><text x="29.0947%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (17 samples, 0.16%)</title><rect x="28.8447%" y="405" width="0.1610%" height="15" fill="rgb(237,114,19)" fg:x="3046" fg:w="17"/><text x="29.0947%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (17 samples, 0.16%)</title><rect x="28.8447%" y="389" width="0.1610%" height="15" fill="rgb(238,51,50)" fg:x="3046" fg:w="17"/><text x="29.0947%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (17 samples, 0.16%)</title><rect x="28.8447%" y="373" width="0.1610%" height="15" fill="rgb(205,194,25)" fg:x="3046" fg:w="17"/><text x="29.0947%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (17 samples, 0.16%)</title><rect x="28.8447%" y="357" width="0.1610%" height="15" fill="rgb(215,203,17)" fg:x="3046" fg:w="17"/><text x="29.0947%" y="367.50"></text></g><g><title>core::core_arch::simd::i8x16::new (17 samples, 0.16%)</title><rect x="28.8447%" y="341" width="0.1610%" height="15" fill="rgb(233,112,49)" fg:x="3046" fg:w="17"/><text x="29.0947%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.06%)</title><rect x="29.3277%" y="389" width="0.0568%" height="15" fill="rgb(241,130,26)" fg:x="3097" fg:w="6"/><text x="29.5777%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.11%)</title><rect x="29.3277%" y="405" width="0.1136%" height="15" fill="rgb(252,223,19)" fg:x="3097" fg:w="12"/><text x="29.5777%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.06%)</title><rect x="29.3845%" y="389" width="0.0568%" height="15" fill="rgb(211,95,25)" fg:x="3103" fg:w="6"/><text x="29.6345%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (31 samples, 0.29%)</title><rect x="29.5549%" y="389" width="0.2936%" height="15" fill="rgb(251,182,27)" fg:x="3121" fg:w="31"/><text x="29.8049%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (92 samples, 0.87%)</title><rect x="29.1193%" y="453" width="0.8712%" height="15" fill="rgb(238,24,4)" fg:x="3075" fg:w="92"/><text x="29.3693%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (92 samples, 0.87%)</title><rect x="29.1193%" y="437" width="0.8712%" height="15" fill="rgb(224,220,25)" fg:x="3075" fg:w="92"/><text x="29.3693%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (92 samples, 0.87%)</title><rect x="29.1193%" y="421" width="0.8712%" height="15" fill="rgb(239,133,26)" fg:x="3075" fg:w="92"/><text x="29.3693%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (58 samples, 0.55%)</title><rect x="29.4413%" y="405" width="0.5492%" height="15" fill="rgb(211,94,48)" fg:x="3109" fg:w="58"/><text x="29.6913%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (15 samples, 0.14%)</title><rect x="29.8485%" y="389" width="0.1420%" height="15" fill="rgb(239,87,6)" fg:x="3152" fg:w="15"/><text x="30.0985%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (17 samples, 0.16%)</title><rect x="29.9905%" y="453" width="0.1610%" height="15" fill="rgb(227,62,0)" fg:x="3167" fg:w="17"/><text x="30.2405%" y="463.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (15 samples, 0.14%)</title><rect x="30.0095%" y="437" width="0.1420%" height="15" fill="rgb(211,226,4)" fg:x="3169" fg:w="15"/><text x="30.2595%" y="447.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (13 samples, 0.12%)</title><rect x="30.0284%" y="421" width="0.1231%" height="15" fill="rgb(253,38,52)" fg:x="3171" fg:w="13"/><text x="30.2784%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (13 samples, 0.12%)</title><rect x="30.0284%" y="405" width="0.1231%" height="15" fill="rgb(229,126,40)" fg:x="3171" fg:w="13"/><text x="30.2784%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.10%)</title><rect x="30.4261%" y="325" width="0.1042%" height="15" fill="rgb(229,165,44)" fg:x="3213" fg:w="11"/><text x="30.6761%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (18 samples, 0.17%)</title><rect x="30.3788%" y="341" width="0.1705%" height="15" fill="rgb(247,95,47)" fg:x="3208" fg:w="18"/><text x="30.6288%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="30.5303%" y="325" width="0.0189%" height="15" fill="rgb(216,140,30)" fg:x="3224" fg:w="2"/><text x="30.7803%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.04%)</title><rect x="30.5492%" y="341" width="0.0379%" height="15" fill="rgb(246,214,8)" fg:x="3226" fg:w="4"/><text x="30.7992%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (159 samples, 1.51%)</title><rect x="29.1004%" y="469" width="1.5057%" height="15" fill="rgb(227,224,15)" fg:x="3073" fg:w="159"/><text x="29.3504%" y="479.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (48 samples, 0.45%)</title><rect x="30.1515%" y="453" width="0.4545%" height="15" fill="rgb(233,175,4)" fg:x="3184" fg:w="48"/><text x="30.4015%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (47 samples, 0.45%)</title><rect x="30.1610%" y="437" width="0.4451%" height="15" fill="rgb(221,66,45)" fg:x="3185" fg:w="47"/><text x="30.4110%" y="447.50"></text></g><g><title>core::hash::Hasher::write_isize (47 samples, 0.45%)</title><rect x="30.1610%" y="421" width="0.4451%" height="15" fill="rgb(221,178,18)" fg:x="3185" fg:w="47"/><text x="30.4110%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (47 samples, 0.45%)</title><rect x="30.1610%" y="405" width="0.4451%" height="15" fill="rgb(213,81,29)" fg:x="3185" fg:w="47"/><text x="30.4110%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (46 samples, 0.44%)</title><rect x="30.1705%" y="389" width="0.4356%" height="15" fill="rgb(220,89,49)" fg:x="3186" fg:w="46"/><text x="30.4205%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (46 samples, 0.44%)</title><rect x="30.1705%" y="373" width="0.4356%" height="15" fill="rgb(227,60,33)" fg:x="3186" fg:w="46"/><text x="30.4205%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (46 samples, 0.44%)</title><rect x="30.1705%" y="357" width="0.4356%" height="15" fill="rgb(205,113,12)" fg:x="3186" fg:w="46"/><text x="30.4205%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="30.5871%" y="341" width="0.0189%" height="15" fill="rgb(211,32,1)" fg:x="3230" fg:w="2"/><text x="30.8371%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.15%)</title><rect x="31.2216%" y="405" width="0.1515%" height="15" fill="rgb(246,2,12)" fg:x="3297" fg:w="16"/><text x="31.4716%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (12 samples, 0.11%)</title><rect x="31.2595%" y="389" width="0.1136%" height="15" fill="rgb(243,37,27)" fg:x="3301" fg:w="12"/><text x="31.5095%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.18%)</title><rect x="31.2216%" y="437" width="0.1799%" height="15" fill="rgb(248,211,31)" fg:x="3297" fg:w="19"/><text x="31.4716%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.18%)</title><rect x="31.2216%" y="421" width="0.1799%" height="15" fill="rgb(242,146,47)" fg:x="3297" fg:w="19"/><text x="31.4716%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2 samples, 0.02%)</title><rect x="31.3826%" y="405" width="0.0189%" height="15" fill="rgb(206,70,20)" fg:x="3314" fg:w="2"/><text x="31.6326%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="31.3826%" y="389" width="0.0189%" height="15" fill="rgb(215,10,51)" fg:x="3314" fg:w="2"/><text x="31.6326%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="31.3826%" y="373" width="0.0189%" height="15" fill="rgb(243,178,53)" fg:x="3314" fg:w="2"/><text x="31.6326%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.03%)</title><rect x="31.4110%" y="389" width="0.0284%" height="15" fill="rgb(233,221,20)" fg:x="3317" fg:w="3"/><text x="31.6610%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.03%)</title><rect x="31.4110%" y="373" width="0.0284%" height="15" fill="rgb(218,95,35)" fg:x="3317" fg:w="3"/><text x="31.6610%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="31.4110%" y="357" width="0.0284%" height="15" fill="rgb(229,13,5)" fg:x="3317" fg:w="3"/><text x="31.6610%" y="367.50"></text></g><g><title>y2021::d18::main::Snail::explode (1,047 samples, 9.91%)</title><rect x="21.8655%" y="549" width="9.9148%" height="15" fill="rgb(252,164,30)" fg:x="2309" fg:w="1047"/><text x="22.1155%" y="559.50">y2021::d18::ma..</text></g><g><title>y2021::d18::main::Snail::has (293 samples, 2.77%)</title><rect x="29.0057%" y="533" width="2.7746%" height="15" fill="rgb(232,68,36)" fg:x="3063" fg:w="293"/><text x="29.2557%" y="543.50">y2..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (293 samples, 2.77%)</title><rect x="29.0057%" y="517" width="2.7746%" height="15" fill="rgb(219,59,54)" fg:x="3063" fg:w="293"/><text x="29.2557%" y="527.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (291 samples, 2.76%)</title><rect x="29.0246%" y="501" width="2.7557%" height="15" fill="rgb(250,92,33)" fg:x="3065" fg:w="291"/><text x="29.2746%" y="511.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (291 samples, 2.76%)</title><rect x="29.0246%" y="485" width="2.7557%" height="15" fill="rgb(229,162,54)" fg:x="3065" fg:w="291"/><text x="29.2746%" y="495.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (124 samples, 1.17%)</title><rect x="30.6061%" y="469" width="1.1742%" height="15" fill="rgb(244,114,52)" fg:x="3232" fg:w="124"/><text x="30.8561%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (124 samples, 1.17%)</title><rect x="30.6061%" y="453" width="1.1742%" height="15" fill="rgb(212,211,43)" fg:x="3232" fg:w="124"/><text x="30.8561%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (40 samples, 0.38%)</title><rect x="31.4015%" y="437" width="0.3788%" height="15" fill="rgb(226,147,8)" fg:x="3316" fg:w="40"/><text x="31.6515%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (40 samples, 0.38%)</title><rect x="31.4015%" y="421" width="0.3788%" height="15" fill="rgb(226,23,13)" fg:x="3316" fg:w="40"/><text x="31.6515%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (40 samples, 0.38%)</title><rect x="31.4015%" y="405" width="0.3788%" height="15" fill="rgb(240,63,4)" fg:x="3316" fg:w="40"/><text x="31.6515%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (36 samples, 0.34%)</title><rect x="31.4394%" y="389" width="0.3409%" height="15" fill="rgb(221,1,32)" fg:x="3320" fg:w="36"/><text x="31.6894%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (36 samples, 0.34%)</title><rect x="31.4394%" y="373" width="0.3409%" height="15" fill="rgb(242,117,10)" fg:x="3320" fg:w="36"/><text x="31.6894%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (36 samples, 0.34%)</title><rect x="31.4394%" y="357" width="0.3409%" height="15" fill="rgb(249,172,44)" fg:x="3320" fg:w="36"/><text x="31.6894%" y="367.50"></text></g><g><title>core::core_arch::simd::i8x16::new (36 samples, 0.34%)</title><rect x="31.4394%" y="341" width="0.3409%" height="15" fill="rgb(244,46,45)" fg:x="3320" fg:w="36"/><text x="31.6894%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="31.9413%" y="405" width="0.0284%" height="15" fill="rgb(206,43,17)" fg:x="3373" fg:w="3"/><text x="32.1913%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.04%)</title><rect x="31.9413%" y="421" width="0.0379%" height="15" fill="rgb(239,218,39)" fg:x="3373" fg:w="4"/><text x="32.1913%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.11%)</title><rect x="31.9792%" y="405" width="0.1136%" height="15" fill="rgb(208,169,54)" fg:x="3377" fg:w="12"/><text x="32.2292%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (27 samples, 0.26%)</title><rect x="31.8655%" y="469" width="0.2557%" height="15" fill="rgb(247,25,42)" fg:x="3365" fg:w="27"/><text x="32.1155%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (27 samples, 0.26%)</title><rect x="31.8655%" y="453" width="0.2557%" height="15" fill="rgb(226,23,31)" fg:x="3365" fg:w="27"/><text x="32.1155%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (27 samples, 0.26%)</title><rect x="31.8655%" y="437" width="0.2557%" height="15" fill="rgb(247,16,28)" fg:x="3365" fg:w="27"/><text x="32.1155%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.14%)</title><rect x="31.9792%" y="421" width="0.1420%" height="15" fill="rgb(231,147,38)" fg:x="3377" fg:w="15"/><text x="32.2292%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="32.0928%" y="405" width="0.0284%" height="15" fill="rgb(253,81,48)" fg:x="3389" fg:w="3"/><text x="32.3428%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="32.1212%" y="469" width="0.0189%" height="15" fill="rgb(249,222,43)" fg:x="3392" fg:w="2"/><text x="32.3712%" y="479.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.02%)</title><rect x="32.1212%" y="453" width="0.0189%" height="15" fill="rgb(221,3,27)" fg:x="3392" fg:w="2"/><text x="32.3712%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (35 samples, 0.33%)</title><rect x="31.8655%" y="485" width="0.3314%" height="15" fill="rgb(228,180,5)" fg:x="3365" fg:w="35"/><text x="32.1155%" y="495.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (6 samples, 0.06%)</title><rect x="32.1402%" y="469" width="0.0568%" height="15" fill="rgb(227,131,42)" fg:x="3394" fg:w="6"/><text x="32.3902%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (6 samples, 0.06%)</title><rect x="32.1402%" y="453" width="0.0568%" height="15" fill="rgb(212,3,39)" fg:x="3394" fg:w="6"/><text x="32.3902%" y="463.50"></text></g><g><title>core::hash::Hasher::write_isize (6 samples, 0.06%)</title><rect x="32.1402%" y="437" width="0.0568%" height="15" fill="rgb(226,45,5)" fg:x="3394" fg:w="6"/><text x="32.3902%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (6 samples, 0.06%)</title><rect x="32.1402%" y="421" width="0.0568%" height="15" fill="rgb(215,167,45)" fg:x="3394" fg:w="6"/><text x="32.3902%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="32.1402%" y="405" width="0.0568%" height="15" fill="rgb(250,218,53)" fg:x="3394" fg:w="6"/><text x="32.3902%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="32.1402%" y="389" width="0.0568%" height="15" fill="rgb(207,140,0)" fg:x="3394" fg:w="6"/><text x="32.3902%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="32.1402%" y="373" width="0.0568%" height="15" fill="rgb(238,133,51)" fg:x="3394" fg:w="6"/><text x="32.3902%" y="383.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.03%)</title><rect x="32.1686%" y="357" width="0.0284%" height="15" fill="rgb(218,203,53)" fg:x="3397" fg:w="3"/><text x="32.4186%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="32.3958%" y="453" width="0.0568%" height="15" fill="rgb(226,184,25)" fg:x="3421" fg:w="6"/><text x="32.6458%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="32.3958%" y="437" width="0.0568%" height="15" fill="rgb(231,121,21)" fg:x="3421" fg:w="6"/><text x="32.6458%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="32.3958%" y="421" width="0.0568%" height="15" fill="rgb(251,14,34)" fg:x="3421" fg:w="6"/><text x="32.6458%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.04%)</title><rect x="32.4148%" y="405" width="0.0379%" height="15" fill="rgb(249,193,11)" fg:x="3423" fg:w="4"/><text x="32.6648%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (6 samples, 0.06%)</title><rect x="32.4621%" y="453" width="0.0568%" height="15" fill="rgb(220,172,37)" fg:x="3428" fg:w="6"/><text x="32.7121%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (6 samples, 0.06%)</title><rect x="32.4621%" y="437" width="0.0568%" height="15" fill="rgb(231,229,43)" fg:x="3428" fg:w="6"/><text x="32.7121%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (6 samples, 0.06%)</title><rect x="32.4621%" y="421" width="0.0568%" height="15" fill="rgb(250,161,5)" fg:x="3428" fg:w="6"/><text x="32.7121%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.06%)</title><rect x="32.4621%" y="405" width="0.0568%" height="15" fill="rgb(218,225,18)" fg:x="3428" fg:w="6"/><text x="32.7121%" y="415.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (85 samples, 0.80%)</title><rect x="31.7803%" y="549" width="0.8049%" height="15" fill="rgb(245,45,42)" fg:x="3356" fg:w="85"/><text x="32.0303%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (85 samples, 0.80%)</title><rect x="31.7803%" y="533" width="0.8049%" height="15" fill="rgb(211,115,1)" fg:x="3356" fg:w="85"/><text x="32.0303%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (82 samples, 0.78%)</title><rect x="31.8087%" y="517" width="0.7765%" height="15" fill="rgb(248,133,52)" fg:x="3359" fg:w="82"/><text x="32.0587%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (79 samples, 0.75%)</title><rect x="31.8371%" y="501" width="0.7481%" height="15" fill="rgb(238,100,21)" fg:x="3362" fg:w="79"/><text x="32.0871%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (41 samples, 0.39%)</title><rect x="32.1970%" y="485" width="0.3883%" height="15" fill="rgb(247,144,11)" fg:x="3400" fg:w="41"/><text x="32.4470%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (41 samples, 0.39%)</title><rect x="32.1970%" y="469" width="0.3883%" height="15" fill="rgb(206,164,16)" fg:x="3400" fg:w="41"/><text x="32.4470%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (7 samples, 0.07%)</title><rect x="32.5189%" y="453" width="0.0663%" height="15" fill="rgb(222,34,3)" fg:x="3434" fg:w="7"/><text x="32.7689%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (7 samples, 0.07%)</title><rect x="32.5189%" y="437" width="0.0663%" height="15" fill="rgb(248,82,4)" fg:x="3434" fg:w="7"/><text x="32.7689%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (7 samples, 0.07%)</title><rect x="32.5189%" y="421" width="0.0663%" height="15" fill="rgb(228,81,46)" fg:x="3434" fg:w="7"/><text x="32.7689%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.06%)</title><rect x="32.5284%" y="405" width="0.0568%" height="15" fill="rgb(227,67,47)" fg:x="3435" fg:w="6"/><text x="32.7784%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (6 samples, 0.06%)</title><rect x="32.5284%" y="389" width="0.0568%" height="15" fill="rgb(215,93,53)" fg:x="3435" fg:w="6"/><text x="32.7784%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (6 samples, 0.06%)</title><rect x="32.5284%" y="373" width="0.0568%" height="15" fill="rgb(248,194,39)" fg:x="3435" fg:w="6"/><text x="32.7784%" y="383.50"></text></g><g><title>core::core_arch::simd::i8x16::new (6 samples, 0.06%)</title><rect x="32.5284%" y="357" width="0.0568%" height="15" fill="rgb(215,5,19)" fg:x="3435" fg:w="6"/><text x="32.7784%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.06%)</title><rect x="32.7746%" y="405" width="0.0568%" height="15" fill="rgb(226,215,51)" fg:x="3461" fg:w="6"/><text x="33.0246%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.09%)</title><rect x="32.7652%" y="421" width="0.0947%" height="15" fill="rgb(225,56,26)" fg:x="3460" fg:w="10"/><text x="33.0152%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="32.8314%" y="405" width="0.0284%" height="15" fill="rgb(222,75,29)" fg:x="3467" fg:w="3"/><text x="33.0814%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (22 samples, 0.21%)</title><rect x="32.9072%" y="405" width="0.2083%" height="15" fill="rgb(236,139,6)" fg:x="3475" fg:w="22"/><text x="33.1572%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (54 samples, 0.51%)</title><rect x="32.6326%" y="469" width="0.5114%" height="15" fill="rgb(223,137,36)" fg:x="3446" fg:w="54"/><text x="32.8826%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (54 samples, 0.51%)</title><rect x="32.6326%" y="453" width="0.5114%" height="15" fill="rgb(226,99,2)" fg:x="3446" fg:w="54"/><text x="32.8826%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (54 samples, 0.51%)</title><rect x="32.6326%" y="437" width="0.5114%" height="15" fill="rgb(206,133,23)" fg:x="3446" fg:w="54"/><text x="32.8826%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (30 samples, 0.28%)</title><rect x="32.8598%" y="421" width="0.2841%" height="15" fill="rgb(243,173,15)" fg:x="3470" fg:w="30"/><text x="33.1098%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="33.1155%" y="405" width="0.0284%" height="15" fill="rgb(228,69,28)" fg:x="3497" fg:w="3"/><text x="33.3655%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (10 samples, 0.09%)</title><rect x="33.1439%" y="469" width="0.0947%" height="15" fill="rgb(212,51,22)" fg:x="3500" fg:w="10"/><text x="33.3939%" y="479.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.05%)</title><rect x="33.1913%" y="453" width="0.0473%" height="15" fill="rgb(227,113,0)" fg:x="3505" fg:w="5"/><text x="33.4413%" y="463.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.05%)</title><rect x="33.1913%" y="437" width="0.0473%" height="15" fill="rgb(252,84,27)" fg:x="3505" fg:w="5"/><text x="33.4413%" y="447.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.05%)</title><rect x="33.1913%" y="421" width="0.0473%" height="15" fill="rgb(223,145,39)" fg:x="3505" fg:w="5"/><text x="33.4413%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.11%)</title><rect x="33.3428%" y="341" width="0.1136%" height="15" fill="rgb(239,219,30)" fg:x="3521" fg:w="12"/><text x="33.5928%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.13%)</title><rect x="33.3333%" y="357" width="0.1326%" height="15" fill="rgb(224,196,39)" fg:x="3520" fg:w="14"/><text x="33.5833%" y="367.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.03%)</title><rect x="33.4659%" y="357" width="0.0284%" height="15" fill="rgb(205,35,43)" fg:x="3534" fg:w="3"/><text x="33.7159%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (97 samples, 0.92%)</title><rect x="32.6136%" y="485" width="0.9186%" height="15" fill="rgb(228,201,21)" fg:x="3444" fg:w="97"/><text x="32.8636%" y="495.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (31 samples, 0.29%)</title><rect x="33.2386%" y="469" width="0.2936%" height="15" fill="rgb(237,118,16)" fg:x="3510" fg:w="31"/><text x="33.4886%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (31 samples, 0.29%)</title><rect x="33.2386%" y="453" width="0.2936%" height="15" fill="rgb(241,17,19)" fg:x="3510" fg:w="31"/><text x="33.4886%" y="463.50"></text></g><g><title>core::hash::Hasher::write_isize (31 samples, 0.29%)</title><rect x="33.2386%" y="437" width="0.2936%" height="15" fill="rgb(214,10,25)" fg:x="3510" fg:w="31"/><text x="33.4886%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (31 samples, 0.29%)</title><rect x="33.2386%" y="421" width="0.2936%" height="15" fill="rgb(238,37,29)" fg:x="3510" fg:w="31"/><text x="33.4886%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.28%)</title><rect x="33.2481%" y="405" width="0.2841%" height="15" fill="rgb(253,83,25)" fg:x="3511" fg:w="30"/><text x="33.4981%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (30 samples, 0.28%)</title><rect x="33.2481%" y="389" width="0.2841%" height="15" fill="rgb(234,192,12)" fg:x="3511" fg:w="30"/><text x="33.4981%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 0.28%)</title><rect x="33.2481%" y="373" width="0.2841%" height="15" fill="rgb(241,216,45)" fg:x="3511" fg:w="30"/><text x="33.4981%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="33.4943%" y="357" width="0.0379%" height="15" fill="rgb(242,22,33)" fg:x="3537" fg:w="4"/><text x="33.7443%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.08%)</title><rect x="33.8826%" y="421" width="0.0758%" height="15" fill="rgb(231,105,49)" fg:x="3578" fg:w="8"/><text x="34.1326%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.08%)</title><rect x="33.8826%" y="405" width="0.0758%" height="15" fill="rgb(218,204,15)" fg:x="3578" fg:w="8"/><text x="34.1326%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.09%)</title><rect x="33.8826%" y="453" width="0.0852%" height="15" fill="rgb(235,138,41)" fg:x="3578" fg:w="9"/><text x="34.1326%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.09%)</title><rect x="33.8826%" y="437" width="0.0852%" height="15" fill="rgb(246,0,9)" fg:x="3578" fg:w="9"/><text x="34.1326%" y="447.50"></text></g><g><title>y2021::d18::main::Snail::explode (1,302 samples, 12.33%)</title><rect x="21.7235%" y="565" width="12.3295%" height="15" fill="rgb(210,74,4)" fg:x="2294" fg:w="1302"/><text x="21.9735%" y="575.50">y2021::d18::main::..</text></g><g><title>y2021::d18::main::Snail::has (155 samples, 1.47%)</title><rect x="32.5852%" y="549" width="1.4678%" height="15" fill="rgb(250,60,41)" fg:x="3441" fg:w="155"/><text x="32.8352%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (155 samples, 1.47%)</title><rect x="32.5852%" y="533" width="1.4678%" height="15" fill="rgb(220,115,12)" fg:x="3441" fg:w="155"/><text x="32.8352%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (154 samples, 1.46%)</title><rect x="32.5947%" y="517" width="1.4583%" height="15" fill="rgb(237,100,13)" fg:x="3442" fg:w="154"/><text x="32.8447%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (154 samples, 1.46%)</title><rect x="32.5947%" y="501" width="1.4583%" height="15" fill="rgb(213,55,26)" fg:x="3442" fg:w="154"/><text x="32.8447%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (55 samples, 0.52%)</title><rect x="33.5322%" y="485" width="0.5208%" height="15" fill="rgb(216,17,4)" fg:x="3541" fg:w="55"/><text x="33.7822%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (55 samples, 0.52%)</title><rect x="33.5322%" y="469" width="0.5208%" height="15" fill="rgb(220,153,47)" fg:x="3541" fg:w="55"/><text x="33.7822%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (9 samples, 0.09%)</title><rect x="33.9678%" y="453" width="0.0852%" height="15" fill="rgb(215,131,9)" fg:x="3587" fg:w="9"/><text x="34.2178%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (9 samples, 0.09%)</title><rect x="33.9678%" y="437" width="0.0852%" height="15" fill="rgb(233,46,42)" fg:x="3587" fg:w="9"/><text x="34.2178%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (9 samples, 0.09%)</title><rect x="33.9678%" y="421" width="0.0852%" height="15" fill="rgb(226,86,7)" fg:x="3587" fg:w="9"/><text x="34.2178%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (9 samples, 0.09%)</title><rect x="33.9678%" y="405" width="0.0852%" height="15" fill="rgb(239,226,21)" fg:x="3587" fg:w="9"/><text x="34.2178%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (9 samples, 0.09%)</title><rect x="33.9678%" y="389" width="0.0852%" height="15" fill="rgb(244,137,22)" fg:x="3587" fg:w="9"/><text x="34.2178%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (9 samples, 0.09%)</title><rect x="33.9678%" y="373" width="0.0852%" height="15" fill="rgb(211,139,35)" fg:x="3587" fg:w="9"/><text x="34.2178%" y="383.50"></text></g><g><title>core::core_arch::simd::i8x16::new (9 samples, 0.09%)</title><rect x="33.9678%" y="357" width="0.0852%" height="15" fill="rgb(214,62,50)" fg:x="3587" fg:w="9"/><text x="34.2178%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="34.1098%" y="437" width="0.0189%" height="15" fill="rgb(212,113,44)" fg:x="3602" fg:w="2"/><text x="34.3598%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="34.1098%" y="421" width="0.0189%" height="15" fill="rgb(226,150,43)" fg:x="3602" fg:w="2"/><text x="34.3598%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.06%)</title><rect x="34.1477%" y="421" width="0.0568%" height="15" fill="rgb(250,71,37)" fg:x="3606" fg:w="6"/><text x="34.3977%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.16%)</title><rect x="34.0814%" y="485" width="0.1610%" height="15" fill="rgb(219,76,19)" fg:x="3599" fg:w="17"/><text x="34.3314%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.16%)</title><rect x="34.0814%" y="469" width="0.1610%" height="15" fill="rgb(250,39,11)" fg:x="3599" fg:w="17"/><text x="34.3314%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.16%)</title><rect x="34.0814%" y="453" width="0.1610%" height="15" fill="rgb(230,64,31)" fg:x="3599" fg:w="17"/><text x="34.3314%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (12 samples, 0.11%)</title><rect x="34.1288%" y="437" width="0.1136%" height="15" fill="rgb(208,222,23)" fg:x="3604" fg:w="12"/><text x="34.3788%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.04%)</title><rect x="34.2045%" y="421" width="0.0379%" height="15" fill="rgb(227,125,18)" fg:x="3612" fg:w="4"/><text x="34.4545%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (22 samples, 0.21%)</title><rect x="34.0625%" y="501" width="0.2083%" height="15" fill="rgb(234,210,9)" fg:x="3597" fg:w="22"/><text x="34.3125%" y="511.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="34.2424%" y="485" width="0.0284%" height="15" fill="rgb(217,127,24)" fg:x="3616" fg:w="3"/><text x="34.4924%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (3 samples, 0.03%)</title><rect x="34.2424%" y="469" width="0.0284%" height="15" fill="rgb(239,141,48)" fg:x="3616" fg:w="3"/><text x="34.4924%" y="479.50"></text></g><g><title>core::hash::Hasher::write_isize (3 samples, 0.03%)</title><rect x="34.2424%" y="453" width="0.0284%" height="15" fill="rgb(227,109,8)" fg:x="3616" fg:w="3"/><text x="34.4924%" y="463.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.03%)</title><rect x="34.2424%" y="437" width="0.0284%" height="15" fill="rgb(235,184,23)" fg:x="3616" fg:w="3"/><text x="34.4924%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="34.2424%" y="421" width="0.0284%" height="15" fill="rgb(227,226,48)" fg:x="3616" fg:w="3"/><text x="34.4924%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="34.2424%" y="405" width="0.0284%" height="15" fill="rgb(206,150,11)" fg:x="3616" fg:w="3"/><text x="34.4924%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="34.2424%" y="389" width="0.0284%" height="15" fill="rgb(254,2,33)" fg:x="3616" fg:w="3"/><text x="34.4924%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="34.3466%" y="469" width="0.0379%" height="15" fill="rgb(243,160,20)" fg:x="3627" fg:w="4"/><text x="34.5966%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="34.3466%" y="453" width="0.0379%" height="15" fill="rgb(218,208,30)" fg:x="3627" fg:w="4"/><text x="34.5966%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="34.3561%" y="437" width="0.0284%" height="15" fill="rgb(224,120,49)" fg:x="3628" fg:w="3"/><text x="34.6061%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="34.3655%" y="421" width="0.0189%" height="15" fill="rgb(246,12,2)" fg:x="3629" fg:w="2"/><text x="34.6155%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="34.3845%" y="469" width="0.0189%" height="15" fill="rgb(236,117,3)" fg:x="3631" fg:w="2"/><text x="34.6345%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.02%)</title><rect x="34.3845%" y="453" width="0.0189%" height="15" fill="rgb(216,128,52)" fg:x="3631" fg:w="2"/><text x="34.6345%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.02%)</title><rect x="34.3845%" y="437" width="0.0189%" height="15" fill="rgb(246,145,19)" fg:x="3631" fg:w="2"/><text x="34.6345%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.02%)</title><rect x="34.3845%" y="421" width="0.0189%" height="15" fill="rgb(222,11,46)" fg:x="3631" fg:w="2"/><text x="34.6345%" y="431.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (44 samples, 0.42%)</title><rect x="34.0530%" y="565" width="0.4167%" height="15" fill="rgb(245,82,36)" fg:x="3596" fg:w="44"/><text x="34.3030%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (44 samples, 0.42%)</title><rect x="34.0530%" y="549" width="0.4167%" height="15" fill="rgb(250,73,51)" fg:x="3596" fg:w="44"/><text x="34.3030%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (44 samples, 0.42%)</title><rect x="34.0530%" y="533" width="0.4167%" height="15" fill="rgb(221,189,23)" fg:x="3596" fg:w="44"/><text x="34.3030%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (44 samples, 0.42%)</title><rect x="34.0530%" y="517" width="0.4167%" height="15" fill="rgb(210,33,7)" fg:x="3596" fg:w="44"/><text x="34.3030%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (21 samples, 0.20%)</title><rect x="34.2708%" y="501" width="0.1989%" height="15" fill="rgb(210,107,22)" fg:x="3619" fg:w="21"/><text x="34.5208%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.20%)</title><rect x="34.2708%" y="485" width="0.1989%" height="15" fill="rgb(222,116,37)" fg:x="3619" fg:w="21"/><text x="34.5208%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (7 samples, 0.07%)</title><rect x="34.4034%" y="469" width="0.0663%" height="15" fill="rgb(254,17,48)" fg:x="3633" fg:w="7"/><text x="34.6534%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (7 samples, 0.07%)</title><rect x="34.4034%" y="453" width="0.0663%" height="15" fill="rgb(224,36,32)" fg:x="3633" fg:w="7"/><text x="34.6534%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (7 samples, 0.07%)</title><rect x="34.4034%" y="437" width="0.0663%" height="15" fill="rgb(232,90,46)" fg:x="3633" fg:w="7"/><text x="34.6534%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.07%)</title><rect x="34.4034%" y="421" width="0.0663%" height="15" fill="rgb(241,66,40)" fg:x="3633" fg:w="7"/><text x="34.6534%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (7 samples, 0.07%)</title><rect x="34.4034%" y="405" width="0.0663%" height="15" fill="rgb(249,184,29)" fg:x="3633" fg:w="7"/><text x="34.6534%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (7 samples, 0.07%)</title><rect x="34.4034%" y="389" width="0.0663%" height="15" fill="rgb(231,181,1)" fg:x="3633" fg:w="7"/><text x="34.6534%" y="399.50"></text></g><g><title>core::core_arch::simd::i8x16::new (7 samples, 0.07%)</title><rect x="34.4034%" y="373" width="0.0663%" height="15" fill="rgb(224,94,2)" fg:x="3633" fg:w="7"/><text x="34.6534%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="34.6023%" y="421" width="0.0284%" height="15" fill="rgb(229,170,15)" fg:x="3654" fg:w="3"/><text x="34.8523%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.04%)</title><rect x="34.6023%" y="437" width="0.0379%" height="15" fill="rgb(240,127,35)" fg:x="3654" fg:w="4"/><text x="34.8523%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.05%)</title><rect x="34.6686%" y="421" width="0.0473%" height="15" fill="rgb(248,196,34)" fg:x="3661" fg:w="5"/><text x="34.9186%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.24%)</title><rect x="34.5265%" y="485" width="0.2367%" height="15" fill="rgb(236,137,7)" fg:x="3646" fg:w="25"/><text x="34.7765%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (25 samples, 0.24%)</title><rect x="34.5265%" y="469" width="0.2367%" height="15" fill="rgb(235,127,16)" fg:x="3646" fg:w="25"/><text x="34.7765%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (25 samples, 0.24%)</title><rect x="34.5265%" y="453" width="0.2367%" height="15" fill="rgb(250,192,54)" fg:x="3646" fg:w="25"/><text x="34.7765%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.12%)</title><rect x="34.6402%" y="437" width="0.1231%" height="15" fill="rgb(218,98,20)" fg:x="3658" fg:w="13"/><text x="34.8902%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.05%)</title><rect x="34.7159%" y="421" width="0.0473%" height="15" fill="rgb(230,176,47)" fg:x="3666" fg:w="5"/><text x="34.9659%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.05%)</title><rect x="34.7633%" y="485" width="0.0473%" height="15" fill="rgb(244,2,33)" fg:x="3671" fg:w="5"/><text x="35.0133%" y="495.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.04%)</title><rect x="34.7727%" y="469" width="0.0379%" height="15" fill="rgb(231,100,17)" fg:x="3672" fg:w="4"/><text x="35.0227%" y="479.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.03%)</title><rect x="34.7822%" y="453" width="0.0284%" height="15" fill="rgb(245,23,12)" fg:x="3673" fg:w="3"/><text x="35.0322%" y="463.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.03%)</title><rect x="34.7822%" y="437" width="0.0284%" height="15" fill="rgb(249,55,22)" fg:x="3673" fg:w="3"/><text x="35.0322%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.04%)</title><rect x="34.9148%" y="357" width="0.0379%" height="15" fill="rgb(207,134,9)" fg:x="3687" fg:w="4"/><text x="35.1648%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.08%)</title><rect x="34.9053%" y="373" width="0.0758%" height="15" fill="rgb(218,134,0)" fg:x="3686" fg:w="8"/><text x="35.1553%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="34.9527%" y="357" width="0.0284%" height="15" fill="rgb(213,212,33)" fg:x="3691" fg:w="3"/><text x="35.2027%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (53 samples, 0.50%)</title><rect x="34.4981%" y="501" width="0.5019%" height="15" fill="rgb(252,106,18)" fg:x="3643" fg:w="53"/><text x="34.7481%" y="511.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (20 samples, 0.19%)</title><rect x="34.8106%" y="485" width="0.1894%" height="15" fill="rgb(208,126,42)" fg:x="3676" fg:w="20"/><text x="35.0606%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (20 samples, 0.19%)</title><rect x="34.8106%" y="469" width="0.1894%" height="15" fill="rgb(246,175,29)" fg:x="3676" fg:w="20"/><text x="35.0606%" y="479.50"></text></g><g><title>core::hash::Hasher::write_isize (20 samples, 0.19%)</title><rect x="34.8106%" y="453" width="0.1894%" height="15" fill="rgb(215,13,50)" fg:x="3676" fg:w="20"/><text x="35.0606%" y="463.50"></text></g><g><title>core::hash::Hasher::write_usize (20 samples, 0.19%)</title><rect x="34.8106%" y="437" width="0.1894%" height="15" fill="rgb(216,172,15)" fg:x="3676" fg:w="20"/><text x="35.0606%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.19%)</title><rect x="34.8106%" y="421" width="0.1894%" height="15" fill="rgb(212,103,13)" fg:x="3676" fg:w="20"/><text x="35.0606%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (20 samples, 0.19%)</title><rect x="34.8106%" y="405" width="0.1894%" height="15" fill="rgb(231,171,36)" fg:x="3676" fg:w="20"/><text x="35.0606%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (20 samples, 0.19%)</title><rect x="34.8106%" y="389" width="0.1894%" height="15" fill="rgb(250,123,20)" fg:x="3676" fg:w="20"/><text x="35.0606%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="35.2367%" y="469" width="0.0379%" height="15" fill="rgb(212,53,50)" fg:x="3721" fg:w="4"/><text x="35.4867%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="35.2367%" y="453" width="0.0379%" height="15" fill="rgb(243,54,12)" fg:x="3721" fg:w="4"/><text x="35.4867%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="35.2367%" y="437" width="0.0379%" height="15" fill="rgb(234,101,34)" fg:x="3721" fg:w="4"/><text x="35.4867%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="35.2557%" y="421" width="0.0189%" height="15" fill="rgb(254,67,22)" fg:x="3723" fg:w="2"/><text x="35.5057%" y="431.50"></text></g><g><title>y2021::d18::main::Snail::explode (1,456 samples, 13.79%)</title><rect x="21.6288%" y="581" width="13.7879%" height="15" fill="rgb(250,35,47)" fg:x="2284" fg:w="1456"/><text x="21.8788%" y="591.50">y2021::d18::main::Sna..</text></g><g><title>y2021::d18::main::Snail::has (100 samples, 0.95%)</title><rect x="34.4697%" y="565" width="0.9470%" height="15" fill="rgb(226,126,38)" fg:x="3640" fg:w="100"/><text x="34.7197%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (100 samples, 0.95%)</title><rect x="34.4697%" y="549" width="0.9470%" height="15" fill="rgb(216,138,53)" fg:x="3640" fg:w="100"/><text x="34.7197%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (99 samples, 0.94%)</title><rect x="34.4792%" y="533" width="0.9375%" height="15" fill="rgb(246,199,43)" fg:x="3641" fg:w="99"/><text x="34.7292%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (99 samples, 0.94%)</title><rect x="34.4792%" y="517" width="0.9375%" height="15" fill="rgb(232,125,11)" fg:x="3641" fg:w="99"/><text x="34.7292%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (44 samples, 0.42%)</title><rect x="35.0000%" y="501" width="0.4167%" height="15" fill="rgb(218,219,45)" fg:x="3696" fg:w="44"/><text x="35.2500%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (44 samples, 0.42%)</title><rect x="35.0000%" y="485" width="0.4167%" height="15" fill="rgb(216,102,54)" fg:x="3696" fg:w="44"/><text x="35.2500%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (15 samples, 0.14%)</title><rect x="35.2746%" y="469" width="0.1420%" height="15" fill="rgb(250,228,7)" fg:x="3725" fg:w="15"/><text x="35.5246%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (15 samples, 0.14%)</title><rect x="35.2746%" y="453" width="0.1420%" height="15" fill="rgb(226,125,25)" fg:x="3725" fg:w="15"/><text x="35.5246%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (15 samples, 0.14%)</title><rect x="35.2746%" y="437" width="0.1420%" height="15" fill="rgb(224,165,27)" fg:x="3725" fg:w="15"/><text x="35.5246%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (14 samples, 0.13%)</title><rect x="35.2841%" y="421" width="0.1326%" height="15" fill="rgb(233,86,3)" fg:x="3726" fg:w="14"/><text x="35.5341%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (14 samples, 0.13%)</title><rect x="35.2841%" y="405" width="0.1326%" height="15" fill="rgb(228,116,20)" fg:x="3726" fg:w="14"/><text x="35.5341%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (14 samples, 0.13%)</title><rect x="35.2841%" y="389" width="0.1326%" height="15" fill="rgb(209,192,17)" fg:x="3726" fg:w="14"/><text x="35.5341%" y="399.50"></text></g><g><title>core::core_arch::simd::i8x16::new (14 samples, 0.13%)</title><rect x="35.2841%" y="373" width="0.1326%" height="15" fill="rgb(224,88,34)" fg:x="3726" fg:w="14"/><text x="35.5341%" y="383.50"></text></g><g><title>y2021::d18::main::Snail::set_depth (4 samples, 0.04%)</title><rect x="35.4167%" y="581" width="0.0379%" height="15" fill="rgb(233,38,6)" fg:x="3740" fg:w="4"/><text x="35.6667%" y="591.50"></text></g><g><title>y2021::d18::main::Snail::set_depth (4 samples, 0.04%)</title><rect x="35.4167%" y="565" width="0.0379%" height="15" fill="rgb(212,59,30)" fg:x="3740" fg:w="4"/><text x="35.6667%" y="575.50"></text></g><g><title>y2021::d18::main::Snail::set_depth (4 samples, 0.04%)</title><rect x="35.4167%" y="549" width="0.0379%" height="15" fill="rgb(213,80,3)" fg:x="3740" fg:w="4"/><text x="35.6667%" y="559.50"></text></g><g><title>y2021::d18::main::Snail::set_depth (3 samples, 0.03%)</title><rect x="35.4261%" y="533" width="0.0284%" height="15" fill="rgb(251,178,7)" fg:x="3741" fg:w="3"/><text x="35.6761%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter_mut (2 samples, 0.02%)</title><rect x="35.4356%" y="517" width="0.0189%" height="15" fill="rgb(213,154,26)" fg:x="3742" fg:w="2"/><text x="35.6856%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter_mut (2 samples, 0.02%)</title><rect x="35.4356%" y="501" width="0.0189%" height="15" fill="rgb(238,165,49)" fg:x="3742" fg:w="2"/><text x="35.6856%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2 samples, 0.02%)</title><rect x="35.4356%" y="485" width="0.0189%" height="15" fill="rgb(248,91,46)" fg:x="3742" fg:w="2"/><text x="35.6856%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="35.4356%" y="469" width="0.0189%" height="15" fill="rgb(244,21,52)" fg:x="3742" fg:w="2"/><text x="35.6856%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (2 samples, 0.02%)</title><rect x="35.4356%" y="453" width="0.0189%" height="15" fill="rgb(247,122,20)" fg:x="3742" fg:w="2"/><text x="35.6856%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.02%)</title><rect x="35.4356%" y="437" width="0.0189%" height="15" fill="rgb(218,27,9)" fg:x="3742" fg:w="2"/><text x="35.6856%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="35.4356%" y="421" width="0.0189%" height="15" fill="rgb(246,7,6)" fg:x="3742" fg:w="2"/><text x="35.6856%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="35.4735%" y="485" width="0.0189%" height="15" fill="rgb(227,135,54)" fg:x="3746" fg:w="2"/><text x="35.7235%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="35.4735%" y="469" width="0.0189%" height="15" fill="rgb(247,14,11)" fg:x="3746" fg:w="2"/><text x="35.7235%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="35.4735%" y="453" width="0.0189%" height="15" fill="rgb(206,149,34)" fg:x="3746" fg:w="2"/><text x="35.7235%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="35.4735%" y="437" width="0.0189%" height="15" fill="rgb(227,228,4)" fg:x="3746" fg:w="2"/><text x="35.7235%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="35.4924%" y="485" width="0.0189%" height="15" fill="rgb(238,218,28)" fg:x="3748" fg:w="2"/><text x="35.7424%" y="495.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.02%)</title><rect x="35.4924%" y="469" width="0.0189%" height="15" fill="rgb(252,86,40)" fg:x="3748" fg:w="2"/><text x="35.7424%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.06%)</title><rect x="35.4640%" y="501" width="0.0568%" height="15" fill="rgb(251,225,11)" fg:x="3745" fg:w="6"/><text x="35.7140%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="35.5398%" y="469" width="0.0189%" height="15" fill="rgb(206,46,49)" fg:x="3753" fg:w="2"/><text x="35.7898%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="35.5398%" y="453" width="0.0189%" height="15" fill="rgb(245,128,24)" fg:x="3753" fg:w="2"/><text x="35.7898%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="35.5398%" y="437" width="0.0189%" height="15" fill="rgb(219,177,34)" fg:x="3753" fg:w="2"/><text x="35.7898%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="35.5398%" y="421" width="0.0189%" height="15" fill="rgb(218,60,48)" fg:x="3753" fg:w="2"/><text x="35.7898%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="35.5682%" y="469" width="0.0189%" height="15" fill="rgb(221,11,5)" fg:x="3756" fg:w="2"/><text x="35.8182%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.02%)</title><rect x="35.5682%" y="453" width="0.0189%" height="15" fill="rgb(220,148,13)" fg:x="3756" fg:w="2"/><text x="35.8182%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.02%)</title><rect x="35.5682%" y="437" width="0.0189%" height="15" fill="rgb(210,16,3)" fg:x="3756" fg:w="2"/><text x="35.8182%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.02%)</title><rect x="35.5682%" y="421" width="0.0189%" height="15" fill="rgb(236,80,2)" fg:x="3756" fg:w="2"/><text x="35.8182%" y="431.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (15 samples, 0.14%)</title><rect x="35.4640%" y="565" width="0.1420%" height="15" fill="rgb(239,129,19)" fg:x="3745" fg:w="15"/><text x="35.7140%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (15 samples, 0.14%)</title><rect x="35.4640%" y="549" width="0.1420%" height="15" fill="rgb(220,106,35)" fg:x="3745" fg:w="15"/><text x="35.7140%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (15 samples, 0.14%)</title><rect x="35.4640%" y="533" width="0.1420%" height="15" fill="rgb(252,139,45)" fg:x="3745" fg:w="15"/><text x="35.7140%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (15 samples, 0.14%)</title><rect x="35.4640%" y="517" width="0.1420%" height="15" fill="rgb(229,8,36)" fg:x="3745" fg:w="15"/><text x="35.7140%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (9 samples, 0.09%)</title><rect x="35.5208%" y="501" width="0.0852%" height="15" fill="rgb(230,126,33)" fg:x="3751" fg:w="9"/><text x="35.7708%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.09%)</title><rect x="35.5208%" y="485" width="0.0852%" height="15" fill="rgb(239,140,21)" fg:x="3751" fg:w="9"/><text x="35.7708%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="35.5871%" y="469" width="0.0189%" height="15" fill="rgb(254,104,9)" fg:x="3758" fg:w="2"/><text x="35.8371%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="35.5871%" y="453" width="0.0189%" height="15" fill="rgb(239,52,14)" fg:x="3758" fg:w="2"/><text x="35.8371%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="35.5871%" y="437" width="0.0189%" height="15" fill="rgb(208,227,44)" fg:x="3758" fg:w="2"/><text x="35.8371%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="35.5871%" y="421" width="0.0189%" height="15" fill="rgb(246,18,19)" fg:x="3758" fg:w="2"/><text x="35.8371%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.02%)</title><rect x="35.5871%" y="405" width="0.0189%" height="15" fill="rgb(235,228,25)" fg:x="3758" fg:w="2"/><text x="35.8371%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.02%)</title><rect x="35.5871%" y="389" width="0.0189%" height="15" fill="rgb(240,156,20)" fg:x="3758" fg:w="2"/><text x="35.8371%" y="399.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.02%)</title><rect x="35.5871%" y="373" width="0.0189%" height="15" fill="rgb(224,8,20)" fg:x="3758" fg:w="2"/><text x="35.8371%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.09%)</title><rect x="35.6250%" y="485" width="0.0852%" height="15" fill="rgb(214,12,52)" fg:x="3762" fg:w="9"/><text x="35.8750%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.09%)</title><rect x="35.6250%" y="469" width="0.0852%" height="15" fill="rgb(211,220,47)" fg:x="3762" fg:w="9"/><text x="35.8750%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.09%)</title><rect x="35.6250%" y="453" width="0.0852%" height="15" fill="rgb(250,173,5)" fg:x="3762" fg:w="9"/><text x="35.8750%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.03%)</title><rect x="35.6818%" y="437" width="0.0284%" height="15" fill="rgb(250,125,52)" fg:x="3768" fg:w="3"/><text x="35.9318%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="35.6913%" y="421" width="0.0189%" height="15" fill="rgb(209,133,18)" fg:x="3769" fg:w="2"/><text x="35.9413%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="35.7102%" y="485" width="0.0189%" height="15" fill="rgb(216,173,22)" fg:x="3771" fg:w="2"/><text x="35.9602%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.13%)</title><rect x="35.6250%" y="501" width="0.1326%" height="15" fill="rgb(205,3,22)" fg:x="3762" fg:w="14"/><text x="35.8750%" y="511.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="35.7292%" y="485" width="0.0284%" height="15" fill="rgb(248,22,20)" fg:x="3773" fg:w="3"/><text x="35.9792%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (3 samples, 0.03%)</title><rect x="35.7292%" y="469" width="0.0284%" height="15" fill="rgb(233,6,29)" fg:x="3773" fg:w="3"/><text x="35.9792%" y="479.50"></text></g><g><title>core::hash::Hasher::write_isize (3 samples, 0.03%)</title><rect x="35.7292%" y="453" width="0.0284%" height="15" fill="rgb(240,22,54)" fg:x="3773" fg:w="3"/><text x="35.9792%" y="463.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.03%)</title><rect x="35.7292%" y="437" width="0.0284%" height="15" fill="rgb(231,133,32)" fg:x="3773" fg:w="3"/><text x="35.9792%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="35.7292%" y="421" width="0.0284%" height="15" fill="rgb(248,193,4)" fg:x="3773" fg:w="3"/><text x="35.9792%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="35.7292%" y="405" width="0.0284%" height="15" fill="rgb(211,178,46)" fg:x="3773" fg:w="3"/><text x="35.9792%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="35.7292%" y="389" width="0.0284%" height="15" fill="rgb(224,5,42)" fg:x="3773" fg:w="3"/><text x="35.9792%" y="399.50"></text></g><g><title>y2021::d18::main::Snail::has (21 samples, 0.20%)</title><rect x="35.6061%" y="565" width="0.1989%" height="15" fill="rgb(239,176,25)" fg:x="3760" fg:w="21"/><text x="35.8561%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (21 samples, 0.20%)</title><rect x="35.6061%" y="549" width="0.1989%" height="15" fill="rgb(245,187,50)" fg:x="3760" fg:w="21"/><text x="35.8561%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (21 samples, 0.20%)</title><rect x="35.6061%" y="533" width="0.1989%" height="15" fill="rgb(248,24,15)" fg:x="3760" fg:w="21"/><text x="35.8561%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (21 samples, 0.20%)</title><rect x="35.6061%" y="517" width="0.1989%" height="15" fill="rgb(205,166,13)" fg:x="3760" fg:w="21"/><text x="35.8561%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.05%)</title><rect x="35.7576%" y="501" width="0.0473%" height="15" fill="rgb(208,114,23)" fg:x="3776" fg:w="5"/><text x="36.0076%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.05%)</title><rect x="35.7576%" y="485" width="0.0473%" height="15" fill="rgb(239,127,18)" fg:x="3776" fg:w="5"/><text x="36.0076%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="35.7860%" y="469" width="0.0189%" height="15" fill="rgb(219,154,28)" fg:x="3779" fg:w="2"/><text x="36.0360%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="35.7860%" y="453" width="0.0189%" height="15" fill="rgb(225,157,23)" fg:x="3779" fg:w="2"/><text x="36.0360%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="35.7860%" y="437" width="0.0189%" height="15" fill="rgb(219,8,6)" fg:x="3779" fg:w="2"/><text x="36.0360%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="35.7860%" y="421" width="0.0189%" height="15" fill="rgb(212,47,6)" fg:x="3779" fg:w="2"/><text x="36.0360%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.02%)</title><rect x="35.7860%" y="405" width="0.0189%" height="15" fill="rgb(224,190,4)" fg:x="3779" fg:w="2"/><text x="36.0360%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.02%)</title><rect x="35.7860%" y="389" width="0.0189%" height="15" fill="rgb(239,183,29)" fg:x="3779" fg:w="2"/><text x="36.0360%" y="399.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.02%)</title><rect x="35.7860%" y="373" width="0.0189%" height="15" fill="rgb(213,57,7)" fg:x="3779" fg:w="2"/><text x="36.0360%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="35.9091%" y="421" width="0.0189%" height="15" fill="rgb(216,148,1)" fg:x="3792" fg:w="2"/><text x="36.1591%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="35.9091%" y="405" width="0.0189%" height="15" fill="rgb(236,182,29)" fg:x="3792" fg:w="2"/><text x="36.1591%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="35.9564%" y="405" width="0.0284%" height="15" fill="rgb(244,120,48)" fg:x="3797" fg:w="3"/><text x="36.2064%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.14%)</title><rect x="35.8902%" y="469" width="0.1420%" height="15" fill="rgb(206,71,34)" fg:x="3790" fg:w="15"/><text x="36.1402%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.14%)</title><rect x="35.8902%" y="453" width="0.1420%" height="15" fill="rgb(242,32,6)" fg:x="3790" fg:w="15"/><text x="36.1402%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.14%)</title><rect x="35.8902%" y="437" width="0.1420%" height="15" fill="rgb(241,35,3)" fg:x="3790" fg:w="15"/><text x="36.1402%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.10%)</title><rect x="35.9280%" y="421" width="0.1042%" height="15" fill="rgb(222,62,19)" fg:x="3794" fg:w="11"/><text x="36.1780%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.05%)</title><rect x="35.9848%" y="405" width="0.0473%" height="15" fill="rgb(223,110,41)" fg:x="3800" fg:w="5"/><text x="36.2348%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="36.0322%" y="469" width="0.0189%" height="15" fill="rgb(208,224,4)" fg:x="3805" fg:w="2"/><text x="36.2822%" y="479.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.02%)</title><rect x="36.0322%" y="453" width="0.0189%" height="15" fill="rgb(241,137,19)" fg:x="3805" fg:w="2"/><text x="36.2822%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.20%)</title><rect x="35.8902%" y="485" width="0.1989%" height="15" fill="rgb(244,24,17)" fg:x="3790" fg:w="21"/><text x="36.1402%" y="495.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (4 samples, 0.04%)</title><rect x="36.0511%" y="469" width="0.0379%" height="15" fill="rgb(245,178,49)" fg:x="3807" fg:w="4"/><text x="36.3011%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (4 samples, 0.04%)</title><rect x="36.0511%" y="453" width="0.0379%" height="15" fill="rgb(219,160,38)" fg:x="3807" fg:w="4"/><text x="36.3011%" y="463.50"></text></g><g><title>core::hash::Hasher::write_isize (4 samples, 0.04%)</title><rect x="36.0511%" y="437" width="0.0379%" height="15" fill="rgb(228,137,14)" fg:x="3807" fg:w="4"/><text x="36.3011%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 0.04%)</title><rect x="36.0511%" y="421" width="0.0379%" height="15" fill="rgb(237,134,11)" fg:x="3807" fg:w="4"/><text x="36.3011%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="36.0511%" y="405" width="0.0379%" height="15" fill="rgb(211,126,44)" fg:x="3807" fg:w="4"/><text x="36.3011%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="36.0511%" y="389" width="0.0379%" height="15" fill="rgb(226,171,33)" fg:x="3807" fg:w="4"/><text x="36.3011%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="36.0511%" y="373" width="0.0379%" height="15" fill="rgb(253,99,13)" fg:x="3807" fg:w="4"/><text x="36.3011%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="36.0701%" y="357" width="0.0189%" height="15" fill="rgb(244,48,7)" fg:x="3809" fg:w="2"/><text x="36.3201%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="36.0701%" y="341" width="0.0189%" height="15" fill="rgb(244,217,54)" fg:x="3809" fg:w="2"/><text x="36.3201%" y="351.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (38 samples, 0.36%)</title><rect x="35.8523%" y="549" width="0.3598%" height="15" fill="rgb(224,15,18)" fg:x="3786" fg:w="38"/><text x="36.1023%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (38 samples, 0.36%)</title><rect x="35.8523%" y="533" width="0.3598%" height="15" fill="rgb(244,99,12)" fg:x="3786" fg:w="38"/><text x="36.1023%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (37 samples, 0.35%)</title><rect x="35.8617%" y="517" width="0.3504%" height="15" fill="rgb(233,226,8)" fg:x="3787" fg:w="37"/><text x="36.1117%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (35 samples, 0.33%)</title><rect x="35.8807%" y="501" width="0.3314%" height="15" fill="rgb(229,211,3)" fg:x="3789" fg:w="35"/><text x="36.1307%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (13 samples, 0.12%)</title><rect x="36.0890%" y="485" width="0.1231%" height="15" fill="rgb(216,140,21)" fg:x="3811" fg:w="13"/><text x="36.3390%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.12%)</title><rect x="36.0890%" y="469" width="0.1231%" height="15" fill="rgb(234,122,30)" fg:x="3811" fg:w="13"/><text x="36.3390%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.06%)</title><rect x="36.1553%" y="453" width="0.0568%" height="15" fill="rgb(236,25,46)" fg:x="3818" fg:w="6"/><text x="36.4053%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.06%)</title><rect x="36.1553%" y="437" width="0.0568%" height="15" fill="rgb(217,52,54)" fg:x="3818" fg:w="6"/><text x="36.4053%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.06%)</title><rect x="36.1553%" y="421" width="0.0568%" height="15" fill="rgb(222,29,26)" fg:x="3818" fg:w="6"/><text x="36.4053%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.05%)</title><rect x="36.1648%" y="405" width="0.0473%" height="15" fill="rgb(216,177,29)" fg:x="3819" fg:w="5"/><text x="36.4148%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.05%)</title><rect x="36.1648%" y="389" width="0.0473%" height="15" fill="rgb(247,136,51)" fg:x="3819" fg:w="5"/><text x="36.4148%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.05%)</title><rect x="36.1648%" y="373" width="0.0473%" height="15" fill="rgb(231,47,47)" fg:x="3819" fg:w="5"/><text x="36.4148%" y="383.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.05%)</title><rect x="36.1648%" y="357" width="0.0473%" height="15" fill="rgb(211,192,36)" fg:x="3819" fg:w="5"/><text x="36.4148%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="36.2500%" y="405" width="0.0284%" height="15" fill="rgb(229,156,32)" fg:x="3828" fg:w="3"/><text x="36.5000%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.08%)</title><rect x="36.2121%" y="469" width="0.0758%" height="15" fill="rgb(248,213,20)" fg:x="3824" fg:w="8"/><text x="36.4621%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.08%)</title><rect x="36.2121%" y="453" width="0.0758%" height="15" fill="rgb(217,64,7)" fg:x="3824" fg:w="8"/><text x="36.4621%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.08%)</title><rect x="36.2121%" y="437" width="0.0758%" height="15" fill="rgb(232,142,8)" fg:x="3824" fg:w="8"/><text x="36.4621%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.05%)</title><rect x="36.2405%" y="421" width="0.0473%" height="15" fill="rgb(224,92,44)" fg:x="3827" fg:w="5"/><text x="36.4905%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="36.2879%" y="469" width="0.0189%" height="15" fill="rgb(214,169,17)" fg:x="3832" fg:w="2"/><text x="36.5379%" y="479.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.02%)</title><rect x="36.2879%" y="453" width="0.0189%" height="15" fill="rgb(210,59,37)" fg:x="3832" fg:w="2"/><text x="36.5379%" y="463.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.02%)</title><rect x="36.2879%" y="437" width="0.0189%" height="15" fill="rgb(214,116,48)" fg:x="3832" fg:w="2"/><text x="36.5379%" y="447.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.02%)</title><rect x="36.2879%" y="421" width="0.0189%" height="15" fill="rgb(244,191,6)" fg:x="3832" fg:w="2"/><text x="36.5379%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="36.3258%" y="341" width="0.0189%" height="15" fill="rgb(241,50,52)" fg:x="3836" fg:w="2"/><text x="36.5758%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.03%)</title><rect x="36.3258%" y="357" width="0.0284%" height="15" fill="rgb(236,75,39)" fg:x="3836" fg:w="3"/><text x="36.5758%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.15%)</title><rect x="36.2121%" y="485" width="0.1515%" height="15" fill="rgb(236,99,0)" fg:x="3824" fg:w="16"/><text x="36.4621%" y="495.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (6 samples, 0.06%)</title><rect x="36.3068%" y="469" width="0.0568%" height="15" fill="rgb(207,202,15)" fg:x="3834" fg:w="6"/><text x="36.5568%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (6 samples, 0.06%)</title><rect x="36.3068%" y="453" width="0.0568%" height="15" fill="rgb(233,207,14)" fg:x="3834" fg:w="6"/><text x="36.5568%" y="463.50"></text></g><g><title>core::hash::Hasher::write_isize (6 samples, 0.06%)</title><rect x="36.3068%" y="437" width="0.0568%" height="15" fill="rgb(226,27,51)" fg:x="3834" fg:w="6"/><text x="36.5568%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (6 samples, 0.06%)</title><rect x="36.3068%" y="421" width="0.0568%" height="15" fill="rgb(206,104,42)" fg:x="3834" fg:w="6"/><text x="36.5568%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="36.3163%" y="405" width="0.0473%" height="15" fill="rgb(212,225,4)" fg:x="3835" fg:w="5"/><text x="36.5663%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="36.3163%" y="389" width="0.0473%" height="15" fill="rgb(233,96,42)" fg:x="3835" fg:w="5"/><text x="36.5663%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="36.3163%" y="373" width="0.0473%" height="15" fill="rgb(229,21,32)" fg:x="3835" fg:w="5"/><text x="36.5663%" y="383.50"></text></g><g><title>y2021::d18::main::Snail::has (26 samples, 0.25%)</title><rect x="36.2121%" y="549" width="0.2462%" height="15" fill="rgb(226,216,24)" fg:x="3824" fg:w="26"/><text x="36.4621%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (26 samples, 0.25%)</title><rect x="36.2121%" y="533" width="0.2462%" height="15" fill="rgb(221,163,17)" fg:x="3824" fg:w="26"/><text x="36.4621%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (26 samples, 0.25%)</title><rect x="36.2121%" y="517" width="0.2462%" height="15" fill="rgb(216,216,42)" fg:x="3824" fg:w="26"/><text x="36.4621%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.25%)</title><rect x="36.2121%" y="501" width="0.2462%" height="15" fill="rgb(240,118,7)" fg:x="3824" fg:w="26"/><text x="36.4621%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.09%)</title><rect x="36.3636%" y="485" width="0.0947%" height="15" fill="rgb(221,67,37)" fg:x="3840" fg:w="10"/><text x="36.6136%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.09%)</title><rect x="36.3636%" y="469" width="0.0947%" height="15" fill="rgb(241,32,44)" fg:x="3840" fg:w="10"/><text x="36.6136%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.04%)</title><rect x="36.4205%" y="453" width="0.0379%" height="15" fill="rgb(235,204,43)" fg:x="3846" fg:w="4"/><text x="36.6705%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.04%)</title><rect x="36.4205%" y="437" width="0.0379%" height="15" fill="rgb(213,116,10)" fg:x="3846" fg:w="4"/><text x="36.6705%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.04%)</title><rect x="36.4205%" y="421" width="0.0379%" height="15" fill="rgb(239,15,48)" fg:x="3846" fg:w="4"/><text x="36.6705%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.03%)</title><rect x="36.4299%" y="405" width="0.0284%" height="15" fill="rgb(207,123,36)" fg:x="3847" fg:w="3"/><text x="36.6799%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.03%)</title><rect x="36.4299%" y="389" width="0.0284%" height="15" fill="rgb(209,103,30)" fg:x="3847" fg:w="3"/><text x="36.6799%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.03%)</title><rect x="36.4299%" y="373" width="0.0284%" height="15" fill="rgb(238,100,19)" fg:x="3847" fg:w="3"/><text x="36.6799%" y="383.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.03%)</title><rect x="36.4299%" y="357" width="0.0284%" height="15" fill="rgb(244,30,14)" fg:x="3847" fg:w="3"/><text x="36.6799%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.10%)</title><rect x="36.5909%" y="389" width="0.1042%" height="15" fill="rgb(249,174,6)" fg:x="3864" fg:w="11"/><text x="36.8409%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.17%)</title><rect x="36.5530%" y="453" width="0.1705%" height="15" fill="rgb(235,213,41)" fg:x="3860" fg:w="18"/><text x="36.8030%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18 samples, 0.17%)</title><rect x="36.5530%" y="437" width="0.1705%" height="15" fill="rgb(213,118,6)" fg:x="3860" fg:w="18"/><text x="36.8030%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 0.17%)</title><rect x="36.5530%" y="421" width="0.1705%" height="15" fill="rgb(235,44,51)" fg:x="3860" fg:w="18"/><text x="36.8030%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.16%)</title><rect x="36.5625%" y="405" width="0.1610%" height="15" fill="rgb(217,9,53)" fg:x="3861" fg:w="17"/><text x="36.8125%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="36.6951%" y="389" width="0.0284%" height="15" fill="rgb(237,172,34)" fg:x="3875" fg:w="3"/><text x="36.9451%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (22 samples, 0.21%)</title><rect x="36.5530%" y="469" width="0.2083%" height="15" fill="rgb(206,206,11)" fg:x="3860" fg:w="22"/><text x="36.8030%" y="479.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (4 samples, 0.04%)</title><rect x="36.7235%" y="453" width="0.0379%" height="15" fill="rgb(214,149,29)" fg:x="3878" fg:w="4"/><text x="36.9735%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (4 samples, 0.04%)</title><rect x="36.7235%" y="437" width="0.0379%" height="15" fill="rgb(208,123,3)" fg:x="3878" fg:w="4"/><text x="36.9735%" y="447.50"></text></g><g><title>core::hash::Hasher::write_isize (4 samples, 0.04%)</title><rect x="36.7235%" y="421" width="0.0379%" height="15" fill="rgb(229,126,4)" fg:x="3878" fg:w="4"/><text x="36.9735%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 0.04%)</title><rect x="36.7235%" y="405" width="0.0379%" height="15" fill="rgb(222,92,36)" fg:x="3878" fg:w="4"/><text x="36.9735%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="36.7235%" y="389" width="0.0379%" height="15" fill="rgb(216,39,41)" fg:x="3878" fg:w="4"/><text x="36.9735%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="36.7235%" y="373" width="0.0379%" height="15" fill="rgb(253,127,28)" fg:x="3878" fg:w="4"/><text x="36.9735%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="36.7235%" y="357" width="0.0379%" height="15" fill="rgb(249,152,51)" fg:x="3878" fg:w="4"/><text x="36.9735%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="36.8182%" y="437" width="0.0189%" height="15" fill="rgb(209,123,42)" fg:x="3888" fg:w="2"/><text x="37.0682%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="36.8182%" y="421" width="0.0189%" height="15" fill="rgb(241,118,22)" fg:x="3888" fg:w="2"/><text x="37.0682%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="36.8182%" y="405" width="0.0189%" height="15" fill="rgb(208,25,7)" fg:x="3888" fg:w="2"/><text x="37.0682%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="36.8182%" y="389" width="0.0189%" height="15" fill="rgb(243,144,39)" fg:x="3888" fg:w="2"/><text x="37.0682%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (3 samples, 0.03%)</title><rect x="36.8466%" y="437" width="0.0284%" height="15" fill="rgb(250,50,5)" fg:x="3891" fg:w="3"/><text x="37.0966%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (3 samples, 0.03%)</title><rect x="36.8466%" y="421" width="0.0284%" height="15" fill="rgb(207,67,11)" fg:x="3891" fg:w="3"/><text x="37.0966%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.03%)</title><rect x="36.8466%" y="405" width="0.0284%" height="15" fill="rgb(245,204,40)" fg:x="3891" fg:w="3"/><text x="37.0966%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.03%)</title><rect x="36.8466%" y="389" width="0.0284%" height="15" fill="rgb(238,228,24)" fg:x="3891" fg:w="3"/><text x="37.0966%" y="399.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (38 samples, 0.36%)</title><rect x="36.5436%" y="533" width="0.3598%" height="15" fill="rgb(217,116,22)" fg:x="3859" fg:w="38"/><text x="36.7936%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (38 samples, 0.36%)</title><rect x="36.5436%" y="517" width="0.3598%" height="15" fill="rgb(234,98,12)" fg:x="3859" fg:w="38"/><text x="36.7936%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (38 samples, 0.36%)</title><rect x="36.5436%" y="501" width="0.3598%" height="15" fill="rgb(242,170,50)" fg:x="3859" fg:w="38"/><text x="36.7936%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (37 samples, 0.35%)</title><rect x="36.5530%" y="485" width="0.3504%" height="15" fill="rgb(235,7,5)" fg:x="3860" fg:w="37"/><text x="36.8030%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (15 samples, 0.14%)</title><rect x="36.7614%" y="469" width="0.1420%" height="15" fill="rgb(241,114,28)" fg:x="3882" fg:w="15"/><text x="37.0114%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.14%)</title><rect x="36.7614%" y="453" width="0.1420%" height="15" fill="rgb(246,112,42)" fg:x="3882" fg:w="15"/><text x="37.0114%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.03%)</title><rect x="36.8750%" y="437" width="0.0284%" height="15" fill="rgb(248,228,14)" fg:x="3894" fg:w="3"/><text x="37.1250%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.03%)</title><rect x="36.8750%" y="421" width="0.0284%" height="15" fill="rgb(208,133,18)" fg:x="3894" fg:w="3"/><text x="37.1250%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.03%)</title><rect x="36.8750%" y="405" width="0.0284%" height="15" fill="rgb(207,35,49)" fg:x="3894" fg:w="3"/><text x="37.1250%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.03%)</title><rect x="36.8750%" y="389" width="0.0284%" height="15" fill="rgb(205,68,36)" fg:x="3894" fg:w="3"/><text x="37.1250%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.03%)</title><rect x="36.8750%" y="373" width="0.0284%" height="15" fill="rgb(245,62,40)" fg:x="3894" fg:w="3"/><text x="37.1250%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.03%)</title><rect x="36.8750%" y="357" width="0.0284%" height="15" fill="rgb(228,27,24)" fg:x="3894" fg:w="3"/><text x="37.1250%" y="367.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.03%)</title><rect x="36.8750%" y="341" width="0.0284%" height="15" fill="rgb(253,19,12)" fg:x="3894" fg:w="3"/><text x="37.1250%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.05%)</title><rect x="37.0170%" y="389" width="0.0473%" height="15" fill="rgb(232,28,20)" fg:x="3909" fg:w="5"/><text x="37.2670%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.07%)</title><rect x="37.0170%" y="405" width="0.0663%" height="15" fill="rgb(218,35,51)" fg:x="3909" fg:w="7"/><text x="37.2670%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="37.0644%" y="389" width="0.0189%" height="15" fill="rgb(212,90,40)" fg:x="3914" fg:w="2"/><text x="37.3144%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.07%)</title><rect x="37.1023%" y="389" width="0.0663%" height="15" fill="rgb(220,172,12)" fg:x="3918" fg:w="7"/><text x="37.3523%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (28 samples, 0.27%)</title><rect x="36.9413%" y="453" width="0.2652%" height="15" fill="rgb(226,159,20)" fg:x="3901" fg:w="28"/><text x="37.1913%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (28 samples, 0.27%)</title><rect x="36.9413%" y="437" width="0.2652%" height="15" fill="rgb(234,205,16)" fg:x="3901" fg:w="28"/><text x="37.1913%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (28 samples, 0.27%)</title><rect x="36.9413%" y="421" width="0.2652%" height="15" fill="rgb(207,9,39)" fg:x="3901" fg:w="28"/><text x="37.1913%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.12%)</title><rect x="37.0833%" y="405" width="0.1231%" height="15" fill="rgb(249,143,15)" fg:x="3916" fg:w="13"/><text x="37.3333%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.04%)</title><rect x="37.1686%" y="389" width="0.0379%" height="15" fill="rgb(253,133,29)" fg:x="3925" fg:w="4"/><text x="37.4186%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.05%)</title><rect x="37.2064%" y="453" width="0.0473%" height="15" fill="rgb(221,187,0)" fg:x="3929" fg:w="5"/><text x="37.4564%" y="463.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.03%)</title><rect x="37.2254%" y="437" width="0.0284%" height="15" fill="rgb(205,204,26)" fg:x="3931" fg:w="3"/><text x="37.4754%" y="447.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.02%)</title><rect x="37.2348%" y="421" width="0.0189%" height="15" fill="rgb(224,68,54)" fg:x="3932" fg:w="2"/><text x="37.4848%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.02%)</title><rect x="37.2348%" y="405" width="0.0189%" height="15" fill="rgb(209,67,4)" fg:x="3932" fg:w="2"/><text x="37.4848%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.05%)</title><rect x="37.3390%" y="325" width="0.0473%" height="15" fill="rgb(228,229,18)" fg:x="3943" fg:w="5"/><text x="37.5890%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (49 samples, 0.46%)</title><rect x="36.9318%" y="469" width="0.4640%" height="15" fill="rgb(231,89,13)" fg:x="3900" fg:w="49"/><text x="37.1818%" y="479.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (15 samples, 0.14%)</title><rect x="37.2538%" y="453" width="0.1420%" height="15" fill="rgb(210,182,18)" fg:x="3934" fg:w="15"/><text x="37.5038%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (15 samples, 0.14%)</title><rect x="37.2538%" y="437" width="0.1420%" height="15" fill="rgb(240,105,2)" fg:x="3934" fg:w="15"/><text x="37.5038%" y="447.50"></text></g><g><title>core::hash::Hasher::write_isize (15 samples, 0.14%)</title><rect x="37.2538%" y="421" width="0.1420%" height="15" fill="rgb(207,170,50)" fg:x="3934" fg:w="15"/><text x="37.5038%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (15 samples, 0.14%)</title><rect x="37.2538%" y="405" width="0.1420%" height="15" fill="rgb(232,133,24)" fg:x="3934" fg:w="15"/><text x="37.5038%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.14%)</title><rect x="37.2538%" y="389" width="0.1420%" height="15" fill="rgb(235,166,27)" fg:x="3934" fg:w="15"/><text x="37.5038%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.14%)</title><rect x="37.2538%" y="373" width="0.1420%" height="15" fill="rgb(209,19,13)" fg:x="3934" fg:w="15"/><text x="37.5038%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.14%)</title><rect x="37.2538%" y="357" width="0.1420%" height="15" fill="rgb(226,79,39)" fg:x="3934" fg:w="15"/><text x="37.5038%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.06%)</title><rect x="37.3390%" y="341" width="0.0568%" height="15" fill="rgb(222,163,10)" fg:x="3943" fg:w="6"/><text x="37.5890%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="37.5379%" y="405" width="0.0379%" height="15" fill="rgb(214,44,19)" fg:x="3964" fg:w="4"/><text x="37.7879%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="37.5568%" y="389" width="0.0189%" height="15" fill="rgb(210,217,13)" fg:x="3966" fg:w="2"/><text x="37.8068%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="37.5379%" y="437" width="0.0473%" height="15" fill="rgb(237,61,54)" fg:x="3964" fg:w="5"/><text x="37.7879%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="37.5379%" y="421" width="0.0473%" height="15" fill="rgb(226,184,24)" fg:x="3964" fg:w="5"/><text x="37.7879%" y="431.50"></text></g><g><title>y2021::d18::main::Snail::has (79 samples, 0.75%)</title><rect x="36.9034%" y="533" width="0.7481%" height="15" fill="rgb(223,226,4)" fg:x="3897" fg:w="79"/><text x="37.1534%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (79 samples, 0.75%)</title><rect x="36.9034%" y="517" width="0.7481%" height="15" fill="rgb(210,26,41)" fg:x="3897" fg:w="79"/><text x="37.1534%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (77 samples, 0.73%)</title><rect x="36.9223%" y="501" width="0.7292%" height="15" fill="rgb(220,221,6)" fg:x="3899" fg:w="77"/><text x="37.1723%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (77 samples, 0.73%)</title><rect x="36.9223%" y="485" width="0.7292%" height="15" fill="rgb(225,89,49)" fg:x="3899" fg:w="77"/><text x="37.1723%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (27 samples, 0.26%)</title><rect x="37.3958%" y="469" width="0.2557%" height="15" fill="rgb(218,70,45)" fg:x="3949" fg:w="27"/><text x="37.6458%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (27 samples, 0.26%)</title><rect x="37.3958%" y="453" width="0.2557%" height="15" fill="rgb(238,166,21)" fg:x="3949" fg:w="27"/><text x="37.6458%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (7 samples, 0.07%)</title><rect x="37.5852%" y="437" width="0.0663%" height="15" fill="rgb(224,141,44)" fg:x="3969" fg:w="7"/><text x="37.8352%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (7 samples, 0.07%)</title><rect x="37.5852%" y="421" width="0.0663%" height="15" fill="rgb(230,12,49)" fg:x="3969" fg:w="7"/><text x="37.8352%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (7 samples, 0.07%)</title><rect x="37.5852%" y="405" width="0.0663%" height="15" fill="rgb(212,174,12)" fg:x="3969" fg:w="7"/><text x="37.8352%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.07%)</title><rect x="37.5852%" y="389" width="0.0663%" height="15" fill="rgb(246,67,9)" fg:x="3969" fg:w="7"/><text x="37.8352%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (7 samples, 0.07%)</title><rect x="37.5852%" y="373" width="0.0663%" height="15" fill="rgb(239,35,23)" fg:x="3969" fg:w="7"/><text x="37.8352%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (7 samples, 0.07%)</title><rect x="37.5852%" y="357" width="0.0663%" height="15" fill="rgb(211,167,0)" fg:x="3969" fg:w="7"/><text x="37.8352%" y="367.50"></text></g><g><title>core::core_arch::simd::i8x16::new (7 samples, 0.07%)</title><rect x="37.5852%" y="341" width="0.0663%" height="15" fill="rgb(225,119,45)" fg:x="3969" fg:w="7"/><text x="37.8352%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="37.6989%" y="469" width="0.0189%" height="15" fill="rgb(210,162,6)" fg:x="3981" fg:w="2"/><text x="37.9489%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="37.6989%" y="453" width="0.0189%" height="15" fill="rgb(208,118,35)" fg:x="3981" fg:w="2"/><text x="37.9489%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="37.6989%" y="437" width="0.0189%" height="15" fill="rgb(239,4,53)" fg:x="3981" fg:w="2"/><text x="37.9489%" y="447.50"></text></g><g><title>hashbrown::map::make_insert_hash (8 samples, 0.08%)</title><rect x="37.6989%" y="485" width="0.0758%" height="15" fill="rgb(213,130,21)" fg:x="3981" fg:w="8"/><text x="37.9489%" y="495.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (5 samples, 0.05%)</title><rect x="37.7273%" y="469" width="0.0473%" height="15" fill="rgb(235,148,0)" fg:x="3984" fg:w="5"/><text x="37.9773%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (5 samples, 0.05%)</title><rect x="37.7273%" y="453" width="0.0473%" height="15" fill="rgb(244,224,18)" fg:x="3984" fg:w="5"/><text x="37.9773%" y="463.50"></text></g><g><title>core::hash::Hasher::write_isize (5 samples, 0.05%)</title><rect x="37.7273%" y="437" width="0.0473%" height="15" fill="rgb(211,214,4)" fg:x="3984" fg:w="5"/><text x="37.9773%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (5 samples, 0.05%)</title><rect x="37.7273%" y="421" width="0.0473%" height="15" fill="rgb(206,119,25)" fg:x="3984" fg:w="5"/><text x="37.9773%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="37.7273%" y="405" width="0.0473%" height="15" fill="rgb(243,93,47)" fg:x="3984" fg:w="5"/><text x="37.9773%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="37.7273%" y="389" width="0.0473%" height="15" fill="rgb(224,194,6)" fg:x="3984" fg:w="5"/><text x="37.9773%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="37.7273%" y="373" width="0.0473%" height="15" fill="rgb(243,229,6)" fg:x="3984" fg:w="5"/><text x="37.9773%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.03%)</title><rect x="37.7462%" y="357" width="0.0284%" height="15" fill="rgb(207,23,50)" fg:x="3986" fg:w="3"/><text x="37.9962%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="37.7557%" y="341" width="0.0189%" height="15" fill="rgb(253,192,32)" fg:x="3987" fg:w="2"/><text x="38.0057%" y="351.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (11 samples, 0.10%)</title><rect x="37.6989%" y="517" width="0.1042%" height="15" fill="rgb(213,21,6)" fg:x="3981" fg:w="11"/><text x="37.9489%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.10%)</title><rect x="37.6989%" y="501" width="0.1042%" height="15" fill="rgb(243,151,13)" fg:x="3981" fg:w="11"/><text x="37.9489%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="37.7841%" y="485" width="0.0189%" height="15" fill="rgb(233,165,41)" fg:x="3990" fg:w="2"/><text x="38.0341%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (3 samples, 0.03%)</title><rect x="37.8030%" y="485" width="0.0284%" height="15" fill="rgb(246,176,45)" fg:x="3992" fg:w="3"/><text x="38.0530%" y="495.50"></text></g><g><title>std::collections::hash::map::RandomState::new (3 samples, 0.03%)</title><rect x="37.8030%" y="469" width="0.0284%" height="15" fill="rgb(217,170,52)" fg:x="3992" fg:w="3"/><text x="38.0530%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.03%)</title><rect x="37.8030%" y="453" width="0.0284%" height="15" fill="rgb(214,203,54)" fg:x="3992" fg:w="3"/><text x="38.0530%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.03%)</title><rect x="37.8030%" y="437" width="0.0284%" height="15" fill="rgb(248,215,49)" fg:x="3992" fg:w="3"/><text x="38.0530%" y="447.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (3 samples, 0.03%)</title><rect x="37.8030%" y="421" width="0.0284%" height="15" fill="rgb(208,46,10)" fg:x="3992" fg:w="3"/><text x="38.0530%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (4 samples, 0.04%)</title><rect x="37.8030%" y="517" width="0.0379%" height="15" fill="rgb(254,5,31)" fg:x="3992" fg:w="4"/><text x="38.0530%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (4 samples, 0.04%)</title><rect x="37.8030%" y="501" width="0.0379%" height="15" fill="rgb(222,104,33)" fg:x="3992" fg:w="4"/><text x="38.0530%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="38.0871%" y="373" width="0.0284%" height="15" fill="rgb(248,49,16)" fg:x="4022" fg:w="3"/><text x="38.3371%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.07%)</title><rect x="38.0777%" y="389" width="0.0663%" height="15" fill="rgb(232,198,41)" fg:x="4021" fg:w="7"/><text x="38.3277%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="38.1155%" y="373" width="0.0284%" height="15" fill="rgb(214,125,3)" fg:x="4025" fg:w="3"/><text x="38.3655%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.09%)</title><rect x="38.1818%" y="373" width="0.0947%" height="15" fill="rgb(229,220,28)" fg:x="4032" fg:w="10"/><text x="38.4318%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (40 samples, 0.38%)</title><rect x="37.9356%" y="437" width="0.3788%" height="15" fill="rgb(222,64,37)" fg:x="4006" fg:w="40"/><text x="38.1856%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (40 samples, 0.38%)</title><rect x="37.9356%" y="421" width="0.3788%" height="15" fill="rgb(249,184,13)" fg:x="4006" fg:w="40"/><text x="38.1856%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (40 samples, 0.38%)</title><rect x="37.9356%" y="405" width="0.3788%" height="15" fill="rgb(252,176,6)" fg:x="4006" fg:w="40"/><text x="38.1856%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.17%)</title><rect x="38.1439%" y="389" width="0.1705%" height="15" fill="rgb(228,153,7)" fg:x="4028" fg:w="18"/><text x="38.3939%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.04%)</title><rect x="38.2765%" y="373" width="0.0379%" height="15" fill="rgb(242,193,5)" fg:x="4042" fg:w="4"/><text x="38.5265%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (8 samples, 0.08%)</title><rect x="38.3144%" y="437" width="0.0758%" height="15" fill="rgb(232,140,9)" fg:x="4046" fg:w="8"/><text x="38.5644%" y="447.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (7 samples, 0.07%)</title><rect x="38.3239%" y="421" width="0.0663%" height="15" fill="rgb(213,222,16)" fg:x="4047" fg:w="7"/><text x="38.5739%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (7 samples, 0.07%)</title><rect x="38.3239%" y="405" width="0.0663%" height="15" fill="rgb(222,75,50)" fg:x="4047" fg:w="7"/><text x="38.5739%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (7 samples, 0.07%)</title><rect x="38.3239%" y="389" width="0.0663%" height="15" fill="rgb(205,180,2)" fg:x="4047" fg:w="7"/><text x="38.5739%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="38.4186%" y="309" width="0.0189%" height="15" fill="rgb(216,34,7)" fg:x="4057" fg:w="2"/><text x="38.6686%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.05%)</title><rect x="38.4091%" y="325" width="0.0473%" height="15" fill="rgb(253,16,32)" fg:x="4056" fg:w="5"/><text x="38.6591%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="38.4375%" y="309" width="0.0189%" height="15" fill="rgb(208,97,28)" fg:x="4059" fg:w="2"/><text x="38.6875%" y="319.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="38.4564%" y="325" width="0.0189%" height="15" fill="rgb(225,92,11)" fg:x="4061" fg:w="2"/><text x="38.7064%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (61 samples, 0.58%)</title><rect x="37.9072%" y="453" width="0.5777%" height="15" fill="rgb(243,38,12)" fg:x="4003" fg:w="61"/><text x="38.1572%" y="463.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (10 samples, 0.09%)</title><rect x="38.3902%" y="437" width="0.0947%" height="15" fill="rgb(208,139,16)" fg:x="4054" fg:w="10"/><text x="38.6402%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (10 samples, 0.09%)</title><rect x="38.3902%" y="421" width="0.0947%" height="15" fill="rgb(227,24,9)" fg:x="4054" fg:w="10"/><text x="38.6402%" y="431.50"></text></g><g><title>core::hash::Hasher::write_isize (10 samples, 0.09%)</title><rect x="38.3902%" y="405" width="0.0947%" height="15" fill="rgb(206,62,11)" fg:x="4054" fg:w="10"/><text x="38.6402%" y="415.50"></text></g><g><title>core::hash::Hasher::write_usize (10 samples, 0.09%)</title><rect x="38.3902%" y="389" width="0.0947%" height="15" fill="rgb(228,134,27)" fg:x="4054" fg:w="10"/><text x="38.6402%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.09%)</title><rect x="38.3996%" y="373" width="0.0852%" height="15" fill="rgb(205,55,33)" fg:x="4055" fg:w="9"/><text x="38.6496%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.09%)</title><rect x="38.3996%" y="357" width="0.0852%" height="15" fill="rgb(243,75,43)" fg:x="4055" fg:w="9"/><text x="38.6496%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.09%)</title><rect x="38.3996%" y="341" width="0.0852%" height="15" fill="rgb(223,27,42)" fg:x="4055" fg:w="9"/><text x="38.6496%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="38.5606%" y="421" width="0.0379%" height="15" fill="rgb(232,189,33)" fg:x="4072" fg:w="4"/><text x="38.8106%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="38.5606%" y="405" width="0.0379%" height="15" fill="rgb(210,9,39)" fg:x="4072" fg:w="4"/><text x="38.8106%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="38.5606%" y="389" width="0.0379%" height="15" fill="rgb(242,85,26)" fg:x="4072" fg:w="4"/><text x="38.8106%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.02%)</title><rect x="38.5985%" y="373" width="0.0189%" height="15" fill="rgb(248,44,4)" fg:x="4076" fg:w="2"/><text x="38.8485%" y="383.50"></text></g><g><title>y2021::d18::main::run (1,986 samples, 18.81%)</title><rect x="19.8674%" y="629" width="18.8068%" height="15" fill="rgb(250,96,46)" fg:x="2098" fg:w="1986"/><text x="20.1174%" y="639.50">y2021::d18::main::run</text></g><g><title>y2021::d18::main::p02 (1,882 samples, 17.82%)</title><rect x="20.8523%" y="613" width="17.8220%" height="15" fill="rgb(229,116,26)" fg:x="2202" fg:w="1882"/><text x="21.1023%" y="623.50">y2021::d18::main::p02</text></g><g><title>y2021::d18::main::Snail::reduce (1,800 samples, 17.05%)</title><rect x="21.6288%" y="597" width="17.0455%" height="15" fill="rgb(246,94,34)" fg:x="2284" fg:w="1800"/><text x="21.8788%" y="607.50">y2021::d18::main::Snail::r..</text></g><g><title>y2021::d18::main::Snail::split (340 samples, 3.22%)</title><rect x="35.4545%" y="581" width="3.2197%" height="15" fill="rgb(251,73,21)" fg:x="3744" fg:w="340"/><text x="35.7045%" y="591.50">y20..</text></g><g><title>y2021::d18::main::Snail::split (303 samples, 2.87%)</title><rect x="35.8049%" y="565" width="2.8693%" height="15" fill="rgb(254,121,25)" fg:x="3781" fg:w="303"/><text x="36.0549%" y="575.50">y2..</text></g><g><title>y2021::d18::main::Snail::split (234 samples, 2.22%)</title><rect x="36.4583%" y="549" width="2.2159%" height="15" fill="rgb(215,161,49)" fg:x="3850" fg:w="234"/><text x="36.7083%" y="559.50">y..</text></g><g><title>y2021::d18::main::Snail::split (108 samples, 1.02%)</title><rect x="37.6515%" y="533" width="1.0227%" height="15" fill="rgb(221,43,13)" fg:x="3976" fg:w="108"/><text x="37.9015%" y="543.50"></text></g><g><title>y2021::d18::main::Snail::has (88 samples, 0.83%)</title><rect x="37.8409%" y="517" width="0.8333%" height="15" fill="rgb(249,5,37)" fg:x="3996" fg:w="88"/><text x="38.0909%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (88 samples, 0.83%)</title><rect x="37.8409%" y="501" width="0.8333%" height="15" fill="rgb(226,25,44)" fg:x="3996" fg:w="88"/><text x="38.0909%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (86 samples, 0.81%)</title><rect x="37.8598%" y="485" width="0.8144%" height="15" fill="rgb(238,189,16)" fg:x="3998" fg:w="86"/><text x="38.1098%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (85 samples, 0.80%)</title><rect x="37.8693%" y="469" width="0.8049%" height="15" fill="rgb(251,186,8)" fg:x="3999" fg:w="85"/><text x="38.1193%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (20 samples, 0.19%)</title><rect x="38.4848%" y="453" width="0.1894%" height="15" fill="rgb(254,34,31)" fg:x="4064" fg:w="20"/><text x="38.7348%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.19%)</title><rect x="38.4848%" y="437" width="0.1894%" height="15" fill="rgb(225,215,27)" fg:x="4064" fg:w="20"/><text x="38.7348%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (8 samples, 0.08%)</title><rect x="38.5985%" y="421" width="0.0758%" height="15" fill="rgb(221,192,48)" fg:x="4076" fg:w="8"/><text x="38.8485%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (8 samples, 0.08%)</title><rect x="38.5985%" y="405" width="0.0758%" height="15" fill="rgb(219,137,20)" fg:x="4076" fg:w="8"/><text x="38.8485%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (8 samples, 0.08%)</title><rect x="38.5985%" y="389" width="0.0758%" height="15" fill="rgb(219,84,11)" fg:x="4076" fg:w="8"/><text x="38.8485%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.06%)</title><rect x="38.6174%" y="373" width="0.0568%" height="15" fill="rgb(224,10,23)" fg:x="4078" fg:w="6"/><text x="38.8674%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (6 samples, 0.06%)</title><rect x="38.6174%" y="357" width="0.0568%" height="15" fill="rgb(248,22,39)" fg:x="4078" fg:w="6"/><text x="38.8674%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (6 samples, 0.06%)</title><rect x="38.6174%" y="341" width="0.0568%" height="15" fill="rgb(212,154,20)" fg:x="4078" fg:w="6"/><text x="38.8674%" y="351.50"></text></g><g><title>core::core_arch::simd::i8x16::new (6 samples, 0.06%)</title><rect x="38.6174%" y="325" width="0.0568%" height="15" fill="rgb(236,199,50)" fg:x="4078" fg:w="6"/><text x="38.8674%" y="335.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.03%)</title><rect x="38.6932%" y="341" width="0.0284%" height="15" fill="rgb(211,9,17)" fg:x="4086" fg:w="3"/><text x="38.9432%" y="351.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="38.6932%" y="325" width="0.0284%" height="15" fill="rgb(243,216,36)" fg:x="4086" fg:w="3"/><text x="38.9432%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (2 samples, 0.02%)</title><rect x="38.7027%" y="309" width="0.0189%" height="15" fill="rgb(250,2,10)" fg:x="4087" fg:w="2"/><text x="38.9527%" y="319.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (2 samples, 0.02%)</title><rect x="38.7216%" y="277" width="0.0189%" height="15" fill="rgb(226,50,48)" fg:x="4089" fg:w="2"/><text x="38.9716%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="38.7216%" y="261" width="0.0189%" height="15" fill="rgb(243,81,16)" fg:x="4089" fg:w="2"/><text x="38.9716%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="38.7216%" y="245" width="0.0189%" height="15" fill="rgb(250,14,2)" fg:x="4089" fg:w="2"/><text x="38.9716%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="38.7216%" y="229" width="0.0189%" height="15" fill="rgb(233,135,29)" fg:x="4089" fg:w="2"/><text x="38.9716%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="38.7216%" y="213" width="0.0189%" height="15" fill="rgb(224,64,43)" fg:x="4089" fg:w="2"/><text x="38.9716%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="38.7216%" y="197" width="0.0189%" height="15" fill="rgb(238,84,13)" fg:x="4089" fg:w="2"/><text x="38.9716%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="38.7216%" y="325" width="0.0284%" height="15" fill="rgb(253,48,26)" fg:x="4089" fg:w="3"/><text x="38.9716%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.03%)</title><rect x="38.7216%" y="309" width="0.0284%" height="15" fill="rgb(205,223,31)" fg:x="4089" fg:w="3"/><text x="38.9716%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.03%)</title><rect x="38.7216%" y="293" width="0.0284%" height="15" fill="rgb(221,41,32)" fg:x="4089" fg:w="3"/><text x="38.9716%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.09%)</title><rect x="38.6742%" y="581" width="0.0852%" height="15" fill="rgb(213,158,31)" fg:x="4084" fg:w="9"/><text x="38.9242%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 0.09%)</title><rect x="38.6742%" y="565" width="0.0852%" height="15" fill="rgb(245,126,43)" fg:x="4084" fg:w="9"/><text x="38.9242%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 0.09%)</title><rect x="38.6742%" y="549" width="0.0852%" height="15" fill="rgb(227,7,22)" fg:x="4084" fg:w="9"/><text x="38.9242%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.09%)</title><rect x="38.6742%" y="533" width="0.0852%" height="15" fill="rgb(252,90,44)" fg:x="4084" fg:w="9"/><text x="38.9242%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.09%)</title><rect x="38.6742%" y="517" width="0.0852%" height="15" fill="rgb(253,91,0)" fg:x="4084" fg:w="9"/><text x="38.9242%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.09%)</title><rect x="38.6742%" y="501" width="0.0852%" height="15" fill="rgb(252,175,49)" fg:x="4084" fg:w="9"/><text x="38.9242%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.09%)</title><rect x="38.6742%" y="485" width="0.0852%" height="15" fill="rgb(246,150,1)" fg:x="4084" fg:w="9"/><text x="38.9242%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9 samples, 0.09%)</title><rect x="38.6742%" y="469" width="0.0852%" height="15" fill="rgb(241,192,25)" fg:x="4084" fg:w="9"/><text x="38.9242%" y="479.50"></text></g><g><title>y2021::d19::main::p01::{{closure}} (9 samples, 0.09%)</title><rect x="38.6742%" y="453" width="0.0852%" height="15" fill="rgb(239,187,11)" fg:x="4084" fg:w="9"/><text x="38.9242%" y="463.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (9 samples, 0.09%)</title><rect x="38.6742%" y="437" width="0.0852%" height="15" fill="rgb(218,202,51)" fg:x="4084" fg:w="9"/><text x="38.9242%" y="447.50"></text></g><g><title>&lt;y2021::d19::scanner::Scanner as core::str::traits::FromStr&gt;::from_str (9 samples, 0.09%)</title><rect x="38.6742%" y="421" width="0.0852%" height="15" fill="rgb(225,176,8)" fg:x="4084" fg:w="9"/><text x="38.9242%" y="431.50"></text></g><g><title>y2021::d19::scanner::Scanner::new (8 samples, 0.08%)</title><rect x="38.6837%" y="405" width="0.0758%" height="15" fill="rgb(219,122,41)" fg:x="4085" fg:w="8"/><text x="38.9337%" y="415.50"></text></g><g><title>y2021::d19::scanner::Scanner::calculate_vectors (8 samples, 0.08%)</title><rect x="38.6837%" y="389" width="0.0758%" height="15" fill="rgb(248,140,20)" fg:x="4085" fg:w="8"/><text x="38.9337%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (8 samples, 0.08%)</title><rect x="38.6837%" y="373" width="0.0758%" height="15" fill="rgb(245,41,37)" fg:x="4085" fg:w="8"/><text x="38.9337%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.07%)</title><rect x="38.6932%" y="357" width="0.0663%" height="15" fill="rgb(235,82,39)" fg:x="4086" fg:w="7"/><text x="38.9432%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.04%)</title><rect x="38.7216%" y="341" width="0.0379%" height="15" fill="rgb(230,108,42)" fg:x="4089" fg:w="4"/><text x="38.9716%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.10%)</title><rect x="38.6742%" y="597" width="0.1042%" height="15" fill="rgb(215,150,50)" fg:x="4084" fg:w="11"/><text x="38.9242%" y="607.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="38.7595%" y="581" width="0.0189%" height="15" fill="rgb(233,212,5)" fg:x="4093" fg:w="2"/><text x="39.0095%" y="591.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="38.7595%" y="565" width="0.0189%" height="15" fill="rgb(245,80,22)" fg:x="4093" fg:w="2"/><text x="39.0095%" y="575.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="38.7595%" y="549" width="0.0189%" height="15" fill="rgb(238,129,16)" fg:x="4093" fg:w="2"/><text x="39.0095%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="38.7595%" y="533" width="0.0189%" height="15" fill="rgb(240,19,0)" fg:x="4093" fg:w="2"/><text x="39.0095%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.02%)</title><rect x="38.7595%" y="517" width="0.0189%" height="15" fill="rgb(232,42,35)" fg:x="4093" fg:w="2"/><text x="39.0095%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="38.7595%" y="501" width="0.0189%" height="15" fill="rgb(223,130,24)" fg:x="4093" fg:w="2"/><text x="39.0095%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="38.7595%" y="485" width="0.0189%" height="15" fill="rgb(237,16,22)" fg:x="4093" fg:w="2"/><text x="39.0095%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="38.7595%" y="469" width="0.0189%" height="15" fill="rgb(248,192,20)" fg:x="4093" fg:w="2"/><text x="39.0095%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.02%)</title><rect x="38.7595%" y="453" width="0.0189%" height="15" fill="rgb(233,167,2)" fg:x="4093" fg:w="2"/><text x="39.0095%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.02%)</title><rect x="38.7595%" y="437" width="0.0189%" height="15" fill="rgb(252,71,44)" fg:x="4093" fg:w="2"/><text x="39.0095%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.02%)</title><rect x="38.7595%" y="421" width="0.0189%" height="15" fill="rgb(238,37,47)" fg:x="4093" fg:w="2"/><text x="39.0095%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (2 samples, 0.02%)</title><rect x="38.7595%" y="405" width="0.0189%" height="15" fill="rgb(214,202,54)" fg:x="4093" fg:w="2"/><text x="39.0095%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (4 samples, 0.04%)</title><rect x="38.9205%" y="293" width="0.0379%" height="15" fill="rgb(254,165,40)" fg:x="4110" fg:w="4"/><text x="39.1705%" y="303.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (4 samples, 0.04%)</title><rect x="38.9205%" y="277" width="0.0379%" height="15" fill="rgb(246,173,38)" fg:x="4110" fg:w="4"/><text x="39.1705%" y="287.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (11 samples, 0.10%)</title><rect x="38.9583%" y="293" width="0.1042%" height="15" fill="rgb(215,3,27)" fg:x="4114" fg:w="11"/><text x="39.2083%" y="303.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (7 samples, 0.07%)</title><rect x="39.0625%" y="293" width="0.0663%" height="15" fill="rgb(239,169,51)" fg:x="4125" fg:w="7"/><text x="39.3125%" y="303.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (3 samples, 0.03%)</title><rect x="39.1288%" y="277" width="0.0284%" height="15" fill="rgb(212,5,25)" fg:x="4132" fg:w="3"/><text x="39.3788%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.36%)</title><rect x="38.8068%" y="357" width="0.3598%" height="15" fill="rgb(243,45,17)" fg:x="4098" fg:w="38"/><text x="39.0568%" y="367.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.36%)</title><rect x="38.8068%" y="341" width="0.3598%" height="15" fill="rgb(242,97,9)" fg:x="4098" fg:w="38"/><text x="39.0568%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.35%)</title><rect x="38.8163%" y="325" width="0.3504%" height="15" fill="rgb(228,71,31)" fg:x="4099" fg:w="37"/><text x="39.0663%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.31%)</title><rect x="38.8542%" y="309" width="0.3125%" height="15" fill="rgb(252,184,16)" fg:x="4103" fg:w="33"/><text x="39.1042%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (4 samples, 0.04%)</title><rect x="39.1288%" y="293" width="0.0379%" height="15" fill="rgb(236,169,46)" fg:x="4132" fg:w="4"/><text x="39.3788%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.41%)</title><rect x="38.8068%" y="373" width="0.4072%" height="15" fill="rgb(207,17,47)" fg:x="4098" fg:w="43"/><text x="39.0568%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.05%)</title><rect x="39.1667%" y="357" width="0.0473%" height="15" fill="rgb(206,201,28)" fg:x="4136" fg:w="5"/><text x="39.4167%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.03%)</title><rect x="39.2424%" y="357" width="0.0284%" height="15" fill="rgb(224,184,23)" fg:x="4144" fg:w="3"/><text x="39.4924%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.03%)</title><rect x="39.2424%" y="341" width="0.0284%" height="15" fill="rgb(208,139,48)" fg:x="4144" fg:w="3"/><text x="39.4924%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.03%)</title><rect x="39.2424%" y="325" width="0.0284%" height="15" fill="rgb(208,130,10)" fg:x="4144" fg:w="3"/><text x="39.4924%" y="335.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (3 samples, 0.03%)</title><rect x="39.2424%" y="309" width="0.0284%" height="15" fill="rgb(211,213,45)" fg:x="4144" fg:w="3"/><text x="39.4924%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.03%)</title><rect x="39.2424%" y="293" width="0.0284%" height="15" fill="rgb(235,100,30)" fg:x="4144" fg:w="3"/><text x="39.4924%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="39.2519%" y="277" width="0.0189%" height="15" fill="rgb(206,144,31)" fg:x="4145" fg:w="2"/><text x="39.5019%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="39.2519%" y="261" width="0.0189%" height="15" fill="rgb(224,200,26)" fg:x="4145" fg:w="2"/><text x="39.5019%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="39.2519%" y="245" width="0.0189%" height="15" fill="rgb(247,104,53)" fg:x="4145" fg:w="2"/><text x="39.5019%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="39.2519%" y="229" width="0.0189%" height="15" fill="rgb(220,14,17)" fg:x="4145" fg:w="2"/><text x="39.5019%" y="239.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (2 samples, 0.02%)</title><rect x="39.2519%" y="213" width="0.0189%" height="15" fill="rgb(230,140,40)" fg:x="4145" fg:w="2"/><text x="39.5019%" y="223.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="39.2519%" y="197" width="0.0189%" height="15" fill="rgb(229,2,41)" fg:x="4145" fg:w="2"/><text x="39.5019%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (26 samples, 0.25%)</title><rect x="40.2083%" y="213" width="0.2462%" height="15" fill="rgb(232,89,16)" fg:x="4246" fg:w="26"/><text x="40.4583%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (44 samples, 0.42%)</title><rect x="40.1326%" y="229" width="0.4167%" height="15" fill="rgb(247,59,52)" fg:x="4238" fg:w="44"/><text x="40.3826%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (10 samples, 0.09%)</title><rect x="40.4545%" y="213" width="0.0947%" height="15" fill="rgb(226,110,21)" fg:x="4272" fg:w="10"/><text x="40.7045%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (60 samples, 0.57%)</title><rect x="40.8144%" y="213" width="0.5682%" height="15" fill="rgb(224,176,43)" fg:x="4310" fg:w="60"/><text x="41.0644%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (228 samples, 2.16%)</title><rect x="39.5360%" y="277" width="2.1591%" height="15" fill="rgb(221,73,6)" fg:x="4175" fg:w="228"/><text x="39.7860%" y="287.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (228 samples, 2.16%)</title><rect x="39.5360%" y="261" width="2.1591%" height="15" fill="rgb(232,78,19)" fg:x="4175" fg:w="228"/><text x="39.7860%" y="271.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (228 samples, 2.16%)</title><rect x="39.5360%" y="245" width="2.1591%" height="15" fill="rgb(233,112,48)" fg:x="4175" fg:w="228"/><text x="39.7860%" y="255.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (121 samples, 1.15%)</title><rect x="40.5492%" y="229" width="1.1458%" height="15" fill="rgb(243,131,47)" fg:x="4282" fg:w="121"/><text x="40.7992%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (33 samples, 0.31%)</title><rect x="41.3826%" y="213" width="0.3125%" height="15" fill="rgb(226,51,1)" fg:x="4370" fg:w="33"/><text x="41.6326%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (14 samples, 0.13%)</title><rect x="41.6951%" y="277" width="0.1326%" height="15" fill="rgb(247,58,7)" fg:x="4403" fg:w="14"/><text x="41.9451%" y="287.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (9 samples, 0.09%)</title><rect x="41.7424%" y="261" width="0.0852%" height="15" fill="rgb(209,7,32)" fg:x="4408" fg:w="9"/><text x="41.9924%" y="271.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (8 samples, 0.08%)</title><rect x="41.7519%" y="245" width="0.0758%" height="15" fill="rgb(209,39,41)" fg:x="4409" fg:w="8"/><text x="42.0019%" y="255.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (8 samples, 0.08%)</title><rect x="41.7519%" y="229" width="0.0758%" height="15" fill="rgb(226,182,46)" fg:x="4409" fg:w="8"/><text x="42.0019%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (69 samples, 0.65%)</title><rect x="43.4280%" y="149" width="0.6534%" height="15" fill="rgb(230,219,10)" fg:x="4586" fg:w="69"/><text x="43.6780%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (104 samples, 0.98%)</title><rect x="43.2292%" y="165" width="0.9848%" height="15" fill="rgb(227,175,30)" fg:x="4565" fg:w="104"/><text x="43.4792%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (14 samples, 0.13%)</title><rect x="44.0814%" y="149" width="0.1326%" height="15" fill="rgb(217,2,50)" fg:x="4655" fg:w="14"/><text x="44.3314%" y="159.50"></text></g><g><title>core::hash::sip::u8to64_le (20 samples, 0.19%)</title><rect x="44.2140%" y="165" width="0.1894%" height="15" fill="rgb(229,160,0)" fg:x="4669" fg:w="20"/><text x="44.4640%" y="175.50"></text></g><g><title>hashbrown::map::make_hash (518 samples, 4.91%)</title><rect x="39.5170%" y="293" width="4.9053%" height="15" fill="rgb(207,78,37)" fg:x="4173" fg:w="518"/><text x="39.7670%" y="303.50">hashbr..</text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::hash::Hash&gt;::hash (274 samples, 2.59%)</title><rect x="41.8277%" y="277" width="2.5947%" height="15" fill="rgb(225,57,0)" fg:x="4417" fg:w="274"/><text x="42.0777%" y="287.50">&lt;y..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (260 samples, 2.46%)</title><rect x="41.9602%" y="261" width="2.4621%" height="15" fill="rgb(232,154,2)" fg:x="4431" fg:w="260"/><text x="42.2102%" y="271.50">co..</text></g><g><title>core::hash::Hasher::write_i64 (252 samples, 2.39%)</title><rect x="42.0360%" y="245" width="2.3864%" height="15" fill="rgb(241,212,25)" fg:x="4439" fg:w="252"/><text x="42.2860%" y="255.50">co..</text></g><g><title>core::hash::Hasher::write_u64 (252 samples, 2.39%)</title><rect x="42.0360%" y="229" width="2.3864%" height="15" fill="rgb(226,69,20)" fg:x="4439" fg:w="252"/><text x="42.2860%" y="239.50">co..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (248 samples, 2.35%)</title><rect x="42.0739%" y="213" width="2.3485%" height="15" fill="rgb(247,184,54)" fg:x="4443" fg:w="248"/><text x="42.3239%" y="223.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (248 samples, 2.35%)</title><rect x="42.0739%" y="197" width="2.3485%" height="15" fill="rgb(210,145,0)" fg:x="4443" fg:w="248"/><text x="42.3239%" y="207.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (248 samples, 2.35%)</title><rect x="42.0739%" y="181" width="2.3485%" height="15" fill="rgb(253,82,12)" fg:x="4443" fg:w="248"/><text x="42.3239%" y="191.50">&lt;..</text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="44.4034%" y="165" width="0.0189%" height="15" fill="rgb(245,42,11)" fg:x="4689" fg:w="2"/><text x="44.6534%" y="175.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (9 samples, 0.09%)</title><rect x="44.7822%" y="213" width="0.0852%" height="15" fill="rgb(219,147,32)" fg:x="4729" fg:w="9"/><text x="45.0322%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.22%)</title><rect x="44.6591%" y="229" width="0.2178%" height="15" fill="rgb(246,12,7)" fg:x="4716" fg:w="23"/><text x="44.9091%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.31%)</title><rect x="44.6212%" y="261" width="0.3125%" height="15" fill="rgb(243,50,9)" fg:x="4712" fg:w="33"/><text x="44.8712%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.31%)</title><rect x="44.6212%" y="245" width="0.3125%" height="15" fill="rgb(219,149,6)" fg:x="4712" fg:w="33"/><text x="44.8712%" y="255.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (6 samples, 0.06%)</title><rect x="44.8769%" y="229" width="0.0568%" height="15" fill="rgb(241,51,42)" fg:x="4739" fg:w="6"/><text x="45.1269%" y="239.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (14 samples, 0.13%)</title><rect x="44.9337%" y="261" width="0.1326%" height="15" fill="rgb(226,128,27)" fg:x="4745" fg:w="14"/><text x="45.1837%" y="271.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::cmp::PartialEq&gt;::eq (14 samples, 0.13%)</title><rect x="44.9337%" y="245" width="0.1326%" height="15" fill="rgb(244,144,4)" fg:x="4745" fg:w="14"/><text x="45.1837%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (5 samples, 0.05%)</title><rect x="45.0663%" y="213" width="0.0473%" height="15" fill="rgb(221,4,13)" fg:x="4759" fg:w="5"/><text x="45.3163%" y="223.50"></text></g><g><title>hashbrown::raw::h2 (14 samples, 0.13%)</title><rect x="45.1136%" y="213" width="0.1326%" height="15" fill="rgb(208,170,28)" fg:x="4764" fg:w="14"/><text x="45.3636%" y="223.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="45.2462%" y="213" width="0.0189%" height="15" fill="rgb(226,131,13)" fg:x="4778" fg:w="2"/><text x="45.4962%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="45.2462%" y="197" width="0.0189%" height="15" fill="rgb(215,72,41)" fg:x="4778" fg:w="2"/><text x="45.4962%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="45.2462%" y="181" width="0.0189%" height="15" fill="rgb(243,108,20)" fg:x="4778" fg:w="2"/><text x="45.4962%" y="191.50"></text></g><g><title>y2021::d19::scanner::Scanner::has_match (736 samples, 6.97%)</title><rect x="38.7973%" y="565" width="6.9697%" height="15" fill="rgb(230,189,17)" fg:x="4097" fg:w="736"/><text x="39.0473%" y="575.50">y2021::d1..</text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors (735 samples, 6.96%)</title><rect x="38.8068%" y="549" width="6.9602%" height="15" fill="rgb(220,50,17)" fg:x="4098" fg:w="735"/><text x="39.0568%" y="559.50">y2021::d1..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (735 samples, 6.96%)</title><rect x="38.8068%" y="533" width="6.9602%" height="15" fill="rgb(248,152,48)" fg:x="4098" fg:w="735"/><text x="39.0568%" y="543.50">core::ite..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (735 samples, 6.96%)</title><rect x="38.8068%" y="517" width="6.9602%" height="15" fill="rgb(244,91,11)" fg:x="4098" fg:w="735"/><text x="39.0568%" y="527.50">&lt;std::col..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (735 samples, 6.96%)</title><rect x="38.8068%" y="501" width="6.9602%" height="15" fill="rgb(220,157,5)" fg:x="4098" fg:w="735"/><text x="39.0568%" y="511.50">&lt;std::col..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (735 samples, 6.96%)</title><rect x="38.8068%" y="485" width="6.9602%" height="15" fill="rgb(253,137,8)" fg:x="4098" fg:w="735"/><text x="39.0568%" y="495.50">&lt;hashbrow..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (735 samples, 6.96%)</title><rect x="38.8068%" y="469" width="6.9602%" height="15" fill="rgb(217,137,51)" fg:x="4098" fg:w="735"/><text x="39.0568%" y="479.50">&lt;hashbrow..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (735 samples, 6.96%)</title><rect x="38.8068%" y="453" width="6.9602%" height="15" fill="rgb(218,209,53)" fg:x="4098" fg:w="735"/><text x="39.0568%" y="463.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (735 samples, 6.96%)</title><rect x="38.8068%" y="437" width="6.9602%" height="15" fill="rgb(249,137,25)" fg:x="4098" fg:w="735"/><text x="39.0568%" y="447.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (735 samples, 6.96%)</title><rect x="38.8068%" y="421" width="6.9602%" height="15" fill="rgb(239,155,26)" fg:x="4098" fg:w="735"/><text x="39.0568%" y="431.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (735 samples, 6.96%)</title><rect x="38.8068%" y="405" width="6.9602%" height="15" fill="rgb(227,85,46)" fg:x="4098" fg:w="735"/><text x="39.0568%" y="415.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (735 samples, 6.96%)</title><rect x="38.8068%" y="389" width="6.9602%" height="15" fill="rgb(251,107,43)" fg:x="4098" fg:w="735"/><text x="39.0568%" y="399.50">core::ite..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (692 samples, 6.55%)</title><rect x="39.2140%" y="373" width="6.5530%" height="15" fill="rgb(234,170,33)" fg:x="4141" fg:w="692"/><text x="39.4640%" y="383.50">core::ite..</text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors::{{closure}} (686 samples, 6.50%)</title><rect x="39.2708%" y="357" width="6.4962%" height="15" fill="rgb(206,29,35)" fg:x="4147" fg:w="686"/><text x="39.5208%" y="367.50">y2021::d1..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (686 samples, 6.50%)</title><rect x="39.2708%" y="341" width="6.4962%" height="15" fill="rgb(227,138,25)" fg:x="4147" fg:w="686"/><text x="39.5208%" y="351.50">std::coll..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (686 samples, 6.50%)</title><rect x="39.2708%" y="325" width="6.4962%" height="15" fill="rgb(249,131,35)" fg:x="4147" fg:w="686"/><text x="39.5208%" y="335.50">hashbrown..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (660 samples, 6.25%)</title><rect x="39.5170%" y="309" width="6.2500%" height="15" fill="rgb(239,6,40)" fg:x="4173" fg:w="660"/><text x="39.7670%" y="319.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (142 samples, 1.34%)</title><rect x="44.4223%" y="293" width="1.3447%" height="15" fill="rgb(246,136,47)" fg:x="4691" fg:w="142"/><text x="44.6723%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (142 samples, 1.34%)</title><rect x="44.4223%" y="277" width="1.3447%" height="15" fill="rgb(253,58,26)" fg:x="4691" fg:w="142"/><text x="44.6723%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (74 samples, 0.70%)</title><rect x="45.0663%" y="261" width="0.7008%" height="15" fill="rgb(237,141,10)" fg:x="4759" fg:w="74"/><text x="45.3163%" y="271.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (74 samples, 0.70%)</title><rect x="45.0663%" y="245" width="0.7008%" height="15" fill="rgb(234,156,12)" fg:x="4759" fg:w="74"/><text x="45.3163%" y="255.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (74 samples, 0.70%)</title><rect x="45.0663%" y="229" width="0.7008%" height="15" fill="rgb(243,224,36)" fg:x="4759" fg:w="74"/><text x="45.3163%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (53 samples, 0.50%)</title><rect x="45.2652%" y="213" width="0.5019%" height="15" fill="rgb(205,229,51)" fg:x="4780" fg:w="53"/><text x="45.5152%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (53 samples, 0.50%)</title><rect x="45.2652%" y="197" width="0.5019%" height="15" fill="rgb(223,189,4)" fg:x="4780" fg:w="53"/><text x="45.5152%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (53 samples, 0.50%)</title><rect x="45.2652%" y="181" width="0.5019%" height="15" fill="rgb(249,167,54)" fg:x="4780" fg:w="53"/><text x="45.5152%" y="191.50"></text></g><g><title>core::core_arch::simd::i8x16::new (53 samples, 0.50%)</title><rect x="45.2652%" y="165" width="0.5019%" height="15" fill="rgb(218,34,28)" fg:x="4780" fg:w="53"/><text x="45.5152%" y="175.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::ops::arith::Sub&gt;::sub (5 samples, 0.05%)</title><rect x="45.8428%" y="533" width="0.0473%" height="15" fill="rgb(232,109,42)" fg:x="4841" fg:w="5"/><text x="46.0928%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.06%)</title><rect x="45.8902%" y="533" width="0.0568%" height="15" fill="rgb(248,214,46)" fg:x="4846" fg:w="6"/><text x="46.1402%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.06%)</title><rect x="45.8902%" y="517" width="0.0568%" height="15" fill="rgb(244,216,40)" fg:x="4846" fg:w="6"/><text x="46.1402%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (32 samples, 0.30%)</title><rect x="46.9508%" y="421" width="0.3030%" height="15" fill="rgb(231,226,31)" fg:x="4958" fg:w="32"/><text x="47.2008%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (50 samples, 0.47%)</title><rect x="46.8655%" y="437" width="0.4735%" height="15" fill="rgb(238,38,43)" fg:x="4949" fg:w="50"/><text x="47.1155%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.09%)</title><rect x="47.2538%" y="421" width="0.0852%" height="15" fill="rgb(208,88,43)" fg:x="4990" fg:w="9"/><text x="47.5038%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (52 samples, 0.49%)</title><rect x="47.6515%" y="421" width="0.4924%" height="15" fill="rgb(205,136,37)" fg:x="5032" fg:w="52"/><text x="47.9015%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (220 samples, 2.08%)</title><rect x="46.2973%" y="485" width="2.0833%" height="15" fill="rgb(237,34,14)" fg:x="4889" fg:w="220"/><text x="46.5473%" y="495.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (220 samples, 2.08%)</title><rect x="46.2973%" y="469" width="2.0833%" height="15" fill="rgb(236,193,44)" fg:x="4889" fg:w="220"/><text x="46.5473%" y="479.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (220 samples, 2.08%)</title><rect x="46.2973%" y="453" width="2.0833%" height="15" fill="rgb(231,48,10)" fg:x="4889" fg:w="220"/><text x="46.5473%" y="463.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (110 samples, 1.04%)</title><rect x="47.3390%" y="437" width="1.0417%" height="15" fill="rgb(213,141,34)" fg:x="4999" fg:w="110"/><text x="47.5890%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (25 samples, 0.24%)</title><rect x="48.1439%" y="421" width="0.2367%" height="15" fill="rgb(249,130,34)" fg:x="5084" fg:w="25"/><text x="48.3939%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (9 samples, 0.09%)</title><rect x="48.3807%" y="485" width="0.0852%" height="15" fill="rgb(219,42,41)" fg:x="5109" fg:w="9"/><text x="48.6307%" y="495.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (6 samples, 0.06%)</title><rect x="48.4091%" y="469" width="0.0568%" height="15" fill="rgb(224,100,54)" fg:x="5112" fg:w="6"/><text x="48.6591%" y="479.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.05%)</title><rect x="48.4186%" y="453" width="0.0473%" height="15" fill="rgb(229,200,27)" fg:x="5113" fg:w="5"/><text x="48.6686%" y="463.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.05%)</title><rect x="48.4186%" y="437" width="0.0473%" height="15" fill="rgb(217,118,10)" fg:x="5113" fg:w="5"/><text x="48.6686%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (56 samples, 0.53%)</title><rect x="50.0852%" y="357" width="0.5303%" height="15" fill="rgb(206,22,3)" fg:x="5289" fg:w="56"/><text x="50.3352%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (109 samples, 1.03%)</title><rect x="49.8390%" y="373" width="1.0322%" height="15" fill="rgb(232,163,46)" fg:x="5263" fg:w="109"/><text x="50.0890%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (27 samples, 0.26%)</title><rect x="50.6155%" y="357" width="0.2557%" height="15" fill="rgb(206,95,13)" fg:x="5345" fg:w="27"/><text x="50.8655%" y="367.50"></text></g><g><title>hashbrown::map::make_insert_hash (500 samples, 4.73%)</title><rect x="46.2973%" y="501" width="4.7348%" height="15" fill="rgb(253,154,18)" fg:x="4889" fg:w="500"/><text x="46.5473%" y="511.50">hashbr..</text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::hash::Hash&gt;::hash (271 samples, 2.57%)</title><rect x="48.4659%" y="485" width="2.5663%" height="15" fill="rgb(219,32,23)" fg:x="5118" fg:w="271"/><text x="48.7159%" y="495.50">&lt;y..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (266 samples, 2.52%)</title><rect x="48.5133%" y="469" width="2.5189%" height="15" fill="rgb(230,191,45)" fg:x="5123" fg:w="266"/><text x="48.7633%" y="479.50">co..</text></g><g><title>core::hash::Hasher::write_i64 (255 samples, 2.41%)</title><rect x="48.6174%" y="453" width="2.4148%" height="15" fill="rgb(229,64,36)" fg:x="5134" fg:w="255"/><text x="48.8674%" y="463.50">co..</text></g><g><title>core::hash::Hasher::write_u64 (255 samples, 2.41%)</title><rect x="48.6174%" y="437" width="2.4148%" height="15" fill="rgb(205,129,25)" fg:x="5134" fg:w="255"/><text x="48.8674%" y="447.50">co..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (254 samples, 2.41%)</title><rect x="48.6269%" y="421" width="2.4053%" height="15" fill="rgb(254,112,7)" fg:x="5135" fg:w="254"/><text x="48.8769%" y="431.50">&lt;s..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (254 samples, 2.41%)</title><rect x="48.6269%" y="405" width="2.4053%" height="15" fill="rgb(226,53,48)" fg:x="5135" fg:w="254"/><text x="48.8769%" y="415.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (254 samples, 2.41%)</title><rect x="48.6269%" y="389" width="2.4053%" height="15" fill="rgb(214,153,38)" fg:x="5135" fg:w="254"/><text x="48.8769%" y="399.50">&lt;c..</text></g><g><title>core::hash::sip::u8to64_le (17 samples, 0.16%)</title><rect x="50.8712%" y="373" width="0.1610%" height="15" fill="rgb(243,101,7)" fg:x="5372" fg:w="17"/><text x="51.1212%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.14%)</title><rect x="51.3068%" y="437" width="0.1420%" height="15" fill="rgb(240,140,22)" fg:x="5418" fg:w="15"/><text x="51.5568%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="51.4299%" y="421" width="0.0189%" height="15" fill="rgb(235,114,2)" fg:x="5431" fg:w="2"/><text x="51.6799%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.29%)</title><rect x="51.1648%" y="469" width="0.2936%" height="15" fill="rgb(242,59,12)" fg:x="5403" fg:w="31"/><text x="51.4148%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.29%)</title><rect x="51.1648%" y="453" width="0.2936%" height="15" fill="rgb(252,134,9)" fg:x="5403" fg:w="31"/><text x="51.4148%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.03%)</title><rect x="51.4583%" y="469" width="0.0284%" height="15" fill="rgb(236,4,44)" fg:x="5434" fg:w="3"/><text x="51.7083%" y="479.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="51.4583%" y="453" width="0.0284%" height="15" fill="rgb(254,172,41)" fg:x="5434" fg:w="3"/><text x="51.7083%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (9 samples, 0.09%)</title><rect x="51.4867%" y="421" width="0.0852%" height="15" fill="rgb(244,63,20)" fg:x="5437" fg:w="9"/><text x="51.7367%" y="431.50"></text></g><g><title>hashbrown::raw::h2 (13 samples, 0.12%)</title><rect x="51.5720%" y="421" width="0.1231%" height="15" fill="rgb(250,73,31)" fg:x="5446" fg:w="13"/><text x="51.8220%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="51.6951%" y="421" width="0.0189%" height="15" fill="rgb(241,38,36)" fg:x="5459" fg:w="2"/><text x="51.9451%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="51.6951%" y="405" width="0.0189%" height="15" fill="rgb(245,211,2)" fg:x="5459" fg:w="2"/><text x="51.9451%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="51.6951%" y="389" width="0.0189%" height="15" fill="rgb(206,120,28)" fg:x="5459" fg:w="2"/><text x="51.9451%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (102 samples, 0.97%)</title><rect x="51.0322%" y="501" width="0.9659%" height="15" fill="rgb(211,59,34)" fg:x="5389" fg:w="102"/><text x="51.2822%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (102 samples, 0.97%)</title><rect x="51.0322%" y="485" width="0.9659%" height="15" fill="rgb(233,168,5)" fg:x="5389" fg:w="102"/><text x="51.2822%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (54 samples, 0.51%)</title><rect x="51.4867%" y="469" width="0.5114%" height="15" fill="rgb(234,33,13)" fg:x="5437" fg:w="54"/><text x="51.7367%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (54 samples, 0.51%)</title><rect x="51.4867%" y="453" width="0.5114%" height="15" fill="rgb(231,150,26)" fg:x="5437" fg:w="54"/><text x="51.7367%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (54 samples, 0.51%)</title><rect x="51.4867%" y="437" width="0.5114%" height="15" fill="rgb(217,191,4)" fg:x="5437" fg:w="54"/><text x="51.7367%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (30 samples, 0.28%)</title><rect x="51.7140%" y="421" width="0.2841%" height="15" fill="rgb(246,198,38)" fg:x="5461" fg:w="30"/><text x="51.9640%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (30 samples, 0.28%)</title><rect x="51.7140%" y="405" width="0.2841%" height="15" fill="rgb(245,64,37)" fg:x="5461" fg:w="30"/><text x="51.9640%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (30 samples, 0.28%)</title><rect x="51.7140%" y="389" width="0.2841%" height="15" fill="rgb(250,30,36)" fg:x="5461" fg:w="30"/><text x="51.9640%" y="399.50"></text></g><g><title>core::core_arch::simd::i8x16::new (30 samples, 0.28%)</title><rect x="51.7140%" y="373" width="0.2841%" height="15" fill="rgb(217,86,53)" fg:x="5461" fg:w="30"/><text x="51.9640%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (88 samples, 0.83%)</title><rect x="52.0833%" y="485" width="0.8333%" height="15" fill="rgb(228,157,16)" fg:x="5500" fg:w="88"/><text x="52.3333%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (88 samples, 0.83%)</title><rect x="52.0833%" y="469" width="0.8333%" height="15" fill="rgb(217,59,31)" fg:x="5500" fg:w="88"/><text x="52.3333%" y="479.50"></text></g><g><title>core::ptr::write (88 samples, 0.83%)</title><rect x="52.0833%" y="453" width="0.8333%" height="15" fill="rgb(237,138,41)" fg:x="5500" fg:w="88"/><text x="52.3333%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (3 samples, 0.03%)</title><rect x="52.9167%" y="485" width="0.0284%" height="15" fill="rgb(227,91,49)" fg:x="5588" fg:w="3"/><text x="53.1667%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (3 samples, 0.03%)</title><rect x="52.9167%" y="469" width="0.0284%" height="15" fill="rgb(247,21,44)" fg:x="5588" fg:w="3"/><text x="53.1667%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.03%)</title><rect x="52.9167%" y="453" width="0.0284%" height="15" fill="rgb(219,210,51)" fg:x="5588" fg:w="3"/><text x="53.1667%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (7 samples, 0.07%)</title><rect x="53.0871%" y="469" width="0.0663%" height="15" fill="rgb(209,140,6)" fg:x="5606" fg:w="7"/><text x="53.3371%" y="479.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.07%)</title><rect x="53.1534%" y="469" width="0.0663%" height="15" fill="rgb(221,188,24)" fg:x="5613" fg:w="7"/><text x="53.4034%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (70 samples, 0.66%)</title><rect x="52.9451%" y="485" width="0.6629%" height="15" fill="rgb(232,154,20)" fg:x="5591" fg:w="70"/><text x="53.1951%" y="495.50"></text></g><g><title>hashbrown::raw::is_full (41 samples, 0.39%)</title><rect x="53.2197%" y="469" width="0.3883%" height="15" fill="rgb(244,137,50)" fg:x="5620" fg:w="41"/><text x="53.4697%" y="479.50"></text></g><g><title>y2021::d19::scanner::Scanner::calculate_vectors (845 samples, 8.00%)</title><rect x="45.7670%" y="549" width="8.0019%" height="15" fill="rgb(225,185,43)" fg:x="4833" fg:w="845"/><text x="46.0170%" y="559.50">y2021::d19:..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (826 samples, 7.82%)</title><rect x="45.9470%" y="533" width="7.8220%" height="15" fill="rgb(213,205,38)" fg:x="4852" fg:w="826"/><text x="46.1970%" y="543.50">std::collec..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (816 samples, 7.73%)</title><rect x="46.0417%" y="517" width="7.7273%" height="15" fill="rgb(236,73,12)" fg:x="4862" fg:w="816"/><text x="46.2917%" y="527.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (187 samples, 1.77%)</title><rect x="51.9981%" y="501" width="1.7708%" height="15" fill="rgb(235,219,13)" fg:x="5491" fg:w="187"/><text x="52.2481%" y="511.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (17 samples, 0.16%)</title><rect x="53.6080%" y="485" width="0.1610%" height="15" fill="rgb(218,59,36)" fg:x="5661" fg:w="17"/><text x="53.8580%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (2 samples, 0.02%)</title><rect x="53.7500%" y="469" width="0.0189%" height="15" fill="rgb(205,110,39)" fg:x="5676" fg:w="2"/><text x="54.0000%" y="479.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.02%)</title><rect x="53.7500%" y="453" width="0.0189%" height="15" fill="rgb(218,206,42)" fg:x="5676" fg:w="2"/><text x="54.0000%" y="463.50"></text></g><g><title>y2021::d19::main::attempt_match (1,584 samples, 15.00%)</title><rect x="38.7879%" y="581" width="15.0000%" height="15" fill="rgb(248,125,24)" fg:x="4096" fg:w="1584"/><text x="39.0379%" y="591.50">y2021::d19::main::attem..</text></g><g><title>y2021::d19::scanner::Scanner::rotate (847 samples, 8.02%)</title><rect x="45.7670%" y="565" width="8.0208%" height="15" fill="rgb(242,28,27)" fg:x="4833" fg:w="847"/><text x="46.0170%" y="575.50">y2021::d19:..</text></g><g><title>y2021::d19::scanner::Scanner::rotate_beacons (2 samples, 0.02%)</title><rect x="53.7689%" y="549" width="0.0189%" height="15" fill="rgb(216,228,15)" fg:x="5678" fg:w="2"/><text x="54.0189%" y="559.50"></text></g><g><title>y2021::d19::main::p01 (1,601 samples, 15.16%)</title><rect x="38.6742%" y="613" width="15.1610%" height="15" fill="rgb(235,116,46)" fg:x="4084" fg:w="1601"/><text x="38.9242%" y="623.50">y2021::d19::main::p01</text></g><g><title>y2021::d19::main::build_chart (1,589 samples, 15.05%)</title><rect x="38.7879%" y="597" width="15.0473%" height="15" fill="rgb(224,18,32)" fg:x="4096" fg:w="1589"/><text x="39.0379%" y="607.50">y2021::d19::main::build..</text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors (5 samples, 0.05%)</title><rect x="53.7879%" y="581" width="0.0473%" height="15" fill="rgb(252,5,12)" fg:x="5680" fg:w="5"/><text x="54.0379%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.05%)</title><rect x="53.7879%" y="565" width="0.0473%" height="15" fill="rgb(251,36,5)" fg:x="5680" fg:w="5"/><text x="54.0379%" y="575.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.05%)</title><rect x="53.7879%" y="549" width="0.0473%" height="15" fill="rgb(217,53,14)" fg:x="5680" fg:w="5"/><text x="54.0379%" y="559.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.05%)</title><rect x="53.7879%" y="533" width="0.0473%" height="15" fill="rgb(215,86,45)" fg:x="5680" fg:w="5"/><text x="54.0379%" y="543.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.05%)</title><rect x="53.7879%" y="517" width="0.0473%" height="15" fill="rgb(242,169,11)" fg:x="5680" fg:w="5"/><text x="54.0379%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.05%)</title><rect x="53.7879%" y="501" width="0.0473%" height="15" fill="rgb(211,213,45)" fg:x="5680" fg:w="5"/><text x="54.0379%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.05%)</title><rect x="53.7879%" y="485" width="0.0473%" height="15" fill="rgb(205,88,11)" fg:x="5680" fg:w="5"/><text x="54.0379%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.05%)</title><rect x="53.7879%" y="469" width="0.0473%" height="15" fill="rgb(252,69,26)" fg:x="5680" fg:w="5"/><text x="54.0379%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.05%)</title><rect x="53.7879%" y="453" width="0.0473%" height="15" fill="rgb(246,123,37)" fg:x="5680" fg:w="5"/><text x="54.0379%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.05%)</title><rect x="53.7879%" y="437" width="0.0473%" height="15" fill="rgb(212,205,5)" fg:x="5680" fg:w="5"/><text x="54.0379%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.05%)</title><rect x="53.7879%" y="421" width="0.0473%" height="15" fill="rgb(253,148,0)" fg:x="5680" fg:w="5"/><text x="54.0379%" y="431.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (5 samples, 0.05%)</title><rect x="53.7879%" y="405" width="0.0473%" height="15" fill="rgb(239,22,4)" fg:x="5680" fg:w="5"/><text x="54.0379%" y="415.50"></text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors::{{closure}} (4 samples, 0.04%)</title><rect x="53.7973%" y="389" width="0.0379%" height="15" fill="rgb(226,26,53)" fg:x="5681" fg:w="4"/><text x="54.0473%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (4 samples, 0.04%)</title><rect x="53.7973%" y="373" width="0.0379%" height="15" fill="rgb(225,229,45)" fg:x="5681" fg:w="4"/><text x="54.0473%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.04%)</title><rect x="53.7973%" y="357" width="0.0379%" height="15" fill="rgb(220,60,37)" fg:x="5681" fg:w="4"/><text x="54.0473%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.04%)</title><rect x="53.7973%" y="341" width="0.0379%" height="15" fill="rgb(217,180,35)" fg:x="5681" fg:w="4"/><text x="54.0473%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.04%)</title><rect x="53.7973%" y="325" width="0.0379%" height="15" fill="rgb(229,7,53)" fg:x="5681" fg:w="4"/><text x="54.0473%" y="335.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="53.8068%" y="309" width="0.0284%" height="15" fill="rgb(254,137,3)" fg:x="5682" fg:w="3"/><text x="54.0568%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (3 samples, 0.03%)</title><rect x="53.8068%" y="293" width="0.0284%" height="15" fill="rgb(215,140,41)" fg:x="5682" fg:w="3"/><text x="54.0568%" y="303.50"></text></g><g><title>core::hash::Hasher::write_i64 (3 samples, 0.03%)</title><rect x="53.8068%" y="277" width="0.0284%" height="15" fill="rgb(250,80,15)" fg:x="5682" fg:w="3"/><text x="54.0568%" y="287.50"></text></g><g><title>core::hash::Hasher::write_u64 (3 samples, 0.03%)</title><rect x="53.8068%" y="261" width="0.0284%" height="15" fill="rgb(252,191,6)" fg:x="5682" fg:w="3"/><text x="54.0568%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="53.8068%" y="245" width="0.0284%" height="15" fill="rgb(246,217,18)" fg:x="5682" fg:w="3"/><text x="54.0568%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="53.8068%" y="229" width="0.0284%" height="15" fill="rgb(223,93,7)" fg:x="5682" fg:w="3"/><text x="54.0568%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="53.8068%" y="213" width="0.0284%" height="15" fill="rgb(225,55,52)" fg:x="5682" fg:w="3"/><text x="54.0568%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="53.8163%" y="197" width="0.0189%" height="15" fill="rgb(240,31,24)" fg:x="5683" fg:w="2"/><text x="54.0663%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="53.8352%" y="405" width="0.0189%" height="15" fill="rgb(205,56,52)" fg:x="5685" fg:w="2"/><text x="54.0852%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="53.8352%" y="389" width="0.0189%" height="15" fill="rgb(246,146,12)" fg:x="5685" fg:w="2"/><text x="54.0852%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="53.8352%" y="373" width="0.0189%" height="15" fill="rgb(239,84,36)" fg:x="5685" fg:w="2"/><text x="54.0852%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="53.8352%" y="357" width="0.0189%" height="15" fill="rgb(207,41,40)" fg:x="5685" fg:w="2"/><text x="54.0852%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="53.8352%" y="341" width="0.0189%" height="15" fill="rgb(241,179,25)" fg:x="5685" fg:w="2"/><text x="54.0852%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.02%)</title><rect x="53.8352%" y="325" width="0.0189%" height="15" fill="rgb(210,0,34)" fg:x="5685" fg:w="2"/><text x="54.0852%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="53.8352%" y="309" width="0.0189%" height="15" fill="rgb(225,217,29)" fg:x="5685" fg:w="2"/><text x="54.0852%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="53.8352%" y="293" width="0.0189%" height="15" fill="rgb(216,191,38)" fg:x="5685" fg:w="2"/><text x="54.0852%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.02%)</title><rect x="53.8352%" y="277" width="0.0189%" height="15" fill="rgb(232,140,52)" fg:x="5685" fg:w="2"/><text x="54.0852%" y="287.50"></text></g><g><title>&lt;y2021::d19::scanner::Scanner as core::str::traits::FromStr&gt;::from_str::{{closure}} (2 samples, 0.02%)</title><rect x="53.8352%" y="261" width="0.0189%" height="15" fill="rgb(223,158,51)" fg:x="5685" fg:w="2"/><text x="54.0852%" y="271.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2 samples, 0.02%)</title><rect x="53.8352%" y="245" width="0.0189%" height="15" fill="rgb(235,29,51)" fg:x="5685" fg:w="2"/><text x="54.0852%" y="255.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::str::traits::FromStr&gt;::from_str (2 samples, 0.02%)</title><rect x="53.8352%" y="229" width="0.0189%" height="15" fill="rgb(215,181,18)" fg:x="5685" fg:w="2"/><text x="54.0852%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="53.8352%" y="213" width="0.0189%" height="15" fill="rgb(227,125,34)" fg:x="5685" fg:w="2"/><text x="54.0852%" y="223.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="53.8352%" y="197" width="0.0189%" height="15" fill="rgb(230,197,49)" fg:x="5685" fg:w="2"/><text x="54.0852%" y="207.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (2 samples, 0.02%)</title><rect x="53.8352%" y="181" width="0.0189%" height="15" fill="rgb(239,141,16)" fg:x="5685" fg:w="2"/><text x="54.0852%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="53.8731%" y="245" width="0.0189%" height="15" fill="rgb(225,105,43)" fg:x="5689" fg:w="2"/><text x="54.1231%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="53.8731%" y="229" width="0.0189%" height="15" fill="rgb(214,131,14)" fg:x="5689" fg:w="2"/><text x="54.1231%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="53.8731%" y="213" width="0.0189%" height="15" fill="rgb(229,177,11)" fg:x="5689" fg:w="2"/><text x="54.1231%" y="223.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (3 samples, 0.03%)</title><rect x="53.8731%" y="277" width="0.0284%" height="15" fill="rgb(231,180,14)" fg:x="5689" fg:w="3"/><text x="54.1231%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="53.8731%" y="261" width="0.0284%" height="15" fill="rgb(232,88,2)" fg:x="5689" fg:w="3"/><text x="54.1231%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.04%)</title><rect x="53.8731%" y="325" width="0.0379%" height="15" fill="rgb(205,220,8)" fg:x="5689" fg:w="4"/><text x="54.1231%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.04%)</title><rect x="53.8731%" y="309" width="0.0379%" height="15" fill="rgb(225,23,53)" fg:x="5689" fg:w="4"/><text x="54.1231%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (4 samples, 0.04%)</title><rect x="53.8731%" y="293" width="0.0379%" height="15" fill="rgb(213,62,29)" fg:x="5689" fg:w="4"/><text x="54.1231%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.09%)</title><rect x="53.8352%" y="581" width="0.0852%" height="15" fill="rgb(227,75,7)" fg:x="5685" fg:w="9"/><text x="54.0852%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 0.09%)</title><rect x="53.8352%" y="565" width="0.0852%" height="15" fill="rgb(207,105,14)" fg:x="5685" fg:w="9"/><text x="54.0852%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 0.09%)</title><rect x="53.8352%" y="549" width="0.0852%" height="15" fill="rgb(245,62,29)" fg:x="5685" fg:w="9"/><text x="54.0852%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.09%)</title><rect x="53.8352%" y="533" width="0.0852%" height="15" fill="rgb(236,202,4)" fg:x="5685" fg:w="9"/><text x="54.0852%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.09%)</title><rect x="53.8352%" y="517" width="0.0852%" height="15" fill="rgb(250,67,1)" fg:x="5685" fg:w="9"/><text x="54.0852%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.09%)</title><rect x="53.8352%" y="501" width="0.0852%" height="15" fill="rgb(253,115,44)" fg:x="5685" fg:w="9"/><text x="54.0852%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.09%)</title><rect x="53.8352%" y="485" width="0.0852%" height="15" fill="rgb(251,139,18)" fg:x="5685" fg:w="9"/><text x="54.0852%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9 samples, 0.09%)</title><rect x="53.8352%" y="469" width="0.0852%" height="15" fill="rgb(218,22,32)" fg:x="5685" fg:w="9"/><text x="54.0852%" y="479.50"></text></g><g><title>y2021::d19::main::p02::{{closure}} (9 samples, 0.09%)</title><rect x="53.8352%" y="453" width="0.0852%" height="15" fill="rgb(243,53,5)" fg:x="5685" fg:w="9"/><text x="54.0852%" y="463.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (9 samples, 0.09%)</title><rect x="53.8352%" y="437" width="0.0852%" height="15" fill="rgb(227,56,16)" fg:x="5685" fg:w="9"/><text x="54.0852%" y="447.50"></text></g><g><title>&lt;y2021::d19::scanner::Scanner as core::str::traits::FromStr&gt;::from_str (9 samples, 0.09%)</title><rect x="53.8352%" y="421" width="0.0852%" height="15" fill="rgb(245,53,0)" fg:x="5685" fg:w="9"/><text x="54.0852%" y="431.50"></text></g><g><title>y2021::d19::scanner::Scanner::new (7 samples, 0.07%)</title><rect x="53.8542%" y="405" width="0.0663%" height="15" fill="rgb(216,170,35)" fg:x="5687" fg:w="7"/><text x="54.1042%" y="415.50"></text></g><g><title>y2021::d19::scanner::Scanner::calculate_vectors (7 samples, 0.07%)</title><rect x="53.8542%" y="389" width="0.0663%" height="15" fill="rgb(211,200,8)" fg:x="5687" fg:w="7"/><text x="54.1042%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (7 samples, 0.07%)</title><rect x="53.8542%" y="373" width="0.0663%" height="15" fill="rgb(228,204,44)" fg:x="5687" fg:w="7"/><text x="54.1042%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.07%)</title><rect x="53.8542%" y="357" width="0.0663%" height="15" fill="rgb(214,121,17)" fg:x="5687" fg:w="7"/><text x="54.1042%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.06%)</title><rect x="53.8636%" y="341" width="0.0568%" height="15" fill="rgb(233,64,38)" fg:x="5688" fg:w="6"/><text x="54.1136%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.10%)</title><rect x="53.8352%" y="597" width="0.1042%" height="15" fill="rgb(253,54,19)" fg:x="5685" fg:w="11"/><text x="54.0852%" y="607.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="53.9205%" y="581" width="0.0189%" height="15" fill="rgb(253,94,18)" fg:x="5694" fg:w="2"/><text x="54.1705%" y="591.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="53.9205%" y="565" width="0.0189%" height="15" fill="rgb(227,57,52)" fg:x="5694" fg:w="2"/><text x="54.1705%" y="575.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="53.9205%" y="549" width="0.0189%" height="15" fill="rgb(230,228,50)" fg:x="5694" fg:w="2"/><text x="54.1705%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="53.9205%" y="533" width="0.0189%" height="15" fill="rgb(217,205,27)" fg:x="5694" fg:w="2"/><text x="54.1705%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.02%)</title><rect x="53.9205%" y="517" width="0.0189%" height="15" fill="rgb(252,71,50)" fg:x="5694" fg:w="2"/><text x="54.1705%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="53.9205%" y="501" width="0.0189%" height="15" fill="rgb(209,86,4)" fg:x="5694" fg:w="2"/><text x="54.1705%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="53.9205%" y="485" width="0.0189%" height="15" fill="rgb(229,94,0)" fg:x="5694" fg:w="2"/><text x="54.1705%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="53.9205%" y="469" width="0.0189%" height="15" fill="rgb(252,223,21)" fg:x="5694" fg:w="2"/><text x="54.1705%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (9 samples, 0.09%)</title><rect x="54.1951%" y="293" width="0.0852%" height="15" fill="rgb(230,210,4)" fg:x="5723" fg:w="9"/><text x="54.4451%" y="303.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (8 samples, 0.08%)</title><rect x="54.2045%" y="277" width="0.0758%" height="15" fill="rgb(240,149,38)" fg:x="5724" fg:w="8"/><text x="54.4545%" y="287.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (13 samples, 0.12%)</title><rect x="54.2803%" y="293" width="0.1231%" height="15" fill="rgb(254,105,20)" fg:x="5732" fg:w="13"/><text x="54.5303%" y="303.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (2 samples, 0.02%)</title><rect x="54.4034%" y="293" width="0.0189%" height="15" fill="rgb(253,87,46)" fg:x="5745" fg:w="2"/><text x="54.6534%" y="303.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (5 samples, 0.05%)</title><rect x="54.4223%" y="277" width="0.0473%" height="15" fill="rgb(253,116,33)" fg:x="5747" fg:w="5"/><text x="54.6723%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.51%)</title><rect x="53.9867%" y="357" width="0.5114%" height="15" fill="rgb(229,198,5)" fg:x="5701" fg:w="54"/><text x="54.2367%" y="367.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.51%)</title><rect x="53.9867%" y="341" width="0.5114%" height="15" fill="rgb(242,38,37)" fg:x="5701" fg:w="54"/><text x="54.2367%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.48%)</title><rect x="54.0152%" y="325" width="0.4830%" height="15" fill="rgb(242,69,53)" fg:x="5704" fg:w="51"/><text x="54.2652%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.45%)</title><rect x="54.0530%" y="309" width="0.4451%" height="15" fill="rgb(249,80,16)" fg:x="5708" fg:w="47"/><text x="54.3030%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (8 samples, 0.08%)</title><rect x="54.4223%" y="293" width="0.0758%" height="15" fill="rgb(206,128,11)" fg:x="5747" fg:w="8"/><text x="54.6723%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (3 samples, 0.03%)</title><rect x="54.4697%" y="277" width="0.0284%" height="15" fill="rgb(212,35,20)" fg:x="5752" fg:w="3"/><text x="54.7197%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.03%)</title><rect x="54.4697%" y="261" width="0.0284%" height="15" fill="rgb(236,79,13)" fg:x="5752" fg:w="3"/><text x="54.7197%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.52%)</title><rect x="53.9867%" y="373" width="0.5208%" height="15" fill="rgb(233,123,3)" fg:x="5701" fg:w="55"/><text x="54.2367%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.02%)</title><rect x="54.5739%" y="357" width="0.0189%" height="15" fill="rgb(214,93,52)" fg:x="5763" fg:w="2"/><text x="54.8239%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.02%)</title><rect x="54.5739%" y="341" width="0.0189%" height="15" fill="rgb(251,37,40)" fg:x="5763" fg:w="2"/><text x="54.8239%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.02%)</title><rect x="54.5739%" y="325" width="0.0189%" height="15" fill="rgb(227,80,54)" fg:x="5763" fg:w="2"/><text x="54.8239%" y="335.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (2 samples, 0.02%)</title><rect x="54.5739%" y="309" width="0.0189%" height="15" fill="rgb(254,48,11)" fg:x="5763" fg:w="2"/><text x="54.8239%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="54.5739%" y="293" width="0.0189%" height="15" fill="rgb(235,193,26)" fg:x="5763" fg:w="2"/><text x="54.8239%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="54.5739%" y="277" width="0.0189%" height="15" fill="rgb(229,99,21)" fg:x="5763" fg:w="2"/><text x="54.8239%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="54.5739%" y="261" width="0.0189%" height="15" fill="rgb(211,140,41)" fg:x="5763" fg:w="2"/><text x="54.8239%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="54.5739%" y="245" width="0.0189%" height="15" fill="rgb(240,227,30)" fg:x="5763" fg:w="2"/><text x="54.8239%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="54.5739%" y="229" width="0.0189%" height="15" fill="rgb(215,224,45)" fg:x="5763" fg:w="2"/><text x="54.8239%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (27 samples, 0.26%)</title><rect x="55.6155%" y="213" width="0.2557%" height="15" fill="rgb(206,123,31)" fg:x="5873" fg:w="27"/><text x="55.8655%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (46 samples, 0.44%)</title><rect x="55.5966%" y="229" width="0.4356%" height="15" fill="rgb(210,138,16)" fg:x="5871" fg:w="46"/><text x="55.8466%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (17 samples, 0.16%)</title><rect x="55.8712%" y="213" width="0.1610%" height="15" fill="rgb(228,57,28)" fg:x="5900" fg:w="17"/><text x="56.1212%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (87 samples, 0.82%)</title><rect x="56.3068%" y="213" width="0.8239%" height="15" fill="rgb(242,170,10)" fg:x="5946" fg:w="87"/><text x="56.5568%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (284 samples, 2.69%)</title><rect x="54.8674%" y="277" width="2.6894%" height="15" fill="rgb(228,214,39)" fg:x="5794" fg:w="284"/><text x="55.1174%" y="287.50">&lt;s..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (284 samples, 2.69%)</title><rect x="54.8674%" y="261" width="2.6894%" height="15" fill="rgb(218,179,33)" fg:x="5794" fg:w="284"/><text x="55.1174%" y="271.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (284 samples, 2.69%)</title><rect x="54.8674%" y="245" width="2.6894%" height="15" fill="rgb(235,193,39)" fg:x="5794" fg:w="284"/><text x="55.1174%" y="255.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (161 samples, 1.52%)</title><rect x="56.0322%" y="229" width="1.5246%" height="15" fill="rgb(219,221,36)" fg:x="5917" fg:w="161"/><text x="56.2822%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (45 samples, 0.43%)</title><rect x="57.1307%" y="213" width="0.4261%" height="15" fill="rgb(248,218,19)" fg:x="6033" fg:w="45"/><text x="57.3807%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (24 samples, 0.23%)</title><rect x="57.5568%" y="277" width="0.2273%" height="15" fill="rgb(205,50,9)" fg:x="6078" fg:w="24"/><text x="57.8068%" y="287.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (16 samples, 0.15%)</title><rect x="57.6326%" y="261" width="0.1515%" height="15" fill="rgb(238,81,28)" fg:x="6086" fg:w="16"/><text x="57.8826%" y="271.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (13 samples, 0.12%)</title><rect x="57.6610%" y="245" width="0.1231%" height="15" fill="rgb(235,110,19)" fg:x="6089" fg:w="13"/><text x="57.9110%" y="255.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (13 samples, 0.12%)</title><rect x="57.6610%" y="229" width="0.1231%" height="15" fill="rgb(214,7,14)" fg:x="6089" fg:w="13"/><text x="57.9110%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (104 samples, 0.98%)</title><rect x="60.3409%" y="149" width="0.9848%" height="15" fill="rgb(211,77,3)" fg:x="6372" fg:w="104"/><text x="60.5909%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (179 samples, 1.70%)</title><rect x="59.9053%" y="165" width="1.6951%" height="15" fill="rgb(229,5,9)" fg:x="6326" fg:w="179"/><text x="60.1553%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (29 samples, 0.27%)</title><rect x="61.3258%" y="149" width="0.2746%" height="15" fill="rgb(225,90,11)" fg:x="6476" fg:w="29"/><text x="61.5758%" y="159.50"></text></g><g><title>hashbrown::map::make_hash (735 samples, 6.96%)</title><rect x="54.8390%" y="293" width="6.9602%" height="15" fill="rgb(242,56,8)" fg:x="5791" fg:w="735"/><text x="55.0890%" y="303.50">hashbrown..</text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::hash::Hash&gt;::hash (424 samples, 4.02%)</title><rect x="57.7841%" y="277" width="4.0152%" height="15" fill="rgb(249,212,39)" fg:x="6102" fg:w="424"/><text x="58.0341%" y="287.50">&lt;y20..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (389 samples, 3.68%)</title><rect x="58.1155%" y="261" width="3.6837%" height="15" fill="rgb(236,90,9)" fg:x="6137" fg:w="389"/><text x="58.3655%" y="271.50">core..</text></g><g><title>core::hash::Hasher::write_i64 (375 samples, 3.55%)</title><rect x="58.2481%" y="245" width="3.5511%" height="15" fill="rgb(206,88,35)" fg:x="6151" fg:w="375"/><text x="58.4981%" y="255.50">core..</text></g><g><title>core::hash::Hasher::write_u64 (375 samples, 3.55%)</title><rect x="58.2481%" y="229" width="3.5511%" height="15" fill="rgb(205,126,30)" fg:x="6151" fg:w="375"/><text x="58.4981%" y="239.50">core..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (363 samples, 3.44%)</title><rect x="58.3617%" y="213" width="3.4375%" height="15" fill="rgb(230,176,12)" fg:x="6163" fg:w="363"/><text x="58.6117%" y="223.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (363 samples, 3.44%)</title><rect x="58.3617%" y="197" width="3.4375%" height="15" fill="rgb(243,19,9)" fg:x="6163" fg:w="363"/><text x="58.6117%" y="207.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (363 samples, 3.44%)</title><rect x="58.3617%" y="181" width="3.4375%" height="15" fill="rgb(245,171,17)" fg:x="6163" fg:w="363"/><text x="58.6117%" y="191.50">&lt;co..</text></g><g><title>core::hash::sip::u8to64_le (20 samples, 0.19%)</title><rect x="61.6098%" y="165" width="0.1894%" height="15" fill="rgb(227,52,21)" fg:x="6506" fg:w="20"/><text x="61.8598%" y="175.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.26%)</title><rect x="62.2159%" y="229" width="0.2557%" height="15" fill="rgb(238,69,14)" fg:x="6570" fg:w="27"/><text x="62.4659%" y="239.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (12 samples, 0.11%)</title><rect x="62.3580%" y="213" width="0.1136%" height="15" fill="rgb(241,156,39)" fg:x="6585" fg:w="12"/><text x="62.6080%" y="223.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (5 samples, 0.05%)</title><rect x="62.4716%" y="229" width="0.0473%" height="15" fill="rgb(212,227,28)" fg:x="6597" fg:w="5"/><text x="62.7216%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.37%)</title><rect x="62.1591%" y="261" width="0.3693%" height="15" fill="rgb(209,118,27)" fg:x="6564" fg:w="39"/><text x="62.4091%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.37%)</title><rect x="62.1591%" y="245" width="0.3693%" height="15" fill="rgb(226,102,5)" fg:x="6564" fg:w="39"/><text x="62.4091%" y="255.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (23 samples, 0.22%)</title><rect x="62.5284%" y="261" width="0.2178%" height="15" fill="rgb(223,34,3)" fg:x="6603" fg:w="23"/><text x="62.7784%" y="271.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::cmp::PartialEq&gt;::eq (23 samples, 0.22%)</title><rect x="62.5284%" y="245" width="0.2178%" height="15" fill="rgb(221,81,38)" fg:x="6603" fg:w="23"/><text x="62.7784%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (6 samples, 0.06%)</title><rect x="62.7462%" y="213" width="0.0568%" height="15" fill="rgb(236,219,28)" fg:x="6626" fg:w="6"/><text x="62.9962%" y="223.50"></text></g><g><title>hashbrown::raw::h2 (26 samples, 0.25%)</title><rect x="62.8030%" y="213" width="0.2462%" height="15" fill="rgb(213,200,14)" fg:x="6632" fg:w="26"/><text x="63.0530%" y="223.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.03%)</title><rect x="63.0492%" y="213" width="0.0284%" height="15" fill="rgb(240,33,19)" fg:x="6658" fg:w="3"/><text x="63.2992%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.03%)</title><rect x="63.0492%" y="197" width="0.0284%" height="15" fill="rgb(233,113,27)" fg:x="6658" fg:w="3"/><text x="63.2992%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="63.0492%" y="181" width="0.0284%" height="15" fill="rgb(220,221,18)" fg:x="6658" fg:w="3"/><text x="63.2992%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,044 samples, 9.89%)</title><rect x="53.9773%" y="533" width="9.8864%" height="15" fill="rgb(238,92,8)" fg:x="5700" fg:w="1044"/><text x="54.2273%" y="543.50">core::iter::tr..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,044 samples, 9.89%)</title><rect x="53.9773%" y="517" width="9.8864%" height="15" fill="rgb(222,164,16)" fg:x="5700" fg:w="1044"/><text x="54.2273%" y="527.50">&lt;std::collecti..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,044 samples, 9.89%)</title><rect x="53.9773%" y="501" width="9.8864%" height="15" fill="rgb(241,119,3)" fg:x="5700" fg:w="1044"/><text x="54.2273%" y="511.50">&lt;std::collecti..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,044 samples, 9.89%)</title><rect x="53.9773%" y="485" width="9.8864%" height="15" fill="rgb(241,44,8)" fg:x="5700" fg:w="1044"/><text x="54.2273%" y="495.50">&lt;hashbrown::se..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,044 samples, 9.89%)</title><rect x="53.9773%" y="469" width="9.8864%" height="15" fill="rgb(230,36,40)" fg:x="5700" fg:w="1044"/><text x="54.2273%" y="479.50">&lt;hashbrown::ma..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,044 samples, 9.89%)</title><rect x="53.9773%" y="453" width="9.8864%" height="15" fill="rgb(243,16,36)" fg:x="5700" fg:w="1044"/><text x="54.2273%" y="463.50">core::iter::tr..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,044 samples, 9.89%)</title><rect x="53.9773%" y="437" width="9.8864%" height="15" fill="rgb(231,4,26)" fg:x="5700" fg:w="1044"/><text x="54.2273%" y="447.50">&lt;core::iter::a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,044 samples, 9.89%)</title><rect x="53.9773%" y="421" width="9.8864%" height="15" fill="rgb(240,9,31)" fg:x="5700" fg:w="1044"/><text x="54.2273%" y="431.50">&lt;core::iter::a..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,044 samples, 9.89%)</title><rect x="53.9773%" y="405" width="9.8864%" height="15" fill="rgb(207,173,15)" fg:x="5700" fg:w="1044"/><text x="54.2273%" y="415.50">&lt;core::iter::a..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,043 samples, 9.88%)</title><rect x="53.9867%" y="389" width="9.8769%" height="15" fill="rgb(224,192,53)" fg:x="5701" fg:w="1043"/><text x="54.2367%" y="399.50">core::iter::tr..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (988 samples, 9.36%)</title><rect x="54.5076%" y="373" width="9.3561%" height="15" fill="rgb(223,67,28)" fg:x="5756" fg:w="988"/><text x="54.7576%" y="383.50">core::iter::a..</text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors::{{closure}} (979 samples, 9.27%)</title><rect x="54.5928%" y="357" width="9.2708%" height="15" fill="rgb(211,20,47)" fg:x="5765" fg:w="979"/><text x="54.8428%" y="367.50">y2021::d19::s..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (979 samples, 9.27%)</title><rect x="54.5928%" y="341" width="9.2708%" height="15" fill="rgb(240,228,2)" fg:x="5765" fg:w="979"/><text x="54.8428%" y="351.50">std::collecti..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (979 samples, 9.27%)</title><rect x="54.5928%" y="325" width="9.2708%" height="15" fill="rgb(248,151,12)" fg:x="5765" fg:w="979"/><text x="54.8428%" y="335.50">hashbrown::ma..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (953 samples, 9.02%)</title><rect x="54.8390%" y="309" width="9.0246%" height="15" fill="rgb(244,8,39)" fg:x="5791" fg:w="953"/><text x="55.0890%" y="319.50">hashbrown::ma..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (218 samples, 2.06%)</title><rect x="61.7992%" y="293" width="2.0644%" height="15" fill="rgb(222,26,8)" fg:x="6526" fg:w="218"/><text x="62.0492%" y="303.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (218 samples, 2.06%)</title><rect x="61.7992%" y="277" width="2.0644%" height="15" fill="rgb(213,106,44)" fg:x="6526" fg:w="218"/><text x="62.0492%" y="287.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (118 samples, 1.12%)</title><rect x="62.7462%" y="261" width="1.1174%" height="15" fill="rgb(214,129,20)" fg:x="6626" fg:w="118"/><text x="62.9962%" y="271.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (118 samples, 1.12%)</title><rect x="62.7462%" y="245" width="1.1174%" height="15" fill="rgb(212,32,13)" fg:x="6626" fg:w="118"/><text x="62.9962%" y="255.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (118 samples, 1.12%)</title><rect x="62.7462%" y="229" width="1.1174%" height="15" fill="rgb(208,168,33)" fg:x="6626" fg:w="118"/><text x="62.9962%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (83 samples, 0.79%)</title><rect x="63.0777%" y="213" width="0.7860%" height="15" fill="rgb(231,207,8)" fg:x="6661" fg:w="83"/><text x="63.3277%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (83 samples, 0.79%)</title><rect x="63.0777%" y="197" width="0.7860%" height="15" fill="rgb(235,219,23)" fg:x="6661" fg:w="83"/><text x="63.3277%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (83 samples, 0.79%)</title><rect x="63.0777%" y="181" width="0.7860%" height="15" fill="rgb(226,216,26)" fg:x="6661" fg:w="83"/><text x="63.3277%" y="191.50"></text></g><g><title>core::core_arch::simd::i8x16::new (83 samples, 0.79%)</title><rect x="63.0777%" y="165" width="0.7860%" height="15" fill="rgb(239,137,16)" fg:x="6661" fg:w="83"/><text x="63.3277%" y="175.50"></text></g><g><title>y2021::d19::scanner::Scanner::has_match (1,046 samples, 9.91%)</title><rect x="53.9678%" y="565" width="9.9053%" height="15" fill="rgb(207,12,36)" fg:x="5699" fg:w="1046"/><text x="54.2178%" y="575.50">y2021::d19::sc..</text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors (1,045 samples, 9.90%)</title><rect x="53.9773%" y="549" width="9.8958%" height="15" fill="rgb(210,214,24)" fg:x="5700" fg:w="1045"/><text x="54.2273%" y="559.50">y2021::d19::sc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.02%)</title><rect x="63.9962%" y="533" width="0.0189%" height="15" fill="rgb(206,56,30)" fg:x="6758" fg:w="2"/><text x="64.2462%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.02%)</title><rect x="63.9962%" y="517" width="0.0189%" height="15" fill="rgb(228,143,26)" fg:x="6758" fg:w="2"/><text x="64.2462%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.02%)</title><rect x="63.9962%" y="501" width="0.0189%" height="15" fill="rgb(216,218,46)" fg:x="6758" fg:w="2"/><text x="64.2462%" y="511.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::ops::arith::Sub&gt;::sub (9 samples, 0.09%)</title><rect x="64.0152%" y="533" width="0.0852%" height="15" fill="rgb(206,6,19)" fg:x="6760" fg:w="9"/><text x="64.2652%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (15 samples, 0.14%)</title><rect x="64.1004%" y="533" width="0.1420%" height="15" fill="rgb(239,177,51)" fg:x="6769" fg:w="15"/><text x="64.3504%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (15 samples, 0.14%)</title><rect x="64.1004%" y="517" width="0.1420%" height="15" fill="rgb(216,55,25)" fg:x="6769" fg:w="15"/><text x="64.3504%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (36 samples, 0.34%)</title><rect x="65.5303%" y="421" width="0.3409%" height="15" fill="rgb(231,163,29)" fg:x="6920" fg:w="36"/><text x="65.7803%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (67 samples, 0.63%)</title><rect x="65.4545%" y="437" width="0.6345%" height="15" fill="rgb(232,149,50)" fg:x="6912" fg:w="67"/><text x="65.7045%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (23 samples, 0.22%)</title><rect x="65.8712%" y="421" width="0.2178%" height="15" fill="rgb(223,142,48)" fg:x="6956" fg:w="23"/><text x="66.1212%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (72 samples, 0.68%)</title><rect x="66.4015%" y="421" width="0.6818%" height="15" fill="rgb(245,83,23)" fg:x="7012" fg:w="72"/><text x="66.6515%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (269 samples, 2.55%)</title><rect x="64.8201%" y="485" width="2.5473%" height="15" fill="rgb(224,63,2)" fg:x="6845" fg:w="269"/><text x="65.0701%" y="495.50">&lt;s..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (269 samples, 2.55%)</title><rect x="64.8201%" y="469" width="2.5473%" height="15" fill="rgb(218,65,53)" fg:x="6845" fg:w="269"/><text x="65.0701%" y="479.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (269 samples, 2.55%)</title><rect x="64.8201%" y="453" width="2.5473%" height="15" fill="rgb(221,84,29)" fg:x="6845" fg:w="269"/><text x="65.0701%" y="463.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (135 samples, 1.28%)</title><rect x="66.0890%" y="437" width="1.2784%" height="15" fill="rgb(234,0,32)" fg:x="6979" fg:w="135"/><text x="66.3390%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (30 samples, 0.28%)</title><rect x="67.0833%" y="421" width="0.2841%" height="15" fill="rgb(206,20,16)" fg:x="7084" fg:w="30"/><text x="67.3333%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (24 samples, 0.23%)</title><rect x="67.3674%" y="485" width="0.2273%" height="15" fill="rgb(244,172,18)" fg:x="7114" fg:w="24"/><text x="67.6174%" y="495.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (9 samples, 0.09%)</title><rect x="67.5095%" y="469" width="0.0852%" height="15" fill="rgb(254,133,1)" fg:x="7129" fg:w="9"/><text x="67.7595%" y="479.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (7 samples, 0.07%)</title><rect x="67.5284%" y="453" width="0.0663%" height="15" fill="rgb(222,206,41)" fg:x="7131" fg:w="7"/><text x="67.7784%" y="463.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (7 samples, 0.07%)</title><rect x="67.5284%" y="437" width="0.0663%" height="15" fill="rgb(212,3,42)" fg:x="7131" fg:w="7"/><text x="67.7784%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (90 samples, 0.85%)</title><rect x="69.4981%" y="357" width="0.8523%" height="15" fill="rgb(241,11,4)" fg:x="7339" fg:w="90"/><text x="69.7481%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (161 samples, 1.52%)</title><rect x="69.2235%" y="373" width="1.5246%" height="15" fill="rgb(205,19,26)" fg:x="7310" fg:w="161"/><text x="69.4735%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (42 samples, 0.40%)</title><rect x="70.3504%" y="357" width="0.3977%" height="15" fill="rgb(210,179,32)" fg:x="7429" fg:w="42"/><text x="70.6004%" y="367.50"></text></g><g><title>hashbrown::map::make_insert_hash (648 samples, 6.14%)</title><rect x="64.8201%" y="501" width="6.1364%" height="15" fill="rgb(227,116,49)" fg:x="6845" fg:w="648"/><text x="65.0701%" y="511.50">hashbrow..</text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::hash::Hash&gt;::hash (355 samples, 3.36%)</title><rect x="67.5947%" y="485" width="3.3617%" height="15" fill="rgb(211,146,6)" fg:x="7138" fg:w="355"/><text x="67.8447%" y="495.50">&lt;y2..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (341 samples, 3.23%)</title><rect x="67.7273%" y="469" width="3.2292%" height="15" fill="rgb(219,44,39)" fg:x="7152" fg:w="341"/><text x="67.9773%" y="479.50">cor..</text></g><g><title>core::hash::Hasher::write_i64 (335 samples, 3.17%)</title><rect x="67.7841%" y="453" width="3.1723%" height="15" fill="rgb(234,128,11)" fg:x="7158" fg:w="335"/><text x="68.0341%" y="463.50">cor..</text></g><g><title>core::hash::Hasher::write_u64 (335 samples, 3.17%)</title><rect x="67.7841%" y="437" width="3.1723%" height="15" fill="rgb(220,183,53)" fg:x="7158" fg:w="335"/><text x="68.0341%" y="447.50">cor..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (330 samples, 3.12%)</title><rect x="67.8314%" y="421" width="3.1250%" height="15" fill="rgb(213,219,32)" fg:x="7163" fg:w="330"/><text x="68.0814%" y="431.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (330 samples, 3.12%)</title><rect x="67.8314%" y="405" width="3.1250%" height="15" fill="rgb(232,156,16)" fg:x="7163" fg:w="330"/><text x="68.0814%" y="415.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (330 samples, 3.12%)</title><rect x="67.8314%" y="389" width="3.1250%" height="15" fill="rgb(246,135,34)" fg:x="7163" fg:w="330"/><text x="68.0814%" y="399.50">&lt;co..</text></g><g><title>core::hash::sip::u8to64_le (21 samples, 0.20%)</title><rect x="70.7576%" y="373" width="0.1989%" height="15" fill="rgb(241,99,0)" fg:x="7472" fg:w="21"/><text x="71.0076%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.39%)</title><rect x="71.4489%" y="469" width="0.3883%" height="15" fill="rgb(222,103,45)" fg:x="7545" fg:w="41"/><text x="71.6989%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.39%)</title><rect x="71.4489%" y="453" width="0.3883%" height="15" fill="rgb(212,57,4)" fg:x="7545" fg:w="41"/><text x="71.6989%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.20%)</title><rect x="71.6383%" y="437" width="0.1989%" height="15" fill="rgb(215,68,47)" fg:x="7565" fg:w="21"/><text x="71.8883%" y="447.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.06%)</title><rect x="71.8371%" y="469" width="0.0568%" height="15" fill="rgb(230,84,2)" fg:x="7586" fg:w="6"/><text x="72.0871%" y="479.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::cmp::PartialEq&gt;::eq (6 samples, 0.06%)</title><rect x="71.8371%" y="453" width="0.0568%" height="15" fill="rgb(220,102,14)" fg:x="7586" fg:w="6"/><text x="72.0871%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (3 samples, 0.03%)</title><rect x="71.8939%" y="421" width="0.0284%" height="15" fill="rgb(240,10,32)" fg:x="7592" fg:w="3"/><text x="72.1439%" y="431.50"></text></g><g><title>hashbrown::raw::h2 (21 samples, 0.20%)</title><rect x="71.9223%" y="421" width="0.1989%" height="15" fill="rgb(215,47,27)" fg:x="7595" fg:w="21"/><text x="72.1723%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (198 samples, 1.88%)</title><rect x="70.9564%" y="501" width="1.8750%" height="15" fill="rgb(233,188,43)" fg:x="7493" fg:w="198"/><text x="71.2064%" y="511.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (198 samples, 1.88%)</title><rect x="70.9564%" y="485" width="1.8750%" height="15" fill="rgb(253,190,1)" fg:x="7493" fg:w="198"/><text x="71.2064%" y="495.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (99 samples, 0.94%)</title><rect x="71.8939%" y="469" width="0.9375%" height="15" fill="rgb(206,114,52)" fg:x="7592" fg:w="99"/><text x="72.1439%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (99 samples, 0.94%)</title><rect x="71.8939%" y="453" width="0.9375%" height="15" fill="rgb(233,120,37)" fg:x="7592" fg:w="99"/><text x="72.1439%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (99 samples, 0.94%)</title><rect x="71.8939%" y="437" width="0.9375%" height="15" fill="rgb(214,52,39)" fg:x="7592" fg:w="99"/><text x="72.1439%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (74 samples, 0.70%)</title><rect x="72.1307%" y="421" width="0.7008%" height="15" fill="rgb(223,80,29)" fg:x="7617" fg:w="74"/><text x="72.3807%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (74 samples, 0.70%)</title><rect x="72.1307%" y="405" width="0.7008%" height="15" fill="rgb(230,101,40)" fg:x="7617" fg:w="74"/><text x="72.3807%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (74 samples, 0.70%)</title><rect x="72.1307%" y="389" width="0.7008%" height="15" fill="rgb(219,211,8)" fg:x="7617" fg:w="74"/><text x="72.3807%" y="399.50"></text></g><g><title>core::core_arch::simd::i8x16::new (74 samples, 0.70%)</title><rect x="72.1307%" y="373" width="0.7008%" height="15" fill="rgb(252,126,28)" fg:x="7617" fg:w="74"/><text x="72.3807%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (94 samples, 0.89%)</title><rect x="72.9451%" y="485" width="0.8902%" height="15" fill="rgb(215,56,38)" fg:x="7703" fg:w="94"/><text x="73.1951%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (94 samples, 0.89%)</title><rect x="72.9451%" y="469" width="0.8902%" height="15" fill="rgb(249,55,44)" fg:x="7703" fg:w="94"/><text x="73.1951%" y="479.50"></text></g><g><title>core::ptr::write (94 samples, 0.89%)</title><rect x="72.9451%" y="453" width="0.8902%" height="15" fill="rgb(220,221,32)" fg:x="7703" fg:w="94"/><text x="73.1951%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (5 samples, 0.05%)</title><rect x="73.8352%" y="485" width="0.0473%" height="15" fill="rgb(212,216,41)" fg:x="7797" fg:w="5"/><text x="74.0852%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (5 samples, 0.05%)</title><rect x="73.8352%" y="469" width="0.0473%" height="15" fill="rgb(228,213,43)" fg:x="7797" fg:w="5"/><text x="74.0852%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (5 samples, 0.05%)</title><rect x="73.8352%" y="453" width="0.0473%" height="15" fill="rgb(211,31,26)" fg:x="7797" fg:w="5"/><text x="74.0852%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (11 samples, 0.10%)</title><rect x="74.0530%" y="469" width="0.1042%" height="15" fill="rgb(229,202,19)" fg:x="7820" fg:w="11"/><text x="74.3030%" y="479.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (12 samples, 0.11%)</title><rect x="74.1572%" y="469" width="0.1136%" height="15" fill="rgb(229,105,46)" fg:x="7831" fg:w="12"/><text x="74.4072%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (93 samples, 0.88%)</title><rect x="73.8826%" y="485" width="0.8807%" height="15" fill="rgb(235,108,1)" fg:x="7802" fg:w="93"/><text x="74.1326%" y="495.50"></text></g><g><title>hashbrown::raw::is_full (52 samples, 0.49%)</title><rect x="74.2708%" y="469" width="0.4924%" height="15" fill="rgb(245,111,35)" fg:x="7843" fg:w="52"/><text x="74.5208%" y="479.50"></text></g><g><title>y2021::d19::scanner::Scanner::calculate_vectors (1,182 samples, 11.19%)</title><rect x="63.8731%" y="549" width="11.1932%" height="15" fill="rgb(219,185,31)" fg:x="6745" fg:w="1182"/><text x="64.1231%" y="559.50">y2021::d19::scan..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1,143 samples, 10.82%)</title><rect x="64.2424%" y="533" width="10.8239%" height="15" fill="rgb(214,4,43)" fg:x="6784" fg:w="1143"/><text x="64.4924%" y="543.50">std::collections..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,130 samples, 10.70%)</title><rect x="64.3655%" y="517" width="10.7008%" height="15" fill="rgb(235,227,40)" fg:x="6797" fg:w="1130"/><text x="64.6155%" y="527.50">hashbrown::map::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (236 samples, 2.23%)</title><rect x="72.8314%" y="501" width="2.2348%" height="15" fill="rgb(230,88,30)" fg:x="7691" fg:w="236"/><text x="73.0814%" y="511.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (32 samples, 0.30%)</title><rect x="74.7633%" y="485" width="0.3030%" height="15" fill="rgb(216,217,1)" fg:x="7895" fg:w="32"/><text x="75.0133%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (8 samples, 0.08%)</title><rect x="74.9905%" y="469" width="0.0758%" height="15" fill="rgb(248,139,50)" fg:x="7919" fg:w="8"/><text x="75.2405%" y="479.50"></text></g><g><title>hashbrown::raw::h2 (8 samples, 0.08%)</title><rect x="74.9905%" y="453" width="0.0758%" height="15" fill="rgb(233,1,21)" fg:x="7919" fg:w="8"/><text x="75.2405%" y="463.50"></text></g><g><title>y2021::d19::main::attempt_match (2,230 samples, 21.12%)</title><rect x="53.9583%" y="581" width="21.1174%" height="15" fill="rgb(215,183,12)" fg:x="5698" fg:w="2230"/><text x="54.2083%" y="591.50">y2021::d19::main::attempt_match</text></g><g><title>y2021::d19::scanner::Scanner::rotate (1,183 samples, 11.20%)</title><rect x="63.8731%" y="565" width="11.2027%" height="15" fill="rgb(229,104,42)" fg:x="6745" fg:w="1183"/><text x="64.1231%" y="575.50">y2021::d19::scan..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="75.0852%" y="309" width="0.0189%" height="15" fill="rgb(243,34,48)" fg:x="7929" fg:w="2"/><text x="75.3352%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="75.0852%" y="293" width="0.0189%" height="15" fill="rgb(239,11,44)" fg:x="7929" fg:w="2"/><text x="75.3352%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="75.0852%" y="277" width="0.0189%" height="15" fill="rgb(231,98,35)" fg:x="7929" fg:w="2"/><text x="75.3352%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="75.0852%" y="261" width="0.0189%" height="15" fill="rgb(233,28,25)" fg:x="7929" fg:w="2"/><text x="75.3352%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="75.0852%" y="325" width="0.0284%" height="15" fill="rgb(234,123,11)" fg:x="7929" fg:w="3"/><text x="75.3352%" y="335.50"></text></g><g><title>y2021::d19::main::run (3,850 samples, 36.46%)</title><rect x="38.6742%" y="629" width="36.4583%" height="15" fill="rgb(220,69,3)" fg:x="4084" fg:w="3850"/><text x="38.9242%" y="639.50">y2021::d19::main::run</text></g><g><title>y2021::d19::main::p02 (2,249 samples, 21.30%)</title><rect x="53.8352%" y="613" width="21.2973%" height="15" fill="rgb(214,64,36)" fg:x="5685" fg:w="2249"/><text x="54.0852%" y="623.50">y2021::d19::main::p02</text></g><g><title>y2021::d19::main::build_chart (2,237 samples, 21.18%)</title><rect x="53.9489%" y="597" width="21.1837%" height="15" fill="rgb(211,138,32)" fg:x="5697" fg:w="2237"/><text x="54.1989%" y="607.50">y2021::d19::main::build_chart</text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors (6 samples, 0.06%)</title><rect x="75.0758%" y="581" width="0.0568%" height="15" fill="rgb(213,118,47)" fg:x="7928" fg:w="6"/><text x="75.3258%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.06%)</title><rect x="75.0758%" y="565" width="0.0568%" height="15" fill="rgb(243,124,49)" fg:x="7928" fg:w="6"/><text x="75.3258%" y="575.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.06%)</title><rect x="75.0758%" y="549" width="0.0568%" height="15" fill="rgb(221,30,28)" fg:x="7928" fg:w="6"/><text x="75.3258%" y="559.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.06%)</title><rect x="75.0758%" y="533" width="0.0568%" height="15" fill="rgb(246,37,13)" fg:x="7928" fg:w="6"/><text x="75.3258%" y="543.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.06%)</title><rect x="75.0758%" y="517" width="0.0568%" height="15" fill="rgb(249,66,14)" fg:x="7928" fg:w="6"/><text x="75.3258%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.06%)</title><rect x="75.0758%" y="501" width="0.0568%" height="15" fill="rgb(213,166,5)" fg:x="7928" fg:w="6"/><text x="75.3258%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.06%)</title><rect x="75.0758%" y="485" width="0.0568%" height="15" fill="rgb(221,66,24)" fg:x="7928" fg:w="6"/><text x="75.3258%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.06%)</title><rect x="75.0758%" y="469" width="0.0568%" height="15" fill="rgb(210,132,17)" fg:x="7928" fg:w="6"/><text x="75.3258%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.06%)</title><rect x="75.0758%" y="453" width="0.0568%" height="15" fill="rgb(243,202,5)" fg:x="7928" fg:w="6"/><text x="75.3258%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.06%)</title><rect x="75.0758%" y="437" width="0.0568%" height="15" fill="rgb(233,70,48)" fg:x="7928" fg:w="6"/><text x="75.3258%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.06%)</title><rect x="75.0758%" y="421" width="0.0568%" height="15" fill="rgb(238,41,26)" fg:x="7928" fg:w="6"/><text x="75.3258%" y="431.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (6 samples, 0.06%)</title><rect x="75.0758%" y="405" width="0.0568%" height="15" fill="rgb(241,19,31)" fg:x="7928" fg:w="6"/><text x="75.3258%" y="415.50"></text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors::{{closure}} (5 samples, 0.05%)</title><rect x="75.0852%" y="389" width="0.0473%" height="15" fill="rgb(214,76,10)" fg:x="7929" fg:w="5"/><text x="75.3352%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (5 samples, 0.05%)</title><rect x="75.0852%" y="373" width="0.0473%" height="15" fill="rgb(254,202,22)" fg:x="7929" fg:w="5"/><text x="75.3352%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (5 samples, 0.05%)</title><rect x="75.0852%" y="357" width="0.0473%" height="15" fill="rgb(214,72,24)" fg:x="7929" fg:w="5"/><text x="75.3352%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.05%)</title><rect x="75.0852%" y="341" width="0.0473%" height="15" fill="rgb(221,92,46)" fg:x="7929" fg:w="5"/><text x="75.3352%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="75.1136%" y="325" width="0.0189%" height="15" fill="rgb(246,13,50)" fg:x="7932" fg:w="2"/><text x="75.3636%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="75.1136%" y="309" width="0.0189%" height="15" fill="rgb(240,165,38)" fg:x="7932" fg:w="2"/><text x="75.3636%" y="319.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (3 samples, 0.03%)</title><rect x="75.1326%" y="597" width="0.0284%" height="15" fill="rgb(241,24,51)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="607.50"></text></g><g><title>&lt;y2021::d20::speed::Grid as core::str::traits::FromStr&gt;::from_str (3 samples, 0.03%)</title><rect x="75.1326%" y="581" width="0.0284%" height="15" fill="rgb(227,51,44)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.03%)</title><rect x="75.1326%" y="565" width="0.0284%" height="15" fill="rgb(231,121,3)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="75.1326%" y="549" width="0.0284%" height="15" fill="rgb(245,3,41)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.03%)</title><rect x="75.1326%" y="533" width="0.0284%" height="15" fill="rgb(214,13,26)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.03%)</title><rect x="75.1326%" y="517" width="0.0284%" height="15" fill="rgb(252,75,11)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.03%)</title><rect x="75.1326%" y="501" width="0.0284%" height="15" fill="rgb(218,226,17)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="75.1326%" y="485" width="0.0284%" height="15" fill="rgb(248,89,38)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="75.1326%" y="469" width="0.0284%" height="15" fill="rgb(237,73,46)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="75.1326%" y="453" width="0.0284%" height="15" fill="rgb(242,78,33)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="75.1326%" y="437" width="0.0284%" height="15" fill="rgb(235,60,3)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="75.1326%" y="421" width="0.0284%" height="15" fill="rgb(216,172,19)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="75.1326%" y="405" width="0.0284%" height="15" fill="rgb(227,6,42)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.03%)</title><rect x="75.1326%" y="389" width="0.0284%" height="15" fill="rgb(223,207,42)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="399.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (3 samples, 0.03%)</title><rect x="75.1326%" y="373" width="0.0284%" height="15" fill="rgb(246,138,30)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.03%)</title><rect x="75.1326%" y="357" width="0.0284%" height="15" fill="rgb(251,199,47)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.03%)</title><rect x="75.1326%" y="341" width="0.0284%" height="15" fill="rgb(228,218,44)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (3 samples, 0.03%)</title><rect x="75.1326%" y="325" width="0.0284%" height="15" fill="rgb(220,68,6)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="75.1326%" y="309" width="0.0284%" height="15" fill="rgb(240,60,26)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.03%)</title><rect x="75.1326%" y="293" width="0.0284%" height="15" fill="rgb(211,200,19)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.03%)</title><rect x="75.1326%" y="277" width="0.0284%" height="15" fill="rgb(242,145,30)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.03%)</title><rect x="75.1326%" y="261" width="0.0284%" height="15" fill="rgb(225,64,13)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.03%)</title><rect x="75.1326%" y="245" width="0.0284%" height="15" fill="rgb(218,103,35)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="255.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (3 samples, 0.03%)</title><rect x="75.1326%" y="229" width="0.0284%" height="15" fill="rgb(216,93,46)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.03%)</title><rect x="75.1326%" y="213" width="0.0284%" height="15" fill="rgb(225,159,27)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.03%)</title><rect x="75.1326%" y="197" width="0.0284%" height="15" fill="rgb(225,204,11)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="75.1326%" y="181" width="0.0284%" height="15" fill="rgb(205,56,4)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.03%)</title><rect x="75.1326%" y="165" width="0.0284%" height="15" fill="rgb(206,6,35)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.03%)</title><rect x="75.1326%" y="149" width="0.0284%" height="15" fill="rgb(247,73,52)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="159.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (3 samples, 0.03%)</title><rect x="75.1326%" y="133" width="0.0284%" height="15" fill="rgb(246,97,4)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="143.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="75.1326%" y="117" width="0.0284%" height="15" fill="rgb(212,37,15)" fg:x="7934" fg:w="3"/><text x="75.3826%" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="75.1420%" y="101" width="0.0189%" height="15" fill="rgb(208,130,40)" fg:x="7935" fg:w="2"/><text x="75.3920%" y="111.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="75.1420%" y="85" width="0.0189%" height="15" fill="rgb(236,55,29)" fg:x="7935" fg:w="2"/><text x="75.3920%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="75.1420%" y="69" width="0.0189%" height="15" fill="rgb(209,156,45)" fg:x="7935" fg:w="2"/><text x="75.3920%" y="79.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="75.1420%" y="53" width="0.0189%" height="15" fill="rgb(249,107,4)" fg:x="7935" fg:w="2"/><text x="75.3920%" y="63.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="75.1420%" y="37" width="0.0189%" height="15" fill="rgb(227,7,13)" fg:x="7935" fg:w="2"/><text x="75.3920%" y="47.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.05%)</title><rect x="75.2083%" y="517" width="0.0473%" height="15" fill="rgb(250,129,14)" fg:x="7942" fg:w="5"/><text x="75.4583%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.05%)</title><rect x="75.2083%" y="501" width="0.0473%" height="15" fill="rgb(229,92,13)" fg:x="7942" fg:w="5"/><text x="75.4583%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.05%)</title><rect x="75.2083%" y="485" width="0.0473%" height="15" fill="rgb(245,98,39)" fg:x="7942" fg:w="5"/><text x="75.4583%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="75.2367%" y="469" width="0.0189%" height="15" fill="rgb(234,135,48)" fg:x="7945" fg:w="2"/><text x="75.4867%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.03%)</title><rect x="75.2746%" y="405" width="0.0284%" height="15" fill="rgb(230,98,28)" fg:x="7949" fg:w="3"/><text x="75.5246%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="75.2841%" y="389" width="0.0189%" height="15" fill="rgb(223,121,0)" fg:x="7950" fg:w="2"/><text x="75.5341%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.11%)</title><rect x="75.1989%" y="533" width="0.1136%" height="15" fill="rgb(234,173,33)" fg:x="7941" fg:w="12"/><text x="75.4489%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (6 samples, 0.06%)</title><rect x="75.2557%" y="517" width="0.0568%" height="15" fill="rgb(245,47,8)" fg:x="7947" fg:w="6"/><text x="75.5057%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (6 samples, 0.06%)</title><rect x="75.2557%" y="501" width="0.0568%" height="15" fill="rgb(205,17,20)" fg:x="7947" fg:w="6"/><text x="75.5057%" y="511.50"></text></g><g><title>core::hash::Hasher::write_i64 (6 samples, 0.06%)</title><rect x="75.2557%" y="485" width="0.0568%" height="15" fill="rgb(232,151,16)" fg:x="7947" fg:w="6"/><text x="75.5057%" y="495.50"></text></g><g><title>core::hash::Hasher::write_u64 (6 samples, 0.06%)</title><rect x="75.2557%" y="469" width="0.0568%" height="15" fill="rgb(208,30,32)" fg:x="7947" fg:w="6"/><text x="75.5057%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="75.2652%" y="453" width="0.0473%" height="15" fill="rgb(254,26,3)" fg:x="7948" fg:w="5"/><text x="75.5152%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="75.2652%" y="437" width="0.0473%" height="15" fill="rgb(240,177,30)" fg:x="7948" fg:w="5"/><text x="75.5152%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="75.2652%" y="421" width="0.0473%" height="15" fill="rgb(248,76,44)" fg:x="7948" fg:w="5"/><text x="75.5152%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (16 samples, 0.15%)</title><rect x="75.1989%" y="581" width="0.1515%" height="15" fill="rgb(241,186,54)" fg:x="7941" fg:w="16"/><text x="75.4489%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (16 samples, 0.15%)</title><rect x="75.1989%" y="565" width="0.1515%" height="15" fill="rgb(249,171,29)" fg:x="7941" fg:w="16"/><text x="75.4489%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 0.15%)</title><rect x="75.1989%" y="549" width="0.1515%" height="15" fill="rgb(237,151,44)" fg:x="7941" fg:w="16"/><text x="75.4489%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.04%)</title><rect x="75.3125%" y="533" width="0.0379%" height="15" fill="rgb(228,174,30)" fg:x="7953" fg:w="4"/><text x="75.5625%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.04%)</title><rect x="75.3125%" y="517" width="0.0379%" height="15" fill="rgb(252,14,37)" fg:x="7953" fg:w="4"/><text x="75.5625%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.04%)</title><rect x="75.3977%" y="437" width="0.0379%" height="15" fill="rgb(207,111,40)" fg:x="7962" fg:w="4"/><text x="75.6477%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.08%)</title><rect x="75.3693%" y="501" width="0.0758%" height="15" fill="rgb(248,171,54)" fg:x="7959" fg:w="8"/><text x="75.6193%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.08%)</title><rect x="75.3693%" y="485" width="0.0758%" height="15" fill="rgb(211,127,2)" fg:x="7959" fg:w="8"/><text x="75.6193%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.08%)</title><rect x="75.3693%" y="469" width="0.0758%" height="15" fill="rgb(236,87,47)" fg:x="7959" fg:w="8"/><text x="75.6193%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.06%)</title><rect x="75.3883%" y="453" width="0.0568%" height="15" fill="rgb(223,190,45)" fg:x="7961" fg:w="6"/><text x="75.6383%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.11%)</title><rect x="75.3598%" y="517" width="0.1136%" height="15" fill="rgb(215,5,16)" fg:x="7958" fg:w="12"/><text x="75.6098%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (3 samples, 0.03%)</title><rect x="75.4451%" y="501" width="0.0284%" height="15" fill="rgb(252,82,33)" fg:x="7967" fg:w="3"/><text x="75.6951%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (3 samples, 0.03%)</title><rect x="75.4451%" y="485" width="0.0284%" height="15" fill="rgb(247,213,44)" fg:x="7967" fg:w="3"/><text x="75.6951%" y="495.50"></text></g><g><title>core::hash::Hasher::write_i64 (3 samples, 0.03%)</title><rect x="75.4451%" y="469" width="0.0284%" height="15" fill="rgb(205,196,44)" fg:x="7967" fg:w="3"/><text x="75.6951%" y="479.50"></text></g><g><title>core::hash::Hasher::write_u64 (3 samples, 0.03%)</title><rect x="75.4451%" y="453" width="0.0284%" height="15" fill="rgb(237,96,54)" fg:x="7967" fg:w="3"/><text x="75.6951%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="75.4451%" y="437" width="0.0284%" height="15" fill="rgb(230,113,34)" fg:x="7967" fg:w="3"/><text x="75.6951%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="75.4451%" y="421" width="0.0284%" height="15" fill="rgb(221,224,12)" fg:x="7967" fg:w="3"/><text x="75.6951%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="75.4451%" y="405" width="0.0284%" height="15" fill="rgb(219,112,44)" fg:x="7967" fg:w="3"/><text x="75.6951%" y="415.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::get (19 samples, 0.18%)</title><rect x="75.3504%" y="581" width="0.1799%" height="15" fill="rgb(210,31,13)" fg:x="7957" fg:w="19"/><text x="75.6004%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::get (19 samples, 0.18%)</title><rect x="75.3504%" y="565" width="0.1799%" height="15" fill="rgb(230,25,16)" fg:x="7957" fg:w="19"/><text x="75.6004%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (19 samples, 0.18%)</title><rect x="75.3504%" y="549" width="0.1799%" height="15" fill="rgb(246,108,53)" fg:x="7957" fg:w="19"/><text x="75.6004%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (19 samples, 0.18%)</title><rect x="75.3504%" y="533" width="0.1799%" height="15" fill="rgb(241,172,50)" fg:x="7957" fg:w="19"/><text x="75.6004%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.06%)</title><rect x="75.4735%" y="517" width="0.0568%" height="15" fill="rgb(235,141,10)" fg:x="7970" fg:w="6"/><text x="75.7235%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.06%)</title><rect x="75.4735%" y="501" width="0.0568%" height="15" fill="rgb(220,174,43)" fg:x="7970" fg:w="6"/><text x="75.7235%" y="511.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.02%)</title><rect x="75.5398%" y="533" width="0.0189%" height="15" fill="rgb(215,181,40)" fg:x="7977" fg:w="2"/><text x="75.7898%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="75.5398%" y="517" width="0.0189%" height="15" fill="rgb(230,97,2)" fg:x="7977" fg:w="2"/><text x="75.7898%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="75.5398%" y="501" width="0.0189%" height="15" fill="rgb(211,25,27)" fg:x="7977" fg:w="2"/><text x="75.7898%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="75.5398%" y="485" width="0.0189%" height="15" fill="rgb(230,87,26)" fg:x="7977" fg:w="2"/><text x="75.7898%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.02%)</title><rect x="75.5398%" y="469" width="0.0189%" height="15" fill="rgb(227,160,17)" fg:x="7977" fg:w="2"/><text x="75.7898%" y="479.50"></text></g><g><title>y2021::d20::speed::p01 (48 samples, 0.45%)</title><rect x="75.1326%" y="613" width="0.4545%" height="15" fill="rgb(244,85,34)" fg:x="7934" fg:w="48"/><text x="75.3826%" y="623.50"></text></g><g><title>y2021::d20::speed::Grid::step (45 samples, 0.43%)</title><rect x="75.1610%" y="597" width="0.4261%" height="15" fill="rgb(207,70,0)" fg:x="7937" fg:w="45"/><text x="75.4110%" y="607.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (6 samples, 0.06%)</title><rect x="75.5303%" y="581" width="0.0568%" height="15" fill="rgb(223,129,7)" fg:x="7976" fg:w="6"/><text x="75.7803%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (6 samples, 0.06%)</title><rect x="75.5303%" y="565" width="0.0568%" height="15" fill="rgb(246,105,7)" fg:x="7976" fg:w="6"/><text x="75.7803%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.05%)</title><rect x="75.5398%" y="549" width="0.0473%" height="15" fill="rgb(215,154,42)" fg:x="7977" fg:w="5"/><text x="75.7898%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="75.5682%" y="533" width="0.0189%" height="15" fill="rgb(220,215,30)" fg:x="7980" fg:w="2"/><text x="75.8182%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="75.5682%" y="517" width="0.0189%" height="15" fill="rgb(228,81,51)" fg:x="7980" fg:w="2"/><text x="75.8182%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="75.5682%" y="501" width="0.0189%" height="15" fill="rgb(247,71,54)" fg:x="7980" fg:w="2"/><text x="75.8182%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="75.5682%" y="485" width="0.0189%" height="15" fill="rgb(234,176,34)" fg:x="7980" fg:w="2"/><text x="75.8182%" y="495.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (3 samples, 0.03%)</title><rect x="75.5871%" y="597" width="0.0284%" height="15" fill="rgb(241,103,54)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="607.50"></text></g><g><title>&lt;y2021::d20::speed::Grid as core::str::traits::FromStr&gt;::from_str (3 samples, 0.03%)</title><rect x="75.5871%" y="581" width="0.0284%" height="15" fill="rgb(228,22,34)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.03%)</title><rect x="75.5871%" y="565" width="0.0284%" height="15" fill="rgb(241,179,48)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="75.5871%" y="549" width="0.0284%" height="15" fill="rgb(235,167,37)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.03%)</title><rect x="75.5871%" y="533" width="0.0284%" height="15" fill="rgb(213,109,30)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.03%)</title><rect x="75.5871%" y="517" width="0.0284%" height="15" fill="rgb(222,172,16)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.03%)</title><rect x="75.5871%" y="501" width="0.0284%" height="15" fill="rgb(233,192,5)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="75.5871%" y="485" width="0.0284%" height="15" fill="rgb(247,189,41)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="75.5871%" y="469" width="0.0284%" height="15" fill="rgb(218,134,47)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="75.5871%" y="453" width="0.0284%" height="15" fill="rgb(216,29,3)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="75.5871%" y="437" width="0.0284%" height="15" fill="rgb(246,140,12)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="75.5871%" y="421" width="0.0284%" height="15" fill="rgb(230,136,11)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="75.5871%" y="405" width="0.0284%" height="15" fill="rgb(247,22,47)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.03%)</title><rect x="75.5871%" y="389" width="0.0284%" height="15" fill="rgb(218,84,22)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="399.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (3 samples, 0.03%)</title><rect x="75.5871%" y="373" width="0.0284%" height="15" fill="rgb(216,87,39)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.03%)</title><rect x="75.5871%" y="357" width="0.0284%" height="15" fill="rgb(221,178,8)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.03%)</title><rect x="75.5871%" y="341" width="0.0284%" height="15" fill="rgb(230,42,11)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (3 samples, 0.03%)</title><rect x="75.5871%" y="325" width="0.0284%" height="15" fill="rgb(237,229,4)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.03%)</title><rect x="75.5871%" y="309" width="0.0284%" height="15" fill="rgb(222,31,33)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.03%)</title><rect x="75.5871%" y="293" width="0.0284%" height="15" fill="rgb(210,17,39)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.03%)</title><rect x="75.5871%" y="277" width="0.0284%" height="15" fill="rgb(244,93,20)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.03%)</title><rect x="75.5871%" y="261" width="0.0284%" height="15" fill="rgb(210,40,47)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.03%)</title><rect x="75.5871%" y="245" width="0.0284%" height="15" fill="rgb(239,211,47)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="255.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (3 samples, 0.03%)</title><rect x="75.5871%" y="229" width="0.0284%" height="15" fill="rgb(251,223,49)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.03%)</title><rect x="75.5871%" y="213" width="0.0284%" height="15" fill="rgb(221,149,5)" fg:x="7982" fg:w="3"/><text x="75.8371%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="75.5966%" y="197" width="0.0189%" height="15" fill="rgb(219,224,51)" fg:x="7983" fg:w="2"/><text x="75.8466%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="75.5966%" y="181" width="0.0189%" height="15" fill="rgb(223,7,8)" fg:x="7983" fg:w="2"/><text x="75.8466%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="75.5966%" y="165" width="0.0189%" height="15" fill="rgb(241,217,22)" fg:x="7983" fg:w="2"/><text x="75.8466%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="75.5966%" y="149" width="0.0189%" height="15" fill="rgb(248,209,0)" fg:x="7983" fg:w="2"/><text x="75.8466%" y="159.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.02%)</title><rect x="75.5966%" y="133" width="0.0189%" height="15" fill="rgb(217,205,4)" fg:x="7983" fg:w="2"/><text x="75.8466%" y="143.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.02%)</title><rect x="75.5966%" y="117" width="0.0189%" height="15" fill="rgb(228,124,39)" fg:x="7983" fg:w="2"/><text x="75.8466%" y="127.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="75.5966%" y="101" width="0.0189%" height="15" fill="rgb(250,116,42)" fg:x="7983" fg:w="2"/><text x="75.8466%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.09%)</title><rect x="76.0985%" y="581" width="0.0852%" height="15" fill="rgb(223,202,9)" fg:x="8036" fg:w="9"/><text x="76.3485%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.09%)</title><rect x="76.0985%" y="565" width="0.0852%" height="15" fill="rgb(242,222,40)" fg:x="8036" fg:w="9"/><text x="76.3485%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="76.1553%" y="549" width="0.0284%" height="15" fill="rgb(229,99,46)" fg:x="8042" fg:w="3"/><text x="76.4053%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.03%)</title><rect x="76.1553%" y="533" width="0.0284%" height="15" fill="rgb(225,56,46)" fg:x="8042" fg:w="3"/><text x="76.4053%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.03%)</title><rect x="76.1553%" y="517" width="0.0284%" height="15" fill="rgb(227,94,5)" fg:x="8042" fg:w="3"/><text x="76.4053%" y="527.50"></text></g><g><title>&lt;i64 as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.03%)</title><rect x="76.1553%" y="501" width="0.0284%" height="15" fill="rgb(205,112,38)" fg:x="8042" fg:w="3"/><text x="76.4053%" y="511.50"></text></g><g><title>core::num::&lt;impl i64&gt;::unchecked_add (3 samples, 0.03%)</title><rect x="76.1553%" y="485" width="0.0284%" height="15" fill="rgb(231,133,46)" fg:x="8042" fg:w="3"/><text x="76.4053%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="76.1837%" y="581" width="0.0189%" height="15" fill="rgb(217,16,9)" fg:x="8045" fg:w="2"/><text x="76.4337%" y="591.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="76.1837%" y="565" width="0.0189%" height="15" fill="rgb(249,173,9)" fg:x="8045" fg:w="2"/><text x="76.4337%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="76.1837%" y="549" width="0.0189%" height="15" fill="rgb(205,163,53)" fg:x="8045" fg:w="2"/><text x="76.4337%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="76.1837%" y="533" width="0.0189%" height="15" fill="rgb(217,54,41)" fg:x="8045" fg:w="2"/><text x="76.4337%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="76.1837%" y="517" width="0.0189%" height="15" fill="rgb(228,216,12)" fg:x="8045" fg:w="2"/><text x="76.4337%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;mut B&gt; for &amp;A&gt;::ne (2 samples, 0.02%)</title><rect x="76.2027%" y="581" width="0.0189%" height="15" fill="rgb(244,228,15)" fg:x="8047" fg:w="2"/><text x="76.4527%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for bool&gt;::ne (2 samples, 0.02%)</title><rect x="76.2027%" y="565" width="0.0189%" height="15" fill="rgb(221,176,53)" fg:x="8047" fg:w="2"/><text x="76.4527%" y="575.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.04%)</title><rect x="76.2216%" y="581" width="0.0379%" height="15" fill="rgb(205,94,34)" fg:x="8049" fg:w="4"/><text x="76.4716%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.04%)</title><rect x="76.2216%" y="565" width="0.0379%" height="15" fill="rgb(213,110,48)" fg:x="8049" fg:w="4"/><text x="76.4716%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::lt (4 samples, 0.04%)</title><rect x="76.2216%" y="549" width="0.0379%" height="15" fill="rgb(236,142,28)" fg:x="8049" fg:w="4"/><text x="76.4716%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (14 samples, 0.13%)</title><rect x="76.2595%" y="581" width="0.1326%" height="15" fill="rgb(225,135,29)" fg:x="8053" fg:w="14"/><text x="76.5095%" y="591.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeInclusive&lt;usize&gt;&gt;::index (14 samples, 0.13%)</title><rect x="76.2595%" y="565" width="0.1326%" height="15" fill="rgb(252,45,31)" fg:x="8053" fg:w="14"/><text x="76.5095%" y="575.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (12 samples, 0.11%)</title><rect x="76.2784%" y="549" width="0.1136%" height="15" fill="rgb(211,187,50)" fg:x="8055" fg:w="12"/><text x="76.5284%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (12 samples, 0.11%)</title><rect x="76.2784%" y="533" width="0.1136%" height="15" fill="rgb(229,109,7)" fg:x="8055" fg:w="12"/><text x="76.5284%" y="543.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (5 samples, 0.05%)</title><rect x="76.3447%" y="517" width="0.0473%" height="15" fill="rgb(251,131,51)" fg:x="8062" fg:w="5"/><text x="76.5947%" y="527.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (2 samples, 0.02%)</title><rect x="76.4678%" y="485" width="0.0189%" height="15" fill="rgb(251,180,35)" fg:x="8075" fg:w="2"/><text x="76.7178%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="76.4678%" y="469" width="0.0189%" height="15" fill="rgb(211,46,32)" fg:x="8075" fg:w="2"/><text x="76.7178%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (4 samples, 0.04%)</title><rect x="76.4678%" y="549" width="0.0379%" height="15" fill="rgb(248,123,17)" fg:x="8075" fg:w="4"/><text x="76.7178%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.04%)</title><rect x="76.4678%" y="533" width="0.0379%" height="15" fill="rgb(227,141,18)" fg:x="8075" fg:w="4"/><text x="76.7178%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.04%)</title><rect x="76.4678%" y="517" width="0.0379%" height="15" fill="rgb(216,102,9)" fg:x="8075" fg:w="4"/><text x="76.7178%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (4 samples, 0.04%)</title><rect x="76.4678%" y="501" width="0.0379%" height="15" fill="rgb(253,47,13)" fg:x="8075" fg:w="4"/><text x="76.7178%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.04%)</title><rect x="76.6098%" y="469" width="0.0379%" height="15" fill="rgb(226,93,23)" fg:x="8090" fg:w="4"/><text x="76.8598%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.07%)</title><rect x="76.6004%" y="485" width="0.0663%" height="15" fill="rgb(247,104,17)" fg:x="8089" fg:w="7"/><text x="76.8504%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="76.6477%" y="469" width="0.0189%" height="15" fill="rgb(233,203,26)" fg:x="8094" fg:w="2"/><text x="76.8977%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.08%)</title><rect x="76.6856%" y="469" width="0.0758%" height="15" fill="rgb(244,98,49)" fg:x="8098" fg:w="8"/><text x="76.9356%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (33 samples, 0.31%)</title><rect x="76.5057%" y="533" width="0.3125%" height="15" fill="rgb(235,134,22)" fg:x="8079" fg:w="33"/><text x="76.7557%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (33 samples, 0.31%)</title><rect x="76.5057%" y="517" width="0.3125%" height="15" fill="rgb(221,70,32)" fg:x="8079" fg:w="33"/><text x="76.7557%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (33 samples, 0.31%)</title><rect x="76.5057%" y="501" width="0.3125%" height="15" fill="rgb(238,15,50)" fg:x="8079" fg:w="33"/><text x="76.7557%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16 samples, 0.15%)</title><rect x="76.6667%" y="485" width="0.1515%" height="15" fill="rgb(215,221,48)" fg:x="8096" fg:w="16"/><text x="76.9167%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.06%)</title><rect x="76.7614%" y="469" width="0.0568%" height="15" fill="rgb(236,73,3)" fg:x="8106" fg:w="6"/><text x="77.0114%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.05%)</title><rect x="76.8182%" y="533" width="0.0473%" height="15" fill="rgb(250,107,11)" fg:x="8112" fg:w="5"/><text x="77.0682%" y="543.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.04%)</title><rect x="76.8277%" y="517" width="0.0379%" height="15" fill="rgb(242,39,14)" fg:x="8113" fg:w="4"/><text x="77.0777%" y="527.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4 samples, 0.04%)</title><rect x="76.8277%" y="501" width="0.0379%" height="15" fill="rgb(248,164,37)" fg:x="8113" fg:w="4"/><text x="77.0777%" y="511.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4 samples, 0.04%)</title><rect x="76.8277%" y="485" width="0.0379%" height="15" fill="rgb(217,60,12)" fg:x="8113" fg:w="4"/><text x="77.0777%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.07%)</title><rect x="77.1686%" y="405" width="0.0663%" height="15" fill="rgb(240,125,29)" fg:x="8149" fg:w="7"/><text x="77.4186%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (20 samples, 0.19%)</title><rect x="77.1023%" y="421" width="0.1894%" height="15" fill="rgb(208,207,28)" fg:x="8142" fg:w="20"/><text x="77.3523%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.06%)</title><rect x="77.2348%" y="405" width="0.0568%" height="15" fill="rgb(209,159,27)" fg:x="8156" fg:w="6"/><text x="77.4848%" y="415.50"></text></g><g><title>hashbrown::map::make_insert_hash (86 samples, 0.81%)</title><rect x="76.5057%" y="549" width="0.8144%" height="15" fill="rgb(251,176,53)" fg:x="8079" fg:w="86"/><text x="76.7557%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (48 samples, 0.45%)</title><rect x="76.8655%" y="533" width="0.4545%" height="15" fill="rgb(211,85,7)" fg:x="8117" fg:w="48"/><text x="77.1155%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (48 samples, 0.45%)</title><rect x="76.8655%" y="517" width="0.4545%" height="15" fill="rgb(216,64,54)" fg:x="8117" fg:w="48"/><text x="77.1155%" y="527.50"></text></g><g><title>core::hash::Hasher::write_i64 (48 samples, 0.45%)</title><rect x="76.8655%" y="501" width="0.4545%" height="15" fill="rgb(217,54,24)" fg:x="8117" fg:w="48"/><text x="77.1155%" y="511.50"></text></g><g><title>core::hash::Hasher::write_u64 (48 samples, 0.45%)</title><rect x="76.8655%" y="485" width="0.4545%" height="15" fill="rgb(208,206,53)" fg:x="8117" fg:w="48"/><text x="77.1155%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (45 samples, 0.43%)</title><rect x="76.8939%" y="469" width="0.4261%" height="15" fill="rgb(251,74,39)" fg:x="8120" fg:w="45"/><text x="77.1439%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (45 samples, 0.43%)</title><rect x="76.8939%" y="453" width="0.4261%" height="15" fill="rgb(226,47,5)" fg:x="8120" fg:w="45"/><text x="77.1439%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (45 samples, 0.43%)</title><rect x="76.8939%" y="437" width="0.4261%" height="15" fill="rgb(234,111,33)" fg:x="8120" fg:w="45"/><text x="77.1439%" y="447.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.03%)</title><rect x="77.2917%" y="421" width="0.0284%" height="15" fill="rgb(251,14,10)" fg:x="8162" fg:w="3"/><text x="77.5417%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="77.4242%" y="501" width="0.0473%" height="15" fill="rgb(232,43,0)" fg:x="8176" fg:w="5"/><text x="77.6742%" y="511.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.03%)</title><rect x="77.4432%" y="485" width="0.0284%" height="15" fill="rgb(222,68,43)" fg:x="8178" fg:w="3"/><text x="77.6932%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.07%)</title><rect x="77.4148%" y="533" width="0.0663%" height="15" fill="rgb(217,24,23)" fg:x="8175" fg:w="7"/><text x="77.6648%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.07%)</title><rect x="77.4148%" y="517" width="0.0663%" height="15" fill="rgb(229,209,14)" fg:x="8175" fg:w="7"/><text x="77.6648%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (13 samples, 0.12%)</title><rect x="77.4811%" y="533" width="0.1231%" height="15" fill="rgb(250,149,48)" fg:x="8182" fg:w="13"/><text x="77.7311%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (13 samples, 0.12%)</title><rect x="77.4811%" y="517" width="0.1231%" height="15" fill="rgb(210,120,37)" fg:x="8182" fg:w="13"/><text x="77.7311%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (13 samples, 0.12%)</title><rect x="77.4811%" y="501" width="0.1231%" height="15" fill="rgb(210,21,8)" fg:x="8182" fg:w="13"/><text x="77.7311%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (13 samples, 0.12%)</title><rect x="77.4811%" y="485" width="0.1231%" height="15" fill="rgb(243,145,7)" fg:x="8182" fg:w="13"/><text x="77.7311%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (13 samples, 0.12%)</title><rect x="77.4811%" y="469" width="0.1231%" height="15" fill="rgb(238,178,32)" fg:x="8182" fg:w="13"/><text x="77.7311%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (13 samples, 0.12%)</title><rect x="77.4811%" y="453" width="0.1231%" height="15" fill="rgb(222,4,10)" fg:x="8182" fg:w="13"/><text x="77.7311%" y="463.50"></text></g><g><title>core::core_arch::simd::i8x16::new (13 samples, 0.12%)</title><rect x="77.4811%" y="437" width="0.1231%" height="15" fill="rgb(239,7,37)" fg:x="8182" fg:w="13"/><text x="77.7311%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (128 samples, 1.21%)</title><rect x="76.4205%" y="565" width="1.2121%" height="15" fill="rgb(215,31,37)" fg:x="8070" fg:w="128"/><text x="76.6705%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.31%)</title><rect x="77.3201%" y="549" width="0.3125%" height="15" fill="rgb(224,83,33)" fg:x="8165" fg:w="33"/><text x="77.5701%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (3 samples, 0.03%)</title><rect x="77.6042%" y="533" width="0.0284%" height="15" fill="rgb(239,55,3)" fg:x="8195" fg:w="3"/><text x="77.8542%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (3 samples, 0.03%)</title><rect x="77.6042%" y="517" width="0.0284%" height="15" fill="rgb(247,92,11)" fg:x="8195" fg:w="3"/><text x="77.8542%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for i64&gt;::eq (3 samples, 0.03%)</title><rect x="77.6042%" y="501" width="0.0284%" height="15" fill="rgb(239,200,7)" fg:x="8195" fg:w="3"/><text x="77.8542%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (133 samples, 1.26%)</title><rect x="76.4015%" y="581" width="1.2595%" height="15" fill="rgb(227,115,8)" fg:x="8068" fg:w="133"/><text x="76.6515%" y="591.50"></text></g><g><title>std::collections::hash::map::map_entry (3 samples, 0.03%)</title><rect x="77.6326%" y="565" width="0.0284%" height="15" fill="rgb(215,189,27)" fg:x="8198" fg:w="3"/><text x="77.8826%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (38 samples, 0.36%)</title><rect x="79.1098%" y="453" width="0.3598%" height="15" fill="rgb(251,216,39)" fg:x="8354" fg:w="38"/><text x="79.3598%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (62 samples, 0.59%)</title><rect x="79.0341%" y="469" width="0.5871%" height="15" fill="rgb(207,29,47)" fg:x="8346" fg:w="62"/><text x="79.2841%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (16 samples, 0.15%)</title><rect x="79.4697%" y="453" width="0.1515%" height="15" fill="rgb(210,71,34)" fg:x="8392" fg:w="16"/><text x="79.7197%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (113 samples, 1.07%)</title><rect x="80.0379%" y="453" width="1.0701%" height="15" fill="rgb(253,217,51)" fg:x="8452" fg:w="113"/><text x="80.2879%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (362 samples, 3.43%)</title><rect x="78.1155%" y="517" width="3.4280%" height="15" fill="rgb(222,117,46)" fg:x="8249" fg:w="362"/><text x="78.3655%" y="527.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (362 samples, 3.43%)</title><rect x="78.1155%" y="501" width="3.4280%" height="15" fill="rgb(226,132,6)" fg:x="8249" fg:w="362"/><text x="78.3655%" y="511.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (362 samples, 3.43%)</title><rect x="78.1155%" y="485" width="3.4280%" height="15" fill="rgb(254,145,51)" fg:x="8249" fg:w="362"/><text x="78.3655%" y="495.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (203 samples, 1.92%)</title><rect x="79.6212%" y="469" width="1.9223%" height="15" fill="rgb(231,199,27)" fg:x="8408" fg:w="203"/><text x="79.8712%" y="479.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (46 samples, 0.44%)</title><rect x="81.1080%" y="453" width="0.4356%" height="15" fill="rgb(245,158,14)" fg:x="8565" fg:w="46"/><text x="81.3580%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (40 samples, 0.38%)</title><rect x="81.5436%" y="517" width="0.3788%" height="15" fill="rgb(240,113,14)" fg:x="8611" fg:w="40"/><text x="81.7936%" y="527.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (26 samples, 0.25%)</title><rect x="81.6761%" y="501" width="0.2462%" height="15" fill="rgb(210,20,13)" fg:x="8625" fg:w="26"/><text x="81.9261%" y="511.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (24 samples, 0.23%)</title><rect x="81.6951%" y="485" width="0.2273%" height="15" fill="rgb(241,144,13)" fg:x="8627" fg:w="24"/><text x="81.9451%" y="495.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (24 samples, 0.23%)</title><rect x="81.6951%" y="469" width="0.2273%" height="15" fill="rgb(235,43,34)" fg:x="8627" fg:w="24"/><text x="81.9451%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (49 samples, 0.46%)</title><rect x="83.8826%" y="389" width="0.4640%" height="15" fill="rgb(208,36,20)" fg:x="8858" fg:w="49"/><text x="84.1326%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (130 samples, 1.23%)</title><rect x="83.3049%" y="405" width="1.2311%" height="15" fill="rgb(239,204,10)" fg:x="8797" fg:w="130"/><text x="83.5549%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (20 samples, 0.19%)</title><rect x="84.3466%" y="389" width="0.1894%" height="15" fill="rgb(217,84,43)" fg:x="8907" fg:w="20"/><text x="84.5966%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (22 samples, 0.21%)</title><rect x="84.5360%" y="405" width="0.2083%" height="15" fill="rgb(241,170,50)" fg:x="8927" fg:w="22"/><text x="84.7860%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (741 samples, 7.02%)</title><rect x="77.7367%" y="533" width="7.0170%" height="15" fill="rgb(226,205,29)" fg:x="8209" fg:w="741"/><text x="77.9867%" y="543.50">hashbrown..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (299 samples, 2.83%)</title><rect x="81.9223%" y="517" width="2.8314%" height="15" fill="rgb(233,113,1)" fg:x="8651" fg:w="299"/><text x="82.1723%" y="527.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (299 samples, 2.83%)</title><rect x="81.9223%" y="501" width="2.8314%" height="15" fill="rgb(253,98,13)" fg:x="8651" fg:w="299"/><text x="82.1723%" y="511.50">co..</text></g><g><title>core::hash::Hasher::write_i64 (299 samples, 2.83%)</title><rect x="81.9223%" y="485" width="2.8314%" height="15" fill="rgb(211,115,12)" fg:x="8651" fg:w="299"/><text x="82.1723%" y="495.50">co..</text></g><g><title>core::hash::Hasher::write_u64 (299 samples, 2.83%)</title><rect x="81.9223%" y="469" width="2.8314%" height="15" fill="rgb(208,12,16)" fg:x="8651" fg:w="299"/><text x="82.1723%" y="479.50">co..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (277 samples, 2.62%)</title><rect x="82.1307%" y="453" width="2.6231%" height="15" fill="rgb(237,193,54)" fg:x="8673" fg:w="277"/><text x="82.3807%" y="463.50">&lt;s..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (276 samples, 2.61%)</title><rect x="82.1402%" y="437" width="2.6136%" height="15" fill="rgb(243,22,42)" fg:x="8674" fg:w="276"/><text x="82.3902%" y="447.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (276 samples, 2.61%)</title><rect x="82.1402%" y="421" width="2.6136%" height="15" fill="rgb(233,151,36)" fg:x="8674" fg:w="276"/><text x="82.3902%" y="431.50">&lt;c..</text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (36 samples, 0.34%)</title><rect x="87.8314%" y="453" width="0.3409%" height="15" fill="rgb(237,57,45)" fg:x="9275" fg:w="36"/><text x="88.0814%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.55%)</title><rect x="87.6515%" y="469" width="0.5492%" height="15" fill="rgb(221,88,17)" fg:x="9256" fg:w="58"/><text x="87.9015%" y="479.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (3 samples, 0.03%)</title><rect x="88.1723%" y="453" width="0.0284%" height="15" fill="rgb(230,79,15)" fg:x="9311" fg:w="3"/><text x="88.4223%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.64%)</title><rect x="87.5852%" y="501" width="0.6439%" height="15" fill="rgb(213,57,13)" fg:x="9249" fg:w="68"/><text x="87.8352%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.64%)</title><rect x="87.5852%" y="485" width="0.6439%" height="15" fill="rgb(222,116,39)" fg:x="9249" fg:w="68"/><text x="87.8352%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2 samples, 0.02%)</title><rect x="88.2102%" y="469" width="0.0189%" height="15" fill="rgb(245,107,2)" fg:x="9315" fg:w="2"/><text x="88.4602%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="88.2102%" y="453" width="0.0189%" height="15" fill="rgb(238,1,10)" fg:x="9315" fg:w="2"/><text x="88.4602%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="88.2102%" y="437" width="0.0189%" height="15" fill="rgb(249,4,48)" fg:x="9315" fg:w="2"/><text x="88.4602%" y="447.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (27 samples, 0.26%)</title><rect x="88.2292%" y="501" width="0.2557%" height="15" fill="rgb(223,151,18)" fg:x="9317" fg:w="27"/><text x="88.4792%" y="511.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (27 samples, 0.26%)</title><rect x="88.2292%" y="485" width="0.2557%" height="15" fill="rgb(227,65,43)" fg:x="9317" fg:w="27"/><text x="88.4792%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for i64&gt;::eq (27 samples, 0.26%)</title><rect x="88.2292%" y="469" width="0.2557%" height="15" fill="rgb(218,40,45)" fg:x="9317" fg:w="27"/><text x="88.4792%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,272 samples, 12.05%)</title><rect x="77.6610%" y="581" width="12.0455%" height="15" fill="rgb(252,121,31)" fg:x="8201" fg:w="1272"/><text x="77.9110%" y="591.50">std::collections::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,272 samples, 12.05%)</title><rect x="77.6610%" y="565" width="12.0455%" height="15" fill="rgb(219,158,43)" fg:x="8201" fg:w="1272"/><text x="77.9110%" y="575.50">hashbrown::map::Ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,270 samples, 12.03%)</title><rect x="77.6799%" y="549" width="12.0265%" height="15" fill="rgb(231,162,42)" fg:x="8203" fg:w="1270"/><text x="77.9299%" y="559.50">hashbrown::map::Ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (523 samples, 4.95%)</title><rect x="84.7538%" y="533" width="4.9527%" height="15" fill="rgb(217,179,25)" fg:x="8950" fg:w="523"/><text x="85.0038%" y="543.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (523 samples, 4.95%)</title><rect x="84.7538%" y="517" width="4.9527%" height="15" fill="rgb(206,212,31)" fg:x="8950" fg:w="523"/><text x="85.0038%" y="527.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (129 samples, 1.22%)</title><rect x="88.4848%" y="501" width="1.2216%" height="15" fill="rgb(235,144,12)" fg:x="9344" fg:w="129"/><text x="88.7348%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (129 samples, 1.22%)</title><rect x="88.4848%" y="485" width="1.2216%" height="15" fill="rgb(213,51,10)" fg:x="9344" fg:w="129"/><text x="88.7348%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (129 samples, 1.22%)</title><rect x="88.4848%" y="469" width="1.2216%" height="15" fill="rgb(231,145,14)" fg:x="9344" fg:w="129"/><text x="88.7348%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (111 samples, 1.05%)</title><rect x="88.6553%" y="453" width="1.0511%" height="15" fill="rgb(235,15,28)" fg:x="9362" fg:w="111"/><text x="88.9053%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (111 samples, 1.05%)</title><rect x="88.6553%" y="437" width="1.0511%" height="15" fill="rgb(237,206,10)" fg:x="9362" fg:w="111"/><text x="88.9053%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (111 samples, 1.05%)</title><rect x="88.6553%" y="421" width="1.0511%" height="15" fill="rgb(236,227,27)" fg:x="9362" fg:w="111"/><text x="88.9053%" y="431.50"></text></g><g><title>core::core_arch::simd::i8x16::new (111 samples, 1.05%)</title><rect x="88.6553%" y="405" width="1.0511%" height="15" fill="rgb(246,83,35)" fg:x="9362" fg:w="111"/><text x="88.9053%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (21 samples, 0.20%)</title><rect x="90.7197%" y="437" width="0.1989%" height="15" fill="rgb(220,136,24)" fg:x="9580" fg:w="21"/><text x="90.9697%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (44 samples, 0.42%)</title><rect x="90.6534%" y="453" width="0.4167%" height="15" fill="rgb(217,3,25)" fg:x="9573" fg:w="44"/><text x="90.9034%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (16 samples, 0.15%)</title><rect x="90.9186%" y="437" width="0.1515%" height="15" fill="rgb(239,24,14)" fg:x="9601" fg:w="16"/><text x="91.1686%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (115 samples, 1.09%)</title><rect x="91.4583%" y="437" width="1.0890%" height="15" fill="rgb(244,16,53)" fg:x="9658" fg:w="115"/><text x="91.7083%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (312 samples, 2.95%)</title><rect x="90.0379%" y="501" width="2.9545%" height="15" fill="rgb(208,175,44)" fg:x="9508" fg:w="312"/><text x="90.2879%" y="511.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (312 samples, 2.95%)</title><rect x="90.0379%" y="485" width="2.9545%" height="15" fill="rgb(252,18,48)" fg:x="9508" fg:w="312"/><text x="90.2879%" y="495.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (312 samples, 2.95%)</title><rect x="90.0379%" y="469" width="2.9545%" height="15" fill="rgb(234,199,32)" fg:x="9508" fg:w="312"/><text x="90.2879%" y="479.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (203 samples, 1.92%)</title><rect x="91.0701%" y="453" width="1.9223%" height="15" fill="rgb(225,77,54)" fg:x="9617" fg:w="203"/><text x="91.3201%" y="463.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (47 samples, 0.45%)</title><rect x="92.5473%" y="437" width="0.4451%" height="15" fill="rgb(225,42,25)" fg:x="9773" fg:w="47"/><text x="92.7973%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (31 samples, 0.29%)</title><rect x="92.9924%" y="501" width="0.2936%" height="15" fill="rgb(242,227,46)" fg:x="9820" fg:w="31"/><text x="93.2424%" y="511.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (16 samples, 0.15%)</title><rect x="93.1345%" y="485" width="0.1515%" height="15" fill="rgb(246,197,35)" fg:x="9835" fg:w="16"/><text x="93.3845%" y="495.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (15 samples, 0.14%)</title><rect x="93.1439%" y="469" width="0.1420%" height="15" fill="rgb(215,159,26)" fg:x="9836" fg:w="15"/><text x="93.3939%" y="479.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (15 samples, 0.14%)</title><rect x="93.1439%" y="453" width="0.1420%" height="15" fill="rgb(212,194,50)" fg:x="9836" fg:w="15"/><text x="93.3939%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (14 samples, 0.13%)</title><rect x="94.4602%" y="373" width="0.1326%" height="15" fill="rgb(246,132,1)" fg:x="9975" fg:w="14"/><text x="94.7102%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (54 samples, 0.51%)</title><rect x="94.2045%" y="389" width="0.5114%" height="15" fill="rgb(217,71,7)" fg:x="9948" fg:w="54"/><text x="94.4545%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (13 samples, 0.12%)</title><rect x="94.5928%" y="373" width="0.1231%" height="15" fill="rgb(252,59,32)" fg:x="9989" fg:w="13"/><text x="94.8428%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (545 samples, 5.16%)</title><rect x="89.8201%" y="517" width="5.1610%" height="15" fill="rgb(253,204,25)" fg:x="9485" fg:w="545"/><text x="90.0701%" y="527.50">hashbr..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (179 samples, 1.70%)</title><rect x="93.2860%" y="501" width="1.6951%" height="15" fill="rgb(232,21,16)" fg:x="9851" fg:w="179"/><text x="93.5360%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (179 samples, 1.70%)</title><rect x="93.2860%" y="485" width="1.6951%" height="15" fill="rgb(248,90,29)" fg:x="9851" fg:w="179"/><text x="93.5360%" y="495.50"></text></g><g><title>core::hash::Hasher::write_i64 (179 samples, 1.70%)</title><rect x="93.2860%" y="469" width="1.6951%" height="15" fill="rgb(249,223,7)" fg:x="9851" fg:w="179"/><text x="93.5360%" y="479.50"></text></g><g><title>core::hash::Hasher::write_u64 (179 samples, 1.70%)</title><rect x="93.2860%" y="453" width="1.6951%" height="15" fill="rgb(231,119,42)" fg:x="9851" fg:w="179"/><text x="93.5360%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (169 samples, 1.60%)</title><rect x="93.3807%" y="437" width="1.6004%" height="15" fill="rgb(215,41,35)" fg:x="9861" fg:w="169"/><text x="93.6307%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (162 samples, 1.53%)</title><rect x="93.4470%" y="421" width="1.5341%" height="15" fill="rgb(220,44,45)" fg:x="9868" fg:w="162"/><text x="93.6970%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 samples, 1.53%)</title><rect x="93.4470%" y="405" width="1.5341%" height="15" fill="rgb(253,197,36)" fg:x="9868" fg:w="162"/><text x="93.6970%" y="415.50"></text></g><g><title>core::hash::sip::u8to64_le (28 samples, 0.27%)</title><rect x="94.7159%" y="389" width="0.2652%" height="15" fill="rgb(245,225,54)" fg:x="10002" fg:w="28"/><text x="94.9659%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (68 samples, 0.64%)</title><rect x="96.4489%" y="437" width="0.6439%" height="15" fill="rgb(239,94,37)" fg:x="10185" fg:w="68"/><text x="96.6989%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (101 samples, 0.96%)</title><rect x="96.2689%" y="453" width="0.9564%" height="15" fill="rgb(242,217,10)" fg:x="10166" fg:w="101"/><text x="96.5189%" y="463.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (14 samples, 0.13%)</title><rect x="97.0928%" y="437" width="0.1326%" height="15" fill="rgb(250,193,7)" fg:x="10253" fg:w="14"/><text x="97.3428%" y="447.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (14 samples, 0.13%)</title><rect x="97.2254%" y="453" width="0.1326%" height="15" fill="rgb(230,104,19)" fg:x="10267" fg:w="14"/><text x="97.4754%" y="463.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::any_bit_set (3 samples, 0.03%)</title><rect x="97.3580%" y="453" width="0.0284%" height="15" fill="rgb(230,181,4)" fg:x="10281" fg:w="3"/><text x="97.6080%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="97.3864%" y="453" width="0.0189%" height="15" fill="rgb(216,219,49)" fg:x="10284" fg:w="2"/><text x="97.6364%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="97.3864%" y="437" width="0.0189%" height="15" fill="rgb(254,144,0)" fg:x="10284" fg:w="2"/><text x="97.6364%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="97.3864%" y="421" width="0.0189%" height="15" fill="rgb(205,209,38)" fg:x="10284" fg:w="2"/><text x="97.6364%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (154 samples, 1.46%)</title><rect x="96.0985%" y="485" width="1.4583%" height="15" fill="rgb(240,21,42)" fg:x="10148" fg:w="154"/><text x="96.3485%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (154 samples, 1.46%)</title><rect x="96.0985%" y="469" width="1.4583%" height="15" fill="rgb(241,132,3)" fg:x="10148" fg:w="154"/><text x="96.3485%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (16 samples, 0.15%)</title><rect x="97.4053%" y="453" width="0.1515%" height="15" fill="rgb(225,14,2)" fg:x="10286" fg:w="16"/><text x="97.6553%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (16 samples, 0.15%)</title><rect x="97.4053%" y="437" width="0.1515%" height="15" fill="rgb(210,141,35)" fg:x="10286" fg:w="16"/><text x="97.6553%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (16 samples, 0.15%)</title><rect x="97.4053%" y="421" width="0.1515%" height="15" fill="rgb(251,14,44)" fg:x="10286" fg:w="16"/><text x="97.6553%" y="431.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::get (918 samples, 8.69%)</title><rect x="89.7064%" y="581" width="8.6932%" height="15" fill="rgb(247,48,18)" fg:x="9473" fg:w="918"/><text x="89.9564%" y="591.50">std::collect..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::get (918 samples, 8.69%)</title><rect x="89.7064%" y="565" width="8.6932%" height="15" fill="rgb(225,0,40)" fg:x="9473" fg:w="918"/><text x="89.9564%" y="575.50">hashbrown::s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (918 samples, 8.69%)</title><rect x="89.7064%" y="549" width="8.6932%" height="15" fill="rgb(221,31,33)" fg:x="9473" fg:w="918"/><text x="89.9564%" y="559.50">hashbrown::m..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (918 samples, 8.69%)</title><rect x="89.7064%" y="533" width="8.6932%" height="15" fill="rgb(237,42,40)" fg:x="9473" fg:w="918"/><text x="89.9564%" y="543.50">hashbrown::m..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (361 samples, 3.42%)</title><rect x="94.9811%" y="517" width="3.4186%" height="15" fill="rgb(233,51,29)" fg:x="10030" fg:w="361"/><text x="95.2311%" y="527.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (361 samples, 3.42%)</title><rect x="94.9811%" y="501" width="3.4186%" height="15" fill="rgb(226,58,20)" fg:x="10030" fg:w="361"/><text x="95.2311%" y="511.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (89 samples, 0.84%)</title><rect x="97.5568%" y="485" width="0.8428%" height="15" fill="rgb(208,98,7)" fg:x="10302" fg:w="89"/><text x="97.8068%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (89 samples, 0.84%)</title><rect x="97.5568%" y="469" width="0.8428%" height="15" fill="rgb(228,143,44)" fg:x="10302" fg:w="89"/><text x="97.8068%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (89 samples, 0.84%)</title><rect x="97.5568%" y="453" width="0.8428%" height="15" fill="rgb(246,55,38)" fg:x="10302" fg:w="89"/><text x="97.8068%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (87 samples, 0.82%)</title><rect x="97.5758%" y="437" width="0.8239%" height="15" fill="rgb(247,87,16)" fg:x="10304" fg:w="87"/><text x="97.8258%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (87 samples, 0.82%)</title><rect x="97.5758%" y="421" width="0.8239%" height="15" fill="rgb(234,129,42)" fg:x="10304" fg:w="87"/><text x="97.8258%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (87 samples, 0.82%)</title><rect x="97.5758%" y="405" width="0.8239%" height="15" fill="rgb(220,82,16)" fg:x="10304" fg:w="87"/><text x="97.8258%" y="415.50"></text></g><g><title>core::core_arch::simd::i8x16::new (87 samples, 0.82%)</title><rect x="97.5758%" y="389" width="0.8239%" height="15" fill="rgb(211,88,4)" fg:x="10304" fg:w="87"/><text x="97.8258%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="98.5606%" y="453" width="0.0189%" height="15" fill="rgb(248,151,21)" fg:x="10408" fg:w="2"/><text x="98.8106%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.04%)</title><rect x="98.5511%" y="469" width="0.0379%" height="15" fill="rgb(238,163,6)" fg:x="10407" fg:w="4"/><text x="98.8011%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.09%)</title><rect x="98.5985%" y="453" width="0.0852%" height="15" fill="rgb(209,183,11)" fg:x="10412" fg:w="9"/><text x="98.8485%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.20%)</title><rect x="98.4943%" y="517" width="0.1989%" height="15" fill="rgb(219,37,20)" fg:x="10401" fg:w="21"/><text x="98.7443%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21 samples, 0.20%)</title><rect x="98.4943%" y="501" width="0.1989%" height="15" fill="rgb(210,158,4)" fg:x="10401" fg:w="21"/><text x="98.7443%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21 samples, 0.20%)</title><rect x="98.4943%" y="485" width="0.1989%" height="15" fill="rgb(221,167,53)" fg:x="10401" fg:w="21"/><text x="98.7443%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.10%)</title><rect x="98.5890%" y="469" width="0.1042%" height="15" fill="rgb(237,151,45)" fg:x="10411" fg:w="11"/><text x="98.8390%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.04%)</title><rect x="98.6932%" y="517" width="0.0379%" height="15" fill="rgb(231,39,3)" fg:x="10422" fg:w="4"/><text x="98.9432%" y="527.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.04%)</title><rect x="98.6932%" y="501" width="0.0379%" height="15" fill="rgb(212,167,28)" fg:x="10422" fg:w="4"/><text x="98.9432%" y="511.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.03%)</title><rect x="98.7027%" y="485" width="0.0284%" height="15" fill="rgb(232,178,8)" fg:x="10423" fg:w="3"/><text x="98.9527%" y="495.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.03%)</title><rect x="98.7027%" y="469" width="0.0284%" height="15" fill="rgb(225,151,20)" fg:x="10423" fg:w="3"/><text x="98.9527%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="98.8542%" y="389" width="0.0284%" height="15" fill="rgb(238,3,37)" fg:x="10439" fg:w="3"/><text x="99.1042%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.09%)</title><rect x="98.8068%" y="405" width="0.0852%" height="15" fill="rgb(251,147,42)" fg:x="10434" fg:w="9"/><text x="99.0568%" y="415.50"></text></g><g><title>hashbrown::map::make_insert_hash (44 samples, 0.42%)</title><rect x="98.4943%" y="533" width="0.4167%" height="15" fill="rgb(208,173,10)" fg:x="10401" fg:w="44"/><text x="98.7443%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (19 samples, 0.18%)</title><rect x="98.7311%" y="517" width="0.1799%" height="15" fill="rgb(246,225,4)" fg:x="10426" fg:w="19"/><text x="98.9811%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (19 samples, 0.18%)</title><rect x="98.7311%" y="501" width="0.1799%" height="15" fill="rgb(248,102,6)" fg:x="10426" fg:w="19"/><text x="98.9811%" y="511.50"></text></g><g><title>core::hash::Hasher::write_i64 (19 samples, 0.18%)</title><rect x="98.7311%" y="485" width="0.1799%" height="15" fill="rgb(232,6,21)" fg:x="10426" fg:w="19"/><text x="98.9811%" y="495.50"></text></g><g><title>core::hash::Hasher::write_u64 (19 samples, 0.18%)</title><rect x="98.7311%" y="469" width="0.1799%" height="15" fill="rgb(221,179,22)" fg:x="10426" fg:w="19"/><text x="98.9811%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.18%)</title><rect x="98.7311%" y="453" width="0.1799%" height="15" fill="rgb(252,50,20)" fg:x="10426" fg:w="19"/><text x="98.9811%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.18%)</title><rect x="98.7311%" y="437" width="0.1799%" height="15" fill="rgb(222,56,38)" fg:x="10426" fg:w="19"/><text x="98.9811%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.18%)</title><rect x="98.7311%" y="421" width="0.1799%" height="15" fill="rgb(206,193,29)" fg:x="10426" fg:w="19"/><text x="98.9811%" y="431.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="98.8920%" y="405" width="0.0189%" height="15" fill="rgb(239,192,45)" fg:x="10443" fg:w="2"/><text x="99.1420%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="98.9394%" y="501" width="0.0284%" height="15" fill="rgb(254,18,36)" fg:x="10448" fg:w="3"/><text x="99.1894%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="98.9394%" y="485" width="0.0284%" height="15" fill="rgb(221,127,11)" fg:x="10448" fg:w="3"/><text x="99.1894%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="98.9489%" y="469" width="0.0189%" height="15" fill="rgb(234,146,35)" fg:x="10449" fg:w="2"/><text x="99.1989%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (11 samples, 0.10%)</title><rect x="98.9110%" y="533" width="0.1042%" height="15" fill="rgb(254,201,37)" fg:x="10445" fg:w="11"/><text x="99.1610%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.10%)</title><rect x="98.9110%" y="517" width="0.1042%" height="15" fill="rgb(211,202,23)" fg:x="10445" fg:w="11"/><text x="99.1610%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.05%)</title><rect x="98.9678%" y="501" width="0.0473%" height="15" fill="rgb(237,91,2)" fg:x="10451" fg:w="5"/><text x="99.2178%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.05%)</title><rect x="98.9678%" y="485" width="0.0473%" height="15" fill="rgb(226,228,36)" fg:x="10451" fg:w="5"/><text x="99.2178%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.05%)</title><rect x="98.9678%" y="469" width="0.0473%" height="15" fill="rgb(213,63,50)" fg:x="10451" fg:w="5"/><text x="99.2178%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.05%)</title><rect x="98.9678%" y="453" width="0.0473%" height="15" fill="rgb(235,194,19)" fg:x="10451" fg:w="5"/><text x="99.2178%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.05%)</title><rect x="98.9678%" y="437" width="0.0473%" height="15" fill="rgb(207,204,18)" fg:x="10451" fg:w="5"/><text x="99.2178%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.05%)</title><rect x="98.9678%" y="421" width="0.0473%" height="15" fill="rgb(248,8,7)" fg:x="10451" fg:w="5"/><text x="99.2178%" y="431.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.05%)</title><rect x="98.9678%" y="405" width="0.0473%" height="15" fill="rgb(223,145,47)" fg:x="10451" fg:w="5"/><text x="99.2178%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (8 samples, 0.08%)</title><rect x="99.0246%" y="517" width="0.0758%" height="15" fill="rgb(228,84,11)" fg:x="10457" fg:w="8"/><text x="99.2746%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (8 samples, 0.08%)</title><rect x="99.0246%" y="501" width="0.0758%" height="15" fill="rgb(218,76,45)" fg:x="10457" fg:w="8"/><text x="99.2746%" y="511.50"></text></g><g><title>core::ptr::write (8 samples, 0.08%)</title><rect x="99.0246%" y="485" width="0.0758%" height="15" fill="rgb(223,80,15)" fg:x="10457" fg:w="8"/><text x="99.2746%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.04%)</title><rect x="99.2330%" y="373" width="0.0379%" height="15" fill="rgb(219,218,33)" fg:x="10479" fg:w="4"/><text x="99.4830%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.07%)</title><rect x="99.2235%" y="389" width="0.0663%" height="15" fill="rgb(208,51,11)" fg:x="10478" fg:w="7"/><text x="99.4735%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="99.2708%" y="373" width="0.0189%" height="15" fill="rgb(229,165,39)" fg:x="10483" fg:w="2"/><text x="99.5208%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.09%)</title><rect x="99.3087%" y="373" width="0.0852%" height="15" fill="rgb(241,100,24)" fg:x="10487" fg:w="9"/><text x="99.5587%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (29 samples, 0.27%)</title><rect x="99.1383%" y="437" width="0.2746%" height="15" fill="rgb(228,14,23)" fg:x="10469" fg:w="29"/><text x="99.3883%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (29 samples, 0.27%)</title><rect x="99.1383%" y="421" width="0.2746%" height="15" fill="rgb(247,116,52)" fg:x="10469" fg:w="29"/><text x="99.3883%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (29 samples, 0.27%)</title><rect x="99.1383%" y="405" width="0.2746%" height="15" fill="rgb(216,149,33)" fg:x="10469" fg:w="29"/><text x="99.3883%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.12%)</title><rect x="99.2898%" y="389" width="0.1231%" height="15" fill="rgb(238,142,29)" fg:x="10485" fg:w="13"/><text x="99.5398%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="99.3939%" y="373" width="0.0189%" height="15" fill="rgb(224,83,40)" fg:x="10496" fg:w="2"/><text x="99.6439%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.04%)</title><rect x="99.5455%" y="325" width="0.0379%" height="15" fill="rgb(234,165,11)" fg:x="10512" fg:w="4"/><text x="99.7955%" y="335.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (51 samples, 0.48%)</title><rect x="99.1193%" y="469" width="0.4830%" height="15" fill="rgb(215,96,23)" fg:x="10467" fg:w="51"/><text x="99.3693%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (51 samples, 0.48%)</title><rect x="99.1193%" y="453" width="0.4830%" height="15" fill="rgb(233,179,26)" fg:x="10467" fg:w="51"/><text x="99.3693%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (20 samples, 0.19%)</title><rect x="99.4129%" y="437" width="0.1894%" height="15" fill="rgb(225,129,33)" fg:x="10498" fg:w="20"/><text x="99.6629%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (20 samples, 0.19%)</title><rect x="99.4129%" y="421" width="0.1894%" height="15" fill="rgb(237,49,13)" fg:x="10498" fg:w="20"/><text x="99.6629%" y="431.50"></text></g><g><title>core::hash::Hasher::write_i64 (20 samples, 0.19%)</title><rect x="99.4129%" y="405" width="0.1894%" height="15" fill="rgb(211,3,31)" fg:x="10498" fg:w="20"/><text x="99.6629%" y="415.50"></text></g><g><title>core::hash::Hasher::write_u64 (20 samples, 0.19%)</title><rect x="99.4129%" y="389" width="0.1894%" height="15" fill="rgb(216,152,19)" fg:x="10498" fg:w="20"/><text x="99.6629%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.19%)</title><rect x="99.4129%" y="373" width="0.1894%" height="15" fill="rgb(251,121,35)" fg:x="10498" fg:w="20"/><text x="99.6629%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.18%)</title><rect x="99.4223%" y="357" width="0.1799%" height="15" fill="rgb(210,217,47)" fg:x="10499" fg:w="19"/><text x="99.6723%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.18%)</title><rect x="99.4223%" y="341" width="0.1799%" height="15" fill="rgb(244,116,22)" fg:x="10499" fg:w="19"/><text x="99.6723%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="99.5833%" y="325" width="0.0189%" height="15" fill="rgb(228,17,21)" fg:x="10516" fg:w="2"/><text x="99.8333%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (3 samples, 0.03%)</title><rect x="99.6023%" y="469" width="0.0284%" height="15" fill="rgb(240,149,34)" fg:x="10518" fg:w="3"/><text x="99.8523%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (3 samples, 0.03%)</title><rect x="99.6023%" y="453" width="0.0284%" height="15" fill="rgb(208,125,47)" fg:x="10518" fg:w="3"/><text x="99.8523%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.03%)</title><rect x="99.6023%" y="437" width="0.0284%" height="15" fill="rgb(249,186,39)" fg:x="10518" fg:w="3"/><text x="99.8523%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (3 samples, 0.03%)</title><rect x="99.6970%" y="437" width="0.0284%" height="15" fill="rgb(240,220,33)" fg:x="10528" fg:w="3"/><text x="99.9470%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="99.7254%" y="437" width="0.0189%" height="15" fill="rgb(243,110,23)" fg:x="10531" fg:w="2"/><text x="99.9754%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (18 samples, 0.17%)</title><rect x="99.6307%" y="453" width="0.1705%" height="15" fill="rgb(219,163,46)" fg:x="10521" fg:w="18"/><text x="99.8807%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.05%)</title><rect x="99.7538%" y="437" width="0.0473%" height="15" fill="rgb(216,126,30)" fg:x="10534" fg:w="5"/><text x="100.0038%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.05%)</title><rect x="99.7538%" y="421" width="0.0473%" height="15" fill="rgb(208,139,11)" fg:x="10534" fg:w="5"/><text x="100.0038%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (74 samples, 0.70%)</title><rect x="99.1098%" y="517" width="0.7008%" height="15" fill="rgb(213,118,36)" fg:x="10466" fg:w="74"/><text x="99.3598%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (74 samples, 0.70%)</title><rect x="99.1098%" y="501" width="0.7008%" height="15" fill="rgb(226,43,17)" fg:x="10466" fg:w="74"/><text x="99.3598%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (74 samples, 0.70%)</title><rect x="99.1098%" y="485" width="0.7008%" height="15" fill="rgb(254,217,4)" fg:x="10466" fg:w="74"/><text x="99.3598%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (19 samples, 0.18%)</title><rect x="99.6307%" y="469" width="0.1799%" height="15" fill="rgb(210,134,47)" fg:x="10521" fg:w="19"/><text x="99.8807%" y="479.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="99.8674%" y="501" width="0.0189%" height="15" fill="rgb(237,24,49)" fg:x="10546" fg:w="2"/><text x="100.1174%" y="511.50"></text></g><g><title>__libc_start_main (10,534 samples, 99.75%)</title><rect x="0.1799%" y="869" width="99.7538%" height="15" fill="rgb(251,39,46)" fg:x="19" fg:w="10534"/><text x="0.4299%" y="879.50">__libc_start_main</text></g><g><title>main (10,534 samples, 99.75%)</title><rect x="0.1799%" y="853" width="99.7538%" height="15" fill="rgb(251,220,3)" fg:x="19" fg:w="10534"/><text x="0.4299%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (10,534 samples, 99.75%)</title><rect x="0.1799%" y="837" width="99.7538%" height="15" fill="rgb(228,105,12)" fg:x="19" fg:w="10534"/><text x="0.4299%" y="847.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (10,534 samples, 99.75%)</title><rect x="0.1799%" y="821" width="99.7538%" height="15" fill="rgb(215,196,1)" fg:x="19" fg:w="10534"/><text x="0.4299%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (10,534 samples, 99.75%)</title><rect x="0.1799%" y="805" width="99.7538%" height="15" fill="rgb(214,33,39)" fg:x="19" fg:w="10534"/><text x="0.4299%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,534 samples, 99.75%)</title><rect x="0.1799%" y="789" width="99.7538%" height="15" fill="rgb(220,19,52)" fg:x="19" fg:w="10534"/><text x="0.4299%" y="799.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (10,534 samples, 99.75%)</title><rect x="0.1799%" y="773" width="99.7538%" height="15" fill="rgb(221,78,38)" fg:x="19" fg:w="10534"/><text x="0.4299%" y="783.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (10,534 samples, 99.75%)</title><rect x="0.1799%" y="757" width="99.7538%" height="15" fill="rgb(253,30,16)" fg:x="19" fg:w="10534"/><text x="0.4299%" y="767.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (10,534 samples, 99.75%)</title><rect x="0.1799%" y="741" width="99.7538%" height="15" fill="rgb(242,65,0)" fg:x="19" fg:w="10534"/><text x="0.4299%" y="751.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,534 samples, 99.75%)</title><rect x="0.1799%" y="725" width="99.7538%" height="15" fill="rgb(235,201,12)" fg:x="19" fg:w="10534"/><text x="0.4299%" y="735.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (10,534 samples, 99.75%)</title><rect x="0.1799%" y="709" width="99.7538%" height="15" fill="rgb(233,161,9)" fg:x="19" fg:w="10534"/><text x="0.4299%" y="719.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (10,534 samples, 99.75%)</title><rect x="0.1799%" y="693" width="99.7538%" height="15" fill="rgb(241,207,41)" fg:x="19" fg:w="10534"/><text x="0.4299%" y="703.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10,534 samples, 99.75%)</title><rect x="0.1799%" y="677" width="99.7538%" height="15" fill="rgb(212,69,46)" fg:x="19" fg:w="10534"/><text x="0.4299%" y="687.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (10,534 samples, 99.75%)</title><rect x="0.1799%" y="661" width="99.7538%" height="15" fill="rgb(239,69,45)" fg:x="19" fg:w="10534"/><text x="0.4299%" y="671.50">core::ops::function::FnOnce::call_once</text></g><g><title>y2021::main (10,534 samples, 99.75%)</title><rect x="0.1799%" y="645" width="99.7538%" height="15" fill="rgb(242,117,48)" fg:x="19" fg:w="10534"/><text x="0.4299%" y="655.50">y2021::main</text></g><g><title>y2021::d20::speed::run (2,619 samples, 24.80%)</title><rect x="75.1326%" y="629" width="24.8011%" height="15" fill="rgb(228,41,36)" fg:x="7934" fg:w="2619"/><text x="75.3826%" y="639.50">y2021::d20::speed::run</text></g><g><title>y2021::d20::speed::p02 (2,571 samples, 24.35%)</title><rect x="75.5871%" y="613" width="24.3466%" height="15" fill="rgb(212,3,32)" fg:x="7982" fg:w="2571"/><text x="75.8371%" y="623.50">y2021::d20::speed::p02</text></g><g><title>y2021::d20::speed::Grid::step (2,568 samples, 24.32%)</title><rect x="75.6155%" y="597" width="24.3182%" height="15" fill="rgb(233,41,49)" fg:x="7985" fg:w="2568"/><text x="75.8655%" y="607.50">y2021::d20::speed::Grid::step</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (162 samples, 1.53%)</title><rect x="98.3996%" y="581" width="1.5341%" height="15" fill="rgb(252,170,49)" fg:x="10391" fg:w="162"/><text x="98.6496%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (162 samples, 1.53%)</title><rect x="98.3996%" y="565" width="1.5341%" height="15" fill="rgb(229,53,26)" fg:x="10391" fg:w="162"/><text x="98.6496%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (156 samples, 1.48%)</title><rect x="98.4564%" y="549" width="1.4773%" height="15" fill="rgb(217,157,12)" fg:x="10397" fg:w="156"/><text x="98.7064%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (97 samples, 0.92%)</title><rect x="99.0152%" y="533" width="0.9186%" height="15" fill="rgb(227,17,9)" fg:x="10456" fg:w="97"/><text x="99.2652%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (13 samples, 0.12%)</title><rect x="99.8106%" y="517" width="0.1231%" height="15" fill="rgb(218,84,12)" fg:x="10540" fg:w="13"/><text x="100.0606%" y="527.50"></text></g><g><title>hashbrown::raw::is_full (5 samples, 0.05%)</title><rect x="99.8864%" y="501" width="0.0473%" height="15" fill="rgb(212,79,24)" fg:x="10548" fg:w="5"/><text x="100.1364%" y="511.50"></text></g><g><title>_start (10,535 samples, 99.76%)</title><rect x="0.1799%" y="885" width="99.7633%" height="15" fill="rgb(217,222,37)" fg:x="19" fg:w="10535"/><text x="0.4299%" y="895.50">_start</text></g><g><title>__x64_sys_execve (2 samples, 0.02%)</title><rect x="99.9432%" y="853" width="0.0189%" height="15" fill="rgb(246,208,8)" fg:x="10554" fg:w="2"/><text x="100.1932%" y="863.50"></text></g><g><title>do_execveat_common.isra.0 (2 samples, 0.02%)</title><rect x="99.9432%" y="837" width="0.0189%" height="15" fill="rgb(244,133,10)" fg:x="10554" fg:w="2"/><text x="100.1932%" y="847.50"></text></g><g><title>bprm_execve (2 samples, 0.02%)</title><rect x="99.9432%" y="821" width="0.0189%" height="15" fill="rgb(209,219,41)" fg:x="10554" fg:w="2"/><text x="100.1932%" y="831.50"></text></g><g><title>exec_binprm (2 samples, 0.02%)</title><rect x="99.9432%" y="805" width="0.0189%" height="15" fill="rgb(253,175,45)" fg:x="10554" fg:w="2"/><text x="100.1932%" y="815.50"></text></g><g><title>load_elf_binary (2 samples, 0.02%)</title><rect x="99.9432%" y="789" width="0.0189%" height="15" fill="rgb(235,100,37)" fg:x="10554" fg:w="2"/><text x="100.1932%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="99.9432%" y="885" width="0.0473%" height="15" fill="rgb(225,87,19)" fg:x="10554" fg:w="5"/><text x="100.1932%" y="895.50"></text></g><g><title>do_syscall_64 (5 samples, 0.05%)</title><rect x="99.9432%" y="869" width="0.0473%" height="15" fill="rgb(217,152,17)" fg:x="10554" fg:w="5"/><text x="100.1932%" y="879.50"></text></g><g><title>__x64_sys_exit_group (3 samples, 0.03%)</title><rect x="99.9621%" y="853" width="0.0284%" height="15" fill="rgb(235,72,13)" fg:x="10556" fg:w="3"/><text x="100.2121%" y="863.50"></text></g><g><title>do_group_exit (3 samples, 0.03%)</title><rect x="99.9621%" y="837" width="0.0284%" height="15" fill="rgb(233,140,18)" fg:x="10556" fg:w="3"/><text x="100.2121%" y="847.50"></text></g><g><title>do_exit (3 samples, 0.03%)</title><rect x="99.9621%" y="821" width="0.0284%" height="15" fill="rgb(207,212,28)" fg:x="10556" fg:w="3"/><text x="100.2121%" y="831.50"></text></g><g><title>mmput (3 samples, 0.03%)</title><rect x="99.9621%" y="805" width="0.0284%" height="15" fill="rgb(220,130,25)" fg:x="10556" fg:w="3"/><text x="100.2121%" y="815.50"></text></g><g><title>exit_mmap (3 samples, 0.03%)</title><rect x="99.9621%" y="789" width="0.0284%" height="15" fill="rgb(205,55,34)" fg:x="10556" fg:w="3"/><text x="100.2121%" y="799.50"></text></g><g><title>unmap_vmas (2 samples, 0.02%)</title><rect x="99.9716%" y="773" width="0.0189%" height="15" fill="rgb(237,54,35)" fg:x="10557" fg:w="2"/><text x="100.2216%" y="783.50"></text></g><g><title>unmap_single_vma (2 samples, 0.02%)</title><rect x="99.9716%" y="757" width="0.0189%" height="15" fill="rgb(208,67,23)" fg:x="10557" fg:w="2"/><text x="100.2216%" y="767.50"></text></g><g><title>unmap_page_range (2 samples, 0.02%)</title><rect x="99.9716%" y="741" width="0.0189%" height="15" fill="rgb(206,207,50)" fg:x="10557" fg:w="2"/><text x="100.2216%" y="751.50"></text></g><g><title>zap_pte_range.isra.0 (2 samples, 0.02%)</title><rect x="99.9716%" y="725" width="0.0189%" height="15" fill="rgb(213,211,42)" fg:x="10557" fg:w="2"/><text x="100.2216%" y="735.50"></text></g><g><title>all (10,560 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(252,197,50)" fg:x="0" fg:w="10560"/><text x="0.2500%" y="927.50"></text></g><g><title>y2021 (10,554 samples, 99.94%)</title><rect x="0.0568%" y="901" width="99.9432%" height="15" fill="rgb(251,211,41)" fg:x="6" fg:w="10554"/><text x="0.3068%" y="911.50">y2021</text></g></svg></svg>