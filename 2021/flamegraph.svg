<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1302" onload="init(evt)" viewBox="0 0 1200 1302" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1302" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1285.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1285.00"> </text><svg id="frames" x="10" width="1180" total_samples="4139"><g><title>perf_event_comm_output (7 samples, 0.17%)</title><rect x="0.0000%" y="1061" width="0.1691%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="7"/><text x="0.2500%" y="1071.50"></text></g><g><title>perf (8 samples, 0.19%)</title><rect x="0.0000%" y="1237" width="0.1933%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1247.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.19%)</title><rect x="0.0000%" y="1221" width="0.1933%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1231.50"></text></g><g><title>do_syscall_64 (8 samples, 0.19%)</title><rect x="0.0000%" y="1205" width="0.1933%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1215.50"></text></g><g><title>__x64_sys_execve (8 samples, 0.19%)</title><rect x="0.0000%" y="1189" width="0.1933%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1199.50"></text></g><g><title>do_execveat_common.isra.0 (8 samples, 0.19%)</title><rect x="0.0000%" y="1173" width="0.1933%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1183.50"></text></g><g><title>bprm_execve (8 samples, 0.19%)</title><rect x="0.0000%" y="1157" width="0.1933%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1167.50"></text></g><g><title>exec_binprm (8 samples, 0.19%)</title><rect x="0.0000%" y="1141" width="0.1933%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1151.50"></text></g><g><title>load_elf_binary (8 samples, 0.19%)</title><rect x="0.0000%" y="1125" width="0.1933%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1135.50"></text></g><g><title>begin_new_exec (8 samples, 0.19%)</title><rect x="0.0000%" y="1109" width="0.1933%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1119.50"></text></g><g><title>__set_task_comm (8 samples, 0.19%)</title><rect x="0.0000%" y="1093" width="0.1933%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1103.50"></text></g><g><title>perf_event_comm (8 samples, 0.19%)</title><rect x="0.0000%" y="1077" width="0.1933%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1087.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="0.1691%" y="1061" width="0.0242%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="1"/><text x="0.4191%" y="1071.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="0.1691%" y="1045" width="0.0242%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="1"/><text x="0.4191%" y="1055.50"></text></g><g><title>perf_event_comm_output (1 samples, 0.02%)</title><rect x="0.1691%" y="1029" width="0.0242%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="1"/><text x="0.4191%" y="1039.50"></text></g><g><title>__perf_event_header__init_id.isra.0 (1 samples, 0.02%)</title><rect x="0.1691%" y="1013" width="0.0242%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="1"/><text x="0.4191%" y="1023.50"></text></g><g><title>perf_event_pid_type (1 samples, 0.02%)</title><rect x="0.1691%" y="997" width="0.0242%" height="15" fill="rgb(225,20,46)" fg:x="7" fg:w="1"/><text x="0.4191%" y="1007.50"></text></g><g><title>__task_pid_nr_ns (1 samples, 0.02%)</title><rect x="0.1691%" y="981" width="0.0242%" height="15" fill="rgb(210,31,41)" fg:x="7" fg:w="1"/><text x="0.4191%" y="991.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="0.1933%" y="405" width="0.0242%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="1"/><text x="0.4433%" y="415.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.05%)</title><rect x="0.5074%" y="293" width="0.0483%" height="15" fill="rgb(226,26,5)" fg:x="21" fg:w="2"/><text x="0.7574%" y="303.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.05%)</title><rect x="0.5074%" y="277" width="0.0483%" height="15" fill="rgb(249,33,26)" fg:x="21" fg:w="2"/><text x="0.7574%" y="287.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.05%)</title><rect x="0.5074%" y="261" width="0.0483%" height="15" fill="rgb(235,183,28)" fg:x="21" fg:w="2"/><text x="0.7574%" y="271.50"></text></g><g><title>clear_page_rep (2 samples, 0.05%)</title><rect x="0.5074%" y="245" width="0.0483%" height="15" fill="rgb(221,5,38)" fg:x="21" fg:w="2"/><text x="0.7574%" y="255.50"></text></g><g><title>alloc::fmt::format (16 samples, 0.39%)</title><rect x="0.1933%" y="709" width="0.3866%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="16"/><text x="0.4433%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (16 samples, 0.39%)</title><rect x="0.1933%" y="693" width="0.3866%" height="15" fill="rgb(241,131,45)" fg:x="8" fg:w="16"/><text x="0.4433%" y="703.50"></text></g><g><title>core::fmt::write (16 samples, 0.39%)</title><rect x="0.1933%" y="677" width="0.3866%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="16"/><text x="0.4433%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.39%)</title><rect x="0.1933%" y="661" width="0.3866%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="16"/><text x="0.4433%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (16 samples, 0.39%)</title><rect x="0.1933%" y="645" width="0.3866%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="16"/><text x="0.4433%" y="655.50"></text></g><g><title>alloc::string::String::push_str (16 samples, 0.39%)</title><rect x="0.1933%" y="629" width="0.3866%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="16"/><text x="0.4433%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.39%)</title><rect x="0.1933%" y="613" width="0.3866%" height="15" fill="rgb(232,36,49)" fg:x="8" fg:w="16"/><text x="0.4433%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.39%)</title><rect x="0.1933%" y="597" width="0.3866%" height="15" fill="rgb(209,103,24)" fg:x="8" fg:w="16"/><text x="0.4433%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.39%)</title><rect x="0.1933%" y="581" width="0.3866%" height="15" fill="rgb(229,88,8)" fg:x="8" fg:w="16"/><text x="0.4433%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.39%)</title><rect x="0.1933%" y="565" width="0.3866%" height="15" fill="rgb(213,181,19)" fg:x="8" fg:w="16"/><text x="0.4433%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.39%)</title><rect x="0.1933%" y="549" width="0.3866%" height="15" fill="rgb(254,191,54)" fg:x="8" fg:w="16"/><text x="0.4433%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.39%)</title><rect x="0.1933%" y="533" width="0.3866%" height="15" fill="rgb(241,83,37)" fg:x="8" fg:w="16"/><text x="0.4433%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.39%)</title><rect x="0.1933%" y="517" width="0.3866%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="16"/><text x="0.4433%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.39%)</title><rect x="0.1933%" y="501" width="0.3866%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="16"/><text x="0.4433%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 0.39%)</title><rect x="0.1933%" y="485" width="0.3866%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="16"/><text x="0.4433%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 0.39%)</title><rect x="0.1933%" y="469" width="0.3866%" height="15" fill="rgb(238,167,29)" fg:x="8" fg:w="16"/><text x="0.4433%" y="479.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 0.39%)</title><rect x="0.1933%" y="453" width="0.3866%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="16"/><text x="0.4433%" y="463.50"></text></g><g><title>__GI___libc_realloc (16 samples, 0.39%)</title><rect x="0.1933%" y="437" width="0.3866%" height="15" fill="rgb(231,60,39)" fg:x="8" fg:w="16"/><text x="0.4433%" y="447.50"></text></g><g><title>_int_realloc (16 samples, 0.39%)</title><rect x="0.1933%" y="421" width="0.3866%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="16"/><text x="0.4433%" y="431.50"></text></g><g><title>_int_malloc (15 samples, 0.36%)</title><rect x="0.2174%" y="405" width="0.3624%" height="15" fill="rgb(235,93,37)" fg:x="9" fg:w="15"/><text x="0.4674%" y="415.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.07%)</title><rect x="0.5074%" y="389" width="0.0725%" height="15" fill="rgb(213,116,39)" fg:x="21" fg:w="3"/><text x="0.7574%" y="399.50"></text></g><g><title>exc_page_fault (3 samples, 0.07%)</title><rect x="0.5074%" y="373" width="0.0725%" height="15" fill="rgb(222,207,29)" fg:x="21" fg:w="3"/><text x="0.7574%" y="383.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.07%)</title><rect x="0.5074%" y="357" width="0.0725%" height="15" fill="rgb(206,96,30)" fg:x="21" fg:w="3"/><text x="0.7574%" y="367.50"></text></g><g><title>handle_mm_fault (3 samples, 0.07%)</title><rect x="0.5074%" y="341" width="0.0725%" height="15" fill="rgb(218,138,4)" fg:x="21" fg:w="3"/><text x="0.7574%" y="351.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.07%)</title><rect x="0.5074%" y="325" width="0.0725%" height="15" fill="rgb(250,191,14)" fg:x="21" fg:w="3"/><text x="0.7574%" y="335.50"></text></g><g><title>do_anonymous_page (3 samples, 0.07%)</title><rect x="0.5074%" y="309" width="0.0725%" height="15" fill="rgb(239,60,40)" fg:x="21" fg:w="3"/><text x="0.7574%" y="319.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.02%)</title><rect x="0.5557%" y="293" width="0.0242%" height="15" fill="rgb(206,27,48)" fg:x="23" fg:w="1"/><text x="0.8057%" y="303.50"></text></g><g><title>lru_cache_add (1 samples, 0.02%)</title><rect x="0.5557%" y="277" width="0.0242%" height="15" fill="rgb(225,35,8)" fg:x="23" fg:w="1"/><text x="0.8057%" y="287.50"></text></g><g><title>__pagevec_lru_add (1 samples, 0.02%)</title><rect x="0.5557%" y="261" width="0.0242%" height="15" fill="rgb(250,213,24)" fg:x="23" fg:w="1"/><text x="0.8057%" y="271.50"></text></g><g><title>page_mapping (1 samples, 0.02%)</title><rect x="0.5557%" y="245" width="0.0242%" height="15" fill="rgb(247,123,22)" fg:x="23" fg:w="1"/><text x="0.8057%" y="255.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (1 samples, 0.02%)</title><rect x="0.7973%" y="469" width="0.0242%" height="15" fill="rgb(231,138,38)" fg:x="33" fg:w="1"/><text x="1.0473%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="0.8215%" y="469" width="0.0242%" height="15" fill="rgb(231,145,46)" fg:x="34" fg:w="1"/><text x="1.0715%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="0.8215%" y="453" width="0.0242%" height="15" fill="rgb(251,118,11)" fg:x="34" fg:w="1"/><text x="1.0715%" y="463.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="0.8215%" y="437" width="0.0242%" height="15" fill="rgb(217,147,25)" fg:x="34" fg:w="1"/><text x="1.0715%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.02%)</title><rect x="0.8215%" y="421" width="0.0242%" height="15" fill="rgb(247,81,37)" fg:x="34" fg:w="1"/><text x="1.0715%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="0.8456%" y="469" width="0.0242%" height="15" fill="rgb(209,12,38)" fg:x="35" fg:w="1"/><text x="1.0956%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="0.8456%" y="453" width="0.0242%" height="15" fill="rgb(227,1,9)" fg:x="35" fg:w="1"/><text x="1.0956%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.48%)</title><rect x="0.5799%" y="693" width="0.4832%" height="15" fill="rgb(248,47,43)" fg:x="24" fg:w="20"/><text x="0.8299%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (20 samples, 0.48%)</title><rect x="0.5799%" y="677" width="0.4832%" height="15" fill="rgb(221,10,30)" fg:x="24" fg:w="20"/><text x="0.8299%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.48%)</title><rect x="0.5799%" y="661" width="0.4832%" height="15" fill="rgb(210,229,1)" fg:x="24" fg:w="20"/><text x="0.8299%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (20 samples, 0.48%)</title><rect x="0.5799%" y="645" width="0.4832%" height="15" fill="rgb(222,148,37)" fg:x="24" fg:w="20"/><text x="0.8299%" y="655.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (20 samples, 0.48%)</title><rect x="0.5799%" y="629" width="0.4832%" height="15" fill="rgb(234,67,33)" fg:x="24" fg:w="20"/><text x="0.8299%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (20 samples, 0.48%)</title><rect x="0.5799%" y="613" width="0.4832%" height="15" fill="rgb(247,98,35)" fg:x="24" fg:w="20"/><text x="0.8299%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (20 samples, 0.48%)</title><rect x="0.5799%" y="597" width="0.4832%" height="15" fill="rgb(247,138,52)" fg:x="24" fg:w="20"/><text x="0.8299%" y="607.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (20 samples, 0.48%)</title><rect x="0.5799%" y="581" width="0.4832%" height="15" fill="rgb(213,79,30)" fg:x="24" fg:w="20"/><text x="0.8299%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (20 samples, 0.48%)</title><rect x="0.5799%" y="565" width="0.4832%" height="15" fill="rgb(246,177,23)" fg:x="24" fg:w="20"/><text x="0.8299%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (20 samples, 0.48%)</title><rect x="0.5799%" y="549" width="0.4832%" height="15" fill="rgb(230,62,27)" fg:x="24" fg:w="20"/><text x="0.8299%" y="559.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.48%)</title><rect x="0.5799%" y="533" width="0.4832%" height="15" fill="rgb(216,154,8)" fg:x="24" fg:w="20"/><text x="0.8299%" y="543.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (20 samples, 0.48%)</title><rect x="0.5799%" y="517" width="0.4832%" height="15" fill="rgb(244,35,45)" fg:x="24" fg:w="20"/><text x="0.8299%" y="527.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (20 samples, 0.48%)</title><rect x="0.5799%" y="501" width="0.4832%" height="15" fill="rgb(251,115,12)" fg:x="24" fg:w="20"/><text x="0.8299%" y="511.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (20 samples, 0.48%)</title><rect x="0.5799%" y="485" width="0.4832%" height="15" fill="rgb(240,54,50)" fg:x="24" fg:w="20"/><text x="0.8299%" y="495.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (8 samples, 0.19%)</title><rect x="0.8698%" y="469" width="0.1933%" height="15" fill="rgb(233,84,52)" fg:x="36" fg:w="8"/><text x="1.1198%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="1.0631%" y="645" width="0.0242%" height="15" fill="rgb(207,117,47)" fg:x="44" fg:w="1"/><text x="1.3131%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="1.0631%" y="629" width="0.0242%" height="15" fill="rgb(249,43,39)" fg:x="44" fg:w="1"/><text x="1.3131%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.02%)</title><rect x="1.0631%" y="613" width="0.0242%" height="15" fill="rgb(209,38,44)" fg:x="44" fg:w="1"/><text x="1.3131%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="1.0631%" y="597" width="0.0242%" height="15" fill="rgb(236,212,23)" fg:x="44" fg:w="1"/><text x="1.3131%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="1.0631%" y="581" width="0.0242%" height="15" fill="rgb(242,79,21)" fg:x="44" fg:w="1"/><text x="1.3131%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="1.0631%" y="565" width="0.0242%" height="15" fill="rgb(211,96,35)" fg:x="44" fg:w="1"/><text x="1.3131%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="1.0631%" y="549" width="0.0242%" height="15" fill="rgb(253,215,40)" fg:x="44" fg:w="1"/><text x="1.3131%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="1.0631%" y="533" width="0.0242%" height="15" fill="rgb(211,81,21)" fg:x="44" fg:w="1"/><text x="1.3131%" y="543.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.05%)</title><rect x="1.0631%" y="693" width="0.0483%" height="15" fill="rgb(208,190,38)" fg:x="44" fg:w="2"/><text x="1.3131%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.05%)</title><rect x="1.0631%" y="677" width="0.0483%" height="15" fill="rgb(235,213,38)" fg:x="44" fg:w="2"/><text x="1.3131%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="1.0631%" y="661" width="0.0483%" height="15" fill="rgb(237,122,38)" fg:x="44" fg:w="2"/><text x="1.3131%" y="671.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.02%)</title><rect x="1.0872%" y="645" width="0.0242%" height="15" fill="rgb(244,218,35)" fg:x="45" fg:w="1"/><text x="1.3372%" y="655.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (4 samples, 0.10%)</title><rect x="1.1114%" y="693" width="0.0966%" height="15" fill="rgb(240,68,47)" fg:x="46" fg:w="4"/><text x="1.3614%" y="703.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (4 samples, 0.10%)</title><rect x="1.1114%" y="677" width="0.0966%" height="15" fill="rgb(210,16,53)" fg:x="46" fg:w="4"/><text x="1.3614%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.10%)</title><rect x="1.1114%" y="661" width="0.0966%" height="15" fill="rgb(235,124,12)" fg:x="46" fg:w="4"/><text x="1.3614%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.10%)</title><rect x="1.1114%" y="645" width="0.0966%" height="15" fill="rgb(224,169,11)" fg:x="46" fg:w="4"/><text x="1.3614%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.10%)</title><rect x="1.1114%" y="629" width="0.0966%" height="15" fill="rgb(250,166,2)" fg:x="46" fg:w="4"/><text x="1.3614%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4 samples, 0.10%)</title><rect x="1.1114%" y="613" width="0.0966%" height="15" fill="rgb(242,216,29)" fg:x="46" fg:w="4"/><text x="1.3614%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.10%)</title><rect x="1.1114%" y="597" width="0.0966%" height="15" fill="rgb(230,116,27)" fg:x="46" fg:w="4"/><text x="1.3614%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="1.1114%" y="581" width="0.0966%" height="15" fill="rgb(228,99,48)" fg:x="46" fg:w="4"/><text x="1.3614%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="1.1114%" y="565" width="0.0966%" height="15" fill="rgb(253,11,6)" fg:x="46" fg:w="4"/><text x="1.3614%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="1.1114%" y="549" width="0.0966%" height="15" fill="rgb(247,143,39)" fg:x="46" fg:w="4"/><text x="1.3614%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.05%)</title><rect x="1.1597%" y="533" width="0.0483%" height="15" fill="rgb(236,97,10)" fg:x="48" fg:w="2"/><text x="1.4097%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="1.1839%" y="517" width="0.0242%" height="15" fill="rgb(233,208,19)" fg:x="49" fg:w="1"/><text x="1.4339%" y="527.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="1.2080%" y="645" width="0.0242%" height="15" fill="rgb(216,164,2)" fg:x="50" fg:w="1"/><text x="1.4580%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="1.2080%" y="629" width="0.0242%" height="15" fill="rgb(220,129,5)" fg:x="50" fg:w="1"/><text x="1.4580%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="1.2080%" y="613" width="0.0242%" height="15" fill="rgb(242,17,10)" fg:x="50" fg:w="1"/><text x="1.4580%" y="623.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="1.2080%" y="597" width="0.0242%" height="15" fill="rgb(242,107,0)" fg:x="50" fg:w="1"/><text x="1.4580%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="1.2080%" y="581" width="0.0242%" height="15" fill="rgb(251,28,31)" fg:x="50" fg:w="1"/><text x="1.4580%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="1.2080%" y="565" width="0.0242%" height="15" fill="rgb(233,223,10)" fg:x="50" fg:w="1"/><text x="1.4580%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="1.2080%" y="549" width="0.0242%" height="15" fill="rgb(215,21,27)" fg:x="50" fg:w="1"/><text x="1.4580%" y="559.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="1.2080%" y="533" width="0.0242%" height="15" fill="rgb(232,23,21)" fg:x="50" fg:w="1"/><text x="1.4580%" y="543.50"></text></g><g><title>__libc_start_main (46 samples, 1.11%)</title><rect x="0.1933%" y="1205" width="1.1114%" height="15" fill="rgb(244,5,23)" fg:x="8" fg:w="46"/><text x="0.4433%" y="1215.50"></text></g><g><title>main (46 samples, 1.11%)</title><rect x="0.1933%" y="1189" width="1.1114%" height="15" fill="rgb(226,81,46)" fg:x="8" fg:w="46"/><text x="0.4433%" y="1199.50"></text></g><g><title>std::rt::lang_start_internal (46 samples, 1.11%)</title><rect x="0.1933%" y="1173" width="1.1114%" height="15" fill="rgb(247,70,30)" fg:x="8" fg:w="46"/><text x="0.4433%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (46 samples, 1.11%)</title><rect x="0.1933%" y="1157" width="1.1114%" height="15" fill="rgb(212,68,19)" fg:x="8" fg:w="46"/><text x="0.4433%" y="1167.50"></text></g><g><title>std::panicking::try (46 samples, 1.11%)</title><rect x="0.1933%" y="1141" width="1.1114%" height="15" fill="rgb(240,187,13)" fg:x="8" fg:w="46"/><text x="0.4433%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (46 samples, 1.11%)</title><rect x="0.1933%" y="1125" width="1.1114%" height="15" fill="rgb(223,113,26)" fg:x="8" fg:w="46"/><text x="0.4433%" y="1135.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (46 samples, 1.11%)</title><rect x="0.1933%" y="1109" width="1.1114%" height="15" fill="rgb(206,192,2)" fg:x="8" fg:w="46"/><text x="0.4433%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (46 samples, 1.11%)</title><rect x="0.1933%" y="1093" width="1.1114%" height="15" fill="rgb(241,108,4)" fg:x="8" fg:w="46"/><text x="0.4433%" y="1103.50"></text></g><g><title>std::panicking::try (46 samples, 1.11%)</title><rect x="0.1933%" y="1077" width="1.1114%" height="15" fill="rgb(247,173,49)" fg:x="8" fg:w="46"/><text x="0.4433%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (46 samples, 1.11%)</title><rect x="0.1933%" y="1061" width="1.1114%" height="15" fill="rgb(224,114,35)" fg:x="8" fg:w="46"/><text x="0.4433%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (46 samples, 1.11%)</title><rect x="0.1933%" y="1045" width="1.1114%" height="15" fill="rgb(245,159,27)" fg:x="8" fg:w="46"/><text x="0.4433%" y="1055.50"></text></g><g><title>std::rt::lang_start::{{closure}} (46 samples, 1.11%)</title><rect x="0.1933%" y="1029" width="1.1114%" height="15" fill="rgb(245,172,44)" fg:x="8" fg:w="46"/><text x="0.4433%" y="1039.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (46 samples, 1.11%)</title><rect x="0.1933%" y="1013" width="1.1114%" height="15" fill="rgb(236,23,11)" fg:x="8" fg:w="46"/><text x="0.4433%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (46 samples, 1.11%)</title><rect x="0.1933%" y="997" width="1.1114%" height="15" fill="rgb(205,117,38)" fg:x="8" fg:w="46"/><text x="0.4433%" y="1007.50"></text></g><g><title>y2021::main (46 samples, 1.11%)</title><rect x="0.1933%" y="981" width="1.1114%" height="15" fill="rgb(237,72,25)" fg:x="8" fg:w="46"/><text x="0.4433%" y="991.50"></text></g><g><title>y2021::d12::main2::run (46 samples, 1.11%)</title><rect x="0.1933%" y="965" width="1.1114%" height="15" fill="rgb(244,70,9)" fg:x="8" fg:w="46"/><text x="0.4433%" y="975.50"></text></g><g><title>y2021::d12::main2::p02 (46 samples, 1.11%)</title><rect x="0.1933%" y="949" width="1.1114%" height="15" fill="rgb(217,125,39)" fg:x="8" fg:w="46"/><text x="0.4433%" y="959.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.11%)</title><rect x="0.1933%" y="933" width="1.1114%" height="15" fill="rgb(235,36,10)" fg:x="8" fg:w="46"/><text x="0.4433%" y="943.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.11%)</title><rect x="0.1933%" y="917" width="1.1114%" height="15" fill="rgb(251,123,47)" fg:x="8" fg:w="46"/><text x="0.4433%" y="927.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.11%)</title><rect x="0.1933%" y="901" width="1.1114%" height="15" fill="rgb(221,13,13)" fg:x="8" fg:w="46"/><text x="0.4433%" y="911.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.11%)</title><rect x="0.1933%" y="885" width="1.1114%" height="15" fill="rgb(238,131,9)" fg:x="8" fg:w="46"/><text x="0.4433%" y="895.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.11%)</title><rect x="0.1933%" y="869" width="1.1114%" height="15" fill="rgb(211,50,8)" fg:x="8" fg:w="46"/><text x="0.4433%" y="879.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.11%)</title><rect x="0.1933%" y="853" width="1.1114%" height="15" fill="rgb(245,182,24)" fg:x="8" fg:w="46"/><text x="0.4433%" y="863.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.11%)</title><rect x="0.1933%" y="837" width="1.1114%" height="15" fill="rgb(242,14,37)" fg:x="8" fg:w="46"/><text x="0.4433%" y="847.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.11%)</title><rect x="0.1933%" y="821" width="1.1114%" height="15" fill="rgb(246,228,12)" fg:x="8" fg:w="46"/><text x="0.4433%" y="831.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.11%)</title><rect x="0.1933%" y="805" width="1.1114%" height="15" fill="rgb(213,55,15)" fg:x="8" fg:w="46"/><text x="0.4433%" y="815.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.11%)</title><rect x="0.1933%" y="789" width="1.1114%" height="15" fill="rgb(209,9,3)" fg:x="8" fg:w="46"/><text x="0.4433%" y="799.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.11%)</title><rect x="0.1933%" y="773" width="1.1114%" height="15" fill="rgb(230,59,30)" fg:x="8" fg:w="46"/><text x="0.4433%" y="783.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.11%)</title><rect x="0.1933%" y="757" width="1.1114%" height="15" fill="rgb(209,121,21)" fg:x="8" fg:w="46"/><text x="0.4433%" y="767.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.11%)</title><rect x="0.1933%" y="741" width="1.1114%" height="15" fill="rgb(220,109,13)" fg:x="8" fg:w="46"/><text x="0.4433%" y="751.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.11%)</title><rect x="0.1933%" y="725" width="1.1114%" height="15" fill="rgb(232,18,1)" fg:x="8" fg:w="46"/><text x="0.4433%" y="735.50"></text></g><g><title>y2021::d12::main2::traverse (30 samples, 0.72%)</title><rect x="0.5799%" y="709" width="0.7248%" height="15" fill="rgb(215,41,42)" fg:x="24" fg:w="30"/><text x="0.8299%" y="719.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (4 samples, 0.10%)</title><rect x="1.2080%" y="693" width="0.0966%" height="15" fill="rgb(224,123,36)" fg:x="50" fg:w="4"/><text x="1.4580%" y="703.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (4 samples, 0.10%)</title><rect x="1.2080%" y="677" width="0.0966%" height="15" fill="rgb(240,125,3)" fg:x="50" fg:w="4"/><text x="1.4580%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.10%)</title><rect x="1.2080%" y="661" width="0.0966%" height="15" fill="rgb(205,98,50)" fg:x="50" fg:w="4"/><text x="1.4580%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.07%)</title><rect x="1.2322%" y="645" width="0.0725%" height="15" fill="rgb(205,185,37)" fg:x="51" fg:w="3"/><text x="1.4822%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="1.2805%" y="629" width="0.0242%" height="15" fill="rgb(238,207,15)" fg:x="53" fg:w="1"/><text x="1.5305%" y="639.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.02%)</title><rect x="1.3047%" y="1205" width="0.0242%" height="15" fill="rgb(213,199,42)" fg:x="54" fg:w="1"/><text x="1.5547%" y="1215.50"></text></g><g><title>[libgcc_s.so.1] (1 samples, 0.02%)</title><rect x="1.3047%" y="1189" width="0.0242%" height="15" fill="rgb(235,201,11)" fg:x="54" fg:w="1"/><text x="1.5547%" y="1199.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="1.3047%" y="1173" width="0.0242%" height="15" fill="rgb(207,46,11)" fg:x="54" fg:w="1"/><text x="1.5547%" y="1183.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="1.3047%" y="1157" width="0.0242%" height="15" fill="rgb(241,35,35)" fg:x="54" fg:w="1"/><text x="1.5547%" y="1167.50"></text></g><g><title>irqentry_exit (1 samples, 0.02%)</title><rect x="1.3047%" y="1141" width="0.0242%" height="15" fill="rgb(243,32,47)" fg:x="54" fg:w="1"/><text x="1.5547%" y="1151.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="1.3047%" y="1125" width="0.0242%" height="15" fill="rgb(247,202,23)" fg:x="54" fg:w="1"/><text x="1.5547%" y="1135.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="1.3047%" y="1109" width="0.0242%" height="15" fill="rgb(219,102,11)" fg:x="54" fg:w="1"/><text x="1.5547%" y="1119.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="1.3530%" y="453" width="0.0242%" height="15" fill="rgb(243,110,44)" fg:x="56" fg:w="1"/><text x="1.6030%" y="463.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="1.3530%" y="437" width="0.0242%" height="15" fill="rgb(222,74,54)" fg:x="56" fg:w="1"/><text x="1.6030%" y="447.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect x="1.3530%" y="421" width="0.0242%" height="15" fill="rgb(216,99,12)" fg:x="56" fg:w="1"/><text x="1.6030%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.07%)</title><rect x="1.3530%" y="501" width="0.0725%" height="15" fill="rgb(226,22,26)" fg:x="56" fg:w="3"/><text x="1.6030%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.07%)</title><rect x="1.3530%" y="485" width="0.0725%" height="15" fill="rgb(217,163,10)" fg:x="56" fg:w="3"/><text x="1.6030%" y="495.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.07%)</title><rect x="1.3530%" y="469" width="0.0725%" height="15" fill="rgb(213,25,53)" fg:x="56" fg:w="3"/><text x="1.6030%" y="479.50"></text></g><g><title>__rdl_realloc (2 samples, 0.05%)</title><rect x="1.3771%" y="453" width="0.0483%" height="15" fill="rgb(252,105,26)" fg:x="57" fg:w="2"/><text x="1.6271%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.02%)</title><rect x="1.4013%" y="437" width="0.0242%" height="15" fill="rgb(220,39,43)" fg:x="58" fg:w="1"/><text x="1.6513%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="1.4255%" y="501" width="0.0242%" height="15" fill="rgb(229,68,48)" fg:x="59" fg:w="1"/><text x="1.6755%" y="511.50"></text></g><g><title>alloc::fmt::format (6 samples, 0.14%)</title><rect x="1.3288%" y="725" width="0.1450%" height="15" fill="rgb(252,8,32)" fg:x="55" fg:w="6"/><text x="1.5788%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.14%)</title><rect x="1.3288%" y="709" width="0.1450%" height="15" fill="rgb(223,20,43)" fg:x="55" fg:w="6"/><text x="1.5788%" y="719.50"></text></g><g><title>core::fmt::write (6 samples, 0.14%)</title><rect x="1.3288%" y="693" width="0.1450%" height="15" fill="rgb(229,81,49)" fg:x="55" fg:w="6"/><text x="1.5788%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.14%)</title><rect x="1.3288%" y="677" width="0.1450%" height="15" fill="rgb(236,28,36)" fg:x="55" fg:w="6"/><text x="1.5788%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.14%)</title><rect x="1.3288%" y="661" width="0.1450%" height="15" fill="rgb(249,185,26)" fg:x="55" fg:w="6"/><text x="1.5788%" y="671.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.14%)</title><rect x="1.3288%" y="645" width="0.1450%" height="15" fill="rgb(249,174,33)" fg:x="55" fg:w="6"/><text x="1.5788%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.14%)</title><rect x="1.3288%" y="629" width="0.1450%" height="15" fill="rgb(233,201,37)" fg:x="55" fg:w="6"/><text x="1.5788%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.14%)</title><rect x="1.3288%" y="613" width="0.1450%" height="15" fill="rgb(221,78,26)" fg:x="55" fg:w="6"/><text x="1.5788%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.14%)</title><rect x="1.3288%" y="597" width="0.1450%" height="15" fill="rgb(250,127,30)" fg:x="55" fg:w="6"/><text x="1.5788%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.14%)</title><rect x="1.3288%" y="581" width="0.1450%" height="15" fill="rgb(230,49,44)" fg:x="55" fg:w="6"/><text x="1.5788%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.14%)</title><rect x="1.3288%" y="565" width="0.1450%" height="15" fill="rgb(229,67,23)" fg:x="55" fg:w="6"/><text x="1.5788%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.14%)</title><rect x="1.3288%" y="549" width="0.1450%" height="15" fill="rgb(249,83,47)" fg:x="55" fg:w="6"/><text x="1.5788%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.14%)</title><rect x="1.3288%" y="533" width="0.1450%" height="15" fill="rgb(215,43,3)" fg:x="55" fg:w="6"/><text x="1.5788%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.14%)</title><rect x="1.3288%" y="517" width="0.1450%" height="15" fill="rgb(238,154,13)" fg:x="55" fg:w="6"/><text x="1.5788%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="1.4496%" y="501" width="0.0242%" height="15" fill="rgb(219,56,2)" fg:x="60" fg:w="1"/><text x="1.6996%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (5 samples, 0.12%)</title><rect x="1.4738%" y="581" width="0.1208%" height="15" fill="rgb(233,0,4)" fg:x="61" fg:w="5"/><text x="1.7238%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.12%)</title><rect x="1.4738%" y="565" width="0.1208%" height="15" fill="rgb(235,30,7)" fg:x="61" fg:w="5"/><text x="1.7238%" y="575.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="1.4738%" y="549" width="0.1208%" height="15" fill="rgb(250,79,13)" fg:x="61" fg:w="5"/><text x="1.7238%" y="559.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (5 samples, 0.12%)</title><rect x="1.4738%" y="533" width="0.1208%" height="15" fill="rgb(211,146,34)" fg:x="61" fg:w="5"/><text x="1.7238%" y="543.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (5 samples, 0.12%)</title><rect x="1.4738%" y="517" width="0.1208%" height="15" fill="rgb(228,22,38)" fg:x="61" fg:w="5"/><text x="1.7238%" y="527.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (4 samples, 0.10%)</title><rect x="1.4979%" y="501" width="0.0966%" height="15" fill="rgb(235,168,5)" fg:x="62" fg:w="4"/><text x="1.7479%" y="511.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.02%)</title><rect x="1.5704%" y="485" width="0.0242%" height="15" fill="rgb(221,155,16)" fg:x="65" fg:w="1"/><text x="1.8204%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.17%)</title><rect x="1.4738%" y="709" width="0.1691%" height="15" fill="rgb(215,215,53)" fg:x="61" fg:w="7"/><text x="1.7238%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (7 samples, 0.17%)</title><rect x="1.4738%" y="693" width="0.1691%" height="15" fill="rgb(223,4,10)" fg:x="61" fg:w="7"/><text x="1.7238%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.17%)</title><rect x="1.4738%" y="677" width="0.1691%" height="15" fill="rgb(234,103,6)" fg:x="61" fg:w="7"/><text x="1.7238%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.17%)</title><rect x="1.4738%" y="661" width="0.1691%" height="15" fill="rgb(227,97,0)" fg:x="61" fg:w="7"/><text x="1.7238%" y="671.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (7 samples, 0.17%)</title><rect x="1.4738%" y="645" width="0.1691%" height="15" fill="rgb(234,150,53)" fg:x="61" fg:w="7"/><text x="1.7238%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (7 samples, 0.17%)</title><rect x="1.4738%" y="629" width="0.1691%" height="15" fill="rgb(228,201,54)" fg:x="61" fg:w="7"/><text x="1.7238%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.17%)</title><rect x="1.4738%" y="613" width="0.1691%" height="15" fill="rgb(222,22,37)" fg:x="61" fg:w="7"/><text x="1.7238%" y="623.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (7 samples, 0.17%)</title><rect x="1.4738%" y="597" width="0.1691%" height="15" fill="rgb(237,53,32)" fg:x="61" fg:w="7"/><text x="1.7238%" y="607.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (2 samples, 0.05%)</title><rect x="1.5946%" y="581" width="0.0483%" height="15" fill="rgb(233,25,53)" fg:x="66" fg:w="2"/><text x="1.8446%" y="591.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.05%)</title><rect x="1.5946%" y="565" width="0.0483%" height="15" fill="rgb(210,40,34)" fg:x="66" fg:w="2"/><text x="1.8446%" y="575.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.05%)</title><rect x="1.5946%" y="549" width="0.0483%" height="15" fill="rgb(241,220,44)" fg:x="66" fg:w="2"/><text x="1.8446%" y="559.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.05%)</title><rect x="1.5946%" y="533" width="0.0483%" height="15" fill="rgb(235,28,35)" fg:x="66" fg:w="2"/><text x="1.8446%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="1.6429%" y="709" width="0.0242%" height="15" fill="rgb(210,56,17)" fg:x="68" fg:w="1"/><text x="1.8929%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="1.6429%" y="693" width="0.0242%" height="15" fill="rgb(224,130,29)" fg:x="68" fg:w="1"/><text x="1.8929%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="1.6429%" y="677" width="0.0242%" height="15" fill="rgb(235,212,8)" fg:x="68" fg:w="1"/><text x="1.8929%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="1.6429%" y="661" width="0.0242%" height="15" fill="rgb(223,33,50)" fg:x="68" fg:w="1"/><text x="1.8929%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="1.6429%" y="645" width="0.0242%" height="15" fill="rgb(219,149,13)" fg:x="68" fg:w="1"/><text x="1.8929%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="1.6429%" y="629" width="0.0242%" height="15" fill="rgb(250,156,29)" fg:x="68" fg:w="1"/><text x="1.8929%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="1.6429%" y="613" width="0.0242%" height="15" fill="rgb(216,193,19)" fg:x="68" fg:w="1"/><text x="1.8929%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="1.6429%" y="597" width="0.0242%" height="15" fill="rgb(216,135,14)" fg:x="68" fg:w="1"/><text x="1.8929%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="1.6429%" y="581" width="0.0242%" height="15" fill="rgb(241,47,5)" fg:x="68" fg:w="1"/><text x="1.8929%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="1.6429%" y="565" width="0.0242%" height="15" fill="rgb(233,42,35)" fg:x="68" fg:w="1"/><text x="1.8929%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="1.6429%" y="549" width="0.0242%" height="15" fill="rgb(231,13,6)" fg:x="68" fg:w="1"/><text x="1.8929%" y="559.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="1.6429%" y="533" width="0.0242%" height="15" fill="rgb(207,181,40)" fg:x="68" fg:w="1"/><text x="1.8929%" y="543.50"></text></g><g><title>std::rt::lang_start_internal (15 samples, 0.36%)</title><rect x="1.3288%" y="1205" width="0.3624%" height="15" fill="rgb(254,173,49)" fg:x="55" fg:w="15"/><text x="1.5788%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.36%)</title><rect x="1.3288%" y="1189" width="0.3624%" height="15" fill="rgb(221,1,38)" fg:x="55" fg:w="15"/><text x="1.5788%" y="1199.50"></text></g><g><title>std::panicking::try (15 samples, 0.36%)</title><rect x="1.3288%" y="1173" width="0.3624%" height="15" fill="rgb(206,124,46)" fg:x="55" fg:w="15"/><text x="1.5788%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.36%)</title><rect x="1.3288%" y="1157" width="0.3624%" height="15" fill="rgb(249,21,11)" fg:x="55" fg:w="15"/><text x="1.5788%" y="1167.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (15 samples, 0.36%)</title><rect x="1.3288%" y="1141" width="0.3624%" height="15" fill="rgb(222,201,40)" fg:x="55" fg:w="15"/><text x="1.5788%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.36%)</title><rect x="1.3288%" y="1125" width="0.3624%" height="15" fill="rgb(235,61,29)" fg:x="55" fg:w="15"/><text x="1.5788%" y="1135.50"></text></g><g><title>std::panicking::try (15 samples, 0.36%)</title><rect x="1.3288%" y="1109" width="0.3624%" height="15" fill="rgb(219,207,3)" fg:x="55" fg:w="15"/><text x="1.5788%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.36%)</title><rect x="1.3288%" y="1093" width="0.3624%" height="15" fill="rgb(222,56,46)" fg:x="55" fg:w="15"/><text x="1.5788%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (15 samples, 0.36%)</title><rect x="1.3288%" y="1077" width="0.3624%" height="15" fill="rgb(239,76,54)" fg:x="55" fg:w="15"/><text x="1.5788%" y="1087.50"></text></g><g><title>std::rt::lang_start::{{closure}} (15 samples, 0.36%)</title><rect x="1.3288%" y="1061" width="0.3624%" height="15" fill="rgb(231,124,27)" fg:x="55" fg:w="15"/><text x="1.5788%" y="1071.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (15 samples, 0.36%)</title><rect x="1.3288%" y="1045" width="0.3624%" height="15" fill="rgb(249,195,6)" fg:x="55" fg:w="15"/><text x="1.5788%" y="1055.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.36%)</title><rect x="1.3288%" y="1029" width="0.3624%" height="15" fill="rgb(237,174,47)" fg:x="55" fg:w="15"/><text x="1.5788%" y="1039.50"></text></g><g><title>y2021::main (15 samples, 0.36%)</title><rect x="1.3288%" y="1013" width="0.3624%" height="15" fill="rgb(206,201,31)" fg:x="55" fg:w="15"/><text x="1.5788%" y="1023.50"></text></g><g><title>y2021::d12::main2::run (15 samples, 0.36%)</title><rect x="1.3288%" y="997" width="0.3624%" height="15" fill="rgb(231,57,52)" fg:x="55" fg:w="15"/><text x="1.5788%" y="1007.50"></text></g><g><title>y2021::d12::main2::p02 (15 samples, 0.36%)</title><rect x="1.3288%" y="981" width="0.3624%" height="15" fill="rgb(248,177,22)" fg:x="55" fg:w="15"/><text x="1.5788%" y="991.50"></text></g><g><title>y2021::d12::main2::traverse (15 samples, 0.36%)</title><rect x="1.3288%" y="965" width="0.3624%" height="15" fill="rgb(215,211,37)" fg:x="55" fg:w="15"/><text x="1.5788%" y="975.50"></text></g><g><title>y2021::d12::main2::traverse (15 samples, 0.36%)</title><rect x="1.3288%" y="949" width="0.3624%" height="15" fill="rgb(241,128,51)" fg:x="55" fg:w="15"/><text x="1.5788%" y="959.50"></text></g><g><title>y2021::d12::main2::traverse (15 samples, 0.36%)</title><rect x="1.3288%" y="933" width="0.3624%" height="15" fill="rgb(227,165,31)" fg:x="55" fg:w="15"/><text x="1.5788%" y="943.50"></text></g><g><title>y2021::d12::main2::traverse (15 samples, 0.36%)</title><rect x="1.3288%" y="917" width="0.3624%" height="15" fill="rgb(228,167,24)" fg:x="55" fg:w="15"/><text x="1.5788%" y="927.50"></text></g><g><title>y2021::d12::main2::traverse (15 samples, 0.36%)</title><rect x="1.3288%" y="901" width="0.3624%" height="15" fill="rgb(228,143,12)" fg:x="55" fg:w="15"/><text x="1.5788%" y="911.50"></text></g><g><title>y2021::d12::main2::traverse (15 samples, 0.36%)</title><rect x="1.3288%" y="885" width="0.3624%" height="15" fill="rgb(249,149,8)" fg:x="55" fg:w="15"/><text x="1.5788%" y="895.50"></text></g><g><title>y2021::d12::main2::traverse (15 samples, 0.36%)</title><rect x="1.3288%" y="869" width="0.3624%" height="15" fill="rgb(243,35,44)" fg:x="55" fg:w="15"/><text x="1.5788%" y="879.50"></text></g><g><title>y2021::d12::main2::traverse (15 samples, 0.36%)</title><rect x="1.3288%" y="853" width="0.3624%" height="15" fill="rgb(246,89,9)" fg:x="55" fg:w="15"/><text x="1.5788%" y="863.50"></text></g><g><title>y2021::d12::main2::traverse (15 samples, 0.36%)</title><rect x="1.3288%" y="837" width="0.3624%" height="15" fill="rgb(233,213,13)" fg:x="55" fg:w="15"/><text x="1.5788%" y="847.50"></text></g><g><title>y2021::d12::main2::traverse (15 samples, 0.36%)</title><rect x="1.3288%" y="821" width="0.3624%" height="15" fill="rgb(233,141,41)" fg:x="55" fg:w="15"/><text x="1.5788%" y="831.50"></text></g><g><title>y2021::d12::main2::traverse (15 samples, 0.36%)</title><rect x="1.3288%" y="805" width="0.3624%" height="15" fill="rgb(239,167,4)" fg:x="55" fg:w="15"/><text x="1.5788%" y="815.50"></text></g><g><title>y2021::d12::main2::traverse (15 samples, 0.36%)</title><rect x="1.3288%" y="789" width="0.3624%" height="15" fill="rgb(209,217,16)" fg:x="55" fg:w="15"/><text x="1.5788%" y="799.50"></text></g><g><title>y2021::d12::main2::traverse (15 samples, 0.36%)</title><rect x="1.3288%" y="773" width="0.3624%" height="15" fill="rgb(219,88,35)" fg:x="55" fg:w="15"/><text x="1.5788%" y="783.50"></text></g><g><title>y2021::d12::main2::traverse (15 samples, 0.36%)</title><rect x="1.3288%" y="757" width="0.3624%" height="15" fill="rgb(220,193,23)" fg:x="55" fg:w="15"/><text x="1.5788%" y="767.50"></text></g><g><title>y2021::d12::main2::traverse (15 samples, 0.36%)</title><rect x="1.3288%" y="741" width="0.3624%" height="15" fill="rgb(230,90,52)" fg:x="55" fg:w="15"/><text x="1.5788%" y="751.50"></text></g><g><title>y2021::d12::main2::traverse (9 samples, 0.22%)</title><rect x="1.4738%" y="725" width="0.2174%" height="15" fill="rgb(252,106,19)" fg:x="61" fg:w="9"/><text x="1.7238%" y="735.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="1.6671%" y="709" width="0.0242%" height="15" fill="rgb(206,74,20)" fg:x="69" fg:w="1"/><text x="1.9171%" y="719.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="1.6671%" y="693" width="0.0242%" height="15" fill="rgb(230,138,44)" fg:x="69" fg:w="1"/><text x="1.9171%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="1.6671%" y="677" width="0.0242%" height="15" fill="rgb(235,182,43)" fg:x="69" fg:w="1"/><text x="1.9171%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="1.6671%" y="661" width="0.0242%" height="15" fill="rgb(242,16,51)" fg:x="69" fg:w="1"/><text x="1.9171%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="1.6671%" y="645" width="0.0242%" height="15" fill="rgb(248,9,4)" fg:x="69" fg:w="1"/><text x="1.9171%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="1.6671%" y="629" width="0.0242%" height="15" fill="rgb(210,31,22)" fg:x="69" fg:w="1"/><text x="1.9171%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="1.6671%" y="613" width="0.0242%" height="15" fill="rgb(239,54,39)" fg:x="69" fg:w="1"/><text x="1.9171%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="1.6671%" y="597" width="0.0242%" height="15" fill="rgb(230,99,41)" fg:x="69" fg:w="1"/><text x="1.9171%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="1.6671%" y="581" width="0.0242%" height="15" fill="rgb(253,106,12)" fg:x="69" fg:w="1"/><text x="1.9171%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="1.6671%" y="565" width="0.0242%" height="15" fill="rgb(213,46,41)" fg:x="69" fg:w="1"/><text x="1.9171%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="1.6671%" y="549" width="0.0242%" height="15" fill="rgb(215,133,35)" fg:x="69" fg:w="1"/><text x="1.9171%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="1.6671%" y="533" width="0.0242%" height="15" fill="rgb(213,28,5)" fg:x="69" fg:w="1"/><text x="1.9171%" y="543.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.02%)</title><rect x="1.6912%" y="917" width="0.0242%" height="15" fill="rgb(215,77,49)" fg:x="70" fg:w="1"/><text x="1.9412%" y="927.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.02%)</title><rect x="1.6912%" y="901" width="0.0242%" height="15" fill="rgb(248,100,22)" fg:x="70" fg:w="1"/><text x="1.9412%" y="911.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="1.6912%" y="885" width="0.0242%" height="15" fill="rgb(208,67,9)" fg:x="70" fg:w="1"/><text x="1.9412%" y="895.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="1.6912%" y="869" width="0.0242%" height="15" fill="rgb(219,133,21)" fg:x="70" fg:w="1"/><text x="1.9412%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="1.6912%" y="853" width="0.0242%" height="15" fill="rgb(246,46,29)" fg:x="70" fg:w="1"/><text x="1.9412%" y="863.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.02%)</title><rect x="1.6912%" y="837" width="0.0242%" height="15" fill="rgb(246,185,52)" fg:x="70" fg:w="1"/><text x="1.9412%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="1.6912%" y="821" width="0.0242%" height="15" fill="rgb(252,136,11)" fg:x="70" fg:w="1"/><text x="1.9412%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="1.6912%" y="805" width="0.0242%" height="15" fill="rgb(219,138,53)" fg:x="70" fg:w="1"/><text x="1.9412%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="1.6912%" y="789" width="0.0242%" height="15" fill="rgb(211,51,23)" fg:x="70" fg:w="1"/><text x="1.9412%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.6912%" y="773" width="0.0242%" height="15" fill="rgb(247,221,28)" fg:x="70" fg:w="1"/><text x="1.9412%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.6912%" y="757" width="0.0242%" height="15" fill="rgb(251,222,45)" fg:x="70" fg:w="1"/><text x="1.9412%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="1.6912%" y="741" width="0.0242%" height="15" fill="rgb(217,162,53)" fg:x="70" fg:w="1"/><text x="1.9412%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="1.6912%" y="725" width="0.0242%" height="15" fill="rgb(229,93,14)" fg:x="70" fg:w="1"/><text x="1.9412%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="1.6912%" y="709" width="0.0242%" height="15" fill="rgb(209,67,49)" fg:x="70" fg:w="1"/><text x="1.9412%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="1.6912%" y="693" width="0.0242%" height="15" fill="rgb(213,87,29)" fg:x="70" fg:w="1"/><text x="1.9412%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="1.6912%" y="677" width="0.0242%" height="15" fill="rgb(205,151,52)" fg:x="70" fg:w="1"/><text x="1.9412%" y="687.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="1.6912%" y="661" width="0.0242%" height="15" fill="rgb(253,215,39)" fg:x="70" fg:w="1"/><text x="1.9412%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="1.6912%" y="645" width="0.0242%" height="15" fill="rgb(221,220,41)" fg:x="70" fg:w="1"/><text x="1.9412%" y="655.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="1.6912%" y="629" width="0.0242%" height="15" fill="rgb(218,133,21)" fg:x="70" fg:w="1"/><text x="1.9412%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="1.6912%" y="613" width="0.0242%" height="15" fill="rgb(221,193,43)" fg:x="70" fg:w="1"/><text x="1.9412%" y="623.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="1.6912%" y="597" width="0.0242%" height="15" fill="rgb(240,128,52)" fg:x="70" fg:w="1"/><text x="1.9412%" y="607.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="1.6912%" y="581" width="0.0242%" height="15" fill="rgb(253,114,12)" fg:x="70" fg:w="1"/><text x="1.9412%" y="591.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="1.6912%" y="565" width="0.0242%" height="15" fill="rgb(215,223,47)" fg:x="70" fg:w="1"/><text x="1.9412%" y="575.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1.6912%" y="549" width="0.0242%" height="15" fill="rgb(248,225,23)" fg:x="70" fg:w="1"/><text x="1.9412%" y="559.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1.6912%" y="533" width="0.0242%" height="15" fill="rgb(250,108,0)" fg:x="70" fg:w="1"/><text x="1.9412%" y="543.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="1.6912%" y="517" width="0.0242%" height="15" fill="rgb(228,208,7)" fg:x="70" fg:w="1"/><text x="1.9412%" y="527.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="1.6912%" y="501" width="0.0242%" height="15" fill="rgb(244,45,10)" fg:x="70" fg:w="1"/><text x="1.9412%" y="511.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="1.6912%" y="485" width="0.0242%" height="15" fill="rgb(207,125,25)" fg:x="70" fg:w="1"/><text x="1.9412%" y="495.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="1.6912%" y="469" width="0.0242%" height="15" fill="rgb(210,195,18)" fg:x="70" fg:w="1"/><text x="1.9412%" y="479.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="1.6912%" y="453" width="0.0242%" height="15" fill="rgb(249,80,12)" fg:x="70" fg:w="1"/><text x="1.9412%" y="463.50"></text></g><g><title>[unknown] (65 samples, 1.57%)</title><rect x="0.1933%" y="1221" width="1.5704%" height="15" fill="rgb(221,65,9)" fg:x="8" fg:w="65"/><text x="0.4433%" y="1231.50"></text></g><g><title>y2021::main (3 samples, 0.07%)</title><rect x="1.6912%" y="1205" width="0.0725%" height="15" fill="rgb(235,49,36)" fg:x="70" fg:w="3"/><text x="1.9412%" y="1215.50"></text></g><g><title>y2021::d12::main2::run (3 samples, 0.07%)</title><rect x="1.6912%" y="1189" width="0.0725%" height="15" fill="rgb(225,32,20)" fg:x="70" fg:w="3"/><text x="1.9412%" y="1199.50"></text></g><g><title>y2021::d12::main2::p02 (3 samples, 0.07%)</title><rect x="1.6912%" y="1173" width="0.0725%" height="15" fill="rgb(215,141,46)" fg:x="70" fg:w="3"/><text x="1.9412%" y="1183.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="1.6912%" y="1157" width="0.0725%" height="15" fill="rgb(250,160,47)" fg:x="70" fg:w="3"/><text x="1.9412%" y="1167.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="1.6912%" y="1141" width="0.0725%" height="15" fill="rgb(216,222,40)" fg:x="70" fg:w="3"/><text x="1.9412%" y="1151.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="1.6912%" y="1125" width="0.0725%" height="15" fill="rgb(234,217,39)" fg:x="70" fg:w="3"/><text x="1.9412%" y="1135.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="1.6912%" y="1109" width="0.0725%" height="15" fill="rgb(207,178,40)" fg:x="70" fg:w="3"/><text x="1.9412%" y="1119.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="1.6912%" y="1093" width="0.0725%" height="15" fill="rgb(221,136,13)" fg:x="70" fg:w="3"/><text x="1.9412%" y="1103.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="1.6912%" y="1077" width="0.0725%" height="15" fill="rgb(249,199,10)" fg:x="70" fg:w="3"/><text x="1.9412%" y="1087.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="1.6912%" y="1061" width="0.0725%" height="15" fill="rgb(249,222,13)" fg:x="70" fg:w="3"/><text x="1.9412%" y="1071.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="1.6912%" y="1045" width="0.0725%" height="15" fill="rgb(244,185,38)" fg:x="70" fg:w="3"/><text x="1.9412%" y="1055.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="1.6912%" y="1029" width="0.0725%" height="15" fill="rgb(236,202,9)" fg:x="70" fg:w="3"/><text x="1.9412%" y="1039.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="1.6912%" y="1013" width="0.0725%" height="15" fill="rgb(250,229,37)" fg:x="70" fg:w="3"/><text x="1.9412%" y="1023.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="1.6912%" y="997" width="0.0725%" height="15" fill="rgb(206,174,23)" fg:x="70" fg:w="3"/><text x="1.9412%" y="1007.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="1.6912%" y="981" width="0.0725%" height="15" fill="rgb(211,33,43)" fg:x="70" fg:w="3"/><text x="1.9412%" y="991.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="1.6912%" y="965" width="0.0725%" height="15" fill="rgb(245,58,50)" fg:x="70" fg:w="3"/><text x="1.9412%" y="975.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="1.6912%" y="949" width="0.0725%" height="15" fill="rgb(244,68,36)" fg:x="70" fg:w="3"/><text x="1.9412%" y="959.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="1.6912%" y="933" width="0.0725%" height="15" fill="rgb(232,229,15)" fg:x="70" fg:w="3"/><text x="1.9412%" y="943.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.05%)</title><rect x="1.7154%" y="917" width="0.0483%" height="15" fill="rgb(254,30,23)" fg:x="71" fg:w="2"/><text x="1.9654%" y="927.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.05%)</title><rect x="1.7154%" y="901" width="0.0483%" height="15" fill="rgb(235,160,14)" fg:x="71" fg:w="2"/><text x="1.9654%" y="911.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.05%)</title><rect x="1.7154%" y="885" width="0.0483%" height="15" fill="rgb(212,155,44)" fg:x="71" fg:w="2"/><text x="1.9654%" y="895.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="1.7154%" y="869" width="0.0483%" height="15" fill="rgb(226,2,50)" fg:x="71" fg:w="2"/><text x="1.9654%" y="879.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="1.7154%" y="853" width="0.0483%" height="15" fill="rgb(234,177,6)" fg:x="71" fg:w="2"/><text x="1.9654%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="1.7154%" y="837" width="0.0483%" height="15" fill="rgb(217,24,9)" fg:x="71" fg:w="2"/><text x="1.9654%" y="847.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.05%)</title><rect x="1.7154%" y="821" width="0.0483%" height="15" fill="rgb(220,13,46)" fg:x="71" fg:w="2"/><text x="1.9654%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="1.7154%" y="805" width="0.0483%" height="15" fill="rgb(239,221,27)" fg:x="71" fg:w="2"/><text x="1.9654%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="1.7154%" y="789" width="0.0483%" height="15" fill="rgb(222,198,25)" fg:x="71" fg:w="2"/><text x="1.9654%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="1.7154%" y="773" width="0.0483%" height="15" fill="rgb(211,99,13)" fg:x="71" fg:w="2"/><text x="1.9654%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.7396%" y="757" width="0.0242%" height="15" fill="rgb(232,111,31)" fg:x="72" fg:w="1"/><text x="1.9896%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.7396%" y="741" width="0.0242%" height="15" fill="rgb(245,82,37)" fg:x="72" fg:w="1"/><text x="1.9896%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="1.7396%" y="725" width="0.0242%" height="15" fill="rgb(227,149,46)" fg:x="72" fg:w="1"/><text x="1.9896%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="1.7396%" y="709" width="0.0242%" height="15" fill="rgb(218,36,50)" fg:x="72" fg:w="1"/><text x="1.9896%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="1.7396%" y="693" width="0.0242%" height="15" fill="rgb(226,80,48)" fg:x="72" fg:w="1"/><text x="1.9896%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="1.7396%" y="677" width="0.0242%" height="15" fill="rgb(238,224,15)" fg:x="72" fg:w="1"/><text x="1.9896%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="1.7396%" y="661" width="0.0242%" height="15" fill="rgb(241,136,10)" fg:x="72" fg:w="1"/><text x="1.9896%" y="671.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="1.7396%" y="645" width="0.0242%" height="15" fill="rgb(208,32,45)" fg:x="72" fg:w="1"/><text x="1.9896%" y="655.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="1.7396%" y="629" width="0.0242%" height="15" fill="rgb(207,135,9)" fg:x="72" fg:w="1"/><text x="1.9896%" y="639.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="1.7396%" y="613" width="0.0242%" height="15" fill="rgb(206,86,44)" fg:x="72" fg:w="1"/><text x="1.9896%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="1.7396%" y="597" width="0.0242%" height="15" fill="rgb(245,177,15)" fg:x="72" fg:w="1"/><text x="1.9896%" y="607.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.02%)</title><rect x="1.7637%" y="853" width="0.0242%" height="15" fill="rgb(206,64,50)" fg:x="73" fg:w="1"/><text x="2.0137%" y="863.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.02%)</title><rect x="1.7637%" y="837" width="0.0242%" height="15" fill="rgb(234,36,40)" fg:x="73" fg:w="1"/><text x="2.0137%" y="847.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.02%)</title><rect x="1.7637%" y="821" width="0.0242%" height="15" fill="rgb(213,64,8)" fg:x="73" fg:w="1"/><text x="2.0137%" y="831.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.02%)</title><rect x="1.7637%" y="805" width="0.0242%" height="15" fill="rgb(210,75,36)" fg:x="73" fg:w="1"/><text x="2.0137%" y="815.50"></text></g><g><title>__libc_read (1 samples, 0.02%)</title><rect x="1.7637%" y="789" width="0.0242%" height="15" fill="rgb(229,88,21)" fg:x="73" fg:w="1"/><text x="2.0137%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1.7637%" y="773" width="0.0242%" height="15" fill="rgb(252,204,47)" fg:x="73" fg:w="1"/><text x="2.0137%" y="783.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1.7637%" y="757" width="0.0242%" height="15" fill="rgb(208,77,27)" fg:x="73" fg:w="1"/><text x="2.0137%" y="767.50"></text></g><g><title>__x64_sys_read (1 samples, 0.02%)</title><rect x="1.7637%" y="741" width="0.0242%" height="15" fill="rgb(221,76,26)" fg:x="73" fg:w="1"/><text x="2.0137%" y="751.50"></text></g><g><title>ksys_read (1 samples, 0.02%)</title><rect x="1.7637%" y="725" width="0.0242%" height="15" fill="rgb(225,139,18)" fg:x="73" fg:w="1"/><text x="2.0137%" y="735.50"></text></g><g><title>vfs_read (1 samples, 0.02%)</title><rect x="1.7637%" y="709" width="0.0242%" height="15" fill="rgb(230,137,11)" fg:x="73" fg:w="1"/><text x="2.0137%" y="719.50"></text></g><g><title>new_sync_read (1 samples, 0.02%)</title><rect x="1.7637%" y="693" width="0.0242%" height="15" fill="rgb(212,28,1)" fg:x="73" fg:w="1"/><text x="2.0137%" y="703.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="1.7637%" y="677" width="0.0242%" height="15" fill="rgb(248,164,17)" fg:x="73" fg:w="1"/><text x="2.0137%" y="687.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="1.7637%" y="661" width="0.0242%" height="15" fill="rgb(222,171,42)" fg:x="73" fg:w="1"/><text x="2.0137%" y="671.50"></text></g><g><title>generic_file_buffered_read (1 samples, 0.02%)</title><rect x="1.7637%" y="645" width="0.0242%" height="15" fill="rgb(243,84,45)" fg:x="73" fg:w="1"/><text x="2.0137%" y="655.50"></text></g><g><title>generic_file_buffered_read_get_pages (1 samples, 0.02%)</title><rect x="1.7637%" y="629" width="0.0242%" height="15" fill="rgb(252,49,23)" fg:x="73" fg:w="1"/><text x="2.0137%" y="639.50"></text></g><g><title>find_get_pages_contig (1 samples, 0.02%)</title><rect x="1.7637%" y="613" width="0.0242%" height="15" fill="rgb(215,19,7)" fg:x="73" fg:w="1"/><text x="2.0137%" y="623.50"></text></g><g><title>y2021::d01::main::part_1 (2 samples, 0.05%)</title><rect x="1.7637%" y="949" width="0.0483%" height="15" fill="rgb(238,81,41)" fg:x="73" fg:w="2"/><text x="2.0137%" y="959.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="1.7637%" y="933" width="0.0483%" height="15" fill="rgb(210,199,37)" fg:x="73" fg:w="2"/><text x="2.0137%" y="943.50"></text></g><g><title>std::io::BufRead::read_line (2 samples, 0.05%)</title><rect x="1.7637%" y="917" width="0.0483%" height="15" fill="rgb(244,192,49)" fg:x="73" fg:w="2"/><text x="2.0137%" y="927.50"></text></g><g><title>std::io::append_to_string (2 samples, 0.05%)</title><rect x="1.7637%" y="901" width="0.0483%" height="15" fill="rgb(226,211,11)" fg:x="73" fg:w="2"/><text x="2.0137%" y="911.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (2 samples, 0.05%)</title><rect x="1.7637%" y="885" width="0.0483%" height="15" fill="rgb(236,162,54)" fg:x="73" fg:w="2"/><text x="2.0137%" y="895.50"></text></g><g><title>std::io::read_until (2 samples, 0.05%)</title><rect x="1.7637%" y="869" width="0.0483%" height="15" fill="rgb(220,229,9)" fg:x="73" fg:w="2"/><text x="2.0137%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="1.7879%" y="853" width="0.0242%" height="15" fill="rgb(250,87,22)" fg:x="74" fg:w="1"/><text x="2.0379%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="1.7879%" y="837" width="0.0242%" height="15" fill="rgb(239,43,17)" fg:x="74" fg:w="1"/><text x="2.0379%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="1.7879%" y="821" width="0.0242%" height="15" fill="rgb(231,177,25)" fg:x="74" fg:w="1"/><text x="2.0379%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.7879%" y="805" width="0.0242%" height="15" fill="rgb(219,179,1)" fg:x="74" fg:w="1"/><text x="2.0379%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.7879%" y="789" width="0.0242%" height="15" fill="rgb(238,219,53)" fg:x="74" fg:w="1"/><text x="2.0379%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="1.7879%" y="773" width="0.0242%" height="15" fill="rgb(232,167,36)" fg:x="74" fg:w="1"/><text x="2.0379%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="1.7879%" y="757" width="0.0242%" height="15" fill="rgb(244,19,51)" fg:x="74" fg:w="1"/><text x="2.0379%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.02%)</title><rect x="1.7879%" y="741" width="0.0242%" height="15" fill="rgb(224,6,22)" fg:x="74" fg:w="1"/><text x="2.0379%" y="751.50"></text></g><g><title>y2021::d01::main::run (3 samples, 0.07%)</title><rect x="1.7637%" y="965" width="0.0725%" height="15" fill="rgb(224,145,5)" fg:x="73" fg:w="3"/><text x="2.0137%" y="975.50"></text></g><g><title>y2021::d01::main::part_2 (1 samples, 0.02%)</title><rect x="1.8120%" y="949" width="0.0242%" height="15" fill="rgb(234,130,49)" fg:x="75" fg:w="1"/><text x="2.0620%" y="959.50"></text></g><g><title>y2021::utils::file::line_as_usize (1 samples, 0.02%)</title><rect x="1.8120%" y="933" width="0.0242%" height="15" fill="rgb(254,6,2)" fg:x="75" fg:w="1"/><text x="2.0620%" y="943.50"></text></g><g><title>y2021::utils::file::line_as_str (1 samples, 0.02%)</title><rect x="1.8120%" y="917" width="0.0242%" height="15" fill="rgb(208,96,46)" fg:x="75" fg:w="1"/><text x="2.0620%" y="927.50"></text></g><g><title>&lt;alloc::string::String as alloc::string::ToString&gt;::to_string (1 samples, 0.02%)</title><rect x="1.8120%" y="901" width="0.0242%" height="15" fill="rgb(239,3,39)" fg:x="75" fg:w="1"/><text x="2.0620%" y="911.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.02%)</title><rect x="1.8120%" y="885" width="0.0242%" height="15" fill="rgb(233,210,1)" fg:x="75" fg:w="1"/><text x="2.0620%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="1.8120%" y="869" width="0.0242%" height="15" fill="rgb(244,137,37)" fg:x="75" fg:w="1"/><text x="2.0620%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="1.8120%" y="853" width="0.0242%" height="15" fill="rgb(240,136,2)" fg:x="75" fg:w="1"/><text x="2.0620%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="1.8120%" y="837" width="0.0242%" height="15" fill="rgb(239,18,37)" fg:x="75" fg:w="1"/><text x="2.0620%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="1.8120%" y="821" width="0.0242%" height="15" fill="rgb(218,185,22)" fg:x="75" fg:w="1"/><text x="2.0620%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="1.8120%" y="805" width="0.0242%" height="15" fill="rgb(225,218,4)" fg:x="75" fg:w="1"/><text x="2.0620%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="1.8120%" y="789" width="0.0242%" height="15" fill="rgb(230,182,32)" fg:x="75" fg:w="1"/><text x="2.0620%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="1.8120%" y="773" width="0.0242%" height="15" fill="rgb(242,56,43)" fg:x="75" fg:w="1"/><text x="2.0620%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="1.8120%" y="757" width="0.0242%" height="15" fill="rgb(233,99,24)" fg:x="75" fg:w="1"/><text x="2.0620%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="1.8120%" y="741" width="0.0242%" height="15" fill="rgb(234,209,42)" fg:x="75" fg:w="1"/><text x="2.0620%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="1.8120%" y="725" width="0.0242%" height="15" fill="rgb(227,7,12)" fg:x="75" fg:w="1"/><text x="2.0620%" y="735.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="1.8120%" y="709" width="0.0242%" height="15" fill="rgb(245,203,43)" fg:x="75" fg:w="1"/><text x="2.0620%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="1.8120%" y="693" width="0.0242%" height="15" fill="rgb(238,205,33)" fg:x="75" fg:w="1"/><text x="2.0620%" y="703.50"></text></g><g><title>y2021::d02::main::p01 (1 samples, 0.02%)</title><rect x="1.8362%" y="949" width="0.0242%" height="15" fill="rgb(231,56,7)" fg:x="76" fg:w="1"/><text x="2.0862%" y="959.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.8362%" y="933" width="0.0242%" height="15" fill="rgb(244,186,29)" fg:x="76" fg:w="1"/><text x="2.0862%" y="943.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.02%)</title><rect x="1.8362%" y="917" width="0.0242%" height="15" fill="rgb(234,111,31)" fg:x="76" fg:w="1"/><text x="2.0862%" y="927.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.02%)</title><rect x="1.8362%" y="901" width="0.0242%" height="15" fill="rgb(241,149,10)" fg:x="76" fg:w="1"/><text x="2.0862%" y="911.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 0.02%)</title><rect x="1.8362%" y="885" width="0.0242%" height="15" fill="rgb(249,206,44)" fg:x="76" fg:w="1"/><text x="2.0862%" y="895.50"></text></g><g><title>std::io::read_until (1 samples, 0.02%)</title><rect x="1.8362%" y="869" width="0.0242%" height="15" fill="rgb(251,153,30)" fg:x="76" fg:w="1"/><text x="2.0862%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="1.8362%" y="853" width="0.0242%" height="15" fill="rgb(239,152,38)" fg:x="76" fg:w="1"/><text x="2.0862%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="1.8362%" y="837" width="0.0242%" height="15" fill="rgb(249,139,47)" fg:x="76" fg:w="1"/><text x="2.0862%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="1.8362%" y="821" width="0.0242%" height="15" fill="rgb(244,64,35)" fg:x="76" fg:w="1"/><text x="2.0862%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.8362%" y="805" width="0.0242%" height="15" fill="rgb(216,46,15)" fg:x="76" fg:w="1"/><text x="2.0862%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.8362%" y="789" width="0.0242%" height="15" fill="rgb(250,74,19)" fg:x="76" fg:w="1"/><text x="2.0862%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="1.8362%" y="773" width="0.0242%" height="15" fill="rgb(249,42,33)" fg:x="76" fg:w="1"/><text x="2.0862%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="1.8362%" y="757" width="0.0242%" height="15" fill="rgb(242,149,17)" fg:x="76" fg:w="1"/><text x="2.0862%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="1.8362%" y="741" width="0.0242%" height="15" fill="rgb(244,29,21)" fg:x="76" fg:w="1"/><text x="2.0862%" y="751.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="1.8362%" y="725" width="0.0242%" height="15" fill="rgb(220,130,37)" fg:x="76" fg:w="1"/><text x="2.0862%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="1.8362%" y="709" width="0.0242%" height="15" fill="rgb(211,67,2)" fg:x="76" fg:w="1"/><text x="2.0862%" y="719.50"></text></g><g><title>y2021::d02::main::run (2 samples, 0.05%)</title><rect x="1.8362%" y="965" width="0.0483%" height="15" fill="rgb(235,68,52)" fg:x="76" fg:w="2"/><text x="2.0862%" y="975.50"></text></g><g><title>y2021::d02::main::p02 (1 samples, 0.02%)</title><rect x="1.8604%" y="949" width="0.0242%" height="15" fill="rgb(246,142,3)" fg:x="77" fg:w="1"/><text x="2.1104%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="1.8604%" y="933" width="0.0242%" height="15" fill="rgb(241,25,7)" fg:x="77" fg:w="1"/><text x="2.1104%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="1.8604%" y="917" width="0.0242%" height="15" fill="rgb(242,119,39)" fg:x="77" fg:w="1"/><text x="2.1104%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="1.8604%" y="901" width="0.0242%" height="15" fill="rgb(241,98,45)" fg:x="77" fg:w="1"/><text x="2.1104%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="1.8604%" y="885" width="0.0242%" height="15" fill="rgb(254,28,30)" fg:x="77" fg:w="1"/><text x="2.1104%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="1.8604%" y="869" width="0.0242%" height="15" fill="rgb(241,142,54)" fg:x="77" fg:w="1"/><text x="2.1104%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="1.8604%" y="853" width="0.0242%" height="15" fill="rgb(222,85,15)" fg:x="77" fg:w="1"/><text x="2.1104%" y="863.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="1.8604%" y="837" width="0.0242%" height="15" fill="rgb(210,85,47)" fg:x="77" fg:w="1"/><text x="2.1104%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.8845%" y="725" width="0.0242%" height="15" fill="rgb(224,206,25)" fg:x="78" fg:w="1"/><text x="2.1345%" y="735.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.8845%" y="709" width="0.0242%" height="15" fill="rgb(243,201,19)" fg:x="78" fg:w="1"/><text x="2.1345%" y="719.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.02%)</title><rect x="1.8845%" y="693" width="0.0242%" height="15" fill="rgb(236,59,4)" fg:x="78" fg:w="1"/><text x="2.1345%" y="703.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.02%)</title><rect x="1.8845%" y="677" width="0.0242%" height="15" fill="rgb(254,179,45)" fg:x="78" fg:w="1"/><text x="2.1345%" y="687.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.02%)</title><rect x="1.8845%" y="661" width="0.0242%" height="15" fill="rgb(226,14,10)" fg:x="78" fg:w="1"/><text x="2.1345%" y="671.50"></text></g><g><title>y2021::d03::main::p01 (2 samples, 0.05%)</title><rect x="1.8845%" y="949" width="0.0483%" height="15" fill="rgb(244,27,41)" fg:x="78" fg:w="2"/><text x="2.1345%" y="959.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d (2 samples, 0.05%)</title><rect x="1.8845%" y="933" width="0.0483%" height="15" fill="rgb(235,35,32)" fg:x="78" fg:w="2"/><text x="2.1345%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="1.8845%" y="917" width="0.0483%" height="15" fill="rgb(218,68,31)" fg:x="78" fg:w="2"/><text x="2.1345%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="1.8845%" y="901" width="0.0483%" height="15" fill="rgb(207,120,37)" fg:x="78" fg:w="2"/><text x="2.1345%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="1.8845%" y="885" width="0.0483%" height="15" fill="rgb(227,98,0)" fg:x="78" fg:w="2"/><text x="2.1345%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="1.8845%" y="869" width="0.0483%" height="15" fill="rgb(207,7,3)" fg:x="78" fg:w="2"/><text x="2.1345%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="1.8845%" y="853" width="0.0483%" height="15" fill="rgb(206,98,19)" fg:x="78" fg:w="2"/><text x="2.1345%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.05%)</title><rect x="1.8845%" y="837" width="0.0483%" height="15" fill="rgb(217,5,26)" fg:x="78" fg:w="2"/><text x="2.1345%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="1.8845%" y="821" width="0.0483%" height="15" fill="rgb(235,190,38)" fg:x="78" fg:w="2"/><text x="2.1345%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="1.8845%" y="805" width="0.0483%" height="15" fill="rgb(247,86,24)" fg:x="78" fg:w="2"/><text x="2.1345%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="1.8845%" y="789" width="0.0483%" height="15" fill="rgb(205,101,16)" fg:x="78" fg:w="2"/><text x="2.1345%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.05%)</title><rect x="1.8845%" y="773" width="0.0483%" height="15" fill="rgb(246,168,33)" fg:x="78" fg:w="2"/><text x="2.1345%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="1.8845%" y="757" width="0.0483%" height="15" fill="rgb(231,114,1)" fg:x="78" fg:w="2"/><text x="2.1345%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="1.8845%" y="741" width="0.0483%" height="15" fill="rgb(207,184,53)" fg:x="78" fg:w="2"/><text x="2.1345%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="1.9087%" y="725" width="0.0242%" height="15" fill="rgb(224,95,51)" fg:x="79" fg:w="1"/><text x="2.1587%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="1.9087%" y="709" width="0.0242%" height="15" fill="rgb(212,188,45)" fg:x="79" fg:w="1"/><text x="2.1587%" y="719.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d::{{closure}} (1 samples, 0.02%)</title><rect x="1.9087%" y="693" width="0.0242%" height="15" fill="rgb(223,154,38)" fg:x="79" fg:w="1"/><text x="2.1587%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.02%)</title><rect x="1.9087%" y="677" width="0.0242%" height="15" fill="rgb(251,22,52)" fg:x="79" fg:w="1"/><text x="2.1587%" y="687.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="1.9087%" y="661" width="0.0242%" height="15" fill="rgb(229,209,22)" fg:x="79" fg:w="1"/><text x="2.1587%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="1.9087%" y="645" width="0.0242%" height="15" fill="rgb(234,138,34)" fg:x="79" fg:w="1"/><text x="2.1587%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.9087%" y="629" width="0.0242%" height="15" fill="rgb(212,95,11)" fg:x="79" fg:w="1"/><text x="2.1587%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.9087%" y="613" width="0.0242%" height="15" fill="rgb(240,179,47)" fg:x="79" fg:w="1"/><text x="2.1587%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.9087%" y="597" width="0.0242%" height="15" fill="rgb(240,163,11)" fg:x="79" fg:w="1"/><text x="2.1587%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="1.9087%" y="581" width="0.0242%" height="15" fill="rgb(236,37,12)" fg:x="79" fg:w="1"/><text x="2.1587%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="1.9087%" y="565" width="0.0242%" height="15" fill="rgb(232,164,16)" fg:x="79" fg:w="1"/><text x="2.1587%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.9087%" y="549" width="0.0242%" height="15" fill="rgb(244,205,15)" fg:x="79" fg:w="1"/><text x="2.1587%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.9087%" y="533" width="0.0242%" height="15" fill="rgb(223,117,47)" fg:x="79" fg:w="1"/><text x="2.1587%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="1.9087%" y="517" width="0.0242%" height="15" fill="rgb(244,107,35)" fg:x="79" fg:w="1"/><text x="2.1587%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="1.9087%" y="501" width="0.0242%" height="15" fill="rgb(205,140,8)" fg:x="79" fg:w="1"/><text x="2.1587%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="1.9087%" y="485" width="0.0242%" height="15" fill="rgb(228,84,46)" fg:x="79" fg:w="1"/><text x="2.1587%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="1.9087%" y="469" width="0.0242%" height="15" fill="rgb(254,188,9)" fg:x="79" fg:w="1"/><text x="2.1587%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="1.9087%" y="453" width="0.0242%" height="15" fill="rgb(206,112,54)" fg:x="79" fg:w="1"/><text x="2.1587%" y="463.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="1.9087%" y="437" width="0.0242%" height="15" fill="rgb(216,84,49)" fg:x="79" fg:w="1"/><text x="2.1587%" y="447.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="1.9087%" y="421" width="0.0242%" height="15" fill="rgb(214,194,35)" fg:x="79" fg:w="1"/><text x="2.1587%" y="431.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="1.9087%" y="405" width="0.0242%" height="15" fill="rgb(249,28,3)" fg:x="79" fg:w="1"/><text x="2.1587%" y="415.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="1.9087%" y="389" width="0.0242%" height="15" fill="rgb(222,56,52)" fg:x="79" fg:w="1"/><text x="2.1587%" y="399.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="1.9087%" y="373" width="0.0242%" height="15" fill="rgb(245,217,50)" fg:x="79" fg:w="1"/><text x="2.1587%" y="383.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="1.9087%" y="357" width="0.0242%" height="15" fill="rgb(213,201,24)" fg:x="79" fg:w="1"/><text x="2.1587%" y="367.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="1.9087%" y="341" width="0.0242%" height="15" fill="rgb(248,116,28)" fg:x="79" fg:w="1"/><text x="2.1587%" y="351.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1.9087%" y="325" width="0.0242%" height="15" fill="rgb(219,72,43)" fg:x="79" fg:w="1"/><text x="2.1587%" y="335.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1.9087%" y="309" width="0.0242%" height="15" fill="rgb(209,138,14)" fg:x="79" fg:w="1"/><text x="2.1587%" y="319.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="1.9087%" y="293" width="0.0242%" height="15" fill="rgb(222,18,33)" fg:x="79" fg:w="1"/><text x="2.1587%" y="303.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="1.9087%" y="277" width="0.0242%" height="15" fill="rgb(213,199,7)" fg:x="79" fg:w="1"/><text x="2.1587%" y="287.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="1.9087%" y="261" width="0.0242%" height="15" fill="rgb(250,110,10)" fg:x="79" fg:w="1"/><text x="2.1587%" y="271.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="1.9087%" y="245" width="0.0242%" height="15" fill="rgb(248,123,6)" fg:x="79" fg:w="1"/><text x="2.1587%" y="255.50"></text></g><g><title>clear_page_rep (1 samples, 0.02%)</title><rect x="1.9087%" y="229" width="0.0242%" height="15" fill="rgb(206,91,31)" fg:x="79" fg:w="1"/><text x="2.1587%" y="239.50"></text></g><g><title>y2021::d03::main::run (4 samples, 0.10%)</title><rect x="1.8845%" y="965" width="0.0966%" height="15" fill="rgb(211,154,13)" fg:x="78" fg:w="4"/><text x="2.1345%" y="975.50"></text></g><g><title>y2021::d03::main::p02 (2 samples, 0.05%)</title><rect x="1.9328%" y="949" width="0.0483%" height="15" fill="rgb(225,148,7)" fg:x="80" fg:w="2"/><text x="2.1828%" y="959.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d (2 samples, 0.05%)</title><rect x="1.9328%" y="933" width="0.0483%" height="15" fill="rgb(220,160,43)" fg:x="80" fg:w="2"/><text x="2.1828%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="1.9328%" y="917" width="0.0483%" height="15" fill="rgb(213,52,39)" fg:x="80" fg:w="2"/><text x="2.1828%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="1.9328%" y="901" width="0.0483%" height="15" fill="rgb(243,137,7)" fg:x="80" fg:w="2"/><text x="2.1828%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="1.9328%" y="885" width="0.0483%" height="15" fill="rgb(230,79,13)" fg:x="80" fg:w="2"/><text x="2.1828%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="1.9328%" y="869" width="0.0483%" height="15" fill="rgb(247,105,23)" fg:x="80" fg:w="2"/><text x="2.1828%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="1.9328%" y="853" width="0.0483%" height="15" fill="rgb(223,179,41)" fg:x="80" fg:w="2"/><text x="2.1828%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.05%)</title><rect x="1.9328%" y="837" width="0.0483%" height="15" fill="rgb(218,9,34)" fg:x="80" fg:w="2"/><text x="2.1828%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="1.9328%" y="821" width="0.0483%" height="15" fill="rgb(222,106,8)" fg:x="80" fg:w="2"/><text x="2.1828%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="1.9328%" y="805" width="0.0483%" height="15" fill="rgb(211,220,0)" fg:x="80" fg:w="2"/><text x="2.1828%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.9570%" y="789" width="0.0242%" height="15" fill="rgb(229,52,16)" fg:x="81" fg:w="1"/><text x="2.2070%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.02%)</title><rect x="1.9570%" y="773" width="0.0242%" height="15" fill="rgb(212,155,18)" fg:x="81" fg:w="1"/><text x="2.2070%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.9570%" y="757" width="0.0242%" height="15" fill="rgb(242,21,14)" fg:x="81" fg:w="1"/><text x="2.2070%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.9570%" y="741" width="0.0242%" height="15" fill="rgb(222,19,48)" fg:x="81" fg:w="1"/><text x="2.2070%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="1.9570%" y="725" width="0.0242%" height="15" fill="rgb(232,45,27)" fg:x="81" fg:w="1"/><text x="2.2070%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="1.9570%" y="709" width="0.0242%" height="15" fill="rgb(249,103,42)" fg:x="81" fg:w="1"/><text x="2.2070%" y="719.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d::{{closure}} (1 samples, 0.02%)</title><rect x="1.9570%" y="693" width="0.0242%" height="15" fill="rgb(246,81,33)" fg:x="81" fg:w="1"/><text x="2.2070%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.02%)</title><rect x="1.9570%" y="677" width="0.0242%" height="15" fill="rgb(252,33,42)" fg:x="81" fg:w="1"/><text x="2.2070%" y="687.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="1.9570%" y="661" width="0.0242%" height="15" fill="rgb(209,212,41)" fg:x="81" fg:w="1"/><text x="2.2070%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="1.9570%" y="645" width="0.0242%" height="15" fill="rgb(207,154,6)" fg:x="81" fg:w="1"/><text x="2.2070%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.9570%" y="629" width="0.0242%" height="15" fill="rgb(223,64,47)" fg:x="81" fg:w="1"/><text x="2.2070%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.9570%" y="613" width="0.0242%" height="15" fill="rgb(211,161,38)" fg:x="81" fg:w="1"/><text x="2.2070%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.9570%" y="597" width="0.0242%" height="15" fill="rgb(219,138,40)" fg:x="81" fg:w="1"/><text x="2.2070%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="1.9570%" y="581" width="0.0242%" height="15" fill="rgb(241,228,46)" fg:x="81" fg:w="1"/><text x="2.2070%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="1.9570%" y="565" width="0.0242%" height="15" fill="rgb(223,209,38)" fg:x="81" fg:w="1"/><text x="2.2070%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.9570%" y="549" width="0.0242%" height="15" fill="rgb(236,164,45)" fg:x="81" fg:w="1"/><text x="2.2070%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.9570%" y="533" width="0.0242%" height="15" fill="rgb(231,15,5)" fg:x="81" fg:w="1"/><text x="2.2070%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="1.9570%" y="517" width="0.0242%" height="15" fill="rgb(252,35,15)" fg:x="81" fg:w="1"/><text x="2.2070%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="1.9570%" y="501" width="0.0242%" height="15" fill="rgb(248,181,18)" fg:x="81" fg:w="1"/><text x="2.2070%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="1.9570%" y="485" width="0.0242%" height="15" fill="rgb(233,39,42)" fg:x="81" fg:w="1"/><text x="2.2070%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="1.9812%" y="917" width="0.0242%" height="15" fill="rgb(238,110,33)" fg:x="82" fg:w="1"/><text x="2.2312%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.9812%" y="901" width="0.0242%" height="15" fill="rgb(233,195,10)" fg:x="82" fg:w="1"/><text x="2.2312%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.9812%" y="885" width="0.0242%" height="15" fill="rgb(254,105,3)" fg:x="82" fg:w="1"/><text x="2.2312%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="1.9812%" y="869" width="0.0242%" height="15" fill="rgb(221,225,9)" fg:x="82" fg:w="1"/><text x="2.2312%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="1.9812%" y="853" width="0.0242%" height="15" fill="rgb(224,227,45)" fg:x="82" fg:w="1"/><text x="2.2312%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="1.9812%" y="837" width="0.0242%" height="15" fill="rgb(229,198,43)" fg:x="82" fg:w="1"/><text x="2.2312%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="1.9812%" y="821" width="0.0242%" height="15" fill="rgb(206,209,35)" fg:x="82" fg:w="1"/><text x="2.2312%" y="831.50"></text></g><g><title>y2021::d04::main::p01 (2 samples, 0.05%)</title><rect x="1.9812%" y="949" width="0.0483%" height="15" fill="rgb(245,195,53)" fg:x="82" fg:w="2"/><text x="2.2312%" y="959.50"></text></g><g><title>y2021::d04::main::bingo_game_from_path (2 samples, 0.05%)</title><rect x="1.9812%" y="933" width="0.0483%" height="15" fill="rgb(240,92,26)" fg:x="82" fg:w="2"/><text x="2.2312%" y="943.50"></text></g><g><title>y2021::utils::file::line_as_str (1 samples, 0.02%)</title><rect x="2.0053%" y="917" width="0.0242%" height="15" fill="rgb(207,40,23)" fg:x="83" fg:w="1"/><text x="2.2553%" y="927.50"></text></g><g><title>&lt;alloc::string::String as alloc::string::ToString&gt;::to_string (1 samples, 0.02%)</title><rect x="2.0053%" y="901" width="0.0242%" height="15" fill="rgb(223,111,35)" fg:x="83" fg:w="1"/><text x="2.2553%" y="911.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.02%)</title><rect x="2.0053%" y="885" width="0.0242%" height="15" fill="rgb(229,147,28)" fg:x="83" fg:w="1"/><text x="2.2553%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="2.0053%" y="869" width="0.0242%" height="15" fill="rgb(211,29,28)" fg:x="83" fg:w="1"/><text x="2.2553%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="2.0053%" y="853" width="0.0242%" height="15" fill="rgb(228,72,33)" fg:x="83" fg:w="1"/><text x="2.2553%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="2.0053%" y="837" width="0.0242%" height="15" fill="rgb(205,214,31)" fg:x="83" fg:w="1"/><text x="2.2553%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="2.0053%" y="821" width="0.0242%" height="15" fill="rgb(224,111,15)" fg:x="83" fg:w="1"/><text x="2.2553%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="2.0053%" y="805" width="0.0242%" height="15" fill="rgb(253,21,26)" fg:x="83" fg:w="1"/><text x="2.2553%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="2.0053%" y="789" width="0.0242%" height="15" fill="rgb(245,139,43)" fg:x="83" fg:w="1"/><text x="2.2553%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="2.0053%" y="773" width="0.0242%" height="15" fill="rgb(252,170,7)" fg:x="83" fg:w="1"/><text x="2.2553%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect x="2.0053%" y="757" width="0.0242%" height="15" fill="rgb(231,118,14)" fg:x="83" fg:w="1"/><text x="2.2553%" y="767.50"></text></g><g><title>y2021::d04::main::BingoPlayer::take (1 samples, 0.02%)</title><rect x="2.0295%" y="933" width="0.0242%" height="15" fill="rgb(238,83,0)" fg:x="84" fg:w="1"/><text x="2.2795%" y="943.50"></text></g><g><title>y2021::d04::main::run (4 samples, 0.10%)</title><rect x="1.9812%" y="965" width="0.0966%" height="15" fill="rgb(221,39,39)" fg:x="82" fg:w="4"/><text x="2.2312%" y="975.50"></text></g><g><title>y2021::d04::main::p02 (2 samples, 0.05%)</title><rect x="2.0295%" y="949" width="0.0483%" height="15" fill="rgb(222,119,46)" fg:x="84" fg:w="2"/><text x="2.2795%" y="959.50"></text></g><g><title>y2021::d04::main::bingo_game_from_path (1 samples, 0.02%)</title><rect x="2.0536%" y="933" width="0.0242%" height="15" fill="rgb(222,165,49)" fg:x="85" fg:w="1"/><text x="2.3036%" y="943.50"></text></g><g><title>y2021::d04::main::bingo_line_to_vec (1 samples, 0.02%)</title><rect x="2.0536%" y="917" width="0.0242%" height="15" fill="rgb(219,113,52)" fg:x="85" fg:w="1"/><text x="2.3036%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="2.0536%" y="901" width="0.0242%" height="15" fill="rgb(214,7,15)" fg:x="85" fg:w="1"/><text x="2.3036%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="2.0536%" y="885" width="0.0242%" height="15" fill="rgb(235,32,4)" fg:x="85" fg:w="1"/><text x="2.3036%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="2.0536%" y="869" width="0.0242%" height="15" fill="rgb(238,90,54)" fg:x="85" fg:w="1"/><text x="2.3036%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="2.0536%" y="853" width="0.0242%" height="15" fill="rgb(213,208,19)" fg:x="85" fg:w="1"/><text x="2.3036%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="2.0536%" y="837" width="0.0242%" height="15" fill="rgb(233,156,4)" fg:x="85" fg:w="1"/><text x="2.3036%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="2.0536%" y="821" width="0.0242%" height="15" fill="rgb(207,194,5)" fg:x="85" fg:w="1"/><text x="2.3036%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="2.0536%" y="805" width="0.0242%" height="15" fill="rgb(206,111,30)" fg:x="85" fg:w="1"/><text x="2.3036%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="2.0536%" y="789" width="0.0242%" height="15" fill="rgb(243,70,54)" fg:x="85" fg:w="1"/><text x="2.3036%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="2.0536%" y="773" width="0.0242%" height="15" fill="rgb(242,28,8)" fg:x="85" fg:w="1"/><text x="2.3036%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="2.0536%" y="757" width="0.0242%" height="15" fill="rgb(219,106,18)" fg:x="85" fg:w="1"/><text x="2.3036%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="2.0536%" y="741" width="0.0242%" height="15" fill="rgb(244,222,10)" fg:x="85" fg:w="1"/><text x="2.3036%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="2.0536%" y="725" width="0.0242%" height="15" fill="rgb(236,179,52)" fg:x="85" fg:w="1"/><text x="2.3036%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="2.0536%" y="709" width="0.0242%" height="15" fill="rgb(213,23,39)" fg:x="85" fg:w="1"/><text x="2.3036%" y="719.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="2.0536%" y="693" width="0.0242%" height="15" fill="rgb(238,48,10)" fg:x="85" fg:w="1"/><text x="2.3036%" y="703.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="2.0536%" y="677" width="0.0242%" height="15" fill="rgb(251,196,23)" fg:x="85" fg:w="1"/><text x="2.3036%" y="687.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="2.0536%" y="661" width="0.0242%" height="15" fill="rgb(250,152,24)" fg:x="85" fg:w="1"/><text x="2.3036%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (9 samples, 0.22%)</title><rect x="2.6576%" y="613" width="0.2174%" height="15" fill="rgb(209,150,17)" fg:x="110" fg:w="9"/><text x="2.9076%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (9 samples, 0.22%)</title><rect x="2.6576%" y="597" width="0.2174%" height="15" fill="rgb(234,202,34)" fg:x="110" fg:w="9"/><text x="2.9076%" y="607.50"></text></g><g><title>core::ptr::write (9 samples, 0.22%)</title><rect x="2.6576%" y="581" width="0.2174%" height="15" fill="rgb(253,148,53)" fg:x="110" fg:w="9"/><text x="2.9076%" y="591.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (11 samples, 0.27%)</title><rect x="2.6335%" y="677" width="0.2658%" height="15" fill="rgb(218,129,16)" fg:x="109" fg:w="11"/><text x="2.8835%" y="687.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (11 samples, 0.27%)</title><rect x="2.6335%" y="661" width="0.2658%" height="15" fill="rgb(216,85,19)" fg:x="109" fg:w="11"/><text x="2.8835%" y="671.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (11 samples, 0.27%)</title><rect x="2.6335%" y="645" width="0.2658%" height="15" fill="rgb(235,228,7)" fg:x="109" fg:w="11"/><text x="2.8835%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (11 samples, 0.27%)</title><rect x="2.6335%" y="629" width="0.2658%" height="15" fill="rgb(245,175,0)" fg:x="109" fg:w="11"/><text x="2.8835%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.02%)</title><rect x="2.8751%" y="613" width="0.0242%" height="15" fill="rgb(208,168,36)" fg:x="119" fg:w="1"/><text x="3.1251%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="2.8751%" y="597" width="0.0242%" height="15" fill="rgb(246,171,24)" fg:x="119" fg:w="1"/><text x="3.1251%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="2.8751%" y="581" width="0.0242%" height="15" fill="rgb(215,142,24)" fg:x="119" fg:w="1"/><text x="3.1251%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.07%)</title><rect x="3.1650%" y="501" width="0.0725%" height="15" fill="rgb(250,187,7)" fg:x="131" fg:w="3"/><text x="3.4150%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="3.1650%" y="485" width="0.0725%" height="15" fill="rgb(228,66,33)" fg:x="131" fg:w="3"/><text x="3.4150%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.12%)</title><rect x="3.2858%" y="485" width="0.1208%" height="15" fill="rgb(234,215,21)" fg:x="136" fg:w="5"/><text x="3.5358%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 0.43%)</title><rect x="3.0201%" y="549" width="0.4349%" height="15" fill="rgb(222,191,20)" fg:x="125" fg:w="18"/><text x="3.2701%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18 samples, 0.43%)</title><rect x="3.0201%" y="533" width="0.4349%" height="15" fill="rgb(245,79,54)" fg:x="125" fg:w="18"/><text x="3.2701%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 0.43%)</title><rect x="3.0201%" y="517" width="0.4349%" height="15" fill="rgb(240,10,37)" fg:x="125" fg:w="18"/><text x="3.2701%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.22%)</title><rect x="3.2375%" y="501" width="0.2174%" height="15" fill="rgb(214,192,32)" fg:x="134" fg:w="9"/><text x="3.4875%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="3.4066%" y="485" width="0.0483%" height="15" fill="rgb(209,36,54)" fg:x="141" fg:w="2"/><text x="3.6566%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="3.6965%" y="437" width="0.0483%" height="15" fill="rgb(220,10,11)" fg:x="153" fg:w="2"/><text x="3.9465%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.14%)</title><rect x="3.6241%" y="453" width="0.1450%" height="15" fill="rgb(221,106,17)" fg:x="150" fg:w="6"/><text x="3.8741%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="3.7449%" y="437" width="0.0242%" height="15" fill="rgb(251,142,44)" fg:x="155" fg:w="1"/><text x="3.9949%" y="447.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (34 samples, 0.82%)</title><rect x="2.9717%" y="581" width="0.8215%" height="15" fill="rgb(238,13,15)" fg:x="123" fg:w="34"/><text x="3.2217%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (34 samples, 0.82%)</title><rect x="2.9717%" y="565" width="0.8215%" height="15" fill="rgb(208,107,27)" fg:x="123" fg:w="34"/><text x="3.2217%" y="575.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (14 samples, 0.34%)</title><rect x="3.4549%" y="549" width="0.3382%" height="15" fill="rgb(205,136,37)" fg:x="143" fg:w="14"/><text x="3.7049%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (12 samples, 0.29%)</title><rect x="3.5033%" y="533" width="0.2899%" height="15" fill="rgb(250,205,27)" fg:x="145" fg:w="12"/><text x="3.7533%" y="543.50"></text></g><g><title>core::hash::Hasher::write_usize (12 samples, 0.29%)</title><rect x="3.5033%" y="517" width="0.2899%" height="15" fill="rgb(210,80,43)" fg:x="145" fg:w="12"/><text x="3.7533%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.29%)</title><rect x="3.5033%" y="501" width="0.2899%" height="15" fill="rgb(247,160,36)" fg:x="145" fg:w="12"/><text x="3.7533%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.29%)</title><rect x="3.5033%" y="485" width="0.2899%" height="15" fill="rgb(234,13,49)" fg:x="145" fg:w="12"/><text x="3.7533%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.29%)</title><rect x="3.5033%" y="469" width="0.2899%" height="15" fill="rgb(234,122,0)" fg:x="145" fg:w="12"/><text x="3.7533%" y="479.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="3.7690%" y="453" width="0.0242%" height="15" fill="rgb(207,146,38)" fg:x="156" fg:w="1"/><text x="4.0190%" y="463.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="3.8898%" y="533" width="0.0242%" height="15" fill="rgb(207,177,25)" fg:x="161" fg:w="1"/><text x="4.1398%" y="543.50"></text></g><g><title>clear_page_rep (5 samples, 0.12%)</title><rect x="4.0106%" y="389" width="0.1208%" height="15" fill="rgb(211,178,42)" fg:x="166" fg:w="5"/><text x="4.2606%" y="399.50"></text></g><g><title>alloc_pages_vma (8 samples, 0.19%)</title><rect x="3.9623%" y="437" width="0.1933%" height="15" fill="rgb(230,69,54)" fg:x="164" fg:w="8"/><text x="4.2123%" y="447.50"></text></g><g><title>__alloc_pages_nodemask (6 samples, 0.14%)</title><rect x="4.0106%" y="421" width="0.1450%" height="15" fill="rgb(214,135,41)" fg:x="166" fg:w="6"/><text x="4.2606%" y="431.50"></text></g><g><title>get_page_from_freelist (6 samples, 0.14%)</title><rect x="4.0106%" y="405" width="0.1450%" height="15" fill="rgb(237,67,25)" fg:x="166" fg:w="6"/><text x="4.2606%" y="415.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="4.1314%" y="389" width="0.0242%" height="15" fill="rgb(222,189,50)" fg:x="171" fg:w="1"/><text x="4.3814%" y="399.50"></text></g><g><title>asm_exc_page_fault (12 samples, 0.29%)</title><rect x="3.9140%" y="533" width="0.2899%" height="15" fill="rgb(245,148,34)" fg:x="162" fg:w="12"/><text x="4.1640%" y="543.50"></text></g><g><title>exc_page_fault (10 samples, 0.24%)</title><rect x="3.9623%" y="517" width="0.2416%" height="15" fill="rgb(222,29,6)" fg:x="164" fg:w="10"/><text x="4.2123%" y="527.50"></text></g><g><title>do_user_addr_fault (10 samples, 0.24%)</title><rect x="3.9623%" y="501" width="0.2416%" height="15" fill="rgb(221,189,43)" fg:x="164" fg:w="10"/><text x="4.2123%" y="511.50"></text></g><g><title>handle_mm_fault (10 samples, 0.24%)</title><rect x="3.9623%" y="485" width="0.2416%" height="15" fill="rgb(207,36,27)" fg:x="164" fg:w="10"/><text x="4.2123%" y="495.50"></text></g><g><title>__handle_mm_fault (10 samples, 0.24%)</title><rect x="3.9623%" y="469" width="0.2416%" height="15" fill="rgb(217,90,24)" fg:x="164" fg:w="10"/><text x="4.2123%" y="479.50"></text></g><g><title>do_anonymous_page (10 samples, 0.24%)</title><rect x="3.9623%" y="453" width="0.2416%" height="15" fill="rgb(224,66,35)" fg:x="164" fg:w="10"/><text x="4.2123%" y="463.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (2 samples, 0.05%)</title><rect x="4.1556%" y="437" width="0.0483%" height="15" fill="rgb(221,13,50)" fg:x="172" fg:w="2"/><text x="4.4056%" y="447.50"></text></g><g><title>lru_cache_add (2 samples, 0.05%)</title><rect x="4.1556%" y="421" width="0.0483%" height="15" fill="rgb(236,68,49)" fg:x="172" fg:w="2"/><text x="4.4056%" y="431.50"></text></g><g><title>__pagevec_lru_add (2 samples, 0.05%)</title><rect x="4.1556%" y="405" width="0.0483%" height="15" fill="rgb(229,146,28)" fg:x="172" fg:w="2"/><text x="4.4056%" y="415.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="4.1798%" y="389" width="0.0242%" height="15" fill="rgb(225,31,38)" fg:x="173" fg:w="1"/><text x="4.4298%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (18 samples, 0.43%)</title><rect x="3.7932%" y="581" width="0.4349%" height="15" fill="rgb(250,208,3)" fg:x="157" fg:w="18"/><text x="4.0432%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (18 samples, 0.43%)</title><rect x="3.7932%" y="565" width="0.4349%" height="15" fill="rgb(246,54,23)" fg:x="157" fg:w="18"/><text x="4.0432%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.43%)</title><rect x="3.7932%" y="549" width="0.4349%" height="15" fill="rgb(243,76,11)" fg:x="157" fg:w="18"/><text x="4.0432%" y="559.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="4.2039%" y="533" width="0.0242%" height="15" fill="rgb(245,21,50)" fg:x="174" fg:w="1"/><text x="4.4539%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (3 samples, 0.07%)</title><rect x="4.2281%" y="581" width="0.0725%" height="15" fill="rgb(228,9,43)" fg:x="175" fg:w="3"/><text x="4.4781%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (3 samples, 0.07%)</title><rect x="4.2281%" y="565" width="0.0725%" height="15" fill="rgb(208,100,47)" fg:x="175" fg:w="3"/><text x="4.4781%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.07%)</title><rect x="4.2281%" y="549" width="0.0725%" height="15" fill="rgb(232,26,8)" fg:x="175" fg:w="3"/><text x="4.4781%" y="559.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (3 samples, 0.07%)</title><rect x="4.2281%" y="533" width="0.0725%" height="15" fill="rgb(216,166,38)" fg:x="175" fg:w="3"/><text x="4.4781%" y="543.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (3 samples, 0.07%)</title><rect x="4.2281%" y="517" width="0.0725%" height="15" fill="rgb(251,202,51)" fg:x="175" fg:w="3"/><text x="4.4781%" y="527.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.07%)</title><rect x="4.4214%" y="549" width="0.0725%" height="15" fill="rgb(254,216,34)" fg:x="183" fg:w="3"/><text x="4.6714%" y="559.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.02%)</title><rect x="4.4938%" y="549" width="0.0242%" height="15" fill="rgb(251,32,27)" fg:x="186" fg:w="1"/><text x="4.7438%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (15 samples, 0.36%)</title><rect x="4.3006%" y="581" width="0.3624%" height="15" fill="rgb(208,127,28)" fg:x="178" fg:w="15"/><text x="4.5506%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (15 samples, 0.36%)</title><rect x="4.3006%" y="565" width="0.3624%" height="15" fill="rgb(224,137,22)" fg:x="178" fg:w="15"/><text x="4.5506%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (6 samples, 0.14%)</title><rect x="4.5180%" y="549" width="0.1450%" height="15" fill="rgb(254,70,32)" fg:x="187" fg:w="6"/><text x="4.7680%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (6 samples, 0.14%)</title><rect x="4.5180%" y="533" width="0.1450%" height="15" fill="rgb(229,75,37)" fg:x="187" fg:w="6"/><text x="4.7680%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (71 samples, 1.72%)</title><rect x="2.9717%" y="645" width="1.7154%" height="15" fill="rgb(252,64,23)" fg:x="123" fg:w="71"/><text x="3.2217%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (71 samples, 1.72%)</title><rect x="2.9717%" y="629" width="1.7154%" height="15" fill="rgb(232,162,48)" fg:x="123" fg:w="71"/><text x="3.2217%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (71 samples, 1.72%)</title><rect x="2.9717%" y="613" width="1.7154%" height="15" fill="rgb(246,160,12)" fg:x="123" fg:w="71"/><text x="3.2217%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (71 samples, 1.72%)</title><rect x="2.9717%" y="597" width="1.7154%" height="15" fill="rgb(247,166,0)" fg:x="123" fg:w="71"/><text x="3.2217%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.02%)</title><rect x="4.6630%" y="581" width="0.0242%" height="15" fill="rgb(249,219,21)" fg:x="193" fg:w="1"/><text x="4.9130%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.02%)</title><rect x="4.6630%" y="565" width="0.0242%" height="15" fill="rgb(205,209,3)" fg:x="193" fg:w="1"/><text x="4.9130%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.02%)</title><rect x="4.6630%" y="549" width="0.0242%" height="15" fill="rgb(243,44,1)" fg:x="193" fg:w="1"/><text x="4.9130%" y="559.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.02%)</title><rect x="4.6630%" y="533" width="0.0242%" height="15" fill="rgb(206,159,16)" fg:x="193" fg:w="1"/><text x="4.9130%" y="543.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="4.6630%" y="517" width="0.0242%" height="15" fill="rgb(244,77,30)" fg:x="193" fg:w="1"/><text x="4.9130%" y="527.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="4.6630%" y="501" width="0.0242%" height="15" fill="rgb(218,69,12)" fg:x="193" fg:w="1"/><text x="4.9130%" y="511.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="4.6630%" y="485" width="0.0242%" height="15" fill="rgb(212,87,7)" fg:x="193" fg:w="1"/><text x="4.9130%" y="495.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="4.6630%" y="469" width="0.0242%" height="15" fill="rgb(245,114,25)" fg:x="193" fg:w="1"/><text x="4.9130%" y="479.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="4.6630%" y="453" width="0.0242%" height="15" fill="rgb(210,61,42)" fg:x="193" fg:w="1"/><text x="4.9130%" y="463.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="4.6630%" y="437" width="0.0242%" height="15" fill="rgb(211,52,33)" fg:x="193" fg:w="1"/><text x="4.9130%" y="447.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="4.6630%" y="421" width="0.0242%" height="15" fill="rgb(234,58,33)" fg:x="193" fg:w="1"/><text x="4.9130%" y="431.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="4.6630%" y="405" width="0.0242%" height="15" fill="rgb(220,115,36)" fg:x="193" fg:w="1"/><text x="4.9130%" y="415.50"></text></g><g><title>should_fail_alloc_page (1 samples, 0.02%)</title><rect x="4.6630%" y="389" width="0.0242%" height="15" fill="rgb(243,153,54)" fg:x="193" fg:w="1"/><text x="4.9130%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="4.6871%" y="581" width="0.0242%" height="15" fill="rgb(251,47,18)" fg:x="194" fg:w="1"/><text x="4.9371%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="4.7113%" y="565" width="0.0725%" height="15" fill="rgb(242,102,42)" fg:x="195" fg:w="3"/><text x="4.9613%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.14%)</title><rect x="4.6871%" y="629" width="0.1450%" height="15" fill="rgb(234,31,38)" fg:x="194" fg:w="6"/><text x="4.9371%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.14%)</title><rect x="4.6871%" y="613" width="0.1450%" height="15" fill="rgb(221,117,51)" fg:x="194" fg:w="6"/><text x="4.9371%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.14%)</title><rect x="4.6871%" y="597" width="0.1450%" height="15" fill="rgb(212,20,18)" fg:x="194" fg:w="6"/><text x="4.9371%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.12%)</title><rect x="4.7113%" y="581" width="0.1208%" height="15" fill="rgb(245,133,36)" fg:x="195" fg:w="5"/><text x="4.9613%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="4.7838%" y="565" width="0.0483%" height="15" fill="rgb(212,6,19)" fg:x="198" fg:w="2"/><text x="5.0338%" y="575.50"></text></g><g><title>hashbrown::map::make_insert_hash (14 samples, 0.34%)</title><rect x="4.6871%" y="645" width="0.3382%" height="15" fill="rgb(218,1,36)" fg:x="194" fg:w="14"/><text x="4.9371%" y="655.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (8 samples, 0.19%)</title><rect x="4.8321%" y="629" width="0.1933%" height="15" fill="rgb(246,84,54)" fg:x="200" fg:w="8"/><text x="5.0821%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (7 samples, 0.17%)</title><rect x="4.8562%" y="613" width="0.1691%" height="15" fill="rgb(242,110,6)" fg:x="201" fg:w="7"/><text x="5.1062%" y="623.50"></text></g><g><title>core::hash::Hasher::write_usize (6 samples, 0.14%)</title><rect x="4.8804%" y="597" width="0.1450%" height="15" fill="rgb(214,47,5)" fg:x="202" fg:w="6"/><text x="5.1304%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.14%)</title><rect x="4.8804%" y="581" width="0.1450%" height="15" fill="rgb(218,159,25)" fg:x="202" fg:w="6"/><text x="5.1304%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.14%)</title><rect x="4.8804%" y="565" width="0.1450%" height="15" fill="rgb(215,211,28)" fg:x="202" fg:w="6"/><text x="5.1304%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.14%)</title><rect x="4.8804%" y="549" width="0.1450%" height="15" fill="rgb(238,59,32)" fg:x="202" fg:w="6"/><text x="5.1304%" y="559.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="4.9770%" y="533" width="0.0483%" height="15" fill="rgb(226,82,3)" fg:x="206" fg:w="2"/><text x="5.2270%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="5.2428%" y="629" width="0.0242%" height="15" fill="rgb(240,164,32)" fg:x="217" fg:w="1"/><text x="5.4928%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="5.2428%" y="613" width="0.0242%" height="15" fill="rgb(232,46,7)" fg:x="217" fg:w="1"/><text x="5.4928%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="5.2428%" y="597" width="0.0242%" height="15" fill="rgb(229,129,53)" fg:x="217" fg:w="1"/><text x="5.4928%" y="607.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (104 samples, 2.51%)</title><rect x="2.8993%" y="661" width="2.5127%" height="15" fill="rgb(234,188,29)" fg:x="120" fg:w="104"/><text x="3.1493%" y="671.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.39%)</title><rect x="5.0254%" y="645" width="0.3866%" height="15" fill="rgb(246,141,4)" fg:x="208" fg:w="16"/><text x="5.2754%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.14%)</title><rect x="5.2670%" y="629" width="0.1450%" height="15" fill="rgb(229,23,39)" fg:x="218" fg:w="6"/><text x="5.5170%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.14%)</title><rect x="5.2670%" y="613" width="0.1450%" height="15" fill="rgb(206,12,3)" fg:x="218" fg:w="6"/><text x="5.5170%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.14%)</title><rect x="5.2670%" y="597" width="0.1450%" height="15" fill="rgb(252,226,20)" fg:x="218" fg:w="6"/><text x="5.5170%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.14%)</title><rect x="5.2670%" y="581" width="0.1450%" height="15" fill="rgb(216,123,35)" fg:x="218" fg:w="6"/><text x="5.5170%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (6 samples, 0.14%)</title><rect x="5.2670%" y="565" width="0.1450%" height="15" fill="rgb(212,68,40)" fg:x="218" fg:w="6"/><text x="5.5170%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (6 samples, 0.14%)</title><rect x="5.2670%" y="549" width="0.1450%" height="15" fill="rgb(254,125,32)" fg:x="218" fg:w="6"/><text x="5.5170%" y="559.50"></text></g><g><title>core::core_arch::simd::i8x16::new (6 samples, 0.14%)</title><rect x="5.2670%" y="533" width="0.1450%" height="15" fill="rgb(253,97,22)" fg:x="218" fg:w="6"/><text x="5.5170%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (145 samples, 3.50%)</title><rect x="2.0778%" y="741" width="3.5033%" height="15" fill="rgb(241,101,14)" fg:x="86" fg:w="145"/><text x="2.3278%" y="751.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (145 samples, 3.50%)</title><rect x="2.0778%" y="725" width="3.5033%" height="15" fill="rgb(238,103,29)" fg:x="86" fg:w="145"/><text x="2.3278%" y="735.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (145 samples, 3.50%)</title><rect x="2.0778%" y="709" width="3.5033%" height="15" fill="rgb(233,195,47)" fg:x="86" fg:w="145"/><text x="2.3278%" y="719.50">cor..</text></g><g><title>y2021::d05::main::p01::{{closure}} (140 samples, 3.38%)</title><rect x="2.1986%" y="693" width="3.3825%" height="15" fill="rgb(246,218,30)" fg:x="91" fg:w="140"/><text x="2.4486%" y="703.50">y20..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (111 samples, 2.68%)</title><rect x="2.8993%" y="677" width="2.6818%" height="15" fill="rgb(219,145,47)" fg:x="120" fg:w="111"/><text x="3.1493%" y="687.50">st..</text></g><g><title>std::collections::hash::map::map_entry (7 samples, 0.17%)</title><rect x="5.4119%" y="661" width="0.1691%" height="15" fill="rgb(243,12,26)" fg:x="224" fg:w="7"/><text x="5.6619%" y="671.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (147 samples, 3.55%)</title><rect x="2.0778%" y="773" width="3.5516%" height="15" fill="rgb(214,87,16)" fg:x="86" fg:w="147"/><text x="2.3278%" y="783.50">core..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (147 samples, 3.55%)</title><rect x="2.0778%" y="757" width="3.5516%" height="15" fill="rgb(208,99,42)" fg:x="86" fg:w="147"/><text x="2.3278%" y="767.50">core..</text></g><g><title>y2021::d05::main::p01::{{closure}} (2 samples, 0.05%)</title><rect x="5.5811%" y="741" width="0.0483%" height="15" fill="rgb(253,99,2)" fg:x="231" fg:w="2"/><text x="5.8311%" y="751.50"></text></g><g><title>y2021::types::line::Line::points (2 samples, 0.05%)</title><rect x="5.5811%" y="725" width="0.0483%" height="15" fill="rgb(220,168,23)" fg:x="231" fg:w="2"/><text x="5.8311%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="5.5811%" y="709" width="0.0483%" height="15" fill="rgb(242,38,24)" fg:x="231" fg:w="2"/><text x="5.8311%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="5.5811%" y="693" width="0.0483%" height="15" fill="rgb(225,182,9)" fg:x="231" fg:w="2"/><text x="5.8311%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="5.5811%" y="677" width="0.0483%" height="15" fill="rgb(243,178,37)" fg:x="231" fg:w="2"/><text x="5.8311%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="5.5811%" y="661" width="0.0483%" height="15" fill="rgb(232,139,19)" fg:x="231" fg:w="2"/><text x="5.8311%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.05%)</title><rect x="5.5811%" y="645" width="0.0483%" height="15" fill="rgb(225,201,24)" fg:x="231" fg:w="2"/><text x="5.8311%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.05%)</title><rect x="5.5811%" y="629" width="0.0483%" height="15" fill="rgb(221,47,46)" fg:x="231" fg:w="2"/><text x="5.8311%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.05%)</title><rect x="5.5811%" y="613" width="0.0483%" height="15" fill="rgb(249,23,13)" fg:x="231" fg:w="2"/><text x="5.8311%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.05%)</title><rect x="5.5811%" y="597" width="0.0483%" height="15" fill="rgb(219,9,5)" fg:x="231" fg:w="2"/><text x="5.8311%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.05%)</title><rect x="5.5811%" y="581" width="0.0483%" height="15" fill="rgb(254,171,16)" fg:x="231" fg:w="2"/><text x="5.8311%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.05%)</title><rect x="5.5811%" y="565" width="0.0483%" height="15" fill="rgb(230,171,20)" fg:x="231" fg:w="2"/><text x="5.8311%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.05%)</title><rect x="5.5811%" y="549" width="0.0483%" height="15" fill="rgb(210,71,41)" fg:x="231" fg:w="2"/><text x="5.8311%" y="559.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.05%)</title><rect x="5.5811%" y="533" width="0.0483%" height="15" fill="rgb(206,173,20)" fg:x="231" fg:w="2"/><text x="5.8311%" y="543.50"></text></g><g><title>_int_malloc (2 samples, 0.05%)</title><rect x="5.5811%" y="517" width="0.0483%" height="15" fill="rgb(233,88,34)" fg:x="231" fg:w="2"/><text x="5.8311%" y="527.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="5.6052%" y="501" width="0.0242%" height="15" fill="rgb(223,209,46)" fg:x="232" fg:w="1"/><text x="5.8552%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="5.6294%" y="693" width="0.0242%" height="15" fill="rgb(250,43,18)" fg:x="233" fg:w="1"/><text x="5.8794%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="5.6294%" y="677" width="0.0242%" height="15" fill="rgb(208,13,10)" fg:x="233" fg:w="1"/><text x="5.8794%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="5.6294%" y="661" width="0.0242%" height="15" fill="rgb(212,200,36)" fg:x="233" fg:w="1"/><text x="5.8794%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="5.6294%" y="645" width="0.0242%" height="15" fill="rgb(225,90,30)" fg:x="233" fg:w="1"/><text x="5.8794%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="5.6294%" y="629" width="0.0242%" height="15" fill="rgb(236,182,39)" fg:x="233" fg:w="1"/><text x="5.8794%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="5.6294%" y="613" width="0.0242%" height="15" fill="rgb(212,144,35)" fg:x="233" fg:w="1"/><text x="5.8794%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="5.6294%" y="597" width="0.0242%" height="15" fill="rgb(228,63,44)" fg:x="233" fg:w="1"/><text x="5.8794%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="5.6294%" y="581" width="0.0242%" height="15" fill="rgb(228,109,6)" fg:x="233" fg:w="1"/><text x="5.8794%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="5.6294%" y="565" width="0.0242%" height="15" fill="rgb(238,117,24)" fg:x="233" fg:w="1"/><text x="5.8794%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="5.6294%" y="549" width="0.0242%" height="15" fill="rgb(242,26,26)" fg:x="233" fg:w="1"/><text x="5.8794%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="5.6294%" y="533" width="0.0242%" height="15" fill="rgb(221,92,48)" fg:x="233" fg:w="1"/><text x="5.8794%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="5.6294%" y="517" width="0.0242%" height="15" fill="rgb(209,209,32)" fg:x="233" fg:w="1"/><text x="5.8794%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="5.6294%" y="501" width="0.0242%" height="15" fill="rgb(221,70,22)" fg:x="233" fg:w="1"/><text x="5.8794%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="5.6294%" y="485" width="0.0242%" height="15" fill="rgb(248,145,5)" fg:x="233" fg:w="1"/><text x="5.8794%" y="495.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="5.6294%" y="469" width="0.0242%" height="15" fill="rgb(226,116,26)" fg:x="233" fg:w="1"/><text x="5.8794%" y="479.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="5.6294%" y="453" width="0.0242%" height="15" fill="rgb(244,5,17)" fg:x="233" fg:w="1"/><text x="5.8794%" y="463.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="5.6294%" y="437" width="0.0242%" height="15" fill="rgb(252,159,33)" fg:x="233" fg:w="1"/><text x="5.8794%" y="447.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 0.02%)</title><rect x="5.6535%" y="693" width="0.0242%" height="15" fill="rgb(206,71,0)" fg:x="234" fg:w="1"/><text x="5.9035%" y="703.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u64&gt;::from_str (1 samples, 0.02%)</title><rect x="5.6535%" y="677" width="0.0242%" height="15" fill="rgb(233,118,54)" fg:x="234" fg:w="1"/><text x="5.9035%" y="687.50"></text></g><g><title>core::num::from_str_radix (1 samples, 0.02%)</title><rect x="5.6535%" y="661" width="0.0242%" height="15" fill="rgb(234,83,48)" fg:x="234" fg:w="1"/><text x="5.9035%" y="671.50"></text></g><g><title>&lt;u64 as core::num::FromStrRadixHelper&gt;::checked_mul (1 samples, 0.02%)</title><rect x="5.6535%" y="645" width="0.0242%" height="15" fill="rgb(228,3,54)" fg:x="234" fg:w="1"/><text x="5.9035%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_mul (1 samples, 0.02%)</title><rect x="5.6535%" y="629" width="0.0242%" height="15" fill="rgb(226,155,13)" fg:x="234" fg:w="1"/><text x="5.9035%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_mul (1 samples, 0.02%)</title><rect x="5.6535%" y="613" width="0.0242%" height="15" fill="rgb(241,28,37)" fg:x="234" fg:w="1"/><text x="5.9035%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (150 samples, 3.62%)</title><rect x="2.0778%" y="933" width="3.6241%" height="15" fill="rgb(233,93,10)" fg:x="86" fg:w="150"/><text x="2.3278%" y="943.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (150 samples, 3.62%)</title><rect x="2.0778%" y="917" width="3.6241%" height="15" fill="rgb(225,113,19)" fg:x="86" fg:w="150"/><text x="2.3278%" y="927.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (150 samples, 3.62%)</title><rect x="2.0778%" y="901" width="3.6241%" height="15" fill="rgb(241,2,18)" fg:x="86" fg:w="150"/><text x="2.3278%" y="911.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (150 samples, 3.62%)</title><rect x="2.0778%" y="885" width="3.6241%" height="15" fill="rgb(228,207,21)" fg:x="86" fg:w="150"/><text x="2.3278%" y="895.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (150 samples, 3.62%)</title><rect x="2.0778%" y="869" width="3.6241%" height="15" fill="rgb(213,211,35)" fg:x="86" fg:w="150"/><text x="2.3278%" y="879.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (150 samples, 3.62%)</title><rect x="2.0778%" y="853" width="3.6241%" height="15" fill="rgb(209,83,10)" fg:x="86" fg:w="150"/><text x="2.3278%" y="863.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (150 samples, 3.62%)</title><rect x="2.0778%" y="837" width="3.6241%" height="15" fill="rgb(209,164,1)" fg:x="86" fg:w="150"/><text x="2.3278%" y="847.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (150 samples, 3.62%)</title><rect x="2.0778%" y="821" width="3.6241%" height="15" fill="rgb(213,184,43)" fg:x="86" fg:w="150"/><text x="2.3278%" y="831.50">core..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (150 samples, 3.62%)</title><rect x="2.0778%" y="805" width="3.6241%" height="15" fill="rgb(231,61,34)" fg:x="86" fg:w="150"/><text x="2.3278%" y="815.50">core..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (150 samples, 3.62%)</title><rect x="2.0778%" y="789" width="3.6241%" height="15" fill="rgb(235,75,3)" fg:x="86" fg:w="150"/><text x="2.3278%" y="799.50">core..</text></g><g><title>y2021::d05::main::read_path_to_lines::{{closure}} (3 samples, 0.07%)</title><rect x="5.6294%" y="773" width="0.0725%" height="15" fill="rgb(220,106,47)" fg:x="233" fg:w="3"/><text x="5.8794%" y="783.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (3 samples, 0.07%)</title><rect x="5.6294%" y="757" width="0.0725%" height="15" fill="rgb(210,196,33)" fg:x="233" fg:w="3"/><text x="5.8794%" y="767.50"></text></g><g><title>&lt;y2021::types::line::Line as core::str::traits::FromStr&gt;::from_str (3 samples, 0.07%)</title><rect x="5.6294%" y="741" width="0.0725%" height="15" fill="rgb(229,154,42)" fg:x="233" fg:w="3"/><text x="5.8794%" y="751.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (3 samples, 0.07%)</title><rect x="5.6294%" y="725" width="0.0725%" height="15" fill="rgb(228,114,26)" fg:x="233" fg:w="3"/><text x="5.8794%" y="735.50"></text></g><g><title>&lt;y2021::types::point::Point as core::str::traits::FromStr&gt;::from_str (3 samples, 0.07%)</title><rect x="5.6294%" y="709" width="0.0725%" height="15" fill="rgb(208,144,1)" fg:x="233" fg:w="3"/><text x="5.8794%" y="719.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (1 samples, 0.02%)</title><rect x="5.6777%" y="693" width="0.0242%" height="15" fill="rgb(239,112,37)" fg:x="235" fg:w="1"/><text x="5.9277%" y="703.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.02%)</title><rect x="5.6777%" y="677" width="0.0242%" height="15" fill="rgb(210,96,50)" fg:x="235" fg:w="1"/><text x="5.9277%" y="687.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.02%)</title><rect x="5.6777%" y="661" width="0.0242%" height="15" fill="rgb(222,178,2)" fg:x="235" fg:w="1"/><text x="5.9277%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.10%)</title><rect x="5.7019%" y="933" width="0.0966%" height="15" fill="rgb(226,74,18)" fg:x="236" fg:w="4"/><text x="5.9519%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.10%)</title><rect x="5.7019%" y="917" width="0.0966%" height="15" fill="rgb(225,67,54)" fg:x="236" fg:w="4"/><text x="5.9519%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.10%)</title><rect x="5.7019%" y="901" width="0.0966%" height="15" fill="rgb(251,92,32)" fg:x="236" fg:w="4"/><text x="5.9519%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.10%)</title><rect x="5.7019%" y="885" width="0.0966%" height="15" fill="rgb(228,149,22)" fg:x="236" fg:w="4"/><text x="5.9519%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.10%)</title><rect x="5.7019%" y="869" width="0.0966%" height="15" fill="rgb(243,54,13)" fg:x="236" fg:w="4"/><text x="5.9519%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.10%)</title><rect x="5.7019%" y="853" width="0.0966%" height="15" fill="rgb(243,180,28)" fg:x="236" fg:w="4"/><text x="5.9519%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="5.7743%" y="837" width="0.0242%" height="15" fill="rgb(208,167,24)" fg:x="239" fg:w="1"/><text x="6.0243%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.02%)</title><rect x="5.7743%" y="821" width="0.0242%" height="15" fill="rgb(245,73,45)" fg:x="239" fg:w="1"/><text x="6.0243%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="5.7743%" y="805" width="0.0242%" height="15" fill="rgb(237,203,48)" fg:x="239" fg:w="1"/><text x="6.0243%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="5.7743%" y="789" width="0.0242%" height="15" fill="rgb(211,197,16)" fg:x="239" fg:w="1"/><text x="6.0243%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="5.7743%" y="773" width="0.0242%" height="15" fill="rgb(243,99,51)" fg:x="239" fg:w="1"/><text x="6.0243%" y="783.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="5.7743%" y="757" width="0.0242%" height="15" fill="rgb(215,123,29)" fg:x="239" fg:w="1"/><text x="6.0243%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="5.7743%" y="741" width="0.0242%" height="15" fill="rgb(239,186,37)" fg:x="239" fg:w="1"/><text x="6.0243%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="5.7743%" y="725" width="0.0242%" height="15" fill="rgb(252,136,39)" fg:x="239" fg:w="1"/><text x="6.0243%" y="735.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="5.7743%" y="709" width="0.0242%" height="15" fill="rgb(223,213,32)" fg:x="239" fg:w="1"/><text x="6.0243%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::types::point::Point,i32&gt;&gt; (1 samples, 0.02%)</title><rect x="5.7985%" y="933" width="0.0242%" height="15" fill="rgb(233,115,5)" fg:x="240" fg:w="1"/><text x="6.0485%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::types::point::Point,i32,std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.02%)</title><rect x="5.7985%" y="917" width="0.0242%" height="15" fill="rgb(207,226,44)" fg:x="240" fg:w="1"/><text x="6.0485%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::types::point::Point,i32)&gt;&gt; (1 samples, 0.02%)</title><rect x="5.7985%" y="901" width="0.0242%" height="15" fill="rgb(208,126,0)" fg:x="240" fg:w="1"/><text x="6.0485%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="5.7985%" y="885" width="0.0242%" height="15" fill="rgb(244,66,21)" fg:x="240" fg:w="1"/><text x="6.0485%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (1 samples, 0.02%)</title><rect x="5.7985%" y="869" width="0.0242%" height="15" fill="rgb(222,97,12)" fg:x="240" fg:w="1"/><text x="6.0485%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.02%)</title><rect x="5.7985%" y="853" width="0.0242%" height="15" fill="rgb(219,213,19)" fg:x="240" fg:w="1"/><text x="6.0485%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="5.7985%" y="837" width="0.0242%" height="15" fill="rgb(252,169,30)" fg:x="240" fg:w="1"/><text x="6.0485%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="5.7985%" y="821" width="0.0242%" height="15" fill="rgb(206,32,51)" fg:x="240" fg:w="1"/><text x="6.0485%" y="831.50"></text></g><g><title>__GI_munmap (1 samples, 0.02%)</title><rect x="5.7985%" y="805" width="0.0242%" height="15" fill="rgb(250,172,42)" fg:x="240" fg:w="1"/><text x="6.0485%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="5.7985%" y="789" width="0.0242%" height="15" fill="rgb(209,34,43)" fg:x="240" fg:w="1"/><text x="6.0485%" y="799.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="5.7985%" y="773" width="0.0242%" height="15" fill="rgb(223,11,35)" fg:x="240" fg:w="1"/><text x="6.0485%" y="783.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="5.7985%" y="757" width="0.0242%" height="15" fill="rgb(251,219,26)" fg:x="240" fg:w="1"/><text x="6.0485%" y="767.50"></text></g><g><title>__vm_munmap (1 samples, 0.02%)</title><rect x="5.7985%" y="741" width="0.0242%" height="15" fill="rgb(231,119,3)" fg:x="240" fg:w="1"/><text x="6.0485%" y="751.50"></text></g><g><title>__do_munmap (1 samples, 0.02%)</title><rect x="5.7985%" y="725" width="0.0242%" height="15" fill="rgb(216,97,11)" fg:x="240" fg:w="1"/><text x="6.0485%" y="735.50"></text></g><g><title>unmap_region (1 samples, 0.02%)</title><rect x="5.7985%" y="709" width="0.0242%" height="15" fill="rgb(223,59,9)" fg:x="240" fg:w="1"/><text x="6.0485%" y="719.50"></text></g><g><title>unmap_vmas (1 samples, 0.02%)</title><rect x="5.7985%" y="693" width="0.0242%" height="15" fill="rgb(233,93,31)" fg:x="240" fg:w="1"/><text x="6.0485%" y="703.50"></text></g><g><title>unmap_single_vma (1 samples, 0.02%)</title><rect x="5.7985%" y="677" width="0.0242%" height="15" fill="rgb(239,81,33)" fg:x="240" fg:w="1"/><text x="6.0485%" y="687.50"></text></g><g><title>unmap_page_range (1 samples, 0.02%)</title><rect x="5.7985%" y="661" width="0.0242%" height="15" fill="rgb(213,120,34)" fg:x="240" fg:w="1"/><text x="6.0485%" y="671.50"></text></g><g><title>zap_pte_range.isra.0 (1 samples, 0.02%)</title><rect x="5.7985%" y="645" width="0.0242%" height="15" fill="rgb(243,49,53)" fg:x="240" fg:w="1"/><text x="6.0485%" y="655.50"></text></g><g><title>__tlb_remove_page_size (1 samples, 0.02%)</title><rect x="5.7985%" y="629" width="0.0242%" height="15" fill="rgb(247,216,33)" fg:x="240" fg:w="1"/><text x="6.0485%" y="639.50"></text></g><g><title>__get_free_pages (1 samples, 0.02%)</title><rect x="5.7985%" y="613" width="0.0242%" height="15" fill="rgb(226,26,14)" fg:x="240" fg:w="1"/><text x="6.0485%" y="623.50"></text></g><g><title>alloc_pages_current (1 samples, 0.02%)</title><rect x="5.7985%" y="597" width="0.0242%" height="15" fill="rgb(215,49,53)" fg:x="240" fg:w="1"/><text x="6.0485%" y="607.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="5.7985%" y="581" width="0.0242%" height="15" fill="rgb(245,162,40)" fg:x="240" fg:w="1"/><text x="6.0485%" y="591.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="5.7985%" y="565" width="0.0242%" height="15" fill="rgb(229,68,17)" fg:x="240" fg:w="1"/><text x="6.0485%" y="575.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="5.7985%" y="549" width="0.0242%" height="15" fill="rgb(213,182,10)" fg:x="240" fg:w="1"/><text x="6.0485%" y="559.50"></text></g><g><title>y2021::d05::main::p01 (156 samples, 3.77%)</title><rect x="2.0778%" y="949" width="3.7690%" height="15" fill="rgb(245,125,30)" fg:x="86" fg:w="156"/><text x="2.3278%" y="959.50">y202..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (1 samples, 0.02%)</title><rect x="5.8227%" y="933" width="0.0242%" height="15" fill="rgb(232,202,2)" fg:x="241" fg:w="1"/><text x="6.0727%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="5.8227%" y="917" width="0.0242%" height="15" fill="rgb(237,140,51)" fg:x="241" fg:w="1"/><text x="6.0727%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="5.8227%" y="901" width="0.0242%" height="15" fill="rgb(236,157,25)" fg:x="241" fg:w="1"/><text x="6.0727%" y="911.50"></text></g><g><title>std::collections::hash::map::RandomState::new (1 samples, 0.02%)</title><rect x="5.8227%" y="885" width="0.0242%" height="15" fill="rgb(219,209,0)" fg:x="241" fg:w="1"/><text x="6.0727%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="5.8227%" y="869" width="0.0242%" height="15" fill="rgb(240,116,54)" fg:x="241" fg:w="1"/><text x="6.0727%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="5.8227%" y="853" width="0.0242%" height="15" fill="rgb(216,10,36)" fg:x="241" fg:w="1"/><text x="6.0727%" y="863.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (1 samples, 0.02%)</title><rect x="5.8227%" y="837" width="0.0242%" height="15" fill="rgb(222,72,44)" fg:x="241" fg:w="1"/><text x="6.0727%" y="847.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="5.8227%" y="821" width="0.0242%" height="15" fill="rgb(232,159,9)" fg:x="241" fg:w="1"/><text x="6.0727%" y="831.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.02%)</title><rect x="5.8227%" y="805" width="0.0242%" height="15" fill="rgb(210,39,32)" fg:x="241" fg:w="1"/><text x="6.0727%" y="815.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect x="5.8227%" y="789" width="0.0242%" height="15" fill="rgb(216,194,45)" fg:x="241" fg:w="1"/><text x="6.0727%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="5.8227%" y="773" width="0.0242%" height="15" fill="rgb(218,18,35)" fg:x="241" fg:w="1"/><text x="6.0727%" y="783.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__init (1 samples, 0.02%)</title><rect x="5.8227%" y="757" width="0.0242%" height="15" fill="rgb(207,83,51)" fg:x="241" fg:w="1"/><text x="6.0727%" y="767.50"></text></g><g><title>std::sys::unix::rand::hashmap_random_keys (1 samples, 0.02%)</title><rect x="5.8227%" y="741" width="0.0242%" height="15" fill="rgb(225,63,43)" fg:x="241" fg:w="1"/><text x="6.0727%" y="751.50"></text></g><g><title>std::sys::unix::rand::imp::fill_bytes (1 samples, 0.02%)</title><rect x="5.8227%" y="725" width="0.0242%" height="15" fill="rgb(207,57,36)" fg:x="241" fg:w="1"/><text x="6.0727%" y="735.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom_fill_bytes (1 samples, 0.02%)</title><rect x="5.8227%" y="709" width="0.0242%" height="15" fill="rgb(216,99,33)" fg:x="241" fg:w="1"/><text x="6.0727%" y="719.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom (1 samples, 0.02%)</title><rect x="5.8227%" y="693" width="0.0242%" height="15" fill="rgb(225,42,16)" fg:x="241" fg:w="1"/><text x="6.0727%" y="703.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom::getrandom (1 samples, 0.02%)</title><rect x="5.8227%" y="677" width="0.0242%" height="15" fill="rgb(220,201,45)" fg:x="241" fg:w="1"/><text x="6.0727%" y="687.50"></text></g><g><title>std::sys::unix::weak::Weak&lt;F&gt;::get (1 samples, 0.02%)</title><rect x="5.8227%" y="661" width="0.0242%" height="15" fill="rgb(225,33,4)" fg:x="241" fg:w="1"/><text x="6.0727%" y="671.50"></text></g><g><title>std::sys::unix::weak::Weak&lt;F&gt;::initialize (1 samples, 0.02%)</title><rect x="5.8227%" y="645" width="0.0242%" height="15" fill="rgb(224,33,50)" fg:x="241" fg:w="1"/><text x="6.0727%" y="655.50"></text></g><g><title>std::sys::unix::weak::fetch (1 samples, 0.02%)</title><rect x="5.8227%" y="629" width="0.0242%" height="15" fill="rgb(246,198,51)" fg:x="241" fg:w="1"/><text x="6.0727%" y="639.50"></text></g><g><title>__dlsym (1 samples, 0.02%)</title><rect x="5.8227%" y="613" width="0.0242%" height="15" fill="rgb(205,22,4)" fg:x="241" fg:w="1"/><text x="6.0727%" y="623.50"></text></g><g><title>_dlerror_run (1 samples, 0.02%)</title><rect x="5.8227%" y="597" width="0.0242%" height="15" fill="rgb(206,3,8)" fg:x="241" fg:w="1"/><text x="6.0727%" y="607.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.02%)</title><rect x="5.8227%" y="581" width="0.0242%" height="15" fill="rgb(251,23,15)" fg:x="241" fg:w="1"/><text x="6.0727%" y="591.50"></text></g><g><title>init (1 samples, 0.02%)</title><rect x="5.8227%" y="565" width="0.0242%" height="15" fill="rgb(252,88,28)" fg:x="241" fg:w="1"/><text x="6.0727%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (15 samples, 0.36%)</title><rect x="6.9340%" y="645" width="0.3624%" height="15" fill="rgb(212,127,14)" fg:x="287" fg:w="15"/><text x="7.1840%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (15 samples, 0.36%)</title><rect x="6.9340%" y="629" width="0.3624%" height="15" fill="rgb(247,145,37)" fg:x="287" fg:w="15"/><text x="7.1840%" y="639.50"></text></g><g><title>core::ptr::write (15 samples, 0.36%)</title><rect x="6.9340%" y="613" width="0.3624%" height="15" fill="rgb(209,117,53)" fg:x="287" fg:w="15"/><text x="7.1840%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.02%)</title><rect x="7.2964%" y="645" width="0.0242%" height="15" fill="rgb(212,90,42)" fg:x="302" fg:w="1"/><text x="7.5464%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.02%)</title><rect x="7.2964%" y="629" width="0.0242%" height="15" fill="rgb(218,164,37)" fg:x="302" fg:w="1"/><text x="7.5464%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="7.2964%" y="613" width="0.0242%" height="15" fill="rgb(246,65,34)" fg:x="302" fg:w="1"/><text x="7.5464%" y="623.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.02%)</title><rect x="7.2964%" y="597" width="0.0242%" height="15" fill="rgb(231,100,33)" fg:x="302" fg:w="1"/><text x="7.5464%" y="607.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="7.2964%" y="581" width="0.0242%" height="15" fill="rgb(228,126,14)" fg:x="302" fg:w="1"/><text x="7.5464%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (5 samples, 0.12%)</title><rect x="7.3448%" y="613" width="0.1208%" height="15" fill="rgb(215,173,21)" fg:x="304" fg:w="5"/><text x="7.5948%" y="623.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.02%)</title><rect x="7.4656%" y="613" width="0.0242%" height="15" fill="rgb(210,6,40)" fg:x="309" fg:w="1"/><text x="7.7156%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (8 samples, 0.19%)</title><rect x="7.3206%" y="629" width="0.1933%" height="15" fill="rgb(212,48,18)" fg:x="303" fg:w="8"/><text x="7.5706%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="7.4897%" y="613" width="0.0242%" height="15" fill="rgb(230,214,11)" fg:x="310" fg:w="1"/><text x="7.7397%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="7.4897%" y="597" width="0.0242%" height="15" fill="rgb(254,105,39)" fg:x="310" fg:w="1"/><text x="7.7397%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="7.4897%" y="581" width="0.0242%" height="15" fill="rgb(245,158,5)" fg:x="310" fg:w="1"/><text x="7.7397%" y="591.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (28 samples, 0.68%)</title><rect x="6.8616%" y="709" width="0.6765%" height="15" fill="rgb(249,208,11)" fg:x="284" fg:w="28"/><text x="7.1116%" y="719.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (28 samples, 0.68%)</title><rect x="6.8616%" y="693" width="0.6765%" height="15" fill="rgb(210,39,28)" fg:x="284" fg:w="28"/><text x="7.1116%" y="703.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (28 samples, 0.68%)</title><rect x="6.8616%" y="677" width="0.6765%" height="15" fill="rgb(211,56,53)" fg:x="284" fg:w="28"/><text x="7.1116%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (26 samples, 0.63%)</title><rect x="6.9099%" y="661" width="0.6282%" height="15" fill="rgb(226,201,30)" fg:x="286" fg:w="26"/><text x="7.1599%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (9 samples, 0.22%)</title><rect x="7.3206%" y="645" width="0.2174%" height="15" fill="rgb(239,101,34)" fg:x="303" fg:w="9"/><text x="7.5706%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.02%)</title><rect x="7.5139%" y="629" width="0.0242%" height="15" fill="rgb(226,209,5)" fg:x="311" fg:w="1"/><text x="7.7639%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.02%)</title><rect x="7.5139%" y="613" width="0.0242%" height="15" fill="rgb(250,105,47)" fg:x="311" fg:w="1"/><text x="7.7639%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="7.6589%" y="613" width="0.0242%" height="15" fill="rgb(230,72,3)" fg:x="317" fg:w="1"/><text x="7.9089%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="7.6589%" y="597" width="0.0242%" height="15" fill="rgb(232,218,39)" fg:x="317" fg:w="1"/><text x="7.9089%" y="607.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="7.6830%" y="245" width="0.0242%" height="15" fill="rgb(248,166,6)" fg:x="318" fg:w="1"/><text x="7.9330%" y="255.50"></text></g><g><title>tlb_finish_mmu (2 samples, 0.05%)</title><rect x="7.6830%" y="341" width="0.0483%" height="15" fill="rgb(247,89,20)" fg:x="318" fg:w="2"/><text x="7.9330%" y="351.50"></text></g><g><title>tlb_flush_mmu (2 samples, 0.05%)</title><rect x="7.6830%" y="325" width="0.0483%" height="15" fill="rgb(248,130,54)" fg:x="318" fg:w="2"/><text x="7.9330%" y="335.50"></text></g><g><title>free_pages_and_swap_cache (2 samples, 0.05%)</title><rect x="7.6830%" y="309" width="0.0483%" height="15" fill="rgb(234,196,4)" fg:x="318" fg:w="2"/><text x="7.9330%" y="319.50"></text></g><g><title>release_pages (2 samples, 0.05%)</title><rect x="7.6830%" y="293" width="0.0483%" height="15" fill="rgb(250,143,31)" fg:x="318" fg:w="2"/><text x="7.9330%" y="303.50"></text></g><g><title>free_unref_page_list (2 samples, 0.05%)</title><rect x="7.6830%" y="277" width="0.0483%" height="15" fill="rgb(211,110,34)" fg:x="318" fg:w="2"/><text x="7.9330%" y="287.50"></text></g><g><title>free_unref_page_commit (2 samples, 0.05%)</title><rect x="7.6830%" y="261" width="0.0483%" height="15" fill="rgb(215,124,48)" fg:x="318" fg:w="2"/><text x="7.9330%" y="271.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.02%)</title><rect x="7.7072%" y="245" width="0.0242%" height="15" fill="rgb(216,46,13)" fg:x="319" fg:w="1"/><text x="7.9572%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (3 samples, 0.07%)</title><rect x="7.6830%" y="613" width="0.0725%" height="15" fill="rgb(205,184,25)" fg:x="318" fg:w="3"/><text x="7.9330%" y="623.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="7.6830%" y="597" width="0.0725%" height="15" fill="rgb(228,1,10)" fg:x="318" fg:w="3"/><text x="7.9330%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (3 samples, 0.07%)</title><rect x="7.6830%" y="581" width="0.0725%" height="15" fill="rgb(213,116,27)" fg:x="318" fg:w="3"/><text x="7.9330%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (3 samples, 0.07%)</title><rect x="7.6830%" y="565" width="0.0725%" height="15" fill="rgb(241,95,50)" fg:x="318" fg:w="3"/><text x="7.9330%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="7.6830%" y="549" width="0.0725%" height="15" fill="rgb(238,48,32)" fg:x="318" fg:w="3"/><text x="7.9330%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="7.6830%" y="533" width="0.0725%" height="15" fill="rgb(235,113,49)" fg:x="318" fg:w="3"/><text x="7.9330%" y="543.50"></text></g><g><title>_int_free (3 samples, 0.07%)</title><rect x="7.6830%" y="517" width="0.0725%" height="15" fill="rgb(205,127,43)" fg:x="318" fg:w="3"/><text x="7.9330%" y="527.50"></text></g><g><title>systrim (3 samples, 0.07%)</title><rect x="7.6830%" y="501" width="0.0725%" height="15" fill="rgb(250,162,2)" fg:x="318" fg:w="3"/><text x="7.9330%" y="511.50"></text></g><g><title>__GI___default_morecore (3 samples, 0.07%)</title><rect x="7.6830%" y="485" width="0.0725%" height="15" fill="rgb(220,13,41)" fg:x="318" fg:w="3"/><text x="7.9330%" y="495.50"></text></g><g><title>__GI___sbrk (3 samples, 0.07%)</title><rect x="7.6830%" y="469" width="0.0725%" height="15" fill="rgb(249,221,25)" fg:x="318" fg:w="3"/><text x="7.9330%" y="479.50"></text></g><g><title>__GI___sbrk (3 samples, 0.07%)</title><rect x="7.6830%" y="453" width="0.0725%" height="15" fill="rgb(215,208,19)" fg:x="318" fg:w="3"/><text x="7.9330%" y="463.50"></text></g><g><title>__brk (3 samples, 0.07%)</title><rect x="7.6830%" y="437" width="0.0725%" height="15" fill="rgb(236,175,2)" fg:x="318" fg:w="3"/><text x="7.9330%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="7.6830%" y="421" width="0.0725%" height="15" fill="rgb(241,52,2)" fg:x="318" fg:w="3"/><text x="7.9330%" y="431.50"></text></g><g><title>do_syscall_64 (3 samples, 0.07%)</title><rect x="7.6830%" y="405" width="0.0725%" height="15" fill="rgb(248,140,14)" fg:x="318" fg:w="3"/><text x="7.9330%" y="415.50"></text></g><g><title>__x64_sys_brk (3 samples, 0.07%)</title><rect x="7.6830%" y="389" width="0.0725%" height="15" fill="rgb(253,22,42)" fg:x="318" fg:w="3"/><text x="7.9330%" y="399.50"></text></g><g><title>__do_munmap (3 samples, 0.07%)</title><rect x="7.6830%" y="373" width="0.0725%" height="15" fill="rgb(234,61,47)" fg:x="318" fg:w="3"/><text x="7.9330%" y="383.50"></text></g><g><title>unmap_region (3 samples, 0.07%)</title><rect x="7.6830%" y="357" width="0.0725%" height="15" fill="rgb(208,226,15)" fg:x="318" fg:w="3"/><text x="7.9330%" y="367.50"></text></g><g><title>unmap_vmas (1 samples, 0.02%)</title><rect x="7.7313%" y="341" width="0.0242%" height="15" fill="rgb(217,221,4)" fg:x="320" fg:w="1"/><text x="7.9813%" y="351.50"></text></g><g><title>unmap_single_vma (1 samples, 0.02%)</title><rect x="7.7313%" y="325" width="0.0242%" height="15" fill="rgb(212,174,34)" fg:x="320" fg:w="1"/><text x="7.9813%" y="335.50"></text></g><g><title>unmap_page_range (1 samples, 0.02%)</title><rect x="7.7313%" y="309" width="0.0242%" height="15" fill="rgb(253,83,4)" fg:x="320" fg:w="1"/><text x="7.9813%" y="319.50"></text></g><g><title>zap_pte_range.isra.0 (1 samples, 0.02%)</title><rect x="7.7313%" y="293" width="0.0242%" height="15" fill="rgb(250,195,49)" fg:x="320" fg:w="1"/><text x="7.9813%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="8.0696%" y="517" width="0.0483%" height="15" fill="rgb(241,192,25)" fg:x="334" fg:w="2"/><text x="8.3196%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.10%)</title><rect x="8.0454%" y="533" width="0.0966%" height="15" fill="rgb(208,124,10)" fg:x="333" fg:w="4"/><text x="8.2954%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="8.1179%" y="517" width="0.0242%" height="15" fill="rgb(222,33,0)" fg:x="336" fg:w="1"/><text x="8.3679%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.29%)</title><rect x="8.1904%" y="517" width="0.2899%" height="15" fill="rgb(234,209,28)" fg:x="339" fg:w="12"/><text x="8.4404%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.60%)</title><rect x="7.9488%" y="581" width="0.6040%" height="15" fill="rgb(224,11,23)" fg:x="329" fg:w="25"/><text x="8.1988%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (25 samples, 0.60%)</title><rect x="7.9488%" y="565" width="0.6040%" height="15" fill="rgb(232,99,1)" fg:x="329" fg:w="25"/><text x="8.1988%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (25 samples, 0.60%)</title><rect x="7.9488%" y="549" width="0.6040%" height="15" fill="rgb(237,95,45)" fg:x="329" fg:w="25"/><text x="8.1988%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.41%)</title><rect x="8.1421%" y="533" width="0.4107%" height="15" fill="rgb(208,109,11)" fg:x="337" fg:w="17"/><text x="8.3921%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="8.4803%" y="517" width="0.0725%" height="15" fill="rgb(216,190,48)" fg:x="351" fg:w="3"/><text x="8.7303%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.05%)</title><rect x="8.5528%" y="581" width="0.0483%" height="15" fill="rgb(251,171,36)" fg:x="354" fg:w="2"/><text x="8.8028%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.05%)</title><rect x="8.5528%" y="565" width="0.0483%" height="15" fill="rgb(230,62,22)" fg:x="354" fg:w="2"/><text x="8.8028%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.05%)</title><rect x="8.5528%" y="549" width="0.0483%" height="15" fill="rgb(225,114,35)" fg:x="354" fg:w="2"/><text x="8.8028%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.05%)</title><rect x="8.5528%" y="533" width="0.0483%" height="15" fill="rgb(215,118,42)" fg:x="354" fg:w="2"/><text x="8.8028%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.17%)</title><rect x="9.2293%" y="469" width="0.1691%" height="15" fill="rgb(243,119,21)" fg:x="382" fg:w="7"/><text x="9.4793%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.31%)</title><rect x="9.1326%" y="485" width="0.3141%" height="15" fill="rgb(252,177,53)" fg:x="378" fg:w="13"/><text x="9.3826%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="9.3984%" y="469" width="0.0483%" height="15" fill="rgb(237,209,29)" fg:x="389" fg:w="2"/><text x="9.6484%" y="479.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (71 samples, 1.72%)</title><rect x="7.7555%" y="613" width="1.7154%" height="15" fill="rgb(212,65,23)" fg:x="321" fg:w="71"/><text x="8.0055%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (68 samples, 1.64%)</title><rect x="7.8280%" y="597" width="1.6429%" height="15" fill="rgb(230,222,46)" fg:x="324" fg:w="68"/><text x="8.0780%" y="607.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (36 samples, 0.87%)</title><rect x="8.6011%" y="581" width="0.8698%" height="15" fill="rgb(215,135,32)" fg:x="356" fg:w="36"/><text x="8.8511%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (33 samples, 0.80%)</title><rect x="8.6736%" y="565" width="0.7973%" height="15" fill="rgb(246,101,22)" fg:x="359" fg:w="33"/><text x="8.9236%" y="575.50"></text></g><g><title>core::hash::Hasher::write_usize (31 samples, 0.75%)</title><rect x="8.7219%" y="549" width="0.7490%" height="15" fill="rgb(206,107,13)" fg:x="361" fg:w="31"/><text x="8.9719%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (31 samples, 0.75%)</title><rect x="8.7219%" y="533" width="0.7490%" height="15" fill="rgb(250,100,44)" fg:x="361" fg:w="31"/><text x="8.9719%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (31 samples, 0.75%)</title><rect x="8.7219%" y="517" width="0.7490%" height="15" fill="rgb(231,147,38)" fg:x="361" fg:w="31"/><text x="8.9719%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (31 samples, 0.75%)</title><rect x="8.7219%" y="501" width="0.7490%" height="15" fill="rgb(229,8,40)" fg:x="361" fg:w="31"/><text x="8.9719%" y="511.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="9.4467%" y="485" width="0.0242%" height="15" fill="rgb(221,135,30)" fg:x="391" fg:w="1"/><text x="9.6967%" y="495.50"></text></g><g><title>clear_page_rep (10 samples, 0.24%)</title><rect x="9.7850%" y="421" width="0.2416%" height="15" fill="rgb(249,193,18)" fg:x="405" fg:w="10"/><text x="10.0350%" y="431.50"></text></g><g><title>alloc_pages_vma (15 samples, 0.36%)</title><rect x="9.7850%" y="469" width="0.3624%" height="15" fill="rgb(209,133,39)" fg:x="405" fg:w="15"/><text x="10.0350%" y="479.50"></text></g><g><title>__alloc_pages_nodemask (15 samples, 0.36%)</title><rect x="9.7850%" y="453" width="0.3624%" height="15" fill="rgb(232,100,14)" fg:x="405" fg:w="15"/><text x="10.0350%" y="463.50"></text></g><g><title>get_page_from_freelist (15 samples, 0.36%)</title><rect x="9.7850%" y="437" width="0.3624%" height="15" fill="rgb(224,185,1)" fg:x="405" fg:w="15"/><text x="10.0350%" y="447.50"></text></g><g><title>rmqueue (5 samples, 0.12%)</title><rect x="10.0266%" y="421" width="0.1208%" height="15" fill="rgb(223,139,8)" fg:x="415" fg:w="5"/><text x="10.2766%" y="431.50"></text></g><g><title>get_vma_policy.part.0 (1 samples, 0.02%)</title><rect x="10.1474%" y="469" width="0.0242%" height="15" fill="rgb(232,213,38)" fg:x="420" fg:w="1"/><text x="10.3974%" y="479.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="10.1957%" y="421" width="0.0242%" height="15" fill="rgb(207,94,22)" fg:x="422" fg:w="1"/><text x="10.4457%" y="431.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="10.1957%" y="405" width="0.0242%" height="15" fill="rgb(219,183,54)" fg:x="422" fg:w="1"/><text x="10.4457%" y="415.50"></text></g><g><title>page_mapping (1 samples, 0.02%)</title><rect x="10.2199%" y="421" width="0.0242%" height="15" fill="rgb(216,185,54)" fg:x="423" fg:w="1"/><text x="10.4699%" y="431.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (4 samples, 0.10%)</title><rect x="10.1715%" y="469" width="0.0966%" height="15" fill="rgb(254,217,39)" fg:x="421" fg:w="4"/><text x="10.4215%" y="479.50"></text></g><g><title>lru_cache_add (4 samples, 0.10%)</title><rect x="10.1715%" y="453" width="0.0966%" height="15" fill="rgb(240,178,23)" fg:x="421" fg:w="4"/><text x="10.4215%" y="463.50"></text></g><g><title>__pagevec_lru_add (4 samples, 0.10%)</title><rect x="10.1715%" y="437" width="0.0966%" height="15" fill="rgb(218,11,47)" fg:x="421" fg:w="4"/><text x="10.4215%" y="447.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="10.2440%" y="421" width="0.0242%" height="15" fill="rgb(218,51,51)" fg:x="424" fg:w="1"/><text x="10.4940%" y="431.50"></text></g><g><title>free_unref_page_list (1 samples, 0.02%)</title><rect x="10.2440%" y="405" width="0.0242%" height="15" fill="rgb(238,126,27)" fg:x="424" fg:w="1"/><text x="10.4940%" y="415.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="10.2923%" y="437" width="0.0242%" height="15" fill="rgb(249,202,22)" fg:x="426" fg:w="1"/><text x="10.5423%" y="447.50"></text></g><g><title>__mod_memcg_state (1 samples, 0.02%)</title><rect x="10.2923%" y="421" width="0.0242%" height="15" fill="rgb(254,195,49)" fg:x="426" fg:w="1"/><text x="10.5423%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (36 samples, 0.87%)</title><rect x="9.4709%" y="613" width="0.8698%" height="15" fill="rgb(208,123,14)" fg:x="392" fg:w="36"/><text x="9.7209%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (36 samples, 0.87%)</title><rect x="9.4709%" y="597" width="0.8698%" height="15" fill="rgb(224,200,8)" fg:x="392" fg:w="36"/><text x="9.7209%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36 samples, 0.87%)</title><rect x="9.4709%" y="581" width="0.8698%" height="15" fill="rgb(217,61,36)" fg:x="392" fg:w="36"/><text x="9.7209%" y="591.50"></text></g><g><title>asm_exc_page_fault (29 samples, 0.70%)</title><rect x="9.6400%" y="565" width="0.7007%" height="15" fill="rgb(206,35,45)" fg:x="399" fg:w="29"/><text x="9.8900%" y="575.50"></text></g><g><title>exc_page_fault (24 samples, 0.58%)</title><rect x="9.7608%" y="549" width="0.5799%" height="15" fill="rgb(217,65,33)" fg:x="404" fg:w="24"/><text x="10.0108%" y="559.50"></text></g><g><title>do_user_addr_fault (24 samples, 0.58%)</title><rect x="9.7608%" y="533" width="0.5799%" height="15" fill="rgb(222,158,48)" fg:x="404" fg:w="24"/><text x="10.0108%" y="543.50"></text></g><g><title>handle_mm_fault (24 samples, 0.58%)</title><rect x="9.7608%" y="517" width="0.5799%" height="15" fill="rgb(254,2,54)" fg:x="404" fg:w="24"/><text x="10.0108%" y="527.50"></text></g><g><title>__handle_mm_fault (24 samples, 0.58%)</title><rect x="9.7608%" y="501" width="0.5799%" height="15" fill="rgb(250,143,38)" fg:x="404" fg:w="24"/><text x="10.0108%" y="511.50"></text></g><g><title>do_anonymous_page (23 samples, 0.56%)</title><rect x="9.7850%" y="485" width="0.5557%" height="15" fill="rgb(248,25,0)" fg:x="405" fg:w="23"/><text x="10.0350%" y="495.50"></text></g><g><title>page_add_new_anon_rmap (3 samples, 0.07%)</title><rect x="10.2682%" y="469" width="0.0725%" height="15" fill="rgb(206,152,27)" fg:x="425" fg:w="3"/><text x="10.5182%" y="479.50"></text></g><g><title>__mod_lruvec_page_state (3 samples, 0.07%)</title><rect x="10.2682%" y="453" width="0.0725%" height="15" fill="rgb(240,77,30)" fg:x="425" fg:w="3"/><text x="10.5182%" y="463.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="10.3165%" y="437" width="0.0242%" height="15" fill="rgb(231,5,3)" fg:x="427" fg:w="1"/><text x="10.5665%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.10%)</title><rect x="10.6306%" y="581" width="0.0966%" height="15" fill="rgb(207,226,32)" fg:x="440" fg:w="4"/><text x="10.8806%" y="591.50"></text></g><g><title>hashbrown::raw::is_full (4 samples, 0.10%)</title><rect x="10.7272%" y="581" width="0.0966%" height="15" fill="rgb(222,207,47)" fg:x="444" fg:w="4"/><text x="10.9772%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (27 samples, 0.65%)</title><rect x="10.3407%" y="597" width="0.6523%" height="15" fill="rgb(229,115,45)" fg:x="428" fg:w="27"/><text x="10.5907%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (7 samples, 0.17%)</title><rect x="10.8239%" y="581" width="0.1691%" height="15" fill="rgb(224,191,6)" fg:x="448" fg:w="7"/><text x="11.0739%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.17%)</title><rect x="10.8239%" y="565" width="0.1691%" height="15" fill="rgb(230,227,24)" fg:x="448" fg:w="7"/><text x="11.0739%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (28 samples, 0.68%)</title><rect x="10.3407%" y="613" width="0.6765%" height="15" fill="rgb(228,80,19)" fg:x="428" fg:w="28"/><text x="10.5907%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.02%)</title><rect x="10.9930%" y="597" width="0.0242%" height="15" fill="rgb(247,229,0)" fg:x="455" fg:w="1"/><text x="11.2430%" y="607.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="10.9930%" y="581" width="0.0242%" height="15" fill="rgb(237,194,15)" fg:x="455" fg:w="1"/><text x="11.2430%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (141 samples, 3.41%)</title><rect x="7.6347%" y="677" width="3.4066%" height="15" fill="rgb(219,203,20)" fg:x="316" fg:w="141"/><text x="7.8847%" y="687.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (141 samples, 3.41%)</title><rect x="7.6347%" y="661" width="3.4066%" height="15" fill="rgb(234,128,8)" fg:x="316" fg:w="141"/><text x="7.8847%" y="671.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (141 samples, 3.41%)</title><rect x="7.6347%" y="645" width="3.4066%" height="15" fill="rgb(248,202,8)" fg:x="316" fg:w="141"/><text x="7.8847%" y="655.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (141 samples, 3.41%)</title><rect x="7.6347%" y="629" width="3.4066%" height="15" fill="rgb(206,104,37)" fg:x="316" fg:w="141"/><text x="7.8847%" y="639.50">has..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.02%)</title><rect x="11.0172%" y="613" width="0.0242%" height="15" fill="rgb(223,8,27)" fg:x="456" fg:w="1"/><text x="11.2672%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.02%)</title><rect x="11.0172%" y="597" width="0.0242%" height="15" fill="rgb(216,217,28)" fg:x="456" fg:w="1"/><text x="11.2672%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.02%)</title><rect x="11.0172%" y="581" width="0.0242%" height="15" fill="rgb(249,199,1)" fg:x="456" fg:w="1"/><text x="11.2672%" y="591.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.02%)</title><rect x="11.0172%" y="565" width="0.0242%" height="15" fill="rgb(240,85,17)" fg:x="456" fg:w="1"/><text x="11.2672%" y="575.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="11.0172%" y="549" width="0.0242%" height="15" fill="rgb(206,108,45)" fg:x="456" fg:w="1"/><text x="11.2672%" y="559.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="11.0172%" y="533" width="0.0242%" height="15" fill="rgb(245,210,41)" fg:x="456" fg:w="1"/><text x="11.2672%" y="543.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="11.0172%" y="517" width="0.0242%" height="15" fill="rgb(206,13,37)" fg:x="456" fg:w="1"/><text x="11.2672%" y="527.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="11.0172%" y="501" width="0.0242%" height="15" fill="rgb(250,61,18)" fg:x="456" fg:w="1"/><text x="11.2672%" y="511.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="11.0172%" y="485" width="0.0242%" height="15" fill="rgb(235,172,48)" fg:x="456" fg:w="1"/><text x="11.2672%" y="495.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="11.0172%" y="469" width="0.0242%" height="15" fill="rgb(249,201,17)" fg:x="456" fg:w="1"/><text x="11.2672%" y="479.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="11.0172%" y="453" width="0.0242%" height="15" fill="rgb(219,208,6)" fg:x="456" fg:w="1"/><text x="11.2672%" y="463.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="11.0172%" y="437" width="0.0242%" height="15" fill="rgb(248,31,23)" fg:x="456" fg:w="1"/><text x="11.2672%" y="447.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="11.0172%" y="421" width="0.0242%" height="15" fill="rgb(245,15,42)" fg:x="456" fg:w="1"/><text x="11.2672%" y="431.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="11.0172%" y="405" width="0.0242%" height="15" fill="rgb(222,217,39)" fg:x="456" fg:w="1"/><text x="11.2672%" y="415.50"></text></g><g><title>clear_page_rep (1 samples, 0.02%)</title><rect x="11.0172%" y="389" width="0.0242%" height="15" fill="rgb(210,219,27)" fg:x="456" fg:w="1"/><text x="11.2672%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="11.0896%" y="613" width="0.0242%" height="15" fill="rgb(252,166,36)" fg:x="459" fg:w="1"/><text x="11.3396%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="11.0896%" y="597" width="0.0242%" height="15" fill="rgb(245,132,34)" fg:x="459" fg:w="1"/><text x="11.3396%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.22%)</title><rect x="11.0413%" y="661" width="0.2174%" height="15" fill="rgb(236,54,3)" fg:x="457" fg:w="9"/><text x="11.2913%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.22%)</title><rect x="11.0413%" y="645" width="0.2174%" height="15" fill="rgb(241,173,43)" fg:x="457" fg:w="9"/><text x="11.2913%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.22%)</title><rect x="11.0413%" y="629" width="0.2174%" height="15" fill="rgb(215,190,9)" fg:x="457" fg:w="9"/><text x="11.2913%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.14%)</title><rect x="11.1138%" y="613" width="0.1450%" height="15" fill="rgb(242,101,16)" fg:x="460" fg:w="6"/><text x="11.3638%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="11.1863%" y="597" width="0.0725%" height="15" fill="rgb(223,190,21)" fg:x="463" fg:w="3"/><text x="11.4363%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="11.2588%" y="661" width="0.0242%" height="15" fill="rgb(215,228,25)" fg:x="466" fg:w="1"/><text x="11.5088%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.10%)</title><rect x="11.4520%" y="565" width="0.0966%" height="15" fill="rgb(225,36,22)" fg:x="474" fg:w="4"/><text x="11.7020%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="11.5245%" y="549" width="0.0242%" height="15" fill="rgb(251,106,46)" fg:x="477" fg:w="1"/><text x="11.7745%" y="559.50"></text></g><g><title>hashbrown::map::make_insert_hash (24 samples, 0.58%)</title><rect x="11.0413%" y="677" width="0.5799%" height="15" fill="rgb(208,90,1)" fg:x="457" fg:w="24"/><text x="11.2913%" y="687.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (14 samples, 0.34%)</title><rect x="11.2829%" y="661" width="0.3382%" height="15" fill="rgb(243,10,4)" fg:x="467" fg:w="14"/><text x="11.5329%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (14 samples, 0.34%)</title><rect x="11.2829%" y="645" width="0.3382%" height="15" fill="rgb(212,137,27)" fg:x="467" fg:w="14"/><text x="11.5329%" y="655.50"></text></g><g><title>core::hash::Hasher::write_usize (11 samples, 0.27%)</title><rect x="11.3554%" y="629" width="0.2658%" height="15" fill="rgb(231,220,49)" fg:x="470" fg:w="11"/><text x="11.6054%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.27%)</title><rect x="11.3554%" y="613" width="0.2658%" height="15" fill="rgb(237,96,20)" fg:x="470" fg:w="11"/><text x="11.6054%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.27%)</title><rect x="11.3554%" y="597" width="0.2658%" height="15" fill="rgb(239,229,30)" fg:x="470" fg:w="11"/><text x="11.6054%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.27%)</title><rect x="11.3554%" y="581" width="0.2658%" height="15" fill="rgb(219,65,33)" fg:x="470" fg:w="11"/><text x="11.6054%" y="591.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.07%)</title><rect x="11.5487%" y="565" width="0.0725%" height="15" fill="rgb(243,134,7)" fg:x="478" fg:w="3"/><text x="11.7987%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="12.1044%" y="629" width="0.0966%" height="15" fill="rgb(216,177,54)" fg:x="501" fg:w="4"/><text x="12.3544%" y="639.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.05%)</title><rect x="12.1527%" y="613" width="0.0483%" height="15" fill="rgb(211,160,20)" fg:x="503" fg:w="2"/><text x="12.4027%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.17%)</title><rect x="12.0802%" y="661" width="0.1691%" height="15" fill="rgb(239,85,39)" fg:x="500" fg:w="7"/><text x="12.3302%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.17%)</title><rect x="12.0802%" y="645" width="0.1691%" height="15" fill="rgb(232,125,22)" fg:x="500" fg:w="7"/><text x="12.3302%" y="655.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (2 samples, 0.05%)</title><rect x="12.2010%" y="629" width="0.0483%" height="15" fill="rgb(244,57,34)" fg:x="505" fg:w="2"/><text x="12.4510%" y="639.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="12.2493%" y="661" width="0.0242%" height="15" fill="rgb(214,203,32)" fg:x="507" fg:w="1"/><text x="12.4993%" y="671.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="12.2493%" y="645" width="0.0242%" height="15" fill="rgb(207,58,43)" fg:x="507" fg:w="1"/><text x="12.4993%" y="655.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="12.2493%" y="629" width="0.0242%" height="15" fill="rgb(215,193,15)" fg:x="507" fg:w="1"/><text x="12.4993%" y="639.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="12.2493%" y="613" width="0.0242%" height="15" fill="rgb(232,15,44)" fg:x="507" fg:w="1"/><text x="12.4993%" y="623.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="12.2493%" y="597" width="0.0242%" height="15" fill="rgb(212,3,48)" fg:x="507" fg:w="1"/><text x="12.4993%" y="607.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="12.2493%" y="581" width="0.0242%" height="15" fill="rgb(218,128,7)" fg:x="507" fg:w="1"/><text x="12.4993%" y="591.50"></text></g><g><title>tick_sched_handle.isra.0 (1 samples, 0.02%)</title><rect x="12.2493%" y="565" width="0.0242%" height="15" fill="rgb(226,216,39)" fg:x="507" fg:w="1"/><text x="12.4993%" y="575.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="12.2493%" y="549" width="0.0242%" height="15" fill="rgb(243,47,51)" fg:x="507" fg:w="1"/><text x="12.4993%" y="559.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="12.2493%" y="533" width="0.0242%" height="15" fill="rgb(241,183,40)" fg:x="507" fg:w="1"/><text x="12.4993%" y="543.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="12.2493%" y="517" width="0.0242%" height="15" fill="rgb(231,217,32)" fg:x="507" fg:w="1"/><text x="12.4993%" y="527.50"></text></g><g><title>perf_pmu_disable.part.0 (1 samples, 0.02%)</title><rect x="12.2493%" y="501" width="0.0242%" height="15" fill="rgb(229,61,38)" fg:x="507" fg:w="1"/><text x="12.4993%" y="511.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="12.2493%" y="485" width="0.0242%" height="15" fill="rgb(225,210,5)" fg:x="507" fg:w="1"/><text x="12.4993%" y="495.50"></text></g><g><title>amd_pmu_disable_all (1 samples, 0.02%)</title><rect x="12.2493%" y="469" width="0.0242%" height="15" fill="rgb(231,79,45)" fg:x="507" fg:w="1"/><text x="12.4993%" y="479.50"></text></g><g><title>amd_pmu_wait_on_overflow (1 samples, 0.02%)</title><rect x="12.2493%" y="453" width="0.0242%" height="15" fill="rgb(224,100,7)" fg:x="507" fg:w="1"/><text x="12.4993%" y="463.50"></text></g><g><title>__const_udelay (1 samples, 0.02%)</title><rect x="12.2493%" y="437" width="0.0242%" height="15" fill="rgb(241,198,18)" fg:x="507" fg:w="1"/><text x="12.4993%" y="447.50"></text></g><g><title>delay_halt_mwaitx (1 samples, 0.02%)</title><rect x="12.2493%" y="421" width="0.0242%" height="15" fill="rgb(252,97,53)" fg:x="507" fg:w="1"/><text x="12.4993%" y="431.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (206 samples, 4.98%)</title><rect x="7.5381%" y="693" width="4.9770%" height="15" fill="rgb(220,88,7)" fg:x="312" fg:w="206"/><text x="7.7881%" y="703.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (37 samples, 0.89%)</title><rect x="11.6212%" y="677" width="0.8939%" height="15" fill="rgb(213,176,14)" fg:x="481" fg:w="37"/><text x="11.8712%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (10 samples, 0.24%)</title><rect x="12.2735%" y="661" width="0.2416%" height="15" fill="rgb(246,73,7)" fg:x="508" fg:w="10"/><text x="12.5235%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (10 samples, 0.24%)</title><rect x="12.2735%" y="645" width="0.2416%" height="15" fill="rgb(245,64,36)" fg:x="508" fg:w="10"/><text x="12.5235%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (10 samples, 0.24%)</title><rect x="12.2735%" y="629" width="0.2416%" height="15" fill="rgb(245,80,10)" fg:x="508" fg:w="10"/><text x="12.5235%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.24%)</title><rect x="12.2735%" y="613" width="0.2416%" height="15" fill="rgb(232,107,50)" fg:x="508" fg:w="10"/><text x="12.5235%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (10 samples, 0.24%)</title><rect x="12.2735%" y="597" width="0.2416%" height="15" fill="rgb(253,3,0)" fg:x="508" fg:w="10"/><text x="12.5235%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (10 samples, 0.24%)</title><rect x="12.2735%" y="581" width="0.2416%" height="15" fill="rgb(212,99,53)" fg:x="508" fg:w="10"/><text x="12.5235%" y="591.50"></text></g><g><title>core::core_arch::simd::i8x16::new (10 samples, 0.24%)</title><rect x="12.2735%" y="565" width="0.2416%" height="15" fill="rgb(249,111,54)" fg:x="508" fg:w="10"/><text x="12.5235%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (291 samples, 7.03%)</title><rect x="5.8468%" y="741" width="7.0307%" height="15" fill="rgb(249,55,30)" fg:x="242" fg:w="291"/><text x="6.0968%" y="751.50">core::ops..</text></g><g><title>y2021::d05::main::p02::{{closure}} (283 samples, 6.84%)</title><rect x="6.0401%" y="725" width="6.8374%" height="15" fill="rgb(237,47,42)" fg:x="250" fg:w="283"/><text x="6.2901%" y="735.50">y2021::d0..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (221 samples, 5.34%)</title><rect x="7.5381%" y="709" width="5.3395%" height="15" fill="rgb(211,20,18)" fg:x="312" fg:w="221"/><text x="7.7881%" y="719.50">std::co..</text></g><g><title>std::collections::hash::map::map_entry (15 samples, 0.36%)</title><rect x="12.5151%" y="693" width="0.3624%" height="15" fill="rgb(231,203,46)" fg:x="518" fg:w="15"/><text x="12.7651%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (292 samples, 7.05%)</title><rect x="5.8468%" y="773" width="7.0548%" height="15" fill="rgb(237,142,3)" fg:x="242" fg:w="292"/><text x="6.0968%" y="783.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (292 samples, 7.05%)</title><rect x="5.8468%" y="757" width="7.0548%" height="15" fill="rgb(241,107,1)" fg:x="242" fg:w="292"/><text x="6.0968%" y="767.50">core::ite..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;y2021::types::point::Point&gt;&gt; (1 samples, 0.02%)</title><rect x="12.8775%" y="741" width="0.0242%" height="15" fill="rgb(229,83,13)" fg:x="533" fg:w="1"/><text x="13.1275%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="12.8775%" y="725" width="0.0242%" height="15" fill="rgb(241,91,40)" fg:x="533" fg:w="1"/><text x="13.1275%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;y2021::types::point::Point,alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="12.8775%" y="709" width="0.0242%" height="15" fill="rgb(225,3,45)" fg:x="533" fg:w="1"/><text x="13.1275%" y="719.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="12.8775%" y="693" width="0.0242%" height="15" fill="rgb(244,223,14)" fg:x="533" fg:w="1"/><text x="13.1275%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;y2021::types::point::Point&gt;&gt; (1 samples, 0.02%)</title><rect x="12.8775%" y="677" width="0.0242%" height="15" fill="rgb(224,124,37)" fg:x="533" fg:w="1"/><text x="13.1275%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="12.8775%" y="661" width="0.0242%" height="15" fill="rgb(251,171,30)" fg:x="533" fg:w="1"/><text x="13.1275%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="12.8775%" y="645" width="0.0242%" height="15" fill="rgb(236,46,54)" fg:x="533" fg:w="1"/><text x="13.1275%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="12.8775%" y="629" width="0.0242%" height="15" fill="rgb(245,213,5)" fg:x="533" fg:w="1"/><text x="13.1275%" y="639.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="12.8775%" y="613" width="0.0242%" height="15" fill="rgb(230,144,27)" fg:x="533" fg:w="1"/><text x="13.1275%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="12.9017%" y="549" width="0.0242%" height="15" fill="rgb(220,86,6)" fg:x="534" fg:w="1"/><text x="13.1517%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.02%)</title><rect x="12.9017%" y="533" width="0.0242%" height="15" fill="rgb(240,20,13)" fg:x="534" fg:w="1"/><text x="13.1517%" y="543.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="12.9017%" y="517" width="0.0242%" height="15" fill="rgb(217,89,34)" fg:x="534" fg:w="1"/><text x="13.1517%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (294 samples, 7.10%)</title><rect x="5.8468%" y="789" width="7.1032%" height="15" fill="rgb(229,13,5)" fg:x="242" fg:w="294"/><text x="6.0968%" y="799.50">core::iter..</text></g><g><title>y2021::d05::main::p02::{{closure}} (2 samples, 0.05%)</title><rect x="12.9017%" y="773" width="0.0483%" height="15" fill="rgb(244,67,35)" fg:x="534" fg:w="2"/><text x="13.1517%" y="783.50"></text></g><g><title>y2021::types::line::Line::points (2 samples, 0.05%)</title><rect x="12.9017%" y="757" width="0.0483%" height="15" fill="rgb(221,40,2)" fg:x="534" fg:w="2"/><text x="13.1517%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="12.9017%" y="741" width="0.0483%" height="15" fill="rgb(237,157,21)" fg:x="534" fg:w="2"/><text x="13.1517%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="12.9017%" y="725" width="0.0483%" height="15" fill="rgb(222,94,11)" fg:x="534" fg:w="2"/><text x="13.1517%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="12.9017%" y="709" width="0.0483%" height="15" fill="rgb(249,113,6)" fg:x="534" fg:w="2"/><text x="13.1517%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="12.9017%" y="693" width="0.0483%" height="15" fill="rgb(238,137,36)" fg:x="534" fg:w="2"/><text x="13.1517%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="12.9017%" y="677" width="0.0483%" height="15" fill="rgb(210,102,26)" fg:x="534" fg:w="2"/><text x="13.1517%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.05%)</title><rect x="12.9017%" y="661" width="0.0483%" height="15" fill="rgb(218,30,30)" fg:x="534" fg:w="2"/><text x="13.1517%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="12.9017%" y="645" width="0.0483%" height="15" fill="rgb(214,67,26)" fg:x="534" fg:w="2"/><text x="13.1517%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (2 samples, 0.05%)</title><rect x="12.9017%" y="629" width="0.0483%" height="15" fill="rgb(251,9,53)" fg:x="534" fg:w="2"/><text x="13.1517%" y="639.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (2 samples, 0.05%)</title><rect x="12.9017%" y="613" width="0.0483%" height="15" fill="rgb(228,204,25)" fg:x="534" fg:w="2"/><text x="13.1517%" y="623.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (2 samples, 0.05%)</title><rect x="12.9017%" y="597" width="0.0483%" height="15" fill="rgb(207,153,8)" fg:x="534" fg:w="2"/><text x="13.1517%" y="607.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (2 samples, 0.05%)</title><rect x="12.9017%" y="581" width="0.0483%" height="15" fill="rgb(242,9,16)" fg:x="534" fg:w="2"/><text x="13.1517%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.05%)</title><rect x="12.9017%" y="565" width="0.0483%" height="15" fill="rgb(217,211,10)" fg:x="534" fg:w="2"/><text x="13.1517%" y="575.50"></text></g><g><title>y2021::types::line::Line::points::{{closure}} (1 samples, 0.02%)</title><rect x="12.9258%" y="549" width="0.0242%" height="15" fill="rgb(219,228,52)" fg:x="535" fg:w="1"/><text x="13.1758%" y="559.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="12.9500%" y="709" width="0.0242%" height="15" fill="rgb(231,92,29)" fg:x="536" fg:w="1"/><text x="13.2000%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (296 samples, 7.15%)</title><rect x="5.8468%" y="805" width="7.1515%" height="15" fill="rgb(232,8,23)" fg:x="242" fg:w="296"/><text x="6.0968%" y="815.50">core::iter..</text></g><g><title>y2021::d05::main::read_path_to_lines::{{closure}} (2 samples, 0.05%)</title><rect x="12.9500%" y="789" width="0.0483%" height="15" fill="rgb(216,211,34)" fg:x="536" fg:w="2"/><text x="13.2000%" y="799.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2 samples, 0.05%)</title><rect x="12.9500%" y="773" width="0.0483%" height="15" fill="rgb(236,151,0)" fg:x="536" fg:w="2"/><text x="13.2000%" y="783.50"></text></g><g><title>&lt;y2021::types::line::Line as core::str::traits::FromStr&gt;::from_str (2 samples, 0.05%)</title><rect x="12.9500%" y="757" width="0.0483%" height="15" fill="rgb(209,168,3)" fg:x="536" fg:w="2"/><text x="13.2000%" y="767.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2 samples, 0.05%)</title><rect x="12.9500%" y="741" width="0.0483%" height="15" fill="rgb(208,129,28)" fg:x="536" fg:w="2"/><text x="13.2000%" y="751.50"></text></g><g><title>&lt;y2021::types::point::Point as core::str::traits::FromStr&gt;::from_str (2 samples, 0.05%)</title><rect x="12.9500%" y="725" width="0.0483%" height="15" fill="rgb(229,78,22)" fg:x="536" fg:w="2"/><text x="13.2000%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="12.9741%" y="709" width="0.0242%" height="15" fill="rgb(228,187,13)" fg:x="537" fg:w="1"/><text x="13.2241%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="12.9741%" y="693" width="0.0242%" height="15" fill="rgb(240,119,24)" fg:x="537" fg:w="1"/><text x="13.2241%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="12.9741%" y="677" width="0.0242%" height="15" fill="rgb(209,194,42)" fg:x="537" fg:w="1"/><text x="13.2241%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="12.9741%" y="661" width="0.0242%" height="15" fill="rgb(247,200,46)" fg:x="537" fg:w="1"/><text x="13.2241%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (297 samples, 7.18%)</title><rect x="5.8468%" y="933" width="7.1756%" height="15" fill="rgb(218,76,16)" fg:x="242" fg:w="297"/><text x="6.0968%" y="943.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (297 samples, 7.18%)</title><rect x="5.8468%" y="917" width="7.1756%" height="15" fill="rgb(225,21,48)" fg:x="242" fg:w="297"/><text x="6.0968%" y="927.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (297 samples, 7.18%)</title><rect x="5.8468%" y="901" width="7.1756%" height="15" fill="rgb(239,223,50)" fg:x="242" fg:w="297"/><text x="6.0968%" y="911.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (297 samples, 7.18%)</title><rect x="5.8468%" y="885" width="7.1756%" height="15" fill="rgb(244,45,21)" fg:x="242" fg:w="297"/><text x="6.0968%" y="895.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (297 samples, 7.18%)</title><rect x="5.8468%" y="869" width="7.1756%" height="15" fill="rgb(232,33,43)" fg:x="242" fg:w="297"/><text x="6.0968%" y="879.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (297 samples, 7.18%)</title><rect x="5.8468%" y="853" width="7.1756%" height="15" fill="rgb(209,8,3)" fg:x="242" fg:w="297"/><text x="6.0968%" y="863.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (297 samples, 7.18%)</title><rect x="5.8468%" y="837" width="7.1756%" height="15" fill="rgb(214,25,53)" fg:x="242" fg:w="297"/><text x="6.0968%" y="847.50">core::iter..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (297 samples, 7.18%)</title><rect x="5.8468%" y="821" width="7.1756%" height="15" fill="rgb(254,186,54)" fg:x="242" fg:w="297"/><text x="6.0968%" y="831.50">core::iter..</text></g><g><title>y2021::d05::main::read_path_to_lines::{{closure}} (1 samples, 0.02%)</title><rect x="12.9983%" y="805" width="0.0242%" height="15" fill="rgb(208,174,49)" fg:x="538" fg:w="1"/><text x="13.2483%" y="815.50"></text></g><g><title>y2021::utils::file::line_as_str (1 samples, 0.02%)</title><rect x="12.9983%" y="789" width="0.0242%" height="15" fill="rgb(233,191,51)" fg:x="538" fg:w="1"/><text x="13.2483%" y="799.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.05%)</title><rect x="13.1674%" y="709" width="0.0483%" height="15" fill="rgb(222,134,10)" fg:x="545" fg:w="2"/><text x="13.4174%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.22%)</title><rect x="13.0225%" y="933" width="0.2174%" height="15" fill="rgb(230,226,20)" fg:x="539" fg:w="9"/><text x="13.2725%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.22%)</title><rect x="13.0225%" y="917" width="0.2174%" height="15" fill="rgb(251,111,25)" fg:x="539" fg:w="9"/><text x="13.2725%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.22%)</title><rect x="13.0225%" y="901" width="0.2174%" height="15" fill="rgb(224,40,46)" fg:x="539" fg:w="9"/><text x="13.2725%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.22%)</title><rect x="13.0225%" y="885" width="0.2174%" height="15" fill="rgb(236,108,47)" fg:x="539" fg:w="9"/><text x="13.2725%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.22%)</title><rect x="13.0225%" y="869" width="0.2174%" height="15" fill="rgb(234,93,0)" fg:x="539" fg:w="9"/><text x="13.2725%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (9 samples, 0.22%)</title><rect x="13.0225%" y="853" width="0.2174%" height="15" fill="rgb(224,213,32)" fg:x="539" fg:w="9"/><text x="13.2725%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="13.1191%" y="837" width="0.1208%" height="15" fill="rgb(251,11,48)" fg:x="543" fg:w="5"/><text x="13.3691%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (5 samples, 0.12%)</title><rect x="13.1191%" y="821" width="0.1208%" height="15" fill="rgb(236,173,5)" fg:x="543" fg:w="5"/><text x="13.3691%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.12%)</title><rect x="13.1191%" y="805" width="0.1208%" height="15" fill="rgb(230,95,12)" fg:x="543" fg:w="5"/><text x="13.3691%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="13.1191%" y="789" width="0.1208%" height="15" fill="rgb(232,209,1)" fg:x="543" fg:w="5"/><text x="13.3691%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="13.1191%" y="773" width="0.1208%" height="15" fill="rgb(232,6,1)" fg:x="543" fg:w="5"/><text x="13.3691%" y="783.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="13.1191%" y="757" width="0.1208%" height="15" fill="rgb(210,224,50)" fg:x="543" fg:w="5"/><text x="13.3691%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="13.1191%" y="741" width="0.1208%" height="15" fill="rgb(228,127,35)" fg:x="543" fg:w="5"/><text x="13.3691%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="13.1191%" y="725" width="0.1208%" height="15" fill="rgb(245,102,45)" fg:x="543" fg:w="5"/><text x="13.3691%" y="735.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.02%)</title><rect x="13.2158%" y="709" width="0.0242%" height="15" fill="rgb(214,1,49)" fg:x="547" fg:w="1"/><text x="13.4658%" y="719.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="13.2399%" y="693" width="0.0242%" height="15" fill="rgb(226,163,40)" fg:x="548" fg:w="1"/><text x="13.4899%" y="703.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.02%)</title><rect x="13.2399%" y="677" width="0.0242%" height="15" fill="rgb(239,212,28)" fg:x="548" fg:w="1"/><text x="13.4899%" y="687.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="13.2399%" y="661" width="0.0242%" height="15" fill="rgb(220,20,13)" fg:x="548" fg:w="1"/><text x="13.4899%" y="671.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="13.2399%" y="645" width="0.0242%" height="15" fill="rgb(210,164,35)" fg:x="548" fg:w="1"/><text x="13.4899%" y="655.50"></text></g><g><title>free_unref_page_list (1 samples, 0.02%)</title><rect x="13.2399%" y="629" width="0.0242%" height="15" fill="rgb(248,109,41)" fg:x="548" fg:w="1"/><text x="13.4899%" y="639.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="13.2399%" y="613" width="0.0242%" height="15" fill="rgb(238,23,50)" fg:x="548" fg:w="1"/><text x="13.4899%" y="623.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.02%)</title><rect x="13.2399%" y="597" width="0.0242%" height="15" fill="rgb(211,48,49)" fg:x="548" fg:w="1"/><text x="13.4899%" y="607.50"></text></g><g><title>__GI_munmap (2 samples, 0.05%)</title><rect x="13.2399%" y="805" width="0.0483%" height="15" fill="rgb(223,36,21)" fg:x="548" fg:w="2"/><text x="13.4899%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="13.2399%" y="789" width="0.0483%" height="15" fill="rgb(207,123,46)" fg:x="548" fg:w="2"/><text x="13.4899%" y="799.50"></text></g><g><title>do_syscall_64 (2 samples, 0.05%)</title><rect x="13.2399%" y="773" width="0.0483%" height="15" fill="rgb(240,218,32)" fg:x="548" fg:w="2"/><text x="13.4899%" y="783.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.05%)</title><rect x="13.2399%" y="757" width="0.0483%" height="15" fill="rgb(252,5,43)" fg:x="548" fg:w="2"/><text x="13.4899%" y="767.50"></text></g><g><title>__vm_munmap (2 samples, 0.05%)</title><rect x="13.2399%" y="741" width="0.0483%" height="15" fill="rgb(252,84,19)" fg:x="548" fg:w="2"/><text x="13.4899%" y="751.50"></text></g><g><title>__do_munmap (2 samples, 0.05%)</title><rect x="13.2399%" y="725" width="0.0483%" height="15" fill="rgb(243,152,39)" fg:x="548" fg:w="2"/><text x="13.4899%" y="735.50"></text></g><g><title>unmap_region (2 samples, 0.05%)</title><rect x="13.2399%" y="709" width="0.0483%" height="15" fill="rgb(234,160,15)" fg:x="548" fg:w="2"/><text x="13.4899%" y="719.50"></text></g><g><title>unmap_vmas (1 samples, 0.02%)</title><rect x="13.2641%" y="693" width="0.0242%" height="15" fill="rgb(237,34,20)" fg:x="549" fg:w="1"/><text x="13.5141%" y="703.50"></text></g><g><title>unmap_single_vma (1 samples, 0.02%)</title><rect x="13.2641%" y="677" width="0.0242%" height="15" fill="rgb(229,97,13)" fg:x="549" fg:w="1"/><text x="13.5141%" y="687.50"></text></g><g><title>unmap_page_range (1 samples, 0.02%)</title><rect x="13.2641%" y="661" width="0.0242%" height="15" fill="rgb(234,71,50)" fg:x="549" fg:w="1"/><text x="13.5141%" y="671.50"></text></g><g><title>zap_pte_range.isra.0 (1 samples, 0.02%)</title><rect x="13.2641%" y="645" width="0.0242%" height="15" fill="rgb(253,155,4)" fg:x="549" fg:w="1"/><text x="13.5141%" y="655.50"></text></g><g><title>tlb_finish_mmu (3 samples, 0.07%)</title><rect x="13.2882%" y="629" width="0.0725%" height="15" fill="rgb(222,185,37)" fg:x="550" fg:w="3"/><text x="13.5382%" y="639.50"></text></g><g><title>tlb_flush_mmu (3 samples, 0.07%)</title><rect x="13.2882%" y="613" width="0.0725%" height="15" fill="rgb(251,177,13)" fg:x="550" fg:w="3"/><text x="13.5382%" y="623.50"></text></g><g><title>free_pages_and_swap_cache (3 samples, 0.07%)</title><rect x="13.2882%" y="597" width="0.0725%" height="15" fill="rgb(250,179,40)" fg:x="550" fg:w="3"/><text x="13.5382%" y="607.50"></text></g><g><title>release_pages (3 samples, 0.07%)</title><rect x="13.2882%" y="581" width="0.0725%" height="15" fill="rgb(242,44,2)" fg:x="550" fg:w="3"/><text x="13.5382%" y="591.50"></text></g><g><title>free_unref_page_list (3 samples, 0.07%)</title><rect x="13.2882%" y="565" width="0.0725%" height="15" fill="rgb(216,177,13)" fg:x="550" fg:w="3"/><text x="13.5382%" y="575.50"></text></g><g><title>free_unref_page_commit (3 samples, 0.07%)</title><rect x="13.2882%" y="549" width="0.0725%" height="15" fill="rgb(216,106,43)" fg:x="550" fg:w="3"/><text x="13.5382%" y="559.50"></text></g><g><title>free_pcppages_bulk (3 samples, 0.07%)</title><rect x="13.2882%" y="533" width="0.0725%" height="15" fill="rgb(216,183,2)" fg:x="550" fg:w="3"/><text x="13.5382%" y="543.50"></text></g><g><title>page_remove_rmap (1 samples, 0.02%)</title><rect x="13.3607%" y="581" width="0.0242%" height="15" fill="rgb(249,75,3)" fg:x="553" fg:w="1"/><text x="13.6107%" y="591.50"></text></g><g><title>y2021::d05::main::run (470 samples, 11.36%)</title><rect x="2.0778%" y="965" width="11.3554%" height="15" fill="rgb(219,67,39)" fg:x="86" fg:w="470"/><text x="2.3278%" y="975.50">y2021::d05::main:..</text></g><g><title>y2021::d05::main::p02 (314 samples, 7.59%)</title><rect x="5.8468%" y="949" width="7.5864%" height="15" fill="rgb(253,228,2)" fg:x="242" fg:w="314"/><text x="6.0968%" y="959.50">y2021::d05..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::types::point::Point,i32&gt;&gt; (8 samples, 0.19%)</title><rect x="13.2399%" y="933" width="0.1933%" height="15" fill="rgb(235,138,27)" fg:x="548" fg:w="8"/><text x="13.4899%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::types::point::Point,i32,std::collections::hash::map::RandomState&gt;&gt; (8 samples, 0.19%)</title><rect x="13.2399%" y="917" width="0.1933%" height="15" fill="rgb(236,97,51)" fg:x="548" fg:w="8"/><text x="13.4899%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::types::point::Point,i32)&gt;&gt; (8 samples, 0.19%)</title><rect x="13.2399%" y="901" width="0.1933%" height="15" fill="rgb(240,80,30)" fg:x="548" fg:w="8"/><text x="13.4899%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.19%)</title><rect x="13.2399%" y="885" width="0.1933%" height="15" fill="rgb(230,178,19)" fg:x="548" fg:w="8"/><text x="13.4899%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (8 samples, 0.19%)</title><rect x="13.2399%" y="869" width="0.1933%" height="15" fill="rgb(210,190,27)" fg:x="548" fg:w="8"/><text x="13.4899%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (8 samples, 0.19%)</title><rect x="13.2399%" y="853" width="0.1933%" height="15" fill="rgb(222,107,31)" fg:x="548" fg:w="8"/><text x="13.4899%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.19%)</title><rect x="13.2399%" y="837" width="0.1933%" height="15" fill="rgb(216,127,34)" fg:x="548" fg:w="8"/><text x="13.4899%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.19%)</title><rect x="13.2399%" y="821" width="0.1933%" height="15" fill="rgb(234,116,52)" fg:x="548" fg:w="8"/><text x="13.4899%" y="831.50"></text></g><g><title>_int_free (6 samples, 0.14%)</title><rect x="13.2882%" y="805" width="0.1450%" height="15" fill="rgb(222,124,15)" fg:x="550" fg:w="6"/><text x="13.5382%" y="815.50"></text></g><g><title>systrim (6 samples, 0.14%)</title><rect x="13.2882%" y="789" width="0.1450%" height="15" fill="rgb(231,179,28)" fg:x="550" fg:w="6"/><text x="13.5382%" y="799.50"></text></g><g><title>__GI___default_morecore (6 samples, 0.14%)</title><rect x="13.2882%" y="773" width="0.1450%" height="15" fill="rgb(226,93,45)" fg:x="550" fg:w="6"/><text x="13.5382%" y="783.50"></text></g><g><title>__GI___sbrk (6 samples, 0.14%)</title><rect x="13.2882%" y="757" width="0.1450%" height="15" fill="rgb(215,8,51)" fg:x="550" fg:w="6"/><text x="13.5382%" y="767.50"></text></g><g><title>__GI___sbrk (6 samples, 0.14%)</title><rect x="13.2882%" y="741" width="0.1450%" height="15" fill="rgb(223,106,5)" fg:x="550" fg:w="6"/><text x="13.5382%" y="751.50"></text></g><g><title>__brk (6 samples, 0.14%)</title><rect x="13.2882%" y="725" width="0.1450%" height="15" fill="rgb(250,191,5)" fg:x="550" fg:w="6"/><text x="13.5382%" y="735.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.14%)</title><rect x="13.2882%" y="709" width="0.1450%" height="15" fill="rgb(242,132,44)" fg:x="550" fg:w="6"/><text x="13.5382%" y="719.50"></text></g><g><title>do_syscall_64 (6 samples, 0.14%)</title><rect x="13.2882%" y="693" width="0.1450%" height="15" fill="rgb(251,152,29)" fg:x="550" fg:w="6"/><text x="13.5382%" y="703.50"></text></g><g><title>__x64_sys_brk (6 samples, 0.14%)</title><rect x="13.2882%" y="677" width="0.1450%" height="15" fill="rgb(218,179,5)" fg:x="550" fg:w="6"/><text x="13.5382%" y="687.50"></text></g><g><title>__do_munmap (6 samples, 0.14%)</title><rect x="13.2882%" y="661" width="0.1450%" height="15" fill="rgb(227,67,19)" fg:x="550" fg:w="6"/><text x="13.5382%" y="671.50"></text></g><g><title>unmap_region (6 samples, 0.14%)</title><rect x="13.2882%" y="645" width="0.1450%" height="15" fill="rgb(233,119,31)" fg:x="550" fg:w="6"/><text x="13.5382%" y="655.50"></text></g><g><title>unmap_vmas (3 samples, 0.07%)</title><rect x="13.3607%" y="629" width="0.0725%" height="15" fill="rgb(241,120,22)" fg:x="553" fg:w="3"/><text x="13.6107%" y="639.50"></text></g><g><title>unmap_single_vma (3 samples, 0.07%)</title><rect x="13.3607%" y="613" width="0.0725%" height="15" fill="rgb(224,102,30)" fg:x="553" fg:w="3"/><text x="13.6107%" y="623.50"></text></g><g><title>unmap_page_range (3 samples, 0.07%)</title><rect x="13.3607%" y="597" width="0.0725%" height="15" fill="rgb(210,164,37)" fg:x="553" fg:w="3"/><text x="13.6107%" y="607.50"></text></g><g><title>zap_pte_range.isra.0 (2 samples, 0.05%)</title><rect x="13.3849%" y="581" width="0.0483%" height="15" fill="rgb(226,191,16)" fg:x="554" fg:w="2"/><text x="13.6349%" y="591.50"></text></g><g><title>page_remove_rmap (1 samples, 0.02%)</title><rect x="13.4090%" y="565" width="0.0242%" height="15" fill="rgb(214,40,45)" fg:x="555" fg:w="1"/><text x="13.6590%" y="575.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="13.4090%" y="549" width="0.0242%" height="15" fill="rgb(244,29,26)" fg:x="555" fg:w="1"/><text x="13.6590%" y="559.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="13.4090%" y="533" width="0.0242%" height="15" fill="rgb(216,16,5)" fg:x="555" fg:w="1"/><text x="13.6590%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="13.4332%" y="741" width="0.0242%" height="15" fill="rgb(249,76,35)" fg:x="556" fg:w="1"/><text x="13.6832%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.02%)</title><rect x="13.4332%" y="725" width="0.0242%" height="15" fill="rgb(207,11,44)" fg:x="556" fg:w="1"/><text x="13.6832%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="13.4332%" y="709" width="0.0242%" height="15" fill="rgb(228,190,49)" fg:x="556" fg:w="1"/><text x="13.6832%" y="719.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (5 samples, 0.12%)</title><rect x="13.4574%" y="645" width="0.1208%" height="15" fill="rgb(214,173,12)" fg:x="557" fg:w="5"/><text x="13.7074%" y="655.50"></text></g><g><title>y2021::d07::main::p01 (9 samples, 0.22%)</title><rect x="13.4332%" y="949" width="0.2174%" height="15" fill="rgb(218,26,35)" fg:x="556" fg:w="9"/><text x="13.6832%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.22%)</title><rect x="13.4332%" y="933" width="0.2174%" height="15" fill="rgb(220,200,19)" fg:x="556" fg:w="9"/><text x="13.6832%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.22%)</title><rect x="13.4332%" y="917" width="0.2174%" height="15" fill="rgb(239,95,49)" fg:x="556" fg:w="9"/><text x="13.6832%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.22%)</title><rect x="13.4332%" y="901" width="0.2174%" height="15" fill="rgb(235,85,53)" fg:x="556" fg:w="9"/><text x="13.6832%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.22%)</title><rect x="13.4332%" y="885" width="0.2174%" height="15" fill="rgb(233,133,31)" fg:x="556" fg:w="9"/><text x="13.6832%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.22%)</title><rect x="13.4332%" y="869" width="0.2174%" height="15" fill="rgb(218,25,20)" fg:x="556" fg:w="9"/><text x="13.6832%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.22%)</title><rect x="13.4332%" y="853" width="0.2174%" height="15" fill="rgb(252,210,38)" fg:x="556" fg:w="9"/><text x="13.6832%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.22%)</title><rect x="13.4332%" y="837" width="0.2174%" height="15" fill="rgb(242,134,21)" fg:x="556" fg:w="9"/><text x="13.6832%" y="847.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (9 samples, 0.22%)</title><rect x="13.4332%" y="821" width="0.2174%" height="15" fill="rgb(213,28,48)" fg:x="556" fg:w="9"/><text x="13.6832%" y="831.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (9 samples, 0.22%)</title><rect x="13.4332%" y="805" width="0.2174%" height="15" fill="rgb(250,196,2)" fg:x="556" fg:w="9"/><text x="13.6832%" y="815.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (9 samples, 0.22%)</title><rect x="13.4332%" y="789" width="0.2174%" height="15" fill="rgb(227,5,17)" fg:x="556" fg:w="9"/><text x="13.6832%" y="799.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (9 samples, 0.22%)</title><rect x="13.4332%" y="773" width="0.2174%" height="15" fill="rgb(221,226,24)" fg:x="556" fg:w="9"/><text x="13.6832%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9 samples, 0.22%)</title><rect x="13.4332%" y="757" width="0.2174%" height="15" fill="rgb(211,5,48)" fg:x="556" fg:w="9"/><text x="13.6832%" y="767.50"></text></g><g><title>y2021::d07::main::p01::{{closure}} (8 samples, 0.19%)</title><rect x="13.4574%" y="741" width="0.1933%" height="15" fill="rgb(219,150,6)" fg:x="557" fg:w="8"/><text x="13.7074%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (8 samples, 0.19%)</title><rect x="13.4574%" y="725" width="0.1933%" height="15" fill="rgb(251,46,16)" fg:x="557" fg:w="8"/><text x="13.7074%" y="735.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (8 samples, 0.19%)</title><rect x="13.4574%" y="709" width="0.1933%" height="15" fill="rgb(220,204,40)" fg:x="557" fg:w="8"/><text x="13.7074%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.19%)</title><rect x="13.4574%" y="693" width="0.1933%" height="15" fill="rgb(211,85,2)" fg:x="557" fg:w="8"/><text x="13.7074%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.19%)</title><rect x="13.4574%" y="677" width="0.1933%" height="15" fill="rgb(229,17,7)" fg:x="557" fg:w="8"/><text x="13.7074%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 0.19%)</title><rect x="13.4574%" y="661" width="0.1933%" height="15" fill="rgb(239,72,28)" fg:x="557" fg:w="8"/><text x="13.7074%" y="671.50"></text></g><g><title>y2021::d07::main::p01::{{closure}}::{{closure}} (3 samples, 0.07%)</title><rect x="13.5782%" y="645" width="0.0725%" height="15" fill="rgb(230,47,54)" fg:x="562" fg:w="3"/><text x="13.8282%" y="655.50"></text></g><g><title>y2021::utils::math::abs_diff (3 samples, 0.07%)</title><rect x="13.5782%" y="629" width="0.0725%" height="15" fill="rgb(214,50,8)" fg:x="562" fg:w="3"/><text x="13.8282%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (3 samples, 0.07%)</title><rect x="13.5782%" y="613" width="0.0725%" height="15" fill="rgb(216,198,43)" fg:x="562" fg:w="3"/><text x="13.8282%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::gt (3 samples, 0.07%)</title><rect x="13.5782%" y="597" width="0.0725%" height="15" fill="rgb(234,20,35)" fg:x="562" fg:w="3"/><text x="13.8282%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="13.6506%" y="645" width="0.0483%" height="15" fill="rgb(254,45,19)" fg:x="565" fg:w="2"/><text x="13.9006%" y="655.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (3 samples, 0.07%)</title><rect x="13.6990%" y="613" width="0.0725%" height="15" fill="rgb(219,14,44)" fg:x="567" fg:w="3"/><text x="13.9490%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 0.19%)</title><rect x="13.6990%" y="629" width="0.1933%" height="15" fill="rgb(217,220,26)" fg:x="567" fg:w="8"/><text x="13.9490%" y="639.50"></text></g><g><title>y2021::d07::main::p02::{{closure}}::{{closure}} (5 samples, 0.12%)</title><rect x="13.7714%" y="613" width="0.1208%" height="15" fill="rgb(213,158,28)" fg:x="570" fg:w="5"/><text x="14.0214%" y="623.50"></text></g><g><title>y2021::d07::main::run (23 samples, 0.56%)</title><rect x="13.4332%" y="965" width="0.5557%" height="15" fill="rgb(252,51,52)" fg:x="556" fg:w="23"/><text x="13.6832%" y="975.50"></text></g><g><title>y2021::d07::main::p02 (14 samples, 0.34%)</title><rect x="13.6506%" y="949" width="0.3382%" height="15" fill="rgb(246,89,16)" fg:x="565" fg:w="14"/><text x="13.9006%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.34%)</title><rect x="13.6506%" y="933" width="0.3382%" height="15" fill="rgb(216,158,49)" fg:x="565" fg:w="14"/><text x="13.9006%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.34%)</title><rect x="13.6506%" y="917" width="0.3382%" height="15" fill="rgb(236,107,19)" fg:x="565" fg:w="14"/><text x="13.9006%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.34%)</title><rect x="13.6506%" y="901" width="0.3382%" height="15" fill="rgb(228,185,30)" fg:x="565" fg:w="14"/><text x="13.9006%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.34%)</title><rect x="13.6506%" y="885" width="0.3382%" height="15" fill="rgb(246,134,8)" fg:x="565" fg:w="14"/><text x="13.9006%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 0.34%)</title><rect x="13.6506%" y="869" width="0.3382%" height="15" fill="rgb(214,143,50)" fg:x="565" fg:w="14"/><text x="13.9006%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14 samples, 0.34%)</title><rect x="13.6506%" y="853" width="0.3382%" height="15" fill="rgb(228,75,8)" fg:x="565" fg:w="14"/><text x="13.9006%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.34%)</title><rect x="13.6506%" y="837" width="0.3382%" height="15" fill="rgb(207,175,4)" fg:x="565" fg:w="14"/><text x="13.9006%" y="847.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (14 samples, 0.34%)</title><rect x="13.6506%" y="821" width="0.3382%" height="15" fill="rgb(205,108,24)" fg:x="565" fg:w="14"/><text x="13.9006%" y="831.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (14 samples, 0.34%)</title><rect x="13.6506%" y="805" width="0.3382%" height="15" fill="rgb(244,120,49)" fg:x="565" fg:w="14"/><text x="13.9006%" y="815.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (14 samples, 0.34%)</title><rect x="13.6506%" y="789" width="0.3382%" height="15" fill="rgb(223,47,38)" fg:x="565" fg:w="14"/><text x="13.9006%" y="799.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (14 samples, 0.34%)</title><rect x="13.6506%" y="773" width="0.3382%" height="15" fill="rgb(229,179,11)" fg:x="565" fg:w="14"/><text x="13.9006%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (14 samples, 0.34%)</title><rect x="13.6506%" y="757" width="0.3382%" height="15" fill="rgb(231,122,1)" fg:x="565" fg:w="14"/><text x="13.9006%" y="767.50"></text></g><g><title>y2021::d07::main::p02::{{closure}} (14 samples, 0.34%)</title><rect x="13.6506%" y="741" width="0.3382%" height="15" fill="rgb(245,119,9)" fg:x="565" fg:w="14"/><text x="13.9006%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.34%)</title><rect x="13.6506%" y="725" width="0.3382%" height="15" fill="rgb(241,163,25)" fg:x="565" fg:w="14"/><text x="13.9006%" y="735.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (14 samples, 0.34%)</title><rect x="13.6506%" y="709" width="0.3382%" height="15" fill="rgb(217,214,3)" fg:x="565" fg:w="14"/><text x="13.9006%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.34%)</title><rect x="13.6506%" y="693" width="0.3382%" height="15" fill="rgb(240,86,28)" fg:x="565" fg:w="14"/><text x="13.9006%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.34%)</title><rect x="13.6506%" y="677" width="0.3382%" height="15" fill="rgb(215,47,9)" fg:x="565" fg:w="14"/><text x="13.9006%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.34%)</title><rect x="13.6506%" y="661" width="0.3382%" height="15" fill="rgb(252,25,45)" fg:x="565" fg:w="14"/><text x="13.9006%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (12 samples, 0.29%)</title><rect x="13.6990%" y="645" width="0.2899%" height="15" fill="rgb(251,164,9)" fg:x="567" fg:w="12"/><text x="13.9490%" y="655.50"></text></g><g><title>y2021::d07::main::p02::{{closure}}::{{closure}} (4 samples, 0.10%)</title><rect x="13.8922%" y="629" width="0.0966%" height="15" fill="rgb(233,194,0)" fg:x="575" fg:w="4"/><text x="14.1422%" y="639.50"></text></g><g><title>y2021::utils::math::abs_diff (4 samples, 0.10%)</title><rect x="13.8922%" y="613" width="0.0966%" height="15" fill="rgb(249,111,24)" fg:x="575" fg:w="4"/><text x="14.1422%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (3 samples, 0.07%)</title><rect x="13.9164%" y="597" width="0.0725%" height="15" fill="rgb(250,223,3)" fg:x="576" fg:w="3"/><text x="14.1664%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::gt (3 samples, 0.07%)</title><rect x="13.9164%" y="581" width="0.0725%" height="15" fill="rgb(236,178,37)" fg:x="576" fg:w="3"/><text x="14.1664%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="13.9889%" y="565" width="0.0242%" height="15" fill="rgb(241,158,50)" fg:x="579" fg:w="1"/><text x="14.2389%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="13.9889%" y="549" width="0.0242%" height="15" fill="rgb(213,121,41)" fg:x="579" fg:w="1"/><text x="14.2389%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="13.9889%" y="533" width="0.0242%" height="15" fill="rgb(240,92,3)" fg:x="579" fg:w="1"/><text x="14.2389%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="13.9889%" y="517" width="0.0242%" height="15" fill="rgb(205,123,3)" fg:x="579" fg:w="1"/><text x="14.2389%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="13.9889%" y="501" width="0.0242%" height="15" fill="rgb(205,97,47)" fg:x="579" fg:w="1"/><text x="14.2389%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="13.9889%" y="485" width="0.0242%" height="15" fill="rgb(247,152,14)" fg:x="579" fg:w="1"/><text x="14.2389%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="13.9889%" y="469" width="0.0242%" height="15" fill="rgb(248,195,53)" fg:x="579" fg:w="1"/><text x="14.2389%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="13.9889%" y="453" width="0.0242%" height="15" fill="rgb(226,201,16)" fg:x="579" fg:w="1"/><text x="14.2389%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="13.9889%" y="437" width="0.0242%" height="15" fill="rgb(205,98,0)" fg:x="579" fg:w="1"/><text x="14.2389%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="13.9889%" y="421" width="0.0242%" height="15" fill="rgb(214,191,48)" fg:x="579" fg:w="1"/><text x="14.2389%" y="431.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="13.9889%" y="405" width="0.0242%" height="15" fill="rgb(237,112,39)" fg:x="579" fg:w="1"/><text x="14.2389%" y="415.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="13.9889%" y="389" width="0.0242%" height="15" fill="rgb(247,203,27)" fg:x="579" fg:w="1"/><text x="14.2389%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="13.9889%" y="373" width="0.0242%" height="15" fill="rgb(235,124,28)" fg:x="579" fg:w="1"/><text x="14.2389%" y="383.50"></text></g><g><title>y2021::d08::main::p01 (2 samples, 0.05%)</title><rect x="13.9889%" y="949" width="0.0483%" height="15" fill="rgb(208,207,46)" fg:x="579" fg:w="2"/><text x="14.2389%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="13.9889%" y="933" width="0.0483%" height="15" fill="rgb(234,176,4)" fg:x="579" fg:w="2"/><text x="14.2389%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="13.9889%" y="917" width="0.0483%" height="15" fill="rgb(230,133,28)" fg:x="579" fg:w="2"/><text x="14.2389%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="13.9889%" y="901" width="0.0483%" height="15" fill="rgb(211,137,40)" fg:x="579" fg:w="2"/><text x="14.2389%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="13.9889%" y="885" width="0.0483%" height="15" fill="rgb(254,35,13)" fg:x="579" fg:w="2"/><text x="14.2389%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="13.9889%" y="869" width="0.0483%" height="15" fill="rgb(225,49,51)" fg:x="579" fg:w="2"/><text x="14.2389%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.05%)</title><rect x="13.9889%" y="853" width="0.0483%" height="15" fill="rgb(251,10,15)" fg:x="579" fg:w="2"/><text x="14.2389%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="13.9889%" y="837" width="0.0483%" height="15" fill="rgb(228,207,15)" fg:x="579" fg:w="2"/><text x="14.2389%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.05%)</title><rect x="13.9889%" y="821" width="0.0483%" height="15" fill="rgb(241,99,19)" fg:x="579" fg:w="2"/><text x="14.2389%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="13.9889%" y="805" width="0.0483%" height="15" fill="rgb(207,104,49)" fg:x="579" fg:w="2"/><text x="14.2389%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="13.9889%" y="789" width="0.0483%" height="15" fill="rgb(234,99,18)" fg:x="579" fg:w="2"/><text x="14.2389%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="13.9889%" y="773" width="0.0483%" height="15" fill="rgb(213,191,49)" fg:x="579" fg:w="2"/><text x="14.2389%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (2 samples, 0.05%)</title><rect x="13.9889%" y="757" width="0.0483%" height="15" fill="rgb(210,226,19)" fg:x="579" fg:w="2"/><text x="14.2389%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="13.9889%" y="741" width="0.0483%" height="15" fill="rgb(229,97,18)" fg:x="579" fg:w="2"/><text x="14.2389%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="13.9889%" y="725" width="0.0483%" height="15" fill="rgb(211,167,15)" fg:x="579" fg:w="2"/><text x="14.2389%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="13.9889%" y="709" width="0.0483%" height="15" fill="rgb(210,169,34)" fg:x="579" fg:w="2"/><text x="14.2389%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.05%)</title><rect x="13.9889%" y="693" width="0.0483%" height="15" fill="rgb(241,121,31)" fg:x="579" fg:w="2"/><text x="14.2389%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.05%)</title><rect x="13.9889%" y="677" width="0.0483%" height="15" fill="rgb(232,40,11)" fg:x="579" fg:w="2"/><text x="14.2389%" y="687.50"></text></g><g><title>y2021::d08::main::p01::{{closure}} (2 samples, 0.05%)</title><rect x="13.9889%" y="661" width="0.0483%" height="15" fill="rgb(205,86,26)" fg:x="579" fg:w="2"/><text x="14.2389%" y="671.50"></text></g><g><title>y2021::d08::main::parse_line (2 samples, 0.05%)</title><rect x="13.9889%" y="645" width="0.0483%" height="15" fill="rgb(231,126,28)" fg:x="579" fg:w="2"/><text x="14.2389%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="13.9889%" y="629" width="0.0483%" height="15" fill="rgb(219,221,18)" fg:x="579" fg:w="2"/><text x="14.2389%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="13.9889%" y="613" width="0.0483%" height="15" fill="rgb(211,40,0)" fg:x="579" fg:w="2"/><text x="14.2389%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="13.9889%" y="597" width="0.0483%" height="15" fill="rgb(239,85,43)" fg:x="579" fg:w="2"/><text x="14.2389%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="13.9889%" y="581" width="0.0483%" height="15" fill="rgb(231,55,21)" fg:x="579" fg:w="2"/><text x="14.2389%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect x="14.0130%" y="565" width="0.0242%" height="15" fill="rgb(225,184,43)" fg:x="580" fg:w="1"/><text x="14.2630%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="14.0130%" y="549" width="0.0242%" height="15" fill="rgb(251,158,41)" fg:x="580" fg:w="1"/><text x="14.2630%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="14.0130%" y="533" width="0.0242%" height="15" fill="rgb(234,159,37)" fg:x="580" fg:w="1"/><text x="14.2630%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="14.0130%" y="517" width="0.0242%" height="15" fill="rgb(216,204,22)" fg:x="580" fg:w="1"/><text x="14.2630%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="14.0130%" y="501" width="0.0242%" height="15" fill="rgb(214,17,3)" fg:x="580" fg:w="1"/><text x="14.2630%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="14.0130%" y="485" width="0.0242%" height="15" fill="rgb(212,111,17)" fg:x="580" fg:w="1"/><text x="14.2630%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="14.0130%" y="469" width="0.0242%" height="15" fill="rgb(221,157,24)" fg:x="580" fg:w="1"/><text x="14.2630%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="14.0130%" y="453" width="0.0242%" height="15" fill="rgb(252,16,13)" fg:x="580" fg:w="1"/><text x="14.2630%" y="463.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="14.0130%" y="437" width="0.0242%" height="15" fill="rgb(221,62,2)" fg:x="580" fg:w="1"/><text x="14.2630%" y="447.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.0372%" y="709" width="0.0242%" height="15" fill="rgb(247,87,22)" fg:x="581" fg:w="1"/><text x="14.2872%" y="719.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.02%)</title><rect x="14.0372%" y="693" width="0.0242%" height="15" fill="rgb(215,73,9)" fg:x="581" fg:w="1"/><text x="14.2872%" y="703.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.02%)</title><rect x="14.0372%" y="677" width="0.0242%" height="15" fill="rgb(207,175,33)" fg:x="581" fg:w="1"/><text x="14.2872%" y="687.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 0.02%)</title><rect x="14.0372%" y="661" width="0.0242%" height="15" fill="rgb(243,129,54)" fg:x="581" fg:w="1"/><text x="14.2872%" y="671.50"></text></g><g><title>std::io::read_until (1 samples, 0.02%)</title><rect x="14.0372%" y="645" width="0.0242%" height="15" fill="rgb(227,119,45)" fg:x="581" fg:w="1"/><text x="14.2872%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="14.0372%" y="629" width="0.0242%" height="15" fill="rgb(205,109,36)" fg:x="581" fg:w="1"/><text x="14.2872%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="14.0372%" y="613" width="0.0242%" height="15" fill="rgb(205,6,39)" fg:x="581" fg:w="1"/><text x="14.2872%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="14.0372%" y="597" width="0.0242%" height="15" fill="rgb(221,32,16)" fg:x="581" fg:w="1"/><text x="14.2872%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.0372%" y="581" width="0.0242%" height="15" fill="rgb(228,144,50)" fg:x="581" fg:w="1"/><text x="14.2872%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.0372%" y="565" width="0.0242%" height="15" fill="rgb(229,201,53)" fg:x="581" fg:w="1"/><text x="14.2872%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="14.0372%" y="549" width="0.0242%" height="15" fill="rgb(249,153,27)" fg:x="581" fg:w="1"/><text x="14.2872%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="14.0372%" y="533" width="0.0242%" height="15" fill="rgb(227,106,25)" fg:x="581" fg:w="1"/><text x="14.2872%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="14.0372%" y="517" width="0.0242%" height="15" fill="rgb(230,65,29)" fg:x="581" fg:w="1"/><text x="14.2872%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.0614%" y="549" width="0.0242%" height="15" fill="rgb(221,57,46)" fg:x="582" fg:w="1"/><text x="14.3114%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="14.0614%" y="533" width="0.0242%" height="15" fill="rgb(229,161,17)" fg:x="582" fg:w="1"/><text x="14.3114%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="14.0614%" y="517" width="0.0242%" height="15" fill="rgb(222,213,11)" fg:x="582" fg:w="1"/><text x="14.3114%" y="527.50"></text></g><g><title>y2021::d08::main::parse_line::{{closure}} (1 samples, 0.02%)</title><rect x="14.0614%" y="501" width="0.0242%" height="15" fill="rgb(235,35,13)" fg:x="582" fg:w="1"/><text x="14.3114%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.02%)</title><rect x="14.0614%" y="485" width="0.0242%" height="15" fill="rgb(233,158,34)" fg:x="582" fg:w="1"/><text x="14.3114%" y="495.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.02%)</title><rect x="14.0614%" y="469" width="0.0242%" height="15" fill="rgb(215,151,48)" fg:x="582" fg:w="1"/><text x="14.3114%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.02%)</title><rect x="14.0614%" y="453" width="0.0242%" height="15" fill="rgb(229,84,14)" fg:x="582" fg:w="1"/><text x="14.3114%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.02%)</title><rect x="14.0614%" y="437" width="0.0242%" height="15" fill="rgb(229,68,14)" fg:x="582" fg:w="1"/><text x="14.3114%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="14.0614%" y="421" width="0.0242%" height="15" fill="rgb(243,106,26)" fg:x="582" fg:w="1"/><text x="14.3114%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="14.0614%" y="405" width="0.0242%" height="15" fill="rgb(206,45,38)" fg:x="582" fg:w="1"/><text x="14.3114%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="14.0614%" y="389" width="0.0242%" height="15" fill="rgb(226,6,15)" fg:x="582" fg:w="1"/><text x="14.3114%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="14.0614%" y="373" width="0.0242%" height="15" fill="rgb(232,22,54)" fg:x="582" fg:w="1"/><text x="14.3114%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="14.0614%" y="357" width="0.0242%" height="15" fill="rgb(229,222,32)" fg:x="582" fg:w="1"/><text x="14.3114%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="14.0614%" y="341" width="0.0242%" height="15" fill="rgb(228,62,29)" fg:x="582" fg:w="1"/><text x="14.3114%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="14.0614%" y="325" width="0.0242%" height="15" fill="rgb(251,103,34)" fg:x="582" fg:w="1"/><text x="14.3114%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="14.0614%" y="309" width="0.0242%" height="15" fill="rgb(233,12,30)" fg:x="582" fg:w="1"/><text x="14.3114%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="14.0614%" y="293" width="0.0242%" height="15" fill="rgb(238,52,0)" fg:x="582" fg:w="1"/><text x="14.3114%" y="303.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="14.0614%" y="277" width="0.0242%" height="15" fill="rgb(223,98,5)" fg:x="582" fg:w="1"/><text x="14.3114%" y="287.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="14.0614%" y="261" width="0.0242%" height="15" fill="rgb(228,75,37)" fg:x="582" fg:w="1"/><text x="14.3114%" y="271.50"></text></g><g><title>y2021::d08::main::parse_line (2 samples, 0.05%)</title><rect x="14.0614%" y="661" width="0.0483%" height="15" fill="rgb(205,115,49)" fg:x="582" fg:w="2"/><text x="14.3114%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="14.0614%" y="645" width="0.0483%" height="15" fill="rgb(250,154,43)" fg:x="582" fg:w="2"/><text x="14.3114%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.0614%" y="629" width="0.0483%" height="15" fill="rgb(226,43,29)" fg:x="582" fg:w="2"/><text x="14.3114%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.0614%" y="613" width="0.0483%" height="15" fill="rgb(249,228,39)" fg:x="582" fg:w="2"/><text x="14.3114%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.0614%" y="597" width="0.0483%" height="15" fill="rgb(216,79,43)" fg:x="582" fg:w="2"/><text x="14.3114%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="14.0614%" y="581" width="0.0483%" height="15" fill="rgb(228,95,12)" fg:x="582" fg:w="2"/><text x="14.3114%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.05%)</title><rect x="14.0614%" y="565" width="0.0483%" height="15" fill="rgb(249,221,15)" fg:x="582" fg:w="2"/><text x="14.3114%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.0855%" y="549" width="0.0242%" height="15" fill="rgb(233,34,13)" fg:x="583" fg:w="1"/><text x="14.3355%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.0855%" y="533" width="0.0242%" height="15" fill="rgb(214,103,39)" fg:x="583" fg:w="1"/><text x="14.3355%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="14.0855%" y="517" width="0.0242%" height="15" fill="rgb(251,126,39)" fg:x="583" fg:w="1"/><text x="14.3355%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="14.0855%" y="501" width="0.0242%" height="15" fill="rgb(214,216,36)" fg:x="583" fg:w="1"/><text x="14.3355%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="14.0855%" y="485" width="0.0242%" height="15" fill="rgb(220,221,8)" fg:x="583" fg:w="1"/><text x="14.3355%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="14.0855%" y="469" width="0.0242%" height="15" fill="rgb(240,216,3)" fg:x="583" fg:w="1"/><text x="14.3355%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="14.0855%" y="453" width="0.0242%" height="15" fill="rgb(232,218,17)" fg:x="583" fg:w="1"/><text x="14.3355%" y="463.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="14.0855%" y="437" width="0.0242%" height="15" fill="rgb(229,163,45)" fg:x="583" fg:w="1"/><text x="14.3355%" y="447.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="14.0855%" y="421" width="0.0242%" height="15" fill="rgb(231,110,42)" fg:x="583" fg:w="1"/><text x="14.3355%" y="431.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="14.0855%" y="405" width="0.0242%" height="15" fill="rgb(208,170,48)" fg:x="583" fg:w="1"/><text x="14.3355%" y="415.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="14.0855%" y="389" width="0.0242%" height="15" fill="rgb(239,116,25)" fg:x="583" fg:w="1"/><text x="14.3355%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.1097%" y="405" width="0.0242%" height="15" fill="rgb(219,200,50)" fg:x="584" fg:w="1"/><text x="14.3597%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="14.1097%" y="389" width="0.0242%" height="15" fill="rgb(245,200,0)" fg:x="584" fg:w="1"/><text x="14.3597%" y="399.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="14.1097%" y="373" width="0.0242%" height="15" fill="rgb(245,119,33)" fg:x="584" fg:w="1"/><text x="14.3597%" y="383.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="14.1097%" y="357" width="0.0242%" height="15" fill="rgb(231,125,12)" fg:x="584" fg:w="1"/><text x="14.3597%" y="367.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="14.1097%" y="341" width="0.0242%" height="15" fill="rgb(216,96,41)" fg:x="584" fg:w="1"/><text x="14.3597%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="14.1097%" y="581" width="0.0483%" height="15" fill="rgb(248,43,45)" fg:x="584" fg:w="2"/><text x="14.3597%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.1097%" y="565" width="0.0483%" height="15" fill="rgb(217,222,7)" fg:x="584" fg:w="2"/><text x="14.3597%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.1097%" y="549" width="0.0483%" height="15" fill="rgb(233,28,6)" fg:x="584" fg:w="2"/><text x="14.3597%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.1097%" y="533" width="0.0483%" height="15" fill="rgb(231,218,15)" fg:x="584" fg:w="2"/><text x="14.3597%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="14.1097%" y="517" width="0.0483%" height="15" fill="rgb(226,171,48)" fg:x="584" fg:w="2"/><text x="14.3597%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.05%)</title><rect x="14.1097%" y="501" width="0.0483%" height="15" fill="rgb(235,201,9)" fg:x="584" fg:w="2"/><text x="14.3597%" y="511.50"></text></g><g><title>&lt;std::collections::hash::set::Difference&lt;T,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="14.1097%" y="485" width="0.0483%" height="15" fill="rgb(217,80,15)" fg:x="584" fg:w="2"/><text x="14.3597%" y="495.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.05%)</title><rect x="14.1097%" y="469" width="0.0483%" height="15" fill="rgb(219,152,8)" fg:x="584" fg:w="2"/><text x="14.3597%" y="479.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.05%)</title><rect x="14.1097%" y="453" width="0.0483%" height="15" fill="rgb(243,107,38)" fg:x="584" fg:w="2"/><text x="14.3597%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.05%)</title><rect x="14.1097%" y="437" width="0.0483%" height="15" fill="rgb(231,17,5)" fg:x="584" fg:w="2"/><text x="14.3597%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.05%)</title><rect x="14.1097%" y="421" width="0.0483%" height="15" fill="rgb(209,25,54)" fg:x="584" fg:w="2"/><text x="14.3597%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="14.1338%" y="405" width="0.0242%" height="15" fill="rgb(219,0,2)" fg:x="585" fg:w="1"/><text x="14.3838%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="14.1338%" y="389" width="0.0242%" height="15" fill="rgb(246,9,5)" fg:x="585" fg:w="1"/><text x="14.3838%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.1338%" y="373" width="0.0242%" height="15" fill="rgb(226,159,4)" fg:x="585" fg:w="1"/><text x="14.3838%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="14.1097%" y="645" width="0.0725%" height="15" fill="rgb(219,175,34)" fg:x="584" fg:w="3"/><text x="14.3597%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (3 samples, 0.07%)</title><rect x="14.1097%" y="629" width="0.0725%" height="15" fill="rgb(236,10,46)" fg:x="584" fg:w="3"/><text x="14.3597%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.07%)</title><rect x="14.1097%" y="613" width="0.0725%" height="15" fill="rgb(240,211,16)" fg:x="584" fg:w="3"/><text x="14.3597%" y="623.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (3 samples, 0.07%)</title><rect x="14.1097%" y="597" width="0.0725%" height="15" fill="rgb(205,3,43)" fg:x="584" fg:w="3"/><text x="14.3597%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.02%)</title><rect x="14.1580%" y="581" width="0.0242%" height="15" fill="rgb(245,7,22)" fg:x="586" fg:w="1"/><text x="14.4080%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="14.1580%" y="565" width="0.0242%" height="15" fill="rgb(239,132,32)" fg:x="586" fg:w="1"/><text x="14.4080%" y="575.50"></text></g><g><title>&lt;std::collections::hash::set::Difference&lt;T,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.1580%" y="549" width="0.0242%" height="15" fill="rgb(228,202,34)" fg:x="586" fg:w="1"/><text x="14.4080%" y="559.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.1580%" y="533" width="0.0242%" height="15" fill="rgb(254,200,22)" fg:x="586" fg:w="1"/><text x="14.4080%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.1580%" y="517" width="0.0242%" height="15" fill="rgb(219,10,39)" fg:x="586" fg:w="1"/><text x="14.4080%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.1580%" y="501" width="0.0242%" height="15" fill="rgb(226,210,39)" fg:x="586" fg:w="1"/><text x="14.4080%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.1580%" y="485" width="0.0242%" height="15" fill="rgb(208,219,16)" fg:x="586" fg:w="1"/><text x="14.4080%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="14.1580%" y="469" width="0.0242%" height="15" fill="rgb(216,158,51)" fg:x="586" fg:w="1"/><text x="14.4080%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="14.1580%" y="453" width="0.0242%" height="15" fill="rgb(233,14,44)" fg:x="586" fg:w="1"/><text x="14.4080%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.1580%" y="437" width="0.0242%" height="15" fill="rgb(237,97,39)" fg:x="586" fg:w="1"/><text x="14.4080%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="14.1822%" y="645" width="0.0483%" height="15" fill="rgb(218,198,43)" fg:x="587" fg:w="2"/><text x="14.4322%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.1822%" y="629" width="0.0483%" height="15" fill="rgb(231,104,20)" fg:x="587" fg:w="2"/><text x="14.4322%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.1822%" y="613" width="0.0483%" height="15" fill="rgb(254,36,13)" fg:x="587" fg:w="2"/><text x="14.4322%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.1822%" y="597" width="0.0483%" height="15" fill="rgb(248,14,50)" fg:x="587" fg:w="2"/><text x="14.4322%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="14.1822%" y="581" width="0.0483%" height="15" fill="rgb(217,107,29)" fg:x="587" fg:w="2"/><text x="14.4322%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.05%)</title><rect x="14.1822%" y="565" width="0.0483%" height="15" fill="rgb(251,169,33)" fg:x="587" fg:w="2"/><text x="14.4322%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="14.1822%" y="549" width="0.0483%" height="15" fill="rgb(217,108,32)" fg:x="587" fg:w="2"/><text x="14.4322%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="14.1822%" y="533" width="0.0483%" height="15" fill="rgb(219,66,42)" fg:x="587" fg:w="2"/><text x="14.4322%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.05%)</title><rect x="14.1822%" y="517" width="0.0483%" height="15" fill="rgb(206,180,7)" fg:x="587" fg:w="2"/><text x="14.4322%" y="527.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (2 samples, 0.05%)</title><rect x="14.1822%" y="501" width="0.0483%" height="15" fill="rgb(208,226,31)" fg:x="587" fg:w="2"/><text x="14.4322%" y="511.50"></text></g><g><title>y2021::d08::main::set_from_iter (2 samples, 0.05%)</title><rect x="14.1822%" y="485" width="0.0483%" height="15" fill="rgb(218,26,49)" fg:x="587" fg:w="2"/><text x="14.4322%" y="495.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.05%)</title><rect x="14.1822%" y="469" width="0.0483%" height="15" fill="rgb(233,197,48)" fg:x="587" fg:w="2"/><text x="14.4322%" y="479.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="14.1822%" y="453" width="0.0483%" height="15" fill="rgb(252,181,51)" fg:x="587" fg:w="2"/><text x="14.4322%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="14.1822%" y="437" width="0.0483%" height="15" fill="rgb(253,90,19)" fg:x="587" fg:w="2"/><text x="14.4322%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="14.2063%" y="421" width="0.0242%" height="15" fill="rgb(215,171,30)" fg:x="588" fg:w="1"/><text x="14.4563%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.2063%" y="405" width="0.0242%" height="15" fill="rgb(214,222,9)" fg:x="588" fg:w="1"/><text x="14.4563%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="14.2063%" y="389" width="0.0242%" height="15" fill="rgb(223,3,22)" fg:x="588" fg:w="1"/><text x="14.4563%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="14.2063%" y="373" width="0.0242%" height="15" fill="rgb(225,196,46)" fg:x="588" fg:w="1"/><text x="14.4563%" y="383.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.02%)</title><rect x="14.2063%" y="357" width="0.0242%" height="15" fill="rgb(209,110,37)" fg:x="588" fg:w="1"/><text x="14.4563%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.2305%" y="581" width="0.0242%" height="15" fill="rgb(249,89,12)" fg:x="589" fg:w="1"/><text x="14.4805%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.2305%" y="565" width="0.0242%" height="15" fill="rgb(226,27,33)" fg:x="589" fg:w="1"/><text x="14.4805%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="14.2305%" y="549" width="0.0242%" height="15" fill="rgb(213,82,22)" fg:x="589" fg:w="1"/><text x="14.4805%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="14.2305%" y="533" width="0.0242%" height="15" fill="rgb(248,140,0)" fg:x="589" fg:w="1"/><text x="14.4805%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.02%)</title><rect x="14.2305%" y="517" width="0.0242%" height="15" fill="rgb(228,106,3)" fg:x="589" fg:w="1"/><text x="14.4805%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.02%)</title><rect x="14.2305%" y="501" width="0.0242%" height="15" fill="rgb(209,23,37)" fg:x="589" fg:w="1"/><text x="14.4805%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.02%)</title><rect x="14.2305%" y="485" width="0.0242%" height="15" fill="rgb(241,93,50)" fg:x="589" fg:w="1"/><text x="14.4805%" y="495.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.02%)</title><rect x="14.2305%" y="469" width="0.0242%" height="15" fill="rgb(253,46,43)" fg:x="589" fg:w="1"/><text x="14.4805%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="14.2305%" y="453" width="0.0242%" height="15" fill="rgb(226,206,43)" fg:x="589" fg:w="1"/><text x="14.4805%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="14.2305%" y="437" width="0.0242%" height="15" fill="rgb(217,54,7)" fg:x="589" fg:w="1"/><text x="14.4805%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="14.2305%" y="421" width="0.0242%" height="15" fill="rgb(223,5,52)" fg:x="589" fg:w="1"/><text x="14.4805%" y="431.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="14.2305%" y="405" width="0.0242%" height="15" fill="rgb(206,52,46)" fg:x="589" fg:w="1"/><text x="14.4805%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.05%)</title><rect x="14.2305%" y="613" width="0.0483%" height="15" fill="rgb(253,136,11)" fg:x="589" fg:w="2"/><text x="14.4805%" y="623.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.05%)</title><rect x="14.2305%" y="597" width="0.0483%" height="15" fill="rgb(208,106,33)" fg:x="589" fg:w="2"/><text x="14.4805%" y="607.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="14.2547%" y="581" width="0.0242%" height="15" fill="rgb(206,54,4)" fg:x="590" fg:w="1"/><text x="14.5047%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="14.2547%" y="565" width="0.0242%" height="15" fill="rgb(213,3,15)" fg:x="590" fg:w="1"/><text x="14.5047%" y="575.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="14.2547%" y="549" width="0.0242%" height="15" fill="rgb(252,211,39)" fg:x="590" fg:w="1"/><text x="14.5047%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.07%)</title><rect x="14.2305%" y="645" width="0.0725%" height="15" fill="rgb(223,6,36)" fg:x="589" fg:w="3"/><text x="14.4805%" y="655.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (3 samples, 0.07%)</title><rect x="14.2305%" y="629" width="0.0725%" height="15" fill="rgb(252,169,45)" fg:x="589" fg:w="3"/><text x="14.4805%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.02%)</title><rect x="14.2788%" y="613" width="0.0242%" height="15" fill="rgb(212,48,26)" fg:x="591" fg:w="1"/><text x="14.5288%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.02%)</title><rect x="14.2788%" y="597" width="0.0242%" height="15" fill="rgb(251,102,48)" fg:x="591" fg:w="1"/><text x="14.5288%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.02%)</title><rect x="14.2788%" y="581" width="0.0242%" height="15" fill="rgb(243,208,16)" fg:x="591" fg:w="1"/><text x="14.5288%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.2788%" y="565" width="0.0242%" height="15" fill="rgb(219,96,24)" fg:x="591" fg:w="1"/><text x="14.5288%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.2788%" y="549" width="0.0242%" height="15" fill="rgb(219,33,29)" fg:x="591" fg:w="1"/><text x="14.5288%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.2788%" y="533" width="0.0242%" height="15" fill="rgb(223,176,5)" fg:x="591" fg:w="1"/><text x="14.5288%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.2788%" y="517" width="0.0242%" height="15" fill="rgb(228,140,14)" fg:x="591" fg:w="1"/><text x="14.5288%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="14.2788%" y="501" width="0.0242%" height="15" fill="rgb(217,179,31)" fg:x="591" fg:w="1"/><text x="14.5288%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="14.2788%" y="485" width="0.0242%" height="15" fill="rgb(230,9,30)" fg:x="591" fg:w="1"/><text x="14.5288%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="14.3030%" y="517" width="0.0242%" height="15" fill="rgb(230,136,20)" fg:x="592" fg:w="1"/><text x="14.5530%" y="527.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (1 samples, 0.02%)</title><rect x="14.3030%" y="501" width="0.0242%" height="15" fill="rgb(215,210,22)" fg:x="592" fg:w="1"/><text x="14.5530%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.02%)</title><rect x="14.3030%" y="485" width="0.0242%" height="15" fill="rgb(218,43,5)" fg:x="592" fg:w="1"/><text x="14.5530%" y="495.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="14.3030%" y="469" width="0.0242%" height="15" fill="rgb(216,11,5)" fg:x="592" fg:w="1"/><text x="14.5530%" y="479.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="14.3030%" y="453" width="0.0242%" height="15" fill="rgb(209,82,29)" fg:x="592" fg:w="1"/><text x="14.5530%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="14.3030%" y="437" width="0.0242%" height="15" fill="rgb(244,115,12)" fg:x="592" fg:w="1"/><text x="14.5530%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="14.3030%" y="421" width="0.0242%" height="15" fill="rgb(222,82,18)" fg:x="592" fg:w="1"/><text x="14.5530%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1 samples, 0.02%)</title><rect x="14.3030%" y="405" width="0.0242%" height="15" fill="rgb(249,227,8)" fg:x="592" fg:w="1"/><text x="14.5530%" y="415.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (1 samples, 0.02%)</title><rect x="14.3030%" y="389" width="0.0242%" height="15" fill="rgb(253,141,45)" fg:x="592" fg:w="1"/><text x="14.5530%" y="399.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.3030%" y="373" width="0.0242%" height="15" fill="rgb(234,184,4)" fg:x="592" fg:w="1"/><text x="14.5530%" y="383.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.3030%" y="357" width="0.0242%" height="15" fill="rgb(218,194,23)" fg:x="592" fg:w="1"/><text x="14.5530%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.3030%" y="341" width="0.0242%" height="15" fill="rgb(235,66,41)" fg:x="592" fg:w="1"/><text x="14.5530%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.3030%" y="325" width="0.0242%" height="15" fill="rgb(245,217,1)" fg:x="592" fg:w="1"/><text x="14.5530%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="14.3030%" y="309" width="0.0242%" height="15" fill="rgb(229,91,1)" fg:x="592" fg:w="1"/><text x="14.5530%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="14.3030%" y="293" width="0.0242%" height="15" fill="rgb(207,101,30)" fg:x="592" fg:w="1"/><text x="14.5530%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="14.3030%" y="277" width="0.0242%" height="15" fill="rgb(223,82,49)" fg:x="592" fg:w="1"/><text x="14.5530%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="14.3030%" y="261" width="0.0242%" height="15" fill="rgb(218,167,17)" fg:x="592" fg:w="1"/><text x="14.5530%" y="271.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="14.3030%" y="245" width="0.0242%" height="15" fill="rgb(208,103,14)" fg:x="592" fg:w="1"/><text x="14.5530%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="14.3030%" y="229" width="0.0242%" height="15" fill="rgb(238,20,8)" fg:x="592" fg:w="1"/><text x="14.5530%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="14.3030%" y="213" width="0.0242%" height="15" fill="rgb(218,80,54)" fg:x="592" fg:w="1"/><text x="14.5530%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="14.3030%" y="197" width="0.0242%" height="15" fill="rgb(240,144,17)" fg:x="592" fg:w="1"/><text x="14.5530%" y="207.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="14.3030%" y="181" width="0.0242%" height="15" fill="rgb(245,27,50)" fg:x="592" fg:w="1"/><text x="14.5530%" y="191.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="14.3271%" y="437" width="0.0242%" height="15" fill="rgb(251,51,7)" fg:x="593" fg:w="1"/><text x="14.5771%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.3271%" y="421" width="0.0242%" height="15" fill="rgb(245,217,29)" fg:x="593" fg:w="1"/><text x="14.5771%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.3271%" y="405" width="0.0242%" height="15" fill="rgb(221,176,29)" fg:x="593" fg:w="1"/><text x="14.5771%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.3271%" y="389" width="0.0242%" height="15" fill="rgb(212,180,24)" fg:x="593" fg:w="1"/><text x="14.5771%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="14.3271%" y="373" width="0.0242%" height="15" fill="rgb(254,24,2)" fg:x="593" fg:w="1"/><text x="14.5771%" y="383.50"></text></g><g><title>y2021::d08::main::run (16 samples, 0.39%)</title><rect x="13.9889%" y="965" width="0.3866%" height="15" fill="rgb(230,100,2)" fg:x="579" fg:w="16"/><text x="14.2389%" y="975.50"></text></g><g><title>y2021::d08::main::p02 (14 samples, 0.34%)</title><rect x="14.0372%" y="949" width="0.3382%" height="15" fill="rgb(219,142,25)" fg:x="581" fg:w="14"/><text x="14.2872%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.34%)</title><rect x="14.0372%" y="933" width="0.3382%" height="15" fill="rgb(240,73,43)" fg:x="581" fg:w="14"/><text x="14.2872%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::iter::traits::accum::Sum&lt;core::option::Option&lt;U&gt;&gt;&gt;::sum (14 samples, 0.34%)</title><rect x="14.0372%" y="917" width="0.3382%" height="15" fill="rgb(214,114,15)" fg:x="581" fg:w="14"/><text x="14.2872%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.34%)</title><rect x="14.0372%" y="901" width="0.3382%" height="15" fill="rgb(207,130,4)" fg:x="581" fg:w="14"/><text x="14.2872%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::accum::Sum&lt;core::result::Result&lt;U,E&gt;&gt;&gt;::sum (14 samples, 0.34%)</title><rect x="14.0372%" y="885" width="0.3382%" height="15" fill="rgb(221,25,40)" fg:x="581" fg:w="14"/><text x="14.2872%" y="895.50"></text></g><g><title>core::iter::adapters::process_results (14 samples, 0.34%)</title><rect x="14.0372%" y="869" width="0.3382%" height="15" fill="rgb(241,184,7)" fg:x="581" fg:w="14"/><text x="14.2872%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::accum::Sum&lt;core::result::Result&lt;U,E&gt;&gt;&gt;::sum::{{closure}} (14 samples, 0.34%)</title><rect x="14.0372%" y="853" width="0.3382%" height="15" fill="rgb(235,159,4)" fg:x="581" fg:w="14"/><text x="14.2872%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.34%)</title><rect x="14.0372%" y="837" width="0.3382%" height="15" fill="rgb(214,87,48)" fg:x="581" fg:w="14"/><text x="14.2872%" y="847.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (14 samples, 0.34%)</title><rect x="14.0372%" y="821" width="0.3382%" height="15" fill="rgb(246,198,24)" fg:x="581" fg:w="14"/><text x="14.2872%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.34%)</title><rect x="14.0372%" y="805" width="0.3382%" height="15" fill="rgb(209,66,40)" fg:x="581" fg:w="14"/><text x="14.2872%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.34%)</title><rect x="14.0372%" y="789" width="0.3382%" height="15" fill="rgb(233,147,39)" fg:x="581" fg:w="14"/><text x="14.2872%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.34%)</title><rect x="14.0372%" y="773" width="0.3382%" height="15" fill="rgb(231,145,52)" fg:x="581" fg:w="14"/><text x="14.2872%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.34%)</title><rect x="14.0372%" y="757" width="0.3382%" height="15" fill="rgb(206,20,26)" fg:x="581" fg:w="14"/><text x="14.2872%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.34%)</title><rect x="14.0372%" y="741" width="0.3382%" height="15" fill="rgb(238,220,4)" fg:x="581" fg:w="14"/><text x="14.2872%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.34%)</title><rect x="14.0372%" y="725" width="0.3382%" height="15" fill="rgb(252,195,42)" fg:x="581" fg:w="14"/><text x="14.2872%" y="735.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13 samples, 0.31%)</title><rect x="14.0614%" y="709" width="0.3141%" height="15" fill="rgb(209,10,6)" fg:x="582" fg:w="13"/><text x="14.3114%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13 samples, 0.31%)</title><rect x="14.0614%" y="693" width="0.3141%" height="15" fill="rgb(229,3,52)" fg:x="582" fg:w="13"/><text x="14.3114%" y="703.50"></text></g><g><title>y2021::d08::main::p02::{{closure}} (13 samples, 0.31%)</title><rect x="14.0614%" y="677" width="0.3141%" height="15" fill="rgb(253,49,37)" fg:x="582" fg:w="13"/><text x="14.3114%" y="687.50"></text></g><g><title>y2021::d08::main::signal_value (11 samples, 0.27%)</title><rect x="14.1097%" y="661" width="0.2658%" height="15" fill="rgb(240,103,49)" fg:x="584" fg:w="11"/><text x="14.3597%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3 samples, 0.07%)</title><rect x="14.3030%" y="645" width="0.0725%" height="15" fill="rgb(250,182,30)" fg:x="592" fg:w="3"/><text x="14.5530%" y="655.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3 samples, 0.07%)</title><rect x="14.3030%" y="629" width="0.0725%" height="15" fill="rgb(248,8,30)" fg:x="592" fg:w="3"/><text x="14.5530%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="14.3030%" y="613" width="0.0725%" height="15" fill="rgb(237,120,30)" fg:x="592" fg:w="3"/><text x="14.5530%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="14.3030%" y="597" width="0.0725%" height="15" fill="rgb(221,146,34)" fg:x="592" fg:w="3"/><text x="14.5530%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="14.3030%" y="581" width="0.0725%" height="15" fill="rgb(242,55,13)" fg:x="592" fg:w="3"/><text x="14.5530%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="14.3030%" y="565" width="0.0725%" height="15" fill="rgb(242,112,31)" fg:x="592" fg:w="3"/><text x="14.5530%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.07%)</title><rect x="14.3030%" y="549" width="0.0725%" height="15" fill="rgb(249,192,27)" fg:x="592" fg:w="3"/><text x="14.5530%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.07%)</title><rect x="14.3030%" y="533" width="0.0725%" height="15" fill="rgb(208,204,44)" fg:x="592" fg:w="3"/><text x="14.5530%" y="543.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (2 samples, 0.05%)</title><rect x="14.3271%" y="517" width="0.0483%" height="15" fill="rgb(208,93,54)" fg:x="593" fg:w="2"/><text x="14.5771%" y="527.50"></text></g><g><title>y2021::d08::main::set_from_iter (2 samples, 0.05%)</title><rect x="14.3271%" y="501" width="0.0483%" height="15" fill="rgb(242,1,31)" fg:x="593" fg:w="2"/><text x="14.5771%" y="511.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.05%)</title><rect x="14.3271%" y="485" width="0.0483%" height="15" fill="rgb(241,83,25)" fg:x="593" fg:w="2"/><text x="14.5771%" y="495.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="14.3271%" y="469" width="0.0483%" height="15" fill="rgb(205,169,50)" fg:x="593" fg:w="2"/><text x="14.5771%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="14.3271%" y="453" width="0.0483%" height="15" fill="rgb(239,186,37)" fg:x="593" fg:w="2"/><text x="14.5771%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="14.3513%" y="437" width="0.0242%" height="15" fill="rgb(205,221,10)" fg:x="594" fg:w="1"/><text x="14.6013%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.3513%" y="421" width="0.0242%" height="15" fill="rgb(218,196,15)" fg:x="594" fg:w="1"/><text x="14.6013%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="14.3513%" y="405" width="0.0242%" height="15" fill="rgb(218,196,35)" fg:x="594" fg:w="1"/><text x="14.6013%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="14.3513%" y="389" width="0.0242%" height="15" fill="rgb(233,63,24)" fg:x="594" fg:w="1"/><text x="14.6013%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.3513%" y="373" width="0.0242%" height="15" fill="rgb(225,8,4)" fg:x="594" fg:w="1"/><text x="14.6013%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.3513%" y="357" width="0.0242%" height="15" fill="rgb(234,105,35)" fg:x="594" fg:w="1"/><text x="14.6013%" y="367.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.02%)</title><rect x="14.3513%" y="341" width="0.0242%" height="15" fill="rgb(236,21,32)" fg:x="594" fg:w="1"/><text x="14.6013%" y="351.50"></text></g><g><title>y2021::d09::main::p01 (1 samples, 0.02%)</title><rect x="14.3755%" y="949" width="0.0242%" height="15" fill="rgb(228,109,6)" fg:x="595" fg:w="1"/><text x="14.6255%" y="959.50"></text></g><g><title>y2021::d09::main::lines_to_i32 (1 samples, 0.02%)</title><rect x="14.3755%" y="933" width="0.0242%" height="15" fill="rgb(229,215,31)" fg:x="595" fg:w="1"/><text x="14.6255%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="14.3755%" y="917" width="0.0242%" height="15" fill="rgb(221,52,54)" fg:x="595" fg:w="1"/><text x="14.6255%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.3755%" y="901" width="0.0242%" height="15" fill="rgb(252,129,43)" fg:x="595" fg:w="1"/><text x="14.6255%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.3755%" y="885" width="0.0242%" height="15" fill="rgb(248,183,27)" fg:x="595" fg:w="1"/><text x="14.6255%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.3755%" y="869" width="0.0242%" height="15" fill="rgb(250,0,22)" fg:x="595" fg:w="1"/><text x="14.6255%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="14.3755%" y="853" width="0.0242%" height="15" fill="rgb(213,166,10)" fg:x="595" fg:w="1"/><text x="14.6255%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="14.3755%" y="837" width="0.0242%" height="15" fill="rgb(207,163,36)" fg:x="595" fg:w="1"/><text x="14.6255%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.3755%" y="821" width="0.0242%" height="15" fill="rgb(208,122,22)" fg:x="595" fg:w="1"/><text x="14.6255%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.3755%" y="805" width="0.0242%" height="15" fill="rgb(207,104,49)" fg:x="595" fg:w="1"/><text x="14.6255%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.3755%" y="789" width="0.0242%" height="15" fill="rgb(248,211,50)" fg:x="595" fg:w="1"/><text x="14.6255%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.02%)</title><rect x="14.3755%" y="773" width="0.0242%" height="15" fill="rgb(217,13,45)" fg:x="595" fg:w="1"/><text x="14.6255%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.3755%" y="757" width="0.0242%" height="15" fill="rgb(211,216,49)" fg:x="595" fg:w="1"/><text x="14.6255%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.3755%" y="741" width="0.0242%" height="15" fill="rgb(221,58,53)" fg:x="595" fg:w="1"/><text x="14.6255%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="14.3755%" y="725" width="0.0242%" height="15" fill="rgb(220,112,41)" fg:x="595" fg:w="1"/><text x="14.6255%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="14.3755%" y="709" width="0.0242%" height="15" fill="rgb(236,38,28)" fg:x="595" fg:w="1"/><text x="14.6255%" y="719.50"></text></g><g><title>y2021::d09::main::lines_to_i32::{{closure}} (1 samples, 0.02%)</title><rect x="14.3755%" y="693" width="0.0242%" height="15" fill="rgb(227,195,22)" fg:x="595" fg:w="1"/><text x="14.6255%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.02%)</title><rect x="14.3755%" y="677" width="0.0242%" height="15" fill="rgb(214,55,33)" fg:x="595" fg:w="1"/><text x="14.6255%" y="687.50"></text></g><g><title>y2021::d09::main::lines_to_i32::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="14.3755%" y="661" width="0.0242%" height="15" fill="rgb(248,80,13)" fg:x="595" fg:w="1"/><text x="14.6255%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="14.3755%" y="645" width="0.0242%" height="15" fill="rgb(238,52,6)" fg:x="595" fg:w="1"/><text x="14.6255%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.3755%" y="629" width="0.0242%" height="15" fill="rgb(224,198,47)" fg:x="595" fg:w="1"/><text x="14.6255%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.3755%" y="613" width="0.0242%" height="15" fill="rgb(233,171,20)" fg:x="595" fg:w="1"/><text x="14.6255%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.3755%" y="597" width="0.0242%" height="15" fill="rgb(241,30,25)" fg:x="595" fg:w="1"/><text x="14.6255%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="14.3755%" y="581" width="0.0242%" height="15" fill="rgb(207,171,38)" fg:x="595" fg:w="1"/><text x="14.6255%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="14.3755%" y="565" width="0.0242%" height="15" fill="rgb(234,70,1)" fg:x="595" fg:w="1"/><text x="14.6255%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.3755%" y="549" width="0.0242%" height="15" fill="rgb(232,178,18)" fg:x="595" fg:w="1"/><text x="14.6255%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.3755%" y="533" width="0.0242%" height="15" fill="rgb(241,78,40)" fg:x="595" fg:w="1"/><text x="14.6255%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="14.3755%" y="517" width="0.0242%" height="15" fill="rgb(222,35,25)" fg:x="595" fg:w="1"/><text x="14.6255%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="14.3755%" y="501" width="0.0242%" height="15" fill="rgb(207,92,16)" fg:x="595" fg:w="1"/><text x="14.6255%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="14.3755%" y="485" width="0.0242%" height="15" fill="rgb(216,59,51)" fg:x="595" fg:w="1"/><text x="14.6255%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="14.3755%" y="469" width="0.0242%" height="15" fill="rgb(213,80,28)" fg:x="595" fg:w="1"/><text x="14.6255%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="14.3755%" y="453" width="0.0242%" height="15" fill="rgb(220,93,7)" fg:x="595" fg:w="1"/><text x="14.6255%" y="463.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="14.3755%" y="437" width="0.0242%" height="15" fill="rgb(225,24,44)" fg:x="595" fg:w="1"/><text x="14.6255%" y="447.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="14.3755%" y="421" width="0.0242%" height="15" fill="rgb(243,74,40)" fg:x="595" fg:w="1"/><text x="14.6255%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.02%)</title><rect x="14.3755%" y="405" width="0.0242%" height="15" fill="rgb(228,39,7)" fg:x="595" fg:w="1"/><text x="14.6255%" y="415.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.3996%" y="709" width="0.0242%" height="15" fill="rgb(227,79,8)" fg:x="596" fg:w="1"/><text x="14.6496%" y="719.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.3996%" y="693" width="0.0242%" height="15" fill="rgb(236,58,11)" fg:x="596" fg:w="1"/><text x="14.6496%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.3996%" y="677" width="0.0242%" height="15" fill="rgb(249,63,35)" fg:x="596" fg:w="1"/><text x="14.6496%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.3996%" y="661" width="0.0242%" height="15" fill="rgb(252,114,16)" fg:x="596" fg:w="1"/><text x="14.6496%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.3996%" y="645" width="0.0242%" height="15" fill="rgb(254,151,24)" fg:x="596" fg:w="1"/><text x="14.6496%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.3996%" y="629" width="0.0242%" height="15" fill="rgb(253,54,39)" fg:x="596" fg:w="1"/><text x="14.6496%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.3996%" y="613" width="0.0242%" height="15" fill="rgb(243,25,45)" fg:x="596" fg:w="1"/><text x="14.6496%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.3996%" y="597" width="0.0242%" height="15" fill="rgb(234,134,9)" fg:x="596" fg:w="1"/><text x="14.6496%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.4238%" y="565" width="0.0242%" height="15" fill="rgb(227,166,31)" fg:x="597" fg:w="1"/><text x="14.6738%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.4238%" y="549" width="0.0242%" height="15" fill="rgb(245,143,41)" fg:x="597" fg:w="1"/><text x="14.6738%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.4238%" y="533" width="0.0242%" height="15" fill="rgb(238,181,32)" fg:x="597" fg:w="1"/><text x="14.6738%" y="543.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="14.4238%" y="517" width="0.0242%" height="15" fill="rgb(224,113,18)" fg:x="597" fg:w="1"/><text x="14.6738%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.05%)</title><rect x="14.4238%" y="661" width="0.0483%" height="15" fill="rgb(240,229,28)" fg:x="597" fg:w="2"/><text x="14.6738%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.05%)</title><rect x="14.4238%" y="645" width="0.0483%" height="15" fill="rgb(250,185,3)" fg:x="597" fg:w="2"/><text x="14.6738%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.05%)</title><rect x="14.4238%" y="629" width="0.0483%" height="15" fill="rgb(212,59,25)" fg:x="597" fg:w="2"/><text x="14.6738%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.05%)</title><rect x="14.4238%" y="613" width="0.0483%" height="15" fill="rgb(221,87,20)" fg:x="597" fg:w="2"/><text x="14.6738%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.05%)</title><rect x="14.4238%" y="597" width="0.0483%" height="15" fill="rgb(213,74,28)" fg:x="597" fg:w="2"/><text x="14.6738%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="14.4238%" y="581" width="0.0483%" height="15" fill="rgb(224,132,34)" fg:x="597" fg:w="2"/><text x="14.6738%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="14.4479%" y="565" width="0.0242%" height="15" fill="rgb(222,101,24)" fg:x="598" fg:w="1"/><text x="14.6979%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="14.4479%" y="549" width="0.0242%" height="15" fill="rgb(254,142,4)" fg:x="598" fg:w="1"/><text x="14.6979%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="14.4479%" y="533" width="0.0242%" height="15" fill="rgb(230,229,49)" fg:x="598" fg:w="1"/><text x="14.6979%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="14.4479%" y="517" width="0.0242%" height="15" fill="rgb(238,70,47)" fg:x="598" fg:w="1"/><text x="14.6979%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="14.4479%" y="501" width="0.0242%" height="15" fill="rgb(231,160,17)" fg:x="598" fg:w="1"/><text x="14.6979%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="14.4479%" y="485" width="0.0242%" height="15" fill="rgb(218,68,53)" fg:x="598" fg:w="1"/><text x="14.6979%" y="495.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="14.4479%" y="469" width="0.0242%" height="15" fill="rgb(236,111,10)" fg:x="598" fg:w="1"/><text x="14.6979%" y="479.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.02%)</title><rect x="14.4721%" y="661" width="0.0242%" height="15" fill="rgb(224,34,41)" fg:x="599" fg:w="1"/><text x="14.7221%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="14.4721%" y="645" width="0.0242%" height="15" fill="rgb(241,118,19)" fg:x="599" fg:w="1"/><text x="14.7221%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="14.4721%" y="629" width="0.0242%" height="15" fill="rgb(238,129,25)" fg:x="599" fg:w="1"/><text x="14.7221%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="14.4721%" y="613" width="0.0242%" height="15" fill="rgb(238,22,31)" fg:x="599" fg:w="1"/><text x="14.7221%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.4721%" y="597" width="0.0242%" height="15" fill="rgb(222,174,48)" fg:x="599" fg:w="1"/><text x="14.7221%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="14.4721%" y="581" width="0.0242%" height="15" fill="rgb(206,152,40)" fg:x="599" fg:w="1"/><text x="14.7221%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="14.4721%" y="565" width="0.0242%" height="15" fill="rgb(218,99,54)" fg:x="599" fg:w="1"/><text x="14.7221%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.02%)</title><rect x="14.4721%" y="549" width="0.0242%" height="15" fill="rgb(220,174,26)" fg:x="599" fg:w="1"/><text x="14.7221%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="14.4721%" y="533" width="0.0242%" height="15" fill="rgb(245,116,9)" fg:x="599" fg:w="1"/><text x="14.7221%" y="543.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="14.4721%" y="517" width="0.0242%" height="15" fill="rgb(209,72,35)" fg:x="599" fg:w="1"/><text x="14.7221%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.4963%" y="597" width="0.0242%" height="15" fill="rgb(226,126,21)" fg:x="600" fg:w="1"/><text x="14.7463%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.4963%" y="581" width="0.0242%" height="15" fill="rgb(227,192,1)" fg:x="600" fg:w="1"/><text x="14.7463%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.4963%" y="565" width="0.0242%" height="15" fill="rgb(237,180,29)" fg:x="600" fg:w="1"/><text x="14.7463%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.4963%" y="549" width="0.0242%" height="15" fill="rgb(230,197,35)" fg:x="600" fg:w="1"/><text x="14.7463%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.4963%" y="533" width="0.0242%" height="15" fill="rgb(246,193,31)" fg:x="600" fg:w="1"/><text x="14.7463%" y="543.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="14.4963%" y="517" width="0.0242%" height="15" fill="rgb(241,36,4)" fg:x="600" fg:w="1"/><text x="14.7463%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="14.4963%" y="501" width="0.0242%" height="15" fill="rgb(241,130,17)" fg:x="600" fg:w="1"/><text x="14.7463%" y="511.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="14.4963%" y="485" width="0.0242%" height="15" fill="rgb(206,137,32)" fg:x="600" fg:w="1"/><text x="14.7463%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="14.4963%" y="469" width="0.0242%" height="15" fill="rgb(237,228,51)" fg:x="600" fg:w="1"/><text x="14.7463%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="14.4963%" y="453" width="0.0242%" height="15" fill="rgb(243,6,42)" fg:x="600" fg:w="1"/><text x="14.7463%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="14.4963%" y="437" width="0.0242%" height="15" fill="rgb(251,74,28)" fg:x="600" fg:w="1"/><text x="14.7463%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="14.4963%" y="421" width="0.0242%" height="15" fill="rgb(218,20,49)" fg:x="600" fg:w="1"/><text x="14.7463%" y="431.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.02%)</title><rect x="14.5204%" y="565" width="0.0242%" height="15" fill="rgb(238,28,14)" fg:x="601" fg:w="1"/><text x="14.7704%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="14.5204%" y="549" width="0.0242%" height="15" fill="rgb(229,40,46)" fg:x="601" fg:w="1"/><text x="14.7704%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="14.5204%" y="533" width="0.0242%" height="15" fill="rgb(244,195,20)" fg:x="601" fg:w="1"/><text x="14.7704%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="14.5204%" y="517" width="0.0242%" height="15" fill="rgb(253,56,35)" fg:x="601" fg:w="1"/><text x="14.7704%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.5204%" y="501" width="0.0242%" height="15" fill="rgb(210,149,44)" fg:x="601" fg:w="1"/><text x="14.7704%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="14.5204%" y="485" width="0.0242%" height="15" fill="rgb(240,135,12)" fg:x="601" fg:w="1"/><text x="14.7704%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="14.5204%" y="469" width="0.0242%" height="15" fill="rgb(251,24,50)" fg:x="601" fg:w="1"/><text x="14.7704%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.02%)</title><rect x="14.5204%" y="453" width="0.0242%" height="15" fill="rgb(243,200,47)" fg:x="601" fg:w="1"/><text x="14.7704%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="14.5204%" y="437" width="0.0242%" height="15" fill="rgb(224,166,26)" fg:x="601" fg:w="1"/><text x="14.7704%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="14.5204%" y="421" width="0.0242%" height="15" fill="rgb(233,0,47)" fg:x="601" fg:w="1"/><text x="14.7704%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="14.5204%" y="405" width="0.0242%" height="15" fill="rgb(253,80,5)" fg:x="601" fg:w="1"/><text x="14.7704%" y="415.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.5446%" y="549" width="0.0242%" height="15" fill="rgb(214,133,25)" fg:x="602" fg:w="1"/><text x="14.7946%" y="559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.5446%" y="533" width="0.0242%" height="15" fill="rgb(209,27,14)" fg:x="602" fg:w="1"/><text x="14.7946%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.5446%" y="517" width="0.0242%" height="15" fill="rgb(219,102,51)" fg:x="602" fg:w="1"/><text x="14.7946%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.5446%" y="501" width="0.0242%" height="15" fill="rgb(237,18,16)" fg:x="602" fg:w="1"/><text x="14.7946%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.5446%" y="485" width="0.0242%" height="15" fill="rgb(241,85,17)" fg:x="602" fg:w="1"/><text x="14.7946%" y="495.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="14.5446%" y="469" width="0.0242%" height="15" fill="rgb(236,90,42)" fg:x="602" fg:w="1"/><text x="14.7946%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="14.5446%" y="453" width="0.0242%" height="15" fill="rgb(249,57,21)" fg:x="602" fg:w="1"/><text x="14.7946%" y="463.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="14.5446%" y="437" width="0.0242%" height="15" fill="rgb(243,12,36)" fg:x="602" fg:w="1"/><text x="14.7946%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="14.5446%" y="421" width="0.0242%" height="15" fill="rgb(253,128,47)" fg:x="602" fg:w="1"/><text x="14.7946%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="14.5446%" y="405" width="0.0242%" height="15" fill="rgb(207,33,20)" fg:x="602" fg:w="1"/><text x="14.7946%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="14.5446%" y="389" width="0.0242%" height="15" fill="rgb(233,215,35)" fg:x="602" fg:w="1"/><text x="14.7946%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="14.5446%" y="373" width="0.0242%" height="15" fill="rgb(249,188,52)" fg:x="602" fg:w="1"/><text x="14.7946%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="14.5446%" y="357" width="0.0242%" height="15" fill="rgb(225,12,32)" fg:x="602" fg:w="1"/><text x="14.7946%" y="367.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.5687%" y="197" width="0.0242%" height="15" fill="rgb(247,98,14)" fg:x="603" fg:w="1"/><text x="14.8187%" y="207.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.5687%" y="181" width="0.0242%" height="15" fill="rgb(247,219,48)" fg:x="603" fg:w="1"/><text x="14.8187%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.5687%" y="165" width="0.0242%" height="15" fill="rgb(253,60,48)" fg:x="603" fg:w="1"/><text x="14.8187%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.5687%" y="149" width="0.0242%" height="15" fill="rgb(245,15,52)" fg:x="603" fg:w="1"/><text x="14.8187%" y="159.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.5687%" y="133" width="0.0242%" height="15" fill="rgb(220,133,28)" fg:x="603" fg:w="1"/><text x="14.8187%" y="143.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.5687%" y="117" width="0.0242%" height="15" fill="rgb(217,180,4)" fg:x="603" fg:w="1"/><text x="14.8187%" y="127.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.5687%" y="101" width="0.0242%" height="15" fill="rgb(251,24,1)" fg:x="603" fg:w="1"/><text x="14.8187%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.5687%" y="85" width="0.0242%" height="15" fill="rgb(212,185,49)" fg:x="603" fg:w="1"/><text x="14.8187%" y="95.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.5929%" y="181" width="0.0242%" height="15" fill="rgb(215,175,22)" fg:x="604" fg:w="1"/><text x="14.8429%" y="191.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.5929%" y="165" width="0.0242%" height="15" fill="rgb(250,205,14)" fg:x="604" fg:w="1"/><text x="14.8429%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.5929%" y="149" width="0.0242%" height="15" fill="rgb(225,211,22)" fg:x="604" fg:w="1"/><text x="14.8429%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.5929%" y="133" width="0.0242%" height="15" fill="rgb(251,179,42)" fg:x="604" fg:w="1"/><text x="14.8429%" y="143.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.5929%" y="117" width="0.0242%" height="15" fill="rgb(208,216,51)" fg:x="604" fg:w="1"/><text x="14.8429%" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.5929%" y="101" width="0.0242%" height="15" fill="rgb(235,36,11)" fg:x="604" fg:w="1"/><text x="14.8429%" y="111.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.5929%" y="85" width="0.0242%" height="15" fill="rgb(213,189,28)" fg:x="604" fg:w="1"/><text x="14.8429%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.5929%" y="69" width="0.0242%" height="15" fill="rgb(227,203,42)" fg:x="604" fg:w="1"/><text x="14.8429%" y="79.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="14.5929%" y="53" width="0.0242%" height="15" fill="rgb(244,72,36)" fg:x="604" fg:w="1"/><text x="14.8429%" y="63.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.6171%" y="149" width="0.0242%" height="15" fill="rgb(213,53,17)" fg:x="605" fg:w="1"/><text x="14.8671%" y="159.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.6171%" y="133" width="0.0242%" height="15" fill="rgb(207,167,3)" fg:x="605" fg:w="1"/><text x="14.8671%" y="143.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.6171%" y="117" width="0.0242%" height="15" fill="rgb(216,98,30)" fg:x="605" fg:w="1"/><text x="14.8671%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.6171%" y="101" width="0.0242%" height="15" fill="rgb(236,123,15)" fg:x="605" fg:w="1"/><text x="14.8671%" y="111.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.6171%" y="85" width="0.0242%" height="15" fill="rgb(248,81,50)" fg:x="605" fg:w="1"/><text x="14.8671%" y="95.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="14.6171%" y="69" width="0.0242%" height="15" fill="rgb(214,120,4)" fg:x="605" fg:w="1"/><text x="14.8671%" y="79.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="14.6171%" y="53" width="0.0242%" height="15" fill="rgb(208,179,34)" fg:x="605" fg:w="1"/><text x="14.8671%" y="63.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="14.6171%" y="37" width="0.0242%" height="15" fill="rgb(227,140,7)" fg:x="605" fg:w="1"/><text x="14.8671%" y="47.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.27%)</title><rect x="14.3996%" y="933" width="0.2658%" height="15" fill="rgb(214,22,6)" fg:x="596" fg:w="11"/><text x="14.6496%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.27%)</title><rect x="14.3996%" y="917" width="0.2658%" height="15" fill="rgb(207,137,27)" fg:x="596" fg:w="11"/><text x="14.6496%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.27%)</title><rect x="14.3996%" y="901" width="0.2658%" height="15" fill="rgb(210,8,46)" fg:x="596" fg:w="11"/><text x="14.6496%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 0.27%)</title><rect x="14.3996%" y="885" width="0.2658%" height="15" fill="rgb(240,16,54)" fg:x="596" fg:w="11"/><text x="14.6496%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.27%)</title><rect x="14.3996%" y="869" width="0.2658%" height="15" fill="rgb(211,209,29)" fg:x="596" fg:w="11"/><text x="14.6496%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.27%)</title><rect x="14.3996%" y="853" width="0.2658%" height="15" fill="rgb(226,228,24)" fg:x="596" fg:w="11"/><text x="14.6496%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.27%)</title><rect x="14.3996%" y="837" width="0.2658%" height="15" fill="rgb(222,84,9)" fg:x="596" fg:w="11"/><text x="14.6496%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.27%)</title><rect x="14.3996%" y="821" width="0.2658%" height="15" fill="rgb(234,203,30)" fg:x="596" fg:w="11"/><text x="14.6496%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.27%)</title><rect x="14.3996%" y="805" width="0.2658%" height="15" fill="rgb(238,109,14)" fg:x="596" fg:w="11"/><text x="14.6496%" y="815.50"></text></g><g><title>y2021::d09::main::p02::{{closure}} (11 samples, 0.27%)</title><rect x="14.3996%" y="789" width="0.2658%" height="15" fill="rgb(233,206,34)" fg:x="596" fg:w="11"/><text x="14.6496%" y="799.50"></text></g><g><title>y2021::d09::main::get_basin_size (11 samples, 0.27%)</title><rect x="14.3996%" y="773" width="0.2658%" height="15" fill="rgb(220,167,47)" fg:x="596" fg:w="11"/><text x="14.6496%" y="783.50"></text></g><g><title>y2021::d09::main::get_basin_size (11 samples, 0.27%)</title><rect x="14.3996%" y="757" width="0.2658%" height="15" fill="rgb(238,105,10)" fg:x="596" fg:w="11"/><text x="14.6496%" y="767.50"></text></g><g><title>y2021::d09::main::get_basin_size (11 samples, 0.27%)</title><rect x="14.3996%" y="741" width="0.2658%" height="15" fill="rgb(213,227,17)" fg:x="596" fg:w="11"/><text x="14.6496%" y="751.50"></text></g><g><title>y2021::d09::main::get_basin_size (11 samples, 0.27%)</title><rect x="14.3996%" y="725" width="0.2658%" height="15" fill="rgb(217,132,38)" fg:x="596" fg:w="11"/><text x="14.6496%" y="735.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.24%)</title><rect x="14.4238%" y="709" width="0.2416%" height="15" fill="rgb(242,146,4)" fg:x="597" fg:w="10"/><text x="14.6738%" y="719.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.24%)</title><rect x="14.4238%" y="693" width="0.2416%" height="15" fill="rgb(212,61,9)" fg:x="597" fg:w="10"/><text x="14.6738%" y="703.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.24%)</title><rect x="14.4238%" y="677" width="0.2416%" height="15" fill="rgb(247,126,22)" fg:x="597" fg:w="10"/><text x="14.6738%" y="687.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.17%)</title><rect x="14.4963%" y="661" width="0.1691%" height="15" fill="rgb(220,196,2)" fg:x="600" fg:w="7"/><text x="14.7463%" y="671.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.17%)</title><rect x="14.4963%" y="645" width="0.1691%" height="15" fill="rgb(208,46,4)" fg:x="600" fg:w="7"/><text x="14.7463%" y="655.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.17%)</title><rect x="14.4963%" y="629" width="0.1691%" height="15" fill="rgb(252,104,46)" fg:x="600" fg:w="7"/><text x="14.7463%" y="639.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.17%)</title><rect x="14.4963%" y="613" width="0.1691%" height="15" fill="rgb(237,152,48)" fg:x="600" fg:w="7"/><text x="14.7463%" y="623.50"></text></g><g><title>y2021::d09::main::get_basin_size (6 samples, 0.14%)</title><rect x="14.5204%" y="597" width="0.1450%" height="15" fill="rgb(221,59,37)" fg:x="601" fg:w="6"/><text x="14.7704%" y="607.50"></text></g><g><title>y2021::d09::main::get_basin_size (6 samples, 0.14%)</title><rect x="14.5204%" y="581" width="0.1450%" height="15" fill="rgb(209,202,51)" fg:x="601" fg:w="6"/><text x="14.7704%" y="591.50"></text></g><g><title>y2021::d09::main::get_basin_size (5 samples, 0.12%)</title><rect x="14.5446%" y="565" width="0.1208%" height="15" fill="rgb(228,81,30)" fg:x="602" fg:w="5"/><text x="14.7946%" y="575.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="549" width="0.0966%" height="15" fill="rgb(227,42,39)" fg:x="603" fg:w="4"/><text x="14.8187%" y="559.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="533" width="0.0966%" height="15" fill="rgb(221,26,2)" fg:x="603" fg:w="4"/><text x="14.8187%" y="543.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="517" width="0.0966%" height="15" fill="rgb(254,61,31)" fg:x="603" fg:w="4"/><text x="14.8187%" y="527.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="501" width="0.0966%" height="15" fill="rgb(222,173,38)" fg:x="603" fg:w="4"/><text x="14.8187%" y="511.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="485" width="0.0966%" height="15" fill="rgb(218,50,12)" fg:x="603" fg:w="4"/><text x="14.8187%" y="495.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="469" width="0.0966%" height="15" fill="rgb(223,88,40)" fg:x="603" fg:w="4"/><text x="14.8187%" y="479.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="453" width="0.0966%" height="15" fill="rgb(237,54,19)" fg:x="603" fg:w="4"/><text x="14.8187%" y="463.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="437" width="0.0966%" height="15" fill="rgb(251,129,25)" fg:x="603" fg:w="4"/><text x="14.8187%" y="447.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="421" width="0.0966%" height="15" fill="rgb(238,97,19)" fg:x="603" fg:w="4"/><text x="14.8187%" y="431.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="405" width="0.0966%" height="15" fill="rgb(240,169,18)" fg:x="603" fg:w="4"/><text x="14.8187%" y="415.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="389" width="0.0966%" height="15" fill="rgb(230,187,49)" fg:x="603" fg:w="4"/><text x="14.8187%" y="399.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="373" width="0.0966%" height="15" fill="rgb(209,44,26)" fg:x="603" fg:w="4"/><text x="14.8187%" y="383.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="357" width="0.0966%" height="15" fill="rgb(244,0,6)" fg:x="603" fg:w="4"/><text x="14.8187%" y="367.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="341" width="0.0966%" height="15" fill="rgb(248,18,21)" fg:x="603" fg:w="4"/><text x="14.8187%" y="351.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="325" width="0.0966%" height="15" fill="rgb(245,180,19)" fg:x="603" fg:w="4"/><text x="14.8187%" y="335.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="309" width="0.0966%" height="15" fill="rgb(252,118,36)" fg:x="603" fg:w="4"/><text x="14.8187%" y="319.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="293" width="0.0966%" height="15" fill="rgb(210,224,19)" fg:x="603" fg:w="4"/><text x="14.8187%" y="303.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="277" width="0.0966%" height="15" fill="rgb(218,30,24)" fg:x="603" fg:w="4"/><text x="14.8187%" y="287.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="261" width="0.0966%" height="15" fill="rgb(219,75,50)" fg:x="603" fg:w="4"/><text x="14.8187%" y="271.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="245" width="0.0966%" height="15" fill="rgb(234,72,50)" fg:x="603" fg:w="4"/><text x="14.8187%" y="255.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="229" width="0.0966%" height="15" fill="rgb(219,100,48)" fg:x="603" fg:w="4"/><text x="14.8187%" y="239.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.10%)</title><rect x="14.5687%" y="213" width="0.0966%" height="15" fill="rgb(253,5,41)" fg:x="603" fg:w="4"/><text x="14.8187%" y="223.50"></text></g><g><title>y2021::d09::main::get_basin_size (3 samples, 0.07%)</title><rect x="14.5929%" y="197" width="0.0725%" height="15" fill="rgb(247,181,11)" fg:x="604" fg:w="3"/><text x="14.8429%" y="207.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.05%)</title><rect x="14.6171%" y="181" width="0.0483%" height="15" fill="rgb(222,223,25)" fg:x="605" fg:w="2"/><text x="14.8671%" y="191.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.05%)</title><rect x="14.6171%" y="165" width="0.0483%" height="15" fill="rgb(214,198,28)" fg:x="605" fg:w="2"/><text x="14.8671%" y="175.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.6412%" y="149" width="0.0242%" height="15" fill="rgb(230,46,43)" fg:x="606" fg:w="1"/><text x="14.8912%" y="159.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.6412%" y="133" width="0.0242%" height="15" fill="rgb(233,65,53)" fg:x="606" fg:w="1"/><text x="14.8912%" y="143.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.6412%" y="117" width="0.0242%" height="15" fill="rgb(221,121,27)" fg:x="606" fg:w="1"/><text x="14.8912%" y="127.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.6412%" y="101" width="0.0242%" height="15" fill="rgb(247,70,47)" fg:x="606" fg:w="1"/><text x="14.8912%" y="111.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.6412%" y="85" width="0.0242%" height="15" fill="rgb(228,85,35)" fg:x="606" fg:w="1"/><text x="14.8912%" y="95.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.6412%" y="69" width="0.0242%" height="15" fill="rgb(209,50,18)" fg:x="606" fg:w="1"/><text x="14.8912%" y="79.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.6412%" y="53" width="0.0242%" height="15" fill="rgb(250,19,35)" fg:x="606" fg:w="1"/><text x="14.8912%" y="63.50"></text></g><g><title>y2021::d09::main::value_in_chart (1 samples, 0.02%)</title><rect x="14.6412%" y="37" width="0.0242%" height="15" fill="rgb(253,107,29)" fg:x="606" fg:w="1"/><text x="14.8912%" y="47.50"></text></g><g><title>y2021::d09::main::run (13 samples, 0.31%)</title><rect x="14.3755%" y="965" width="0.3141%" height="15" fill="rgb(252,179,29)" fg:x="595" fg:w="13"/><text x="14.6255%" y="975.50"></text></g><g><title>y2021::d09::main::p02 (12 samples, 0.29%)</title><rect x="14.3996%" y="949" width="0.2899%" height="15" fill="rgb(238,194,6)" fg:x="596" fg:w="12"/><text x="14.6496%" y="959.50"></text></g><g><title>y2021::d09::main::lines_to_i32 (1 samples, 0.02%)</title><rect x="14.6654%" y="933" width="0.0242%" height="15" fill="rgb(238,164,29)" fg:x="607" fg:w="1"/><text x="14.9154%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="14.6654%" y="917" width="0.0242%" height="15" fill="rgb(224,25,9)" fg:x="607" fg:w="1"/><text x="14.9154%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.6654%" y="901" width="0.0242%" height="15" fill="rgb(244,153,23)" fg:x="607" fg:w="1"/><text x="14.9154%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.6654%" y="885" width="0.0242%" height="15" fill="rgb(212,203,14)" fg:x="607" fg:w="1"/><text x="14.9154%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.6654%" y="869" width="0.0242%" height="15" fill="rgb(220,164,20)" fg:x="607" fg:w="1"/><text x="14.9154%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="14.6654%" y="853" width="0.0242%" height="15" fill="rgb(222,203,48)" fg:x="607" fg:w="1"/><text x="14.9154%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="14.6654%" y="837" width="0.0242%" height="15" fill="rgb(215,159,22)" fg:x="607" fg:w="1"/><text x="14.9154%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.6654%" y="821" width="0.0242%" height="15" fill="rgb(216,183,47)" fg:x="607" fg:w="1"/><text x="14.9154%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.6654%" y="805" width="0.0242%" height="15" fill="rgb(229,195,25)" fg:x="607" fg:w="1"/><text x="14.9154%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.6654%" y="789" width="0.0242%" height="15" fill="rgb(224,132,51)" fg:x="607" fg:w="1"/><text x="14.9154%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.02%)</title><rect x="14.6654%" y="773" width="0.0242%" height="15" fill="rgb(240,63,7)" fg:x="607" fg:w="1"/><text x="14.9154%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.6654%" y="757" width="0.0242%" height="15" fill="rgb(249,182,41)" fg:x="607" fg:w="1"/><text x="14.9154%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.6654%" y="741" width="0.0242%" height="15" fill="rgb(243,47,26)" fg:x="607" fg:w="1"/><text x="14.9154%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="14.6654%" y="725" width="0.0242%" height="15" fill="rgb(233,48,2)" fg:x="607" fg:w="1"/><text x="14.9154%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="14.6654%" y="709" width="0.0242%" height="15" fill="rgb(244,165,34)" fg:x="607" fg:w="1"/><text x="14.9154%" y="719.50"></text></g><g><title>y2021::d09::main::lines_to_i32::{{closure}} (1 samples, 0.02%)</title><rect x="14.6654%" y="693" width="0.0242%" height="15" fill="rgb(207,89,7)" fg:x="607" fg:w="1"/><text x="14.9154%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.02%)</title><rect x="14.6654%" y="677" width="0.0242%" height="15" fill="rgb(244,117,36)" fg:x="607" fg:w="1"/><text x="14.9154%" y="687.50"></text></g><g><title>y2021::d09::main::lines_to_i32::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="14.6654%" y="661" width="0.0242%" height="15" fill="rgb(226,144,34)" fg:x="607" fg:w="1"/><text x="14.9154%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="14.6654%" y="645" width="0.0242%" height="15" fill="rgb(213,23,19)" fg:x="607" fg:w="1"/><text x="14.9154%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.6654%" y="629" width="0.0242%" height="15" fill="rgb(217,75,12)" fg:x="607" fg:w="1"/><text x="14.9154%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.6654%" y="613" width="0.0242%" height="15" fill="rgb(224,159,17)" fg:x="607" fg:w="1"/><text x="14.9154%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.6654%" y="597" width="0.0242%" height="15" fill="rgb(217,118,1)" fg:x="607" fg:w="1"/><text x="14.9154%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="14.6654%" y="581" width="0.0242%" height="15" fill="rgb(232,180,48)" fg:x="607" fg:w="1"/><text x="14.9154%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="14.6654%" y="565" width="0.0242%" height="15" fill="rgb(230,27,33)" fg:x="607" fg:w="1"/><text x="14.9154%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.6654%" y="549" width="0.0242%" height="15" fill="rgb(205,31,21)" fg:x="607" fg:w="1"/><text x="14.9154%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="14.6654%" y="533" width="0.0242%" height="15" fill="rgb(253,59,4)" fg:x="607" fg:w="1"/><text x="14.9154%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="14.6654%" y="517" width="0.0242%" height="15" fill="rgb(224,201,9)" fg:x="607" fg:w="1"/><text x="14.9154%" y="527.50"></text></g><g><title>y2021::d09::main::lines_to_i32::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="14.6654%" y="501" width="0.0242%" height="15" fill="rgb(229,206,30)" fg:x="607" fg:w="1"/><text x="14.9154%" y="511.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (1 samples, 0.02%)</title><rect x="14.6654%" y="485" width="0.0242%" height="15" fill="rgb(212,67,47)" fg:x="607" fg:w="1"/><text x="14.9154%" y="495.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="14.6654%" y="469" width="0.0242%" height="15" fill="rgb(211,96,50)" fg:x="607" fg:w="1"/><text x="14.9154%" y="479.50"></text></g><g><title>y2021::d10::main::p01 (2 samples, 0.05%)</title><rect x="14.6895%" y="949" width="0.0483%" height="15" fill="rgb(252,114,18)" fg:x="608" fg:w="2"/><text x="14.9395%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.05%)</title><rect x="14.6895%" y="933" width="0.0483%" height="15" fill="rgb(223,58,37)" fg:x="608" fg:w="2"/><text x="14.9395%" y="943.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.05%)</title><rect x="14.6895%" y="917" width="0.0483%" height="15" fill="rgb(237,70,4)" fg:x="608" fg:w="2"/><text x="14.9395%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="14.6895%" y="901" width="0.0483%" height="15" fill="rgb(244,85,46)" fg:x="608" fg:w="2"/><text x="14.9395%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="14.6895%" y="885" width="0.0483%" height="15" fill="rgb(223,39,52)" fg:x="608" fg:w="2"/><text x="14.9395%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="14.6895%" y="869" width="0.0483%" height="15" fill="rgb(218,200,14)" fg:x="608" fg:w="2"/><text x="14.9395%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.05%)</title><rect x="14.6895%" y="853" width="0.0483%" height="15" fill="rgb(208,171,16)" fg:x="608" fg:w="2"/><text x="14.9395%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.05%)</title><rect x="14.6895%" y="837" width="0.0483%" height="15" fill="rgb(234,200,18)" fg:x="608" fg:w="2"/><text x="14.9395%" y="847.50"></text></g><g><title>y2021::d10::main::p01::{{closure}} (2 samples, 0.05%)</title><rect x="14.6895%" y="821" width="0.0483%" height="15" fill="rgb(228,45,11)" fg:x="608" fg:w="2"/><text x="14.9395%" y="831.50"></text></g><g><title>y2021::d10::main::check_line (2 samples, 0.05%)</title><rect x="14.6895%" y="805" width="0.0483%" height="15" fill="rgb(237,182,11)" fg:x="608" fg:w="2"/><text x="14.9395%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.05%)</title><rect x="14.6895%" y="789" width="0.0483%" height="15" fill="rgb(241,175,49)" fg:x="608" fg:w="2"/><text x="14.9395%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.05%)</title><rect x="14.6895%" y="773" width="0.0483%" height="15" fill="rgb(247,38,35)" fg:x="608" fg:w="2"/><text x="14.9395%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.05%)</title><rect x="14.6895%" y="757" width="0.0483%" height="15" fill="rgb(228,39,49)" fg:x="608" fg:w="2"/><text x="14.9395%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.05%)</title><rect x="14.6895%" y="741" width="0.0483%" height="15" fill="rgb(226,101,26)" fg:x="608" fg:w="2"/><text x="14.9395%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.7137%" y="725" width="0.0242%" height="15" fill="rgb(206,141,19)" fg:x="609" fg:w="1"/><text x="14.9637%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.7137%" y="709" width="0.0242%" height="15" fill="rgb(211,200,13)" fg:x="609" fg:w="1"/><text x="14.9637%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.7137%" y="693" width="0.0242%" height="15" fill="rgb(241,121,6)" fg:x="609" fg:w="1"/><text x="14.9637%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="14.7137%" y="677" width="0.0242%" height="15" fill="rgb(234,221,29)" fg:x="609" fg:w="1"/><text x="14.9637%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="14.7379%" y="693" width="0.0242%" height="15" fill="rgb(229,136,5)" fg:x="610" fg:w="1"/><text x="14.9879%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.7379%" y="677" width="0.0242%" height="15" fill="rgb(238,36,11)" fg:x="610" fg:w="1"/><text x="14.9879%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.7379%" y="661" width="0.0242%" height="15" fill="rgb(251,55,41)" fg:x="610" fg:w="1"/><text x="14.9879%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="14.7379%" y="645" width="0.0242%" height="15" fill="rgb(242,34,40)" fg:x="610" fg:w="1"/><text x="14.9879%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="14.7379%" y="629" width="0.0242%" height="15" fill="rgb(215,42,17)" fg:x="610" fg:w="1"/><text x="14.9879%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="14.7379%" y="613" width="0.0242%" height="15" fill="rgb(207,44,46)" fg:x="610" fg:w="1"/><text x="14.9879%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="14.7379%" y="597" width="0.0242%" height="15" fill="rgb(211,206,28)" fg:x="610" fg:w="1"/><text x="14.9879%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="14.7379%" y="581" width="0.0242%" height="15" fill="rgb(237,167,16)" fg:x="610" fg:w="1"/><text x="14.9879%" y="591.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="14.7379%" y="565" width="0.0242%" height="15" fill="rgb(233,66,6)" fg:x="610" fg:w="1"/><text x="14.9879%" y="575.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="14.7379%" y="549" width="0.0242%" height="15" fill="rgb(246,123,29)" fg:x="610" fg:w="1"/><text x="14.9879%" y="559.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="14.7379%" y="533" width="0.0242%" height="15" fill="rgb(209,62,40)" fg:x="610" fg:w="1"/><text x="14.9879%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="14.7379%" y="517" width="0.0242%" height="15" fill="rgb(218,4,25)" fg:x="610" fg:w="1"/><text x="14.9879%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="14.7379%" y="933" width="0.0483%" height="15" fill="rgb(253,91,49)" fg:x="610" fg:w="2"/><text x="14.9879%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.7379%" y="917" width="0.0483%" height="15" fill="rgb(228,155,29)" fg:x="610" fg:w="2"/><text x="14.9879%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.7379%" y="901" width="0.0483%" height="15" fill="rgb(243,57,37)" fg:x="610" fg:w="2"/><text x="14.9879%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.7379%" y="885" width="0.0483%" height="15" fill="rgb(244,167,17)" fg:x="610" fg:w="2"/><text x="14.9879%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="14.7379%" y="869" width="0.0483%" height="15" fill="rgb(207,181,38)" fg:x="610" fg:w="2"/><text x="14.9879%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.05%)</title><rect x="14.7379%" y="853" width="0.0483%" height="15" fill="rgb(211,8,23)" fg:x="610" fg:w="2"/><text x="14.9879%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="14.7379%" y="837" width="0.0483%" height="15" fill="rgb(235,11,44)" fg:x="610" fg:w="2"/><text x="14.9879%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.05%)</title><rect x="14.7379%" y="821" width="0.0483%" height="15" fill="rgb(248,18,52)" fg:x="610" fg:w="2"/><text x="14.9879%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="14.7379%" y="805" width="0.0483%" height="15" fill="rgb(208,4,7)" fg:x="610" fg:w="2"/><text x="14.9879%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="14.7379%" y="789" width="0.0483%" height="15" fill="rgb(240,17,39)" fg:x="610" fg:w="2"/><text x="14.9879%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="14.7379%" y="773" width="0.0483%" height="15" fill="rgb(207,170,3)" fg:x="610" fg:w="2"/><text x="14.9879%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.05%)</title><rect x="14.7379%" y="757" width="0.0483%" height="15" fill="rgb(236,100,52)" fg:x="610" fg:w="2"/><text x="14.9879%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.05%)</title><rect x="14.7379%" y="741" width="0.0483%" height="15" fill="rgb(246,78,51)" fg:x="610" fg:w="2"/><text x="14.9879%" y="751.50"></text></g><g><title>y2021::d10::main::p02::{{closure}} (2 samples, 0.05%)</title><rect x="14.7379%" y="725" width="0.0483%" height="15" fill="rgb(211,17,15)" fg:x="610" fg:w="2"/><text x="14.9879%" y="735.50"></text></g><g><title>y2021::d10::main::check_line (2 samples, 0.05%)</title><rect x="14.7379%" y="709" width="0.0483%" height="15" fill="rgb(209,59,46)" fg:x="610" fg:w="2"/><text x="14.9879%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.7620%" y="693" width="0.0242%" height="15" fill="rgb(210,92,25)" fg:x="611" fg:w="1"/><text x="15.0120%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.7620%" y="677" width="0.0242%" height="15" fill="rgb(238,174,52)" fg:x="611" fg:w="1"/><text x="15.0120%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.7620%" y="661" width="0.0242%" height="15" fill="rgb(230,73,7)" fg:x="611" fg:w="1"/><text x="15.0120%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.7620%" y="645" width="0.0242%" height="15" fill="rgb(243,124,40)" fg:x="611" fg:w="1"/><text x="15.0120%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (1 samples, 0.02%)</title><rect x="14.7620%" y="629" width="0.0242%" height="15" fill="rgb(244,170,11)" fg:x="611" fg:w="1"/><text x="15.0120%" y="639.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.02%)</title><rect x="14.7620%" y="613" width="0.0242%" height="15" fill="rgb(207,114,54)" fg:x="611" fg:w="1"/><text x="15.0120%" y="623.50"></text></g><g><title>y2021::d10::main::run (5 samples, 0.12%)</title><rect x="14.6895%" y="965" width="0.1208%" height="15" fill="rgb(205,42,20)" fg:x="608" fg:w="5"/><text x="14.9395%" y="975.50"></text></g><g><title>y2021::d10::main::p02 (3 samples, 0.07%)</title><rect x="14.7379%" y="949" width="0.0725%" height="15" fill="rgb(230,30,28)" fg:x="610" fg:w="3"/><text x="14.9879%" y="959.50"></text></g><g><title>y2021::utils::file::read_to_lines (1 samples, 0.02%)</title><rect x="14.7862%" y="933" width="0.0242%" height="15" fill="rgb(205,73,54)" fg:x="612" fg:w="1"/><text x="15.0362%" y="943.50"></text></g><g><title>std::fs::File::open (1 samples, 0.02%)</title><rect x="14.7862%" y="917" width="0.0242%" height="15" fill="rgb(254,227,23)" fg:x="612" fg:w="1"/><text x="15.0362%" y="927.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.02%)</title><rect x="14.7862%" y="901" width="0.0242%" height="15" fill="rgb(228,202,34)" fg:x="612" fg:w="1"/><text x="15.0362%" y="911.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.02%)</title><rect x="14.7862%" y="885" width="0.0242%" height="15" fill="rgb(222,225,37)" fg:x="612" fg:w="1"/><text x="15.0362%" y="895.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.02%)</title><rect x="14.7862%" y="869" width="0.0242%" height="15" fill="rgb(221,14,54)" fg:x="612" fg:w="1"/><text x="15.0362%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.02%)</title><rect x="14.7862%" y="853" width="0.0242%" height="15" fill="rgb(254,102,2)" fg:x="612" fg:w="1"/><text x="15.0362%" y="863.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.02%)</title><rect x="14.7862%" y="837" width="0.0242%" height="15" fill="rgb(232,104,17)" fg:x="612" fg:w="1"/><text x="15.0362%" y="847.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.02%)</title><rect x="14.7862%" y="821" width="0.0242%" height="15" fill="rgb(250,220,14)" fg:x="612" fg:w="1"/><text x="15.0362%" y="831.50"></text></g><g><title>__libc_open64 (1 samples, 0.02%)</title><rect x="14.7862%" y="805" width="0.0242%" height="15" fill="rgb(241,158,9)" fg:x="612" fg:w="1"/><text x="15.0362%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="14.7862%" y="789" width="0.0242%" height="15" fill="rgb(246,9,43)" fg:x="612" fg:w="1"/><text x="15.0362%" y="799.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="14.7862%" y="773" width="0.0242%" height="15" fill="rgb(206,73,33)" fg:x="612" fg:w="1"/><text x="15.0362%" y="783.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.02%)</title><rect x="14.7862%" y="757" width="0.0242%" height="15" fill="rgb(222,79,8)" fg:x="612" fg:w="1"/><text x="15.0362%" y="767.50"></text></g><g><title>do_sys_open (1 samples, 0.02%)</title><rect x="14.7862%" y="741" width="0.0242%" height="15" fill="rgb(234,8,54)" fg:x="612" fg:w="1"/><text x="15.0362%" y="751.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.02%)</title><rect x="14.7862%" y="725" width="0.0242%" height="15" fill="rgb(209,134,38)" fg:x="612" fg:w="1"/><text x="15.0362%" y="735.50"></text></g><g><title>getname (1 samples, 0.02%)</title><rect x="14.7862%" y="709" width="0.0242%" height="15" fill="rgb(230,127,29)" fg:x="612" fg:w="1"/><text x="15.0362%" y="719.50"></text></g><g><title>getname_flags (1 samples, 0.02%)</title><rect x="14.7862%" y="693" width="0.0242%" height="15" fill="rgb(242,44,41)" fg:x="612" fg:w="1"/><text x="15.0362%" y="703.50"></text></g><g><title>memset (1 samples, 0.02%)</title><rect x="14.7862%" y="677" width="0.0242%" height="15" fill="rgb(222,56,43)" fg:x="612" fg:w="1"/><text x="15.0362%" y="687.50"></text></g><g><title>y2021::d11::chart::Chart::inc (1 samples, 0.02%)</title><rect x="14.8103%" y="837" width="0.0242%" height="15" fill="rgb(238,39,47)" fg:x="613" fg:w="1"/><text x="15.0603%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.8103%" y="821" width="0.0242%" height="15" fill="rgb(226,79,43)" fg:x="613" fg:w="1"/><text x="15.0603%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.8103%" y="805" width="0.0242%" height="15" fill="rgb(242,105,53)" fg:x="613" fg:w="1"/><text x="15.0603%" y="815.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.8103%" y="789" width="0.0242%" height="15" fill="rgb(251,132,46)" fg:x="613" fg:w="1"/><text x="15.0603%" y="799.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="14.8103%" y="773" width="0.0242%" height="15" fill="rgb(231,77,14)" fg:x="613" fg:w="1"/><text x="15.0603%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="14.8103%" y="757" width="0.0242%" height="15" fill="rgb(240,135,9)" fg:x="613" fg:w="1"/><text x="15.0603%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="14.8345%" y="725" width="0.1208%" height="15" fill="rgb(248,109,14)" fg:x="614" fg:w="5"/><text x="15.0845%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="14.8345%" y="709" width="0.1208%" height="15" fill="rgb(227,146,52)" fg:x="614" fg:w="5"/><text x="15.0845%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (5 samples, 0.12%)</title><rect x="14.8345%" y="693" width="0.1208%" height="15" fill="rgb(232,54,3)" fg:x="614" fg:w="5"/><text x="15.0845%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.12%)</title><rect x="14.8345%" y="677" width="0.1208%" height="15" fill="rgb(229,201,43)" fg:x="614" fg:w="5"/><text x="15.0845%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.12%)</title><rect x="14.8345%" y="661" width="0.1208%" height="15" fill="rgb(252,161,33)" fg:x="614" fg:w="5"/><text x="15.0845%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.12%)</title><rect x="14.8345%" y="645" width="0.1208%" height="15" fill="rgb(226,146,40)" fg:x="614" fg:w="5"/><text x="15.0845%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (5 samples, 0.12%)</title><rect x="14.8345%" y="629" width="0.1208%" height="15" fill="rgb(219,47,25)" fg:x="614" fg:w="5"/><text x="15.0845%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.12%)</title><rect x="14.8345%" y="613" width="0.1208%" height="15" fill="rgb(250,135,13)" fg:x="614" fg:w="5"/><text x="15.0845%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.12%)</title><rect x="14.8345%" y="597" width="0.1208%" height="15" fill="rgb(219,229,18)" fg:x="614" fg:w="5"/><text x="15.0845%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.12%)</title><rect x="14.8345%" y="581" width="0.1208%" height="15" fill="rgb(217,152,27)" fg:x="614" fg:w="5"/><text x="15.0845%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.12%)</title><rect x="14.8345%" y="565" width="0.1208%" height="15" fill="rgb(225,71,47)" fg:x="614" fg:w="5"/><text x="15.0845%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.12%)</title><rect x="14.8345%" y="549" width="0.1208%" height="15" fill="rgb(220,139,14)" fg:x="614" fg:w="5"/><text x="15.0845%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (5 samples, 0.12%)</title><rect x="14.8345%" y="533" width="0.1208%" height="15" fill="rgb(247,54,32)" fg:x="614" fg:w="5"/><text x="15.0845%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.12%)</title><rect x="14.8345%" y="517" width="0.1208%" height="15" fill="rgb(252,131,39)" fg:x="614" fg:w="5"/><text x="15.0845%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.12%)</title><rect x="14.8345%" y="501" width="0.1208%" height="15" fill="rgb(210,108,39)" fg:x="614" fg:w="5"/><text x="15.0845%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (5 samples, 0.12%)</title><rect x="14.8345%" y="485" width="0.1208%" height="15" fill="rgb(205,23,29)" fg:x="614" fg:w="5"/><text x="15.0845%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.10%)</title><rect x="14.8587%" y="469" width="0.0966%" height="15" fill="rgb(246,139,46)" fg:x="615" fg:w="4"/><text x="15.1087%" y="479.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (4 samples, 0.10%)</title><rect x="14.8587%" y="453" width="0.0966%" height="15" fill="rgb(250,81,26)" fg:x="615" fg:w="4"/><text x="15.1087%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (4 samples, 0.10%)</title><rect x="14.8587%" y="437" width="0.0966%" height="15" fill="rgb(214,104,7)" fg:x="615" fg:w="4"/><text x="15.1087%" y="447.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (4 samples, 0.10%)</title><rect x="14.8587%" y="421" width="0.0966%" height="15" fill="rgb(233,189,8)" fg:x="615" fg:w="4"/><text x="15.1087%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (4 samples, 0.10%)</title><rect x="14.8587%" y="405" width="0.0966%" height="15" fill="rgb(228,141,17)" fg:x="615" fg:w="4"/><text x="15.1087%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.9311%" y="389" width="0.0242%" height="15" fill="rgb(247,157,1)" fg:x="618" fg:w="1"/><text x="15.1811%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.14%)</title><rect x="14.8345%" y="757" width="0.1450%" height="15" fill="rgb(249,225,5)" fg:x="614" fg:w="6"/><text x="15.0845%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 0.14%)</title><rect x="14.8345%" y="741" width="0.1450%" height="15" fill="rgb(242,55,13)" fg:x="614" fg:w="6"/><text x="15.0845%" y="751.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="14.9553%" y="725" width="0.0242%" height="15" fill="rgb(230,49,50)" fg:x="619" fg:w="1"/><text x="15.2053%" y="735.50"></text></g><g><title>y2021::d11::main::p01 (9 samples, 0.22%)</title><rect x="14.8103%" y="949" width="0.2174%" height="15" fill="rgb(241,111,38)" fg:x="613" fg:w="9"/><text x="15.0603%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (9 samples, 0.22%)</title><rect x="14.8103%" y="933" width="0.2174%" height="15" fill="rgb(252,155,4)" fg:x="613" fg:w="9"/><text x="15.0603%" y="943.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (9 samples, 0.22%)</title><rect x="14.8103%" y="917" width="0.2174%" height="15" fill="rgb(212,69,32)" fg:x="613" fg:w="9"/><text x="15.0603%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.22%)</title><rect x="14.8103%" y="901" width="0.2174%" height="15" fill="rgb(243,107,47)" fg:x="613" fg:w="9"/><text x="15.0603%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.22%)</title><rect x="14.8103%" y="885" width="0.2174%" height="15" fill="rgb(247,130,12)" fg:x="613" fg:w="9"/><text x="15.0603%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9 samples, 0.22%)</title><rect x="14.8103%" y="869" width="0.2174%" height="15" fill="rgb(233,74,16)" fg:x="613" fg:w="9"/><text x="15.0603%" y="879.50"></text></g><g><title>y2021::d11::main::p01::{{closure}} (9 samples, 0.22%)</title><rect x="14.8103%" y="853" width="0.2174%" height="15" fill="rgb(208,58,18)" fg:x="613" fg:w="9"/><text x="15.0603%" y="863.50"></text></g><g><title>y2021::d11::main::cycle_step (8 samples, 0.19%)</title><rect x="14.8345%" y="837" width="0.1933%" height="15" fill="rgb(242,225,1)" fg:x="614" fg:w="8"/><text x="15.0845%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.19%)</title><rect x="14.8345%" y="821" width="0.1933%" height="15" fill="rgb(249,39,40)" fg:x="614" fg:w="8"/><text x="15.0845%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.19%)</title><rect x="14.8345%" y="805" width="0.1933%" height="15" fill="rgb(207,72,44)" fg:x="614" fg:w="8"/><text x="15.0845%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.19%)</title><rect x="14.8345%" y="789" width="0.1933%" height="15" fill="rgb(215,193,12)" fg:x="614" fg:w="8"/><text x="15.0845%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.19%)</title><rect x="14.8345%" y="773" width="0.1933%" height="15" fill="rgb(248,41,39)" fg:x="614" fg:w="8"/><text x="15.0845%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="14.9795%" y="757" width="0.0483%" height="15" fill="rgb(253,85,4)" fg:x="620" fg:w="2"/><text x="15.2295%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="14.9795%" y="741" width="0.0483%" height="15" fill="rgb(243,70,31)" fg:x="620" fg:w="2"/><text x="15.2295%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.05%)</title><rect x="14.9795%" y="725" width="0.0483%" height="15" fill="rgb(253,195,26)" fg:x="620" fg:w="2"/><text x="15.2295%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="14.9795%" y="709" width="0.0483%" height="15" fill="rgb(243,42,11)" fg:x="620" fg:w="2"/><text x="15.2295%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="14.9795%" y="693" width="0.0483%" height="15" fill="rgb(239,66,17)" fg:x="620" fg:w="2"/><text x="15.2295%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="14.9795%" y="677" width="0.0483%" height="15" fill="rgb(217,132,21)" fg:x="620" fg:w="2"/><text x="15.2295%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (2 samples, 0.05%)</title><rect x="14.9795%" y="661" width="0.0483%" height="15" fill="rgb(252,202,21)" fg:x="620" fg:w="2"/><text x="15.2295%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="14.9795%" y="645" width="0.0483%" height="15" fill="rgb(233,98,36)" fg:x="620" fg:w="2"/><text x="15.2295%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="14.9795%" y="629" width="0.0483%" height="15" fill="rgb(216,153,54)" fg:x="620" fg:w="2"/><text x="15.2295%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="14.9795%" y="613" width="0.0483%" height="15" fill="rgb(250,99,7)" fg:x="620" fg:w="2"/><text x="15.2295%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.05%)</title><rect x="14.9795%" y="597" width="0.0483%" height="15" fill="rgb(207,56,50)" fg:x="620" fg:w="2"/><text x="15.2295%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.05%)</title><rect x="14.9795%" y="581" width="0.0483%" height="15" fill="rgb(244,61,34)" fg:x="620" fg:w="2"/><text x="15.2295%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (2 samples, 0.05%)</title><rect x="14.9795%" y="565" width="0.0483%" height="15" fill="rgb(241,50,38)" fg:x="620" fg:w="2"/><text x="15.2295%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="14.9795%" y="549" width="0.0483%" height="15" fill="rgb(212,166,30)" fg:x="620" fg:w="2"/><text x="15.2295%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="14.9795%" y="533" width="0.0483%" height="15" fill="rgb(249,127,32)" fg:x="620" fg:w="2"/><text x="15.2295%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.05%)</title><rect x="14.9795%" y="517" width="0.0483%" height="15" fill="rgb(209,103,0)" fg:x="620" fg:w="2"/><text x="15.2295%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="14.9795%" y="501" width="0.0483%" height="15" fill="rgb(238,209,51)" fg:x="620" fg:w="2"/><text x="15.2295%" y="511.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (2 samples, 0.05%)</title><rect x="14.9795%" y="485" width="0.0483%" height="15" fill="rgb(237,56,23)" fg:x="620" fg:w="2"/><text x="15.2295%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.05%)</title><rect x="14.9795%" y="469" width="0.0483%" height="15" fill="rgb(215,153,46)" fg:x="620" fg:w="2"/><text x="15.2295%" y="479.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.05%)</title><rect x="14.9795%" y="453" width="0.0483%" height="15" fill="rgb(224,49,31)" fg:x="620" fg:w="2"/><text x="15.2295%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2 samples, 0.05%)</title><rect x="14.9795%" y="437" width="0.0483%" height="15" fill="rgb(250,18,42)" fg:x="620" fg:w="2"/><text x="15.2295%" y="447.50"></text></g><g><title>y2021::d11::chart::Chart::reset (1 samples, 0.02%)</title><rect x="15.0278%" y="933" width="0.0242%" height="15" fill="rgb(215,176,39)" fg:x="622" fg:w="1"/><text x="15.2778%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.02%)</title><rect x="15.0278%" y="917" width="0.0242%" height="15" fill="rgb(223,77,29)" fg:x="622" fg:w="1"/><text x="15.2778%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="15.0278%" y="901" width="0.0242%" height="15" fill="rgb(234,94,52)" fg:x="622" fg:w="1"/><text x="15.2778%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="15.0278%" y="885" width="0.0242%" height="15" fill="rgb(220,154,50)" fg:x="622" fg:w="1"/><text x="15.2778%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="15.0278%" y="869" width="0.0242%" height="15" fill="rgb(212,11,10)" fg:x="622" fg:w="1"/><text x="15.2778%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="15.0278%" y="853" width="0.0242%" height="15" fill="rgb(205,166,19)" fg:x="622" fg:w="1"/><text x="15.2778%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="15.0278%" y="837" width="0.0242%" height="15" fill="rgb(244,198,16)" fg:x="622" fg:w="1"/><text x="15.2778%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="15.0278%" y="821" width="0.0242%" height="15" fill="rgb(219,69,12)" fg:x="622" fg:w="1"/><text x="15.2778%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="15.0278%" y="805" width="0.0242%" height="15" fill="rgb(245,30,7)" fg:x="622" fg:w="1"/><text x="15.2778%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="15.0278%" y="789" width="0.0242%" height="15" fill="rgb(218,221,48)" fg:x="622" fg:w="1"/><text x="15.2778%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="15.0278%" y="773" width="0.0242%" height="15" fill="rgb(216,66,15)" fg:x="622" fg:w="1"/><text x="15.2778%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="15.0278%" y="757" width="0.0242%" height="15" fill="rgb(226,122,50)" fg:x="622" fg:w="1"/><text x="15.2778%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (1 samples, 0.02%)</title><rect x="15.0278%" y="741" width="0.0242%" height="15" fill="rgb(239,156,16)" fg:x="622" fg:w="1"/><text x="15.2778%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="15.0278%" y="725" width="0.0242%" height="15" fill="rgb(224,27,38)" fg:x="622" fg:w="1"/><text x="15.2778%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="15.0278%" y="709" width="0.0242%" height="15" fill="rgb(224,39,27)" fg:x="622" fg:w="1"/><text x="15.2778%" y="719.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1 samples, 0.02%)</title><rect x="15.0278%" y="693" width="0.0242%" height="15" fill="rgb(215,92,29)" fg:x="622" fg:w="1"/><text x="15.2778%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="15.0278%" y="677" width="0.0242%" height="15" fill="rgb(207,159,16)" fg:x="622" fg:w="1"/><text x="15.2778%" y="687.50"></text></g><g><title>y2021::d11::chart::Chart::reset::{{closure}} (1 samples, 0.02%)</title><rect x="15.0278%" y="661" width="0.0242%" height="15" fill="rgb(238,163,47)" fg:x="622" fg:w="1"/><text x="15.2778%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.27%)</title><rect x="15.0519%" y="741" width="0.2658%" height="15" fill="rgb(219,91,49)" fg:x="623" fg:w="11"/><text x="15.3019%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (11 samples, 0.27%)</title><rect x="15.0519%" y="725" width="0.2658%" height="15" fill="rgb(227,167,31)" fg:x="623" fg:w="11"/><text x="15.3019%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.27%)</title><rect x="15.0519%" y="709" width="0.2658%" height="15" fill="rgb(234,80,54)" fg:x="623" fg:w="11"/><text x="15.3019%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.27%)</title><rect x="15.0519%" y="693" width="0.2658%" height="15" fill="rgb(212,114,2)" fg:x="623" fg:w="11"/><text x="15.3019%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.27%)</title><rect x="15.0519%" y="677" width="0.2658%" height="15" fill="rgb(234,50,24)" fg:x="623" fg:w="11"/><text x="15.3019%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (11 samples, 0.27%)</title><rect x="15.0519%" y="661" width="0.2658%" height="15" fill="rgb(221,68,8)" fg:x="623" fg:w="11"/><text x="15.3019%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (11 samples, 0.27%)</title><rect x="15.0519%" y="645" width="0.2658%" height="15" fill="rgb(254,180,31)" fg:x="623" fg:w="11"/><text x="15.3019%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (11 samples, 0.27%)</title><rect x="15.0519%" y="629" width="0.2658%" height="15" fill="rgb(247,130,50)" fg:x="623" fg:w="11"/><text x="15.3019%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.27%)</title><rect x="15.0519%" y="613" width="0.2658%" height="15" fill="rgb(211,109,4)" fg:x="623" fg:w="11"/><text x="15.3019%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.27%)</title><rect x="15.0519%" y="597" width="0.2658%" height="15" fill="rgb(238,50,21)" fg:x="623" fg:w="11"/><text x="15.3019%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (11 samples, 0.27%)</title><rect x="15.0519%" y="581" width="0.2658%" height="15" fill="rgb(225,57,45)" fg:x="623" fg:w="11"/><text x="15.3019%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.24%)</title><rect x="15.0761%" y="565" width="0.2416%" height="15" fill="rgb(209,196,50)" fg:x="624" fg:w="10"/><text x="15.3261%" y="575.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (10 samples, 0.24%)</title><rect x="15.0761%" y="549" width="0.2416%" height="15" fill="rgb(242,140,13)" fg:x="624" fg:w="10"/><text x="15.3261%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (10 samples, 0.24%)</title><rect x="15.0761%" y="533" width="0.2416%" height="15" fill="rgb(217,111,7)" fg:x="624" fg:w="10"/><text x="15.3261%" y="543.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (10 samples, 0.24%)</title><rect x="15.0761%" y="517" width="0.2416%" height="15" fill="rgb(253,193,51)" fg:x="624" fg:w="10"/><text x="15.3261%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (10 samples, 0.24%)</title><rect x="15.0761%" y="501" width="0.2416%" height="15" fill="rgb(252,70,29)" fg:x="624" fg:w="10"/><text x="15.3261%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="15.2694%" y="485" width="0.0483%" height="15" fill="rgb(232,127,12)" fg:x="632" fg:w="2"/><text x="15.5194%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="15.2935%" y="469" width="0.0242%" height="15" fill="rgb(211,180,21)" fg:x="633" fg:w="1"/><text x="15.5435%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="15.2935%" y="453" width="0.0242%" height="15" fill="rgb(229,72,13)" fg:x="633" fg:w="1"/><text x="15.5435%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17 samples, 0.41%)</title><rect x="15.0519%" y="853" width="0.4107%" height="15" fill="rgb(240,211,49)" fg:x="623" fg:w="17"/><text x="15.3019%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (17 samples, 0.41%)</title><rect x="15.0519%" y="837" width="0.4107%" height="15" fill="rgb(219,149,40)" fg:x="623" fg:w="17"/><text x="15.3019%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.41%)</title><rect x="15.0519%" y="821" width="0.4107%" height="15" fill="rgb(210,127,46)" fg:x="623" fg:w="17"/><text x="15.3019%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.41%)</title><rect x="15.0519%" y="805" width="0.4107%" height="15" fill="rgb(220,106,7)" fg:x="623" fg:w="17"/><text x="15.3019%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (17 samples, 0.41%)</title><rect x="15.0519%" y="789" width="0.4107%" height="15" fill="rgb(249,31,22)" fg:x="623" fg:w="17"/><text x="15.3019%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.41%)</title><rect x="15.0519%" y="773" width="0.4107%" height="15" fill="rgb(253,1,49)" fg:x="623" fg:w="17"/><text x="15.3019%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.41%)</title><rect x="15.0519%" y="757" width="0.4107%" height="15" fill="rgb(227,144,33)" fg:x="623" fg:w="17"/><text x="15.3019%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.14%)</title><rect x="15.3177%" y="741" width="0.1450%" height="15" fill="rgb(249,163,44)" fg:x="634" fg:w="6"/><text x="15.5677%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.14%)</title><rect x="15.3177%" y="725" width="0.1450%" height="15" fill="rgb(234,15,39)" fg:x="634" fg:w="6"/><text x="15.5677%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (6 samples, 0.14%)</title><rect x="15.3177%" y="709" width="0.1450%" height="15" fill="rgb(207,66,16)" fg:x="634" fg:w="6"/><text x="15.5677%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.14%)</title><rect x="15.3177%" y="693" width="0.1450%" height="15" fill="rgb(233,112,24)" fg:x="634" fg:w="6"/><text x="15.5677%" y="703.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (6 samples, 0.14%)</title><rect x="15.3177%" y="677" width="0.1450%" height="15" fill="rgb(230,90,22)" fg:x="634" fg:w="6"/><text x="15.5677%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (6 samples, 0.14%)</title><rect x="15.3177%" y="661" width="0.1450%" height="15" fill="rgb(229,61,13)" fg:x="634" fg:w="6"/><text x="15.5677%" y="671.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (6 samples, 0.14%)</title><rect x="15.3177%" y="645" width="0.1450%" height="15" fill="rgb(225,57,24)" fg:x="634" fg:w="6"/><text x="15.5677%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (6 samples, 0.14%)</title><rect x="15.3177%" y="629" width="0.1450%" height="15" fill="rgb(208,169,48)" fg:x="634" fg:w="6"/><text x="15.5677%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="15.4627%" y="629" width="0.0242%" height="15" fill="rgb(244,218,51)" fg:x="640" fg:w="1"/><text x="15.7127%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 0.56%)</title><rect x="15.0519%" y="917" width="0.5557%" height="15" fill="rgb(214,148,10)" fg:x="623" fg:w="23"/><text x="15.3019%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (23 samples, 0.56%)</title><rect x="15.0519%" y="901" width="0.5557%" height="15" fill="rgb(225,174,27)" fg:x="623" fg:w="23"/><text x="15.3019%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.56%)</title><rect x="15.0519%" y="885" width="0.5557%" height="15" fill="rgb(230,96,26)" fg:x="623" fg:w="23"/><text x="15.3019%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (23 samples, 0.56%)</title><rect x="15.0519%" y="869" width="0.5557%" height="15" fill="rgb(232,10,30)" fg:x="623" fg:w="23"/><text x="15.3019%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.14%)</title><rect x="15.4627%" y="853" width="0.1450%" height="15" fill="rgb(222,8,50)" fg:x="640" fg:w="6"/><text x="15.7127%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.14%)</title><rect x="15.4627%" y="837" width="0.1450%" height="15" fill="rgb(213,81,27)" fg:x="640" fg:w="6"/><text x="15.7127%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (6 samples, 0.14%)</title><rect x="15.4627%" y="821" width="0.1450%" height="15" fill="rgb(245,50,10)" fg:x="640" fg:w="6"/><text x="15.7127%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.14%)</title><rect x="15.4627%" y="805" width="0.1450%" height="15" fill="rgb(216,100,18)" fg:x="640" fg:w="6"/><text x="15.7127%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.14%)</title><rect x="15.4627%" y="789" width="0.1450%" height="15" fill="rgb(236,147,54)" fg:x="640" fg:w="6"/><text x="15.7127%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.14%)</title><rect x="15.4627%" y="773" width="0.1450%" height="15" fill="rgb(205,143,26)" fg:x="640" fg:w="6"/><text x="15.7127%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (6 samples, 0.14%)</title><rect x="15.4627%" y="757" width="0.1450%" height="15" fill="rgb(236,26,9)" fg:x="640" fg:w="6"/><text x="15.7127%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.14%)</title><rect x="15.4627%" y="741" width="0.1450%" height="15" fill="rgb(221,165,53)" fg:x="640" fg:w="6"/><text x="15.7127%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.14%)</title><rect x="15.4627%" y="725" width="0.1450%" height="15" fill="rgb(214,110,17)" fg:x="640" fg:w="6"/><text x="15.7127%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.14%)</title><rect x="15.4627%" y="709" width="0.1450%" height="15" fill="rgb(237,197,12)" fg:x="640" fg:w="6"/><text x="15.7127%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.14%)</title><rect x="15.4627%" y="693" width="0.1450%" height="15" fill="rgb(205,84,17)" fg:x="640" fg:w="6"/><text x="15.7127%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.14%)</title><rect x="15.4627%" y="677" width="0.1450%" height="15" fill="rgb(237,18,45)" fg:x="640" fg:w="6"/><text x="15.7127%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (6 samples, 0.14%)</title><rect x="15.4627%" y="661" width="0.1450%" height="15" fill="rgb(221,87,14)" fg:x="640" fg:w="6"/><text x="15.7127%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.14%)</title><rect x="15.4627%" y="645" width="0.1450%" height="15" fill="rgb(238,186,15)" fg:x="640" fg:w="6"/><text x="15.7127%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.12%)</title><rect x="15.4868%" y="629" width="0.1208%" height="15" fill="rgb(208,115,11)" fg:x="641" fg:w="5"/><text x="15.7368%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (5 samples, 0.12%)</title><rect x="15.4868%" y="613" width="0.1208%" height="15" fill="rgb(254,175,0)" fg:x="641" fg:w="5"/><text x="15.7368%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.12%)</title><rect x="15.4868%" y="597" width="0.1208%" height="15" fill="rgb(227,24,42)" fg:x="641" fg:w="5"/><text x="15.7368%" y="607.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (5 samples, 0.12%)</title><rect x="15.4868%" y="581" width="0.1208%" height="15" fill="rgb(223,211,37)" fg:x="641" fg:w="5"/><text x="15.7368%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (5 samples, 0.12%)</title><rect x="15.4868%" y="565" width="0.1208%" height="15" fill="rgb(235,49,27)" fg:x="641" fg:w="5"/><text x="15.7368%" y="575.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (5 samples, 0.12%)</title><rect x="15.4868%" y="549" width="0.1208%" height="15" fill="rgb(254,97,51)" fg:x="641" fg:w="5"/><text x="15.7368%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (5 samples, 0.12%)</title><rect x="15.4868%" y="533" width="0.1208%" height="15" fill="rgb(249,51,40)" fg:x="641" fg:w="5"/><text x="15.7368%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="15.6076%" y="837" width="0.0242%" height="15" fill="rgb(210,128,45)" fg:x="646" fg:w="1"/><text x="15.8576%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="15.6076%" y="821" width="0.0242%" height="15" fill="rgb(224,137,50)" fg:x="646" fg:w="1"/><text x="15.8576%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="15.6076%" y="805" width="0.0242%" height="15" fill="rgb(242,15,9)" fg:x="646" fg:w="1"/><text x="15.8576%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="15.6076%" y="789" width="0.0242%" height="15" fill="rgb(233,187,41)" fg:x="646" fg:w="1"/><text x="15.8576%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="15.6076%" y="773" width="0.0242%" height="15" fill="rgb(227,2,29)" fg:x="646" fg:w="1"/><text x="15.8576%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="15.6076%" y="757" width="0.0242%" height="15" fill="rgb(222,70,3)" fg:x="646" fg:w="1"/><text x="15.8576%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="15.6076%" y="741" width="0.0242%" height="15" fill="rgb(213,11,42)" fg:x="646" fg:w="1"/><text x="15.8576%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="15.6076%" y="725" width="0.0242%" height="15" fill="rgb(225,150,9)" fg:x="646" fg:w="1"/><text x="15.8576%" y="735.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="15.6076%" y="709" width="0.0242%" height="15" fill="rgb(230,162,45)" fg:x="646" fg:w="1"/><text x="15.8576%" y="719.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="15.6076%" y="693" width="0.0242%" height="15" fill="rgb(222,14,52)" fg:x="646" fg:w="1"/><text x="15.8576%" y="703.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="15.6076%" y="677" width="0.0242%" height="15" fill="rgb(254,198,14)" fg:x="646" fg:w="1"/><text x="15.8576%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="15.6076%" y="661" width="0.0242%" height="15" fill="rgb(220,217,30)" fg:x="646" fg:w="1"/><text x="15.8576%" y="671.50"></text></g><g><title>y2021::d11::main::run (35 samples, 0.85%)</title><rect x="14.8103%" y="965" width="0.8456%" height="15" fill="rgb(215,146,41)" fg:x="613" fg:w="35"/><text x="15.0603%" y="975.50"></text></g><g><title>y2021::d11::main::p02 (26 samples, 0.63%)</title><rect x="15.0278%" y="949" width="0.6282%" height="15" fill="rgb(217,27,36)" fg:x="622" fg:w="26"/><text x="15.2778%" y="959.50"></text></g><g><title>y2021::d11::main::cycle_step (25 samples, 0.60%)</title><rect x="15.0519%" y="933" width="0.6040%" height="15" fill="rgb(219,218,39)" fg:x="623" fg:w="25"/><text x="15.3019%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.05%)</title><rect x="15.6076%" y="917" width="0.0483%" height="15" fill="rgb(219,4,42)" fg:x="646" fg:w="2"/><text x="15.8576%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="15.6076%" y="901" width="0.0483%" height="15" fill="rgb(249,119,36)" fg:x="646" fg:w="2"/><text x="15.8576%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="15.6076%" y="885" width="0.0483%" height="15" fill="rgb(209,23,33)" fg:x="646" fg:w="2"/><text x="15.8576%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.05%)</title><rect x="15.6076%" y="869" width="0.0483%" height="15" fill="rgb(211,10,0)" fg:x="646" fg:w="2"/><text x="15.8576%" y="879.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (2 samples, 0.05%)</title><rect x="15.6076%" y="853" width="0.0483%" height="15" fill="rgb(208,99,37)" fg:x="646" fg:w="2"/><text x="15.8576%" y="863.50"></text></g><g><title>y2021::d11::main::flash_point (1 samples, 0.02%)</title><rect x="15.6318%" y="837" width="0.0242%" height="15" fill="rgb(213,132,31)" fg:x="647" fg:w="1"/><text x="15.8818%" y="847.50"></text></g><g><title>y2021::d11::chart::Chart::at_pos (1 samples, 0.02%)</title><rect x="15.6318%" y="821" width="0.0242%" height="15" fill="rgb(243,129,40)" fg:x="647" fg:w="1"/><text x="15.8818%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.02%)</title><rect x="15.6560%" y="853" width="0.0242%" height="15" fill="rgb(210,66,33)" fg:x="648" fg:w="1"/><text x="15.9060%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.02%)</title><rect x="15.6560%" y="837" width="0.0242%" height="15" fill="rgb(209,189,4)" fg:x="648" fg:w="1"/><text x="15.9060%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.02%)</title><rect x="15.6560%" y="821" width="0.0242%" height="15" fill="rgb(214,107,37)" fg:x="648" fg:w="1"/><text x="15.9060%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1 samples, 0.02%)</title><rect x="15.6560%" y="805" width="0.0242%" height="15" fill="rgb(245,88,54)" fg:x="648" fg:w="1"/><text x="15.9060%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="15.6560%" y="789" width="0.0242%" height="15" fill="rgb(205,146,20)" fg:x="648" fg:w="1"/><text x="15.9060%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="15.6560%" y="773" width="0.0242%" height="15" fill="rgb(220,161,25)" fg:x="648" fg:w="1"/><text x="15.9060%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="15.6560%" y="757" width="0.0242%" height="15" fill="rgb(215,152,15)" fg:x="648" fg:w="1"/><text x="15.9060%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="15.6560%" y="741" width="0.0242%" height="15" fill="rgb(233,192,44)" fg:x="648" fg:w="1"/><text x="15.9060%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="15.6560%" y="725" width="0.0242%" height="15" fill="rgb(240,170,46)" fg:x="648" fg:w="1"/><text x="15.9060%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="15.6560%" y="709" width="0.0242%" height="15" fill="rgb(207,104,33)" fg:x="648" fg:w="1"/><text x="15.9060%" y="719.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="15.6560%" y="693" width="0.0242%" height="15" fill="rgb(219,21,39)" fg:x="648" fg:w="1"/><text x="15.9060%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2 samples, 0.05%)</title><rect x="15.6560%" y="933" width="0.0483%" height="15" fill="rgb(214,133,29)" fg:x="648" fg:w="2"/><text x="15.9060%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (2 samples, 0.05%)</title><rect x="15.6560%" y="917" width="0.0483%" height="15" fill="rgb(226,93,6)" fg:x="648" fg:w="2"/><text x="15.9060%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (2 samples, 0.05%)</title><rect x="15.6560%" y="901" width="0.0483%" height="15" fill="rgb(252,222,34)" fg:x="648" fg:w="2"/><text x="15.9060%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2 samples, 0.05%)</title><rect x="15.6560%" y="885" width="0.0483%" height="15" fill="rgb(252,92,48)" fg:x="648" fg:w="2"/><text x="15.9060%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="15.6560%" y="869" width="0.0483%" height="15" fill="rgb(245,223,24)" fg:x="648" fg:w="2"/><text x="15.9060%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (1 samples, 0.02%)</title><rect x="15.6801%" y="853" width="0.0242%" height="15" fill="rgb(205,176,3)" fg:x="649" fg:w="1"/><text x="15.9301%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.02%)</title><rect x="15.6801%" y="837" width="0.0242%" height="15" fill="rgb(235,151,15)" fg:x="649" fg:w="1"/><text x="15.9301%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="15.6801%" y="821" width="0.0242%" height="15" fill="rgb(237,209,11)" fg:x="649" fg:w="1"/><text x="15.9301%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="15.6801%" y="805" width="0.0242%" height="15" fill="rgb(243,227,24)" fg:x="649" fg:w="1"/><text x="15.9301%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="15.6801%" y="789" width="0.0242%" height="15" fill="rgb(239,193,16)" fg:x="649" fg:w="1"/><text x="15.9301%" y="799.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="15.6801%" y="773" width="0.0242%" height="15" fill="rgb(231,27,9)" fg:x="649" fg:w="1"/><text x="15.9301%" y="783.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="15.6801%" y="757" width="0.0242%" height="15" fill="rgb(219,169,10)" fg:x="649" fg:w="1"/><text x="15.9301%" y="767.50"></text></g><g><title>std::fs::read_to_string (1 samples, 0.02%)</title><rect x="15.7043%" y="933" width="0.0242%" height="15" fill="rgb(244,229,43)" fg:x="650" fg:w="1"/><text x="15.9543%" y="943.50"></text></g><g><title>std::fs::read_to_string::inner (1 samples, 0.02%)</title><rect x="15.7043%" y="917" width="0.0242%" height="15" fill="rgb(254,38,20)" fg:x="650" fg:w="1"/><text x="15.9543%" y="927.50"></text></g><g><title>std::io::Read::read_to_string (1 samples, 0.02%)</title><rect x="15.7043%" y="901" width="0.0242%" height="15" fill="rgb(250,47,30)" fg:x="650" fg:w="1"/><text x="15.9543%" y="911.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.02%)</title><rect x="15.7043%" y="885" width="0.0242%" height="15" fill="rgb(224,124,36)" fg:x="650" fg:w="1"/><text x="15.9543%" y="895.50"></text></g><g><title>std::io::Read::read_to_string::{{closure}} (1 samples, 0.02%)</title><rect x="15.7043%" y="869" width="0.0242%" height="15" fill="rgb(246,68,51)" fg:x="650" fg:w="1"/><text x="15.9543%" y="879.50"></text></g><g><title>std::io::read_to_end (1 samples, 0.02%)</title><rect x="15.7043%" y="853" width="0.0242%" height="15" fill="rgb(253,43,49)" fg:x="650" fg:w="1"/><text x="15.9543%" y="863.50"></text></g><g><title>std::io::read_to_end_with_reservation (1 samples, 0.02%)</title><rect x="15.7043%" y="837" width="0.0242%" height="15" fill="rgb(219,54,36)" fg:x="650" fg:w="1"/><text x="15.9543%" y="847.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.02%)</title><rect x="15.7043%" y="821" width="0.0242%" height="15" fill="rgb(227,133,34)" fg:x="650" fg:w="1"/><text x="15.9543%" y="831.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.02%)</title><rect x="15.7043%" y="805" width="0.0242%" height="15" fill="rgb(247,227,15)" fg:x="650" fg:w="1"/><text x="15.9543%" y="815.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.02%)</title><rect x="15.7043%" y="789" width="0.0242%" height="15" fill="rgb(229,96,14)" fg:x="650" fg:w="1"/><text x="15.9543%" y="799.50"></text></g><g><title>__libc_read (1 samples, 0.02%)</title><rect x="15.7043%" y="773" width="0.0242%" height="15" fill="rgb(220,79,17)" fg:x="650" fg:w="1"/><text x="15.9543%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="15.7043%" y="757" width="0.0242%" height="15" fill="rgb(205,131,53)" fg:x="650" fg:w="1"/><text x="15.9543%" y="767.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="15.7043%" y="741" width="0.0242%" height="15" fill="rgb(209,50,29)" fg:x="650" fg:w="1"/><text x="15.9543%" y="751.50"></text></g><g><title>__x64_sys_read (1 samples, 0.02%)</title><rect x="15.7043%" y="725" width="0.0242%" height="15" fill="rgb(245,86,46)" fg:x="650" fg:w="1"/><text x="15.9543%" y="735.50"></text></g><g><title>ksys_read (1 samples, 0.02%)</title><rect x="15.7043%" y="709" width="0.0242%" height="15" fill="rgb(235,66,46)" fg:x="650" fg:w="1"/><text x="15.9543%" y="719.50"></text></g><g><title>vfs_read (1 samples, 0.02%)</title><rect x="15.7043%" y="693" width="0.0242%" height="15" fill="rgb(232,148,31)" fg:x="650" fg:w="1"/><text x="15.9543%" y="703.50"></text></g><g><title>new_sync_read (1 samples, 0.02%)</title><rect x="15.7043%" y="677" width="0.0242%" height="15" fill="rgb(217,149,8)" fg:x="650" fg:w="1"/><text x="15.9543%" y="687.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="15.7043%" y="661" width="0.0242%" height="15" fill="rgb(209,183,11)" fg:x="650" fg:w="1"/><text x="15.9543%" y="671.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="15.7043%" y="645" width="0.0242%" height="15" fill="rgb(208,55,20)" fg:x="650" fg:w="1"/><text x="15.9543%" y="655.50"></text></g><g><title>generic_file_buffered_read (1 samples, 0.02%)</title><rect x="15.7043%" y="629" width="0.0242%" height="15" fill="rgb(218,39,14)" fg:x="650" fg:w="1"/><text x="15.9543%" y="639.50"></text></g><g><title>touch_atime (1 samples, 0.02%)</title><rect x="15.7043%" y="613" width="0.0242%" height="15" fill="rgb(216,169,33)" fg:x="650" fg:w="1"/><text x="15.9543%" y="623.50"></text></g><g><title>update_time (1 samples, 0.02%)</title><rect x="15.7043%" y="597" width="0.0242%" height="15" fill="rgb(233,80,24)" fg:x="650" fg:w="1"/><text x="15.9543%" y="607.50"></text></g><g><title>generic_update_time (1 samples, 0.02%)</title><rect x="15.7043%" y="581" width="0.0242%" height="15" fill="rgb(213,179,31)" fg:x="650" fg:w="1"/><text x="15.9543%" y="591.50"></text></g><g><title>__mark_inode_dirty (1 samples, 0.02%)</title><rect x="15.7043%" y="565" width="0.0242%" height="15" fill="rgb(209,19,5)" fg:x="650" fg:w="1"/><text x="15.9543%" y="575.50"></text></g><g><title>ext4_dirty_inode (1 samples, 0.02%)</title><rect x="15.7043%" y="549" width="0.0242%" height="15" fill="rgb(219,18,35)" fg:x="650" fg:w="1"/><text x="15.9543%" y="559.50"></text></g><g><title>__ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="15.7043%" y="533" width="0.0242%" height="15" fill="rgb(209,169,16)" fg:x="650" fg:w="1"/><text x="15.9543%" y="543.50"></text></g><g><title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="15.7043%" y="517" width="0.0242%" height="15" fill="rgb(245,90,51)" fg:x="650" fg:w="1"/><text x="15.9543%" y="527.50"></text></g><g><title>ext4_do_update_inode (1 samples, 0.02%)</title><rect x="15.7043%" y="501" width="0.0242%" height="15" fill="rgb(220,99,45)" fg:x="650" fg:w="1"/><text x="15.9543%" y="511.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.05%)</title><rect x="15.7284%" y="853" width="0.0483%" height="15" fill="rgb(249,89,25)" fg:x="651" fg:w="2"/><text x="15.9784%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.05%)</title><rect x="15.7284%" y="837" width="0.0483%" height="15" fill="rgb(239,193,0)" fg:x="651" fg:w="2"/><text x="15.9784%" y="847.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="15.7284%" y="821" width="0.0483%" height="15" fill="rgb(231,126,1)" fg:x="651" fg:w="2"/><text x="15.9784%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="15.7284%" y="805" width="0.0483%" height="15" fill="rgb(243,166,3)" fg:x="651" fg:w="2"/><text x="15.9784%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="15.7284%" y="789" width="0.0483%" height="15" fill="rgb(223,22,34)" fg:x="651" fg:w="2"/><text x="15.9784%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="15.8009%" y="837" width="0.0483%" height="15" fill="rgb(251,52,51)" fg:x="654" fg:w="2"/><text x="16.0509%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.05%)</title><rect x="15.8009%" y="821" width="0.0483%" height="15" fill="rgb(221,165,28)" fg:x="654" fg:w="2"/><text x="16.0509%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="15.8009%" y="805" width="0.0483%" height="15" fill="rgb(218,121,47)" fg:x="654" fg:w="2"/><text x="16.0509%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="15.8009%" y="789" width="0.0483%" height="15" fill="rgb(209,120,9)" fg:x="654" fg:w="2"/><text x="16.0509%" y="799.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.05%)</title><rect x="15.8009%" y="773" width="0.0483%" height="15" fill="rgb(236,68,12)" fg:x="654" fg:w="2"/><text x="16.0509%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.05%)</title><rect x="15.8009%" y="757" width="0.0483%" height="15" fill="rgb(225,194,26)" fg:x="654" fg:w="2"/><text x="16.0509%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="15.8009%" y="741" width="0.0483%" height="15" fill="rgb(231,84,39)" fg:x="654" fg:w="2"/><text x="16.0509%" y="751.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.05%)</title><rect x="15.8009%" y="725" width="0.0483%" height="15" fill="rgb(210,11,45)" fg:x="654" fg:w="2"/><text x="16.0509%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.05%)</title><rect x="15.8009%" y="709" width="0.0483%" height="15" fill="rgb(224,54,52)" fg:x="654" fg:w="2"/><text x="16.0509%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="15.8009%" y="693" width="0.0483%" height="15" fill="rgb(238,102,14)" fg:x="654" fg:w="2"/><text x="16.0509%" y="703.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="15.8009%" y="677" width="0.0483%" height="15" fill="rgb(243,160,52)" fg:x="654" fg:w="2"/><text x="16.0509%" y="687.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (2 samples, 0.05%)</title><rect x="15.8009%" y="661" width="0.0483%" height="15" fill="rgb(216,114,19)" fg:x="654" fg:w="2"/><text x="16.0509%" y="671.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.05%)</title><rect x="15.8009%" y="645" width="0.0483%" height="15" fill="rgb(244,166,37)" fg:x="654" fg:w="2"/><text x="16.0509%" y="655.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.05%)</title><rect x="15.8009%" y="629" width="0.0483%" height="15" fill="rgb(246,29,44)" fg:x="654" fg:w="2"/><text x="16.0509%" y="639.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.02%)</title><rect x="15.8251%" y="613" width="0.0242%" height="15" fill="rgb(215,56,53)" fg:x="655" fg:w="1"/><text x="16.0751%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="15.8492%" y="789" width="0.0242%" height="15" fill="rgb(217,60,2)" fg:x="656" fg:w="1"/><text x="16.0992%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="15.8492%" y="773" width="0.0242%" height="15" fill="rgb(207,26,24)" fg:x="656" fg:w="1"/><text x="16.0992%" y="783.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.02%)</title><rect x="15.8492%" y="757" width="0.0242%" height="15" fill="rgb(252,210,15)" fg:x="656" fg:w="1"/><text x="16.0992%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="15.8492%" y="741" width="0.0242%" height="15" fill="rgb(253,209,26)" fg:x="656" fg:w="1"/><text x="16.0992%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="15.8492%" y="725" width="0.0242%" height="15" fill="rgb(238,170,14)" fg:x="656" fg:w="1"/><text x="16.0992%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="15.8492%" y="709" width="0.0242%" height="15" fill="rgb(216,178,15)" fg:x="656" fg:w="1"/><text x="16.0992%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="15.8492%" y="693" width="0.0242%" height="15" fill="rgb(250,197,2)" fg:x="656" fg:w="1"/><text x="16.0992%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="15.8492%" y="677" width="0.0242%" height="15" fill="rgb(212,70,42)" fg:x="656" fg:w="1"/><text x="16.0992%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="15.8492%" y="661" width="0.0242%" height="15" fill="rgb(227,213,9)" fg:x="656" fg:w="1"/><text x="16.0992%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="15.8492%" y="645" width="0.0242%" height="15" fill="rgb(245,99,25)" fg:x="656" fg:w="1"/><text x="16.0992%" y="655.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.05%)</title><rect x="15.8492%" y="837" width="0.0483%" height="15" fill="rgb(250,82,29)" fg:x="656" fg:w="2"/><text x="16.0992%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.05%)</title><rect x="15.8492%" y="821" width="0.0483%" height="15" fill="rgb(241,226,54)" fg:x="656" fg:w="2"/><text x="16.0992%" y="831.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="15.8492%" y="805" width="0.0483%" height="15" fill="rgb(221,99,41)" fg:x="656" fg:w="2"/><text x="16.0992%" y="815.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.02%)</title><rect x="15.8734%" y="789" width="0.0242%" height="15" fill="rgb(213,90,21)" fg:x="657" fg:w="1"/><text x="16.1234%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="15.8976%" y="821" width="0.0242%" height="15" fill="rgb(205,208,24)" fg:x="658" fg:w="1"/><text x="16.1476%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.02%)</title><rect x="15.8976%" y="805" width="0.0242%" height="15" fill="rgb(246,31,12)" fg:x="658" fg:w="1"/><text x="16.1476%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="15.8976%" y="789" width="0.0242%" height="15" fill="rgb(213,154,6)" fg:x="658" fg:w="1"/><text x="16.1476%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="15.8976%" y="773" width="0.0242%" height="15" fill="rgb(222,163,29)" fg:x="658" fg:w="1"/><text x="16.1476%" y="783.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.02%)</title><rect x="15.8976%" y="757" width="0.0242%" height="15" fill="rgb(227,201,8)" fg:x="658" fg:w="1"/><text x="16.1476%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.02%)</title><rect x="15.8976%" y="741" width="0.0242%" height="15" fill="rgb(233,9,32)" fg:x="658" fg:w="1"/><text x="16.1476%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="15.8976%" y="725" width="0.0242%" height="15" fill="rgb(217,54,24)" fg:x="658" fg:w="1"/><text x="16.1476%" y="735.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.02%)</title><rect x="15.8976%" y="709" width="0.0242%" height="15" fill="rgb(235,192,0)" fg:x="658" fg:w="1"/><text x="16.1476%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.02%)</title><rect x="15.8976%" y="693" width="0.0242%" height="15" fill="rgb(235,45,9)" fg:x="658" fg:w="1"/><text x="16.1476%" y="703.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.05%)</title><rect x="15.9217%" y="821" width="0.0483%" height="15" fill="rgb(246,42,40)" fg:x="659" fg:w="2"/><text x="16.1717%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.05%)</title><rect x="15.9217%" y="805" width="0.0483%" height="15" fill="rgb(248,111,24)" fg:x="659" fg:w="2"/><text x="16.1717%" y="815.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="15.9217%" y="789" width="0.0483%" height="15" fill="rgb(249,65,22)" fg:x="659" fg:w="2"/><text x="16.1717%" y="799.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="15.9217%" y="773" width="0.0483%" height="15" fill="rgb(238,111,51)" fg:x="659" fg:w="2"/><text x="16.1717%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="15.9217%" y="757" width="0.0483%" height="15" fill="rgb(250,118,22)" fg:x="659" fg:w="2"/><text x="16.1717%" y="767.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.05%)</title><rect x="15.9217%" y="741" width="0.0483%" height="15" fill="rgb(234,84,26)" fg:x="659" fg:w="2"/><text x="16.1717%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="15.9217%" y="725" width="0.0483%" height="15" fill="rgb(243,172,12)" fg:x="659" fg:w="2"/><text x="16.1717%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="15.9217%" y="709" width="0.0483%" height="15" fill="rgb(236,150,49)" fg:x="659" fg:w="2"/><text x="16.1717%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="15.9217%" y="693" width="0.0483%" height="15" fill="rgb(225,197,26)" fg:x="659" fg:w="2"/><text x="16.1717%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="15.9217%" y="677" width="0.0483%" height="15" fill="rgb(214,17,42)" fg:x="659" fg:w="2"/><text x="16.1717%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="15.9217%" y="661" width="0.0483%" height="15" fill="rgb(224,165,40)" fg:x="659" fg:w="2"/><text x="16.1717%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="15.9217%" y="645" width="0.0483%" height="15" fill="rgb(246,100,4)" fg:x="659" fg:w="2"/><text x="16.1717%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.05%)</title><rect x="15.9217%" y="629" width="0.0483%" height="15" fill="rgb(222,103,0)" fg:x="659" fg:w="2"/><text x="16.1717%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="15.9217%" y="613" width="0.0483%" height="15" fill="rgb(227,189,26)" fg:x="659" fg:w="2"/><text x="16.1717%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="15.9700%" y="805" width="0.1208%" height="15" fill="rgb(214,202,17)" fg:x="661" fg:w="5"/><text x="16.2200%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (5 samples, 0.12%)</title><rect x="15.9700%" y="789" width="0.1208%" height="15" fill="rgb(229,111,3)" fg:x="661" fg:w="5"/><text x="16.2200%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.12%)</title><rect x="15.9700%" y="773" width="0.1208%" height="15" fill="rgb(229,172,15)" fg:x="661" fg:w="5"/><text x="16.2200%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.12%)</title><rect x="15.9700%" y="757" width="0.1208%" height="15" fill="rgb(230,224,35)" fg:x="661" fg:w="5"/><text x="16.2200%" y="767.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (5 samples, 0.12%)</title><rect x="15.9700%" y="741" width="0.1208%" height="15" fill="rgb(251,141,6)" fg:x="661" fg:w="5"/><text x="16.2200%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (5 samples, 0.12%)</title><rect x="15.9700%" y="725" width="0.1208%" height="15" fill="rgb(225,208,6)" fg:x="661" fg:w="5"/><text x="16.2200%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.12%)</title><rect x="15.9700%" y="709" width="0.1208%" height="15" fill="rgb(246,181,16)" fg:x="661" fg:w="5"/><text x="16.2200%" y="719.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (5 samples, 0.12%)</title><rect x="15.9700%" y="693" width="0.1208%" height="15" fill="rgb(227,129,36)" fg:x="661" fg:w="5"/><text x="16.2200%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (5 samples, 0.12%)</title><rect x="15.9700%" y="677" width="0.1208%" height="15" fill="rgb(248,117,24)" fg:x="661" fg:w="5"/><text x="16.2200%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.07%)</title><rect x="16.0184%" y="661" width="0.0725%" height="15" fill="rgb(214,185,35)" fg:x="663" fg:w="3"/><text x="16.2684%" y="671.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="16.0184%" y="645" width="0.0725%" height="15" fill="rgb(236,150,34)" fg:x="663" fg:w="3"/><text x="16.2684%" y="655.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (3 samples, 0.07%)</title><rect x="16.0184%" y="629" width="0.0725%" height="15" fill="rgb(243,228,27)" fg:x="663" fg:w="3"/><text x="16.2684%" y="639.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (3 samples, 0.07%)</title><rect x="16.0184%" y="613" width="0.0725%" height="15" fill="rgb(245,77,44)" fg:x="663" fg:w="3"/><text x="16.2684%" y="623.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.05%)</title><rect x="16.0425%" y="597" width="0.0483%" height="15" fill="rgb(235,214,42)" fg:x="664" fg:w="2"/><text x="16.2925%" y="607.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="16.0667%" y="581" width="0.0242%" height="15" fill="rgb(221,74,3)" fg:x="665" fg:w="1"/><text x="16.3167%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="16.0667%" y="565" width="0.0242%" height="15" fill="rgb(206,121,29)" fg:x="665" fg:w="1"/><text x="16.3167%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="16.0908%" y="757" width="0.0242%" height="15" fill="rgb(249,131,53)" fg:x="666" fg:w="1"/><text x="16.3408%" y="767.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.05%)</title><rect x="16.0908%" y="805" width="0.0483%" height="15" fill="rgb(236,170,29)" fg:x="666" fg:w="2"/><text x="16.3408%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.05%)</title><rect x="16.0908%" y="789" width="0.0483%" height="15" fill="rgb(247,96,15)" fg:x="666" fg:w="2"/><text x="16.3408%" y="799.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="16.0908%" y="773" width="0.0483%" height="15" fill="rgb(211,210,7)" fg:x="666" fg:w="2"/><text x="16.3408%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="16.1150%" y="757" width="0.0242%" height="15" fill="rgb(240,88,50)" fg:x="667" fg:w="1"/><text x="16.3650%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="16.1150%" y="741" width="0.0242%" height="15" fill="rgb(209,229,26)" fg:x="667" fg:w="1"/><text x="16.3650%" y="751.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.02%)</title><rect x="16.1150%" y="725" width="0.0242%" height="15" fill="rgb(210,68,23)" fg:x="667" fg:w="1"/><text x="16.3650%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="16.1150%" y="709" width="0.0242%" height="15" fill="rgb(229,180,13)" fg:x="667" fg:w="1"/><text x="16.3650%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="16.1150%" y="693" width="0.0242%" height="15" fill="rgb(236,53,44)" fg:x="667" fg:w="1"/><text x="16.3650%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="16.1150%" y="677" width="0.0242%" height="15" fill="rgb(244,214,29)" fg:x="667" fg:w="1"/><text x="16.3650%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="16.1150%" y="661" width="0.0242%" height="15" fill="rgb(220,75,29)" fg:x="667" fg:w="1"/><text x="16.3650%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="16.1150%" y="645" width="0.0242%" height="15" fill="rgb(214,183,37)" fg:x="667" fg:w="1"/><text x="16.3650%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="16.1150%" y="629" width="0.0242%" height="15" fill="rgb(239,117,29)" fg:x="667" fg:w="1"/><text x="16.3650%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="16.1150%" y="613" width="0.0242%" height="15" fill="rgb(237,171,35)" fg:x="667" fg:w="1"/><text x="16.3650%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="16.1150%" y="597" width="0.0242%" height="15" fill="rgb(229,178,53)" fg:x="667" fg:w="1"/><text x="16.3650%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="16.1150%" y="581" width="0.0242%" height="15" fill="rgb(210,102,19)" fg:x="667" fg:w="1"/><text x="16.3650%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="16.1150%" y="565" width="0.0242%" height="15" fill="rgb(235,127,22)" fg:x="667" fg:w="1"/><text x="16.3650%" y="575.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="16.1150%" y="549" width="0.0242%" height="15" fill="rgb(244,31,31)" fg:x="667" fg:w="1"/><text x="16.3650%" y="559.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="16.1150%" y="533" width="0.0242%" height="15" fill="rgb(231,43,21)" fg:x="667" fg:w="1"/><text x="16.3650%" y="543.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="16.1150%" y="517" width="0.0242%" height="15" fill="rgb(217,131,35)" fg:x="667" fg:w="1"/><text x="16.3650%" y="527.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="16.1150%" y="501" width="0.0242%" height="15" fill="rgb(221,149,4)" fg:x="667" fg:w="1"/><text x="16.3650%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="16.1392%" y="805" width="0.0242%" height="15" fill="rgb(232,170,28)" fg:x="668" fg:w="1"/><text x="16.3892%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="16.1392%" y="789" width="0.0242%" height="15" fill="rgb(238,56,10)" fg:x="668" fg:w="1"/><text x="16.3892%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="16.1392%" y="773" width="0.0242%" height="15" fill="rgb(235,196,14)" fg:x="668" fg:w="1"/><text x="16.3892%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="16.1392%" y="757" width="0.0242%" height="15" fill="rgb(216,45,48)" fg:x="668" fg:w="1"/><text x="16.3892%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.1392%" y="741" width="0.0242%" height="15" fill="rgb(238,213,17)" fg:x="668" fg:w="1"/><text x="16.3892%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.1392%" y="725" width="0.0242%" height="15" fill="rgb(212,13,2)" fg:x="668" fg:w="1"/><text x="16.3892%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.1392%" y="709" width="0.0242%" height="15" fill="rgb(240,114,20)" fg:x="668" fg:w="1"/><text x="16.3892%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.05%)</title><rect x="16.1633%" y="661" width="0.0483%" height="15" fill="rgb(228,41,40)" fg:x="669" fg:w="2"/><text x="16.4133%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="16.1875%" y="645" width="0.0242%" height="15" fill="rgb(244,132,35)" fg:x="670" fg:w="1"/><text x="16.4375%" y="655.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="16.1875%" y="629" width="0.0242%" height="15" fill="rgb(253,189,4)" fg:x="670" fg:w="1"/><text x="16.4375%" y="639.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.02%)</title><rect x="16.1875%" y="613" width="0.0242%" height="15" fill="rgb(224,37,19)" fg:x="670" fg:w="1"/><text x="16.4375%" y="623.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.02%)</title><rect x="16.1875%" y="597" width="0.0242%" height="15" fill="rgb(235,223,18)" fg:x="670" fg:w="1"/><text x="16.4375%" y="607.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.02%)</title><rect x="16.1875%" y="581" width="0.0242%" height="15" fill="rgb(235,163,25)" fg:x="670" fg:w="1"/><text x="16.4375%" y="591.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.02%)</title><rect x="16.1875%" y="565" width="0.0242%" height="15" fill="rgb(217,145,28)" fg:x="670" fg:w="1"/><text x="16.4375%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="16.1633%" y="789" width="0.0725%" height="15" fill="rgb(223,223,32)" fg:x="669" fg:w="3"/><text x="16.4133%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.07%)</title><rect x="16.1633%" y="773" width="0.0725%" height="15" fill="rgb(227,189,39)" fg:x="669" fg:w="3"/><text x="16.4133%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.07%)</title><rect x="16.1633%" y="757" width="0.0725%" height="15" fill="rgb(248,10,22)" fg:x="669" fg:w="3"/><text x="16.4133%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="16.1633%" y="741" width="0.0725%" height="15" fill="rgb(248,46,39)" fg:x="669" fg:w="3"/><text x="16.4133%" y="751.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3 samples, 0.07%)</title><rect x="16.1633%" y="725" width="0.0725%" height="15" fill="rgb(248,113,48)" fg:x="669" fg:w="3"/><text x="16.4133%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.07%)</title><rect x="16.1633%" y="709" width="0.0725%" height="15" fill="rgb(245,16,25)" fg:x="669" fg:w="3"/><text x="16.4133%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.07%)</title><rect x="16.1633%" y="693" width="0.0725%" height="15" fill="rgb(249,152,16)" fg:x="669" fg:w="3"/><text x="16.4133%" y="703.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (3 samples, 0.07%)</title><rect x="16.1633%" y="677" width="0.0725%" height="15" fill="rgb(250,16,1)" fg:x="669" fg:w="3"/><text x="16.4133%" y="687.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (1 samples, 0.02%)</title><rect x="16.2116%" y="661" width="0.0242%" height="15" fill="rgb(249,138,3)" fg:x="671" fg:w="1"/><text x="16.4616%" y="671.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.02%)</title><rect x="16.2116%" y="645" width="0.0242%" height="15" fill="rgb(227,71,41)" fg:x="671" fg:w="1"/><text x="16.4616%" y="655.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.02%)</title><rect x="16.2116%" y="629" width="0.0242%" height="15" fill="rgb(209,184,23)" fg:x="671" fg:w="1"/><text x="16.4616%" y="639.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.02%)</title><rect x="16.2116%" y="613" width="0.0242%" height="15" fill="rgb(223,215,31)" fg:x="671" fg:w="1"/><text x="16.4616%" y="623.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.02%)</title><rect x="16.2116%" y="597" width="0.0242%" height="15" fill="rgb(210,146,28)" fg:x="671" fg:w="1"/><text x="16.4616%" y="607.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="16.2116%" y="581" width="0.0242%" height="15" fill="rgb(209,183,41)" fg:x="671" fg:w="1"/><text x="16.4616%" y="591.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="16.2116%" y="565" width="0.0242%" height="15" fill="rgb(209,224,45)" fg:x="671" fg:w="1"/><text x="16.4616%" y="575.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="16.2116%" y="549" width="0.0242%" height="15" fill="rgb(224,209,51)" fg:x="671" fg:w="1"/><text x="16.4616%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="16.2600%" y="565" width="0.0242%" height="15" fill="rgb(223,17,39)" fg:x="673" fg:w="1"/><text x="16.5100%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="16.2600%" y="549" width="0.0242%" height="15" fill="rgb(234,204,37)" fg:x="673" fg:w="1"/><text x="16.5100%" y="559.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="16.2600%" y="533" width="0.0242%" height="15" fill="rgb(236,120,5)" fg:x="673" fg:w="1"/><text x="16.5100%" y="543.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="16.2600%" y="517" width="0.0242%" height="15" fill="rgb(248,97,27)" fg:x="673" fg:w="1"/><text x="16.5100%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.02%)</title><rect x="16.2600%" y="501" width="0.0242%" height="15" fill="rgb(240,66,17)" fg:x="673" fg:w="1"/><text x="16.5100%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="16.2600%" y="645" width="0.0483%" height="15" fill="rgb(210,79,3)" fg:x="673" fg:w="2"/><text x="16.5100%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="16.2600%" y="629" width="0.0483%" height="15" fill="rgb(214,176,27)" fg:x="673" fg:w="2"/><text x="16.5100%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="16.2600%" y="613" width="0.0483%" height="15" fill="rgb(235,185,3)" fg:x="673" fg:w="2"/><text x="16.5100%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.05%)</title><rect x="16.2600%" y="597" width="0.0483%" height="15" fill="rgb(227,24,12)" fg:x="673" fg:w="2"/><text x="16.5100%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="16.2600%" y="581" width="0.0483%" height="15" fill="rgb(252,169,48)" fg:x="673" fg:w="2"/><text x="16.5100%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="16.2841%" y="565" width="0.0242%" height="15" fill="rgb(212,65,1)" fg:x="674" fg:w="1"/><text x="16.5341%" y="575.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.10%)</title><rect x="16.2358%" y="789" width="0.0966%" height="15" fill="rgb(242,39,24)" fg:x="672" fg:w="4"/><text x="16.4858%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.10%)</title><rect x="16.2358%" y="773" width="0.0966%" height="15" fill="rgb(249,32,23)" fg:x="672" fg:w="4"/><text x="16.4858%" y="783.50"></text></g><g><title>core::fmt::write (4 samples, 0.10%)</title><rect x="16.2358%" y="757" width="0.0966%" height="15" fill="rgb(251,195,23)" fg:x="672" fg:w="4"/><text x="16.4858%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.07%)</title><rect x="16.2600%" y="741" width="0.0725%" height="15" fill="rgb(236,174,8)" fg:x="673" fg:w="3"/><text x="16.5100%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.07%)</title><rect x="16.2600%" y="725" width="0.0725%" height="15" fill="rgb(220,197,8)" fg:x="673" fg:w="3"/><text x="16.5100%" y="735.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.07%)</title><rect x="16.2600%" y="709" width="0.0725%" height="15" fill="rgb(240,108,37)" fg:x="673" fg:w="3"/><text x="16.5100%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.07%)</title><rect x="16.2600%" y="693" width="0.0725%" height="15" fill="rgb(232,176,24)" fg:x="673" fg:w="3"/><text x="16.5100%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.07%)</title><rect x="16.2600%" y="677" width="0.0725%" height="15" fill="rgb(243,35,29)" fg:x="673" fg:w="3"/><text x="16.5100%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.07%)</title><rect x="16.2600%" y="661" width="0.0725%" height="15" fill="rgb(210,37,18)" fg:x="673" fg:w="3"/><text x="16.5100%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="16.3083%" y="645" width="0.0242%" height="15" fill="rgb(224,184,40)" fg:x="675" fg:w="1"/><text x="16.5583%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="16.3083%" y="629" width="0.0242%" height="15" fill="rgb(236,39,29)" fg:x="675" fg:w="1"/><text x="16.5583%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="16.3324%" y="789" width="0.0242%" height="15" fill="rgb(232,48,39)" fg:x="676" fg:w="1"/><text x="16.5824%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="16.3324%" y="773" width="0.0242%" height="15" fill="rgb(236,34,42)" fg:x="676" fg:w="1"/><text x="16.5824%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="16.3324%" y="757" width="0.0242%" height="15" fill="rgb(243,106,37)" fg:x="676" fg:w="1"/><text x="16.5824%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="16.3324%" y="741" width="0.0242%" height="15" fill="rgb(218,96,6)" fg:x="676" fg:w="1"/><text x="16.5824%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="16.3566%" y="773" width="0.0483%" height="15" fill="rgb(235,130,12)" fg:x="677" fg:w="2"/><text x="16.6066%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.05%)</title><rect x="16.3566%" y="757" width="0.0483%" height="15" fill="rgb(231,95,0)" fg:x="677" fg:w="2"/><text x="16.6066%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="16.3566%" y="741" width="0.0483%" height="15" fill="rgb(228,12,23)" fg:x="677" fg:w="2"/><text x="16.6066%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="16.3566%" y="725" width="0.0483%" height="15" fill="rgb(216,12,1)" fg:x="677" fg:w="2"/><text x="16.6066%" y="735.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.05%)</title><rect x="16.3566%" y="709" width="0.0483%" height="15" fill="rgb(219,59,3)" fg:x="677" fg:w="2"/><text x="16.6066%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.05%)</title><rect x="16.3566%" y="693" width="0.0483%" height="15" fill="rgb(215,208,46)" fg:x="677" fg:w="2"/><text x="16.6066%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="16.3566%" y="677" width="0.0483%" height="15" fill="rgb(254,224,29)" fg:x="677" fg:w="2"/><text x="16.6066%" y="687.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.05%)</title><rect x="16.3566%" y="661" width="0.0483%" height="15" fill="rgb(232,14,29)" fg:x="677" fg:w="2"/><text x="16.6066%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.05%)</title><rect x="16.3566%" y="645" width="0.0483%" height="15" fill="rgb(208,45,52)" fg:x="677" fg:w="2"/><text x="16.6066%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="16.3808%" y="629" width="0.0242%" height="15" fill="rgb(234,191,28)" fg:x="678" fg:w="1"/><text x="16.6308%" y="639.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="16.3808%" y="613" width="0.0242%" height="15" fill="rgb(244,67,43)" fg:x="678" fg:w="1"/><text x="16.6308%" y="623.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.02%)</title><rect x="16.3808%" y="597" width="0.0242%" height="15" fill="rgb(236,189,24)" fg:x="678" fg:w="1"/><text x="16.6308%" y="607.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.02%)</title><rect x="16.3808%" y="581" width="0.0242%" height="15" fill="rgb(239,214,33)" fg:x="678" fg:w="1"/><text x="16.6308%" y="591.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.02%)</title><rect x="16.3808%" y="565" width="0.0242%" height="15" fill="rgb(226,176,41)" fg:x="678" fg:w="1"/><text x="16.6308%" y="575.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="16.4049%" y="773" width="0.0242%" height="15" fill="rgb(248,47,8)" fg:x="679" fg:w="1"/><text x="16.6549%" y="783.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="16.4049%" y="757" width="0.0242%" height="15" fill="rgb(218,81,44)" fg:x="679" fg:w="1"/><text x="16.6549%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="16.4049%" y="741" width="0.0242%" height="15" fill="rgb(213,98,6)" fg:x="679" fg:w="1"/><text x="16.6549%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="16.4049%" y="725" width="0.0242%" height="15" fill="rgb(222,85,22)" fg:x="679" fg:w="1"/><text x="16.6549%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="16.4049%" y="709" width="0.0242%" height="15" fill="rgb(239,46,39)" fg:x="679" fg:w="1"/><text x="16.6549%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.4049%" y="693" width="0.0242%" height="15" fill="rgb(237,12,29)" fg:x="679" fg:w="1"/><text x="16.6549%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.4049%" y="677" width="0.0242%" height="15" fill="rgb(214,77,8)" fg:x="679" fg:w="1"/><text x="16.6549%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.4049%" y="661" width="0.0242%" height="15" fill="rgb(217,168,37)" fg:x="679" fg:w="1"/><text x="16.6549%" y="671.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.02%)</title><rect x="16.4291%" y="773" width="0.0242%" height="15" fill="rgb(221,217,23)" fg:x="680" fg:w="1"/><text x="16.6791%" y="783.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="16.4291%" y="757" width="0.0242%" height="15" fill="rgb(243,229,36)" fg:x="680" fg:w="1"/><text x="16.6791%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="16.4291%" y="741" width="0.0242%" height="15" fill="rgb(251,163,40)" fg:x="680" fg:w="1"/><text x="16.6791%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.02%)</title><rect x="16.4291%" y="725" width="0.0242%" height="15" fill="rgb(237,222,12)" fg:x="680" fg:w="1"/><text x="16.6791%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="16.4291%" y="709" width="0.0242%" height="15" fill="rgb(248,132,6)" fg:x="680" fg:w="1"/><text x="16.6791%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="16.4291%" y="693" width="0.0242%" height="15" fill="rgb(227,167,50)" fg:x="680" fg:w="1"/><text x="16.6791%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="16.4291%" y="677" width="0.0242%" height="15" fill="rgb(242,84,37)" fg:x="680" fg:w="1"/><text x="16.6791%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="16.4291%" y="661" width="0.0242%" height="15" fill="rgb(212,4,50)" fg:x="680" fg:w="1"/><text x="16.6791%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="16.4291%" y="645" width="0.0242%" height="15" fill="rgb(230,228,32)" fg:x="680" fg:w="1"/><text x="16.6791%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="16.4291%" y="629" width="0.0242%" height="15" fill="rgb(248,217,23)" fg:x="680" fg:w="1"/><text x="16.6791%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="16.4291%" y="613" width="0.0242%" height="15" fill="rgb(238,197,32)" fg:x="680" fg:w="1"/><text x="16.6791%" y="623.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="16.4291%" y="597" width="0.0242%" height="15" fill="rgb(236,106,1)" fg:x="680" fg:w="1"/><text x="16.6791%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="16.4532%" y="757" width="0.0242%" height="15" fill="rgb(219,228,13)" fg:x="681" fg:w="1"/><text x="16.7032%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.02%)</title><rect x="16.4532%" y="741" width="0.0242%" height="15" fill="rgb(238,30,35)" fg:x="681" fg:w="1"/><text x="16.7032%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="16.4532%" y="725" width="0.0242%" height="15" fill="rgb(236,70,23)" fg:x="681" fg:w="1"/><text x="16.7032%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="16.4532%" y="709" width="0.0242%" height="15" fill="rgb(249,104,48)" fg:x="681" fg:w="1"/><text x="16.7032%" y="719.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.02%)</title><rect x="16.4532%" y="693" width="0.0242%" height="15" fill="rgb(254,117,50)" fg:x="681" fg:w="1"/><text x="16.7032%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.02%)</title><rect x="16.4532%" y="677" width="0.0242%" height="15" fill="rgb(223,152,4)" fg:x="681" fg:w="1"/><text x="16.7032%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="16.4532%" y="661" width="0.0242%" height="15" fill="rgb(245,6,2)" fg:x="681" fg:w="1"/><text x="16.7032%" y="671.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.02%)</title><rect x="16.4532%" y="645" width="0.0242%" height="15" fill="rgb(249,150,24)" fg:x="681" fg:w="1"/><text x="16.7032%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.02%)</title><rect x="16.4532%" y="629" width="0.0242%" height="15" fill="rgb(228,185,42)" fg:x="681" fg:w="1"/><text x="16.7032%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="16.4532%" y="613" width="0.0242%" height="15" fill="rgb(226,39,33)" fg:x="681" fg:w="1"/><text x="16.7032%" y="623.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="16.4532%" y="597" width="0.0242%" height="15" fill="rgb(221,166,19)" fg:x="681" fg:w="1"/><text x="16.7032%" y="607.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.02%)</title><rect x="16.4532%" y="581" width="0.0242%" height="15" fill="rgb(209,109,2)" fg:x="681" fg:w="1"/><text x="16.7032%" y="591.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.02%)</title><rect x="16.4532%" y="565" width="0.0242%" height="15" fill="rgb(252,216,26)" fg:x="681" fg:w="1"/><text x="16.7032%" y="575.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.02%)</title><rect x="16.4532%" y="549" width="0.0242%" height="15" fill="rgb(227,173,36)" fg:x="681" fg:w="1"/><text x="16.7032%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="16.4532%" y="533" width="0.0242%" height="15" fill="rgb(209,90,7)" fg:x="681" fg:w="1"/><text x="16.7032%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="16.4532%" y="517" width="0.0242%" height="15" fill="rgb(250,194,11)" fg:x="681" fg:w="1"/><text x="16.7032%" y="527.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="16.4774%" y="485" width="0.0242%" height="15" fill="rgb(220,72,50)" fg:x="682" fg:w="1"/><text x="16.7274%" y="495.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="16.4774%" y="469" width="0.0242%" height="15" fill="rgb(222,106,48)" fg:x="682" fg:w="1"/><text x="16.7274%" y="479.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="16.4774%" y="453" width="0.0242%" height="15" fill="rgb(216,220,45)" fg:x="682" fg:w="1"/><text x="16.7274%" y="463.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="16.5016%" y="485" width="0.0242%" height="15" fill="rgb(234,112,18)" fg:x="683" fg:w="1"/><text x="16.7516%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.02%)</title><rect x="16.5016%" y="469" width="0.0242%" height="15" fill="rgb(206,179,9)" fg:x="683" fg:w="1"/><text x="16.7516%" y="479.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.07%)</title><rect x="16.4774%" y="757" width="0.0725%" height="15" fill="rgb(215,115,40)" fg:x="682" fg:w="3"/><text x="16.7274%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.07%)</title><rect x="16.4774%" y="741" width="0.0725%" height="15" fill="rgb(222,69,34)" fg:x="682" fg:w="3"/><text x="16.7274%" y="751.50"></text></g><g><title>core::fmt::write (3 samples, 0.07%)</title><rect x="16.4774%" y="725" width="0.0725%" height="15" fill="rgb(209,161,10)" fg:x="682" fg:w="3"/><text x="16.7274%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.07%)</title><rect x="16.4774%" y="709" width="0.0725%" height="15" fill="rgb(217,6,38)" fg:x="682" fg:w="3"/><text x="16.7274%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.07%)</title><rect x="16.4774%" y="693" width="0.0725%" height="15" fill="rgb(229,229,48)" fg:x="682" fg:w="3"/><text x="16.7274%" y="703.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.07%)</title><rect x="16.4774%" y="677" width="0.0725%" height="15" fill="rgb(225,21,28)" fg:x="682" fg:w="3"/><text x="16.7274%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.07%)</title><rect x="16.4774%" y="661" width="0.0725%" height="15" fill="rgb(206,33,13)" fg:x="682" fg:w="3"/><text x="16.7274%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.07%)</title><rect x="16.4774%" y="645" width="0.0725%" height="15" fill="rgb(242,178,17)" fg:x="682" fg:w="3"/><text x="16.7274%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.07%)</title><rect x="16.4774%" y="629" width="0.0725%" height="15" fill="rgb(220,162,5)" fg:x="682" fg:w="3"/><text x="16.7274%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.07%)</title><rect x="16.4774%" y="613" width="0.0725%" height="15" fill="rgb(210,33,43)" fg:x="682" fg:w="3"/><text x="16.7274%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.07%)</title><rect x="16.4774%" y="597" width="0.0725%" height="15" fill="rgb(216,116,54)" fg:x="682" fg:w="3"/><text x="16.7274%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.07%)</title><rect x="16.4774%" y="581" width="0.0725%" height="15" fill="rgb(249,92,24)" fg:x="682" fg:w="3"/><text x="16.7274%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.07%)</title><rect x="16.4774%" y="565" width="0.0725%" height="15" fill="rgb(231,189,14)" fg:x="682" fg:w="3"/><text x="16.7274%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.07%)</title><rect x="16.4774%" y="549" width="0.0725%" height="15" fill="rgb(230,8,41)" fg:x="682" fg:w="3"/><text x="16.7274%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.07%)</title><rect x="16.4774%" y="533" width="0.0725%" height="15" fill="rgb(249,7,27)" fg:x="682" fg:w="3"/><text x="16.7274%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.07%)</title><rect x="16.4774%" y="517" width="0.0725%" height="15" fill="rgb(232,86,5)" fg:x="682" fg:w="3"/><text x="16.7274%" y="527.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.07%)</title><rect x="16.4774%" y="501" width="0.0725%" height="15" fill="rgb(224,175,18)" fg:x="682" fg:w="3"/><text x="16.7274%" y="511.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="16.5257%" y="485" width="0.0242%" height="15" fill="rgb(220,129,12)" fg:x="684" fg:w="1"/><text x="16.7757%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="16.5499%" y="757" width="0.0242%" height="15" fill="rgb(210,19,36)" fg:x="685" fg:w="1"/><text x="16.7999%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="16.5499%" y="741" width="0.0242%" height="15" fill="rgb(219,96,14)" fg:x="685" fg:w="1"/><text x="16.7999%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="16.5499%" y="725" width="0.0242%" height="15" fill="rgb(249,106,1)" fg:x="685" fg:w="1"/><text x="16.7999%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="16.5499%" y="709" width="0.0242%" height="15" fill="rgb(249,155,20)" fg:x="685" fg:w="1"/><text x="16.7999%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="16.5499%" y="693" width="0.0242%" height="15" fill="rgb(244,168,9)" fg:x="685" fg:w="1"/><text x="16.7999%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="16.5499%" y="677" width="0.0242%" height="15" fill="rgb(216,23,50)" fg:x="685" fg:w="1"/><text x="16.7999%" y="687.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="16.5499%" y="661" width="0.0242%" height="15" fill="rgb(224,219,20)" fg:x="685" fg:w="1"/><text x="16.7999%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="16.5741%" y="757" width="0.0242%" height="15" fill="rgb(222,156,15)" fg:x="686" fg:w="1"/><text x="16.8241%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="16.5741%" y="741" width="0.0242%" height="15" fill="rgb(231,97,17)" fg:x="686" fg:w="1"/><text x="16.8241%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="16.5741%" y="725" width="0.0242%" height="15" fill="rgb(218,70,48)" fg:x="686" fg:w="1"/><text x="16.8241%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="16.5741%" y="709" width="0.0242%" height="15" fill="rgb(212,196,52)" fg:x="686" fg:w="1"/><text x="16.8241%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.5741%" y="693" width="0.0242%" height="15" fill="rgb(243,203,18)" fg:x="686" fg:w="1"/><text x="16.8241%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.5741%" y="677" width="0.0242%" height="15" fill="rgb(252,125,41)" fg:x="686" fg:w="1"/><text x="16.8241%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.5741%" y="661" width="0.0242%" height="15" fill="rgb(223,180,33)" fg:x="686" fg:w="1"/><text x="16.8241%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="16.5741%" y="645" width="0.0242%" height="15" fill="rgb(254,159,46)" fg:x="686" fg:w="1"/><text x="16.8241%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="16.5741%" y="629" width="0.0242%" height="15" fill="rgb(254,38,10)" fg:x="686" fg:w="1"/><text x="16.8241%" y="639.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="16.5982%" y="757" width="0.0242%" height="15" fill="rgb(208,217,32)" fg:x="687" fg:w="1"/><text x="16.8482%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="16.5982%" y="741" width="0.0242%" height="15" fill="rgb(221,120,13)" fg:x="687" fg:w="1"/><text x="16.8482%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="16.5982%" y="725" width="0.0242%" height="15" fill="rgb(246,54,52)" fg:x="687" fg:w="1"/><text x="16.8482%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="16.5982%" y="709" width="0.0242%" height="15" fill="rgb(242,34,25)" fg:x="687" fg:w="1"/><text x="16.8482%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="16.5982%" y="693" width="0.0242%" height="15" fill="rgb(247,209,9)" fg:x="687" fg:w="1"/><text x="16.8482%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.5982%" y="677" width="0.0242%" height="15" fill="rgb(228,71,26)" fg:x="687" fg:w="1"/><text x="16.8482%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.5982%" y="661" width="0.0242%" height="15" fill="rgb(222,145,49)" fg:x="687" fg:w="1"/><text x="16.8482%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.5982%" y="645" width="0.0242%" height="15" fill="rgb(218,121,17)" fg:x="687" fg:w="1"/><text x="16.8482%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="16.6224%" y="741" width="0.0242%" height="15" fill="rgb(244,50,7)" fg:x="688" fg:w="1"/><text x="16.8724%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="16.6224%" y="725" width="0.0242%" height="15" fill="rgb(246,229,37)" fg:x="688" fg:w="1"/><text x="16.8724%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="16.6224%" y="709" width="0.0242%" height="15" fill="rgb(225,18,5)" fg:x="688" fg:w="1"/><text x="16.8724%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="16.6224%" y="693" width="0.0242%" height="15" fill="rgb(213,204,8)" fg:x="688" fg:w="1"/><text x="16.8724%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="16.6224%" y="677" width="0.0242%" height="15" fill="rgb(238,103,6)" fg:x="688" fg:w="1"/><text x="16.8724%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="16.6224%" y="661" width="0.0242%" height="15" fill="rgb(222,25,35)" fg:x="688" fg:w="1"/><text x="16.8724%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="16.6224%" y="645" width="0.0242%" height="15" fill="rgb(213,203,35)" fg:x="688" fg:w="1"/><text x="16.8724%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="16.6224%" y="629" width="0.0242%" height="15" fill="rgb(221,79,53)" fg:x="688" fg:w="1"/><text x="16.8724%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="16.6224%" y="613" width="0.0242%" height="15" fill="rgb(243,200,35)" fg:x="688" fg:w="1"/><text x="16.8724%" y="623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="16.6465%" y="741" width="0.0242%" height="15" fill="rgb(248,60,25)" fg:x="689" fg:w="1"/><text x="16.8965%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="16.6465%" y="725" width="0.0242%" height="15" fill="rgb(227,53,46)" fg:x="689" fg:w="1"/><text x="16.8965%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="16.6465%" y="709" width="0.0242%" height="15" fill="rgb(216,120,32)" fg:x="689" fg:w="1"/><text x="16.8965%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="16.6465%" y="693" width="0.0242%" height="15" fill="rgb(220,134,1)" fg:x="689" fg:w="1"/><text x="16.8965%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="16.6465%" y="677" width="0.0242%" height="15" fill="rgb(237,168,5)" fg:x="689" fg:w="1"/><text x="16.8965%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.6465%" y="661" width="0.0242%" height="15" fill="rgb(231,100,33)" fg:x="689" fg:w="1"/><text x="16.8965%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.6465%" y="645" width="0.0242%" height="15" fill="rgb(236,177,47)" fg:x="689" fg:w="1"/><text x="16.8965%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.6465%" y="629" width="0.0242%" height="15" fill="rgb(235,7,49)" fg:x="689" fg:w="1"/><text x="16.8965%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="16.6465%" y="613" width="0.0242%" height="15" fill="rgb(232,119,22)" fg:x="689" fg:w="1"/><text x="16.8965%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="16.6465%" y="597" width="0.0242%" height="15" fill="rgb(254,73,53)" fg:x="689" fg:w="1"/><text x="16.8965%" y="607.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.02%)</title><rect x="16.6707%" y="741" width="0.0242%" height="15" fill="rgb(251,35,20)" fg:x="690" fg:w="1"/><text x="16.9207%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="16.6707%" y="725" width="0.0242%" height="15" fill="rgb(241,119,20)" fg:x="690" fg:w="1"/><text x="16.9207%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="16.6707%" y="709" width="0.0242%" height="15" fill="rgb(207,102,14)" fg:x="690" fg:w="1"/><text x="16.9207%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="16.6707%" y="693" width="0.0242%" height="15" fill="rgb(248,201,50)" fg:x="690" fg:w="1"/><text x="16.9207%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="16.6707%" y="677" width="0.0242%" height="15" fill="rgb(222,185,44)" fg:x="690" fg:w="1"/><text x="16.9207%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="16.6707%" y="661" width="0.0242%" height="15" fill="rgb(218,107,18)" fg:x="690" fg:w="1"/><text x="16.9207%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="16.6707%" y="645" width="0.0242%" height="15" fill="rgb(237,177,39)" fg:x="690" fg:w="1"/><text x="16.9207%" y="655.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.02%)</title><rect x="16.6707%" y="629" width="0.0242%" height="15" fill="rgb(246,69,6)" fg:x="690" fg:w="1"/><text x="16.9207%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="16.6707%" y="613" width="0.0242%" height="15" fill="rgb(234,208,37)" fg:x="690" fg:w="1"/><text x="16.9207%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="16.6707%" y="597" width="0.0242%" height="15" fill="rgb(225,4,6)" fg:x="690" fg:w="1"/><text x="16.9207%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="16.6707%" y="581" width="0.0242%" height="15" fill="rgb(233,45,0)" fg:x="690" fg:w="1"/><text x="16.9207%" y="591.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="16.6707%" y="565" width="0.0242%" height="15" fill="rgb(226,136,5)" fg:x="690" fg:w="1"/><text x="16.9207%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="16.6707%" y="549" width="0.0242%" height="15" fill="rgb(211,91,47)" fg:x="690" fg:w="1"/><text x="16.9207%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="16.6707%" y="533" width="0.0242%" height="15" fill="rgb(242,88,51)" fg:x="690" fg:w="1"/><text x="16.9207%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="16.6707%" y="517" width="0.0242%" height="15" fill="rgb(230,91,28)" fg:x="690" fg:w="1"/><text x="16.9207%" y="527.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="16.6707%" y="501" width="0.0242%" height="15" fill="rgb(254,186,29)" fg:x="690" fg:w="1"/><text x="16.9207%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="16.6949%" y="725" width="0.0242%" height="15" fill="rgb(238,6,4)" fg:x="691" fg:w="1"/><text x="16.9449%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.02%)</title><rect x="16.6949%" y="709" width="0.0242%" height="15" fill="rgb(221,151,16)" fg:x="691" fg:w="1"/><text x="16.9449%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="16.6949%" y="693" width="0.0242%" height="15" fill="rgb(251,143,52)" fg:x="691" fg:w="1"/><text x="16.9449%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="16.6949%" y="677" width="0.0242%" height="15" fill="rgb(206,90,15)" fg:x="691" fg:w="1"/><text x="16.9449%" y="687.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.02%)</title><rect x="16.6949%" y="661" width="0.0242%" height="15" fill="rgb(218,35,8)" fg:x="691" fg:w="1"/><text x="16.9449%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.02%)</title><rect x="16.6949%" y="645" width="0.0242%" height="15" fill="rgb(239,215,6)" fg:x="691" fg:w="1"/><text x="16.9449%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="16.6949%" y="629" width="0.0242%" height="15" fill="rgb(245,116,39)" fg:x="691" fg:w="1"/><text x="16.9449%" y="639.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.02%)</title><rect x="16.6949%" y="613" width="0.0242%" height="15" fill="rgb(242,65,28)" fg:x="691" fg:w="1"/><text x="16.9449%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.02%)</title><rect x="16.6949%" y="597" width="0.0242%" height="15" fill="rgb(252,132,53)" fg:x="691" fg:w="1"/><text x="16.9449%" y="607.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.02%)</title><rect x="16.7190%" y="725" width="0.0242%" height="15" fill="rgb(224,159,50)" fg:x="692" fg:w="1"/><text x="16.9690%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="16.7190%" y="709" width="0.0242%" height="15" fill="rgb(224,93,4)" fg:x="692" fg:w="1"/><text x="16.9690%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="16.7190%" y="693" width="0.0242%" height="15" fill="rgb(208,81,34)" fg:x="692" fg:w="1"/><text x="16.9690%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="16.7190%" y="677" width="0.0242%" height="15" fill="rgb(233,92,54)" fg:x="692" fg:w="1"/><text x="16.9690%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="16.7190%" y="661" width="0.0242%" height="15" fill="rgb(237,21,14)" fg:x="692" fg:w="1"/><text x="16.9690%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="16.7190%" y="645" width="0.0242%" height="15" fill="rgb(249,128,51)" fg:x="692" fg:w="1"/><text x="16.9690%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="16.7190%" y="629" width="0.0242%" height="15" fill="rgb(223,129,24)" fg:x="692" fg:w="1"/><text x="16.9690%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="16.7190%" y="613" width="0.0242%" height="15" fill="rgb(231,168,25)" fg:x="692" fg:w="1"/><text x="16.9690%" y="623.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="16.7190%" y="597" width="0.0242%" height="15" fill="rgb(224,39,20)" fg:x="692" fg:w="1"/><text x="16.9690%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.02%)</title><rect x="16.7190%" y="581" width="0.0242%" height="15" fill="rgb(225,152,53)" fg:x="692" fg:w="1"/><text x="16.9690%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.02%)</title><rect x="16.7190%" y="565" width="0.0242%" height="15" fill="rgb(252,17,24)" fg:x="692" fg:w="1"/><text x="16.9690%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="16.7190%" y="549" width="0.0242%" height="15" fill="rgb(250,114,30)" fg:x="692" fg:w="1"/><text x="16.9690%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="16.7190%" y="533" width="0.0242%" height="15" fill="rgb(229,5,4)" fg:x="692" fg:w="1"/><text x="16.9690%" y="543.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="16.7190%" y="517" width="0.0242%" height="15" fill="rgb(225,176,49)" fg:x="692" fg:w="1"/><text x="16.9690%" y="527.50"></text></g><g><title>y2021::d12::main2::p01 (46 samples, 1.11%)</title><rect x="15.6560%" y="949" width="1.1114%" height="15" fill="rgb(224,221,49)" fg:x="648" fg:w="46"/><text x="15.9060%" y="959.50"></text></g><g><title>y2021::d12::main2::traverse (43 samples, 1.04%)</title><rect x="15.7284%" y="933" width="1.0389%" height="15" fill="rgb(253,169,27)" fg:x="651" fg:w="43"/><text x="15.9784%" y="943.50"></text></g><g><title>y2021::d12::main2::traverse (43 samples, 1.04%)</title><rect x="15.7284%" y="917" width="1.0389%" height="15" fill="rgb(211,206,16)" fg:x="651" fg:w="43"/><text x="15.9784%" y="927.50"></text></g><g><title>y2021::d12::main2::traverse (43 samples, 1.04%)</title><rect x="15.7284%" y="901" width="1.0389%" height="15" fill="rgb(244,87,35)" fg:x="651" fg:w="43"/><text x="15.9784%" y="911.50"></text></g><g><title>y2021::d12::main2::traverse (43 samples, 1.04%)</title><rect x="15.7284%" y="885" width="1.0389%" height="15" fill="rgb(246,28,10)" fg:x="651" fg:w="43"/><text x="15.9784%" y="895.50"></text></g><g><title>y2021::d12::main2::traverse (43 samples, 1.04%)</title><rect x="15.7284%" y="869" width="1.0389%" height="15" fill="rgb(229,12,44)" fg:x="651" fg:w="43"/><text x="15.9784%" y="879.50"></text></g><g><title>y2021::d12::main2::traverse (41 samples, 0.99%)</title><rect x="15.7768%" y="853" width="0.9906%" height="15" fill="rgb(210,145,37)" fg:x="653" fg:w="41"/><text x="16.0268%" y="863.50"></text></g><g><title>y2021::d12::main2::traverse (36 samples, 0.87%)</title><rect x="15.8976%" y="837" width="0.8698%" height="15" fill="rgb(227,112,52)" fg:x="658" fg:w="36"/><text x="16.1476%" y="847.50"></text></g><g><title>y2021::d12::main2::traverse (33 samples, 0.80%)</title><rect x="15.9700%" y="821" width="0.7973%" height="15" fill="rgb(238,155,34)" fg:x="661" fg:w="33"/><text x="16.2200%" y="831.50"></text></g><g><title>y2021::d12::main2::traverse (25 samples, 0.60%)</title><rect x="16.1633%" y="805" width="0.6040%" height="15" fill="rgb(239,226,36)" fg:x="669" fg:w="25"/><text x="16.4133%" y="815.50"></text></g><g><title>y2021::d12::main2::traverse (17 samples, 0.41%)</title><rect x="16.3566%" y="789" width="0.4107%" height="15" fill="rgb(230,16,23)" fg:x="677" fg:w="17"/><text x="16.6066%" y="799.50"></text></g><g><title>y2021::d12::main2::traverse (13 samples, 0.31%)</title><rect x="16.4532%" y="773" width="0.3141%" height="15" fill="rgb(236,171,36)" fg:x="681" fg:w="13"/><text x="16.7032%" y="783.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.14%)</title><rect x="16.6224%" y="757" width="0.1450%" height="15" fill="rgb(221,22,14)" fg:x="688" fg:w="6"/><text x="16.8724%" y="767.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="16.6949%" y="741" width="0.0725%" height="15" fill="rgb(242,43,11)" fg:x="691" fg:w="3"/><text x="16.9449%" y="751.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.02%)</title><rect x="16.7432%" y="725" width="0.0242%" height="15" fill="rgb(232,69,23)" fg:x="693" fg:w="1"/><text x="16.9932%" y="735.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.02%)</title><rect x="16.7432%" y="709" width="0.0242%" height="15" fill="rgb(216,180,54)" fg:x="693" fg:w="1"/><text x="16.9932%" y="719.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="16.7432%" y="693" width="0.0242%" height="15" fill="rgb(216,5,24)" fg:x="693" fg:w="1"/><text x="16.9932%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="16.7432%" y="677" width="0.0242%" height="15" fill="rgb(225,89,9)" fg:x="693" fg:w="1"/><text x="16.9932%" y="687.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="16.7432%" y="661" width="0.0242%" height="15" fill="rgb(243,75,33)" fg:x="693" fg:w="1"/><text x="16.9932%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.7432%" y="645" width="0.0242%" height="15" fill="rgb(247,141,45)" fg:x="693" fg:w="1"/><text x="16.9932%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.7432%" y="629" width="0.0242%" height="15" fill="rgb(232,177,36)" fg:x="693" fg:w="1"/><text x="16.9932%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.7432%" y="613" width="0.0242%" height="15" fill="rgb(219,125,36)" fg:x="693" fg:w="1"/><text x="16.9932%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="16.7432%" y="597" width="0.0242%" height="15" fill="rgb(227,94,9)" fg:x="693" fg:w="1"/><text x="16.9932%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="16.7432%" y="581" width="0.0242%" height="15" fill="rgb(240,34,52)" fg:x="693" fg:w="1"/><text x="16.9932%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="16.7673%" y="837" width="0.0242%" height="15" fill="rgb(216,45,12)" fg:x="694" fg:w="1"/><text x="17.0173%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="16.7673%" y="821" width="0.0242%" height="15" fill="rgb(246,21,19)" fg:x="694" fg:w="1"/><text x="17.0173%" y="831.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="16.7673%" y="805" width="0.0242%" height="15" fill="rgb(213,98,42)" fg:x="694" fg:w="1"/><text x="17.0173%" y="815.50"></text></g><g><title>__GI___libc_free (34 samples, 0.82%)</title><rect x="16.7915%" y="693" width="0.8215%" height="15" fill="rgb(250,136,47)" fg:x="695" fg:w="34"/><text x="17.0415%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (52 samples, 1.26%)</title><rect x="16.7915%" y="725" width="1.2563%" height="15" fill="rgb(251,124,27)" fg:x="695" fg:w="52"/><text x="17.0415%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (52 samples, 1.26%)</title><rect x="16.7915%" y="709" width="1.2563%" height="15" fill="rgb(229,180,14)" fg:x="695" fg:w="52"/><text x="17.0415%" y="719.50"></text></g><g><title>_int_free (18 samples, 0.43%)</title><rect x="17.6129%" y="693" width="0.4349%" height="15" fill="rgb(245,216,25)" fg:x="729" fg:w="18"/><text x="17.8629%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (54 samples, 1.30%)</title><rect x="16.7673%" y="853" width="1.3047%" height="15" fill="rgb(251,43,5)" fg:x="694" fg:w="54"/><text x="17.0173%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (53 samples, 1.28%)</title><rect x="16.7915%" y="837" width="1.2805%" height="15" fill="rgb(250,128,24)" fg:x="695" fg:w="53"/><text x="17.0415%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (53 samples, 1.28%)</title><rect x="16.7915%" y="821" width="1.2805%" height="15" fill="rgb(217,117,27)" fg:x="695" fg:w="53"/><text x="17.0415%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (53 samples, 1.28%)</title><rect x="16.7915%" y="805" width="1.2805%" height="15" fill="rgb(245,147,4)" fg:x="695" fg:w="53"/><text x="17.0415%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (53 samples, 1.28%)</title><rect x="16.7915%" y="789" width="1.2805%" height="15" fill="rgb(242,201,35)" fg:x="695" fg:w="53"/><text x="17.0415%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (53 samples, 1.28%)</title><rect x="16.7915%" y="773" width="1.2805%" height="15" fill="rgb(218,181,1)" fg:x="695" fg:w="53"/><text x="17.0415%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (53 samples, 1.28%)</title><rect x="16.7915%" y="757" width="1.2805%" height="15" fill="rgb(222,6,29)" fg:x="695" fg:w="53"/><text x="17.0415%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 1.28%)</title><rect x="16.7915%" y="741" width="1.2805%" height="15" fill="rgb(208,186,3)" fg:x="695" fg:w="53"/><text x="17.0415%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="18.0478%" y="725" width="0.0242%" height="15" fill="rgb(216,36,26)" fg:x="747" fg:w="1"/><text x="18.2978%" y="735.50"></text></g><g><title>malloc_consolidate (25 samples, 0.60%)</title><rect x="18.0720%" y="773" width="0.6040%" height="15" fill="rgb(248,201,23)" fg:x="748" fg:w="25"/><text x="18.3220%" y="783.50"></text></g><g><title>unlink_chunk (10 samples, 0.24%)</title><rect x="18.4344%" y="757" width="0.2416%" height="15" fill="rgb(251,170,31)" fg:x="763" fg:w="10"/><text x="18.6844%" y="767.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="18.6760%" y="549" width="0.0242%" height="15" fill="rgb(207,110,25)" fg:x="773" fg:w="1"/><text x="18.9260%" y="559.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="18.6760%" y="533" width="0.0242%" height="15" fill="rgb(250,54,15)" fg:x="773" fg:w="1"/><text x="18.9260%" y="543.50"></text></g><g><title>tlb_finish_mmu (4 samples, 0.10%)</title><rect x="18.6760%" y="613" width="0.0966%" height="15" fill="rgb(227,68,33)" fg:x="773" fg:w="4"/><text x="18.9260%" y="623.50"></text></g><g><title>tlb_flush_mmu (4 samples, 0.10%)</title><rect x="18.6760%" y="597" width="0.0966%" height="15" fill="rgb(238,34,41)" fg:x="773" fg:w="4"/><text x="18.9260%" y="607.50"></text></g><g><title>free_pages_and_swap_cache (4 samples, 0.10%)</title><rect x="18.6760%" y="581" width="0.0966%" height="15" fill="rgb(220,11,15)" fg:x="773" fg:w="4"/><text x="18.9260%" y="591.50"></text></g><g><title>release_pages (4 samples, 0.10%)</title><rect x="18.6760%" y="565" width="0.0966%" height="15" fill="rgb(246,111,35)" fg:x="773" fg:w="4"/><text x="18.9260%" y="575.50"></text></g><g><title>free_unref_page_list (3 samples, 0.07%)</title><rect x="18.7002%" y="549" width="0.0725%" height="15" fill="rgb(209,88,53)" fg:x="774" fg:w="3"/><text x="18.9502%" y="559.50"></text></g><g><title>free_unref_page_commit (3 samples, 0.07%)</title><rect x="18.7002%" y="533" width="0.0725%" height="15" fill="rgb(231,185,47)" fg:x="774" fg:w="3"/><text x="18.9502%" y="543.50"></text></g><g><title>free_pcppages_bulk (2 samples, 0.05%)</title><rect x="18.7243%" y="517" width="0.0483%" height="15" fill="rgb(233,154,1)" fg:x="775" fg:w="2"/><text x="18.9743%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (87 samples, 2.10%)</title><rect x="16.7673%" y="933" width="2.1020%" height="15" fill="rgb(225,15,46)" fg:x="694" fg:w="87"/><text x="17.0173%" y="943.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (87 samples, 2.10%)</title><rect x="16.7673%" y="917" width="2.1020%" height="15" fill="rgb(211,135,41)" fg:x="694" fg:w="87"/><text x="17.0173%" y="927.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (87 samples, 2.10%)</title><rect x="16.7673%" y="901" width="2.1020%" height="15" fill="rgb(208,54,0)" fg:x="694" fg:w="87"/><text x="17.0173%" y="911.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (87 samples, 2.10%)</title><rect x="16.7673%" y="885" width="2.1020%" height="15" fill="rgb(244,136,14)" fg:x="694" fg:w="87"/><text x="17.0173%" y="895.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (87 samples, 2.10%)</title><rect x="16.7673%" y="869" width="2.1020%" height="15" fill="rgb(241,56,14)" fg:x="694" fg:w="87"/><text x="17.0173%" y="879.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (33 samples, 0.80%)</title><rect x="18.0720%" y="853" width="0.7973%" height="15" fill="rgb(205,80,24)" fg:x="748" fg:w="33"/><text x="18.3220%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (33 samples, 0.80%)</title><rect x="18.0720%" y="837" width="0.7973%" height="15" fill="rgb(220,57,4)" fg:x="748" fg:w="33"/><text x="18.3220%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.80%)</title><rect x="18.0720%" y="821" width="0.7973%" height="15" fill="rgb(226,193,50)" fg:x="748" fg:w="33"/><text x="18.3220%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.80%)</title><rect x="18.0720%" y="805" width="0.7973%" height="15" fill="rgb(231,168,22)" fg:x="748" fg:w="33"/><text x="18.3220%" y="815.50"></text></g><g><title>_int_free (33 samples, 0.80%)</title><rect x="18.0720%" y="789" width="0.7973%" height="15" fill="rgb(254,215,14)" fg:x="748" fg:w="33"/><text x="18.3220%" y="799.50"></text></g><g><title>systrim (8 samples, 0.19%)</title><rect x="18.6760%" y="773" width="0.1933%" height="15" fill="rgb(211,115,16)" fg:x="773" fg:w="8"/><text x="18.9260%" y="783.50"></text></g><g><title>__GI___default_morecore (8 samples, 0.19%)</title><rect x="18.6760%" y="757" width="0.1933%" height="15" fill="rgb(236,210,16)" fg:x="773" fg:w="8"/><text x="18.9260%" y="767.50"></text></g><g><title>__GI___sbrk (8 samples, 0.19%)</title><rect x="18.6760%" y="741" width="0.1933%" height="15" fill="rgb(221,94,12)" fg:x="773" fg:w="8"/><text x="18.9260%" y="751.50"></text></g><g><title>__GI___sbrk (8 samples, 0.19%)</title><rect x="18.6760%" y="725" width="0.1933%" height="15" fill="rgb(235,218,49)" fg:x="773" fg:w="8"/><text x="18.9260%" y="735.50"></text></g><g><title>__brk (8 samples, 0.19%)</title><rect x="18.6760%" y="709" width="0.1933%" height="15" fill="rgb(217,114,14)" fg:x="773" fg:w="8"/><text x="18.9260%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.19%)</title><rect x="18.6760%" y="693" width="0.1933%" height="15" fill="rgb(216,145,22)" fg:x="773" fg:w="8"/><text x="18.9260%" y="703.50"></text></g><g><title>do_syscall_64 (8 samples, 0.19%)</title><rect x="18.6760%" y="677" width="0.1933%" height="15" fill="rgb(217,112,39)" fg:x="773" fg:w="8"/><text x="18.9260%" y="687.50"></text></g><g><title>__x64_sys_brk (8 samples, 0.19%)</title><rect x="18.6760%" y="661" width="0.1933%" height="15" fill="rgb(225,85,32)" fg:x="773" fg:w="8"/><text x="18.9260%" y="671.50"></text></g><g><title>__do_munmap (8 samples, 0.19%)</title><rect x="18.6760%" y="645" width="0.1933%" height="15" fill="rgb(245,209,47)" fg:x="773" fg:w="8"/><text x="18.9260%" y="655.50"></text></g><g><title>unmap_region (8 samples, 0.19%)</title><rect x="18.6760%" y="629" width="0.1933%" height="15" fill="rgb(218,220,15)" fg:x="773" fg:w="8"/><text x="18.9260%" y="639.50"></text></g><g><title>unmap_vmas (4 samples, 0.10%)</title><rect x="18.7727%" y="613" width="0.0966%" height="15" fill="rgb(222,202,31)" fg:x="777" fg:w="4"/><text x="19.0227%" y="623.50"></text></g><g><title>unmap_single_vma (4 samples, 0.10%)</title><rect x="18.7727%" y="597" width="0.0966%" height="15" fill="rgb(243,203,4)" fg:x="777" fg:w="4"/><text x="19.0227%" y="607.50"></text></g><g><title>unmap_page_range (4 samples, 0.10%)</title><rect x="18.7727%" y="581" width="0.0966%" height="15" fill="rgb(237,92,17)" fg:x="777" fg:w="4"/><text x="19.0227%" y="591.50"></text></g><g><title>zap_pte_range.isra.0 (4 samples, 0.10%)</title><rect x="18.7727%" y="565" width="0.0966%" height="15" fill="rgb(231,119,7)" fg:x="777" fg:w="4"/><text x="19.0227%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="18.8693%" y="869" width="0.0242%" height="15" fill="rgb(237,82,41)" fg:x="781" fg:w="1"/><text x="19.1193%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.02%)</title><rect x="18.8693%" y="853" width="0.0242%" height="15" fill="rgb(226,81,48)" fg:x="781" fg:w="1"/><text x="19.1193%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="18.8693%" y="837" width="0.0242%" height="15" fill="rgb(234,70,51)" fg:x="781" fg:w="1"/><text x="19.1193%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="18.8693%" y="821" width="0.0242%" height="15" fill="rgb(251,86,4)" fg:x="781" fg:w="1"/><text x="19.1193%" y="831.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.02%)</title><rect x="18.8693%" y="805" width="0.0242%" height="15" fill="rgb(244,144,28)" fg:x="781" fg:w="1"/><text x="19.1193%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.02%)</title><rect x="18.8693%" y="789" width="0.0242%" height="15" fill="rgb(232,161,39)" fg:x="781" fg:w="1"/><text x="19.1193%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="18.8693%" y="773" width="0.0242%" height="15" fill="rgb(247,34,51)" fg:x="781" fg:w="1"/><text x="19.1193%" y="783.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.02%)</title><rect x="18.8693%" y="757" width="0.0242%" height="15" fill="rgb(225,132,2)" fg:x="781" fg:w="1"/><text x="19.1193%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.02%)</title><rect x="18.8693%" y="741" width="0.0242%" height="15" fill="rgb(209,159,44)" fg:x="781" fg:w="1"/><text x="19.1193%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="18.8693%" y="725" width="0.0242%" height="15" fill="rgb(251,214,1)" fg:x="781" fg:w="1"/><text x="19.1193%" y="735.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="18.8693%" y="709" width="0.0242%" height="15" fill="rgb(247,84,47)" fg:x="781" fg:w="1"/><text x="19.1193%" y="719.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.02%)</title><rect x="18.8693%" y="693" width="0.0242%" height="15" fill="rgb(240,111,43)" fg:x="781" fg:w="1"/><text x="19.1193%" y="703.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.02%)</title><rect x="18.8693%" y="677" width="0.0242%" height="15" fill="rgb(215,214,35)" fg:x="781" fg:w="1"/><text x="19.1193%" y="687.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.02%)</title><rect x="18.8693%" y="661" width="0.0242%" height="15" fill="rgb(248,207,23)" fg:x="781" fg:w="1"/><text x="19.1193%" y="671.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.02%)</title><rect x="18.8935%" y="837" width="0.0242%" height="15" fill="rgb(214,186,4)" fg:x="782" fg:w="1"/><text x="19.1435%" y="847.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.05%)</title><rect x="18.8935%" y="853" width="0.0483%" height="15" fill="rgb(220,133,22)" fg:x="782" fg:w="2"/><text x="19.1435%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.02%)</title><rect x="18.9176%" y="837" width="0.0242%" height="15" fill="rgb(239,134,19)" fg:x="783" fg:w="1"/><text x="19.1676%" y="847.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="18.9176%" y="821" width="0.0242%" height="15" fill="rgb(250,140,9)" fg:x="783" fg:w="1"/><text x="19.1676%" y="831.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="18.9176%" y="805" width="0.0242%" height="15" fill="rgb(225,59,14)" fg:x="783" fg:w="1"/><text x="19.1676%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="18.9176%" y="789" width="0.0242%" height="15" fill="rgb(214,152,51)" fg:x="783" fg:w="1"/><text x="19.1676%" y="799.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.02%)</title><rect x="18.9176%" y="773" width="0.0242%" height="15" fill="rgb(251,227,43)" fg:x="783" fg:w="1"/><text x="19.1676%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="18.9176%" y="757" width="0.0242%" height="15" fill="rgb(241,96,17)" fg:x="783" fg:w="1"/><text x="19.1676%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="18.9176%" y="741" width="0.0242%" height="15" fill="rgb(234,198,43)" fg:x="783" fg:w="1"/><text x="19.1676%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="18.9176%" y="725" width="0.0242%" height="15" fill="rgb(220,108,29)" fg:x="783" fg:w="1"/><text x="19.1676%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="18.9176%" y="709" width="0.0242%" height="15" fill="rgb(226,163,33)" fg:x="783" fg:w="1"/><text x="19.1676%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="18.9176%" y="693" width="0.0242%" height="15" fill="rgb(205,194,45)" fg:x="783" fg:w="1"/><text x="19.1676%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="18.9176%" y="677" width="0.0242%" height="15" fill="rgb(206,143,44)" fg:x="783" fg:w="1"/><text x="19.1676%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="18.9176%" y="661" width="0.0242%" height="15" fill="rgb(236,136,36)" fg:x="783" fg:w="1"/><text x="19.1676%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="18.9176%" y="645" width="0.0242%" height="15" fill="rgb(249,172,42)" fg:x="783" fg:w="1"/><text x="19.1676%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="18.9176%" y="629" width="0.0242%" height="15" fill="rgb(216,139,23)" fg:x="783" fg:w="1"/><text x="19.1676%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="18.9176%" y="613" width="0.0242%" height="15" fill="rgb(207,166,20)" fg:x="783" fg:w="1"/><text x="19.1676%" y="623.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="18.9176%" y="597" width="0.0242%" height="15" fill="rgb(210,209,22)" fg:x="783" fg:w="1"/><text x="19.1676%" y="607.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="18.9176%" y="581" width="0.0242%" height="15" fill="rgb(232,118,20)" fg:x="783" fg:w="1"/><text x="19.1676%" y="591.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="18.9176%" y="565" width="0.0242%" height="15" fill="rgb(238,113,42)" fg:x="783" fg:w="1"/><text x="19.1676%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="18.9418%" y="709" width="0.0242%" height="15" fill="rgb(231,42,5)" fg:x="784" fg:w="1"/><text x="19.1918%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="18.9418%" y="693" width="0.0242%" height="15" fill="rgb(243,166,24)" fg:x="784" fg:w="1"/><text x="19.1918%" y="703.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="18.9418%" y="677" width="0.0242%" height="15" fill="rgb(237,226,12)" fg:x="784" fg:w="1"/><text x="19.1918%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="18.9418%" y="661" width="0.0242%" height="15" fill="rgb(229,133,24)" fg:x="784" fg:w="1"/><text x="19.1918%" y="671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="18.9418%" y="645" width="0.0242%" height="15" fill="rgb(238,33,43)" fg:x="784" fg:w="1"/><text x="19.1918%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="18.9418%" y="629" width="0.0242%" height="15" fill="rgb(227,59,38)" fg:x="784" fg:w="1"/><text x="19.1918%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="18.9418%" y="613" width="0.0242%" height="15" fill="rgb(230,97,0)" fg:x="784" fg:w="1"/><text x="19.1918%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="18.9418%" y="837" width="0.0483%" height="15" fill="rgb(250,173,50)" fg:x="784" fg:w="2"/><text x="19.1918%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.05%)</title><rect x="18.9418%" y="821" width="0.0483%" height="15" fill="rgb(240,15,50)" fg:x="784" fg:w="2"/><text x="19.1918%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="18.9418%" y="805" width="0.0483%" height="15" fill="rgb(221,93,22)" fg:x="784" fg:w="2"/><text x="19.1918%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="18.9418%" y="789" width="0.0483%" height="15" fill="rgb(245,180,53)" fg:x="784" fg:w="2"/><text x="19.1918%" y="799.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.05%)</title><rect x="18.9418%" y="773" width="0.0483%" height="15" fill="rgb(231,88,51)" fg:x="784" fg:w="2"/><text x="19.1918%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.05%)</title><rect x="18.9418%" y="757" width="0.0483%" height="15" fill="rgb(240,58,21)" fg:x="784" fg:w="2"/><text x="19.1918%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="18.9418%" y="741" width="0.0483%" height="15" fill="rgb(237,21,10)" fg:x="784" fg:w="2"/><text x="19.1918%" y="751.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.05%)</title><rect x="18.9418%" y="725" width="0.0483%" height="15" fill="rgb(218,43,11)" fg:x="784" fg:w="2"/><text x="19.1918%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.02%)</title><rect x="18.9659%" y="709" width="0.0242%" height="15" fill="rgb(218,221,29)" fg:x="785" fg:w="1"/><text x="19.2159%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="18.9659%" y="693" width="0.0242%" height="15" fill="rgb(214,118,42)" fg:x="785" fg:w="1"/><text x="19.2159%" y="703.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="18.9659%" y="677" width="0.0242%" height="15" fill="rgb(251,200,26)" fg:x="785" fg:w="1"/><text x="19.2159%" y="687.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.02%)</title><rect x="18.9659%" y="661" width="0.0242%" height="15" fill="rgb(237,101,39)" fg:x="785" fg:w="1"/><text x="19.2159%" y="671.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.02%)</title><rect x="18.9659%" y="645" width="0.0242%" height="15" fill="rgb(251,117,11)" fg:x="785" fg:w="1"/><text x="19.2159%" y="655.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.05%)</title><rect x="19.0143%" y="565" width="0.0483%" height="15" fill="rgb(216,223,23)" fg:x="787" fg:w="2"/><text x="19.2643%" y="575.50"></text></g><g><title>_int_realloc (2 samples, 0.05%)</title><rect x="19.0143%" y="549" width="0.0483%" height="15" fill="rgb(251,54,12)" fg:x="787" fg:w="2"/><text x="19.2643%" y="559.50"></text></g><g><title>_int_malloc (2 samples, 0.05%)</title><rect x="19.0143%" y="533" width="0.0483%" height="15" fill="rgb(254,176,54)" fg:x="787" fg:w="2"/><text x="19.2643%" y="543.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.10%)</title><rect x="18.9901%" y="837" width="0.0966%" height="15" fill="rgb(210,32,8)" fg:x="786" fg:w="4"/><text x="19.2401%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.10%)</title><rect x="18.9901%" y="821" width="0.0966%" height="15" fill="rgb(235,52,38)" fg:x="786" fg:w="4"/><text x="19.2401%" y="831.50"></text></g><g><title>core::fmt::write (4 samples, 0.10%)</title><rect x="18.9901%" y="805" width="0.0966%" height="15" fill="rgb(231,4,44)" fg:x="786" fg:w="4"/><text x="19.2401%" y="815.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.10%)</title><rect x="18.9901%" y="789" width="0.0966%" height="15" fill="rgb(249,2,32)" fg:x="786" fg:w="4"/><text x="19.2401%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.10%)</title><rect x="18.9901%" y="773" width="0.0966%" height="15" fill="rgb(224,65,26)" fg:x="786" fg:w="4"/><text x="19.2401%" y="783.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.10%)</title><rect x="18.9901%" y="757" width="0.0966%" height="15" fill="rgb(250,73,40)" fg:x="786" fg:w="4"/><text x="19.2401%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.10%)</title><rect x="18.9901%" y="741" width="0.0966%" height="15" fill="rgb(253,177,16)" fg:x="786" fg:w="4"/><text x="19.2401%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.10%)</title><rect x="18.9901%" y="725" width="0.0966%" height="15" fill="rgb(217,32,34)" fg:x="786" fg:w="4"/><text x="19.2401%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.10%)</title><rect x="18.9901%" y="709" width="0.0966%" height="15" fill="rgb(212,7,10)" fg:x="786" fg:w="4"/><text x="19.2401%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.10%)</title><rect x="18.9901%" y="693" width="0.0966%" height="15" fill="rgb(245,89,8)" fg:x="786" fg:w="4"/><text x="19.2401%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.07%)</title><rect x="19.0143%" y="677" width="0.0725%" height="15" fill="rgb(237,16,53)" fg:x="787" fg:w="3"/><text x="19.2643%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.07%)</title><rect x="19.0143%" y="661" width="0.0725%" height="15" fill="rgb(250,204,30)" fg:x="787" fg:w="3"/><text x="19.2643%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.07%)</title><rect x="19.0143%" y="645" width="0.0725%" height="15" fill="rgb(208,77,27)" fg:x="787" fg:w="3"/><text x="19.2643%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.07%)</title><rect x="19.0143%" y="629" width="0.0725%" height="15" fill="rgb(250,204,28)" fg:x="787" fg:w="3"/><text x="19.2643%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.07%)</title><rect x="19.0143%" y="613" width="0.0725%" height="15" fill="rgb(244,63,21)" fg:x="787" fg:w="3"/><text x="19.2643%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.07%)</title><rect x="19.0143%" y="597" width="0.0725%" height="15" fill="rgb(236,85,44)" fg:x="787" fg:w="3"/><text x="19.2643%" y="607.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.07%)</title><rect x="19.0143%" y="581" width="0.0725%" height="15" fill="rgb(215,98,4)" fg:x="787" fg:w="3"/><text x="19.2643%" y="591.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="19.0626%" y="565" width="0.0242%" height="15" fill="rgb(235,38,11)" fg:x="789" fg:w="1"/><text x="19.3126%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.02%)</title><rect x="19.0626%" y="549" width="0.0242%" height="15" fill="rgb(254,186,25)" fg:x="789" fg:w="1"/><text x="19.3126%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="19.0867%" y="837" width="0.0242%" height="15" fill="rgb(225,55,31)" fg:x="790" fg:w="1"/><text x="19.3367%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="19.0867%" y="821" width="0.0242%" height="15" fill="rgb(211,15,21)" fg:x="790" fg:w="1"/><text x="19.3367%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="19.0867%" y="805" width="0.0242%" height="15" fill="rgb(215,187,41)" fg:x="790" fg:w="1"/><text x="19.3367%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="19.0867%" y="789" width="0.0242%" height="15" fill="rgb(248,69,32)" fg:x="790" fg:w="1"/><text x="19.3367%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="19.0867%" y="773" width="0.0242%" height="15" fill="rgb(252,102,52)" fg:x="790" fg:w="1"/><text x="19.3367%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="19.0867%" y="757" width="0.0242%" height="15" fill="rgb(253,140,32)" fg:x="790" fg:w="1"/><text x="19.3367%" y="767.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="19.0867%" y="741" width="0.0242%" height="15" fill="rgb(216,56,42)" fg:x="790" fg:w="1"/><text x="19.3367%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.05%)</title><rect x="19.1109%" y="837" width="0.0483%" height="15" fill="rgb(216,184,14)" fg:x="791" fg:w="2"/><text x="19.3609%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.05%)</title><rect x="19.1109%" y="821" width="0.0483%" height="15" fill="rgb(237,187,27)" fg:x="791" fg:w="2"/><text x="19.3609%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.05%)</title><rect x="19.1109%" y="805" width="0.0483%" height="15" fill="rgb(219,65,3)" fg:x="791" fg:w="2"/><text x="19.3609%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.05%)</title><rect x="19.1109%" y="789" width="0.0483%" height="15" fill="rgb(245,83,25)" fg:x="791" fg:w="2"/><text x="19.3609%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.05%)</title><rect x="19.1109%" y="773" width="0.0483%" height="15" fill="rgb(214,205,45)" fg:x="791" fg:w="2"/><text x="19.3609%" y="783.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.05%)</title><rect x="19.1109%" y="757" width="0.0483%" height="15" fill="rgb(241,20,18)" fg:x="791" fg:w="2"/><text x="19.3609%" y="767.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.05%)</title><rect x="19.1109%" y="741" width="0.0483%" height="15" fill="rgb(232,163,23)" fg:x="791" fg:w="2"/><text x="19.3609%" y="751.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.05%)</title><rect x="19.1109%" y="725" width="0.0483%" height="15" fill="rgb(214,5,46)" fg:x="791" fg:w="2"/><text x="19.3609%" y="735.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="19.1592%" y="837" width="0.0242%" height="15" fill="rgb(229,78,17)" fg:x="793" fg:w="1"/><text x="19.4092%" y="847.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="19.1592%" y="821" width="0.0242%" height="15" fill="rgb(248,89,10)" fg:x="793" fg:w="1"/><text x="19.4092%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="19.1592%" y="805" width="0.0242%" height="15" fill="rgb(248,54,15)" fg:x="793" fg:w="1"/><text x="19.4092%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="19.1592%" y="789" width="0.0242%" height="15" fill="rgb(223,116,6)" fg:x="793" fg:w="1"/><text x="19.4092%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="19.1592%" y="773" width="0.0242%" height="15" fill="rgb(205,125,38)" fg:x="793" fg:w="1"/><text x="19.4092%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="19.1592%" y="757" width="0.0242%" height="15" fill="rgb(251,78,38)" fg:x="793" fg:w="1"/><text x="19.4092%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="19.2075%" y="693" width="0.0242%" height="15" fill="rgb(253,78,28)" fg:x="795" fg:w="1"/><text x="19.4575%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="19.2075%" y="677" width="0.0242%" height="15" fill="rgb(209,120,3)" fg:x="795" fg:w="1"/><text x="19.4575%" y="687.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="19.2075%" y="661" width="0.0242%" height="15" fill="rgb(238,229,9)" fg:x="795" fg:w="1"/><text x="19.4575%" y="671.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.02%)</title><rect x="19.2075%" y="645" width="0.0242%" height="15" fill="rgb(253,159,18)" fg:x="795" fg:w="1"/><text x="19.4575%" y="655.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (1 samples, 0.02%)</title><rect x="19.3042%" y="597" width="0.0242%" height="15" fill="rgb(244,42,34)" fg:x="799" fg:w="1"/><text x="19.5542%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (5 samples, 0.12%)</title><rect x="19.2317%" y="693" width="0.1208%" height="15" fill="rgb(224,8,7)" fg:x="796" fg:w="5"/><text x="19.4817%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="19.3042%" y="677" width="0.0483%" height="15" fill="rgb(210,201,45)" fg:x="799" fg:w="2"/><text x="19.5542%" y="687.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="19.3042%" y="661" width="0.0483%" height="15" fill="rgb(252,185,21)" fg:x="799" fg:w="2"/><text x="19.5542%" y="671.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (2 samples, 0.05%)</title><rect x="19.3042%" y="645" width="0.0483%" height="15" fill="rgb(223,131,1)" fg:x="799" fg:w="2"/><text x="19.5542%" y="655.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.05%)</title><rect x="19.3042%" y="629" width="0.0483%" height="15" fill="rgb(245,141,16)" fg:x="799" fg:w="2"/><text x="19.5542%" y="639.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.05%)</title><rect x="19.3042%" y="613" width="0.0483%" height="15" fill="rgb(229,55,45)" fg:x="799" fg:w="2"/><text x="19.5542%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="19.3283%" y="597" width="0.0242%" height="15" fill="rgb(208,92,15)" fg:x="800" fg:w="1"/><text x="19.5783%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="19.3283%" y="581" width="0.0242%" height="15" fill="rgb(234,185,47)" fg:x="800" fg:w="1"/><text x="19.5783%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.22%)</title><rect x="19.2075%" y="821" width="0.2174%" height="15" fill="rgb(253,104,50)" fg:x="795" fg:w="9"/><text x="19.4575%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (9 samples, 0.22%)</title><rect x="19.2075%" y="805" width="0.2174%" height="15" fill="rgb(205,70,7)" fg:x="795" fg:w="9"/><text x="19.4575%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.22%)</title><rect x="19.2075%" y="789" width="0.2174%" height="15" fill="rgb(240,178,43)" fg:x="795" fg:w="9"/><text x="19.4575%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.22%)</title><rect x="19.2075%" y="773" width="0.2174%" height="15" fill="rgb(214,112,2)" fg:x="795" fg:w="9"/><text x="19.4575%" y="783.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (9 samples, 0.22%)</title><rect x="19.2075%" y="757" width="0.2174%" height="15" fill="rgb(206,46,17)" fg:x="795" fg:w="9"/><text x="19.4575%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (9 samples, 0.22%)</title><rect x="19.2075%" y="741" width="0.2174%" height="15" fill="rgb(225,220,16)" fg:x="795" fg:w="9"/><text x="19.4575%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.22%)</title><rect x="19.2075%" y="725" width="0.2174%" height="15" fill="rgb(238,65,40)" fg:x="795" fg:w="9"/><text x="19.4575%" y="735.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (9 samples, 0.22%)</title><rect x="19.2075%" y="709" width="0.2174%" height="15" fill="rgb(230,151,21)" fg:x="795" fg:w="9"/><text x="19.4575%" y="719.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (3 samples, 0.07%)</title><rect x="19.3525%" y="693" width="0.0725%" height="15" fill="rgb(218,58,49)" fg:x="801" fg:w="3"/><text x="19.6025%" y="703.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (3 samples, 0.07%)</title><rect x="19.3525%" y="677" width="0.0725%" height="15" fill="rgb(219,179,14)" fg:x="801" fg:w="3"/><text x="19.6025%" y="687.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (3 samples, 0.07%)</title><rect x="19.3525%" y="661" width="0.0725%" height="15" fill="rgb(223,72,1)" fg:x="801" fg:w="3"/><text x="19.6025%" y="671.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3 samples, 0.07%)</title><rect x="19.3525%" y="645" width="0.0725%" height="15" fill="rgb(238,126,10)" fg:x="801" fg:w="3"/><text x="19.6025%" y="655.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2 samples, 0.05%)</title><rect x="19.3767%" y="629" width="0.0483%" height="15" fill="rgb(224,206,38)" fg:x="802" fg:w="2"/><text x="19.6267%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="19.3767%" y="613" width="0.0483%" height="15" fill="rgb(212,201,54)" fg:x="802" fg:w="2"/><text x="19.6267%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="19.3767%" y="597" width="0.0483%" height="15" fill="rgb(218,154,48)" fg:x="802" fg:w="2"/><text x="19.6267%" y="607.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="19.3767%" y="581" width="0.0483%" height="15" fill="rgb(232,93,24)" fg:x="802" fg:w="2"/><text x="19.6267%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="19.5941%" y="517" width="0.0242%" height="15" fill="rgb(245,30,21)" fg:x="811" fg:w="1"/><text x="19.8441%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.14%)</title><rect x="19.4975%" y="597" width="0.1450%" height="15" fill="rgb(242,148,29)" fg:x="807" fg:w="6"/><text x="19.7475%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.14%)</title><rect x="19.4975%" y="581" width="0.1450%" height="15" fill="rgb(244,153,54)" fg:x="807" fg:w="6"/><text x="19.7475%" y="591.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.14%)</title><rect x="19.4975%" y="565" width="0.1450%" height="15" fill="rgb(252,87,22)" fg:x="807" fg:w="6"/><text x="19.7475%" y="575.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.14%)</title><rect x="19.4975%" y="549" width="0.1450%" height="15" fill="rgb(210,51,29)" fg:x="807" fg:w="6"/><text x="19.7475%" y="559.50"></text></g><g><title>_int_realloc (4 samples, 0.10%)</title><rect x="19.5458%" y="533" width="0.0966%" height="15" fill="rgb(242,136,47)" fg:x="809" fg:w="4"/><text x="19.7958%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="19.6183%" y="517" width="0.0242%" height="15" fill="rgb(238,68,4)" fg:x="812" fg:w="1"/><text x="19.8683%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (9 samples, 0.22%)</title><rect x="19.4491%" y="773" width="0.2174%" height="15" fill="rgb(242,161,30)" fg:x="805" fg:w="9"/><text x="19.6991%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.22%)</title><rect x="19.4491%" y="757" width="0.2174%" height="15" fill="rgb(218,58,44)" fg:x="805" fg:w="9"/><text x="19.6991%" y="767.50"></text></g><g><title>alloc::string::String::push_str (9 samples, 0.22%)</title><rect x="19.4491%" y="741" width="0.2174%" height="15" fill="rgb(252,125,32)" fg:x="805" fg:w="9"/><text x="19.6991%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.22%)</title><rect x="19.4491%" y="725" width="0.2174%" height="15" fill="rgb(219,178,0)" fg:x="805" fg:w="9"/><text x="19.6991%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.22%)</title><rect x="19.4491%" y="709" width="0.2174%" height="15" fill="rgb(213,152,7)" fg:x="805" fg:w="9"/><text x="19.6991%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.22%)</title><rect x="19.4491%" y="693" width="0.2174%" height="15" fill="rgb(249,109,34)" fg:x="805" fg:w="9"/><text x="19.6991%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.17%)</title><rect x="19.4975%" y="677" width="0.1691%" height="15" fill="rgb(232,96,21)" fg:x="807" fg:w="7"/><text x="19.7475%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.17%)</title><rect x="19.4975%" y="661" width="0.1691%" height="15" fill="rgb(228,27,39)" fg:x="807" fg:w="7"/><text x="19.7475%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.17%)</title><rect x="19.4975%" y="645" width="0.1691%" height="15" fill="rgb(211,182,52)" fg:x="807" fg:w="7"/><text x="19.7475%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.17%)</title><rect x="19.4975%" y="629" width="0.1691%" height="15" fill="rgb(234,178,38)" fg:x="807" fg:w="7"/><text x="19.7475%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.17%)</title><rect x="19.4975%" y="613" width="0.1691%" height="15" fill="rgb(221,111,3)" fg:x="807" fg:w="7"/><text x="19.7475%" y="623.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="19.6424%" y="597" width="0.0242%" height="15" fill="rgb(228,175,21)" fg:x="813" fg:w="1"/><text x="19.8924%" y="607.50"></text></g><g><title>alloc::fmt::format (11 samples, 0.27%)</title><rect x="19.4250%" y="821" width="0.2658%" height="15" fill="rgb(228,174,43)" fg:x="804" fg:w="11"/><text x="19.6750%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (11 samples, 0.27%)</title><rect x="19.4250%" y="805" width="0.2658%" height="15" fill="rgb(211,191,0)" fg:x="804" fg:w="11"/><text x="19.6750%" y="815.50"></text></g><g><title>core::fmt::write (10 samples, 0.24%)</title><rect x="19.4491%" y="789" width="0.2416%" height="15" fill="rgb(253,117,3)" fg:x="805" fg:w="10"/><text x="19.6991%" y="799.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.02%)</title><rect x="19.6666%" y="773" width="0.0242%" height="15" fill="rgb(241,127,19)" fg:x="814" fg:w="1"/><text x="19.9166%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="19.6907%" y="821" width="0.0242%" height="15" fill="rgb(218,103,12)" fg:x="815" fg:w="1"/><text x="19.9407%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="19.6907%" y="805" width="0.0242%" height="15" fill="rgb(236,214,43)" fg:x="815" fg:w="1"/><text x="19.9407%" y="815.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="19.6907%" y="789" width="0.0242%" height="15" fill="rgb(244,144,19)" fg:x="815" fg:w="1"/><text x="19.9407%" y="799.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.02%)</title><rect x="19.6907%" y="773" width="0.0242%" height="15" fill="rgb(246,188,10)" fg:x="815" fg:w="1"/><text x="19.9407%" y="783.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="19.7149%" y="725" width="0.0242%" height="15" fill="rgb(212,193,33)" fg:x="816" fg:w="1"/><text x="19.9649%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="19.7149%" y="709" width="0.0242%" height="15" fill="rgb(241,51,29)" fg:x="816" fg:w="1"/><text x="19.9649%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.05%)</title><rect x="19.7149%" y="821" width="0.0483%" height="15" fill="rgb(211,58,19)" fg:x="816" fg:w="2"/><text x="19.9649%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="19.7149%" y="805" width="0.0483%" height="15" fill="rgb(229,111,26)" fg:x="816" fg:w="2"/><text x="19.9649%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.05%)</title><rect x="19.7149%" y="789" width="0.0483%" height="15" fill="rgb(213,115,40)" fg:x="816" fg:w="2"/><text x="19.9649%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="19.7149%" y="773" width="0.0483%" height="15" fill="rgb(209,56,44)" fg:x="816" fg:w="2"/><text x="19.9649%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="19.7149%" y="757" width="0.0483%" height="15" fill="rgb(230,108,32)" fg:x="816" fg:w="2"/><text x="19.9649%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="19.7149%" y="741" width="0.0483%" height="15" fill="rgb(216,165,31)" fg:x="816" fg:w="2"/><text x="19.9649%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="19.7391%" y="725" width="0.0242%" height="15" fill="rgb(218,122,21)" fg:x="817" fg:w="1"/><text x="19.9891%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.05%)</title><rect x="19.7632%" y="821" width="0.0483%" height="15" fill="rgb(223,224,47)" fg:x="818" fg:w="2"/><text x="20.0132%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.05%)</title><rect x="19.7632%" y="805" width="0.0483%" height="15" fill="rgb(238,102,44)" fg:x="818" fg:w="2"/><text x="20.0132%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.05%)</title><rect x="19.7632%" y="789" width="0.0483%" height="15" fill="rgb(236,46,40)" fg:x="818" fg:w="2"/><text x="20.0132%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.05%)</title><rect x="19.7632%" y="773" width="0.0483%" height="15" fill="rgb(247,202,50)" fg:x="818" fg:w="2"/><text x="20.0132%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="19.7632%" y="757" width="0.0483%" height="15" fill="rgb(209,99,20)" fg:x="818" fg:w="2"/><text x="20.0132%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="19.7632%" y="741" width="0.0483%" height="15" fill="rgb(252,27,34)" fg:x="818" fg:w="2"/><text x="20.0132%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="19.7632%" y="725" width="0.0483%" height="15" fill="rgb(215,206,23)" fg:x="818" fg:w="2"/><text x="20.0132%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.05%)</title><rect x="19.7632%" y="709" width="0.0483%" height="15" fill="rgb(212,135,36)" fg:x="818" fg:w="2"/><text x="20.0132%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.05%)</title><rect x="19.7632%" y="693" width="0.0483%" height="15" fill="rgb(240,189,1)" fg:x="818" fg:w="2"/><text x="20.0132%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.05%)</title><rect x="19.7632%" y="677" width="0.0483%" height="15" fill="rgb(242,56,20)" fg:x="818" fg:w="2"/><text x="20.0132%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.05%)</title><rect x="19.7632%" y="661" width="0.0483%" height="15" fill="rgb(247,132,33)" fg:x="818" fg:w="2"/><text x="20.0132%" y="671.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.05%)</title><rect x="19.7632%" y="645" width="0.0483%" height="15" fill="rgb(208,149,11)" fg:x="818" fg:w="2"/><text x="20.0132%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (5 samples, 0.12%)</title><rect x="19.8357%" y="741" width="0.1208%" height="15" fill="rgb(211,33,11)" fg:x="821" fg:w="5"/><text x="20.0857%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (5 samples, 0.12%)</title><rect x="19.8357%" y="725" width="0.1208%" height="15" fill="rgb(221,29,38)" fg:x="821" fg:w="5"/><text x="20.0857%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="19.8357%" y="709" width="0.1208%" height="15" fill="rgb(206,182,49)" fg:x="821" fg:w="5"/><text x="20.0857%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="19.8357%" y="693" width="0.1208%" height="15" fill="rgb(216,140,1)" fg:x="821" fg:w="5"/><text x="20.0857%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="19.8357%" y="677" width="0.1208%" height="15" fill="rgb(232,57,40)" fg:x="821" fg:w="5"/><text x="20.0857%" y="687.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="19.9082%" y="661" width="0.0483%" height="15" fill="rgb(224,186,18)" fg:x="824" fg:w="2"/><text x="20.1582%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="19.9807%" y="693" width="0.0242%" height="15" fill="rgb(215,121,11)" fg:x="827" fg:w="1"/><text x="20.2307%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="19.9807%" y="677" width="0.0242%" height="15" fill="rgb(245,147,10)" fg:x="827" fg:w="1"/><text x="20.2307%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.10%)</title><rect x="19.9565%" y="741" width="0.0966%" height="15" fill="rgb(238,153,13)" fg:x="826" fg:w="4"/><text x="20.2065%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.10%)</title><rect x="19.9565%" y="725" width="0.0966%" height="15" fill="rgb(233,108,0)" fg:x="826" fg:w="4"/><text x="20.2065%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.10%)</title><rect x="19.9565%" y="709" width="0.0966%" height="15" fill="rgb(212,157,17)" fg:x="826" fg:w="4"/><text x="20.2065%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.05%)</title><rect x="20.0048%" y="693" width="0.0483%" height="15" fill="rgb(225,213,38)" fg:x="828" fg:w="2"/><text x="20.2548%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="20.0290%" y="677" width="0.0242%" height="15" fill="rgb(248,16,11)" fg:x="829" fg:w="1"/><text x="20.2790%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (11 samples, 0.27%)</title><rect x="19.8115%" y="821" width="0.2658%" height="15" fill="rgb(241,33,4)" fg:x="820" fg:w="11"/><text x="20.0615%" y="831.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (11 samples, 0.27%)</title><rect x="19.8115%" y="805" width="0.2658%" height="15" fill="rgb(222,26,43)" fg:x="820" fg:w="11"/><text x="20.0615%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (11 samples, 0.27%)</title><rect x="19.8115%" y="789" width="0.2658%" height="15" fill="rgb(243,29,36)" fg:x="820" fg:w="11"/><text x="20.0615%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.27%)</title><rect x="19.8115%" y="773" width="0.2658%" height="15" fill="rgb(241,9,27)" fg:x="820" fg:w="11"/><text x="20.0615%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.27%)</title><rect x="19.8115%" y="757" width="0.2658%" height="15" fill="rgb(205,117,26)" fg:x="820" fg:w="11"/><text x="20.0615%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="20.0532%" y="741" width="0.0242%" height="15" fill="rgb(209,80,39)" fg:x="830" fg:w="1"/><text x="20.3032%" y="751.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="20.0532%" y="725" width="0.0242%" height="15" fill="rgb(239,155,6)" fg:x="830" fg:w="1"/><text x="20.3032%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="20.0532%" y="709" width="0.0242%" height="15" fill="rgb(212,104,12)" fg:x="830" fg:w="1"/><text x="20.3032%" y="719.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="20.0532%" y="693" width="0.0242%" height="15" fill="rgb(234,204,3)" fg:x="830" fg:w="1"/><text x="20.3032%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="20.1256%" y="677" width="0.0483%" height="15" fill="rgb(251,218,7)" fg:x="833" fg:w="2"/><text x="20.3756%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="20.1256%" y="661" width="0.0483%" height="15" fill="rgb(221,81,32)" fg:x="833" fg:w="2"/><text x="20.3756%" y="671.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.05%)</title><rect x="20.1256%" y="645" width="0.0483%" height="15" fill="rgb(214,152,26)" fg:x="833" fg:w="2"/><text x="20.3756%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="20.1256%" y="629" width="0.0483%" height="15" fill="rgb(223,22,3)" fg:x="833" fg:w="2"/><text x="20.3756%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="20.1256%" y="613" width="0.0483%" height="15" fill="rgb(207,174,7)" fg:x="833" fg:w="2"/><text x="20.3756%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="20.1256%" y="597" width="0.0483%" height="15" fill="rgb(224,19,52)" fg:x="833" fg:w="2"/><text x="20.3756%" y="607.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="20.1256%" y="581" width="0.0483%" height="15" fill="rgb(228,24,14)" fg:x="833" fg:w="2"/><text x="20.3756%" y="591.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="20.3672%" y="581" width="0.0242%" height="15" fill="rgb(230,153,43)" fg:x="843" fg:w="1"/><text x="20.6172%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="20.3672%" y="565" width="0.0242%" height="15" fill="rgb(231,106,12)" fg:x="843" fg:w="1"/><text x="20.6172%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (13 samples, 0.31%)</title><rect x="20.1740%" y="677" width="0.3141%" height="15" fill="rgb(215,92,2)" fg:x="835" fg:w="13"/><text x="20.4240%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.27%)</title><rect x="20.2223%" y="661" width="0.2658%" height="15" fill="rgb(249,143,25)" fg:x="837" fg:w="11"/><text x="20.4723%" y="671.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.27%)</title><rect x="20.2223%" y="645" width="0.2658%" height="15" fill="rgb(252,7,35)" fg:x="837" fg:w="11"/><text x="20.4723%" y="655.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (11 samples, 0.27%)</title><rect x="20.2223%" y="629" width="0.2658%" height="15" fill="rgb(216,69,40)" fg:x="837" fg:w="11"/><text x="20.4723%" y="639.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (11 samples, 0.27%)</title><rect x="20.2223%" y="613" width="0.2658%" height="15" fill="rgb(240,36,33)" fg:x="837" fg:w="11"/><text x="20.4723%" y="623.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (11 samples, 0.27%)</title><rect x="20.2223%" y="597" width="0.2658%" height="15" fill="rgb(231,128,14)" fg:x="837" fg:w="11"/><text x="20.4723%" y="607.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (4 samples, 0.10%)</title><rect x="20.3914%" y="581" width="0.0966%" height="15" fill="rgb(245,143,14)" fg:x="844" fg:w="4"/><text x="20.6414%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="20.5122%" y="597" width="0.0242%" height="15" fill="rgb(222,130,28)" fg:x="849" fg:w="1"/><text x="20.7622%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="20.5122%" y="581" width="0.0242%" height="15" fill="rgb(212,10,48)" fg:x="849" fg:w="1"/><text x="20.7622%" y="591.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="20.5122%" y="565" width="0.0242%" height="15" fill="rgb(254,118,45)" fg:x="849" fg:w="1"/><text x="20.7622%" y="575.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (2 samples, 0.05%)</title><rect x="20.5364%" y="597" width="0.0483%" height="15" fill="rgb(228,6,45)" fg:x="850" fg:w="2"/><text x="20.7864%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="20.5364%" y="581" width="0.0483%" height="15" fill="rgb(241,18,35)" fg:x="850" fg:w="2"/><text x="20.7864%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="20.5605%" y="565" width="0.0242%" height="15" fill="rgb(227,214,53)" fg:x="851" fg:w="1"/><text x="20.8105%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.48%)</title><rect x="20.1256%" y="805" width="0.4832%" height="15" fill="rgb(224,107,51)" fg:x="833" fg:w="20"/><text x="20.3756%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (20 samples, 0.48%)</title><rect x="20.1256%" y="789" width="0.4832%" height="15" fill="rgb(248,60,28)" fg:x="833" fg:w="20"/><text x="20.3756%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.48%)</title><rect x="20.1256%" y="773" width="0.4832%" height="15" fill="rgb(249,101,23)" fg:x="833" fg:w="20"/><text x="20.3756%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (20 samples, 0.48%)</title><rect x="20.1256%" y="757" width="0.4832%" height="15" fill="rgb(228,51,19)" fg:x="833" fg:w="20"/><text x="20.3756%" y="767.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (20 samples, 0.48%)</title><rect x="20.1256%" y="741" width="0.4832%" height="15" fill="rgb(213,20,6)" fg:x="833" fg:w="20"/><text x="20.3756%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (20 samples, 0.48%)</title><rect x="20.1256%" y="725" width="0.4832%" height="15" fill="rgb(212,124,10)" fg:x="833" fg:w="20"/><text x="20.3756%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (20 samples, 0.48%)</title><rect x="20.1256%" y="709" width="0.4832%" height="15" fill="rgb(248,3,40)" fg:x="833" fg:w="20"/><text x="20.3756%" y="719.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (20 samples, 0.48%)</title><rect x="20.1256%" y="693" width="0.4832%" height="15" fill="rgb(223,178,23)" fg:x="833" fg:w="20"/><text x="20.3756%" y="703.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (5 samples, 0.12%)</title><rect x="20.4880%" y="677" width="0.1208%" height="15" fill="rgb(240,132,45)" fg:x="848" fg:w="5"/><text x="20.7380%" y="687.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (5 samples, 0.12%)</title><rect x="20.4880%" y="661" width="0.1208%" height="15" fill="rgb(245,164,36)" fg:x="848" fg:w="5"/><text x="20.7380%" y="671.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (5 samples, 0.12%)</title><rect x="20.4880%" y="645" width="0.1208%" height="15" fill="rgb(231,188,53)" fg:x="848" fg:w="5"/><text x="20.7380%" y="655.50"></text></g><g><title>core::str::pattern::StrSearcher::new (5 samples, 0.12%)</title><rect x="20.4880%" y="629" width="0.1208%" height="15" fill="rgb(237,198,39)" fg:x="848" fg:w="5"/><text x="20.7380%" y="639.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (4 samples, 0.10%)</title><rect x="20.5122%" y="613" width="0.0966%" height="15" fill="rgb(223,120,35)" fg:x="849" fg:w="4"/><text x="20.7622%" y="623.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.02%)</title><rect x="20.5847%" y="597" width="0.0242%" height="15" fill="rgb(253,107,49)" fg:x="852" fg:w="1"/><text x="20.8347%" y="607.50"></text></g><g><title>_int_realloc (3 samples, 0.07%)</title><rect x="20.7296%" y="517" width="0.0725%" height="15" fill="rgb(216,44,31)" fg:x="858" fg:w="3"/><text x="20.9796%" y="527.50"></text></g><g><title>_int_malloc (3 samples, 0.07%)</title><rect x="20.7296%" y="501" width="0.0725%" height="15" fill="rgb(253,87,21)" fg:x="858" fg:w="3"/><text x="20.9796%" y="511.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.12%)</title><rect x="20.7055%" y="533" width="0.1208%" height="15" fill="rgb(226,18,2)" fg:x="857" fg:w="5"/><text x="20.9555%" y="543.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="20.8021%" y="517" width="0.0242%" height="15" fill="rgb(216,8,46)" fg:x="861" fg:w="1"/><text x="21.0521%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.14%)</title><rect x="20.7055%" y="581" width="0.1450%" height="15" fill="rgb(226,140,39)" fg:x="857" fg:w="6"/><text x="20.9555%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.14%)</title><rect x="20.7055%" y="565" width="0.1450%" height="15" fill="rgb(221,194,54)" fg:x="857" fg:w="6"/><text x="20.9555%" y="575.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.14%)</title><rect x="20.7055%" y="549" width="0.1450%" height="15" fill="rgb(213,92,11)" fg:x="857" fg:w="6"/><text x="20.9555%" y="559.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="20.8263%" y="533" width="0.0242%" height="15" fill="rgb(229,162,46)" fg:x="862" fg:w="1"/><text x="21.0763%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.02%)</title><rect x="20.8263%" y="517" width="0.0242%" height="15" fill="rgb(214,111,36)" fg:x="862" fg:w="1"/><text x="21.0763%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="20.8504%" y="581" width="0.0242%" height="15" fill="rgb(207,6,21)" fg:x="863" fg:w="1"/><text x="21.1004%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="20.8504%" y="565" width="0.0242%" height="15" fill="rgb(213,127,38)" fg:x="863" fg:w="1"/><text x="21.1004%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.19%)</title><rect x="20.7055%" y="597" width="0.1933%" height="15" fill="rgb(238,118,32)" fg:x="857" fg:w="8"/><text x="20.9555%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="20.8746%" y="581" width="0.0242%" height="15" fill="rgb(240,139,39)" fg:x="864" fg:w="1"/><text x="21.1246%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.27%)</title><rect x="20.6572%" y="661" width="0.2658%" height="15" fill="rgb(235,10,37)" fg:x="855" fg:w="11"/><text x="20.9072%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.24%)</title><rect x="20.6813%" y="645" width="0.2416%" height="15" fill="rgb(249,171,38)" fg:x="856" fg:w="10"/><text x="20.9313%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.24%)</title><rect x="20.6813%" y="629" width="0.2416%" height="15" fill="rgb(242,144,32)" fg:x="856" fg:w="10"/><text x="20.9313%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.22%)</title><rect x="20.7055%" y="613" width="0.2174%" height="15" fill="rgb(217,117,21)" fg:x="857" fg:w="9"/><text x="20.9555%" y="623.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="20.8988%" y="597" width="0.0242%" height="15" fill="rgb(249,87,1)" fg:x="865" fg:w="1"/><text x="21.1488%" y="607.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="20.8988%" y="581" width="0.0242%" height="15" fill="rgb(248,196,48)" fg:x="865" fg:w="1"/><text x="21.1488%" y="591.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="20.8988%" y="565" width="0.0242%" height="15" fill="rgb(251,206,33)" fg:x="865" fg:w="1"/><text x="21.1488%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect x="20.9229%" y="645" width="0.0242%" height="15" fill="rgb(232,141,28)" fg:x="866" fg:w="1"/><text x="21.1729%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="20.9229%" y="661" width="0.0483%" height="15" fill="rgb(209,167,14)" fg:x="866" fg:w="2"/><text x="21.1729%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="20.9471%" y="645" width="0.0242%" height="15" fill="rgb(225,11,50)" fg:x="867" fg:w="1"/><text x="21.1971%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (14 samples, 0.34%)</title><rect x="20.6572%" y="757" width="0.3382%" height="15" fill="rgb(209,50,20)" fg:x="855" fg:w="14"/><text x="20.9072%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14 samples, 0.34%)</title><rect x="20.6572%" y="741" width="0.3382%" height="15" fill="rgb(212,17,46)" fg:x="855" fg:w="14"/><text x="20.9072%" y="751.50"></text></g><g><title>alloc::string::String::push_str (14 samples, 0.34%)</title><rect x="20.6572%" y="725" width="0.3382%" height="15" fill="rgb(216,101,39)" fg:x="855" fg:w="14"/><text x="20.9072%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.34%)</title><rect x="20.6572%" y="709" width="0.3382%" height="15" fill="rgb(212,228,48)" fg:x="855" fg:w="14"/><text x="20.9072%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 0.34%)</title><rect x="20.6572%" y="693" width="0.3382%" height="15" fill="rgb(250,6,50)" fg:x="855" fg:w="14"/><text x="20.9072%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (14 samples, 0.34%)</title><rect x="20.6572%" y="677" width="0.3382%" height="15" fill="rgb(250,160,48)" fg:x="855" fg:w="14"/><text x="20.9072%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="20.9712%" y="661" width="0.0242%" height="15" fill="rgb(244,216,33)" fg:x="868" fg:w="1"/><text x="21.2212%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="20.9712%" y="645" width="0.0242%" height="15" fill="rgb(207,157,5)" fg:x="868" fg:w="1"/><text x="21.2212%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="20.9954%" y="757" width="0.0242%" height="15" fill="rgb(228,199,8)" fg:x="869" fg:w="1"/><text x="21.2454%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="20.9954%" y="741" width="0.0242%" height="15" fill="rgb(227,80,20)" fg:x="869" fg:w="1"/><text x="21.2454%" y="751.50"></text></g><g><title>alloc::fmt::format (19 samples, 0.46%)</title><rect x="20.6088%" y="805" width="0.4590%" height="15" fill="rgb(222,9,33)" fg:x="853" fg:w="19"/><text x="20.8588%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (18 samples, 0.43%)</title><rect x="20.6330%" y="789" width="0.4349%" height="15" fill="rgb(239,44,28)" fg:x="854" fg:w="18"/><text x="20.8830%" y="799.50"></text></g><g><title>core::fmt::write (17 samples, 0.41%)</title><rect x="20.6572%" y="773" width="0.4107%" height="15" fill="rgb(249,187,43)" fg:x="855" fg:w="17"/><text x="20.9072%" y="783.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.05%)</title><rect x="21.0196%" y="757" width="0.0483%" height="15" fill="rgb(216,141,28)" fg:x="870" fg:w="2"/><text x="21.2696%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="21.0679%" y="805" width="0.0242%" height="15" fill="rgb(230,154,53)" fg:x="872" fg:w="1"/><text x="21.3179%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="21.0679%" y="789" width="0.0242%" height="15" fill="rgb(227,82,4)" fg:x="872" fg:w="1"/><text x="21.3179%" y="799.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="21.0679%" y="773" width="0.0242%" height="15" fill="rgb(220,107,16)" fg:x="872" fg:w="1"/><text x="21.3179%" y="783.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.02%)</title><rect x="21.0679%" y="757" width="0.0242%" height="15" fill="rgb(207,187,2)" fg:x="872" fg:w="1"/><text x="21.3179%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="21.0679%" y="741" width="0.0242%" height="15" fill="rgb(210,162,52)" fg:x="872" fg:w="1"/><text x="21.3179%" y="751.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="21.0679%" y="725" width="0.0242%" height="15" fill="rgb(217,216,49)" fg:x="872" fg:w="1"/><text x="21.3179%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="21.0679%" y="709" width="0.0242%" height="15" fill="rgb(218,146,49)" fg:x="872" fg:w="1"/><text x="21.3179%" y="719.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="21.0921%" y="709" width="0.0242%" height="15" fill="rgb(216,55,40)" fg:x="873" fg:w="1"/><text x="21.3421%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.12%)</title><rect x="21.0921%" y="805" width="0.1208%" height="15" fill="rgb(208,196,21)" fg:x="873" fg:w="5"/><text x="21.3421%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.12%)</title><rect x="21.0921%" y="789" width="0.1208%" height="15" fill="rgb(242,117,42)" fg:x="873" fg:w="5"/><text x="21.3421%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.12%)</title><rect x="21.0921%" y="773" width="0.1208%" height="15" fill="rgb(210,11,23)" fg:x="873" fg:w="5"/><text x="21.3421%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.12%)</title><rect x="21.0921%" y="757" width="0.1208%" height="15" fill="rgb(217,110,2)" fg:x="873" fg:w="5"/><text x="21.3421%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.12%)</title><rect x="21.0921%" y="741" width="0.1208%" height="15" fill="rgb(229,77,54)" fg:x="873" fg:w="5"/><text x="21.3421%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.12%)</title><rect x="21.0921%" y="725" width="0.1208%" height="15" fill="rgb(218,53,16)" fg:x="873" fg:w="5"/><text x="21.3421%" y="735.50"></text></g><g><title>_int_free (4 samples, 0.10%)</title><rect x="21.1162%" y="709" width="0.0966%" height="15" fill="rgb(215,38,13)" fg:x="874" fg:w="4"/><text x="21.3662%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="21.2370%" y="741" width="0.0242%" height="15" fill="rgb(235,42,18)" fg:x="879" fg:w="1"/><text x="21.4870%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="21.2370%" y="725" width="0.0242%" height="15" fill="rgb(219,66,54)" fg:x="879" fg:w="1"/><text x="21.4870%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="21.2370%" y="709" width="0.0242%" height="15" fill="rgb(222,205,4)" fg:x="879" fg:w="1"/><text x="21.4870%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="21.2370%" y="693" width="0.0242%" height="15" fill="rgb(227,213,46)" fg:x="879" fg:w="1"/><text x="21.4870%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="21.2370%" y="677" width="0.0242%" height="15" fill="rgb(250,145,42)" fg:x="879" fg:w="1"/><text x="21.4870%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="21.2612%" y="741" width="0.0242%" height="15" fill="rgb(219,15,2)" fg:x="880" fg:w="1"/><text x="21.5112%" y="751.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="21.2612%" y="725" width="0.0242%" height="15" fill="rgb(231,181,52)" fg:x="880" fg:w="1"/><text x="21.5112%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="21.2612%" y="709" width="0.0242%" height="15" fill="rgb(235,1,42)" fg:x="880" fg:w="1"/><text x="21.5112%" y="719.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="21.2612%" y="693" width="0.0242%" height="15" fill="rgb(249,88,27)" fg:x="880" fg:w="1"/><text x="21.5112%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.10%)</title><rect x="21.2129%" y="757" width="0.0966%" height="15" fill="rgb(235,145,16)" fg:x="878" fg:w="4"/><text x="21.4629%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="21.2853%" y="741" width="0.0242%" height="15" fill="rgb(237,114,19)" fg:x="881" fg:w="1"/><text x="21.5353%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="21.2853%" y="725" width="0.0242%" height="15" fill="rgb(238,51,50)" fg:x="881" fg:w="1"/><text x="21.5353%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.2853%" y="709" width="0.0242%" height="15" fill="rgb(205,194,25)" fg:x="881" fg:w="1"/><text x="21.5353%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.2853%" y="693" width="0.0242%" height="15" fill="rgb(215,203,17)" fg:x="881" fg:w="1"/><text x="21.5353%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.2853%" y="677" width="0.0242%" height="15" fill="rgb(233,112,49)" fg:x="881" fg:w="1"/><text x="21.5353%" y="687.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="21.2853%" y="661" width="0.0242%" height="15" fill="rgb(241,130,26)" fg:x="881" fg:w="1"/><text x="21.5353%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.12%)</title><rect x="21.2129%" y="805" width="0.1208%" height="15" fill="rgb(252,223,19)" fg:x="878" fg:w="5"/><text x="21.4629%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.12%)</title><rect x="21.2129%" y="789" width="0.1208%" height="15" fill="rgb(211,95,25)" fg:x="878" fg:w="5"/><text x="21.4629%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.12%)</title><rect x="21.2129%" y="773" width="0.1208%" height="15" fill="rgb(251,182,27)" fg:x="878" fg:w="5"/><text x="21.4629%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="21.3095%" y="757" width="0.0242%" height="15" fill="rgb(238,24,4)" fg:x="882" fg:w="1"/><text x="21.5595%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="21.3095%" y="741" width="0.0242%" height="15" fill="rgb(224,220,25)" fg:x="882" fg:w="1"/><text x="21.5595%" y="751.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="21.3095%" y="725" width="0.0242%" height="15" fill="rgb(239,133,26)" fg:x="882" fg:w="1"/><text x="21.5595%" y="735.50"></text></g><g><title>&lt;&amp;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (1 samples, 0.02%)</title><rect x="21.3095%" y="709" width="0.0242%" height="15" fill="rgb(211,94,48)" fg:x="882" fg:w="1"/><text x="21.5595%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.14%)</title><rect x="21.3337%" y="693" width="0.1450%" height="15" fill="rgb(239,87,6)" fg:x="883" fg:w="6"/><text x="21.5837%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="21.3578%" y="677" width="0.1208%" height="15" fill="rgb(227,62,0)" fg:x="884" fg:w="5"/><text x="21.6078%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="21.3578%" y="661" width="0.1208%" height="15" fill="rgb(211,226,4)" fg:x="884" fg:w="5"/><text x="21.6078%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="21.4545%" y="645" width="0.0242%" height="15" fill="rgb(253,38,52)" fg:x="888" fg:w="1"/><text x="21.7045%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (9 samples, 0.22%)</title><rect x="21.3337%" y="725" width="0.2174%" height="15" fill="rgb(229,126,40)" fg:x="883" fg:w="9"/><text x="21.5837%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (9 samples, 0.22%)</title><rect x="21.3337%" y="709" width="0.2174%" height="15" fill="rgb(229,165,44)" fg:x="883" fg:w="9"/><text x="21.5837%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u8 (3 samples, 0.07%)</title><rect x="21.4786%" y="693" width="0.0725%" height="15" fill="rgb(247,95,47)" fg:x="889" fg:w="3"/><text x="21.7286%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="21.4786%" y="677" width="0.0725%" height="15" fill="rgb(216,140,30)" fg:x="889" fg:w="3"/><text x="21.7286%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="21.4786%" y="661" width="0.0725%" height="15" fill="rgb(246,214,8)" fg:x="889" fg:w="3"/><text x="21.7286%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="21.4786%" y="645" width="0.0725%" height="15" fill="rgb(227,224,15)" fg:x="889" fg:w="3"/><text x="21.7286%" y="655.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="21.5269%" y="629" width="0.0242%" height="15" fill="rgb(233,175,4)" fg:x="891" fg:w="1"/><text x="21.7769%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.05%)</title><rect x="21.5753%" y="677" width="0.0483%" height="15" fill="rgb(221,66,45)" fg:x="893" fg:w="2"/><text x="21.8253%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.34%)</title><rect x="21.3337%" y="741" width="0.3382%" height="15" fill="rgb(221,178,18)" fg:x="883" fg:w="14"/><text x="21.5837%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.12%)</title><rect x="21.5511%" y="725" width="0.1208%" height="15" fill="rgb(213,81,29)" fg:x="892" fg:w="5"/><text x="21.8011%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.12%)</title><rect x="21.5511%" y="709" width="0.1208%" height="15" fill="rgb(220,89,49)" fg:x="892" fg:w="5"/><text x="21.8011%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.12%)</title><rect x="21.5511%" y="693" width="0.1208%" height="15" fill="rgb(227,60,33)" fg:x="892" fg:w="5"/><text x="21.8011%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.05%)</title><rect x="21.6236%" y="677" width="0.0483%" height="15" fill="rgb(205,113,12)" fg:x="895" fg:w="2"/><text x="21.8736%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="21.6477%" y="661" width="0.0242%" height="15" fill="rgb(211,32,1)" fg:x="896" fg:w="1"/><text x="21.8977%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="21.6719%" y="677" width="0.0242%" height="15" fill="rgb(246,2,12)" fg:x="897" fg:w="1"/><text x="21.9219%" y="687.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="21.6719%" y="661" width="0.0242%" height="15" fill="rgb(243,37,27)" fg:x="897" fg:w="1"/><text x="21.9219%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="21.6719%" y="709" width="0.0483%" height="15" fill="rgb(248,211,31)" fg:x="897" fg:w="2"/><text x="21.9219%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="21.6719%" y="693" width="0.0483%" height="15" fill="rgb(242,146,47)" fg:x="897" fg:w="2"/><text x="21.9219%" y="703.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (1 samples, 0.02%)</title><rect x="21.6961%" y="677" width="0.0242%" height="15" fill="rgb(206,70,20)" fg:x="898" fg:w="1"/><text x="21.9461%" y="687.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="21.7202%" y="709" width="0.0242%" height="15" fill="rgb(215,10,51)" fg:x="899" fg:w="1"/><text x="21.9702%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="21.7202%" y="693" width="0.0242%" height="15" fill="rgb(243,178,53)" fg:x="899" fg:w="1"/><text x="21.9702%" y="703.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="21.7202%" y="677" width="0.0242%" height="15" fill="rgb(233,221,20)" fg:x="899" fg:w="1"/><text x="21.9702%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="21.7202%" y="661" width="0.0242%" height="15" fill="rgb(218,95,35)" fg:x="899" fg:w="1"/><text x="21.9702%" y="671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="21.7202%" y="645" width="0.0242%" height="15" fill="rgb(229,13,5)" fg:x="899" fg:w="1"/><text x="21.9702%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="21.7202%" y="629" width="0.0242%" height="15" fill="rgb(252,164,30)" fg:x="899" fg:w="1"/><text x="21.9702%" y="639.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (20 samples, 0.48%)</title><rect x="21.3337%" y="805" width="0.4832%" height="15" fill="rgb(232,68,36)" fg:x="883" fg:w="20"/><text x="21.5837%" y="815.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (20 samples, 0.48%)</title><rect x="21.3337%" y="789" width="0.4832%" height="15" fill="rgb(219,59,54)" fg:x="883" fg:w="20"/><text x="21.5837%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (20 samples, 0.48%)</title><rect x="21.3337%" y="773" width="0.4832%" height="15" fill="rgb(250,92,33)" fg:x="883" fg:w="20"/><text x="21.5837%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.48%)</title><rect x="21.3337%" y="757" width="0.4832%" height="15" fill="rgb(229,162,54)" fg:x="883" fg:w="20"/><text x="21.5837%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.14%)</title><rect x="21.6719%" y="741" width="0.1450%" height="15" fill="rgb(244,114,52)" fg:x="897" fg:w="6"/><text x="21.9219%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.14%)</title><rect x="21.6719%" y="725" width="0.1450%" height="15" fill="rgb(212,211,43)" fg:x="897" fg:w="6"/><text x="21.9219%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.07%)</title><rect x="21.7444%" y="709" width="0.0725%" height="15" fill="rgb(226,147,8)" fg:x="900" fg:w="3"/><text x="21.9944%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.07%)</title><rect x="21.7444%" y="693" width="0.0725%" height="15" fill="rgb(226,23,13)" fg:x="900" fg:w="3"/><text x="21.9944%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.07%)</title><rect x="21.7444%" y="677" width="0.0725%" height="15" fill="rgb(240,63,4)" fg:x="900" fg:w="3"/><text x="21.9944%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.07%)</title><rect x="21.7444%" y="661" width="0.0725%" height="15" fill="rgb(221,1,32)" fg:x="900" fg:w="3"/><text x="21.9944%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.07%)</title><rect x="21.7444%" y="645" width="0.0725%" height="15" fill="rgb(242,117,10)" fg:x="900" fg:w="3"/><text x="21.9944%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.07%)</title><rect x="21.7444%" y="629" width="0.0725%" height="15" fill="rgb(249,172,44)" fg:x="900" fg:w="3"/><text x="21.9944%" y="639.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.07%)</title><rect x="21.7444%" y="613" width="0.0725%" height="15" fill="rgb(244,46,45)" fg:x="900" fg:w="3"/><text x="21.9944%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="21.8410%" y="741" width="0.0242%" height="15" fill="rgb(206,43,17)" fg:x="904" fg:w="1"/><text x="22.0910%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="21.8410%" y="725" width="0.0242%" height="15" fill="rgb(239,218,39)" fg:x="904" fg:w="1"/><text x="22.0910%" y="735.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="21.8410%" y="709" width="0.0242%" height="15" fill="rgb(208,169,54)" fg:x="904" fg:w="1"/><text x="22.0910%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="21.8652%" y="629" width="0.0725%" height="15" fill="rgb(247,25,42)" fg:x="905" fg:w="3"/><text x="22.1152%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="21.8652%" y="613" width="0.0725%" height="15" fill="rgb(226,23,31)" fg:x="905" fg:w="3"/><text x="22.1152%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="21.8652%" y="597" width="0.0725%" height="15" fill="rgb(247,16,28)" fg:x="905" fg:w="3"/><text x="22.1152%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.07%)</title><rect x="21.8652%" y="581" width="0.0725%" height="15" fill="rgb(231,147,38)" fg:x="905" fg:w="3"/><text x="22.1152%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4 samples, 0.10%)</title><rect x="21.8652%" y="661" width="0.0966%" height="15" fill="rgb(253,81,48)" fg:x="905" fg:w="4"/><text x="22.1152%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.10%)</title><rect x="21.8652%" y="645" width="0.0966%" height="15" fill="rgb(249,222,43)" fg:x="905" fg:w="4"/><text x="22.1152%" y="655.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="21.9377%" y="629" width="0.0242%" height="15" fill="rgb(221,3,27)" fg:x="908" fg:w="1"/><text x="22.1877%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.9377%" y="613" width="0.0242%" height="15" fill="rgb(228,180,5)" fg:x="908" fg:w="1"/><text x="22.1877%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.9377%" y="597" width="0.0242%" height="15" fill="rgb(227,131,42)" fg:x="908" fg:w="1"/><text x="22.1877%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.9377%" y="581" width="0.0242%" height="15" fill="rgb(212,3,39)" fg:x="908" fg:w="1"/><text x="22.1877%" y="591.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="21.9377%" y="565" width="0.0242%" height="15" fill="rgb(226,45,5)" fg:x="908" fg:w="1"/><text x="22.1877%" y="575.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (5 samples, 0.12%)</title><rect x="21.8652%" y="693" width="0.1208%" height="15" fill="rgb(215,167,45)" fg:x="905" fg:w="5"/><text x="22.1152%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.12%)</title><rect x="21.8652%" y="677" width="0.1208%" height="15" fill="rgb(250,218,53)" fg:x="905" fg:w="5"/><text x="22.1152%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="21.9618%" y="661" width="0.0242%" height="15" fill="rgb(207,140,0)" fg:x="909" fg:w="1"/><text x="22.2118%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="21.9618%" y="645" width="0.0242%" height="15" fill="rgb(238,133,51)" fg:x="909" fg:w="1"/><text x="22.2118%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="21.9618%" y="629" width="0.0242%" height="15" fill="rgb(218,203,53)" fg:x="909" fg:w="1"/><text x="22.2118%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="21.9618%" y="613" width="0.0242%" height="15" fill="rgb(226,184,25)" fg:x="909" fg:w="1"/><text x="22.2118%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="21.9618%" y="597" width="0.0242%" height="15" fill="rgb(231,121,21)" fg:x="909" fg:w="1"/><text x="22.2118%" y="607.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (8 samples, 0.19%)</title><rect x="21.8169%" y="805" width="0.1933%" height="15" fill="rgb(251,14,34)" fg:x="903" fg:w="8"/><text x="22.0669%" y="815.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (8 samples, 0.19%)</title><rect x="21.8169%" y="789" width="0.1933%" height="15" fill="rgb(249,193,11)" fg:x="903" fg:w="8"/><text x="22.0669%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.17%)</title><rect x="21.8410%" y="773" width="0.1691%" height="15" fill="rgb(220,172,37)" fg:x="904" fg:w="7"/><text x="22.0910%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.17%)</title><rect x="21.8410%" y="757" width="0.1691%" height="15" fill="rgb(231,229,43)" fg:x="904" fg:w="7"/><text x="22.0910%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (6 samples, 0.14%)</title><rect x="21.8652%" y="741" width="0.1450%" height="15" fill="rgb(250,161,5)" fg:x="905" fg:w="6"/><text x="22.1152%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.14%)</title><rect x="21.8652%" y="725" width="0.1450%" height="15" fill="rgb(218,225,18)" fg:x="905" fg:w="6"/><text x="22.1152%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (6 samples, 0.14%)</title><rect x="21.8652%" y="709" width="0.1450%" height="15" fill="rgb(245,45,42)" fg:x="905" fg:w="6"/><text x="22.1152%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.02%)</title><rect x="21.9860%" y="693" width="0.0242%" height="15" fill="rgb(211,115,1)" fg:x="910" fg:w="1"/><text x="22.2360%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="21.9860%" y="677" width="0.0242%" height="15" fill="rgb(248,133,52)" fg:x="910" fg:w="1"/><text x="22.2360%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.14%)</title><rect x="22.0826%" y="661" width="0.1450%" height="15" fill="rgb(238,100,21)" fg:x="914" fg:w="6"/><text x="22.3326%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.14%)</title><rect x="22.0826%" y="645" width="0.1450%" height="15" fill="rgb(247,144,11)" fg:x="914" fg:w="6"/><text x="22.3326%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.14%)</title><rect x="22.0826%" y="629" width="0.1450%" height="15" fill="rgb(206,164,16)" fg:x="914" fg:w="6"/><text x="22.3326%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.14%)</title><rect x="22.0826%" y="613" width="0.1450%" height="15" fill="rgb(222,34,3)" fg:x="914" fg:w="6"/><text x="22.3326%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.14%)</title><rect x="22.0826%" y="597" width="0.1450%" height="15" fill="rgb(248,82,4)" fg:x="914" fg:w="6"/><text x="22.3326%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.14%)</title><rect x="22.0826%" y="581" width="0.1450%" height="15" fill="rgb(228,81,46)" fg:x="914" fg:w="6"/><text x="22.3326%" y="591.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.10%)</title><rect x="22.1309%" y="565" width="0.0966%" height="15" fill="rgb(227,67,47)" fg:x="916" fg:w="4"/><text x="22.3809%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="22.2276%" y="661" width="0.0242%" height="15" fill="rgb(215,93,53)" fg:x="920" fg:w="1"/><text x="22.4776%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="22.2276%" y="645" width="0.0242%" height="15" fill="rgb(248,194,39)" fg:x="920" fg:w="1"/><text x="22.4776%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="22.8799%" y="565" width="0.0242%" height="15" fill="rgb(215,5,19)" fg:x="947" fg:w="1"/><text x="23.1299%" y="575.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.02%)</title><rect x="22.8799%" y="549" width="0.0242%" height="15" fill="rgb(226,215,51)" fg:x="947" fg:w="1"/><text x="23.1299%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.02%)</title><rect x="22.8799%" y="533" width="0.0242%" height="15" fill="rgb(225,56,26)" fg:x="947" fg:w="1"/><text x="23.1299%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="22.8799%" y="517" width="0.0242%" height="15" fill="rgb(222,75,29)" fg:x="947" fg:w="1"/><text x="23.1299%" y="527.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (1 samples, 0.02%)</title><rect x="22.9041%" y="565" width="0.0242%" height="15" fill="rgb(236,139,6)" fg:x="948" fg:w="1"/><text x="23.1541%" y="575.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="22.9766%" y="533" width="0.0242%" height="15" fill="rgb(223,137,36)" fg:x="951" fg:w="1"/><text x="23.2266%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.02%)</title><rect x="22.9766%" y="517" width="0.0242%" height="15" fill="rgb(226,99,2)" fg:x="951" fg:w="1"/><text x="23.2266%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.12%)</title><rect x="22.9282%" y="565" width="0.1208%" height="15" fill="rgb(206,133,23)" fg:x="949" fg:w="5"/><text x="23.1782%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.12%)</title><rect x="22.9282%" y="549" width="0.1208%" height="15" fill="rgb(243,173,15)" fg:x="949" fg:w="5"/><text x="23.1782%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.05%)</title><rect x="23.0007%" y="533" width="0.0483%" height="15" fill="rgb(228,69,28)" fg:x="952" fg:w="2"/><text x="23.2507%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (36 samples, 0.87%)</title><rect x="22.2518%" y="661" width="0.8698%" height="15" fill="rgb(212,51,22)" fg:x="921" fg:w="36"/><text x="22.5018%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (25 samples, 0.60%)</title><rect x="22.5175%" y="645" width="0.6040%" height="15" fill="rgb(227,113,0)" fg:x="932" fg:w="25"/><text x="22.7675%" y="655.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.60%)</title><rect x="22.5175%" y="629" width="0.6040%" height="15" fill="rgb(252,84,27)" fg:x="932" fg:w="25"/><text x="22.7675%" y="639.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (25 samples, 0.60%)</title><rect x="22.5175%" y="613" width="0.6040%" height="15" fill="rgb(223,145,39)" fg:x="932" fg:w="25"/><text x="22.7675%" y="623.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (25 samples, 0.60%)</title><rect x="22.5175%" y="597" width="0.6040%" height="15" fill="rgb(239,219,30)" fg:x="932" fg:w="25"/><text x="22.7675%" y="607.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (21 samples, 0.51%)</title><rect x="22.6142%" y="581" width="0.5074%" height="15" fill="rgb(224,196,39)" fg:x="936" fg:w="21"/><text x="22.8642%" y="591.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (3 samples, 0.07%)</title><rect x="23.0490%" y="565" width="0.0725%" height="15" fill="rgb(205,35,43)" fg:x="954" fg:w="3"/><text x="23.2990%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="23.2665%" y="581" width="0.0483%" height="15" fill="rgb(228,201,21)" fg:x="963" fg:w="2"/><text x="23.5165%" y="591.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="23.2665%" y="565" width="0.0483%" height="15" fill="rgb(237,118,16)" fg:x="963" fg:w="2"/><text x="23.5165%" y="575.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="23.2906%" y="549" width="0.0242%" height="15" fill="rgb(241,17,19)" fg:x="964" fg:w="1"/><text x="23.5406%" y="559.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1 samples, 0.02%)</title><rect x="23.3148%" y="581" width="0.0242%" height="15" fill="rgb(214,10,25)" fg:x="965" fg:w="1"/><text x="23.5648%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="23.3148%" y="565" width="0.0242%" height="15" fill="rgb(238,37,29)" fg:x="965" fg:w="1"/><text x="23.5648%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 1.38%)</title><rect x="22.0826%" y="789" width="1.3771%" height="15" fill="rgb(253,83,25)" fg:x="914" fg:w="57"/><text x="22.3326%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (57 samples, 1.38%)</title><rect x="22.0826%" y="773" width="1.3771%" height="15" fill="rgb(234,192,12)" fg:x="914" fg:w="57"/><text x="22.3326%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (57 samples, 1.38%)</title><rect x="22.0826%" y="757" width="1.3771%" height="15" fill="rgb(241,216,45)" fg:x="914" fg:w="57"/><text x="22.3326%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (57 samples, 1.38%)</title><rect x="22.0826%" y="741" width="1.3771%" height="15" fill="rgb(242,22,33)" fg:x="914" fg:w="57"/><text x="22.3326%" y="751.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (57 samples, 1.38%)</title><rect x="22.0826%" y="725" width="1.3771%" height="15" fill="rgb(231,105,49)" fg:x="914" fg:w="57"/><text x="22.3326%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (57 samples, 1.38%)</title><rect x="22.0826%" y="709" width="1.3771%" height="15" fill="rgb(218,204,15)" fg:x="914" fg:w="57"/><text x="22.3326%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (57 samples, 1.38%)</title><rect x="22.0826%" y="693" width="1.3771%" height="15" fill="rgb(235,138,41)" fg:x="914" fg:w="57"/><text x="22.3326%" y="703.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (57 samples, 1.38%)</title><rect x="22.0826%" y="677" width="1.3771%" height="15" fill="rgb(246,0,9)" fg:x="914" fg:w="57"/><text x="22.3326%" y="687.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (14 samples, 0.34%)</title><rect x="23.1215%" y="661" width="0.3382%" height="15" fill="rgb(210,74,4)" fg:x="957" fg:w="14"/><text x="23.3715%" y="671.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (14 samples, 0.34%)</title><rect x="23.1215%" y="645" width="0.3382%" height="15" fill="rgb(250,60,41)" fg:x="957" fg:w="14"/><text x="23.3715%" y="655.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (14 samples, 0.34%)</title><rect x="23.1215%" y="629" width="0.3382%" height="15" fill="rgb(220,115,12)" fg:x="957" fg:w="14"/><text x="23.3715%" y="639.50"></text></g><g><title>core::str::pattern::StrSearcher::new (13 samples, 0.31%)</title><rect x="23.1457%" y="613" width="0.3141%" height="15" fill="rgb(237,100,13)" fg:x="958" fg:w="13"/><text x="23.3957%" y="623.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (8 samples, 0.19%)</title><rect x="23.2665%" y="597" width="0.1933%" height="15" fill="rgb(213,55,26)" fg:x="963" fg:w="8"/><text x="23.5165%" y="607.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (5 samples, 0.12%)</title><rect x="23.3390%" y="581" width="0.1208%" height="15" fill="rgb(216,17,4)" fg:x="966" fg:w="5"/><text x="23.5890%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.05%)</title><rect x="23.6047%" y="581" width="0.0483%" height="15" fill="rgb(220,153,47)" fg:x="977" fg:w="2"/><text x="23.8547%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.02%)</title><rect x="23.6531%" y="581" width="0.0242%" height="15" fill="rgb(215,131,9)" fg:x="979" fg:w="1"/><text x="23.9031%" y="591.50"></text></g><g><title>_int_free (4 samples, 0.10%)</title><rect x="23.7497%" y="485" width="0.0966%" height="15" fill="rgb(233,46,42)" fg:x="983" fg:w="4"/><text x="23.9997%" y="495.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="23.8222%" y="469" width="0.0242%" height="15" fill="rgb(226,86,7)" fg:x="986" fg:w="1"/><text x="24.0722%" y="479.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.22%)</title><rect x="23.6772%" y="517" width="0.2174%" height="15" fill="rgb(239,226,21)" fg:x="980" fg:w="9"/><text x="23.9272%" y="527.50"></text></g><g><title>_int_realloc (8 samples, 0.19%)</title><rect x="23.7014%" y="501" width="0.1933%" height="15" fill="rgb(244,137,22)" fg:x="981" fg:w="8"/><text x="23.9514%" y="511.50"></text></g><g><title>_int_malloc (2 samples, 0.05%)</title><rect x="23.8463%" y="485" width="0.0483%" height="15" fill="rgb(211,139,35)" fg:x="987" fg:w="2"/><text x="24.0963%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.27%)</title><rect x="23.6772%" y="565" width="0.2658%" height="15" fill="rgb(214,62,50)" fg:x="980" fg:w="11"/><text x="23.9272%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.27%)</title><rect x="23.6772%" y="549" width="0.2658%" height="15" fill="rgb(212,113,44)" fg:x="980" fg:w="11"/><text x="23.9272%" y="559.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.27%)</title><rect x="23.6772%" y="533" width="0.2658%" height="15" fill="rgb(226,150,43)" fg:x="980" fg:w="11"/><text x="23.9272%" y="543.50"></text></g><g><title>__rdl_realloc (2 samples, 0.05%)</title><rect x="23.8947%" y="517" width="0.0483%" height="15" fill="rgb(250,71,37)" fg:x="989" fg:w="2"/><text x="24.1447%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.02%)</title><rect x="23.9188%" y="501" width="0.0242%" height="15" fill="rgb(219,76,19)" fg:x="990" fg:w="1"/><text x="24.1688%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="23.9430%" y="565" width="0.0242%" height="15" fill="rgb(250,39,11)" fg:x="991" fg:w="1"/><text x="24.1930%" y="575.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="23.9430%" y="549" width="0.0242%" height="15" fill="rgb(230,64,31)" fg:x="991" fg:w="1"/><text x="24.1930%" y="559.50"></text></g><g><title>__rdl_alloc (3 samples, 0.07%)</title><rect x="23.9671%" y="565" width="0.0725%" height="15" fill="rgb(208,222,23)" fg:x="992" fg:w="3"/><text x="24.2171%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.07%)</title><rect x="23.9671%" y="549" width="0.0725%" height="15" fill="rgb(227,125,18)" fg:x="992" fg:w="3"/><text x="24.2171%" y="559.50"></text></g><g><title>__rust_alloc (2 samples, 0.05%)</title><rect x="24.0396%" y="565" width="0.0483%" height="15" fill="rgb(234,210,9)" fg:x="995" fg:w="2"/><text x="24.2896%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.53%)</title><rect x="23.5806%" y="645" width="0.5315%" height="15" fill="rgb(217,127,24)" fg:x="976" fg:w="22"/><text x="23.8306%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.53%)</title><rect x="23.5806%" y="629" width="0.5315%" height="15" fill="rgb(239,141,48)" fg:x="976" fg:w="22"/><text x="23.8306%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.53%)</title><rect x="23.5806%" y="613" width="0.5315%" height="15" fill="rgb(227,109,8)" fg:x="976" fg:w="22"/><text x="23.8306%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.51%)</title><rect x="23.6047%" y="597" width="0.5074%" height="15" fill="rgb(235,184,23)" fg:x="977" fg:w="21"/><text x="23.8547%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.43%)</title><rect x="23.6772%" y="581" width="0.4349%" height="15" fill="rgb(227,226,48)" fg:x="980" fg:w="18"/><text x="23.9272%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="24.0879%" y="565" width="0.0242%" height="15" fill="rgb(206,150,11)" fg:x="997" fg:w="1"/><text x="24.3379%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.05%)</title><rect x="24.1121%" y="629" width="0.0483%" height="15" fill="rgb(254,2,33)" fg:x="998" fg:w="2"/><text x="24.3621%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.07%)</title><rect x="24.1121%" y="645" width="0.0725%" height="15" fill="rgb(243,160,20)" fg:x="998" fg:w="3"/><text x="24.3621%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="24.1604%" y="629" width="0.0242%" height="15" fill="rgb(218,208,30)" fg:x="1000" fg:w="1"/><text x="24.4104%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (27 samples, 0.65%)</title><rect x="23.5564%" y="741" width="0.6523%" height="15" fill="rgb(224,120,49)" fg:x="975" fg:w="27"/><text x="23.8064%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (27 samples, 0.65%)</title><rect x="23.5564%" y="725" width="0.6523%" height="15" fill="rgb(246,12,2)" fg:x="975" fg:w="27"/><text x="23.8064%" y="735.50"></text></g><g><title>alloc::string::String::push_str (27 samples, 0.65%)</title><rect x="23.5564%" y="709" width="0.6523%" height="15" fill="rgb(236,117,3)" fg:x="975" fg:w="27"/><text x="23.8064%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27 samples, 0.65%)</title><rect x="23.5564%" y="693" width="0.6523%" height="15" fill="rgb(216,128,52)" fg:x="975" fg:w="27"/><text x="23.8064%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.65%)</title><rect x="23.5564%" y="677" width="0.6523%" height="15" fill="rgb(246,145,19)" fg:x="975" fg:w="27"/><text x="23.8064%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27 samples, 0.65%)</title><rect x="23.5564%" y="661" width="0.6523%" height="15" fill="rgb(222,11,46)" fg:x="975" fg:w="27"/><text x="23.8064%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="24.1846%" y="645" width="0.0242%" height="15" fill="rgb(245,82,36)" fg:x="1001" fg:w="1"/><text x="24.4346%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="24.1846%" y="629" width="0.0242%" height="15" fill="rgb(250,73,51)" fg:x="1001" fg:w="1"/><text x="24.4346%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="24.2087%" y="741" width="0.0242%" height="15" fill="rgb(221,189,23)" fg:x="1002" fg:w="1"/><text x="24.4587%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="24.2087%" y="725" width="0.0242%" height="15" fill="rgb(210,33,7)" fg:x="1002" fg:w="1"/><text x="24.4587%" y="735.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="24.2329%" y="741" width="0.0242%" height="15" fill="rgb(210,107,22)" fg:x="1003" fg:w="1"/><text x="24.4829%" y="751.50"></text></g><g><title>alloc::fmt::format (34 samples, 0.82%)</title><rect x="23.4598%" y="789" width="0.8215%" height="15" fill="rgb(222,116,37)" fg:x="971" fg:w="34"/><text x="23.7098%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (32 samples, 0.77%)</title><rect x="23.5081%" y="773" width="0.7731%" height="15" fill="rgb(254,17,48)" fg:x="973" fg:w="32"/><text x="23.7581%" y="783.50"></text></g><g><title>core::fmt::write (32 samples, 0.77%)</title><rect x="23.5081%" y="757" width="0.7731%" height="15" fill="rgb(224,36,32)" fg:x="973" fg:w="32"/><text x="23.7581%" y="767.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.02%)</title><rect x="24.2571%" y="741" width="0.0242%" height="15" fill="rgb(232,90,46)" fg:x="1004" fg:w="1"/><text x="24.5071%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.07%)</title><rect x="24.2812%" y="789" width="0.0725%" height="15" fill="rgb(241,66,40)" fg:x="1005" fg:w="3"/><text x="24.5312%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.07%)</title><rect x="24.2812%" y="773" width="0.0725%" height="15" fill="rgb(249,184,29)" fg:x="1005" fg:w="3"/><text x="24.5312%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.07%)</title><rect x="24.2812%" y="757" width="0.0725%" height="15" fill="rgb(231,181,1)" fg:x="1005" fg:w="3"/><text x="24.5312%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="24.2812%" y="741" width="0.0725%" height="15" fill="rgb(224,94,2)" fg:x="1005" fg:w="3"/><text x="24.5312%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="24.2812%" y="725" width="0.0725%" height="15" fill="rgb(229,170,15)" fg:x="1005" fg:w="3"/><text x="24.5312%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="24.2812%" y="709" width="0.0725%" height="15" fill="rgb(240,127,35)" fg:x="1005" fg:w="3"/><text x="24.5312%" y="719.50"></text></g><g><title>__GI___libc_free (3 samples, 0.07%)</title><rect x="24.2812%" y="693" width="0.0725%" height="15" fill="rgb(248,196,34)" fg:x="1005" fg:w="3"/><text x="24.5312%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.05%)</title><rect x="24.3779%" y="677" width="0.0483%" height="15" fill="rgb(236,137,7)" fg:x="1009" fg:w="2"/><text x="24.6279%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.10%)</title><rect x="24.3537%" y="725" width="0.0966%" height="15" fill="rgb(235,127,16)" fg:x="1008" fg:w="4"/><text x="24.6037%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.10%)</title><rect x="24.3537%" y="709" width="0.0966%" height="15" fill="rgb(250,192,54)" fg:x="1008" fg:w="4"/><text x="24.6037%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.10%)</title><rect x="24.3537%" y="693" width="0.0966%" height="15" fill="rgb(218,98,20)" fg:x="1008" fg:w="4"/><text x="24.6037%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="24.4262%" y="677" width="0.0242%" height="15" fill="rgb(230,176,47)" fg:x="1011" fg:w="1"/><text x="24.6762%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="24.4262%" y="661" width="0.0242%" height="15" fill="rgb(244,2,33)" fg:x="1011" fg:w="1"/><text x="24.6762%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.12%)</title><rect x="24.3537%" y="741" width="0.1208%" height="15" fill="rgb(231,100,17)" fg:x="1008" fg:w="5"/><text x="24.6037%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="24.4504%" y="725" width="0.0242%" height="15" fill="rgb(245,23,12)" fg:x="1012" fg:w="1"/><text x="24.7004%" y="735.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="24.4504%" y="709" width="0.0242%" height="15" fill="rgb(249,55,22)" fg:x="1012" fg:w="1"/><text x="24.7004%" y="719.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="24.4504%" y="693" width="0.0242%" height="15" fill="rgb(207,134,9)" fg:x="1012" fg:w="1"/><text x="24.7004%" y="703.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="24.4504%" y="677" width="0.0242%" height="15" fill="rgb(218,134,0)" fg:x="1012" fg:w="1"/><text x="24.7004%" y="687.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="24.4745%" y="709" width="0.0242%" height="15" fill="rgb(213,212,33)" fg:x="1013" fg:w="1"/><text x="24.7245%" y="719.50"></text></g><g><title>&lt;&amp;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (1 samples, 0.02%)</title><rect x="24.4745%" y="693" width="0.0242%" height="15" fill="rgb(252,106,18)" fg:x="1013" fg:w="1"/><text x="24.7245%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="24.4987%" y="661" width="0.0242%" height="15" fill="rgb(208,126,42)" fg:x="1014" fg:w="1"/><text x="24.7487%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.19%)</title><rect x="24.3537%" y="789" width="0.1933%" height="15" fill="rgb(246,175,29)" fg:x="1008" fg:w="8"/><text x="24.6037%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.19%)</title><rect x="24.3537%" y="773" width="0.1933%" height="15" fill="rgb(215,13,50)" fg:x="1008" fg:w="8"/><text x="24.6037%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.19%)</title><rect x="24.3537%" y="757" width="0.1933%" height="15" fill="rgb(216,172,15)" fg:x="1008" fg:w="8"/><text x="24.6037%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.07%)</title><rect x="24.4745%" y="741" width="0.0725%" height="15" fill="rgb(212,103,13)" fg:x="1013" fg:w="3"/><text x="24.7245%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.07%)</title><rect x="24.4745%" y="725" width="0.0725%" height="15" fill="rgb(231,171,36)" fg:x="1013" fg:w="3"/><text x="24.7245%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="24.4987%" y="709" width="0.0483%" height="15" fill="rgb(250,123,20)" fg:x="1014" fg:w="2"/><text x="24.7487%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="24.4987%" y="693" width="0.0483%" height="15" fill="rgb(212,53,50)" fg:x="1014" fg:w="2"/><text x="24.7487%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.05%)</title><rect x="24.4987%" y="677" width="0.0483%" height="15" fill="rgb(243,54,12)" fg:x="1014" fg:w="2"/><text x="24.7487%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="24.5228%" y="661" width="0.0242%" height="15" fill="rgb(234,101,34)" fg:x="1015" fg:w="1"/><text x="24.7728%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="24.5228%" y="645" width="0.0242%" height="15" fill="rgb(254,67,22)" fg:x="1015" fg:w="1"/><text x="24.7728%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="24.5228%" y="629" width="0.0242%" height="15" fill="rgb(250,35,47)" fg:x="1015" fg:w="1"/><text x="24.7728%" y="639.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="24.5228%" y="613" width="0.0242%" height="15" fill="rgb(226,126,38)" fg:x="1015" fg:w="1"/><text x="24.7728%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.07%)</title><rect x="24.5712%" y="629" width="0.0725%" height="15" fill="rgb(216,138,53)" fg:x="1017" fg:w="3"/><text x="24.8212%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="24.5712%" y="613" width="0.0725%" height="15" fill="rgb(246,199,43)" fg:x="1017" fg:w="3"/><text x="24.8212%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="24.5712%" y="677" width="0.0966%" height="15" fill="rgb(232,125,11)" fg:x="1017" fg:w="4"/><text x="24.8212%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="24.5712%" y="661" width="0.0966%" height="15" fill="rgb(218,219,45)" fg:x="1017" fg:w="4"/><text x="24.8212%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="24.5712%" y="645" width="0.0966%" height="15" fill="rgb(216,102,54)" fg:x="1017" fg:w="4"/><text x="24.8212%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="24.6436%" y="629" width="0.0242%" height="15" fill="rgb(250,228,7)" fg:x="1020" fg:w="1"/><text x="24.8936%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (8 samples, 0.19%)</title><rect x="24.5712%" y="709" width="0.1933%" height="15" fill="rgb(226,125,25)" fg:x="1017" fg:w="8"/><text x="24.8212%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (8 samples, 0.19%)</title><rect x="24.5712%" y="693" width="0.1933%" height="15" fill="rgb(224,165,27)" fg:x="1017" fg:w="8"/><text x="24.8212%" y="703.50"></text></g><g><title>core::hash::Hasher::write_u8 (4 samples, 0.10%)</title><rect x="24.6678%" y="677" width="0.0966%" height="15" fill="rgb(233,86,3)" fg:x="1021" fg:w="4"/><text x="24.9178%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="24.6678%" y="661" width="0.0966%" height="15" fill="rgb(228,116,20)" fg:x="1021" fg:w="4"/><text x="24.9178%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="24.6678%" y="645" width="0.0966%" height="15" fill="rgb(209,192,17)" fg:x="1021" fg:w="4"/><text x="24.9178%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="24.6678%" y="629" width="0.0966%" height="15" fill="rgb(224,88,34)" fg:x="1021" fg:w="4"/><text x="24.9178%" y="639.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="24.7403%" y="613" width="0.0242%" height="15" fill="rgb(233,38,6)" fg:x="1024" fg:w="1"/><text x="24.9903%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="24.7644%" y="645" width="0.0725%" height="15" fill="rgb(212,59,30)" fg:x="1025" fg:w="3"/><text x="25.0144%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.10%)</title><rect x="24.7644%" y="709" width="0.0966%" height="15" fill="rgb(213,80,3)" fg:x="1025" fg:w="4"/><text x="25.0144%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.10%)</title><rect x="24.7644%" y="693" width="0.0966%" height="15" fill="rgb(251,178,7)" fg:x="1025" fg:w="4"/><text x="25.0144%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.10%)</title><rect x="24.7644%" y="677" width="0.0966%" height="15" fill="rgb(213,154,26)" fg:x="1025" fg:w="4"/><text x="25.0144%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.10%)</title><rect x="24.7644%" y="661" width="0.0966%" height="15" fill="rgb(238,165,49)" fg:x="1025" fg:w="4"/><text x="25.0144%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="24.8369%" y="645" width="0.0242%" height="15" fill="rgb(248,91,46)" fg:x="1028" fg:w="1"/><text x="25.0869%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.36%)</title><rect x="24.5470%" y="725" width="0.3624%" height="15" fill="rgb(244,21,52)" fg:x="1016" fg:w="15"/><text x="24.7970%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.05%)</title><rect x="24.8611%" y="709" width="0.0483%" height="15" fill="rgb(247,122,20)" fg:x="1029" fg:w="2"/><text x="25.1111%" y="719.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.05%)</title><rect x="24.8611%" y="693" width="0.0483%" height="15" fill="rgb(218,27,9)" fg:x="1029" fg:w="2"/><text x="25.1111%" y="703.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.05%)</title><rect x="24.8611%" y="677" width="0.0483%" height="15" fill="rgb(246,7,6)" fg:x="1029" fg:w="2"/><text x="25.1111%" y="687.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.05%)</title><rect x="24.8611%" y="661" width="0.0483%" height="15" fill="rgb(227,135,54)" fg:x="1029" fg:w="2"/><text x="25.1111%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="24.9577%" y="693" width="0.0242%" height="15" fill="rgb(247,14,11)" fg:x="1033" fg:w="1"/><text x="25.2077%" y="703.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.05%)</title><rect x="24.9819%" y="693" width="0.0483%" height="15" fill="rgb(206,149,34)" fg:x="1034" fg:w="2"/><text x="25.2319%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="24.9819%" y="677" width="0.0483%" height="15" fill="rgb(227,228,4)" fg:x="1034" fg:w="2"/><text x="25.2319%" y="687.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.05%)</title><rect x="24.9819%" y="661" width="0.0483%" height="15" fill="rgb(238,218,28)" fg:x="1034" fg:w="2"/><text x="25.2319%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="24.9819%" y="645" width="0.0483%" height="15" fill="rgb(252,86,40)" fg:x="1034" fg:w="2"/><text x="25.2319%" y="655.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="24.9819%" y="629" width="0.0483%" height="15" fill="rgb(251,225,11)" fg:x="1034" fg:w="2"/><text x="25.2319%" y="639.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="24.9819%" y="613" width="0.0483%" height="15" fill="rgb(206,46,49)" fg:x="1034" fg:w="2"/><text x="25.2319%" y="623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (22 samples, 0.53%)</title><rect x="24.5470%" y="789" width="0.5315%" height="15" fill="rgb(245,128,24)" fg:x="1016" fg:w="22"/><text x="24.7970%" y="799.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (22 samples, 0.53%)</title><rect x="24.5470%" y="773" width="0.5315%" height="15" fill="rgb(219,177,34)" fg:x="1016" fg:w="22"/><text x="24.7970%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (22 samples, 0.53%)</title><rect x="24.5470%" y="757" width="0.5315%" height="15" fill="rgb(218,60,48)" fg:x="1016" fg:w="22"/><text x="24.7970%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (22 samples, 0.53%)</title><rect x="24.5470%" y="741" width="0.5315%" height="15" fill="rgb(221,11,5)" fg:x="1016" fg:w="22"/><text x="24.7970%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 0.17%)</title><rect x="24.9094%" y="725" width="0.1691%" height="15" fill="rgb(220,148,13)" fg:x="1031" fg:w="7"/><text x="25.1594%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.17%)</title><rect x="24.9094%" y="709" width="0.1691%" height="15" fill="rgb(210,16,3)" fg:x="1031" fg:w="7"/><text x="25.1594%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="25.0302%" y="693" width="0.0483%" height="15" fill="rgb(236,80,2)" fg:x="1036" fg:w="2"/><text x="25.2802%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="25.0302%" y="677" width="0.0483%" height="15" fill="rgb(239,129,19)" fg:x="1036" fg:w="2"/><text x="25.2802%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.05%)</title><rect x="25.0302%" y="661" width="0.0483%" height="15" fill="rgb(220,106,35)" fg:x="1036" fg:w="2"/><text x="25.2802%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.05%)</title><rect x="25.0302%" y="645" width="0.0483%" height="15" fill="rgb(252,139,45)" fg:x="1036" fg:w="2"/><text x="25.2802%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.05%)</title><rect x="25.0302%" y="629" width="0.0483%" height="15" fill="rgb(229,8,36)" fg:x="1036" fg:w="2"/><text x="25.2802%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.05%)</title><rect x="25.0302%" y="613" width="0.0483%" height="15" fill="rgb(230,126,33)" fg:x="1036" fg:w="2"/><text x="25.2802%" y="623.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.05%)</title><rect x="25.0302%" y="597" width="0.0483%" height="15" fill="rgb(239,140,21)" fg:x="1036" fg:w="2"/><text x="25.2802%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="25.0785%" y="725" width="0.0242%" height="15" fill="rgb(254,104,9)" fg:x="1038" fg:w="1"/><text x="25.3285%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="25.0785%" y="709" width="0.0242%" height="15" fill="rgb(239,52,14)" fg:x="1038" fg:w="1"/><text x="25.3285%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="25.0785%" y="693" width="0.0242%" height="15" fill="rgb(208,227,44)" fg:x="1038" fg:w="1"/><text x="25.3285%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="25.0785%" y="677" width="0.0242%" height="15" fill="rgb(246,18,19)" fg:x="1038" fg:w="1"/><text x="25.3285%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="25.0785%" y="661" width="0.0242%" height="15" fill="rgb(235,228,25)" fg:x="1038" fg:w="1"/><text x="25.3285%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="25.0785%" y="645" width="0.0242%" height="15" fill="rgb(240,156,20)" fg:x="1038" fg:w="1"/><text x="25.3285%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="25.0785%" y="629" width="0.0242%" height="15" fill="rgb(224,8,20)" fg:x="1038" fg:w="1"/><text x="25.3285%" y="639.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.05%)</title><rect x="25.0785%" y="741" width="0.0483%" height="15" fill="rgb(214,12,52)" fg:x="1038" fg:w="2"/><text x="25.3285%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="25.1027%" y="725" width="0.0242%" height="15" fill="rgb(211,220,47)" fg:x="1039" fg:w="1"/><text x="25.3527%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="25.1027%" y="709" width="0.0242%" height="15" fill="rgb(250,173,5)" fg:x="1039" fg:w="1"/><text x="25.3527%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="25.1027%" y="693" width="0.0242%" height="15" fill="rgb(250,125,52)" fg:x="1039" fg:w="1"/><text x="25.3527%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="25.1268%" y="677" width="0.0242%" height="15" fill="rgb(209,133,18)" fg:x="1040" fg:w="1"/><text x="25.3768%" y="687.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="25.1268%" y="661" width="0.0242%" height="15" fill="rgb(216,173,22)" fg:x="1040" fg:w="1"/><text x="25.3768%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.02%)</title><rect x="25.1268%" y="645" width="0.0242%" height="15" fill="rgb(205,3,22)" fg:x="1040" fg:w="1"/><text x="25.3768%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.02%)</title><rect x="25.1268%" y="629" width="0.0242%" height="15" fill="rgb(248,22,20)" fg:x="1040" fg:w="1"/><text x="25.3768%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="25.1268%" y="613" width="0.0242%" height="15" fill="rgb(233,6,29)" fg:x="1040" fg:w="1"/><text x="25.3768%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="25.1268%" y="597" width="0.0242%" height="15" fill="rgb(240,22,54)" fg:x="1040" fg:w="1"/><text x="25.3768%" y="607.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="25.1268%" y="581" width="0.0242%" height="15" fill="rgb(231,133,32)" fg:x="1040" fg:w="1"/><text x="25.3768%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (3 samples, 0.07%)</title><rect x="25.1752%" y="629" width="0.0725%" height="15" fill="rgb(248,193,4)" fg:x="1042" fg:w="3"/><text x="25.4252%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.07%)</title><rect x="25.1752%" y="613" width="0.0725%" height="15" fill="rgb(211,178,46)" fg:x="1042" fg:w="3"/><text x="25.4252%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.12%)</title><rect x="27.2046%" y="549" width="0.1208%" height="15" fill="rgb(224,5,42)" fg:x="1126" fg:w="5"/><text x="27.4546%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (88 samples, 2.13%)</title><rect x="25.2718%" y="565" width="2.1261%" height="15" fill="rgb(239,176,25)" fg:x="1046" fg:w="88"/><text x="25.5218%" y="575.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="27.3254%" y="549" width="0.0725%" height="15" fill="rgb(245,187,50)" fg:x="1131" fg:w="3"/><text x="27.5754%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (94 samples, 2.27%)</title><rect x="25.1752%" y="645" width="2.2711%" height="15" fill="rgb(248,24,15)" fg:x="1042" fg:w="94"/><text x="25.4252%" y="655.50">&lt;..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (91 samples, 2.20%)</title><rect x="25.2476%" y="629" width="2.1986%" height="15" fill="rgb(205,166,13)" fg:x="1045" fg:w="91"/><text x="25.4976%" y="639.50">c..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (91 samples, 2.20%)</title><rect x="25.2476%" y="613" width="2.1986%" height="15" fill="rgb(208,114,23)" fg:x="1045" fg:w="91"/><text x="25.4976%" y="623.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (91 samples, 2.20%)</title><rect x="25.2476%" y="597" width="2.1986%" height="15" fill="rgb(239,127,18)" fg:x="1045" fg:w="91"/><text x="25.4976%" y="607.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (91 samples, 2.20%)</title><rect x="25.2476%" y="581" width="2.1986%" height="15" fill="rgb(219,154,28)" fg:x="1045" fg:w="91"/><text x="25.4976%" y="591.50">&lt;..</text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="27.3979%" y="565" width="0.0483%" height="15" fill="rgb(225,157,23)" fg:x="1134" fg:w="2"/><text x="27.6479%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="27.4221%" y="549" width="0.0242%" height="15" fill="rgb(219,8,6)" fg:x="1135" fg:w="1"/><text x="27.6721%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="27.5187%" y="597" width="0.0242%" height="15" fill="rgb(212,47,6)" fg:x="1139" fg:w="1"/><text x="27.7687%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="27.5187%" y="581" width="0.0242%" height="15" fill="rgb(224,190,4)" fg:x="1139" fg:w="1"/><text x="27.7687%" y="591.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (100 samples, 2.42%)</title><rect x="25.1510%" y="677" width="2.4160%" height="15" fill="rgb(239,183,29)" fg:x="1041" fg:w="100"/><text x="25.4010%" y="687.50">ha..</text></g><g><title>hashbrown::map::make_hash (100 samples, 2.42%)</title><rect x="25.1510%" y="661" width="2.4160%" height="15" fill="rgb(213,57,7)" fg:x="1041" fg:w="100"/><text x="25.4010%" y="671.50">ha..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.12%)</title><rect x="27.4462%" y="645" width="0.1208%" height="15" fill="rgb(216,148,1)" fg:x="1136" fg:w="5"/><text x="27.6962%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.12%)</title><rect x="27.4462%" y="629" width="0.1208%" height="15" fill="rgb(236,182,29)" fg:x="1136" fg:w="5"/><text x="27.6962%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.12%)</title><rect x="27.4462%" y="613" width="0.1208%" height="15" fill="rgb(244,120,48)" fg:x="1136" fg:w="5"/><text x="27.6962%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="27.5429%" y="597" width="0.0242%" height="15" fill="rgb(206,71,34)" fg:x="1140" fg:w="1"/><text x="27.7929%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="27.5429%" y="581" width="0.0242%" height="15" fill="rgb(242,32,6)" fg:x="1140" fg:w="1"/><text x="27.7929%" y="591.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="27.5912%" y="629" width="0.0242%" height="15" fill="rgb(241,35,3)" fg:x="1142" fg:w="1"/><text x="27.8412%" y="639.50"></text></g><g><title>clear_page_rep (7 samples, 0.17%)</title><rect x="27.6395%" y="485" width="0.1691%" height="15" fill="rgb(222,62,19)" fg:x="1144" fg:w="7"/><text x="27.8895%" y="495.50"></text></g><g><title>alloc_pages_vma (9 samples, 0.22%)</title><rect x="27.6395%" y="533" width="0.2174%" height="15" fill="rgb(223,110,41)" fg:x="1144" fg:w="9"/><text x="27.8895%" y="543.50"></text></g><g><title>__alloc_pages_nodemask (9 samples, 0.22%)</title><rect x="27.6395%" y="517" width="0.2174%" height="15" fill="rgb(208,224,4)" fg:x="1144" fg:w="9"/><text x="27.8895%" y="527.50"></text></g><g><title>get_page_from_freelist (9 samples, 0.22%)</title><rect x="27.6395%" y="501" width="0.2174%" height="15" fill="rgb(241,137,19)" fg:x="1144" fg:w="9"/><text x="27.8895%" y="511.50"></text></g><g><title>rmqueue (2 samples, 0.05%)</title><rect x="27.8086%" y="485" width="0.0483%" height="15" fill="rgb(244,24,17)" fg:x="1151" fg:w="2"/><text x="28.0586%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (13 samples, 0.31%)</title><rect x="27.5670%" y="677" width="0.3141%" height="15" fill="rgb(245,178,49)" fg:x="1141" fg:w="13"/><text x="27.8170%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (13 samples, 0.31%)</title><rect x="27.5670%" y="661" width="0.3141%" height="15" fill="rgb(219,160,38)" fg:x="1141" fg:w="13"/><text x="27.8170%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.31%)</title><rect x="27.5670%" y="645" width="0.3141%" height="15" fill="rgb(228,137,14)" fg:x="1141" fg:w="13"/><text x="27.8170%" y="655.50"></text></g><g><title>asm_exc_page_fault (11 samples, 0.27%)</title><rect x="27.6154%" y="629" width="0.2658%" height="15" fill="rgb(237,134,11)" fg:x="1143" fg:w="11"/><text x="27.8654%" y="639.50"></text></g><g><title>exc_page_fault (10 samples, 0.24%)</title><rect x="27.6395%" y="613" width="0.2416%" height="15" fill="rgb(211,126,44)" fg:x="1144" fg:w="10"/><text x="27.8895%" y="623.50"></text></g><g><title>do_user_addr_fault (10 samples, 0.24%)</title><rect x="27.6395%" y="597" width="0.2416%" height="15" fill="rgb(226,171,33)" fg:x="1144" fg:w="10"/><text x="27.8895%" y="607.50"></text></g><g><title>handle_mm_fault (10 samples, 0.24%)</title><rect x="27.6395%" y="581" width="0.2416%" height="15" fill="rgb(253,99,13)" fg:x="1144" fg:w="10"/><text x="27.8895%" y="591.50"></text></g><g><title>__handle_mm_fault (10 samples, 0.24%)</title><rect x="27.6395%" y="565" width="0.2416%" height="15" fill="rgb(244,48,7)" fg:x="1144" fg:w="10"/><text x="27.8895%" y="575.50"></text></g><g><title>do_anonymous_page (10 samples, 0.24%)</title><rect x="27.6395%" y="549" width="0.2416%" height="15" fill="rgb(244,217,54)" fg:x="1144" fg:w="10"/><text x="27.8895%" y="559.50"></text></g><g><title>mem_cgroup_charge (1 samples, 0.02%)</title><rect x="27.8570%" y="533" width="0.0242%" height="15" fill="rgb(224,15,18)" fg:x="1153" fg:w="1"/><text x="28.1070%" y="543.50"></text></g><g><title>mem_cgroup_charge_statistics.isra.0 (1 samples, 0.02%)</title><rect x="27.8570%" y="517" width="0.0242%" height="15" fill="rgb(244,99,12)" fg:x="1153" fg:w="1"/><text x="28.1070%" y="527.50"></text></g><g><title>__count_memcg_events (1 samples, 0.02%)</title><rect x="27.8570%" y="501" width="0.0242%" height="15" fill="rgb(233,226,8)" fg:x="1153" fg:w="1"/><text x="28.1070%" y="511.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.05%)</title><rect x="27.9053%" y="645" width="0.0483%" height="15" fill="rgb(229,211,3)" fg:x="1155" fg:w="2"/><text x="28.1553%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.05%)</title><rect x="27.9536%" y="645" width="0.0483%" height="15" fill="rgb(216,140,21)" fg:x="1157" fg:w="2"/><text x="28.2036%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.05%)</title><rect x="27.9536%" y="629" width="0.0483%" height="15" fill="rgb(234,122,30)" fg:x="1157" fg:w="2"/><text x="28.2036%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="27.9536%" y="613" width="0.0483%" height="15" fill="rgb(236,25,46)" fg:x="1157" fg:w="2"/><text x="28.2036%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (6 samples, 0.14%)</title><rect x="27.8811%" y="677" width="0.1450%" height="15" fill="rgb(217,52,54)" fg:x="1154" fg:w="6"/><text x="28.1311%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (6 samples, 0.14%)</title><rect x="27.8811%" y="661" width="0.1450%" height="15" fill="rgb(222,29,26)" fg:x="1154" fg:w="6"/><text x="28.1311%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="28.0019%" y="645" width="0.0242%" height="15" fill="rgb(216,177,29)" fg:x="1159" fg:w="1"/><text x="28.2519%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="28.0019%" y="629" width="0.0242%" height="15" fill="rgb(247,136,51)" fg:x="1159" fg:w="1"/><text x="28.2519%" y="639.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (123 samples, 2.97%)</title><rect x="25.0785%" y="789" width="2.9717%" height="15" fill="rgb(231,47,47)" fg:x="1038" fg:w="123"/><text x="25.3285%" y="799.50">std..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (123 samples, 2.97%)</title><rect x="25.0785%" y="773" width="2.9717%" height="15" fill="rgb(211,192,36)" fg:x="1038" fg:w="123"/><text x="25.3285%" y="783.50">has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (123 samples, 2.97%)</title><rect x="25.0785%" y="757" width="2.9717%" height="15" fill="rgb(229,156,32)" fg:x="1038" fg:w="123"/><text x="25.3285%" y="767.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (121 samples, 2.92%)</title><rect x="25.1268%" y="741" width="2.9234%" height="15" fill="rgb(248,213,20)" fg:x="1040" fg:w="121"/><text x="25.3768%" y="751.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (121 samples, 2.92%)</title><rect x="25.1268%" y="725" width="2.9234%" height="15" fill="rgb(217,64,7)" fg:x="1040" fg:w="121"/><text x="25.3768%" y="735.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (121 samples, 2.92%)</title><rect x="25.1268%" y="709" width="2.9234%" height="15" fill="rgb(232,142,8)" fg:x="1040" fg:w="121"/><text x="25.3768%" y="719.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (121 samples, 2.92%)</title><rect x="25.1268%" y="693" width="2.9234%" height="15" fill="rgb(224,92,44)" fg:x="1040" fg:w="121"/><text x="25.3768%" y="703.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.02%)</title><rect x="28.0261%" y="677" width="0.0242%" height="15" fill="rgb(214,169,17)" fg:x="1160" fg:w="1"/><text x="28.2761%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.02%)</title><rect x="28.0261%" y="661" width="0.0242%" height="15" fill="rgb(210,59,37)" fg:x="1160" fg:w="1"/><text x="28.2761%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.02%)</title><rect x="28.0261%" y="645" width="0.0242%" height="15" fill="rgb(214,116,48)" fg:x="1160" fg:w="1"/><text x="28.2761%" y="655.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.02%)</title><rect x="28.0261%" y="629" width="0.0242%" height="15" fill="rgb(244,191,6)" fg:x="1160" fg:w="1"/><text x="28.2761%" y="639.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="28.0261%" y="613" width="0.0242%" height="15" fill="rgb(241,50,52)" fg:x="1160" fg:w="1"/><text x="28.2761%" y="623.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="28.0261%" y="597" width="0.0242%" height="15" fill="rgb(236,75,39)" fg:x="1160" fg:w="1"/><text x="28.2761%" y="607.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="28.0261%" y="581" width="0.0242%" height="15" fill="rgb(236,99,0)" fg:x="1160" fg:w="1"/><text x="28.2761%" y="591.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="28.0261%" y="565" width="0.0242%" height="15" fill="rgb(207,202,15)" fg:x="1160" fg:w="1"/><text x="28.2761%" y="575.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="28.0261%" y="549" width="0.0242%" height="15" fill="rgb(233,207,14)" fg:x="1160" fg:w="1"/><text x="28.2761%" y="559.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="28.0261%" y="533" width="0.0242%" height="15" fill="rgb(226,27,51)" fg:x="1160" fg:w="1"/><text x="28.2761%" y="543.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="28.0261%" y="517" width="0.0242%" height="15" fill="rgb(206,104,42)" fg:x="1160" fg:w="1"/><text x="28.2761%" y="527.50"></text></g><g><title>kthread_blkcg (1 samples, 0.02%)</title><rect x="28.0261%" y="501" width="0.0242%" height="15" fill="rgb(212,225,4)" fg:x="1160" fg:w="1"/><text x="28.2761%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.14%)</title><rect x="28.1469%" y="645" width="0.1450%" height="15" fill="rgb(233,96,42)" fg:x="1165" fg:w="6"/><text x="28.3969%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.14%)</title><rect x="28.1469%" y="629" width="0.1450%" height="15" fill="rgb(229,21,32)" fg:x="1165" fg:w="6"/><text x="28.3969%" y="639.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.14%)</title><rect x="28.1469%" y="613" width="0.1450%" height="15" fill="rgb(226,216,24)" fg:x="1165" fg:w="6"/><text x="28.3969%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.14%)</title><rect x="28.1469%" y="597" width="0.1450%" height="15" fill="rgb(221,163,17)" fg:x="1165" fg:w="6"/><text x="28.3969%" y="607.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.14%)</title><rect x="28.1469%" y="581" width="0.1450%" height="15" fill="rgb(216,216,42)" fg:x="1165" fg:w="6"/><text x="28.3969%" y="591.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.14%)</title><rect x="28.1469%" y="565" width="0.1450%" height="15" fill="rgb(240,118,7)" fg:x="1165" fg:w="6"/><text x="28.3969%" y="575.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.12%)</title><rect x="28.1711%" y="549" width="0.1208%" height="15" fill="rgb(221,67,37)" fg:x="1166" fg:w="5"/><text x="28.4211%" y="559.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="28.2919%" y="613" width="0.0483%" height="15" fill="rgb(241,32,44)" fg:x="1171" fg:w="2"/><text x="28.5419%" y="623.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.05%)</title><rect x="28.2919%" y="597" width="0.0483%" height="15" fill="rgb(235,204,43)" fg:x="1171" fg:w="2"/><text x="28.5419%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.07%)</title><rect x="28.2919%" y="645" width="0.0725%" height="15" fill="rgb(213,116,10)" fg:x="1171" fg:w="3"/><text x="28.5419%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="28.2919%" y="629" width="0.0725%" height="15" fill="rgb(239,15,48)" fg:x="1171" fg:w="3"/><text x="28.5419%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1 samples, 0.02%)</title><rect x="28.3402%" y="613" width="0.0242%" height="15" fill="rgb(207,123,36)" fg:x="1173" fg:w="1"/><text x="28.5902%" y="623.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="28.3402%" y="597" width="0.0242%" height="15" fill="rgb(209,103,30)" fg:x="1173" fg:w="1"/><text x="28.5902%" y="607.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_lowercase (1 samples, 0.02%)</title><rect x="28.3402%" y="581" width="0.0242%" height="15" fill="rgb(238,100,19)" fg:x="1173" fg:w="1"/><text x="28.5902%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="29.1133%" y="549" width="0.0242%" height="15" fill="rgb(244,30,14)" fg:x="1205" fg:w="1"/><text x="29.3633%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.02%)</title><rect x="29.1133%" y="533" width="0.0242%" height="15" fill="rgb(249,174,6)" fg:x="1205" fg:w="1"/><text x="29.3633%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.02%)</title><rect x="29.1133%" y="517" width="0.0242%" height="15" fill="rgb(235,213,41)" fg:x="1205" fg:w="1"/><text x="29.3633%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="29.1133%" y="501" width="0.0242%" height="15" fill="rgb(213,118,6)" fg:x="1205" fg:w="1"/><text x="29.3633%" y="511.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (1 samples, 0.02%)</title><rect x="29.1375%" y="549" width="0.0242%" height="15" fill="rgb(235,44,51)" fg:x="1206" fg:w="1"/><text x="29.3875%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.10%)</title><rect x="29.1616%" y="549" width="0.0966%" height="15" fill="rgb(217,9,53)" fg:x="1207" fg:w="4"/><text x="29.4116%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.10%)</title><rect x="29.1616%" y="533" width="0.0966%" height="15" fill="rgb(237,172,34)" fg:x="1207" fg:w="4"/><text x="29.4116%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="29.2583%" y="549" width="0.0242%" height="15" fill="rgb(206,206,11)" fg:x="1211" fg:w="1"/><text x="29.5083%" y="559.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="29.2583%" y="533" width="0.0242%" height="15" fill="rgb(214,149,29)" fg:x="1211" fg:w="1"/><text x="29.5083%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (41 samples, 0.99%)</title><rect x="28.3643%" y="645" width="0.9906%" height="15" fill="rgb(208,123,3)" fg:x="1174" fg:w="41"/><text x="28.6143%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (33 samples, 0.80%)</title><rect x="28.5576%" y="629" width="0.7973%" height="15" fill="rgb(229,126,4)" fg:x="1182" fg:w="33"/><text x="28.8076%" y="639.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.80%)</title><rect x="28.5576%" y="613" width="0.7973%" height="15" fill="rgb(222,92,36)" fg:x="1182" fg:w="33"/><text x="28.8076%" y="623.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (33 samples, 0.80%)</title><rect x="28.5576%" y="597" width="0.7973%" height="15" fill="rgb(216,39,41)" fg:x="1182" fg:w="33"/><text x="28.8076%" y="607.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (33 samples, 0.80%)</title><rect x="28.5576%" y="581" width="0.7973%" height="15" fill="rgb(253,127,28)" fg:x="1182" fg:w="33"/><text x="28.8076%" y="591.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (28 samples, 0.68%)</title><rect x="28.6784%" y="565" width="0.6765%" height="15" fill="rgb(249,152,51)" fg:x="1187" fg:w="28"/><text x="28.9284%" y="575.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (3 samples, 0.07%)</title><rect x="29.2824%" y="549" width="0.0725%" height="15" fill="rgb(209,123,42)" fg:x="1212" fg:w="3"/><text x="29.5324%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="29.4516%" y="565" width="0.0483%" height="15" fill="rgb(241,118,22)" fg:x="1219" fg:w="2"/><text x="29.7016%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="29.4516%" y="549" width="0.0483%" height="15" fill="rgb(208,25,7)" fg:x="1219" fg:w="2"/><text x="29.7016%" y="559.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="29.4516%" y="533" width="0.0483%" height="15" fill="rgb(243,144,39)" fg:x="1219" fg:w="2"/><text x="29.7016%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.05%)</title><rect x="29.4999%" y="565" width="0.0483%" height="15" fill="rgb(250,50,5)" fg:x="1221" fg:w="2"/><text x="29.7499%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.05%)</title><rect x="29.4999%" y="549" width="0.0483%" height="15" fill="rgb(207,67,11)" fg:x="1221" fg:w="2"/><text x="29.7499%" y="559.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (3 samples, 0.07%)</title><rect x="29.5482%" y="565" width="0.0725%" height="15" fill="rgb(245,204,40)" fg:x="1223" fg:w="3"/><text x="29.7982%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.07%)</title><rect x="29.5482%" y="549" width="0.0725%" height="15" fill="rgb(238,228,24)" fg:x="1223" fg:w="3"/><text x="29.7982%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="29.5482%" y="533" width="0.0725%" height="15" fill="rgb(217,116,22)" fg:x="1223" fg:w="3"/><text x="29.7982%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (65 samples, 1.57%)</title><rect x="28.1469%" y="693" width="1.5704%" height="15" fill="rgb(234,98,12)" fg:x="1165" fg:w="65"/><text x="28.3969%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (65 samples, 1.57%)</title><rect x="28.1469%" y="677" width="1.5704%" height="15" fill="rgb(242,170,50)" fg:x="1165" fg:w="65"/><text x="28.3969%" y="687.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (65 samples, 1.57%)</title><rect x="28.1469%" y="661" width="1.5704%" height="15" fill="rgb(235,7,5)" fg:x="1165" fg:w="65"/><text x="28.3969%" y="671.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (15 samples, 0.36%)</title><rect x="29.3549%" y="645" width="0.3624%" height="15" fill="rgb(241,114,28)" fg:x="1215" fg:w="15"/><text x="29.6049%" y="655.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (15 samples, 0.36%)</title><rect x="29.3549%" y="629" width="0.3624%" height="15" fill="rgb(246,112,42)" fg:x="1215" fg:w="15"/><text x="29.6049%" y="639.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (15 samples, 0.36%)</title><rect x="29.3549%" y="613" width="0.3624%" height="15" fill="rgb(248,228,14)" fg:x="1215" fg:w="15"/><text x="29.6049%" y="623.50"></text></g><g><title>core::str::pattern::StrSearcher::new (15 samples, 0.36%)</title><rect x="29.3549%" y="597" width="0.3624%" height="15" fill="rgb(208,133,18)" fg:x="1215" fg:w="15"/><text x="29.6049%" y="607.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (12 samples, 0.29%)</title><rect x="29.4274%" y="581" width="0.2899%" height="15" fill="rgb(207,35,49)" fg:x="1218" fg:w="12"/><text x="29.6774%" y="591.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (4 samples, 0.10%)</title><rect x="29.6207%" y="565" width="0.0966%" height="15" fill="rgb(205,68,36)" fg:x="1226" fg:w="4"/><text x="29.8707%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="29.6932%" y="549" width="0.0242%" height="15" fill="rgb(245,62,40)" fg:x="1229" fg:w="1"/><text x="29.9432%" y="559.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="29.6932%" y="533" width="0.0242%" height="15" fill="rgb(228,27,24)" fg:x="1229" fg:w="1"/><text x="29.9432%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 1.62%)</title><rect x="28.1469%" y="773" width="1.6187%" height="15" fill="rgb(253,19,12)" fg:x="1165" fg:w="67"/><text x="28.3969%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (67 samples, 1.62%)</title><rect x="28.1469%" y="757" width="1.6187%" height="15" fill="rgb(232,28,20)" fg:x="1165" fg:w="67"/><text x="28.3969%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (67 samples, 1.62%)</title><rect x="28.1469%" y="741" width="1.6187%" height="15" fill="rgb(218,35,51)" fg:x="1165" fg:w="67"/><text x="28.3969%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (67 samples, 1.62%)</title><rect x="28.1469%" y="725" width="1.6187%" height="15" fill="rgb(212,90,40)" fg:x="1165" fg:w="67"/><text x="28.3969%" y="735.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (67 samples, 1.62%)</title><rect x="28.1469%" y="709" width="1.6187%" height="15" fill="rgb(220,172,12)" fg:x="1165" fg:w="67"/><text x="28.3969%" y="719.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.05%)</title><rect x="29.7173%" y="693" width="0.0483%" height="15" fill="rgb(226,159,20)" fg:x="1230" fg:w="2"/><text x="29.9673%" y="703.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.02%)</title><rect x="29.8140%" y="757" width="0.0242%" height="15" fill="rgb(234,205,16)" fg:x="1234" fg:w="1"/><text x="30.0640%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.02%)</title><rect x="29.8140%" y="741" width="0.0242%" height="15" fill="rgb(207,9,39)" fg:x="1234" fg:w="1"/><text x="30.0640%" y="751.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.02%)</title><rect x="29.8140%" y="725" width="0.0242%" height="15" fill="rgb(249,143,15)" fg:x="1234" fg:w="1"/><text x="30.0640%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="29.8140%" y="709" width="0.0242%" height="15" fill="rgb(253,133,29)" fg:x="1234" fg:w="1"/><text x="30.0640%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="29.8140%" y="693" width="0.0242%" height="15" fill="rgb(221,187,0)" fg:x="1234" fg:w="1"/><text x="30.0640%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="29.8140%" y="677" width="0.0242%" height="15" fill="rgb(205,204,26)" fg:x="1234" fg:w="1"/><text x="30.0640%" y="687.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.05%)</title><rect x="29.9348%" y="725" width="0.0483%" height="15" fill="rgb(224,68,54)" fg:x="1239" fg:w="2"/><text x="30.1848%" y="735.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="29.9589%" y="709" width="0.0242%" height="15" fill="rgb(209,67,4)" fg:x="1240" fg:w="1"/><text x="30.2089%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.14%)</title><rect x="30.2489%" y="469" width="0.1450%" height="15" fill="rgb(228,229,18)" fg:x="1252" fg:w="6"/><text x="30.4989%" y="479.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="30.3938%" y="469" width="0.0242%" height="15" fill="rgb(231,89,13)" fg:x="1258" fg:w="1"/><text x="30.6438%" y="479.50"></text></g><g><title>__GI___libc_realloc (17 samples, 0.41%)</title><rect x="30.2005%" y="501" width="0.4107%" height="15" fill="rgb(210,182,18)" fg:x="1250" fg:w="17"/><text x="30.4505%" y="511.50"></text></g><g><title>_int_realloc (15 samples, 0.36%)</title><rect x="30.2489%" y="485" width="0.3624%" height="15" fill="rgb(240,105,2)" fg:x="1252" fg:w="15"/><text x="30.4989%" y="495.50"></text></g><g><title>_int_malloc (8 samples, 0.19%)</title><rect x="30.4180%" y="469" width="0.1933%" height="15" fill="rgb(207,170,50)" fg:x="1259" fg:w="8"/><text x="30.6680%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (19 samples, 0.46%)</title><rect x="30.2005%" y="549" width="0.4590%" height="15" fill="rgb(232,133,24)" fg:x="1250" fg:w="19"/><text x="30.4505%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (19 samples, 0.46%)</title><rect x="30.2005%" y="533" width="0.4590%" height="15" fill="rgb(235,166,27)" fg:x="1250" fg:w="19"/><text x="30.4505%" y="543.50"></text></g><g><title>alloc::alloc::realloc (19 samples, 0.46%)</title><rect x="30.2005%" y="517" width="0.4590%" height="15" fill="rgb(209,19,13)" fg:x="1250" fg:w="19"/><text x="30.4505%" y="527.50"></text></g><g><title>__rdl_realloc (2 samples, 0.05%)</title><rect x="30.6113%" y="501" width="0.0483%" height="15" fill="rgb(226,79,39)" fg:x="1267" fg:w="2"/><text x="30.8613%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.02%)</title><rect x="30.6354%" y="485" width="0.0242%" height="15" fill="rgb(222,163,10)" fg:x="1268" fg:w="1"/><text x="30.8854%" y="495.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.17%)</title><rect x="30.6596%" y="549" width="0.1691%" height="15" fill="rgb(214,44,19)" fg:x="1269" fg:w="7"/><text x="30.9096%" y="559.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="30.8045%" y="533" width="0.0242%" height="15" fill="rgb(210,217,13)" fg:x="1275" fg:w="1"/><text x="31.0545%" y="543.50"></text></g><g><title>__rdl_alloc (2 samples, 0.05%)</title><rect x="30.8287%" y="549" width="0.0483%" height="15" fill="rgb(237,61,54)" fg:x="1276" fg:w="2"/><text x="31.0787%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.05%)</title><rect x="30.8287%" y="533" width="0.0483%" height="15" fill="rgb(226,184,24)" fg:x="1276" fg:w="2"/><text x="31.0787%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.77%)</title><rect x="30.1522%" y="565" width="0.7731%" height="15" fill="rgb(223,226,4)" fg:x="1248" fg:w="32"/><text x="30.4022%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.05%)</title><rect x="30.8770%" y="549" width="0.0483%" height="15" fill="rgb(210,26,41)" fg:x="1278" fg:w="2"/><text x="31.1270%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (37 samples, 0.89%)</title><rect x="30.0556%" y="629" width="0.8939%" height="15" fill="rgb(220,221,6)" fg:x="1244" fg:w="37"/><text x="30.3056%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (37 samples, 0.89%)</title><rect x="30.0556%" y="613" width="0.8939%" height="15" fill="rgb(225,89,49)" fg:x="1244" fg:w="37"/><text x="30.3056%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (35 samples, 0.85%)</title><rect x="30.1039%" y="597" width="0.8456%" height="15" fill="rgb(218,70,45)" fg:x="1246" fg:w="35"/><text x="30.3539%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (33 samples, 0.80%)</title><rect x="30.1522%" y="581" width="0.7973%" height="15" fill="rgb(238,166,21)" fg:x="1248" fg:w="33"/><text x="30.4022%" y="591.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="30.9253%" y="565" width="0.0242%" height="15" fill="rgb(224,141,44)" fg:x="1280" fg:w="1"/><text x="31.1753%" y="575.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="30.9253%" y="549" width="0.0242%" height="15" fill="rgb(230,12,49)" fg:x="1280" fg:w="1"/><text x="31.1753%" y="559.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="30.9253%" y="533" width="0.0242%" height="15" fill="rgb(212,174,12)" fg:x="1280" fg:w="1"/><text x="31.1753%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="30.9495%" y="629" width="0.0242%" height="15" fill="rgb(246,67,9)" fg:x="1281" fg:w="1"/><text x="31.1995%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="30.9495%" y="613" width="0.0242%" height="15" fill="rgb(239,35,23)" fg:x="1281" fg:w="1"/><text x="31.1995%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (42 samples, 1.01%)</title><rect x="29.9831%" y="725" width="1.0147%" height="15" fill="rgb(211,167,0)" fg:x="1241" fg:w="42"/><text x="30.2331%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (40 samples, 0.97%)</title><rect x="30.0314%" y="709" width="0.9664%" height="15" fill="rgb(225,119,45)" fg:x="1243" fg:w="40"/><text x="30.2814%" y="719.50"></text></g><g><title>alloc::string::String::push_str (40 samples, 0.97%)</title><rect x="30.0314%" y="693" width="0.9664%" height="15" fill="rgb(210,162,6)" fg:x="1243" fg:w="40"/><text x="30.2814%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (40 samples, 0.97%)</title><rect x="30.0314%" y="677" width="0.9664%" height="15" fill="rgb(208,118,35)" fg:x="1243" fg:w="40"/><text x="30.2814%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (40 samples, 0.97%)</title><rect x="30.0314%" y="661" width="0.9664%" height="15" fill="rgb(239,4,53)" fg:x="1243" fg:w="40"/><text x="30.2814%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (40 samples, 0.97%)</title><rect x="30.0314%" y="645" width="0.9664%" height="15" fill="rgb(213,130,21)" fg:x="1243" fg:w="40"/><text x="30.2814%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="30.9737%" y="629" width="0.0242%" height="15" fill="rgb(235,148,0)" fg:x="1282" fg:w="1"/><text x="31.2237%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="30.9737%" y="613" width="0.0242%" height="15" fill="rgb(244,224,18)" fg:x="1282" fg:w="1"/><text x="31.2237%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="30.9978%" y="725" width="0.0242%" height="15" fill="rgb(211,214,4)" fg:x="1283" fg:w="1"/><text x="31.2478%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="30.9978%" y="709" width="0.0242%" height="15" fill="rgb(206,119,25)" fg:x="1283" fg:w="1"/><text x="31.2478%" y="719.50"></text></g><g><title>alloc::fmt::format (58 samples, 1.40%)</title><rect x="29.7656%" y="773" width="1.4013%" height="15" fill="rgb(243,93,47)" fg:x="1232" fg:w="58"/><text x="30.0156%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (55 samples, 1.33%)</title><rect x="29.8381%" y="757" width="1.3288%" height="15" fill="rgb(224,194,6)" fg:x="1235" fg:w="55"/><text x="30.0881%" y="767.50"></text></g><g><title>core::fmt::write (53 samples, 1.28%)</title><rect x="29.8864%" y="741" width="1.2805%" height="15" fill="rgb(243,229,6)" fg:x="1237" fg:w="53"/><text x="30.1364%" y="751.50"></text></g><g><title>core::fmt::Formatter::pad (6 samples, 0.14%)</title><rect x="31.0220%" y="725" width="0.1450%" height="15" fill="rgb(207,23,50)" fg:x="1284" fg:w="6"/><text x="31.2720%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="31.1669%" y="773" width="0.0242%" height="15" fill="rgb(253,192,32)" fg:x="1290" fg:w="1"/><text x="31.4169%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="31.1669%" y="757" width="0.0242%" height="15" fill="rgb(213,21,6)" fg:x="1290" fg:w="1"/><text x="31.4169%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="31.1669%" y="741" width="0.0242%" height="15" fill="rgb(243,151,13)" fg:x="1290" fg:w="1"/><text x="31.4169%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="31.1669%" y="725" width="0.0242%" height="15" fill="rgb(233,165,41)" fg:x="1290" fg:w="1"/><text x="31.4169%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="31.1669%" y="709" width="0.0242%" height="15" fill="rgb(246,176,45)" fg:x="1290" fg:w="1"/><text x="31.4169%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="31.1669%" y="693" width="0.0242%" height="15" fill="rgb(217,170,52)" fg:x="1290" fg:w="1"/><text x="31.4169%" y="703.50"></text></g><g><title>core::fmt::Arguments::new_v1 (3 samples, 0.07%)</title><rect x="31.1911%" y="773" width="0.0725%" height="15" fill="rgb(214,203,54)" fg:x="1291" fg:w="3"/><text x="31.4411%" y="783.50"></text></g><g><title>__GI___libc_free (4 samples, 0.10%)</title><rect x="31.2636%" y="677" width="0.0966%" height="15" fill="rgb(248,215,49)" fg:x="1294" fg:w="4"/><text x="31.5136%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.22%)</title><rect x="31.2636%" y="709" width="0.2174%" height="15" fill="rgb(208,46,10)" fg:x="1294" fg:w="9"/><text x="31.5136%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.22%)</title><rect x="31.2636%" y="693" width="0.2174%" height="15" fill="rgb(254,5,31)" fg:x="1294" fg:w="9"/><text x="31.5136%" y="703.50"></text></g><g><title>_int_free (5 samples, 0.12%)</title><rect x="31.3602%" y="677" width="0.1208%" height="15" fill="rgb(222,104,33)" fg:x="1298" fg:w="5"/><text x="31.6102%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (10 samples, 0.24%)</title><rect x="31.2636%" y="773" width="0.2416%" height="15" fill="rgb(248,49,16)" fg:x="1294" fg:w="10"/><text x="31.5136%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (10 samples, 0.24%)</title><rect x="31.2636%" y="757" width="0.2416%" height="15" fill="rgb(232,198,41)" fg:x="1294" fg:w="10"/><text x="31.5136%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10 samples, 0.24%)</title><rect x="31.2636%" y="741" width="0.2416%" height="15" fill="rgb(214,125,3)" fg:x="1294" fg:w="10"/><text x="31.5136%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.24%)</title><rect x="31.2636%" y="725" width="0.2416%" height="15" fill="rgb(229,220,28)" fg:x="1294" fg:w="10"/><text x="31.5136%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="31.4810%" y="709" width="0.0242%" height="15" fill="rgb(222,64,37)" fg:x="1303" fg:w="1"/><text x="31.7310%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="31.5535%" y="661" width="0.0242%" height="15" fill="rgb(249,184,13)" fg:x="1306" fg:w="1"/><text x="31.8035%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="31.5535%" y="645" width="0.0242%" height="15" fill="rgb(252,176,6)" fg:x="1306" fg:w="1"/><text x="31.8035%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.10%)</title><rect x="31.5052%" y="709" width="0.0966%" height="15" fill="rgb(228,153,7)" fg:x="1304" fg:w="4"/><text x="31.7552%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.10%)</title><rect x="31.5052%" y="693" width="0.0966%" height="15" fill="rgb(242,193,5)" fg:x="1304" fg:w="4"/><text x="31.7552%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.10%)</title><rect x="31.5052%" y="677" width="0.0966%" height="15" fill="rgb(232,140,9)" fg:x="1304" fg:w="4"/><text x="31.7552%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="31.5777%" y="661" width="0.0242%" height="15" fill="rgb(213,222,16)" fg:x="1307" fg:w="1"/><text x="31.8277%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.12%)</title><rect x="31.5052%" y="725" width="0.1208%" height="15" fill="rgb(222,75,50)" fg:x="1304" fg:w="5"/><text x="31.7552%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="31.6018%" y="709" width="0.0242%" height="15" fill="rgb(205,180,2)" fg:x="1308" fg:w="1"/><text x="31.8518%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="31.6018%" y="693" width="0.0242%" height="15" fill="rgb(216,34,7)" fg:x="1308" fg:w="1"/><text x="31.8518%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="31.6018%" y="677" width="0.0242%" height="15" fill="rgb(253,16,32)" fg:x="1308" fg:w="1"/><text x="31.8518%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="31.6018%" y="661" width="0.0242%" height="15" fill="rgb(208,97,28)" fg:x="1308" fg:w="1"/><text x="31.8518%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="31.6260%" y="693" width="0.0242%" height="15" fill="rgb(225,92,11)" fg:x="1309" fg:w="1"/><text x="31.8760%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="31.6260%" y="677" width="0.0242%" height="15" fill="rgb(243,38,12)" fg:x="1309" fg:w="1"/><text x="31.8760%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.19%)</title><rect x="31.5052%" y="773" width="0.1933%" height="15" fill="rgb(208,139,16)" fg:x="1304" fg:w="8"/><text x="31.7552%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.19%)</title><rect x="31.5052%" y="757" width="0.1933%" height="15" fill="rgb(227,24,9)" fg:x="1304" fg:w="8"/><text x="31.7552%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.19%)</title><rect x="31.5052%" y="741" width="0.1933%" height="15" fill="rgb(206,62,11)" fg:x="1304" fg:w="8"/><text x="31.7552%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.07%)</title><rect x="31.6260%" y="725" width="0.0725%" height="15" fill="rgb(228,134,27)" fg:x="1309" fg:w="3"/><text x="31.8760%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.07%)</title><rect x="31.6260%" y="709" width="0.0725%" height="15" fill="rgb(205,55,33)" fg:x="1309" fg:w="3"/><text x="31.8760%" y="719.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.05%)</title><rect x="31.6502%" y="693" width="0.0483%" height="15" fill="rgb(243,75,43)" fg:x="1310" fg:w="2"/><text x="31.9002%" y="703.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.05%)</title><rect x="31.6502%" y="677" width="0.0483%" height="15" fill="rgb(223,27,42)" fg:x="1310" fg:w="2"/><text x="31.9002%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="31.6502%" y="661" width="0.0483%" height="15" fill="rgb(232,189,33)" fg:x="1310" fg:w="2"/><text x="31.9002%" y="671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="31.6502%" y="645" width="0.0483%" height="15" fill="rgb(210,9,39)" fg:x="1310" fg:w="2"/><text x="31.9002%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="31.6502%" y="629" width="0.0483%" height="15" fill="rgb(242,85,26)" fg:x="1310" fg:w="2"/><text x="31.9002%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="31.7468%" y="677" width="0.0242%" height="15" fill="rgb(248,44,4)" fg:x="1314" fg:w="1"/><text x="31.9968%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="31.7468%" y="661" width="0.0242%" height="15" fill="rgb(250,96,46)" fg:x="1314" fg:w="1"/><text x="31.9968%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="31.7468%" y="645" width="0.0242%" height="15" fill="rgb(229,116,26)" fg:x="1314" fg:w="1"/><text x="31.9968%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="31.9159%" y="597" width="0.0725%" height="15" fill="rgb(246,94,34)" fg:x="1321" fg:w="3"/><text x="32.1659%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.17%)</title><rect x="31.8676%" y="613" width="0.1691%" height="15" fill="rgb(251,73,21)" fg:x="1319" fg:w="7"/><text x="32.1176%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="31.9884%" y="597" width="0.0483%" height="15" fill="rgb(254,121,25)" fg:x="1324" fg:w="2"/><text x="32.2384%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (16 samples, 0.39%)</title><rect x="31.7468%" y="693" width="0.3866%" height="15" fill="rgb(215,161,49)" fg:x="1314" fg:w="16"/><text x="31.9968%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (15 samples, 0.36%)</title><rect x="31.7710%" y="677" width="0.3624%" height="15" fill="rgb(221,43,13)" fg:x="1315" fg:w="15"/><text x="32.0210%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.36%)</title><rect x="31.7710%" y="661" width="0.3624%" height="15" fill="rgb(249,5,37)" fg:x="1315" fg:w="15"/><text x="32.0210%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.36%)</title><rect x="31.7710%" y="645" width="0.3624%" height="15" fill="rgb(226,25,44)" fg:x="1315" fg:w="15"/><text x="32.0210%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.36%)</title><rect x="31.7710%" y="629" width="0.3624%" height="15" fill="rgb(238,189,16)" fg:x="1315" fg:w="15"/><text x="32.0210%" y="639.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.10%)</title><rect x="32.0367%" y="613" width="0.0966%" height="15" fill="rgb(251,186,8)" fg:x="1326" fg:w="4"/><text x="32.2867%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="32.1092%" y="597" width="0.0242%" height="15" fill="rgb(254,34,31)" fg:x="1329" fg:w="1"/><text x="32.3592%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="32.2300%" y="629" width="0.0483%" height="15" fill="rgb(225,215,27)" fg:x="1334" fg:w="2"/><text x="32.4800%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.17%)</title><rect x="32.1334%" y="693" width="0.1691%" height="15" fill="rgb(221,192,48)" fg:x="1330" fg:w="7"/><text x="32.3834%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.17%)</title><rect x="32.1334%" y="677" width="0.1691%" height="15" fill="rgb(219,137,20)" fg:x="1330" fg:w="7"/><text x="32.3834%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.17%)</title><rect x="32.1334%" y="661" width="0.1691%" height="15" fill="rgb(219,84,11)" fg:x="1330" fg:w="7"/><text x="32.3834%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.07%)</title><rect x="32.2300%" y="645" width="0.0725%" height="15" fill="rgb(224,10,23)" fg:x="1334" fg:w="3"/><text x="32.4800%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="32.2783%" y="629" width="0.0242%" height="15" fill="rgb(248,22,39)" fg:x="1336" fg:w="1"/><text x="32.5283%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (28 samples, 0.68%)</title><rect x="31.7226%" y="709" width="0.6765%" height="15" fill="rgb(212,154,20)" fg:x="1313" fg:w="28"/><text x="31.9726%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.10%)</title><rect x="32.3025%" y="693" width="0.0966%" height="15" fill="rgb(236,199,50)" fg:x="1337" fg:w="4"/><text x="32.5525%" y="703.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.10%)</title><rect x="32.3025%" y="677" width="0.0966%" height="15" fill="rgb(211,9,17)" fg:x="1337" fg:w="4"/><text x="32.5525%" y="687.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.07%)</title><rect x="32.3266%" y="661" width="0.0725%" height="15" fill="rgb(243,216,36)" fg:x="1338" fg:w="3"/><text x="32.5766%" y="671.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.07%)</title><rect x="32.3266%" y="645" width="0.0725%" height="15" fill="rgb(250,2,10)" fg:x="1338" fg:w="3"/><text x="32.5766%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="32.3991%" y="677" width="0.0966%" height="15" fill="rgb(226,50,48)" fg:x="1341" fg:w="4"/><text x="32.6491%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="32.3991%" y="661" width="0.0966%" height="15" fill="rgb(243,81,16)" fg:x="1341" fg:w="4"/><text x="32.6491%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="32.4233%" y="645" width="0.0725%" height="15" fill="rgb(250,14,2)" fg:x="1342" fg:w="3"/><text x="32.6733%" y="655.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.07%)</title><rect x="32.4233%" y="629" width="0.0725%" height="15" fill="rgb(233,135,29)" fg:x="1342" fg:w="3"/><text x="32.6733%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="32.4958%" y="613" width="0.0242%" height="15" fill="rgb(224,64,43)" fg:x="1345" fg:w="1"/><text x="32.7458%" y="623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (36 samples, 0.87%)</title><rect x="31.6985%" y="773" width="0.8698%" height="15" fill="rgb(238,84,13)" fg:x="1312" fg:w="36"/><text x="31.9485%" y="783.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (36 samples, 0.87%)</title><rect x="31.6985%" y="757" width="0.8698%" height="15" fill="rgb(253,48,26)" fg:x="1312" fg:w="36"/><text x="31.9485%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (36 samples, 0.87%)</title><rect x="31.6985%" y="741" width="0.8698%" height="15" fill="rgb(205,223,31)" fg:x="1312" fg:w="36"/><text x="31.9485%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 0.87%)</title><rect x="31.6985%" y="725" width="0.8698%" height="15" fill="rgb(221,41,32)" fg:x="1312" fg:w="36"/><text x="31.9485%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 0.17%)</title><rect x="32.3991%" y="709" width="0.1691%" height="15" fill="rgb(213,158,31)" fg:x="1341" fg:w="7"/><text x="32.6491%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.17%)</title><rect x="32.3991%" y="693" width="0.1691%" height="15" fill="rgb(245,126,43)" fg:x="1341" fg:w="7"/><text x="32.6491%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.07%)</title><rect x="32.4958%" y="677" width="0.0725%" height="15" fill="rgb(227,7,22)" fg:x="1345" fg:w="3"/><text x="32.7458%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.07%)</title><rect x="32.4958%" y="661" width="0.0725%" height="15" fill="rgb(252,90,44)" fg:x="1345" fg:w="3"/><text x="32.7458%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.07%)</title><rect x="32.4958%" y="645" width="0.0725%" height="15" fill="rgb(253,91,0)" fg:x="1345" fg:w="3"/><text x="32.7458%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.07%)</title><rect x="32.4958%" y="629" width="0.0725%" height="15" fill="rgb(252,175,49)" fg:x="1345" fg:w="3"/><text x="32.7458%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.05%)</title><rect x="32.5199%" y="613" width="0.0483%" height="15" fill="rgb(246,150,1)" fg:x="1346" fg:w="2"/><text x="32.7699%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.05%)</title><rect x="32.5199%" y="597" width="0.0483%" height="15" fill="rgb(241,192,25)" fg:x="1346" fg:w="2"/><text x="32.7699%" y="607.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.05%)</title><rect x="32.5199%" y="581" width="0.0483%" height="15" fill="rgb(239,187,11)" fg:x="1346" fg:w="2"/><text x="32.7699%" y="591.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="32.5924%" y="725" width="0.0242%" height="15" fill="rgb(218,202,51)" fg:x="1349" fg:w="1"/><text x="32.8424%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="32.5924%" y="709" width="0.0242%" height="15" fill="rgb(225,176,8)" fg:x="1349" fg:w="1"/><text x="32.8424%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="32.5924%" y="693" width="0.0242%" height="15" fill="rgb(219,122,41)" fg:x="1349" fg:w="1"/><text x="32.8424%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="32.5924%" y="677" width="0.0242%" height="15" fill="rgb(248,140,20)" fg:x="1349" fg:w="1"/><text x="32.8424%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="32.5924%" y="661" width="0.0242%" height="15" fill="rgb(245,41,37)" fg:x="1349" fg:w="1"/><text x="32.8424%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="32.5924%" y="645" width="0.0242%" height="15" fill="rgb(235,82,39)" fg:x="1349" fg:w="1"/><text x="32.8424%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="32.5924%" y="629" width="0.0242%" height="15" fill="rgb(230,108,42)" fg:x="1349" fg:w="1"/><text x="32.8424%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="32.5924%" y="613" width="0.0242%" height="15" fill="rgb(215,150,50)" fg:x="1349" fg:w="1"/><text x="32.8424%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.05%)</title><rect x="32.6166%" y="725" width="0.0483%" height="15" fill="rgb(233,212,5)" fg:x="1350" fg:w="2"/><text x="32.8666%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="32.6166%" y="709" width="0.0483%" height="15" fill="rgb(245,80,22)" fg:x="1350" fg:w="2"/><text x="32.8666%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="32.6166%" y="693" width="0.0483%" height="15" fill="rgb(238,129,16)" fg:x="1350" fg:w="2"/><text x="32.8666%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="32.6166%" y="677" width="0.0483%" height="15" fill="rgb(240,19,0)" fg:x="1350" fg:w="2"/><text x="32.8666%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="32.6891%" y="613" width="0.0242%" height="15" fill="rgb(232,42,35)" fg:x="1353" fg:w="1"/><text x="32.9391%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="32.6891%" y="597" width="0.0242%" height="15" fill="rgb(223,130,24)" fg:x="1353" fg:w="1"/><text x="32.9391%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (25 samples, 0.60%)</title><rect x="32.7132%" y="549" width="0.6040%" height="15" fill="rgb(237,16,22)" fg:x="1354" fg:w="25"/><text x="32.9632%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="33.2931%" y="533" width="0.0242%" height="15" fill="rgb(248,192,20)" fg:x="1378" fg:w="1"/><text x="33.5431%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (26 samples, 0.63%)</title><rect x="32.7132%" y="597" width="0.6282%" height="15" fill="rgb(233,167,2)" fg:x="1354" fg:w="26"/><text x="32.9632%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (26 samples, 0.63%)</title><rect x="32.7132%" y="581" width="0.6282%" height="15" fill="rgb(252,71,44)" fg:x="1354" fg:w="26"/><text x="32.9632%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (26 samples, 0.63%)</title><rect x="32.7132%" y="565" width="0.6282%" height="15" fill="rgb(238,37,47)" fg:x="1354" fg:w="26"/><text x="32.9632%" y="575.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="33.3172%" y="549" width="0.0242%" height="15" fill="rgb(214,202,54)" fg:x="1379" fg:w="1"/><text x="33.5672%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="33.3172%" y="533" width="0.0242%" height="15" fill="rgb(254,165,40)" fg:x="1379" fg:w="1"/><text x="33.5672%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (29 samples, 0.70%)</title><rect x="32.6891%" y="629" width="0.7007%" height="15" fill="rgb(246,173,38)" fg:x="1353" fg:w="29"/><text x="32.9391%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (28 samples, 0.68%)</title><rect x="32.7132%" y="613" width="0.6765%" height="15" fill="rgb(215,3,27)" fg:x="1354" fg:w="28"/><text x="32.9632%" y="623.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.05%)</title><rect x="33.3414%" y="597" width="0.0483%" height="15" fill="rgb(239,169,51)" fg:x="1380" fg:w="2"/><text x="33.5914%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="33.3414%" y="581" width="0.0483%" height="15" fill="rgb(212,5,25)" fg:x="1380" fg:w="2"/><text x="33.5914%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="33.3655%" y="565" width="0.0242%" height="15" fill="rgb(243,45,17)" fg:x="1381" fg:w="1"/><text x="33.6155%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="33.3655%" y="549" width="0.0242%" height="15" fill="rgb(242,97,9)" fg:x="1381" fg:w="1"/><text x="33.6155%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="33.3897%" y="581" width="0.0242%" height="15" fill="rgb(228,71,31)" fg:x="1382" fg:w="1"/><text x="33.6397%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="33.3897%" y="629" width="0.0725%" height="15" fill="rgb(252,184,16)" fg:x="1382" fg:w="3"/><text x="33.6397%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="33.3897%" y="613" width="0.0725%" height="15" fill="rgb(236,169,46)" fg:x="1382" fg:w="3"/><text x="33.6397%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="33.3897%" y="597" width="0.0725%" height="15" fill="rgb(207,17,47)" fg:x="1382" fg:w="3"/><text x="33.6397%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.05%)</title><rect x="33.4139%" y="581" width="0.0483%" height="15" fill="rgb(206,201,28)" fg:x="1383" fg:w="2"/><text x="33.6639%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="33.4139%" y="565" width="0.0483%" height="15" fill="rgb(224,184,23)" fg:x="1383" fg:w="2"/><text x="33.6639%" y="575.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (34 samples, 0.82%)</title><rect x="32.6649%" y="661" width="0.8215%" height="15" fill="rgb(208,139,48)" fg:x="1352" fg:w="34"/><text x="32.9149%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (34 samples, 0.82%)</title><rect x="32.6649%" y="645" width="0.8215%" height="15" fill="rgb(208,130,10)" fg:x="1352" fg:w="34"/><text x="32.9149%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="33.4622%" y="629" width="0.0242%" height="15" fill="rgb(211,213,45)" fg:x="1385" fg:w="1"/><text x="33.7122%" y="639.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="33.4622%" y="613" width="0.0242%" height="15" fill="rgb(235,100,30)" fg:x="1385" fg:w="1"/><text x="33.7122%" y="623.50"></text></g><g><title>clear_page_rep (3 samples, 0.07%)</title><rect x="33.5347%" y="469" width="0.0725%" height="15" fill="rgb(206,144,31)" fg:x="1388" fg:w="3"/><text x="33.7847%" y="479.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.12%)</title><rect x="33.5105%" y="613" width="0.1208%" height="15" fill="rgb(224,200,26)" fg:x="1387" fg:w="5"/><text x="33.7605%" y="623.50"></text></g><g><title>exc_page_fault (5 samples, 0.12%)</title><rect x="33.5105%" y="597" width="0.1208%" height="15" fill="rgb(247,104,53)" fg:x="1387" fg:w="5"/><text x="33.7605%" y="607.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.12%)</title><rect x="33.5105%" y="581" width="0.1208%" height="15" fill="rgb(220,14,17)" fg:x="1387" fg:w="5"/><text x="33.7605%" y="591.50"></text></g><g><title>handle_mm_fault (4 samples, 0.10%)</title><rect x="33.5347%" y="565" width="0.0966%" height="15" fill="rgb(230,140,40)" fg:x="1388" fg:w="4"/><text x="33.7847%" y="575.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.10%)</title><rect x="33.5347%" y="549" width="0.0966%" height="15" fill="rgb(229,2,41)" fg:x="1388" fg:w="4"/><text x="33.7847%" y="559.50"></text></g><g><title>do_anonymous_page (4 samples, 0.10%)</title><rect x="33.5347%" y="533" width="0.0966%" height="15" fill="rgb(232,89,16)" fg:x="1388" fg:w="4"/><text x="33.7847%" y="543.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.10%)</title><rect x="33.5347%" y="517" width="0.0966%" height="15" fill="rgb(247,59,52)" fg:x="1388" fg:w="4"/><text x="33.7847%" y="527.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.10%)</title><rect x="33.5347%" y="501" width="0.0966%" height="15" fill="rgb(226,110,21)" fg:x="1388" fg:w="4"/><text x="33.7847%" y="511.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.10%)</title><rect x="33.5347%" y="485" width="0.0966%" height="15" fill="rgb(224,176,43)" fg:x="1388" fg:w="4"/><text x="33.7847%" y="495.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="33.6072%" y="469" width="0.0242%" height="15" fill="rgb(221,73,6)" fg:x="1391" fg:w="1"/><text x="33.8572%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (41 samples, 0.99%)</title><rect x="32.6649%" y="709" width="0.9906%" height="15" fill="rgb(232,78,19)" fg:x="1352" fg:w="41"/><text x="32.9149%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (41 samples, 0.99%)</title><rect x="32.6649%" y="693" width="0.9906%" height="15" fill="rgb(233,112,48)" fg:x="1352" fg:w="41"/><text x="32.9149%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (41 samples, 0.99%)</title><rect x="32.6649%" y="677" width="0.9906%" height="15" fill="rgb(243,131,47)" fg:x="1352" fg:w="41"/><text x="32.9149%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (7 samples, 0.17%)</title><rect x="33.4863%" y="661" width="0.1691%" height="15" fill="rgb(226,51,1)" fg:x="1386" fg:w="7"/><text x="33.7363%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (7 samples, 0.17%)</title><rect x="33.4863%" y="645" width="0.1691%" height="15" fill="rgb(247,58,7)" fg:x="1386" fg:w="7"/><text x="33.7363%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.17%)</title><rect x="33.4863%" y="629" width="0.1691%" height="15" fill="rgb(209,7,32)" fg:x="1386" fg:w="7"/><text x="33.7363%" y="639.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="33.6313%" y="613" width="0.0242%" height="15" fill="rgb(209,39,41)" fg:x="1392" fg:w="1"/><text x="33.8813%" y="623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (46 samples, 1.11%)</title><rect x="32.5683%" y="773" width="1.1114%" height="15" fill="rgb(226,182,46)" fg:x="1348" fg:w="46"/><text x="32.8183%" y="783.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (46 samples, 1.11%)</title><rect x="32.5683%" y="757" width="1.1114%" height="15" fill="rgb(230,219,10)" fg:x="1348" fg:w="46"/><text x="32.8183%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (46 samples, 1.11%)</title><rect x="32.5683%" y="741" width="1.1114%" height="15" fill="rgb(227,175,30)" fg:x="1348" fg:w="46"/><text x="32.8183%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (42 samples, 1.01%)</title><rect x="32.6649%" y="725" width="1.0147%" height="15" fill="rgb(217,2,50)" fg:x="1352" fg:w="42"/><text x="32.9149%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="33.6555%" y="709" width="0.0242%" height="15" fill="rgb(229,160,0)" fg:x="1393" fg:w="1"/><text x="33.9055%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="33.6555%" y="693" width="0.0242%" height="15" fill="rgb(207,78,37)" fg:x="1393" fg:w="1"/><text x="33.9055%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="33.6555%" y="677" width="0.0242%" height="15" fill="rgb(225,57,0)" fg:x="1393" fg:w="1"/><text x="33.9055%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="33.6555%" y="661" width="0.0242%" height="15" fill="rgb(232,154,2)" fg:x="1393" fg:w="1"/><text x="33.9055%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.14%)</title><rect x="33.8246%" y="629" width="0.1450%" height="15" fill="rgb(241,212,25)" fg:x="1400" fg:w="6"/><text x="34.0746%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.14%)</title><rect x="33.8246%" y="613" width="0.1450%" height="15" fill="rgb(226,69,20)" fg:x="1400" fg:w="6"/><text x="34.0746%" y="623.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.14%)</title><rect x="33.8246%" y="597" width="0.1450%" height="15" fill="rgb(247,184,54)" fg:x="1400" fg:w="6"/><text x="34.0746%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.14%)</title><rect x="33.8246%" y="581" width="0.1450%" height="15" fill="rgb(210,145,0)" fg:x="1400" fg:w="6"/><text x="34.0746%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.14%)</title><rect x="33.8246%" y="565" width="0.1450%" height="15" fill="rgb(253,82,12)" fg:x="1400" fg:w="6"/><text x="34.0746%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.14%)</title><rect x="33.8246%" y="549" width="0.1450%" height="15" fill="rgb(245,42,11)" fg:x="1400" fg:w="6"/><text x="34.0746%" y="559.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="33.9212%" y="533" width="0.0483%" height="15" fill="rgb(219,147,32)" fg:x="1404" fg:w="2"/><text x="34.1712%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (7 samples, 0.17%)</title><rect x="33.9696%" y="629" width="0.1691%" height="15" fill="rgb(246,12,7)" fg:x="1406" fg:w="7"/><text x="34.2196%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.17%)</title><rect x="33.9696%" y="613" width="0.1691%" height="15" fill="rgb(243,50,9)" fg:x="1406" fg:w="7"/><text x="34.2196%" y="623.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="34.0420%" y="597" width="0.0966%" height="15" fill="rgb(219,149,6)" fg:x="1409" fg:w="4"/><text x="34.2920%" y="607.50"></text></g><g><title>core::str::validations::next_code_point (4 samples, 0.10%)</title><rect x="34.0420%" y="581" width="0.0966%" height="15" fill="rgb(241,51,42)" fg:x="1409" fg:w="4"/><text x="34.2920%" y="591.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (1 samples, 0.02%)</title><rect x="35.3467%" y="533" width="0.0242%" height="15" fill="rgb(226,128,27)" fg:x="1463" fg:w="1"/><text x="35.5967%" y="543.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="35.3950%" y="501" width="0.0242%" height="15" fill="rgb(244,144,4)" fg:x="1465" fg:w="1"/><text x="35.6450%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.02%)</title><rect x="35.3950%" y="485" width="0.0242%" height="15" fill="rgb(221,4,13)" fg:x="1465" fg:w="1"/><text x="35.6450%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.07%)</title><rect x="35.3709%" y="533" width="0.0725%" height="15" fill="rgb(208,170,28)" fg:x="1464" fg:w="3"/><text x="35.6209%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.07%)</title><rect x="35.3709%" y="517" width="0.0725%" height="15" fill="rgb(226,131,13)" fg:x="1464" fg:w="3"/><text x="35.6209%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="35.4192%" y="501" width="0.0242%" height="15" fill="rgb(215,72,41)" fg:x="1466" fg:w="1"/><text x="35.6692%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="35.4433%" y="533" width="0.0242%" height="15" fill="rgb(243,108,20)" fg:x="1467" fg:w="1"/><text x="35.6933%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="35.4433%" y="517" width="0.0242%" height="15" fill="rgb(230,189,17)" fg:x="1467" fg:w="1"/><text x="35.6933%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (60 samples, 1.45%)</title><rect x="34.1387%" y="629" width="1.4496%" height="15" fill="rgb(220,50,17)" fg:x="1413" fg:w="60"/><text x="34.3887%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (49 samples, 1.18%)</title><rect x="34.4044%" y="613" width="1.1839%" height="15" fill="rgb(248,152,48)" fg:x="1424" fg:w="49"/><text x="34.6544%" y="623.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 1.11%)</title><rect x="34.4769%" y="597" width="1.1114%" height="15" fill="rgb(244,91,11)" fg:x="1427" fg:w="46"/><text x="34.7269%" y="607.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (46 samples, 1.11%)</title><rect x="34.4769%" y="581" width="1.1114%" height="15" fill="rgb(220,157,5)" fg:x="1427" fg:w="46"/><text x="34.7269%" y="591.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (46 samples, 1.11%)</title><rect x="34.4769%" y="565" width="1.1114%" height="15" fill="rgb(253,137,8)" fg:x="1427" fg:w="46"/><text x="34.7269%" y="575.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (36 samples, 0.87%)</title><rect x="34.7185%" y="549" width="0.8698%" height="15" fill="rgb(217,137,51)" fg:x="1437" fg:w="36"/><text x="34.9685%" y="559.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (5 samples, 0.12%)</title><rect x="35.4675%" y="533" width="0.1208%" height="15" fill="rgb(218,209,53)" fg:x="1468" fg:w="5"/><text x="35.7175%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (10 samples, 0.24%)</title><rect x="35.8058%" y="549" width="0.2416%" height="15" fill="rgb(249,137,25)" fg:x="1482" fg:w="10"/><text x="36.0558%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (10 samples, 0.24%)</title><rect x="35.8058%" y="533" width="0.2416%" height="15" fill="rgb(239,155,26)" fg:x="1482" fg:w="10"/><text x="36.0558%" y="543.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.10%)</title><rect x="35.9507%" y="517" width="0.0966%" height="15" fill="rgb(227,85,46)" fg:x="1488" fg:w="4"/><text x="36.2007%" y="527.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (2 samples, 0.05%)</title><rect x="36.0474%" y="549" width="0.0483%" height="15" fill="rgb(251,107,43)" fg:x="1492" fg:w="2"/><text x="36.2974%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="36.0474%" y="533" width="0.0483%" height="15" fill="rgb(234,170,33)" fg:x="1492" fg:w="2"/><text x="36.2974%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="36.0715%" y="517" width="0.0242%" height="15" fill="rgb(206,29,35)" fg:x="1493" fg:w="1"/><text x="36.3215%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (99 samples, 2.39%)</title><rect x="33.8004%" y="677" width="2.3919%" height="15" fill="rgb(227,138,25)" fg:x="1399" fg:w="99"/><text x="34.0504%" y="687.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (98 samples, 2.37%)</title><rect x="33.8246%" y="661" width="2.3677%" height="15" fill="rgb(249,131,35)" fg:x="1400" fg:w="98"/><text x="34.0746%" y="671.50">co..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (98 samples, 2.37%)</title><rect x="33.8246%" y="645" width="2.3677%" height="15" fill="rgb(239,6,40)" fg:x="1400" fg:w="98"/><text x="34.0746%" y="655.50">y2..</text></g><g><title>core::str::&lt;impl str&gt;::matches (25 samples, 0.60%)</title><rect x="35.5883%" y="629" width="0.6040%" height="15" fill="rgb(246,136,47)" fg:x="1473" fg:w="25"/><text x="35.8383%" y="639.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (25 samples, 0.60%)</title><rect x="35.5883%" y="613" width="0.6040%" height="15" fill="rgb(253,58,26)" fg:x="1473" fg:w="25"/><text x="35.8383%" y="623.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (25 samples, 0.60%)</title><rect x="35.5883%" y="597" width="0.6040%" height="15" fill="rgb(237,141,10)" fg:x="1473" fg:w="25"/><text x="35.8383%" y="607.50"></text></g><g><title>core::str::pattern::StrSearcher::new (24 samples, 0.58%)</title><rect x="35.6125%" y="581" width="0.5799%" height="15" fill="rgb(234,156,12)" fg:x="1474" fg:w="24"/><text x="35.8625%" y="591.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (16 samples, 0.39%)</title><rect x="35.8058%" y="565" width="0.3866%" height="15" fill="rgb(243,224,36)" fg:x="1482" fg:w="16"/><text x="36.0558%" y="575.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (4 samples, 0.10%)</title><rect x="36.0957%" y="549" width="0.0966%" height="15" fill="rgb(205,229,51)" fg:x="1494" fg:w="4"/><text x="36.3457%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="36.1682%" y="533" width="0.0242%" height="15" fill="rgb(223,189,4)" fg:x="1497" fg:w="1"/><text x="36.4182%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="36.1682%" y="517" width="0.0242%" height="15" fill="rgb(249,167,54)" fg:x="1497" fg:w="1"/><text x="36.4182%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (100 samples, 2.42%)</title><rect x="33.8004%" y="757" width="2.4160%" height="15" fill="rgb(218,34,28)" fg:x="1399" fg:w="100"/><text x="34.0504%" y="767.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find (100 samples, 2.42%)</title><rect x="33.8004%" y="741" width="2.4160%" height="15" fill="rgb(232,109,42)" fg:x="1399" fg:w="100"/><text x="34.0504%" y="751.50">co..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (100 samples, 2.42%)</title><rect x="33.8004%" y="725" width="2.4160%" height="15" fill="rgb(248,214,46)" fg:x="1399" fg:w="100"/><text x="34.0504%" y="735.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (100 samples, 2.42%)</title><rect x="33.8004%" y="709" width="2.4160%" height="15" fill="rgb(244,216,40)" fg:x="1399" fg:w="100"/><text x="34.0504%" y="719.50">co..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (100 samples, 2.42%)</title><rect x="33.8004%" y="693" width="2.4160%" height="15" fill="rgb(231,226,31)" fg:x="1399" fg:w="100"/><text x="34.0504%" y="703.50">co..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.02%)</title><rect x="36.1923%" y="677" width="0.0242%" height="15" fill="rgb(238,38,43)" fg:x="1498" fg:w="1"/><text x="36.4423%" y="687.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.02%)</title><rect x="36.3131%" y="741" width="0.0242%" height="15" fill="rgb(208,88,43)" fg:x="1503" fg:w="1"/><text x="36.5631%" y="751.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (4 samples, 0.10%)</title><rect x="36.3373%" y="741" width="0.0966%" height="15" fill="rgb(205,136,37)" fg:x="1504" fg:w="4"/><text x="36.5873%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3 samples, 0.07%)</title><rect x="36.3614%" y="725" width="0.0725%" height="15" fill="rgb(237,34,14)" fg:x="1505" fg:w="3"/><text x="36.6114%" y="735.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3 samples, 0.07%)</title><rect x="36.3614%" y="709" width="0.0725%" height="15" fill="rgb(236,193,44)" fg:x="1505" fg:w="3"/><text x="36.6114%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="36.3614%" y="693" width="0.0725%" height="15" fill="rgb(231,48,10)" fg:x="1505" fg:w="3"/><text x="36.6114%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.07%)</title><rect x="36.3614%" y="677" width="0.0725%" height="15" fill="rgb(213,141,34)" fg:x="1505" fg:w="3"/><text x="36.6114%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="36.3614%" y="661" width="0.0725%" height="15" fill="rgb(249,130,34)" fg:x="1505" fg:w="3"/><text x="36.6114%" y="671.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="36.6514%" y="549" width="0.0242%" height="15" fill="rgb(219,42,41)" fg:x="1517" fg:w="1"/><text x="36.9014%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.02%)</title><rect x="36.6755%" y="549" width="0.0242%" height="15" fill="rgb(224,100,54)" fg:x="1518" fg:w="1"/><text x="36.9255%" y="559.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="36.9171%" y="453" width="0.0242%" height="15" fill="rgb(229,200,27)" fg:x="1528" fg:w="1"/><text x="37.1671%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.05%)</title><rect x="36.9413%" y="453" width="0.0483%" height="15" fill="rgb(217,118,10)" fg:x="1529" fg:w="2"/><text x="37.1913%" y="463.50"></text></g><g><title>_int_free (3 samples, 0.07%)</title><rect x="36.9896%" y="453" width="0.0725%" height="15" fill="rgb(206,22,3)" fg:x="1531" fg:w="3"/><text x="37.2396%" y="463.50"></text></g><g><title>__GI___libc_realloc (19 samples, 0.46%)</title><rect x="36.7238%" y="485" width="0.4590%" height="15" fill="rgb(232,163,46)" fg:x="1520" fg:w="19"/><text x="36.9738%" y="495.50"></text></g><g><title>_int_realloc (15 samples, 0.36%)</title><rect x="36.8205%" y="469" width="0.3624%" height="15" fill="rgb(206,95,13)" fg:x="1524" fg:w="15"/><text x="37.0705%" y="479.50"></text></g><g><title>_int_malloc (5 samples, 0.12%)</title><rect x="37.0621%" y="453" width="0.1208%" height="15" fill="rgb(253,154,18)" fg:x="1534" fg:w="5"/><text x="37.3121%" y="463.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="37.1587%" y="437" width="0.0242%" height="15" fill="rgb(219,32,23)" fg:x="1538" fg:w="1"/><text x="37.4087%" y="447.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="37.1587%" y="421" width="0.0242%" height="15" fill="rgb(230,191,45)" fg:x="1538" fg:w="1"/><text x="37.4087%" y="431.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="37.1587%" y="405" width="0.0242%" height="15" fill="rgb(229,64,36)" fg:x="1538" fg:w="1"/><text x="37.4087%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (21 samples, 0.51%)</title><rect x="36.7238%" y="533" width="0.5074%" height="15" fill="rgb(205,129,25)" fg:x="1520" fg:w="21"/><text x="36.9738%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (21 samples, 0.51%)</title><rect x="36.7238%" y="517" width="0.5074%" height="15" fill="rgb(254,112,7)" fg:x="1520" fg:w="21"/><text x="36.9738%" y="527.50"></text></g><g><title>alloc::alloc::realloc (21 samples, 0.51%)</title><rect x="36.7238%" y="501" width="0.5074%" height="15" fill="rgb(226,53,48)" fg:x="1520" fg:w="21"/><text x="36.9738%" y="511.50"></text></g><g><title>__rdl_realloc (2 samples, 0.05%)</title><rect x="37.1829%" y="485" width="0.0483%" height="15" fill="rgb(214,153,38)" fg:x="1539" fg:w="2"/><text x="37.4329%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.02%)</title><rect x="37.2071%" y="469" width="0.0242%" height="15" fill="rgb(243,101,7)" fg:x="1540" fg:w="1"/><text x="37.4571%" y="479.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.07%)</title><rect x="37.2312%" y="533" width="0.0725%" height="15" fill="rgb(240,140,22)" fg:x="1541" fg:w="3"/><text x="37.4812%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (33 samples, 0.80%)</title><rect x="36.5306%" y="613" width="0.7973%" height="15" fill="rgb(235,114,2)" fg:x="1512" fg:w="33"/><text x="36.7806%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.77%)</title><rect x="36.5547%" y="597" width="0.7731%" height="15" fill="rgb(242,59,12)" fg:x="1513" fg:w="32"/><text x="36.8047%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (31 samples, 0.75%)</title><rect x="36.5789%" y="581" width="0.7490%" height="15" fill="rgb(252,134,9)" fg:x="1514" fg:w="31"/><text x="36.8289%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (28 samples, 0.68%)</title><rect x="36.6514%" y="565" width="0.6765%" height="15" fill="rgb(236,4,44)" fg:x="1517" fg:w="28"/><text x="36.9014%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (26 samples, 0.63%)</title><rect x="36.6997%" y="549" width="0.6282%" height="15" fill="rgb(254,172,41)" fg:x="1519" fg:w="26"/><text x="36.9497%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="37.3037%" y="533" width="0.0242%" height="15" fill="rgb(244,63,20)" fg:x="1544" fg:w="1"/><text x="37.5537%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="37.3279%" y="613" width="0.0242%" height="15" fill="rgb(250,73,31)" fg:x="1545" fg:w="1"/><text x="37.5779%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect x="37.3279%" y="597" width="0.0242%" height="15" fill="rgb(241,38,36)" fg:x="1545" fg:w="1"/><text x="37.5779%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (36 samples, 0.87%)</title><rect x="36.5064%" y="709" width="0.8698%" height="15" fill="rgb(245,211,2)" fg:x="1511" fg:w="36"/><text x="36.7564%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (35 samples, 0.85%)</title><rect x="36.5306%" y="693" width="0.8456%" height="15" fill="rgb(206,120,28)" fg:x="1512" fg:w="35"/><text x="36.7806%" y="703.50"></text></g><g><title>alloc::string::String::push_str (35 samples, 0.85%)</title><rect x="36.5306%" y="677" width="0.8456%" height="15" fill="rgb(211,59,34)" fg:x="1512" fg:w="35"/><text x="36.7806%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (35 samples, 0.85%)</title><rect x="36.5306%" y="661" width="0.8456%" height="15" fill="rgb(233,168,5)" fg:x="1512" fg:w="35"/><text x="36.7806%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (35 samples, 0.85%)</title><rect x="36.5306%" y="645" width="0.8456%" height="15" fill="rgb(234,33,13)" fg:x="1512" fg:w="35"/><text x="36.7806%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (35 samples, 0.85%)</title><rect x="36.5306%" y="629" width="0.8456%" height="15" fill="rgb(231,150,26)" fg:x="1512" fg:w="35"/><text x="36.7806%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="37.3520%" y="613" width="0.0242%" height="15" fill="rgb(217,191,4)" fg:x="1546" fg:w="1"/><text x="37.6020%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="37.3520%" y="597" width="0.0242%" height="15" fill="rgb(246,198,38)" fg:x="1546" fg:w="1"/><text x="37.6020%" y="607.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="37.3762%" y="709" width="0.0242%" height="15" fill="rgb(245,64,37)" fg:x="1547" fg:w="1"/><text x="37.6262%" y="719.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.02%)</title><rect x="37.4003%" y="709" width="0.0242%" height="15" fill="rgb(250,30,36)" fg:x="1548" fg:w="1"/><text x="37.6503%" y="719.50"></text></g><g><title>core::fmt::Formatter::pad (5 samples, 0.12%)</title><rect x="37.4245%" y="709" width="0.1208%" height="15" fill="rgb(217,86,53)" fg:x="1549" fg:w="5"/><text x="37.6745%" y="719.50"></text></g><g><title>alloc::fmt::format (56 samples, 1.35%)</title><rect x="36.2165%" y="757" width="1.3530%" height="15" fill="rgb(228,157,16)" fg:x="1499" fg:w="56"/><text x="36.4665%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (47 samples, 1.14%)</title><rect x="36.4339%" y="741" width="1.1355%" height="15" fill="rgb(217,59,31)" fg:x="1508" fg:w="47"/><text x="36.6839%" y="751.50"></text></g><g><title>core::fmt::write (46 samples, 1.11%)</title><rect x="36.4581%" y="725" width="1.1114%" height="15" fill="rgb(237,138,41)" fg:x="1509" fg:w="46"/><text x="36.7081%" y="735.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.02%)</title><rect x="37.5453%" y="709" width="0.0242%" height="15" fill="rgb(227,91,49)" fg:x="1554" fg:w="1"/><text x="37.7953%" y="719.50"></text></g><g><title>__GI___libc_free (2 samples, 0.05%)</title><rect x="37.5695%" y="661" width="0.0483%" height="15" fill="rgb(247,21,44)" fg:x="1555" fg:w="2"/><text x="37.8195%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.14%)</title><rect x="37.5695%" y="757" width="0.1450%" height="15" fill="rgb(219,210,51)" fg:x="1555" fg:w="6"/><text x="37.8195%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.14%)</title><rect x="37.5695%" y="741" width="0.1450%" height="15" fill="rgb(209,140,6)" fg:x="1555" fg:w="6"/><text x="37.8195%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.14%)</title><rect x="37.5695%" y="725" width="0.1450%" height="15" fill="rgb(221,188,24)" fg:x="1555" fg:w="6"/><text x="37.8195%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.14%)</title><rect x="37.5695%" y="709" width="0.1450%" height="15" fill="rgb(232,154,20)" fg:x="1555" fg:w="6"/><text x="37.8195%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.14%)</title><rect x="37.5695%" y="693" width="0.1450%" height="15" fill="rgb(244,137,50)" fg:x="1555" fg:w="6"/><text x="37.8195%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.14%)</title><rect x="37.5695%" y="677" width="0.1450%" height="15" fill="rgb(225,185,43)" fg:x="1555" fg:w="6"/><text x="37.8195%" y="687.50"></text></g><g><title>_int_free (4 samples, 0.10%)</title><rect x="37.6178%" y="661" width="0.0966%" height="15" fill="rgb(213,205,38)" fg:x="1557" fg:w="4"/><text x="37.8678%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.12%)</title><rect x="37.7144%" y="693" width="0.1208%" height="15" fill="rgb(236,73,12)" fg:x="1561" fg:w="5"/><text x="37.9644%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.12%)</title><rect x="37.7144%" y="677" width="0.1208%" height="15" fill="rgb(235,219,13)" fg:x="1561" fg:w="5"/><text x="37.9644%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.12%)</title><rect x="37.7144%" y="661" width="0.1208%" height="15" fill="rgb(218,59,36)" fg:x="1561" fg:w="5"/><text x="37.9644%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.07%)</title><rect x="37.7627%" y="645" width="0.0725%" height="15" fill="rgb(205,110,39)" fg:x="1563" fg:w="3"/><text x="38.0127%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="37.8111%" y="629" width="0.0242%" height="15" fill="rgb(218,206,42)" fg:x="1565" fg:w="1"/><text x="38.0611%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="37.8352%" y="693" width="0.0242%" height="15" fill="rgb(248,125,24)" fg:x="1566" fg:w="1"/><text x="38.0852%" y="703.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="37.8352%" y="677" width="0.0242%" height="15" fill="rgb(242,28,27)" fg:x="1566" fg:w="1"/><text x="38.0852%" y="687.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="37.8352%" y="661" width="0.0242%" height="15" fill="rgb(216,228,15)" fg:x="1566" fg:w="1"/><text x="38.0852%" y="671.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="37.8352%" y="645" width="0.0242%" height="15" fill="rgb(235,116,46)" fg:x="1566" fg:w="1"/><text x="38.0852%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.17%)</title><rect x="37.7144%" y="709" width="0.1691%" height="15" fill="rgb(224,18,32)" fg:x="1561" fg:w="7"/><text x="37.9644%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="37.8594%" y="693" width="0.0242%" height="15" fill="rgb(252,5,12)" fg:x="1567" fg:w="1"/><text x="38.1094%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="37.8594%" y="677" width="0.0242%" height="15" fill="rgb(251,36,5)" fg:x="1567" fg:w="1"/><text x="38.1094%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="37.8594%" y="661" width="0.0242%" height="15" fill="rgb(217,53,14)" fg:x="1567" fg:w="1"/><text x="38.1094%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="37.8594%" y="645" width="0.0242%" height="15" fill="rgb(215,86,45)" fg:x="1567" fg:w="1"/><text x="38.1094%" y="655.50"></text></g><g><title>&lt;&amp;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (1 samples, 0.02%)</title><rect x="37.8835%" y="661" width="0.0242%" height="15" fill="rgb(242,169,11)" fg:x="1568" fg:w="1"/><text x="38.1335%" y="671.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.07%)</title><rect x="37.8835%" y="677" width="0.0725%" height="15" fill="rgb(211,213,45)" fg:x="1568" fg:w="3"/><text x="38.1335%" y="687.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.05%)</title><rect x="37.9077%" y="661" width="0.0483%" height="15" fill="rgb(205,88,11)" fg:x="1569" fg:w="2"/><text x="38.1577%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="37.9077%" y="645" width="0.0483%" height="15" fill="rgb(252,69,26)" fg:x="1569" fg:w="2"/><text x="38.1577%" y="655.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="37.9077%" y="629" width="0.0483%" height="15" fill="rgb(246,123,37)" fg:x="1569" fg:w="2"/><text x="38.1577%" y="639.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="37.9077%" y="613" width="0.0483%" height="15" fill="rgb(212,205,5)" fg:x="1569" fg:w="2"/><text x="38.1577%" y="623.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="37.9319%" y="597" width="0.0242%" height="15" fill="rgb(253,148,0)" fg:x="1570" fg:w="1"/><text x="38.1819%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.27%)</title><rect x="37.7144%" y="757" width="0.2658%" height="15" fill="rgb(239,22,4)" fg:x="1561" fg:w="11"/><text x="37.9644%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.27%)</title><rect x="37.7144%" y="741" width="0.2658%" height="15" fill="rgb(226,26,53)" fg:x="1561" fg:w="11"/><text x="37.9644%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.27%)</title><rect x="37.7144%" y="725" width="0.2658%" height="15" fill="rgb(225,229,45)" fg:x="1561" fg:w="11"/><text x="37.9644%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.10%)</title><rect x="37.8835%" y="709" width="0.0966%" height="15" fill="rgb(220,60,37)" fg:x="1568" fg:w="4"/><text x="38.1335%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.10%)</title><rect x="37.8835%" y="693" width="0.0966%" height="15" fill="rgb(217,180,35)" fg:x="1568" fg:w="4"/><text x="38.1335%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="37.9560%" y="677" width="0.0242%" height="15" fill="rgb(229,7,53)" fg:x="1571" fg:w="1"/><text x="38.2060%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="37.9560%" y="661" width="0.0242%" height="15" fill="rgb(254,137,3)" fg:x="1571" fg:w="1"/><text x="38.2060%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="37.9560%" y="645" width="0.0242%" height="15" fill="rgb(215,140,41)" fg:x="1571" fg:w="1"/><text x="38.2060%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="37.9560%" y="629" width="0.0242%" height="15" fill="rgb(250,80,15)" fg:x="1571" fg:w="1"/><text x="38.2060%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="37.9560%" y="613" width="0.0242%" height="15" fill="rgb(252,191,6)" fg:x="1571" fg:w="1"/><text x="38.2060%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="37.9560%" y="597" width="0.0242%" height="15" fill="rgb(246,217,18)" fg:x="1571" fg:w="1"/><text x="38.2060%" y="607.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="37.9560%" y="581" width="0.0242%" height="15" fill="rgb(223,93,7)" fg:x="1571" fg:w="1"/><text x="38.2060%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="38.1493%" y="581" width="0.0242%" height="15" fill="rgb(225,55,52)" fg:x="1579" fg:w="1"/><text x="38.3993%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.19%)</title><rect x="38.0043%" y="645" width="0.1933%" height="15" fill="rgb(240,31,24)" fg:x="1573" fg:w="8"/><text x="38.2543%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.19%)</title><rect x="38.0043%" y="629" width="0.1933%" height="15" fill="rgb(205,56,52)" fg:x="1573" fg:w="8"/><text x="38.2543%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.19%)</title><rect x="38.0043%" y="613" width="0.1933%" height="15" fill="rgb(246,146,12)" fg:x="1573" fg:w="8"/><text x="38.2543%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.10%)</title><rect x="38.1010%" y="597" width="0.0966%" height="15" fill="rgb(239,84,36)" fg:x="1577" fg:w="4"/><text x="38.3510%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="38.1735%" y="581" width="0.0242%" height="15" fill="rgb(207,41,40)" fg:x="1580" fg:w="1"/><text x="38.4235%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (12 samples, 0.29%)</title><rect x="38.0043%" y="677" width="0.2899%" height="15" fill="rgb(241,179,25)" fg:x="1573" fg:w="12"/><text x="38.2543%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (12 samples, 0.29%)</title><rect x="38.0043%" y="661" width="0.2899%" height="15" fill="rgb(210,0,34)" fg:x="1573" fg:w="12"/><text x="38.2543%" y="671.50"></text></g><g><title>core::hash::Hasher::write_u8 (4 samples, 0.10%)</title><rect x="38.1976%" y="645" width="0.0966%" height="15" fill="rgb(225,217,29)" fg:x="1581" fg:w="4"/><text x="38.4476%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="38.1976%" y="629" width="0.0966%" height="15" fill="rgb(216,191,38)" fg:x="1581" fg:w="4"/><text x="38.4476%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="38.1976%" y="613" width="0.0966%" height="15" fill="rgb(232,140,52)" fg:x="1581" fg:w="4"/><text x="38.4476%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.10%)</title><rect x="38.1976%" y="597" width="0.0966%" height="15" fill="rgb(223,158,51)" fg:x="1581" fg:w="4"/><text x="38.4476%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="38.2701%" y="581" width="0.0242%" height="15" fill="rgb(235,29,51)" fg:x="1584" fg:w="1"/><text x="38.5201%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="38.3909%" y="613" width="0.0242%" height="15" fill="rgb(215,181,18)" fg:x="1589" fg:w="1"/><text x="38.6409%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.05%)</title><rect x="38.3909%" y="629" width="0.0483%" height="15" fill="rgb(227,125,34)" fg:x="1589" fg:w="2"/><text x="38.6409%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="38.4151%" y="613" width="0.0242%" height="15" fill="rgb(230,197,49)" fg:x="1590" fg:w="1"/><text x="38.6651%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="38.4392%" y="613" width="0.0725%" height="15" fill="rgb(239,141,16)" fg:x="1591" fg:w="3"/><text x="38.6892%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.29%)</title><rect x="38.2943%" y="677" width="0.2899%" height="15" fill="rgb(225,105,43)" fg:x="1585" fg:w="12"/><text x="38.5443%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.29%)</title><rect x="38.2943%" y="661" width="0.2899%" height="15" fill="rgb(214,131,14)" fg:x="1585" fg:w="12"/><text x="38.5443%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.29%)</title><rect x="38.2943%" y="645" width="0.2899%" height="15" fill="rgb(229,177,11)" fg:x="1585" fg:w="12"/><text x="38.5443%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.14%)</title><rect x="38.4392%" y="629" width="0.1450%" height="15" fill="rgb(231,180,14)" fg:x="1591" fg:w="6"/><text x="38.6892%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="38.5117%" y="613" width="0.0725%" height="15" fill="rgb(232,88,2)" fg:x="1594" fg:w="3"/><text x="38.7617%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (26 samples, 0.63%)</title><rect x="37.9802%" y="693" width="0.6282%" height="15" fill="rgb(205,220,8)" fg:x="1572" fg:w="26"/><text x="38.2302%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="38.5842%" y="677" width="0.0242%" height="15" fill="rgb(225,23,53)" fg:x="1597" fg:w="1"/><text x="38.8342%" y="687.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="38.5842%" y="661" width="0.0242%" height="15" fill="rgb(213,62,29)" fg:x="1597" fg:w="1"/><text x="38.8342%" y="671.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="38.5842%" y="645" width="0.0242%" height="15" fill="rgb(227,75,7)" fg:x="1597" fg:w="1"/><text x="38.8342%" y="655.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="38.5842%" y="629" width="0.0242%" height="15" fill="rgb(207,105,14)" fg:x="1597" fg:w="1"/><text x="38.8342%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="38.6808%" y="629" width="0.0242%" height="15" fill="rgb(245,62,29)" fg:x="1601" fg:w="1"/><text x="38.9308%" y="639.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="38.6808%" y="613" width="0.0242%" height="15" fill="rgb(236,202,4)" fg:x="1601" fg:w="1"/><text x="38.9308%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="38.6567%" y="661" width="0.0725%" height="15" fill="rgb(250,67,1)" fg:x="1600" fg:w="3"/><text x="38.9067%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="38.6567%" y="645" width="0.0725%" height="15" fill="rgb(253,115,44)" fg:x="1600" fg:w="3"/><text x="38.9067%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.02%)</title><rect x="38.7050%" y="629" width="0.0242%" height="15" fill="rgb(251,139,18)" fg:x="1602" fg:w="1"/><text x="38.9550%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="38.7050%" y="613" width="0.0242%" height="15" fill="rgb(218,22,32)" fg:x="1602" fg:w="1"/><text x="38.9550%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="38.7050%" y="597" width="0.0242%" height="15" fill="rgb(243,53,5)" fg:x="1602" fg:w="1"/><text x="38.9550%" y="607.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.05%)</title><rect x="38.7292%" y="661" width="0.0483%" height="15" fill="rgb(227,56,16)" fg:x="1603" fg:w="2"/><text x="38.9792%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="38.7292%" y="645" width="0.0483%" height="15" fill="rgb(245,53,0)" fg:x="1603" fg:w="2"/><text x="38.9792%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.05%)</title><rect x="38.7292%" y="629" width="0.0483%" height="15" fill="rgb(216,170,35)" fg:x="1603" fg:w="2"/><text x="38.9792%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="38.7292%" y="613" width="0.0483%" height="15" fill="rgb(211,200,8)" fg:x="1603" fg:w="2"/><text x="38.9792%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="38.7292%" y="597" width="0.0483%" height="15" fill="rgb(228,204,44)" fg:x="1603" fg:w="2"/><text x="38.9792%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="38.7292%" y="581" width="0.0483%" height="15" fill="rgb(214,121,17)" fg:x="1603" fg:w="2"/><text x="38.9792%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="38.7775%" y="597" width="0.0242%" height="15" fill="rgb(233,64,38)" fg:x="1605" fg:w="1"/><text x="39.0275%" y="607.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (39 samples, 0.94%)</title><rect x="37.9802%" y="757" width="0.9423%" height="15" fill="rgb(253,54,19)" fg:x="1572" fg:w="39"/><text x="38.2302%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (39 samples, 0.94%)</title><rect x="37.9802%" y="741" width="0.9423%" height="15" fill="rgb(253,94,18)" fg:x="1572" fg:w="39"/><text x="38.2302%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (39 samples, 0.94%)</title><rect x="37.9802%" y="725" width="0.9423%" height="15" fill="rgb(227,57,52)" fg:x="1572" fg:w="39"/><text x="38.2302%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (39 samples, 0.94%)</title><rect x="37.9802%" y="709" width="0.9423%" height="15" fill="rgb(230,228,50)" fg:x="1572" fg:w="39"/><text x="38.2302%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.31%)</title><rect x="38.6084%" y="693" width="0.3141%" height="15" fill="rgb(217,205,27)" fg:x="1598" fg:w="13"/><text x="38.8584%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.31%)</title><rect x="38.6084%" y="677" width="0.3141%" height="15" fill="rgb(252,71,50)" fg:x="1598" fg:w="13"/><text x="38.8584%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.14%)</title><rect x="38.7775%" y="661" width="0.1450%" height="15" fill="rgb(209,86,4)" fg:x="1605" fg:w="6"/><text x="39.0275%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.14%)</title><rect x="38.7775%" y="645" width="0.1450%" height="15" fill="rgb(229,94,0)" fg:x="1605" fg:w="6"/><text x="39.0275%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.14%)</title><rect x="38.7775%" y="629" width="0.1450%" height="15" fill="rgb(252,223,21)" fg:x="1605" fg:w="6"/><text x="39.0275%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.14%)</title><rect x="38.7775%" y="613" width="0.1450%" height="15" fill="rgb(230,210,4)" fg:x="1605" fg:w="6"/><text x="39.0275%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.12%)</title><rect x="38.8016%" y="597" width="0.1208%" height="15" fill="rgb(240,149,38)" fg:x="1606" fg:w="5"/><text x="39.0516%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.12%)</title><rect x="38.8016%" y="581" width="0.1208%" height="15" fill="rgb(254,105,20)" fg:x="1606" fg:w="5"/><text x="39.0516%" y="591.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.12%)</title><rect x="38.8016%" y="565" width="0.1208%" height="15" fill="rgb(253,87,46)" fg:x="1606" fg:w="5"/><text x="39.0516%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="38.9466%" y="693" width="0.0242%" height="15" fill="rgb(253,116,33)" fg:x="1612" fg:w="1"/><text x="39.1966%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="38.9466%" y="677" width="0.0242%" height="15" fill="rgb(229,198,5)" fg:x="1612" fg:w="1"/><text x="39.1966%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="38.9466%" y="661" width="0.0242%" height="15" fill="rgb(242,38,37)" fg:x="1612" fg:w="1"/><text x="39.1966%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="38.9466%" y="645" width="0.0242%" height="15" fill="rgb(242,69,53)" fg:x="1612" fg:w="1"/><text x="39.1966%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="38.9466%" y="629" width="0.0242%" height="15" fill="rgb(249,80,16)" fg:x="1612" fg:w="1"/><text x="39.1966%" y="639.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.05%)</title><rect x="38.9466%" y="709" width="0.0483%" height="15" fill="rgb(206,128,11)" fg:x="1612" fg:w="2"/><text x="39.1966%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="38.9708%" y="693" width="0.0242%" height="15" fill="rgb(212,35,20)" fg:x="1613" fg:w="1"/><text x="39.2208%" y="703.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="38.9708%" y="677" width="0.0242%" height="15" fill="rgb(236,79,13)" fg:x="1613" fg:w="1"/><text x="39.2208%" y="687.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="38.9708%" y="661" width="0.0242%" height="15" fill="rgb(233,123,3)" fg:x="1613" fg:w="1"/><text x="39.2208%" y="671.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="38.9708%" y="645" width="0.0242%" height="15" fill="rgb(214,93,52)" fg:x="1613" fg:w="1"/><text x="39.2208%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.02%)</title><rect x="38.9949%" y="709" width="0.0242%" height="15" fill="rgb(251,37,40)" fg:x="1614" fg:w="1"/><text x="39.2449%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="38.9949%" y="693" width="0.0242%" height="15" fill="rgb(227,80,54)" fg:x="1614" fg:w="1"/><text x="39.2449%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="38.9949%" y="677" width="0.0242%" height="15" fill="rgb(254,48,11)" fg:x="1614" fg:w="1"/><text x="39.2449%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="38.9949%" y="661" width="0.0242%" height="15" fill="rgb(235,193,26)" fg:x="1614" fg:w="1"/><text x="39.2449%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.05%)</title><rect x="39.0191%" y="693" width="0.0483%" height="15" fill="rgb(229,99,21)" fg:x="1615" fg:w="2"/><text x="39.2691%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.05%)</title><rect x="39.0191%" y="677" width="0.0483%" height="15" fill="rgb(211,140,41)" fg:x="1615" fg:w="2"/><text x="39.2691%" y="687.50"></text></g><g><title>core::ptr::write (2 samples, 0.05%)</title><rect x="39.0191%" y="661" width="0.0483%" height="15" fill="rgb(240,227,30)" fg:x="1615" fg:w="2"/><text x="39.2691%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.02%)</title><rect x="39.0674%" y="693" width="0.0242%" height="15" fill="rgb(215,224,45)" fg:x="1617" fg:w="1"/><text x="39.3174%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.02%)</title><rect x="39.0674%" y="677" width="0.0242%" height="15" fill="rgb(206,123,31)" fg:x="1617" fg:w="1"/><text x="39.3174%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="39.0674%" y="661" width="0.0242%" height="15" fill="rgb(210,138,16)" fg:x="1617" fg:w="1"/><text x="39.3174%" y="671.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.02%)</title><rect x="39.0674%" y="645" width="0.0242%" height="15" fill="rgb(228,57,28)" fg:x="1617" fg:w="1"/><text x="39.3174%" y="655.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="39.0674%" y="629" width="0.0242%" height="15" fill="rgb(242,170,10)" fg:x="1617" fg:w="1"/><text x="39.3174%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="39.0916%" y="597" width="0.0242%" height="15" fill="rgb(228,214,39)" fg:x="1618" fg:w="1"/><text x="39.3416%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="39.0916%" y="581" width="0.0242%" height="15" fill="rgb(218,179,33)" fg:x="1618" fg:w="1"/><text x="39.3416%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.22%)</title><rect x="39.1157%" y="533" width="0.2174%" height="15" fill="rgb(235,193,39)" fg:x="1619" fg:w="9"/><text x="39.3657%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.24%)</title><rect x="39.1157%" y="581" width="0.2416%" height="15" fill="rgb(219,221,36)" fg:x="1619" fg:w="10"/><text x="39.3657%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.24%)</title><rect x="39.1157%" y="565" width="0.2416%" height="15" fill="rgb(248,218,19)" fg:x="1619" fg:w="10"/><text x="39.3657%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.24%)</title><rect x="39.1157%" y="549" width="0.2416%" height="15" fill="rgb(205,50,9)" fg:x="1619" fg:w="10"/><text x="39.3657%" y="559.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="39.3332%" y="533" width="0.0242%" height="15" fill="rgb(238,81,28)" fg:x="1628" fg:w="1"/><text x="39.5832%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (12 samples, 0.29%)</title><rect x="39.0916%" y="613" width="0.2899%" height="15" fill="rgb(235,110,19)" fg:x="1618" fg:w="12"/><text x="39.3416%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (11 samples, 0.27%)</title><rect x="39.1157%" y="597" width="0.2658%" height="15" fill="rgb(214,7,14)" fg:x="1619" fg:w="11"/><text x="39.3657%" y="607.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="39.3573%" y="581" width="0.0242%" height="15" fill="rgb(211,77,3)" fg:x="1629" fg:w="1"/><text x="39.6073%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="39.3573%" y="565" width="0.0242%" height="15" fill="rgb(229,5,9)" fg:x="1629" fg:w="1"/><text x="39.6073%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="39.3573%" y="549" width="0.0242%" height="15" fill="rgb(225,90,11)" fg:x="1629" fg:w="1"/><text x="39.6073%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="39.3573%" y="533" width="0.0242%" height="15" fill="rgb(242,56,8)" fg:x="1629" fg:w="1"/><text x="39.6073%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="39.3573%" y="517" width="0.0242%" height="15" fill="rgb(249,212,39)" fg:x="1629" fg:w="1"/><text x="39.6073%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="39.3815%" y="565" width="0.0242%" height="15" fill="rgb(236,90,9)" fg:x="1630" fg:w="1"/><text x="39.6315%" y="575.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (15 samples, 0.36%)</title><rect x="39.0916%" y="645" width="0.3624%" height="15" fill="rgb(206,88,35)" fg:x="1618" fg:w="15"/><text x="39.3416%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.36%)</title><rect x="39.0916%" y="629" width="0.3624%" height="15" fill="rgb(205,126,30)" fg:x="1618" fg:w="15"/><text x="39.3416%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="39.3815%" y="613" width="0.0725%" height="15" fill="rgb(230,176,12)" fg:x="1630" fg:w="3"/><text x="39.6315%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="39.3815%" y="597" width="0.0725%" height="15" fill="rgb(243,19,9)" fg:x="1630" fg:w="3"/><text x="39.6315%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="39.3815%" y="581" width="0.0725%" height="15" fill="rgb(245,171,17)" fg:x="1630" fg:w="3"/><text x="39.6315%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.05%)</title><rect x="39.4057%" y="565" width="0.0483%" height="15" fill="rgb(227,52,21)" fg:x="1631" fg:w="2"/><text x="39.6557%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="39.4057%" y="549" width="0.0483%" height="15" fill="rgb(238,69,14)" fg:x="1631" fg:w="2"/><text x="39.6557%" y="559.50"></text></g><g><title>clear_page_rep (1 samples, 0.02%)</title><rect x="39.4781%" y="453" width="0.0242%" height="15" fill="rgb(241,156,39)" fg:x="1634" fg:w="1"/><text x="39.7281%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (3 samples, 0.07%)</title><rect x="39.4540%" y="645" width="0.0725%" height="15" fill="rgb(212,227,28)" fg:x="1633" fg:w="3"/><text x="39.7040%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (3 samples, 0.07%)</title><rect x="39.4540%" y="629" width="0.0725%" height="15" fill="rgb(209,118,27)" fg:x="1633" fg:w="3"/><text x="39.7040%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.07%)</title><rect x="39.4540%" y="613" width="0.0725%" height="15" fill="rgb(226,102,5)" fg:x="1633" fg:w="3"/><text x="39.7040%" y="623.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.05%)</title><rect x="39.4781%" y="597" width="0.0483%" height="15" fill="rgb(223,34,3)" fg:x="1634" fg:w="2"/><text x="39.7281%" y="607.50"></text></g><g><title>exc_page_fault (2 samples, 0.05%)</title><rect x="39.4781%" y="581" width="0.0483%" height="15" fill="rgb(221,81,38)" fg:x="1634" fg:w="2"/><text x="39.7281%" y="591.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.05%)</title><rect x="39.4781%" y="565" width="0.0483%" height="15" fill="rgb(236,219,28)" fg:x="1634" fg:w="2"/><text x="39.7281%" y="575.50"></text></g><g><title>handle_mm_fault (2 samples, 0.05%)</title><rect x="39.4781%" y="549" width="0.0483%" height="15" fill="rgb(213,200,14)" fg:x="1634" fg:w="2"/><text x="39.7281%" y="559.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="39.4781%" y="533" width="0.0483%" height="15" fill="rgb(240,33,19)" fg:x="1634" fg:w="2"/><text x="39.7281%" y="543.50"></text></g><g><title>do_anonymous_page (2 samples, 0.05%)</title><rect x="39.4781%" y="517" width="0.0483%" height="15" fill="rgb(233,113,27)" fg:x="1634" fg:w="2"/><text x="39.7281%" y="527.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.05%)</title><rect x="39.4781%" y="501" width="0.0483%" height="15" fill="rgb(220,221,18)" fg:x="1634" fg:w="2"/><text x="39.7281%" y="511.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.05%)</title><rect x="39.4781%" y="485" width="0.0483%" height="15" fill="rgb(238,92,8)" fg:x="1634" fg:w="2"/><text x="39.7281%" y="495.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.05%)</title><rect x="39.4781%" y="469" width="0.0483%" height="15" fill="rgb(222,164,16)" fg:x="1634" fg:w="2"/><text x="39.7281%" y="479.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="39.5023%" y="453" width="0.0242%" height="15" fill="rgb(241,119,3)" fg:x="1635" fg:w="1"/><text x="39.7523%" y="463.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (26 samples, 0.63%)</title><rect x="38.9224%" y="757" width="0.6282%" height="15" fill="rgb(241,44,8)" fg:x="1611" fg:w="26"/><text x="39.1724%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (26 samples, 0.63%)</title><rect x="38.9224%" y="741" width="0.6282%" height="15" fill="rgb(230,36,40)" fg:x="1611" fg:w="26"/><text x="39.1724%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (26 samples, 0.63%)</title><rect x="38.9224%" y="725" width="0.6282%" height="15" fill="rgb(243,16,36)" fg:x="1611" fg:w="26"/><text x="39.1724%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (22 samples, 0.53%)</title><rect x="39.0191%" y="709" width="0.5315%" height="15" fill="rgb(231,4,26)" fg:x="1615" fg:w="22"/><text x="39.2691%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (19 samples, 0.46%)</title><rect x="39.0916%" y="693" width="0.4590%" height="15" fill="rgb(240,9,31)" fg:x="1618" fg:w="19"/><text x="39.3416%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (19 samples, 0.46%)</title><rect x="39.0916%" y="677" width="0.4590%" height="15" fill="rgb(207,173,15)" fg:x="1618" fg:w="19"/><text x="39.3416%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (19 samples, 0.46%)</title><rect x="39.0916%" y="661" width="0.4590%" height="15" fill="rgb(224,192,53)" fg:x="1618" fg:w="19"/><text x="39.3416%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.02%)</title><rect x="39.5265%" y="645" width="0.0242%" height="15" fill="rgb(223,67,28)" fg:x="1636" fg:w="1"/><text x="39.7765%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="39.5265%" y="629" width="0.0242%" height="15" fill="rgb(211,20,47)" fg:x="1636" fg:w="1"/><text x="39.7765%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="39.7922%" y="677" width="0.0242%" height="15" fill="rgb(240,228,2)" fg:x="1647" fg:w="1"/><text x="40.0422%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="39.8889%" y="613" width="0.0483%" height="15" fill="rgb(248,151,12)" fg:x="1651" fg:w="2"/><text x="40.1389%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="39.8889%" y="597" width="0.0483%" height="15" fill="rgb(244,8,39)" fg:x="1651" fg:w="2"/><text x="40.1389%" y="607.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.05%)</title><rect x="39.8889%" y="581" width="0.0483%" height="15" fill="rgb(222,26,8)" fg:x="1651" fg:w="2"/><text x="40.1389%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="39.8889%" y="565" width="0.0483%" height="15" fill="rgb(213,106,44)" fg:x="1651" fg:w="2"/><text x="40.1389%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="39.8889%" y="549" width="0.0483%" height="15" fill="rgb(214,129,20)" fg:x="1651" fg:w="2"/><text x="40.1389%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="39.8889%" y="533" width="0.0483%" height="15" fill="rgb(212,32,13)" fg:x="1651" fg:w="2"/><text x="40.1389%" y="543.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="39.8889%" y="517" width="0.0483%" height="15" fill="rgb(208,168,33)" fg:x="1651" fg:w="2"/><text x="40.1389%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.07%)</title><rect x="39.9372%" y="613" width="0.0725%" height="15" fill="rgb(231,207,8)" fg:x="1653" fg:w="3"/><text x="40.1872%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="39.9372%" y="597" width="0.0725%" height="15" fill="rgb(235,219,23)" fg:x="1653" fg:w="3"/><text x="40.1872%" y="607.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="39.9613%" y="581" width="0.0483%" height="15" fill="rgb(226,216,26)" fg:x="1654" fg:w="2"/><text x="40.2113%" y="591.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.05%)</title><rect x="39.9613%" y="565" width="0.0483%" height="15" fill="rgb(239,137,16)" fg:x="1654" fg:w="2"/><text x="40.2113%" y="575.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.17%)</title><rect x="41.0002%" y="517" width="0.1691%" height="15" fill="rgb(207,12,36)" fg:x="1697" fg:w="7"/><text x="41.2502%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.17%)</title><rect x="41.0002%" y="501" width="0.1691%" height="15" fill="rgb(210,214,24)" fg:x="1697" fg:w="7"/><text x="41.2502%" y="511.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="41.1452%" y="485" width="0.0242%" height="15" fill="rgb(206,56,30)" fg:x="1703" fg:w="1"/><text x="41.3952%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.02%)</title><rect x="41.1452%" y="469" width="0.0242%" height="15" fill="rgb(228,143,26)" fg:x="1703" fg:w="1"/><text x="41.3952%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (59 samples, 1.43%)</title><rect x="40.0097%" y="613" width="1.4255%" height="15" fill="rgb(216,218,46)" fg:x="1656" fg:w="59"/><text x="40.2597%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (47 samples, 1.14%)</title><rect x="40.2996%" y="597" width="1.1355%" height="15" fill="rgb(206,6,19)" fg:x="1668" fg:w="47"/><text x="40.5496%" y="607.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 1.09%)</title><rect x="40.3479%" y="581" width="1.0872%" height="15" fill="rgb(239,177,51)" fg:x="1670" fg:w="45"/><text x="40.5979%" y="591.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (45 samples, 1.09%)</title><rect x="40.3479%" y="565" width="1.0872%" height="15" fill="rgb(216,55,25)" fg:x="1670" fg:w="45"/><text x="40.5979%" y="575.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (45 samples, 1.09%)</title><rect x="40.3479%" y="549" width="1.0872%" height="15" fill="rgb(231,163,29)" fg:x="1670" fg:w="45"/><text x="40.5979%" y="559.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (40 samples, 0.97%)</title><rect x="40.4687%" y="533" width="0.9664%" height="15" fill="rgb(232,149,50)" fg:x="1675" fg:w="40"/><text x="40.7187%" y="543.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (11 samples, 0.27%)</title><rect x="41.1694%" y="517" width="0.2658%" height="15" fill="rgb(223,142,48)" fg:x="1704" fg:w="11"/><text x="41.4194%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.10%)</title><rect x="41.6767%" y="533" width="0.0966%" height="15" fill="rgb(245,83,23)" fg:x="1725" fg:w="4"/><text x="41.9267%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.10%)</title><rect x="41.6767%" y="517" width="0.0966%" height="15" fill="rgb(224,63,2)" fg:x="1725" fg:w="4"/><text x="41.9267%" y="527.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.07%)</title><rect x="41.7009%" y="501" width="0.0725%" height="15" fill="rgb(218,65,53)" fg:x="1726" fg:w="3"/><text x="41.9509%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="41.7734%" y="533" width="0.0242%" height="15" fill="rgb(221,84,29)" fg:x="1729" fg:w="1"/><text x="42.0234%" y="543.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="41.7734%" y="517" width="0.0242%" height="15" fill="rgb(234,0,32)" fg:x="1729" fg:w="1"/><text x="42.0234%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="41.7734%" y="501" width="0.0242%" height="15" fill="rgb(206,20,16)" fg:x="1729" fg:w="1"/><text x="42.0234%" y="511.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1 samples, 0.02%)</title><rect x="41.7975%" y="533" width="0.0242%" height="15" fill="rgb(244,172,18)" fg:x="1730" fg:w="1"/><text x="42.0475%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="41.7975%" y="517" width="0.0242%" height="15" fill="rgb(254,133,1)" fg:x="1730" fg:w="1"/><text x="42.0475%" y="527.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create::{{closure}} (1 samples, 0.02%)</title><rect x="41.7975%" y="501" width="0.0242%" height="15" fill="rgb(222,206,41)" fg:x="1730" fg:w="1"/><text x="42.0475%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (89 samples, 2.15%)</title><rect x="39.8164%" y="661" width="2.1503%" height="15" fill="rgb(212,3,42)" fg:x="1648" fg:w="89"/><text x="40.0664%" y="671.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (87 samples, 2.10%)</title><rect x="39.8647%" y="645" width="2.1020%" height="15" fill="rgb(241,11,4)" fg:x="1650" fg:w="87"/><text x="40.1147%" y="655.50">c..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (87 samples, 2.10%)</title><rect x="39.8647%" y="629" width="2.1020%" height="15" fill="rgb(205,19,26)" fg:x="1650" fg:w="87"/><text x="40.1147%" y="639.50">y..</text></g><g><title>core::str::&lt;impl str&gt;::matches (22 samples, 0.53%)</title><rect x="41.4351%" y="613" width="0.5315%" height="15" fill="rgb(210,179,32)" fg:x="1715" fg:w="22"/><text x="41.6851%" y="623.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (22 samples, 0.53%)</title><rect x="41.4351%" y="597" width="0.5315%" height="15" fill="rgb(227,116,49)" fg:x="1715" fg:w="22"/><text x="41.6851%" y="607.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (22 samples, 0.53%)</title><rect x="41.4351%" y="581" width="0.5315%" height="15" fill="rgb(211,146,6)" fg:x="1715" fg:w="22"/><text x="41.6851%" y="591.50"></text></g><g><title>core::str::pattern::StrSearcher::new (22 samples, 0.53%)</title><rect x="41.4351%" y="565" width="0.5315%" height="15" fill="rgb(219,44,39)" fg:x="1715" fg:w="22"/><text x="41.6851%" y="575.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (13 samples, 0.31%)</title><rect x="41.6526%" y="549" width="0.3141%" height="15" fill="rgb(234,128,11)" fg:x="1724" fg:w="13"/><text x="41.9026%" y="559.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (6 samples, 0.14%)</title><rect x="41.8217%" y="533" width="0.1450%" height="15" fill="rgb(220,183,53)" fg:x="1731" fg:w="6"/><text x="42.0717%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 2.20%)</title><rect x="39.7922%" y="741" width="2.1986%" height="15" fill="rgb(213,219,32)" fg:x="1647" fg:w="91"/><text x="40.0422%" y="751.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (91 samples, 2.20%)</title><rect x="39.7922%" y="725" width="2.1986%" height="15" fill="rgb(232,156,16)" fg:x="1647" fg:w="91"/><text x="40.0422%" y="735.50">c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (91 samples, 2.20%)</title><rect x="39.7922%" y="709" width="2.1986%" height="15" fill="rgb(246,135,34)" fg:x="1647" fg:w="91"/><text x="40.0422%" y="719.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (91 samples, 2.20%)</title><rect x="39.7922%" y="693" width="2.1986%" height="15" fill="rgb(241,99,0)" fg:x="1647" fg:w="91"/><text x="40.0422%" y="703.50">c..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (90 samples, 2.17%)</title><rect x="39.8164%" y="677" width="2.1744%" height="15" fill="rgb(222,103,45)" fg:x="1648" fg:w="90"/><text x="40.0664%" y="687.50">c..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.02%)</title><rect x="41.9667%" y="661" width="0.0242%" height="15" fill="rgb(212,57,4)" fg:x="1737" fg:w="1"/><text x="42.2167%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.02%)</title><rect x="41.9667%" y="645" width="0.0242%" height="15" fill="rgb(215,68,47)" fg:x="1737" fg:w="1"/><text x="42.2167%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.02%)</title><rect x="41.9667%" y="629" width="0.0242%" height="15" fill="rgb(230,84,2)" fg:x="1737" fg:w="1"/><text x="42.2167%" y="639.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::ne (1 samples, 0.02%)</title><rect x="41.9667%" y="613" width="0.0242%" height="15" fill="rgb(220,102,14)" fg:x="1737" fg:w="1"/><text x="42.2167%" y="623.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="41.9667%" y="597" width="0.0242%" height="15" fill="rgb(240,10,32)" fg:x="1737" fg:w="1"/><text x="42.2167%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="41.9667%" y="581" width="0.0242%" height="15" fill="rgb(215,47,27)" fg:x="1737" fg:w="1"/><text x="42.2167%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="41.9667%" y="565" width="0.0242%" height="15" fill="rgb(233,188,43)" fg:x="1737" fg:w="1"/><text x="42.2167%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="41.9667%" y="549" width="0.0242%" height="15" fill="rgb(253,190,1)" fg:x="1737" fg:w="1"/><text x="42.2167%" y="559.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.02%)</title><rect x="42.0391%" y="725" width="0.0242%" height="15" fill="rgb(206,114,52)" fg:x="1740" fg:w="1"/><text x="42.2891%" y="735.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.05%)</title><rect x="42.0875%" y="693" width="0.0483%" height="15" fill="rgb(233,120,37)" fg:x="1742" fg:w="2"/><text x="42.3375%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="42.2566%" y="533" width="0.0242%" height="15" fill="rgb(214,52,39)" fg:x="1749" fg:w="1"/><text x="42.5066%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (2 samples, 0.05%)</title><rect x="42.2807%" y="533" width="0.0483%" height="15" fill="rgb(223,80,29)" fg:x="1750" fg:w="2"/><text x="42.5307%" y="543.50"></text></g><g><title>_int_free (4 samples, 0.10%)</title><rect x="42.6673%" y="437" width="0.0966%" height="15" fill="rgb(230,101,40)" fg:x="1766" fg:w="4"/><text x="42.9173%" y="447.50"></text></g><g><title>alloc_perturb (2 samples, 0.05%)</title><rect x="42.9572%" y="421" width="0.0483%" height="15" fill="rgb(219,211,8)" fg:x="1778" fg:w="2"/><text x="43.2072%" y="431.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.10%)</title><rect x="43.0056%" y="421" width="0.0966%" height="15" fill="rgb(252,126,28)" fg:x="1780" fg:w="4"/><text x="43.2556%" y="431.50"></text></g><g><title>exc_page_fault (4 samples, 0.10%)</title><rect x="43.0056%" y="405" width="0.0966%" height="15" fill="rgb(215,56,38)" fg:x="1780" fg:w="4"/><text x="43.2556%" y="415.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.10%)</title><rect x="43.0056%" y="389" width="0.0966%" height="15" fill="rgb(249,55,44)" fg:x="1780" fg:w="4"/><text x="43.2556%" y="399.50"></text></g><g><title>handle_mm_fault (4 samples, 0.10%)</title><rect x="43.0056%" y="373" width="0.0966%" height="15" fill="rgb(220,221,32)" fg:x="1780" fg:w="4"/><text x="43.2556%" y="383.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.10%)</title><rect x="43.0056%" y="357" width="0.0966%" height="15" fill="rgb(212,216,41)" fg:x="1780" fg:w="4"/><text x="43.2556%" y="367.50"></text></g><g><title>do_anonymous_page (4 samples, 0.10%)</title><rect x="43.0056%" y="341" width="0.0966%" height="15" fill="rgb(228,213,43)" fg:x="1780" fg:w="4"/><text x="43.2556%" y="351.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.10%)</title><rect x="43.0056%" y="325" width="0.0966%" height="15" fill="rgb(211,31,26)" fg:x="1780" fg:w="4"/><text x="43.2556%" y="335.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.10%)</title><rect x="43.0056%" y="309" width="0.0966%" height="15" fill="rgb(229,202,19)" fg:x="1780" fg:w="4"/><text x="43.2556%" y="319.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.07%)</title><rect x="43.0297%" y="293" width="0.0725%" height="15" fill="rgb(229,105,46)" fg:x="1781" fg:w="3"/><text x="43.2797%" y="303.50"></text></g><g><title>clear_page_rep (3 samples, 0.07%)</title><rect x="43.0297%" y="277" width="0.0725%" height="15" fill="rgb(235,108,1)" fg:x="1781" fg:w="3"/><text x="43.2797%" y="287.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="43.1022%" y="421" width="0.0242%" height="15" fill="rgb(245,111,35)" fg:x="1784" fg:w="1"/><text x="43.3522%" y="431.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="43.1022%" y="405" width="0.0242%" height="15" fill="rgb(219,185,31)" fg:x="1784" fg:w="1"/><text x="43.3522%" y="415.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="43.1022%" y="389" width="0.0242%" height="15" fill="rgb(214,4,43)" fg:x="1784" fg:w="1"/><text x="43.3522%" y="399.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="43.1022%" y="373" width="0.0242%" height="15" fill="rgb(235,227,40)" fg:x="1784" fg:w="1"/><text x="43.3522%" y="383.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="43.1022%" y="357" width="0.0242%" height="15" fill="rgb(230,88,30)" fg:x="1784" fg:w="1"/><text x="43.3522%" y="367.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="43.1022%" y="341" width="0.0242%" height="15" fill="rgb(216,217,1)" fg:x="1784" fg:w="1"/><text x="43.3522%" y="351.50"></text></g><g><title>tick_sched_handle.isra.0 (1 samples, 0.02%)</title><rect x="43.1022%" y="325" width="0.0242%" height="15" fill="rgb(248,139,50)" fg:x="1784" fg:w="1"/><text x="43.3522%" y="335.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="43.1022%" y="309" width="0.0242%" height="15" fill="rgb(233,1,21)" fg:x="1784" fg:w="1"/><text x="43.3522%" y="319.50"></text></g><g><title>account_process_tick (1 samples, 0.02%)</title><rect x="43.1022%" y="293" width="0.0242%" height="15" fill="rgb(215,183,12)" fg:x="1784" fg:w="1"/><text x="43.3522%" y="303.50"></text></g><g><title>account_user_time (1 samples, 0.02%)</title><rect x="43.1022%" y="277" width="0.0242%" height="15" fill="rgb(229,104,42)" fg:x="1784" fg:w="1"/><text x="43.3522%" y="287.50"></text></g><g><title>cpuacct_account_field (1 samples, 0.02%)</title><rect x="43.1022%" y="261" width="0.0242%" height="15" fill="rgb(243,34,48)" fg:x="1784" fg:w="1"/><text x="43.3522%" y="271.50"></text></g><g><title>__GI___libc_realloc (30 samples, 0.72%)</title><rect x="42.4257%" y="469" width="0.7248%" height="15" fill="rgb(239,11,44)" fg:x="1756" fg:w="30"/><text x="42.6757%" y="479.50"></text></g><g><title>_int_realloc (24 samples, 0.58%)</title><rect x="42.5707%" y="453" width="0.5799%" height="15" fill="rgb(231,98,35)" fg:x="1762" fg:w="24"/><text x="42.8207%" y="463.50"></text></g><g><title>_int_malloc (16 samples, 0.39%)</title><rect x="42.7640%" y="437" width="0.3866%" height="15" fill="rgb(233,28,25)" fg:x="1770" fg:w="16"/><text x="43.0140%" y="447.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="43.1264%" y="421" width="0.0242%" height="15" fill="rgb(234,123,11)" fg:x="1785" fg:w="1"/><text x="43.3764%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (31 samples, 0.75%)</title><rect x="42.4257%" y="517" width="0.7490%" height="15" fill="rgb(220,69,3)" fg:x="1756" fg:w="31"/><text x="42.6757%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (31 samples, 0.75%)</title><rect x="42.4257%" y="501" width="0.7490%" height="15" fill="rgb(214,64,36)" fg:x="1756" fg:w="31"/><text x="42.6757%" y="511.50"></text></g><g><title>alloc::alloc::realloc (31 samples, 0.75%)</title><rect x="42.4257%" y="485" width="0.7490%" height="15" fill="rgb(211,138,32)" fg:x="1756" fg:w="31"/><text x="42.6757%" y="495.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="43.1505%" y="469" width="0.0242%" height="15" fill="rgb(213,118,47)" fg:x="1786" fg:w="1"/><text x="43.4005%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.02%)</title><rect x="43.1505%" y="453" width="0.0242%" height="15" fill="rgb(243,124,49)" fg:x="1786" fg:w="1"/><text x="43.4005%" y="463.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.12%)</title><rect x="43.1747%" y="517" width="0.1208%" height="15" fill="rgb(221,30,28)" fg:x="1787" fg:w="5"/><text x="43.4247%" y="527.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="43.2713%" y="501" width="0.0242%" height="15" fill="rgb(246,37,13)" fg:x="1791" fg:w="1"/><text x="43.5213%" y="511.50"></text></g><g><title>__rdl_alloc (3 samples, 0.07%)</title><rect x="43.2955%" y="517" width="0.0725%" height="15" fill="rgb(249,66,14)" fg:x="1792" fg:w="3"/><text x="43.5455%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.07%)</title><rect x="43.2955%" y="501" width="0.0725%" height="15" fill="rgb(213,166,5)" fg:x="1792" fg:w="3"/><text x="43.5455%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (44 samples, 1.06%)</title><rect x="42.3291%" y="533" width="1.0631%" height="15" fill="rgb(221,66,24)" fg:x="1752" fg:w="44"/><text x="42.5791%" y="543.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="43.3680%" y="517" width="0.0242%" height="15" fill="rgb(210,132,17)" fg:x="1795" fg:w="1"/><text x="43.6180%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (52 samples, 1.26%)</title><rect x="42.1599%" y="597" width="1.2563%" height="15" fill="rgb(243,202,5)" fg:x="1745" fg:w="52"/><text x="42.4099%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (52 samples, 1.26%)</title><rect x="42.1599%" y="581" width="1.2563%" height="15" fill="rgb(233,70,48)" fg:x="1745" fg:w="52"/><text x="42.4099%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (49 samples, 1.18%)</title><rect x="42.2324%" y="565" width="1.1839%" height="15" fill="rgb(238,41,26)" fg:x="1748" fg:w="49"/><text x="42.4824%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (48 samples, 1.16%)</title><rect x="42.2566%" y="549" width="1.1597%" height="15" fill="rgb(241,19,31)" fg:x="1749" fg:w="48"/><text x="42.5066%" y="559.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="43.3921%" y="533" width="0.0242%" height="15" fill="rgb(214,76,10)" fg:x="1796" fg:w="1"/><text x="43.6421%" y="543.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="43.3921%" y="517" width="0.0242%" height="15" fill="rgb(254,202,22)" fg:x="1796" fg:w="1"/><text x="43.6421%" y="527.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="43.3921%" y="501" width="0.0242%" height="15" fill="rgb(214,72,24)" fg:x="1796" fg:w="1"/><text x="43.6421%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="43.4163%" y="597" width="0.0242%" height="15" fill="rgb(221,92,46)" fg:x="1797" fg:w="1"/><text x="43.6663%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect x="43.4163%" y="581" width="0.0242%" height="15" fill="rgb(246,13,50)" fg:x="1797" fg:w="1"/><text x="43.6663%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 samples, 1.33%)</title><rect x="42.1358%" y="693" width="1.3288%" height="15" fill="rgb(240,165,38)" fg:x="1744" fg:w="55"/><text x="42.3858%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (55 samples, 1.33%)</title><rect x="42.1358%" y="677" width="1.3288%" height="15" fill="rgb(241,24,51)" fg:x="1744" fg:w="55"/><text x="42.3858%" y="687.50"></text></g><g><title>alloc::string::String::push_str (55 samples, 1.33%)</title><rect x="42.1358%" y="661" width="1.3288%" height="15" fill="rgb(227,51,44)" fg:x="1744" fg:w="55"/><text x="42.3858%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (55 samples, 1.33%)</title><rect x="42.1358%" y="645" width="1.3288%" height="15" fill="rgb(231,121,3)" fg:x="1744" fg:w="55"/><text x="42.3858%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (55 samples, 1.33%)</title><rect x="42.1358%" y="629" width="1.3288%" height="15" fill="rgb(245,3,41)" fg:x="1744" fg:w="55"/><text x="42.3858%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (55 samples, 1.33%)</title><rect x="42.1358%" y="613" width="1.3288%" height="15" fill="rgb(214,13,26)" fg:x="1744" fg:w="55"/><text x="42.3858%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="43.4404%" y="597" width="0.0242%" height="15" fill="rgb(252,75,11)" fg:x="1798" fg:w="1"/><text x="43.6904%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="43.4404%" y="581" width="0.0242%" height="15" fill="rgb(218,226,17)" fg:x="1798" fg:w="1"/><text x="43.6904%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="43.4646%" y="693" width="0.0242%" height="15" fill="rgb(248,89,38)" fg:x="1799" fg:w="1"/><text x="43.7146%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="43.4646%" y="677" width="0.0242%" height="15" fill="rgb(237,73,46)" fg:x="1799" fg:w="1"/><text x="43.7146%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="43.4888%" y="693" width="0.0242%" height="15" fill="rgb(242,78,33)" fg:x="1800" fg:w="1"/><text x="43.7388%" y="703.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="43.4888%" y="677" width="0.0242%" height="15" fill="rgb(235,60,3)" fg:x="1800" fg:w="1"/><text x="43.7388%" y="687.50"></text></g><g><title>alloc::fmt::format (64 samples, 1.55%)</title><rect x="41.9908%" y="741" width="1.5463%" height="15" fill="rgb(216,172,19)" fg:x="1738" fg:w="64"/><text x="42.2408%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (61 samples, 1.47%)</title><rect x="42.0633%" y="725" width="1.4738%" height="15" fill="rgb(227,6,42)" fg:x="1741" fg:w="61"/><text x="42.3133%" y="735.50"></text></g><g><title>core::fmt::write (60 samples, 1.45%)</title><rect x="42.0875%" y="709" width="1.4496%" height="15" fill="rgb(223,207,42)" fg:x="1742" fg:w="60"/><text x="42.3375%" y="719.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.02%)</title><rect x="43.5129%" y="693" width="0.0242%" height="15" fill="rgb(246,138,30)" fg:x="1801" fg:w="1"/><text x="43.7629%" y="703.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="43.5371%" y="645" width="0.0242%" height="15" fill="rgb(251,199,47)" fg:x="1802" fg:w="1"/><text x="43.7871%" y="655.50"></text></g><g><title>__rust_dealloc (2 samples, 0.05%)</title><rect x="43.5612%" y="645" width="0.0483%" height="15" fill="rgb(228,218,44)" fg:x="1803" fg:w="2"/><text x="43.8112%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.17%)</title><rect x="43.5371%" y="741" width="0.1691%" height="15" fill="rgb(220,68,6)" fg:x="1802" fg:w="7"/><text x="43.7871%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.17%)</title><rect x="43.5371%" y="725" width="0.1691%" height="15" fill="rgb(240,60,26)" fg:x="1802" fg:w="7"/><text x="43.7871%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.17%)</title><rect x="43.5371%" y="709" width="0.1691%" height="15" fill="rgb(211,200,19)" fg:x="1802" fg:w="7"/><text x="43.7871%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.17%)</title><rect x="43.5371%" y="693" width="0.1691%" height="15" fill="rgb(242,145,30)" fg:x="1802" fg:w="7"/><text x="43.7871%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.17%)</title><rect x="43.5371%" y="677" width="0.1691%" height="15" fill="rgb(225,64,13)" fg:x="1802" fg:w="7"/><text x="43.7871%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.17%)</title><rect x="43.5371%" y="661" width="0.1691%" height="15" fill="rgb(218,103,35)" fg:x="1802" fg:w="7"/><text x="43.7871%" y="671.50"></text></g><g><title>_int_free (4 samples, 0.10%)</title><rect x="43.6096%" y="645" width="0.0966%" height="15" fill="rgb(216,93,46)" fg:x="1805" fg:w="4"/><text x="43.8596%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="43.7062%" y="613" width="0.0242%" height="15" fill="rgb(225,159,27)" fg:x="1809" fg:w="1"/><text x="43.9562%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="43.7062%" y="677" width="0.0725%" height="15" fill="rgb(225,204,11)" fg:x="1809" fg:w="3"/><text x="43.9562%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="43.7062%" y="661" width="0.0725%" height="15" fill="rgb(205,56,4)" fg:x="1809" fg:w="3"/><text x="43.9562%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="43.7062%" y="645" width="0.0725%" height="15" fill="rgb(206,6,35)" fg:x="1809" fg:w="3"/><text x="43.9562%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.07%)</title><rect x="43.7062%" y="629" width="0.0725%" height="15" fill="rgb(247,73,52)" fg:x="1809" fg:w="3"/><text x="43.9562%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="43.7304%" y="613" width="0.0483%" height="15" fill="rgb(246,97,4)" fg:x="1810" fg:w="2"/><text x="43.9804%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="43.7787%" y="661" width="0.0242%" height="15" fill="rgb(212,37,15)" fg:x="1812" fg:w="1"/><text x="44.0287%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="43.7787%" y="645" width="0.0242%" height="15" fill="rgb(208,130,40)" fg:x="1812" fg:w="1"/><text x="44.0287%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="43.7787%" y="629" width="0.0242%" height="15" fill="rgb(236,55,29)" fg:x="1812" fg:w="1"/><text x="44.0287%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.14%)</title><rect x="43.7062%" y="693" width="0.1450%" height="15" fill="rgb(209,156,45)" fg:x="1809" fg:w="6"/><text x="43.9562%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.07%)</title><rect x="43.7787%" y="677" width="0.0725%" height="15" fill="rgb(249,107,4)" fg:x="1812" fg:w="3"/><text x="44.0287%" y="687.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.05%)</title><rect x="43.8029%" y="661" width="0.0483%" height="15" fill="rgb(227,7,13)" fg:x="1813" fg:w="2"/><text x="44.0529%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="43.8270%" y="645" width="0.0242%" height="15" fill="rgb(250,129,14)" fg:x="1814" fg:w="1"/><text x="44.0770%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="43.8270%" y="629" width="0.0242%" height="15" fill="rgb(229,92,13)" fg:x="1814" fg:w="1"/><text x="44.0770%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="43.8270%" y="613" width="0.0242%" height="15" fill="rgb(245,98,39)" fg:x="1814" fg:w="1"/><text x="44.0770%" y="623.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="43.8270%" y="597" width="0.0242%" height="15" fill="rgb(234,135,48)" fg:x="1814" fg:w="1"/><text x="44.0770%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="43.9237%" y="661" width="0.0483%" height="15" fill="rgb(230,98,28)" fg:x="1818" fg:w="2"/><text x="44.1737%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="43.9237%" y="645" width="0.0483%" height="15" fill="rgb(223,121,0)" fg:x="1818" fg:w="2"/><text x="44.1737%" y="655.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.10%)</title><rect x="43.9720%" y="661" width="0.0966%" height="15" fill="rgb(234,173,33)" fg:x="1820" fg:w="4"/><text x="44.2220%" y="671.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.10%)</title><rect x="43.9720%" y="645" width="0.0966%" height="15" fill="rgb(245,47,8)" fg:x="1820" fg:w="4"/><text x="44.2220%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.10%)</title><rect x="43.9720%" y="629" width="0.0966%" height="15" fill="rgb(205,17,20)" fg:x="1820" fg:w="4"/><text x="44.2220%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.10%)</title><rect x="43.9720%" y="613" width="0.0966%" height="15" fill="rgb(232,151,16)" fg:x="1820" fg:w="4"/><text x="44.2220%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.10%)</title><rect x="43.9720%" y="597" width="0.0966%" height="15" fill="rgb(208,30,32)" fg:x="1820" fg:w="4"/><text x="44.2220%" y="607.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="44.0445%" y="581" width="0.0242%" height="15" fill="rgb(254,26,3)" fg:x="1823" fg:w="1"/><text x="44.2945%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (16 samples, 0.39%)</title><rect x="43.7062%" y="741" width="0.3866%" height="15" fill="rgb(240,177,30)" fg:x="1809" fg:w="16"/><text x="43.9562%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (16 samples, 0.39%)</title><rect x="43.7062%" y="725" width="0.3866%" height="15" fill="rgb(248,76,44)" fg:x="1809" fg:w="16"/><text x="43.9562%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 0.39%)</title><rect x="43.7062%" y="709" width="0.3866%" height="15" fill="rgb(241,186,54)" fg:x="1809" fg:w="16"/><text x="43.9562%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.24%)</title><rect x="43.8512%" y="693" width="0.2416%" height="15" fill="rgb(249,171,29)" fg:x="1815" fg:w="10"/><text x="44.1012%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.24%)</title><rect x="43.8512%" y="677" width="0.2416%" height="15" fill="rgb(237,151,44)" fg:x="1815" fg:w="10"/><text x="44.1012%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="44.0686%" y="661" width="0.0242%" height="15" fill="rgb(228,174,30)" fg:x="1824" fg:w="1"/><text x="44.3186%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="44.0686%" y="645" width="0.0242%" height="15" fill="rgb(252,14,37)" fg:x="1824" fg:w="1"/><text x="44.3186%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="44.0686%" y="629" width="0.0242%" height="15" fill="rgb(207,111,40)" fg:x="1824" fg:w="1"/><text x="44.3186%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="44.0686%" y="613" width="0.0242%" height="15" fill="rgb(248,171,54)" fg:x="1824" fg:w="1"/><text x="44.3186%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="44.0686%" y="597" width="0.0242%" height="15" fill="rgb(211,127,2)" fg:x="1824" fg:w="1"/><text x="44.3186%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="44.0686%" y="581" width="0.0242%" height="15" fill="rgb(236,87,47)" fg:x="1824" fg:w="1"/><text x="44.3186%" y="591.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="44.0686%" y="565" width="0.0242%" height="15" fill="rgb(223,190,45)" fg:x="1824" fg:w="1"/><text x="44.3186%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.19%)</title><rect x="44.0928%" y="629" width="0.1933%" height="15" fill="rgb(215,5,16)" fg:x="1825" fg:w="8"/><text x="44.3428%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.19%)</title><rect x="44.0928%" y="613" width="0.1933%" height="15" fill="rgb(252,82,33)" fg:x="1825" fg:w="8"/><text x="44.3428%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.19%)</title><rect x="44.0928%" y="597" width="0.1933%" height="15" fill="rgb(247,213,44)" fg:x="1825" fg:w="8"/><text x="44.3428%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="44.2377%" y="581" width="0.0483%" height="15" fill="rgb(205,196,44)" fg:x="1831" fg:w="2"/><text x="44.4877%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="44.2619%" y="565" width="0.0242%" height="15" fill="rgb(237,96,54)" fg:x="1832" fg:w="1"/><text x="44.5119%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (11 samples, 0.27%)</title><rect x="44.0928%" y="661" width="0.2658%" height="15" fill="rgb(230,113,34)" fg:x="1825" fg:w="11"/><text x="44.3428%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (11 samples, 0.27%)</title><rect x="44.0928%" y="645" width="0.2658%" height="15" fill="rgb(221,224,12)" fg:x="1825" fg:w="11"/><text x="44.3428%" y="655.50"></text></g><g><title>core::hash::Hasher::write_u8 (3 samples, 0.07%)</title><rect x="44.2861%" y="629" width="0.0725%" height="15" fill="rgb(219,112,44)" fg:x="1833" fg:w="3"/><text x="44.5361%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="44.2861%" y="613" width="0.0725%" height="15" fill="rgb(210,31,13)" fg:x="1833" fg:w="3"/><text x="44.5361%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="44.2861%" y="597" width="0.0725%" height="15" fill="rgb(230,25,16)" fg:x="1833" fg:w="3"/><text x="44.5361%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="44.2861%" y="581" width="0.0725%" height="15" fill="rgb(246,108,53)" fg:x="1833" fg:w="3"/><text x="44.5361%" y="591.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="44.3102%" y="565" width="0.0483%" height="15" fill="rgb(241,172,50)" fg:x="1834" fg:w="2"/><text x="44.5602%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="44.5035%" y="613" width="0.0242%" height="15" fill="rgb(235,141,10)" fg:x="1842" fg:w="1"/><text x="44.7535%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="44.5035%" y="597" width="0.0242%" height="15" fill="rgb(220,174,43)" fg:x="1842" fg:w="1"/><text x="44.7535%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="44.5277%" y="597" width="0.0725%" height="15" fill="rgb(215,181,40)" fg:x="1843" fg:w="3"/><text x="44.7777%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.29%)</title><rect x="44.3585%" y="661" width="0.2899%" height="15" fill="rgb(230,97,2)" fg:x="1836" fg:w="12"/><text x="44.6085%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.29%)</title><rect x="44.3585%" y="645" width="0.2899%" height="15" fill="rgb(211,25,27)" fg:x="1836" fg:w="12"/><text x="44.6085%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.29%)</title><rect x="44.3585%" y="629" width="0.2899%" height="15" fill="rgb(230,87,26)" fg:x="1836" fg:w="12"/><text x="44.6085%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.12%)</title><rect x="44.5277%" y="613" width="0.1208%" height="15" fill="rgb(227,160,17)" fg:x="1843" fg:w="5"/><text x="44.7777%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="44.6001%" y="597" width="0.0483%" height="15" fill="rgb(244,85,34)" fg:x="1846" fg:w="2"/><text x="44.8501%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (24 samples, 0.58%)</title><rect x="44.0928%" y="677" width="0.5799%" height="15" fill="rgb(207,70,0)" fg:x="1825" fg:w="24"/><text x="44.3428%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="44.6485%" y="661" width="0.0242%" height="15" fill="rgb(223,129,7)" fg:x="1848" fg:w="1"/><text x="44.8985%" y="671.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="44.6485%" y="645" width="0.0242%" height="15" fill="rgb(246,105,7)" fg:x="1848" fg:w="1"/><text x="44.8985%" y="655.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="44.6485%" y="629" width="0.0242%" height="15" fill="rgb(215,154,42)" fg:x="1848" fg:w="1"/><text x="44.8985%" y="639.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="44.6485%" y="613" width="0.0242%" height="15" fill="rgb(220,215,30)" fg:x="1848" fg:w="1"/><text x="44.8985%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="44.6968%" y="613" width="0.0483%" height="15" fill="rgb(228,81,51)" fg:x="1850" fg:w="2"/><text x="44.9468%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.05%)</title><rect x="44.6968%" y="597" width="0.0483%" height="15" fill="rgb(247,71,54)" fg:x="1850" fg:w="2"/><text x="44.9468%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="44.6726%" y="645" width="0.0966%" height="15" fill="rgb(234,176,34)" fg:x="1849" fg:w="4"/><text x="44.9226%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="44.6726%" y="629" width="0.0966%" height="15" fill="rgb(241,103,54)" fg:x="1849" fg:w="4"/><text x="44.9226%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="44.7451%" y="613" width="0.0242%" height="15" fill="rgb(228,22,34)" fg:x="1852" fg:w="1"/><text x="44.9951%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="44.7451%" y="597" width="0.0242%" height="15" fill="rgb(241,179,48)" fg:x="1852" fg:w="1"/><text x="44.9951%" y="607.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.05%)</title><rect x="44.7693%" y="645" width="0.0483%" height="15" fill="rgb(235,167,37)" fg:x="1853" fg:w="2"/><text x="45.0193%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="44.7693%" y="629" width="0.0483%" height="15" fill="rgb(213,109,30)" fg:x="1853" fg:w="2"/><text x="45.0193%" y="639.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.05%)</title><rect x="44.7693%" y="613" width="0.0483%" height="15" fill="rgb(222,172,16)" fg:x="1853" fg:w="2"/><text x="45.0193%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="44.7693%" y="597" width="0.0483%" height="15" fill="rgb(233,192,5)" fg:x="1853" fg:w="2"/><text x="45.0193%" y="607.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="44.7693%" y="581" width="0.0483%" height="15" fill="rgb(247,189,41)" fg:x="1853" fg:w="2"/><text x="45.0193%" y="591.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="44.7693%" y="565" width="0.0483%" height="15" fill="rgb(218,134,47)" fg:x="1853" fg:w="2"/><text x="45.0193%" y="575.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (37 samples, 0.89%)</title><rect x="44.0928%" y="741" width="0.8939%" height="15" fill="rgb(216,29,3)" fg:x="1825" fg:w="37"/><text x="44.3428%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (37 samples, 0.89%)</title><rect x="44.0928%" y="725" width="0.8939%" height="15" fill="rgb(246,140,12)" fg:x="1825" fg:w="37"/><text x="44.3428%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (37 samples, 0.89%)</title><rect x="44.0928%" y="709" width="0.8939%" height="15" fill="rgb(230,136,11)" fg:x="1825" fg:w="37"/><text x="44.3428%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (37 samples, 0.89%)</title><rect x="44.0928%" y="693" width="0.8939%" height="15" fill="rgb(247,22,47)" fg:x="1825" fg:w="37"/><text x="44.3428%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.31%)</title><rect x="44.6726%" y="677" width="0.3141%" height="15" fill="rgb(218,84,22)" fg:x="1849" fg:w="13"/><text x="44.9226%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.31%)</title><rect x="44.6726%" y="661" width="0.3141%" height="15" fill="rgb(216,87,39)" fg:x="1849" fg:w="13"/><text x="44.9226%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (7 samples, 0.17%)</title><rect x="44.8176%" y="645" width="0.1691%" height="15" fill="rgb(221,178,8)" fg:x="1855" fg:w="7"/><text x="45.0676%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (7 samples, 0.17%)</title><rect x="44.8176%" y="629" width="0.1691%" height="15" fill="rgb(230,42,11)" fg:x="1855" fg:w="7"/><text x="45.0676%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (7 samples, 0.17%)</title><rect x="44.8176%" y="613" width="0.1691%" height="15" fill="rgb(237,229,4)" fg:x="1855" fg:w="7"/><text x="45.0676%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.17%)</title><rect x="44.8176%" y="597" width="0.1691%" height="15" fill="rgb(222,31,33)" fg:x="1855" fg:w="7"/><text x="45.0676%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (7 samples, 0.17%)</title><rect x="44.8176%" y="581" width="0.1691%" height="15" fill="rgb(210,17,39)" fg:x="1855" fg:w="7"/><text x="45.0676%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (7 samples, 0.17%)</title><rect x="44.8176%" y="565" width="0.1691%" height="15" fill="rgb(244,93,20)" fg:x="1855" fg:w="7"/><text x="45.0676%" y="575.50"></text></g><g><title>core::core_arch::simd::i8x16::new (7 samples, 0.17%)</title><rect x="44.8176%" y="549" width="0.1691%" height="15" fill="rgb(210,40,47)" fg:x="1855" fg:w="7"/><text x="45.0676%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="45.0109%" y="677" width="0.0242%" height="15" fill="rgb(239,211,47)" fg:x="1863" fg:w="1"/><text x="45.2609%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="45.0109%" y="661" width="0.0242%" height="15" fill="rgb(251,223,49)" fg:x="1863" fg:w="1"/><text x="45.2609%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="45.0109%" y="645" width="0.0242%" height="15" fill="rgb(221,149,5)" fg:x="1863" fg:w="1"/><text x="45.2609%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="45.0109%" y="629" width="0.0242%" height="15" fill="rgb(219,224,51)" fg:x="1863" fg:w="1"/><text x="45.2609%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="45.0109%" y="613" width="0.0242%" height="15" fill="rgb(223,7,8)" fg:x="1863" fg:w="1"/><text x="45.2609%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="45.0109%" y="597" width="0.0242%" height="15" fill="rgb(241,217,22)" fg:x="1863" fg:w="1"/><text x="45.2609%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="45.0109%" y="581" width="0.0242%" height="15" fill="rgb(248,209,0)" fg:x="1863" fg:w="1"/><text x="45.2609%" y="591.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.05%)</title><rect x="45.0109%" y="693" width="0.0483%" height="15" fill="rgb(217,205,4)" fg:x="1863" fg:w="2"/><text x="45.2609%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="45.0350%" y="677" width="0.0242%" height="15" fill="rgb(228,124,39)" fg:x="1864" fg:w="1"/><text x="45.2850%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="45.0350%" y="661" width="0.0242%" height="15" fill="rgb(250,116,42)" fg:x="1864" fg:w="1"/><text x="45.2850%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="45.0350%" y="645" width="0.0242%" height="15" fill="rgb(223,202,9)" fg:x="1864" fg:w="1"/><text x="45.2850%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="45.0350%" y="629" width="0.0242%" height="15" fill="rgb(242,222,40)" fg:x="1864" fg:w="1"/><text x="45.2850%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="45.0350%" y="613" width="0.0242%" height="15" fill="rgb(229,99,46)" fg:x="1864" fg:w="1"/><text x="45.2850%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.05%)</title><rect x="45.0592%" y="693" width="0.0483%" height="15" fill="rgb(225,56,46)" fg:x="1865" fg:w="2"/><text x="45.3092%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="45.0592%" y="677" width="0.0483%" height="15" fill="rgb(227,94,5)" fg:x="1865" fg:w="2"/><text x="45.3092%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="45.0592%" y="661" width="0.0483%" height="15" fill="rgb(205,112,38)" fg:x="1865" fg:w="2"/><text x="45.3092%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="45.0592%" y="645" width="0.0483%" height="15" fill="rgb(231,133,46)" fg:x="1865" fg:w="2"/><text x="45.3092%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.05%)</title><rect x="45.0592%" y="629" width="0.0483%" height="15" fill="rgb(217,16,9)" fg:x="1865" fg:w="2"/><text x="45.3092%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.05%)</title><rect x="45.0592%" y="613" width="0.0483%" height="15" fill="rgb(249,173,9)" fg:x="1865" fg:w="2"/><text x="45.3092%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.05%)</title><rect x="45.0592%" y="597" width="0.0483%" height="15" fill="rgb(205,163,53)" fg:x="1865" fg:w="2"/><text x="45.3092%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.05%)</title><rect x="45.0592%" y="581" width="0.0483%" height="15" fill="rgb(217,54,41)" fg:x="1865" fg:w="2"/><text x="45.3092%" y="591.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.05%)</title><rect x="45.0592%" y="565" width="0.0483%" height="15" fill="rgb(228,216,12)" fg:x="1865" fg:w="2"/><text x="45.3092%" y="575.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (7 samples, 0.17%)</title><rect x="44.9867%" y="741" width="0.1691%" height="15" fill="rgb(244,228,15)" fg:x="1862" fg:w="7"/><text x="45.2367%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (7 samples, 0.17%)</title><rect x="44.9867%" y="725" width="0.1691%" height="15" fill="rgb(221,176,53)" fg:x="1862" fg:w="7"/><text x="45.2367%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.14%)</title><rect x="45.0109%" y="709" width="0.1450%" height="15" fill="rgb(205,94,34)" fg:x="1863" fg:w="6"/><text x="45.2609%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.05%)</title><rect x="45.1075%" y="693" width="0.0483%" height="15" fill="rgb(213,110,48)" fg:x="1867" fg:w="2"/><text x="45.3575%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.05%)</title><rect x="45.1075%" y="677" width="0.0483%" height="15" fill="rgb(236,142,28)" fg:x="1867" fg:w="2"/><text x="45.3575%" y="687.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.02%)</title><rect x="45.1317%" y="661" width="0.0242%" height="15" fill="rgb(225,135,29)" fg:x="1868" fg:w="1"/><text x="45.3817%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="45.2283%" y="661" width="0.0483%" height="15" fill="rgb(252,45,31)" fg:x="1872" fg:w="2"/><text x="45.4783%" y="671.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="45.2525%" y="645" width="0.0242%" height="15" fill="rgb(211,187,50)" fg:x="1873" fg:w="1"/><text x="45.5025%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="45.2525%" y="629" width="0.0242%" height="15" fill="rgb(229,109,7)" fg:x="1873" fg:w="1"/><text x="45.5025%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.07%)</title><rect x="45.2766%" y="597" width="0.0725%" height="15" fill="rgb(251,131,51)" fg:x="1874" fg:w="3"/><text x="45.5266%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.07%)</title><rect x="45.2766%" y="581" width="0.0725%" height="15" fill="rgb(251,180,35)" fg:x="1874" fg:w="3"/><text x="45.5266%" y="591.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.07%)</title><rect x="45.2766%" y="565" width="0.0725%" height="15" fill="rgb(211,46,32)" fg:x="1874" fg:w="3"/><text x="45.5266%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.07%)</title><rect x="45.2766%" y="549" width="0.0725%" height="15" fill="rgb(248,123,17)" fg:x="1874" fg:w="3"/><text x="45.5266%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.07%)</title><rect x="45.2766%" y="533" width="0.0725%" height="15" fill="rgb(227,141,18)" fg:x="1874" fg:w="3"/><text x="45.5266%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.07%)</title><rect x="45.2766%" y="517" width="0.0725%" height="15" fill="rgb(216,102,9)" fg:x="1874" fg:w="3"/><text x="45.5266%" y="527.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="45.3250%" y="501" width="0.0242%" height="15" fill="rgb(253,47,13)" fg:x="1876" fg:w="1"/><text x="45.5750%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.10%)</title><rect x="45.3491%" y="597" width="0.0966%" height="15" fill="rgb(226,93,23)" fg:x="1877" fg:w="4"/><text x="45.5991%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.10%)</title><rect x="45.3491%" y="581" width="0.0966%" height="15" fill="rgb(247,104,17)" fg:x="1877" fg:w="4"/><text x="45.5991%" y="591.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="45.3974%" y="565" width="0.0483%" height="15" fill="rgb(233,203,26)" fg:x="1879" fg:w="2"/><text x="45.6474%" y="575.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.05%)</title><rect x="45.3974%" y="549" width="0.0483%" height="15" fill="rgb(244,98,49)" fg:x="1879" fg:w="2"/><text x="45.6474%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="45.4216%" y="533" width="0.0242%" height="15" fill="rgb(235,134,22)" fg:x="1880" fg:w="1"/><text x="45.6716%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="46.6296%" y="501" width="0.0242%" height="15" fill="rgb(221,70,32)" fg:x="1930" fg:w="1"/><text x="46.8796%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.02%)</title><rect x="46.6296%" y="485" width="0.0242%" height="15" fill="rgb(238,15,50)" fg:x="1930" fg:w="1"/><text x="46.8796%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.02%)</title><rect x="46.6296%" y="469" width="0.0242%" height="15" fill="rgb(215,221,48)" fg:x="1930" fg:w="1"/><text x="46.8796%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="46.6296%" y="453" width="0.0242%" height="15" fill="rgb(236,73,3)" fg:x="1930" fg:w="1"/><text x="46.8796%" y="463.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (1 samples, 0.02%)</title><rect x="46.6538%" y="501" width="0.0242%" height="15" fill="rgb(250,107,11)" fg:x="1931" fg:w="1"/><text x="46.9038%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.10%)</title><rect x="46.6779%" y="501" width="0.0966%" height="15" fill="rgb(242,39,14)" fg:x="1932" fg:w="4"/><text x="46.9279%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.10%)</title><rect x="46.6779%" y="485" width="0.0966%" height="15" fill="rgb(248,164,37)" fg:x="1932" fg:w="4"/><text x="46.9279%" y="495.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.05%)</title><rect x="46.7263%" y="469" width="0.0483%" height="15" fill="rgb(217,60,12)" fg:x="1934" fg:w="2"/><text x="46.9763%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.05%)</title><rect x="46.7263%" y="453" width="0.0483%" height="15" fill="rgb(240,125,29)" fg:x="1934" fg:w="2"/><text x="46.9763%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (62 samples, 1.50%)</title><rect x="45.4458%" y="597" width="1.4979%" height="15" fill="rgb(208,207,28)" fg:x="1881" fg:w="62"/><text x="45.6958%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (48 samples, 1.16%)</title><rect x="45.7840%" y="581" width="1.1597%" height="15" fill="rgb(209,159,27)" fg:x="1895" fg:w="48"/><text x="46.0340%" y="591.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 1.14%)</title><rect x="45.8082%" y="565" width="1.1355%" height="15" fill="rgb(251,176,53)" fg:x="1896" fg:w="47"/><text x="46.0582%" y="575.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (47 samples, 1.14%)</title><rect x="45.8082%" y="549" width="1.1355%" height="15" fill="rgb(211,85,7)" fg:x="1896" fg:w="47"/><text x="46.0582%" y="559.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (47 samples, 1.14%)</title><rect x="45.8082%" y="533" width="1.1355%" height="15" fill="rgb(216,64,54)" fg:x="1896" fg:w="47"/><text x="46.0582%" y="543.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (40 samples, 0.97%)</title><rect x="45.9773%" y="517" width="0.9664%" height="15" fill="rgb(217,54,24)" fg:x="1903" fg:w="40"/><text x="46.2273%" y="527.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (7 samples, 0.17%)</title><rect x="46.7746%" y="501" width="0.1691%" height="15" fill="rgb(208,206,53)" fg:x="1936" fg:w="7"/><text x="47.0246%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.14%)</title><rect x="47.1128%" y="517" width="0.1450%" height="15" fill="rgb(251,74,39)" fg:x="1950" fg:w="6"/><text x="47.3628%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.14%)</title><rect x="47.1128%" y="501" width="0.1450%" height="15" fill="rgb(226,47,5)" fg:x="1950" fg:w="6"/><text x="47.3628%" y="511.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="47.2095%" y="485" width="0.0483%" height="15" fill="rgb(234,111,33)" fg:x="1954" fg:w="2"/><text x="47.4595%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.07%)</title><rect x="47.2578%" y="517" width="0.0725%" height="15" fill="rgb(251,14,10)" fg:x="1956" fg:w="3"/><text x="47.5078%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.07%)</title><rect x="47.2578%" y="501" width="0.0725%" height="15" fill="rgb(232,43,0)" fg:x="1956" fg:w="3"/><text x="47.5078%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="47.3061%" y="485" width="0.0242%" height="15" fill="rgb(222,68,43)" fg:x="1958" fg:w="1"/><text x="47.5561%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="47.3061%" y="469" width="0.0242%" height="15" fill="rgb(217,24,23)" fg:x="1958" fg:w="1"/><text x="47.5561%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="47.3061%" y="453" width="0.0242%" height="15" fill="rgb(229,209,14)" fg:x="1958" fg:w="1"/><text x="47.5561%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (89 samples, 2.15%)</title><rect x="45.2766%" y="645" width="2.1503%" height="15" fill="rgb(250,149,48)" fg:x="1874" fg:w="89"/><text x="45.5266%" y="655.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (89 samples, 2.15%)</title><rect x="45.2766%" y="629" width="2.1503%" height="15" fill="rgb(210,120,37)" fg:x="1874" fg:w="89"/><text x="45.5266%" y="639.50">c..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (89 samples, 2.15%)</title><rect x="45.2766%" y="613" width="2.1503%" height="15" fill="rgb(210,21,8)" fg:x="1874" fg:w="89"/><text x="45.5266%" y="623.50">y..</text></g><g><title>core::str::&lt;impl str&gt;::matches (20 samples, 0.48%)</title><rect x="46.9437%" y="597" width="0.4832%" height="15" fill="rgb(243,145,7)" fg:x="1943" fg:w="20"/><text x="47.1937%" y="607.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (20 samples, 0.48%)</title><rect x="46.9437%" y="581" width="0.4832%" height="15" fill="rgb(238,178,32)" fg:x="1943" fg:w="20"/><text x="47.1937%" y="591.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (20 samples, 0.48%)</title><rect x="46.9437%" y="565" width="0.4832%" height="15" fill="rgb(222,4,10)" fg:x="1943" fg:w="20"/><text x="47.1937%" y="575.50"></text></g><g><title>core::str::pattern::StrSearcher::new (20 samples, 0.48%)</title><rect x="46.9437%" y="549" width="0.4832%" height="15" fill="rgb(239,7,37)" fg:x="1943" fg:w="20"/><text x="47.1937%" y="559.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (13 samples, 0.31%)</title><rect x="47.1128%" y="533" width="0.3141%" height="15" fill="rgb(215,31,37)" fg:x="1950" fg:w="13"/><text x="47.3628%" y="543.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (4 samples, 0.10%)</title><rect x="47.3303%" y="517" width="0.0966%" height="15" fill="rgb(224,83,33)" fg:x="1959" fg:w="4"/><text x="47.5803%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 samples, 2.22%)</title><rect x="45.2283%" y="725" width="2.2228%" height="15" fill="rgb(239,55,3)" fg:x="1872" fg:w="92"/><text x="45.4783%" y="735.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (92 samples, 2.22%)</title><rect x="45.2283%" y="709" width="2.2228%" height="15" fill="rgb(247,92,11)" fg:x="1872" fg:w="92"/><text x="45.4783%" y="719.50">c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (92 samples, 2.22%)</title><rect x="45.2283%" y="693" width="2.2228%" height="15" fill="rgb(239,200,7)" fg:x="1872" fg:w="92"/><text x="45.4783%" y="703.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (92 samples, 2.22%)</title><rect x="45.2283%" y="677" width="2.2228%" height="15" fill="rgb(227,115,8)" fg:x="1872" fg:w="92"/><text x="45.4783%" y="687.50">c..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (90 samples, 2.17%)</title><rect x="45.2766%" y="661" width="2.1744%" height="15" fill="rgb(215,189,27)" fg:x="1874" fg:w="90"/><text x="45.5266%" y="671.50">c..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.02%)</title><rect x="47.4269%" y="645" width="0.0242%" height="15" fill="rgb(251,216,39)" fg:x="1963" fg:w="1"/><text x="47.6769%" y="655.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.02%)</title><rect x="47.4511%" y="709" width="0.0242%" height="15" fill="rgb(207,29,47)" fg:x="1964" fg:w="1"/><text x="47.7011%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.02%)</title><rect x="47.4511%" y="693" width="0.0242%" height="15" fill="rgb(210,71,34)" fg:x="1964" fg:w="1"/><text x="47.7011%" y="703.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.02%)</title><rect x="47.4511%" y="677" width="0.0242%" height="15" fill="rgb(253,217,51)" fg:x="1964" fg:w="1"/><text x="47.7011%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="47.4511%" y="661" width="0.0242%" height="15" fill="rgb(222,117,46)" fg:x="1964" fg:w="1"/><text x="47.7011%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="47.4511%" y="645" width="0.0242%" height="15" fill="rgb(226,132,6)" fg:x="1964" fg:w="1"/><text x="47.7011%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="47.4511%" y="629" width="0.0242%" height="15" fill="rgb(254,145,51)" fg:x="1964" fg:w="1"/><text x="47.7011%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="47.5719%" y="549" width="0.0242%" height="15" fill="rgb(231,199,27)" fg:x="1969" fg:w="1"/><text x="47.8219%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="47.6202%" y="517" width="0.0242%" height="15" fill="rgb(245,158,14)" fg:x="1971" fg:w="1"/><text x="47.8702%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.05%)</title><rect x="47.8376%" y="421" width="0.0483%" height="15" fill="rgb(240,113,14)" fg:x="1980" fg:w="2"/><text x="48.0876%" y="431.50"></text></g><g><title>_int_free (2 samples, 0.05%)</title><rect x="47.8860%" y="421" width="0.0483%" height="15" fill="rgb(210,20,13)" fg:x="1982" fg:w="2"/><text x="48.1360%" y="431.50"></text></g><g><title>__GI___libc_realloc (17 samples, 0.41%)</title><rect x="47.7168%" y="453" width="0.4107%" height="15" fill="rgb(241,144,13)" fg:x="1975" fg:w="17"/><text x="47.9668%" y="463.50"></text></g><g><title>_int_realloc (16 samples, 0.39%)</title><rect x="47.7410%" y="437" width="0.3866%" height="15" fill="rgb(235,43,34)" fg:x="1976" fg:w="16"/><text x="47.9910%" y="447.50"></text></g><g><title>_int_malloc (8 samples, 0.19%)</title><rect x="47.9343%" y="421" width="0.1933%" height="15" fill="rgb(208,36,20)" fg:x="1984" fg:w="8"/><text x="48.1843%" y="431.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="48.1034%" y="405" width="0.0242%" height="15" fill="rgb(239,204,10)" fg:x="1991" fg:w="1"/><text x="48.3534%" y="415.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="48.1034%" y="389" width="0.0242%" height="15" fill="rgb(217,84,43)" fg:x="1991" fg:w="1"/><text x="48.3534%" y="399.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="48.1034%" y="373" width="0.0242%" height="15" fill="rgb(241,170,50)" fg:x="1991" fg:w="1"/><text x="48.3534%" y="383.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="48.1034%" y="357" width="0.0242%" height="15" fill="rgb(226,205,29)" fg:x="1991" fg:w="1"/><text x="48.3534%" y="367.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="48.1034%" y="341" width="0.0242%" height="15" fill="rgb(233,113,1)" fg:x="1991" fg:w="1"/><text x="48.3534%" y="351.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="48.1034%" y="325" width="0.0242%" height="15" fill="rgb(253,98,13)" fg:x="1991" fg:w="1"/><text x="48.3534%" y="335.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="48.1034%" y="309" width="0.0242%" height="15" fill="rgb(211,115,12)" fg:x="1991" fg:w="1"/><text x="48.3534%" y="319.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="48.1034%" y="293" width="0.0242%" height="15" fill="rgb(208,12,16)" fg:x="1991" fg:w="1"/><text x="48.3534%" y="303.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="48.1034%" y="277" width="0.0242%" height="15" fill="rgb(237,193,54)" fg:x="1991" fg:w="1"/><text x="48.3534%" y="287.50"></text></g><g><title>clear_page_rep (1 samples, 0.02%)</title><rect x="48.1034%" y="261" width="0.0242%" height="15" fill="rgb(243,22,42)" fg:x="1991" fg:w="1"/><text x="48.3534%" y="271.50"></text></g><g><title>__rdl_realloc (4 samples, 0.10%)</title><rect x="48.1276%" y="453" width="0.0966%" height="15" fill="rgb(233,151,36)" fg:x="1992" fg:w="4"/><text x="48.3776%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.07%)</title><rect x="48.1517%" y="437" width="0.0725%" height="15" fill="rgb(237,57,45)" fg:x="1993" fg:w="3"/><text x="48.4017%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (22 samples, 0.53%)</title><rect x="47.7168%" y="501" width="0.5315%" height="15" fill="rgb(221,88,17)" fg:x="1975" fg:w="22"/><text x="47.9668%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (22 samples, 0.53%)</title><rect x="47.7168%" y="485" width="0.5315%" height="15" fill="rgb(230,79,15)" fg:x="1975" fg:w="22"/><text x="47.9668%" y="495.50"></text></g><g><title>alloc::alloc::realloc (22 samples, 0.53%)</title><rect x="47.7168%" y="469" width="0.5315%" height="15" fill="rgb(213,57,13)" fg:x="1975" fg:w="22"/><text x="47.9668%" y="479.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="48.2242%" y="453" width="0.0242%" height="15" fill="rgb(222,116,39)" fg:x="1996" fg:w="1"/><text x="48.4742%" y="463.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="48.2484%" y="501" width="0.0242%" height="15" fill="rgb(245,107,2)" fg:x="1997" fg:w="1"/><text x="48.4984%" y="511.50"></text></g><g><title>__rdl_alloc (3 samples, 0.07%)</title><rect x="48.2725%" y="501" width="0.0725%" height="15" fill="rgb(238,1,10)" fg:x="1998" fg:w="3"/><text x="48.5225%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.07%)</title><rect x="48.2725%" y="485" width="0.0725%" height="15" fill="rgb(249,4,48)" fg:x="1998" fg:w="3"/><text x="48.5225%" y="495.50"></text></g><g><title>__rust_alloc (2 samples, 0.05%)</title><rect x="48.3450%" y="501" width="0.0483%" height="15" fill="rgb(223,151,18)" fg:x="2001" fg:w="2"/><text x="48.5950%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (33 samples, 0.80%)</title><rect x="47.6444%" y="517" width="0.7973%" height="15" fill="rgb(227,65,43)" fg:x="1972" fg:w="33"/><text x="47.8944%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.05%)</title><rect x="48.3933%" y="501" width="0.0483%" height="15" fill="rgb(218,40,45)" fg:x="2003" fg:w="2"/><text x="48.6433%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (39 samples, 0.94%)</title><rect x="47.5477%" y="581" width="0.9423%" height="15" fill="rgb(252,121,31)" fg:x="1968" fg:w="39"/><text x="47.7977%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (39 samples, 0.94%)</title><rect x="47.5477%" y="565" width="0.9423%" height="15" fill="rgb(219,158,43)" fg:x="1968" fg:w="39"/><text x="47.7977%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (37 samples, 0.89%)</title><rect x="47.5960%" y="549" width="0.8939%" height="15" fill="rgb(231,162,42)" fg:x="1970" fg:w="37"/><text x="47.8460%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (36 samples, 0.87%)</title><rect x="47.6202%" y="533" width="0.8698%" height="15" fill="rgb(217,179,25)" fg:x="1971" fg:w="36"/><text x="47.8702%" y="543.50"></text></g><g><title>core::cmp::max (2 samples, 0.05%)</title><rect x="48.4417%" y="517" width="0.0483%" height="15" fill="rgb(206,212,31)" fg:x="2005" fg:w="2"/><text x="48.6917%" y="527.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.05%)</title><rect x="48.4417%" y="501" width="0.0483%" height="15" fill="rgb(235,144,12)" fg:x="2005" fg:w="2"/><text x="48.6917%" y="511.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.05%)</title><rect x="48.4417%" y="485" width="0.0483%" height="15" fill="rgb(213,51,10)" fg:x="2005" fg:w="2"/><text x="48.6917%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect x="48.4900%" y="565" width="0.0242%" height="15" fill="rgb(231,145,14)" fg:x="2007" fg:w="1"/><text x="48.7400%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="48.4900%" y="581" width="0.0483%" height="15" fill="rgb(235,15,28)" fg:x="2007" fg:w="2"/><text x="48.7400%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="48.5141%" y="565" width="0.0242%" height="15" fill="rgb(237,206,10)" fg:x="2008" fg:w="1"/><text x="48.7641%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (42 samples, 1.01%)</title><rect x="47.5477%" y="677" width="1.0147%" height="15" fill="rgb(236,227,27)" fg:x="1968" fg:w="42"/><text x="47.7977%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (42 samples, 1.01%)</title><rect x="47.5477%" y="661" width="1.0147%" height="15" fill="rgb(246,83,35)" fg:x="1968" fg:w="42"/><text x="47.7977%" y="671.50"></text></g><g><title>alloc::string::String::push_str (42 samples, 1.01%)</title><rect x="47.5477%" y="645" width="1.0147%" height="15" fill="rgb(220,136,24)" fg:x="1968" fg:w="42"/><text x="47.7977%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (42 samples, 1.01%)</title><rect x="47.5477%" y="629" width="1.0147%" height="15" fill="rgb(217,3,25)" fg:x="1968" fg:w="42"/><text x="47.7977%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (42 samples, 1.01%)</title><rect x="47.5477%" y="613" width="1.0147%" height="15" fill="rgb(239,24,14)" fg:x="1968" fg:w="42"/><text x="47.7977%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (42 samples, 1.01%)</title><rect x="47.5477%" y="597" width="1.0147%" height="15" fill="rgb(244,16,53)" fg:x="1968" fg:w="42"/><text x="47.7977%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="48.5383%" y="581" width="0.0242%" height="15" fill="rgb(208,175,44)" fg:x="2009" fg:w="1"/><text x="48.7883%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="48.5383%" y="565" width="0.0242%" height="15" fill="rgb(252,18,48)" fg:x="2009" fg:w="1"/><text x="48.7883%" y="575.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="48.5625%" y="677" width="0.0242%" height="15" fill="rgb(234,199,32)" fg:x="2010" fg:w="1"/><text x="48.8125%" y="687.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.07%)</title><rect x="48.5866%" y="677" width="0.0725%" height="15" fill="rgb(225,77,54)" fg:x="2011" fg:w="3"/><text x="48.8366%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="48.6591%" y="677" width="0.0242%" height="15" fill="rgb(225,42,25)" fg:x="2014" fg:w="1"/><text x="48.9091%" y="687.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="48.6591%" y="661" width="0.0242%" height="15" fill="rgb(242,227,46)" fg:x="2014" fg:w="1"/><text x="48.9091%" y="671.50"></text></g><g><title>alloc::fmt::format (52 samples, 1.26%)</title><rect x="47.4511%" y="725" width="1.2563%" height="15" fill="rgb(246,197,35)" fg:x="1964" fg:w="52"/><text x="47.7011%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (51 samples, 1.23%)</title><rect x="47.4752%" y="709" width="1.2322%" height="15" fill="rgb(215,159,26)" fg:x="1965" fg:w="51"/><text x="47.7252%" y="719.50"></text></g><g><title>core::fmt::write (50 samples, 1.21%)</title><rect x="47.4994%" y="693" width="1.2080%" height="15" fill="rgb(212,194,50)" fg:x="1966" fg:w="50"/><text x="47.7494%" y="703.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.02%)</title><rect x="48.6833%" y="677" width="0.0242%" height="15" fill="rgb(246,132,1)" fg:x="2015" fg:w="1"/><text x="48.9333%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.12%)</title><rect x="48.7074%" y="725" width="0.1208%" height="15" fill="rgb(217,71,7)" fg:x="2016" fg:w="5"/><text x="48.9574%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.12%)</title><rect x="48.7074%" y="709" width="0.1208%" height="15" fill="rgb(252,59,32)" fg:x="2016" fg:w="5"/><text x="48.9574%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.12%)</title><rect x="48.7074%" y="693" width="0.1208%" height="15" fill="rgb(253,204,25)" fg:x="2016" fg:w="5"/><text x="48.9574%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.12%)</title><rect x="48.7074%" y="677" width="0.1208%" height="15" fill="rgb(232,21,16)" fg:x="2016" fg:w="5"/><text x="48.9574%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.10%)</title><rect x="48.7316%" y="661" width="0.0966%" height="15" fill="rgb(248,90,29)" fg:x="2017" fg:w="4"/><text x="48.9816%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.10%)</title><rect x="48.7316%" y="645" width="0.0966%" height="15" fill="rgb(249,223,7)" fg:x="2017" fg:w="4"/><text x="48.9816%" y="655.50"></text></g><g><title>_int_free (4 samples, 0.10%)</title><rect x="48.7316%" y="629" width="0.0966%" height="15" fill="rgb(231,119,42)" fg:x="2017" fg:w="4"/><text x="48.9816%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="48.8765%" y="613" width="0.0242%" height="15" fill="rgb(215,41,35)" fg:x="2023" fg:w="1"/><text x="49.1265%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="48.8765%" y="597" width="0.0242%" height="15" fill="rgb(220,44,45)" fg:x="2023" fg:w="1"/><text x="49.1265%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="48.8524%" y="661" width="0.0725%" height="15" fill="rgb(253,197,36)" fg:x="2022" fg:w="3"/><text x="49.1024%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="48.8524%" y="645" width="0.0725%" height="15" fill="rgb(245,225,54)" fg:x="2022" fg:w="3"/><text x="49.1024%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="48.8524%" y="629" width="0.0725%" height="15" fill="rgb(239,94,37)" fg:x="2022" fg:w="3"/><text x="49.1024%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="48.9007%" y="613" width="0.0242%" height="15" fill="rgb(242,217,10)" fg:x="2024" fg:w="1"/><text x="49.1507%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="48.9007%" y="597" width="0.0242%" height="15" fill="rgb(250,193,7)" fg:x="2024" fg:w="1"/><text x="49.1507%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="48.9249%" y="645" width="0.0725%" height="15" fill="rgb(230,104,19)" fg:x="2025" fg:w="3"/><text x="49.1749%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="48.9249%" y="629" width="0.0725%" height="15" fill="rgb(230,181,4)" fg:x="2025" fg:w="3"/><text x="49.1749%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="48.9249%" y="613" width="0.0725%" height="15" fill="rgb(216,219,49)" fg:x="2025" fg:w="3"/><text x="49.1749%" y="623.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="48.9490%" y="597" width="0.0483%" height="15" fill="rgb(254,144,0)" fg:x="2026" fg:w="2"/><text x="49.1990%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.17%)</title><rect x="48.8524%" y="677" width="0.1691%" height="15" fill="rgb(205,209,38)" fg:x="2022" fg:w="7"/><text x="49.1024%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.10%)</title><rect x="48.9249%" y="661" width="0.0966%" height="15" fill="rgb(240,21,42)" fg:x="2025" fg:w="4"/><text x="49.1749%" y="671.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="48.9973%" y="645" width="0.0242%" height="15" fill="rgb(241,132,3)" fg:x="2028" fg:w="1"/><text x="49.2473%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="48.9973%" y="629" width="0.0242%" height="15" fill="rgb(225,14,2)" fg:x="2028" fg:w="1"/><text x="49.2473%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="48.9973%" y="613" width="0.0242%" height="15" fill="rgb(210,141,35)" fg:x="2028" fg:w="1"/><text x="49.2473%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="48.9973%" y="597" width="0.0242%" height="15" fill="rgb(251,14,44)" fg:x="2028" fg:w="1"/><text x="49.2473%" y="607.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="49.0215%" y="645" width="0.0242%" height="15" fill="rgb(247,48,18)" fg:x="2029" fg:w="1"/><text x="49.2715%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="49.0215%" y="629" width="0.0242%" height="15" fill="rgb(225,0,40)" fg:x="2029" fg:w="1"/><text x="49.2715%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="49.0215%" y="613" width="0.0242%" height="15" fill="rgb(221,31,33)" fg:x="2029" fg:w="1"/><text x="49.2715%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="49.0215%" y="597" width="0.0242%" height="15" fill="rgb(237,42,40)" fg:x="2029" fg:w="1"/><text x="49.2715%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="49.0215%" y="581" width="0.0242%" height="15" fill="rgb(233,51,29)" fg:x="2029" fg:w="1"/><text x="49.2715%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.27%)</title><rect x="48.8282%" y="725" width="0.2658%" height="15" fill="rgb(226,58,20)" fg:x="2021" fg:w="11"/><text x="49.0782%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.27%)</title><rect x="48.8282%" y="709" width="0.2658%" height="15" fill="rgb(208,98,7)" fg:x="2021" fg:w="11"/><text x="49.0782%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.27%)</title><rect x="48.8282%" y="693" width="0.2658%" height="15" fill="rgb(228,143,44)" fg:x="2021" fg:w="11"/><text x="49.0782%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.07%)</title><rect x="49.0215%" y="677" width="0.0725%" height="15" fill="rgb(246,55,38)" fg:x="2029" fg:w="3"/><text x="49.2715%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.07%)</title><rect x="49.0215%" y="661" width="0.0725%" height="15" fill="rgb(247,87,16)" fg:x="2029" fg:w="3"/><text x="49.2715%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="49.0457%" y="645" width="0.0483%" height="15" fill="rgb(234,129,42)" fg:x="2030" fg:w="2"/><text x="49.2957%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="49.0457%" y="629" width="0.0483%" height="15" fill="rgb(220,82,16)" fg:x="2030" fg:w="2"/><text x="49.2957%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.05%)</title><rect x="49.0457%" y="613" width="0.0483%" height="15" fill="rgb(211,88,4)" fg:x="2030" fg:w="2"/><text x="49.2957%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.05%)</title><rect x="49.0457%" y="597" width="0.0483%" height="15" fill="rgb(248,151,21)" fg:x="2030" fg:w="2"/><text x="49.2957%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.05%)</title><rect x="49.0457%" y="581" width="0.0483%" height="15" fill="rgb(238,163,6)" fg:x="2030" fg:w="2"/><text x="49.2957%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.05%)</title><rect x="49.0457%" y="565" width="0.0483%" height="15" fill="rgb(209,183,11)" fg:x="2030" fg:w="2"/><text x="49.2957%" y="575.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.05%)</title><rect x="49.0457%" y="549" width="0.0483%" height="15" fill="rgb(219,37,20)" fg:x="2030" fg:w="2"/><text x="49.2957%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.07%)</title><rect x="49.1423%" y="565" width="0.0725%" height="15" fill="rgb(210,158,4)" fg:x="2034" fg:w="3"/><text x="49.3923%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="49.1906%" y="549" width="0.0242%" height="15" fill="rgb(221,167,53)" fg:x="2036" fg:w="1"/><text x="49.4406%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="49.1181%" y="613" width="0.1208%" height="15" fill="rgb(237,151,45)" fg:x="2033" fg:w="5"/><text x="49.3681%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="49.1181%" y="597" width="0.1208%" height="15" fill="rgb(231,39,3)" fg:x="2033" fg:w="5"/><text x="49.3681%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.12%)</title><rect x="49.1181%" y="581" width="0.1208%" height="15" fill="rgb(212,167,28)" fg:x="2033" fg:w="5"/><text x="49.3681%" y="591.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="49.2148%" y="565" width="0.0242%" height="15" fill="rgb(232,178,8)" fg:x="2037" fg:w="1"/><text x="49.4648%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (8 samples, 0.19%)</title><rect x="49.1181%" y="645" width="0.1933%" height="15" fill="rgb(225,151,20)" fg:x="2033" fg:w="8"/><text x="49.3681%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (8 samples, 0.19%)</title><rect x="49.1181%" y="629" width="0.1933%" height="15" fill="rgb(238,3,37)" fg:x="2033" fg:w="8"/><text x="49.3681%" y="639.50"></text></g><g><title>core::hash::Hasher::write_u8 (3 samples, 0.07%)</title><rect x="49.2389%" y="613" width="0.0725%" height="15" fill="rgb(251,147,42)" fg:x="2038" fg:w="3"/><text x="49.4889%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="49.2389%" y="597" width="0.0725%" height="15" fill="rgb(208,173,10)" fg:x="2038" fg:w="3"/><text x="49.4889%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="49.2389%" y="581" width="0.0725%" height="15" fill="rgb(246,225,4)" fg:x="2038" fg:w="3"/><text x="49.4889%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="49.2389%" y="565" width="0.0725%" height="15" fill="rgb(248,102,6)" fg:x="2038" fg:w="3"/><text x="49.4889%" y="575.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="49.2873%" y="549" width="0.0242%" height="15" fill="rgb(232,6,21)" fg:x="2040" fg:w="1"/><text x="49.5373%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="49.3114%" y="645" width="0.0483%" height="15" fill="rgb(221,179,22)" fg:x="2041" fg:w="2"/><text x="49.5614%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="49.3114%" y="629" width="0.0483%" height="15" fill="rgb(252,50,20)" fg:x="2041" fg:w="2"/><text x="49.5614%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="49.3114%" y="613" width="0.0483%" height="15" fill="rgb(222,56,38)" fg:x="2041" fg:w="2"/><text x="49.5614%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="49.3356%" y="597" width="0.0242%" height="15" fill="rgb(206,193,29)" fg:x="2042" fg:w="1"/><text x="49.5856%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="49.3356%" y="581" width="0.0242%" height="15" fill="rgb(239,192,45)" fg:x="2042" fg:w="1"/><text x="49.5856%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.34%)</title><rect x="49.0940%" y="661" width="0.3382%" height="15" fill="rgb(254,18,36)" fg:x="2032" fg:w="14"/><text x="49.3440%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.07%)</title><rect x="49.3597%" y="645" width="0.0725%" height="15" fill="rgb(221,127,11)" fg:x="2043" fg:w="3"/><text x="49.6097%" y="655.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.07%)</title><rect x="49.3597%" y="629" width="0.0725%" height="15" fill="rgb(234,146,35)" fg:x="2043" fg:w="3"/><text x="49.6097%" y="639.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.07%)</title><rect x="49.3597%" y="613" width="0.0725%" height="15" fill="rgb(254,201,37)" fg:x="2043" fg:w="3"/><text x="49.6097%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.07%)</title><rect x="49.3597%" y="597" width="0.0725%" height="15" fill="rgb(211,202,23)" fg:x="2043" fg:w="3"/><text x="49.6097%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="49.4806%" y="597" width="0.0242%" height="15" fill="rgb(237,91,2)" fg:x="2048" fg:w="1"/><text x="49.7306%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="49.4806%" y="581" width="0.0242%" height="15" fill="rgb(226,228,36)" fg:x="2048" fg:w="1"/><text x="49.7306%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="49.4564%" y="629" width="0.0725%" height="15" fill="rgb(213,63,50)" fg:x="2047" fg:w="3"/><text x="49.7064%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="49.4564%" y="613" width="0.0725%" height="15" fill="rgb(235,194,19)" fg:x="2047" fg:w="3"/><text x="49.7064%" y="623.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (1 samples, 0.02%)</title><rect x="49.5047%" y="597" width="0.0242%" height="15" fill="rgb(207,204,18)" fg:x="2049" fg:w="1"/><text x="49.7547%" y="607.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.07%)</title><rect x="49.5289%" y="629" width="0.0725%" height="15" fill="rgb(248,8,7)" fg:x="2050" fg:w="3"/><text x="49.7789%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (3 samples, 0.07%)</title><rect x="49.5289%" y="613" width="0.0725%" height="15" fill="rgb(223,145,47)" fg:x="2050" fg:w="3"/><text x="49.7789%" y="623.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.07%)</title><rect x="49.5289%" y="597" width="0.0725%" height="15" fill="rgb(228,84,11)" fg:x="2050" fg:w="3"/><text x="49.7789%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.07%)</title><rect x="49.5289%" y="581" width="0.0725%" height="15" fill="rgb(218,76,45)" fg:x="2050" fg:w="3"/><text x="49.7789%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.07%)</title><rect x="49.5289%" y="565" width="0.0725%" height="15" fill="rgb(223,80,15)" fg:x="2050" fg:w="3"/><text x="49.7789%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.07%)</title><rect x="49.5289%" y="549" width="0.0725%" height="15" fill="rgb(219,218,33)" fg:x="2050" fg:w="3"/><text x="49.7789%" y="559.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (26 samples, 0.63%)</title><rect x="49.0940%" y="725" width="0.6282%" height="15" fill="rgb(208,51,11)" fg:x="2032" fg:w="26"/><text x="49.3440%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (26 samples, 0.63%)</title><rect x="49.0940%" y="709" width="0.6282%" height="15" fill="rgb(229,165,39)" fg:x="2032" fg:w="26"/><text x="49.3440%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (26 samples, 0.63%)</title><rect x="49.0940%" y="693" width="0.6282%" height="15" fill="rgb(241,100,24)" fg:x="2032" fg:w="26"/><text x="49.3440%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.63%)</title><rect x="49.0940%" y="677" width="0.6282%" height="15" fill="rgb(228,14,23)" fg:x="2032" fg:w="26"/><text x="49.3440%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.29%)</title><rect x="49.4322%" y="661" width="0.2899%" height="15" fill="rgb(247,116,52)" fg:x="2046" fg:w="12"/><text x="49.6822%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.29%)</title><rect x="49.4322%" y="645" width="0.2899%" height="15" fill="rgb(216,149,33)" fg:x="2046" fg:w="12"/><text x="49.6822%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.12%)</title><rect x="49.6014%" y="629" width="0.1208%" height="15" fill="rgb(238,142,29)" fg:x="2053" fg:w="5"/><text x="49.8514%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.12%)</title><rect x="49.6014%" y="613" width="0.1208%" height="15" fill="rgb(224,83,40)" fg:x="2053" fg:w="5"/><text x="49.8514%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.12%)</title><rect x="49.6014%" y="597" width="0.1208%" height="15" fill="rgb(234,165,11)" fg:x="2053" fg:w="5"/><text x="49.8514%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.12%)</title><rect x="49.6014%" y="581" width="0.1208%" height="15" fill="rgb(215,96,23)" fg:x="2053" fg:w="5"/><text x="49.8514%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.12%)</title><rect x="49.6014%" y="565" width="0.1208%" height="15" fill="rgb(233,179,26)" fg:x="2053" fg:w="5"/><text x="49.8514%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.12%)</title><rect x="49.6014%" y="549" width="0.1208%" height="15" fill="rgb(225,129,33)" fg:x="2053" fg:w="5"/><text x="49.8514%" y="559.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.12%)</title><rect x="49.6014%" y="533" width="0.1208%" height="15" fill="rgb(237,49,13)" fg:x="2053" fg:w="5"/><text x="49.8514%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="49.7222%" y="661" width="0.0242%" height="15" fill="rgb(211,3,31)" fg:x="2058" fg:w="1"/><text x="49.9722%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="49.7222%" y="645" width="0.0242%" height="15" fill="rgb(216,152,19)" fg:x="2058" fg:w="1"/><text x="49.9722%" y="655.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="49.7222%" y="629" width="0.0242%" height="15" fill="rgb(251,121,35)" fg:x="2058" fg:w="1"/><text x="49.9722%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="49.7222%" y="613" width="0.0242%" height="15" fill="rgb(210,217,47)" fg:x="2058" fg:w="1"/><text x="49.9722%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="49.7222%" y="597" width="0.0242%" height="15" fill="rgb(244,116,22)" fg:x="2058" fg:w="1"/><text x="49.9722%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="49.7222%" y="581" width="0.0242%" height="15" fill="rgb(228,17,21)" fg:x="2058" fg:w="1"/><text x="49.9722%" y="591.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.05%)</title><rect x="49.7222%" y="677" width="0.0483%" height="15" fill="rgb(240,149,34)" fg:x="2058" fg:w="2"/><text x="49.9722%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="49.7463%" y="661" width="0.0242%" height="15" fill="rgb(208,125,47)" fg:x="2059" fg:w="1"/><text x="49.9963%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="49.7463%" y="645" width="0.0242%" height="15" fill="rgb(249,186,39)" fg:x="2059" fg:w="1"/><text x="49.9963%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="49.7463%" y="629" width="0.0242%" height="15" fill="rgb(240,220,33)" fg:x="2059" fg:w="1"/><text x="49.9963%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="49.7463%" y="613" width="0.0242%" height="15" fill="rgb(243,110,23)" fg:x="2059" fg:w="1"/><text x="49.9963%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="49.7463%" y="597" width="0.0242%" height="15" fill="rgb(219,163,46)" fg:x="2059" fg:w="1"/><text x="49.9963%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.05%)</title><rect x="49.7705%" y="677" width="0.0483%" height="15" fill="rgb(216,126,30)" fg:x="2060" fg:w="2"/><text x="50.0205%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="49.7705%" y="661" width="0.0483%" height="15" fill="rgb(208,139,11)" fg:x="2060" fg:w="2"/><text x="50.0205%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="49.7705%" y="645" width="0.0483%" height="15" fill="rgb(213,118,36)" fg:x="2060" fg:w="2"/><text x="50.0205%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="49.7705%" y="629" width="0.0483%" height="15" fill="rgb(226,43,17)" fg:x="2060" fg:w="2"/><text x="50.0205%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.05%)</title><rect x="49.7705%" y="613" width="0.0483%" height="15" fill="rgb(254,217,4)" fg:x="2060" fg:w="2"/><text x="50.0205%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.05%)</title><rect x="49.7705%" y="597" width="0.0483%" height="15" fill="rgb(210,134,47)" fg:x="2060" fg:w="2"/><text x="50.0205%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.05%)</title><rect x="49.7705%" y="581" width="0.0483%" height="15" fill="rgb(237,24,49)" fg:x="2060" fg:w="2"/><text x="50.0205%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.05%)</title><rect x="49.7705%" y="565" width="0.0483%" height="15" fill="rgb(251,39,46)" fg:x="2060" fg:w="2"/><text x="50.0205%" y="575.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.05%)</title><rect x="49.7705%" y="549" width="0.0483%" height="15" fill="rgb(251,220,3)" fg:x="2060" fg:w="2"/><text x="50.0205%" y="559.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (5 samples, 0.12%)</title><rect x="49.7222%" y="725" width="0.1208%" height="15" fill="rgb(228,105,12)" fg:x="2058" fg:w="5"/><text x="49.9722%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (5 samples, 0.12%)</title><rect x="49.7222%" y="709" width="0.1208%" height="15" fill="rgb(215,196,1)" fg:x="2058" fg:w="5"/><text x="49.9722%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.12%)</title><rect x="49.7222%" y="693" width="0.1208%" height="15" fill="rgb(214,33,39)" fg:x="2058" fg:w="5"/><text x="49.9722%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="49.8188%" y="677" width="0.0242%" height="15" fill="rgb(220,19,52)" fg:x="2062" fg:w="1"/><text x="50.0688%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="49.8188%" y="661" width="0.0242%" height="15" fill="rgb(221,78,38)" fg:x="2062" fg:w="1"/><text x="50.0688%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="49.8188%" y="645" width="0.0242%" height="15" fill="rgb(253,30,16)" fg:x="2062" fg:w="1"/><text x="50.0688%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="49.8188%" y="629" width="0.0242%" height="15" fill="rgb(242,65,0)" fg:x="2062" fg:w="1"/><text x="50.0688%" y="639.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.02%)</title><rect x="49.8188%" y="613" width="0.0242%" height="15" fill="rgb(235,201,12)" fg:x="2062" fg:w="1"/><text x="50.0688%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="49.8188%" y="597" width="0.0242%" height="15" fill="rgb(233,161,9)" fg:x="2062" fg:w="1"/><text x="50.0688%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="49.8188%" y="581" width="0.0242%" height="15" fill="rgb(241,207,41)" fg:x="2062" fg:w="1"/><text x="50.0688%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="49.8188%" y="565" width="0.0242%" height="15" fill="rgb(212,69,46)" fg:x="2062" fg:w="1"/><text x="50.0688%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="49.8188%" y="549" width="0.0242%" height="15" fill="rgb(239,69,45)" fg:x="2062" fg:w="1"/><text x="50.0688%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="49.8188%" y="533" width="0.0242%" height="15" fill="rgb(242,117,48)" fg:x="2062" fg:w="1"/><text x="50.0688%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="49.8671%" y="645" width="0.0966%" height="15" fill="rgb(228,41,36)" fg:x="2064" fg:w="4"/><text x="50.1171%" y="655.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (3 samples, 0.07%)</title><rect x="49.8913%" y="629" width="0.0725%" height="15" fill="rgb(212,3,32)" fg:x="2065" fg:w="3"/><text x="50.1413%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.07%)</title><rect x="49.8913%" y="613" width="0.0725%" height="15" fill="rgb(233,41,49)" fg:x="2065" fg:w="3"/><text x="50.1413%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.07%)</title><rect x="49.9879%" y="581" width="0.0725%" height="15" fill="rgb(252,170,49)" fg:x="2069" fg:w="3"/><text x="50.2379%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.07%)</title><rect x="49.9879%" y="565" width="0.0725%" height="15" fill="rgb(229,53,26)" fg:x="2069" fg:w="3"/><text x="50.2379%" y="575.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.07%)</title><rect x="49.9879%" y="549" width="0.0725%" height="15" fill="rgb(217,157,12)" fg:x="2069" fg:w="3"/><text x="50.2379%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.07%)</title><rect x="49.9879%" y="533" width="0.0725%" height="15" fill="rgb(227,17,9)" fg:x="2069" fg:w="3"/><text x="50.2379%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.07%)</title><rect x="49.9879%" y="517" width="0.0725%" height="15" fill="rgb(218,84,12)" fg:x="2069" fg:w="3"/><text x="50.2379%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.07%)</title><rect x="49.9879%" y="501" width="0.0725%" height="15" fill="rgb(212,79,24)" fg:x="2069" fg:w="3"/><text x="50.2379%" y="511.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="50.0121%" y="485" width="0.0483%" height="15" fill="rgb(217,222,37)" fg:x="2070" fg:w="2"/><text x="50.2621%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="50.0604%" y="581" width="0.0242%" height="15" fill="rgb(246,208,8)" fg:x="2072" fg:w="1"/><text x="50.3104%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="50.0604%" y="565" width="0.0242%" height="15" fill="rgb(244,133,10)" fg:x="2072" fg:w="1"/><text x="50.3104%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="50.8819%" y="485" width="0.0242%" height="15" fill="rgb(209,219,41)" fg:x="2106" fg:w="1"/><text x="51.1319%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.02%)</title><rect x="50.8819%" y="469" width="0.0242%" height="15" fill="rgb(253,175,45)" fg:x="2106" fg:w="1"/><text x="51.1319%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.02%)</title><rect x="50.8819%" y="453" width="0.0242%" height="15" fill="rgb(235,100,37)" fg:x="2106" fg:w="1"/><text x="51.1319%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="50.8819%" y="437" width="0.0242%" height="15" fill="rgb(225,87,19)" fg:x="2106" fg:w="1"/><text x="51.1319%" y="447.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (2 samples, 0.05%)</title><rect x="50.9060%" y="485" width="0.0483%" height="15" fill="rgb(217,152,17)" fg:x="2107" fg:w="2"/><text x="51.1560%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.07%)</title><rect x="50.9543%" y="485" width="0.0725%" height="15" fill="rgb(235,72,13)" fg:x="2109" fg:w="3"/><text x="51.2043%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.07%)</title><rect x="50.9543%" y="469" width="0.0725%" height="15" fill="rgb(233,140,18)" fg:x="2109" fg:w="3"/><text x="51.2043%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (48 samples, 1.16%)</title><rect x="50.0846%" y="581" width="1.1597%" height="15" fill="rgb(207,212,28)" fg:x="2073" fg:w="48"/><text x="50.3346%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (41 samples, 0.99%)</title><rect x="50.2537%" y="565" width="0.9906%" height="15" fill="rgb(220,130,25)" fg:x="2080" fg:w="41"/><text x="50.5037%" y="575.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.97%)</title><rect x="50.2778%" y="549" width="0.9664%" height="15" fill="rgb(205,55,34)" fg:x="2081" fg:w="40"/><text x="50.5278%" y="559.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (40 samples, 0.97%)</title><rect x="50.2778%" y="533" width="0.9664%" height="15" fill="rgb(237,54,35)" fg:x="2081" fg:w="40"/><text x="50.5278%" y="543.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (40 samples, 0.97%)</title><rect x="50.2778%" y="517" width="0.9664%" height="15" fill="rgb(208,67,23)" fg:x="2081" fg:w="40"/><text x="50.5278%" y="527.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (34 samples, 0.82%)</title><rect x="50.4228%" y="501" width="0.8215%" height="15" fill="rgb(206,207,50)" fg:x="2087" fg:w="34"/><text x="50.6728%" y="511.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (9 samples, 0.22%)</title><rect x="51.0268%" y="485" width="0.2174%" height="15" fill="rgb(213,211,42)" fg:x="2112" fg:w="9"/><text x="51.2768%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.17%)</title><rect x="51.3409%" y="501" width="0.1691%" height="15" fill="rgb(252,197,50)" fg:x="2125" fg:w="7"/><text x="51.5909%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.17%)</title><rect x="51.3409%" y="485" width="0.1691%" height="15" fill="rgb(251,211,41)" fg:x="2125" fg:w="7"/><text x="51.5909%" y="495.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.12%)</title><rect x="51.3892%" y="469" width="0.1208%" height="15" fill="rgb(229,211,5)" fg:x="2127" fg:w="5"/><text x="51.6392%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="51.5100%" y="501" width="0.0242%" height="15" fill="rgb(239,36,31)" fg:x="2132" fg:w="1"/><text x="51.7600%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="51.5100%" y="485" width="0.0242%" height="15" fill="rgb(248,67,31)" fg:x="2132" fg:w="1"/><text x="51.7600%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (69 samples, 1.67%)</title><rect x="49.9638%" y="629" width="1.6671%" height="15" fill="rgb(249,55,44)" fg:x="2068" fg:w="69"/><text x="50.2138%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (69 samples, 1.67%)</title><rect x="49.9638%" y="613" width="1.6671%" height="15" fill="rgb(216,82,12)" fg:x="2068" fg:w="69"/><text x="50.2138%" y="623.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (69 samples, 1.67%)</title><rect x="49.9638%" y="597" width="1.6671%" height="15" fill="rgb(242,174,1)" fg:x="2068" fg:w="69"/><text x="50.2138%" y="607.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (16 samples, 0.39%)</title><rect x="51.2443%" y="581" width="0.3866%" height="15" fill="rgb(208,120,29)" fg:x="2121" fg:w="16"/><text x="51.4943%" y="591.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (16 samples, 0.39%)</title><rect x="51.2443%" y="565" width="0.3866%" height="15" fill="rgb(221,105,43)" fg:x="2121" fg:w="16"/><text x="51.4943%" y="575.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (16 samples, 0.39%)</title><rect x="51.2443%" y="549" width="0.3866%" height="15" fill="rgb(234,124,22)" fg:x="2121" fg:w="16"/><text x="51.4943%" y="559.50"></text></g><g><title>core::str::pattern::StrSearcher::new (16 samples, 0.39%)</title><rect x="51.2443%" y="533" width="0.3866%" height="15" fill="rgb(212,23,30)" fg:x="2121" fg:w="16"/><text x="51.4943%" y="543.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (12 samples, 0.29%)</title><rect x="51.3409%" y="517" width="0.2899%" height="15" fill="rgb(219,122,53)" fg:x="2125" fg:w="12"/><text x="51.5909%" y="527.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (4 samples, 0.10%)</title><rect x="51.5342%" y="501" width="0.0966%" height="15" fill="rgb(248,84,24)" fg:x="2133" fg:w="4"/><text x="51.7842%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 1.79%)</title><rect x="49.8671%" y="709" width="1.7879%" height="15" fill="rgb(245,115,18)" fg:x="2064" fg:w="74"/><text x="50.1171%" y="719.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (74 samples, 1.79%)</title><rect x="49.8671%" y="693" width="1.7879%" height="15" fill="rgb(227,176,51)" fg:x="2064" fg:w="74"/><text x="50.1171%" y="703.50">c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (74 samples, 1.79%)</title><rect x="49.8671%" y="677" width="1.7879%" height="15" fill="rgb(229,63,42)" fg:x="2064" fg:w="74"/><text x="50.1171%" y="687.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (74 samples, 1.79%)</title><rect x="49.8671%" y="661" width="1.7879%" height="15" fill="rgb(247,202,24)" fg:x="2064" fg:w="74"/><text x="50.1171%" y="671.50">c..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (70 samples, 1.69%)</title><rect x="49.9638%" y="645" width="1.6912%" height="15" fill="rgb(244,173,20)" fg:x="2068" fg:w="70"/><text x="50.2138%" y="655.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.02%)</title><rect x="51.6308%" y="629" width="0.0242%" height="15" fill="rgb(242,81,47)" fg:x="2137" fg:w="1"/><text x="51.8808%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.02%)</title><rect x="51.6308%" y="613" width="0.0242%" height="15" fill="rgb(231,185,54)" fg:x="2137" fg:w="1"/><text x="51.8808%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.02%)</title><rect x="51.6308%" y="597" width="0.0242%" height="15" fill="rgb(243,55,32)" fg:x="2137" fg:w="1"/><text x="51.8808%" y="607.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::ne (1 samples, 0.02%)</title><rect x="51.6308%" y="581" width="0.0242%" height="15" fill="rgb(208,167,19)" fg:x="2137" fg:w="1"/><text x="51.8808%" y="591.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="51.6308%" y="565" width="0.0242%" height="15" fill="rgb(231,72,35)" fg:x="2137" fg:w="1"/><text x="51.8808%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="51.6308%" y="549" width="0.0242%" height="15" fill="rgb(250,173,51)" fg:x="2137" fg:w="1"/><text x="51.8808%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="51.6308%" y="533" width="0.0242%" height="15" fill="rgb(209,5,22)" fg:x="2137" fg:w="1"/><text x="51.8808%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="51.6308%" y="517" width="0.0242%" height="15" fill="rgb(250,174,19)" fg:x="2137" fg:w="1"/><text x="51.8808%" y="527.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.07%)</title><rect x="51.6550%" y="661" width="0.0725%" height="15" fill="rgb(217,3,49)" fg:x="2138" fg:w="3"/><text x="51.9050%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="51.8241%" y="501" width="0.0242%" height="15" fill="rgb(218,225,5)" fg:x="2145" fg:w="1"/><text x="52.0741%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (2 samples, 0.05%)</title><rect x="51.8483%" y="501" width="0.0483%" height="15" fill="rgb(236,89,11)" fg:x="2146" fg:w="2"/><text x="52.0983%" y="511.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.17%)</title><rect x="51.8966%" y="437" width="0.1691%" height="15" fill="rgb(206,33,28)" fg:x="2148" fg:w="7"/><text x="52.1466%" y="447.50"></text></g><g><title>_int_realloc (5 samples, 0.12%)</title><rect x="51.9449%" y="421" width="0.1208%" height="15" fill="rgb(241,56,42)" fg:x="2150" fg:w="5"/><text x="52.1949%" y="431.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="52.0416%" y="405" width="0.0242%" height="15" fill="rgb(222,44,11)" fg:x="2154" fg:w="1"/><text x="52.2916%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.19%)</title><rect x="51.8966%" y="485" width="0.1933%" height="15" fill="rgb(234,111,20)" fg:x="2148" fg:w="8"/><text x="52.1466%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.19%)</title><rect x="51.8966%" y="469" width="0.1933%" height="15" fill="rgb(237,77,6)" fg:x="2148" fg:w="8"/><text x="52.1466%" y="479.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.19%)</title><rect x="51.8966%" y="453" width="0.1933%" height="15" fill="rgb(235,111,23)" fg:x="2148" fg:w="8"/><text x="52.1466%" y="463.50"></text></g><g><title>__rust_realloc (1 samples, 0.02%)</title><rect x="52.0657%" y="437" width="0.0242%" height="15" fill="rgb(251,135,29)" fg:x="2155" fg:w="1"/><text x="52.3157%" y="447.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.10%)</title><rect x="52.0899%" y="485" width="0.0966%" height="15" fill="rgb(217,57,1)" fg:x="2156" fg:w="4"/><text x="52.3399%" y="495.50"></text></g><g><title>tcache_get (2 samples, 0.05%)</title><rect x="52.1382%" y="469" width="0.0483%" height="15" fill="rgb(249,119,31)" fg:x="2158" fg:w="2"/><text x="52.3882%" y="479.50"></text></g><g><title>__rdl_alloc (2 samples, 0.05%)</title><rect x="52.1865%" y="485" width="0.0483%" height="15" fill="rgb(233,164,33)" fg:x="2160" fg:w="2"/><text x="52.4365%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.05%)</title><rect x="52.1865%" y="469" width="0.0483%" height="15" fill="rgb(250,217,43)" fg:x="2160" fg:w="2"/><text x="52.4365%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.36%)</title><rect x="51.8966%" y="501" width="0.3624%" height="15" fill="rgb(232,154,50)" fg:x="2148" fg:w="15"/><text x="52.1466%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="52.2348%" y="485" width="0.0242%" height="15" fill="rgb(227,190,8)" fg:x="2162" fg:w="1"/><text x="52.4848%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (21 samples, 0.51%)</title><rect x="51.7758%" y="565" width="0.5074%" height="15" fill="rgb(209,217,32)" fg:x="2143" fg:w="21"/><text x="52.0258%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.51%)</title><rect x="51.7758%" y="549" width="0.5074%" height="15" fill="rgb(243,203,50)" fg:x="2143" fg:w="21"/><text x="52.0258%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.48%)</title><rect x="51.8000%" y="533" width="0.4832%" height="15" fill="rgb(232,152,27)" fg:x="2144" fg:w="20"/><text x="52.0500%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.46%)</title><rect x="51.8241%" y="517" width="0.4590%" height="15" fill="rgb(240,34,29)" fg:x="2145" fg:w="19"/><text x="52.0741%" y="527.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="52.2590%" y="501" width="0.0242%" height="15" fill="rgb(215,185,52)" fg:x="2163" fg:w="1"/><text x="52.5090%" y="511.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="52.2590%" y="485" width="0.0242%" height="15" fill="rgb(240,89,49)" fg:x="2163" fg:w="1"/><text x="52.5090%" y="495.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="52.2590%" y="469" width="0.0242%" height="15" fill="rgb(225,12,52)" fg:x="2163" fg:w="1"/><text x="52.5090%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (25 samples, 0.60%)</title><rect x="51.7275%" y="661" width="0.6040%" height="15" fill="rgb(239,128,45)" fg:x="2141" fg:w="25"/><text x="51.9775%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (24 samples, 0.58%)</title><rect x="51.7516%" y="645" width="0.5799%" height="15" fill="rgb(211,78,47)" fg:x="2142" fg:w="24"/><text x="52.0016%" y="655.50"></text></g><g><title>alloc::string::String::push_str (24 samples, 0.58%)</title><rect x="51.7516%" y="629" width="0.5799%" height="15" fill="rgb(232,31,21)" fg:x="2142" fg:w="24"/><text x="52.0016%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (24 samples, 0.58%)</title><rect x="51.7516%" y="613" width="0.5799%" height="15" fill="rgb(222,168,14)" fg:x="2142" fg:w="24"/><text x="52.0016%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (24 samples, 0.58%)</title><rect x="51.7516%" y="597" width="0.5799%" height="15" fill="rgb(209,128,24)" fg:x="2142" fg:w="24"/><text x="52.0016%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (24 samples, 0.58%)</title><rect x="51.7516%" y="581" width="0.5799%" height="15" fill="rgb(249,35,13)" fg:x="2142" fg:w="24"/><text x="52.0016%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.05%)</title><rect x="52.2832%" y="565" width="0.0483%" height="15" fill="rgb(218,7,2)" fg:x="2164" fg:w="2"/><text x="52.5332%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.05%)</title><rect x="52.2832%" y="549" width="0.0483%" height="15" fill="rgb(238,107,27)" fg:x="2164" fg:w="2"/><text x="52.5332%" y="559.50"></text></g><g><title>alloc::fmt::format (31 samples, 0.75%)</title><rect x="51.6550%" y="709" width="0.7490%" height="15" fill="rgb(217,88,38)" fg:x="2138" fg:w="31"/><text x="51.9050%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (31 samples, 0.75%)</title><rect x="51.6550%" y="693" width="0.7490%" height="15" fill="rgb(230,207,0)" fg:x="2138" fg:w="31"/><text x="51.9050%" y="703.50"></text></g><g><title>core::fmt::write (31 samples, 0.75%)</title><rect x="51.6550%" y="677" width="0.7490%" height="15" fill="rgb(249,64,54)" fg:x="2138" fg:w="31"/><text x="51.9050%" y="687.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.07%)</title><rect x="52.3315%" y="661" width="0.0725%" height="15" fill="rgb(231,7,11)" fg:x="2166" fg:w="3"/><text x="52.5815%" y="671.50"></text></g><g><title>__GI___libc_free (2 samples, 0.05%)</title><rect x="52.4040%" y="613" width="0.0483%" height="15" fill="rgb(205,149,21)" fg:x="2169" fg:w="2"/><text x="52.6540%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.10%)</title><rect x="52.4040%" y="709" width="0.0966%" height="15" fill="rgb(215,126,34)" fg:x="2169" fg:w="4"/><text x="52.6540%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.10%)</title><rect x="52.4040%" y="693" width="0.0966%" height="15" fill="rgb(241,132,45)" fg:x="2169" fg:w="4"/><text x="52.6540%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.10%)</title><rect x="52.4040%" y="677" width="0.0966%" height="15" fill="rgb(252,69,32)" fg:x="2169" fg:w="4"/><text x="52.6540%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.10%)</title><rect x="52.4040%" y="661" width="0.0966%" height="15" fill="rgb(232,204,19)" fg:x="2169" fg:w="4"/><text x="52.6540%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.10%)</title><rect x="52.4040%" y="645" width="0.0966%" height="15" fill="rgb(249,15,47)" fg:x="2169" fg:w="4"/><text x="52.6540%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.10%)</title><rect x="52.4040%" y="629" width="0.0966%" height="15" fill="rgb(209,227,23)" fg:x="2169" fg:w="4"/><text x="52.6540%" y="639.50"></text></g><g><title>_int_free (2 samples, 0.05%)</title><rect x="52.4523%" y="613" width="0.0483%" height="15" fill="rgb(248,92,24)" fg:x="2171" fg:w="2"/><text x="52.7023%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="52.5006%" y="581" width="0.0483%" height="15" fill="rgb(247,59,2)" fg:x="2173" fg:w="2"/><text x="52.7506%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.07%)</title><rect x="52.5006%" y="661" width="0.0725%" height="15" fill="rgb(221,30,5)" fg:x="2173" fg:w="3"/><text x="52.7506%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="52.5006%" y="645" width="0.0725%" height="15" fill="rgb(208,108,53)" fg:x="2173" fg:w="3"/><text x="52.7506%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="52.5006%" y="629" width="0.0725%" height="15" fill="rgb(211,183,26)" fg:x="2173" fg:w="3"/><text x="52.7506%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="52.5006%" y="613" width="0.0725%" height="15" fill="rgb(232,132,4)" fg:x="2173" fg:w="3"/><text x="52.7506%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.07%)</title><rect x="52.5006%" y="597" width="0.0725%" height="15" fill="rgb(253,128,37)" fg:x="2173" fg:w="3"/><text x="52.7506%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="52.5489%" y="581" width="0.0242%" height="15" fill="rgb(221,58,24)" fg:x="2175" fg:w="1"/><text x="52.7989%" y="591.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="52.5731%" y="629" width="0.0242%" height="15" fill="rgb(230,54,45)" fg:x="2176" fg:w="1"/><text x="52.8231%" y="639.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="52.5731%" y="613" width="0.0242%" height="15" fill="rgb(254,21,18)" fg:x="2176" fg:w="1"/><text x="52.8231%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="52.5731%" y="597" width="0.0242%" height="15" fill="rgb(221,108,0)" fg:x="2176" fg:w="1"/><text x="52.8231%" y="607.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="52.5731%" y="581" width="0.0242%" height="15" fill="rgb(206,95,1)" fg:x="2176" fg:w="1"/><text x="52.8231%" y="591.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="52.5731%" y="565" width="0.0242%" height="15" fill="rgb(237,52,5)" fg:x="2176" fg:w="1"/><text x="52.8231%" y="575.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="52.5731%" y="549" width="0.0242%" height="15" fill="rgb(218,150,34)" fg:x="2176" fg:w="1"/><text x="52.8231%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.12%)</title><rect x="52.5006%" y="709" width="0.1208%" height="15" fill="rgb(235,194,28)" fg:x="2173" fg:w="5"/><text x="52.7506%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.12%)</title><rect x="52.5006%" y="693" width="0.1208%" height="15" fill="rgb(245,92,18)" fg:x="2173" fg:w="5"/><text x="52.7506%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.12%)</title><rect x="52.5006%" y="677" width="0.1208%" height="15" fill="rgb(253,203,53)" fg:x="2173" fg:w="5"/><text x="52.7506%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.05%)</title><rect x="52.5731%" y="661" width="0.0483%" height="15" fill="rgb(249,185,47)" fg:x="2176" fg:w="2"/><text x="52.8231%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="52.5731%" y="645" width="0.0483%" height="15" fill="rgb(252,194,52)" fg:x="2176" fg:w="2"/><text x="52.8231%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="52.5972%" y="629" width="0.0242%" height="15" fill="rgb(210,53,36)" fg:x="2177" fg:w="1"/><text x="52.8472%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="52.5972%" y="613" width="0.0242%" height="15" fill="rgb(237,37,25)" fg:x="2177" fg:w="1"/><text x="52.8472%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="52.5972%" y="597" width="0.0242%" height="15" fill="rgb(242,116,27)" fg:x="2177" fg:w="1"/><text x="52.8472%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="52.5972%" y="581" width="0.0242%" height="15" fill="rgb(213,185,26)" fg:x="2177" fg:w="1"/><text x="52.8472%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="52.5972%" y="565" width="0.0242%" height="15" fill="rgb(225,204,8)" fg:x="2177" fg:w="1"/><text x="52.8472%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="52.5972%" y="549" width="0.0242%" height="15" fill="rgb(254,111,37)" fg:x="2177" fg:w="1"/><text x="52.8472%" y="559.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="52.5972%" y="533" width="0.0242%" height="15" fill="rgb(242,35,9)" fg:x="2177" fg:w="1"/><text x="52.8472%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.05%)</title><rect x="52.7180%" y="549" width="0.0483%" height="15" fill="rgb(232,138,49)" fg:x="2182" fg:w="2"/><text x="52.9680%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="52.7180%" y="533" width="0.0483%" height="15" fill="rgb(247,56,4)" fg:x="2182" fg:w="2"/><text x="52.9680%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (7 samples, 0.17%)</title><rect x="52.6456%" y="629" width="0.1691%" height="15" fill="rgb(226,179,17)" fg:x="2179" fg:w="7"/><text x="52.8956%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (7 samples, 0.17%)</title><rect x="52.6456%" y="613" width="0.1691%" height="15" fill="rgb(216,163,45)" fg:x="2179" fg:w="7"/><text x="52.8956%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.17%)</title><rect x="52.6456%" y="597" width="0.1691%" height="15" fill="rgb(211,157,3)" fg:x="2179" fg:w="7"/><text x="52.8956%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.14%)</title><rect x="52.6697%" y="581" width="0.1450%" height="15" fill="rgb(234,44,20)" fg:x="2180" fg:w="6"/><text x="52.9197%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.14%)</title><rect x="52.6697%" y="565" width="0.1450%" height="15" fill="rgb(254,138,23)" fg:x="2180" fg:w="6"/><text x="52.9197%" y="575.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="52.7664%" y="549" width="0.0483%" height="15" fill="rgb(206,119,39)" fg:x="2184" fg:w="2"/><text x="53.0164%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.22%)</title><rect x="52.6214%" y="645" width="0.2174%" height="15" fill="rgb(231,105,52)" fg:x="2178" fg:w="9"/><text x="52.8714%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="52.8147%" y="629" width="0.0242%" height="15" fill="rgb(250,20,5)" fg:x="2186" fg:w="1"/><text x="53.0647%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="52.8147%" y="613" width="0.0242%" height="15" fill="rgb(215,198,30)" fg:x="2186" fg:w="1"/><text x="53.0647%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="52.8147%" y="597" width="0.0242%" height="15" fill="rgb(246,142,8)" fg:x="2186" fg:w="1"/><text x="53.0647%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="52.8147%" y="581" width="0.0242%" height="15" fill="rgb(243,26,38)" fg:x="2186" fg:w="1"/><text x="53.0647%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="52.8388%" y="613" width="0.0725%" height="15" fill="rgb(205,133,28)" fg:x="2187" fg:w="3"/><text x="53.0888%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="52.8630%" y="597" width="0.0483%" height="15" fill="rgb(212,34,0)" fg:x="2188" fg:w="2"/><text x="53.1130%" y="607.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.10%)</title><rect x="52.9113%" y="613" width="0.0966%" height="15" fill="rgb(251,226,22)" fg:x="2190" fg:w="4"/><text x="53.1613%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (4 samples, 0.10%)</title><rect x="52.9113%" y="597" width="0.0966%" height="15" fill="rgb(252,119,9)" fg:x="2190" fg:w="4"/><text x="53.1613%" y="607.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.10%)</title><rect x="52.9113%" y="581" width="0.0966%" height="15" fill="rgb(213,150,50)" fg:x="2190" fg:w="4"/><text x="53.1613%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.10%)</title><rect x="52.9113%" y="565" width="0.0966%" height="15" fill="rgb(212,24,39)" fg:x="2190" fg:w="4"/><text x="53.1613%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.10%)</title><rect x="52.9113%" y="549" width="0.0966%" height="15" fill="rgb(213,46,39)" fg:x="2190" fg:w="4"/><text x="53.1613%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.10%)</title><rect x="52.9113%" y="533" width="0.0966%" height="15" fill="rgb(239,106,12)" fg:x="2190" fg:w="4"/><text x="53.1613%" y="543.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.07%)</title><rect x="52.9355%" y="517" width="0.0725%" height="15" fill="rgb(249,229,21)" fg:x="2191" fg:w="3"/><text x="53.1855%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (17 samples, 0.41%)</title><rect x="52.6214%" y="709" width="0.4107%" height="15" fill="rgb(212,158,3)" fg:x="2178" fg:w="17"/><text x="52.8714%" y="719.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (17 samples, 0.41%)</title><rect x="52.6214%" y="693" width="0.4107%" height="15" fill="rgb(253,26,48)" fg:x="2178" fg:w="17"/><text x="52.8714%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (17 samples, 0.41%)</title><rect x="52.6214%" y="677" width="0.4107%" height="15" fill="rgb(238,178,20)" fg:x="2178" fg:w="17"/><text x="52.8714%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 0.41%)</title><rect x="52.6214%" y="661" width="0.4107%" height="15" fill="rgb(208,86,15)" fg:x="2178" fg:w="17"/><text x="52.8714%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.19%)</title><rect x="52.8388%" y="645" width="0.1933%" height="15" fill="rgb(239,42,53)" fg:x="2187" fg:w="8"/><text x="53.0888%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.19%)</title><rect x="52.8388%" y="629" width="0.1933%" height="15" fill="rgb(245,226,8)" fg:x="2187" fg:w="8"/><text x="53.0888%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="53.0080%" y="613" width="0.0242%" height="15" fill="rgb(216,176,32)" fg:x="2194" fg:w="1"/><text x="53.2580%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="53.0080%" y="597" width="0.0242%" height="15" fill="rgb(231,186,21)" fg:x="2194" fg:w="1"/><text x="53.2580%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="53.0080%" y="581" width="0.0242%" height="15" fill="rgb(205,95,49)" fg:x="2194" fg:w="1"/><text x="53.2580%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="53.0080%" y="565" width="0.0242%" height="15" fill="rgb(217,145,8)" fg:x="2194" fg:w="1"/><text x="53.2580%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="53.0080%" y="549" width="0.0242%" height="15" fill="rgb(239,144,48)" fg:x="2194" fg:w="1"/><text x="53.2580%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="53.0080%" y="533" width="0.0242%" height="15" fill="rgb(214,189,23)" fg:x="2194" fg:w="1"/><text x="53.2580%" y="543.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="53.0080%" y="517" width="0.0242%" height="15" fill="rgb(229,157,17)" fg:x="2194" fg:w="1"/><text x="53.2580%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="53.0321%" y="613" width="0.0242%" height="15" fill="rgb(230,5,48)" fg:x="2195" fg:w="1"/><text x="53.2821%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="53.0321%" y="597" width="0.0242%" height="15" fill="rgb(224,156,48)" fg:x="2195" fg:w="1"/><text x="53.2821%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="53.0321%" y="581" width="0.0242%" height="15" fill="rgb(223,14,29)" fg:x="2195" fg:w="1"/><text x="53.2821%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="53.0321%" y="565" width="0.0242%" height="15" fill="rgb(229,96,36)" fg:x="2195" fg:w="1"/><text x="53.2821%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="53.0321%" y="549" width="0.0242%" height="15" fill="rgb(231,102,53)" fg:x="2195" fg:w="1"/><text x="53.2821%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.05%)</title><rect x="53.0321%" y="645" width="0.0483%" height="15" fill="rgb(210,77,38)" fg:x="2195" fg:w="2"/><text x="53.2821%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.05%)</title><rect x="53.0321%" y="629" width="0.0483%" height="15" fill="rgb(235,131,6)" fg:x="2195" fg:w="2"/><text x="53.2821%" y="639.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="53.0563%" y="613" width="0.0242%" height="15" fill="rgb(252,55,38)" fg:x="2196" fg:w="1"/><text x="53.3063%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="53.0563%" y="597" width="0.0242%" height="15" fill="rgb(246,38,14)" fg:x="2196" fg:w="1"/><text x="53.3063%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="53.0563%" y="581" width="0.0242%" height="15" fill="rgb(242,27,5)" fg:x="2196" fg:w="1"/><text x="53.3063%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="53.0563%" y="565" width="0.0242%" height="15" fill="rgb(228,65,35)" fg:x="2196" fg:w="1"/><text x="53.3063%" y="575.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="53.0563%" y="549" width="0.0242%" height="15" fill="rgb(245,93,11)" fg:x="2196" fg:w="1"/><text x="53.3063%" y="559.50"></text></g><g><title>hashbrown::map::make_insert_hash (6 samples, 0.14%)</title><rect x="53.0321%" y="661" width="0.1450%" height="15" fill="rgb(213,1,31)" fg:x="2195" fg:w="6"/><text x="53.2821%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.10%)</title><rect x="53.0805%" y="645" width="0.0966%" height="15" fill="rgb(237,205,14)" fg:x="2197" fg:w="4"/><text x="53.3305%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.10%)</title><rect x="53.0805%" y="629" width="0.0966%" height="15" fill="rgb(232,118,45)" fg:x="2197" fg:w="4"/><text x="53.3305%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.10%)</title><rect x="53.0805%" y="613" width="0.0966%" height="15" fill="rgb(218,5,6)" fg:x="2197" fg:w="4"/><text x="53.3305%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.07%)</title><rect x="53.1046%" y="597" width="0.0725%" height="15" fill="rgb(251,87,51)" fg:x="2198" fg:w="3"/><text x="53.3546%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="53.1529%" y="581" width="0.0242%" height="15" fill="rgb(207,225,20)" fg:x="2200" fg:w="1"/><text x="53.4029%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="53.1771%" y="645" width="0.0242%" height="15" fill="rgb(222,78,54)" fg:x="2201" fg:w="1"/><text x="53.4271%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="53.1771%" y="629" width="0.0242%" height="15" fill="rgb(232,85,16)" fg:x="2201" fg:w="1"/><text x="53.4271%" y="639.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="53.1771%" y="613" width="0.0242%" height="15" fill="rgb(244,25,33)" fg:x="2201" fg:w="1"/><text x="53.4271%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.02%)</title><rect x="53.2013%" y="645" width="0.0242%" height="15" fill="rgb(233,24,36)" fg:x="2202" fg:w="1"/><text x="53.4513%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.02%)</title><rect x="53.2013%" y="629" width="0.0242%" height="15" fill="rgb(253,49,54)" fg:x="2202" fg:w="1"/><text x="53.4513%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="53.2013%" y="613" width="0.0242%" height="15" fill="rgb(245,12,22)" fg:x="2202" fg:w="1"/><text x="53.4513%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="53.2013%" y="597" width="0.0242%" height="15" fill="rgb(253,141,28)" fg:x="2202" fg:w="1"/><text x="53.4513%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="53.2254%" y="645" width="0.0242%" height="15" fill="rgb(225,207,27)" fg:x="2203" fg:w="1"/><text x="53.4754%" y="655.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="53.2254%" y="629" width="0.0242%" height="15" fill="rgb(220,84,2)" fg:x="2203" fg:w="1"/><text x="53.4754%" y="639.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (10 samples, 0.24%)</title><rect x="53.0321%" y="709" width="0.2416%" height="15" fill="rgb(224,37,37)" fg:x="2195" fg:w="10"/><text x="53.2821%" y="719.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (10 samples, 0.24%)</title><rect x="53.0321%" y="693" width="0.2416%" height="15" fill="rgb(220,143,18)" fg:x="2195" fg:w="10"/><text x="53.2821%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.24%)</title><rect x="53.0321%" y="677" width="0.2416%" height="15" fill="rgb(210,88,33)" fg:x="2195" fg:w="10"/><text x="53.2821%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.10%)</title><rect x="53.1771%" y="661" width="0.0966%" height="15" fill="rgb(219,87,51)" fg:x="2201" fg:w="4"/><text x="53.4271%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (1 samples, 0.02%)</title><rect x="53.2496%" y="645" width="0.0242%" height="15" fill="rgb(211,7,35)" fg:x="2204" fg:w="1"/><text x="53.4996%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (9 samples, 0.22%)</title><rect x="53.3221%" y="565" width="0.2174%" height="15" fill="rgb(232,77,2)" fg:x="2207" fg:w="9"/><text x="53.5721%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.12%)</title><rect x="53.4187%" y="549" width="0.1208%" height="15" fill="rgb(249,94,25)" fg:x="2211" fg:w="5"/><text x="53.6687%" y="559.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="53.4187%" y="533" width="0.1208%" height="15" fill="rgb(215,112,2)" fg:x="2211" fg:w="5"/><text x="53.6687%" y="543.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (5 samples, 0.12%)</title><rect x="53.4187%" y="517" width="0.1208%" height="15" fill="rgb(226,115,48)" fg:x="2211" fg:w="5"/><text x="53.6687%" y="527.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (5 samples, 0.12%)</title><rect x="53.4187%" y="501" width="0.1208%" height="15" fill="rgb(249,196,10)" fg:x="2211" fg:w="5"/><text x="53.6687%" y="511.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.05%)</title><rect x="53.4912%" y="485" width="0.0483%" height="15" fill="rgb(237,109,14)" fg:x="2214" fg:w="2"/><text x="53.7412%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.07%)</title><rect x="53.5395%" y="485" width="0.0725%" height="15" fill="rgb(217,103,53)" fg:x="2216" fg:w="3"/><text x="53.7895%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.07%)</title><rect x="53.5395%" y="469" width="0.0725%" height="15" fill="rgb(244,137,9)" fg:x="2216" fg:w="3"/><text x="53.7895%" y="479.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="53.5878%" y="453" width="0.0242%" height="15" fill="rgb(227,201,3)" fg:x="2218" fg:w="1"/><text x="53.8378%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="53.6120%" y="485" width="0.0242%" height="15" fill="rgb(243,94,6)" fg:x="2219" fg:w="1"/><text x="53.8620%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="53.6120%" y="469" width="0.0242%" height="15" fill="rgb(235,118,5)" fg:x="2219" fg:w="1"/><text x="53.8620%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.36%)</title><rect x="53.3221%" y="693" width="0.3624%" height="15" fill="rgb(247,10,30)" fg:x="2207" fg:w="15"/><text x="53.5721%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (15 samples, 0.36%)</title><rect x="53.3221%" y="677" width="0.3624%" height="15" fill="rgb(205,26,28)" fg:x="2207" fg:w="15"/><text x="53.5721%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.36%)</title><rect x="53.3221%" y="661" width="0.3624%" height="15" fill="rgb(206,99,35)" fg:x="2207" fg:w="15"/><text x="53.5721%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 0.36%)</title><rect x="53.3221%" y="645" width="0.3624%" height="15" fill="rgb(238,130,40)" fg:x="2207" fg:w="15"/><text x="53.5721%" y="655.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (15 samples, 0.36%)</title><rect x="53.3221%" y="629" width="0.3624%" height="15" fill="rgb(224,126,31)" fg:x="2207" fg:w="15"/><text x="53.5721%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (15 samples, 0.36%)</title><rect x="53.3221%" y="613" width="0.3624%" height="15" fill="rgb(254,105,17)" fg:x="2207" fg:w="15"/><text x="53.5721%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 0.36%)</title><rect x="53.3221%" y="597" width="0.3624%" height="15" fill="rgb(216,87,36)" fg:x="2207" fg:w="15"/><text x="53.5721%" y="607.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (15 samples, 0.36%)</title><rect x="53.3221%" y="581" width="0.3624%" height="15" fill="rgb(240,21,12)" fg:x="2207" fg:w="15"/><text x="53.5721%" y="591.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (6 samples, 0.14%)</title><rect x="53.5395%" y="565" width="0.1450%" height="15" fill="rgb(245,192,34)" fg:x="2216" fg:w="6"/><text x="53.7895%" y="575.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (6 samples, 0.14%)</title><rect x="53.5395%" y="549" width="0.1450%" height="15" fill="rgb(226,100,49)" fg:x="2216" fg:w="6"/><text x="53.7895%" y="559.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (6 samples, 0.14%)</title><rect x="53.5395%" y="533" width="0.1450%" height="15" fill="rgb(245,188,27)" fg:x="2216" fg:w="6"/><text x="53.7895%" y="543.50"></text></g><g><title>core::str::pattern::StrSearcher::new (6 samples, 0.14%)</title><rect x="53.5395%" y="517" width="0.1450%" height="15" fill="rgb(212,170,8)" fg:x="2216" fg:w="6"/><text x="53.7895%" y="527.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (6 samples, 0.14%)</title><rect x="53.5395%" y="501" width="0.1450%" height="15" fill="rgb(217,113,29)" fg:x="2216" fg:w="6"/><text x="53.7895%" y="511.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (2 samples, 0.05%)</title><rect x="53.6361%" y="485" width="0.0483%" height="15" fill="rgb(237,30,3)" fg:x="2220" fg:w="2"/><text x="53.8861%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="53.6845%" y="693" width="0.0242%" height="15" fill="rgb(227,19,28)" fg:x="2222" fg:w="1"/><text x="53.9345%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="53.6845%" y="677" width="0.0242%" height="15" fill="rgb(239,172,45)" fg:x="2222" fg:w="1"/><text x="53.9345%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="53.6845%" y="661" width="0.0242%" height="15" fill="rgb(254,55,39)" fg:x="2222" fg:w="1"/><text x="53.9345%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="53.6845%" y="645" width="0.0242%" height="15" fill="rgb(249,208,12)" fg:x="2222" fg:w="1"/><text x="53.9345%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.6845%" y="629" width="0.0242%" height="15" fill="rgb(240,52,13)" fg:x="2222" fg:w="1"/><text x="53.9345%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.6845%" y="613" width="0.0242%" height="15" fill="rgb(252,149,13)" fg:x="2222" fg:w="1"/><text x="53.9345%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.6845%" y="597" width="0.0242%" height="15" fill="rgb(232,81,48)" fg:x="2222" fg:w="1"/><text x="53.9345%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="53.6845%" y="581" width="0.0242%" height="15" fill="rgb(222,144,2)" fg:x="2222" fg:w="1"/><text x="53.9345%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="53.6845%" y="565" width="0.0242%" height="15" fill="rgb(216,81,32)" fg:x="2222" fg:w="1"/><text x="53.9345%" y="575.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="53.7086%" y="693" width="0.0242%" height="15" fill="rgb(244,78,51)" fg:x="2223" fg:w="1"/><text x="53.9586%" y="703.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="53.7086%" y="677" width="0.0242%" height="15" fill="rgb(217,66,21)" fg:x="2223" fg:w="1"/><text x="53.9586%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="53.7086%" y="661" width="0.0242%" height="15" fill="rgb(247,101,42)" fg:x="2223" fg:w="1"/><text x="53.9586%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="53.7086%" y="645" width="0.0242%" height="15" fill="rgb(227,81,39)" fg:x="2223" fg:w="1"/><text x="53.9586%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="53.7086%" y="629" width="0.0242%" height="15" fill="rgb(220,223,44)" fg:x="2223" fg:w="1"/><text x="53.9586%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="53.7086%" y="613" width="0.0242%" height="15" fill="rgb(205,218,2)" fg:x="2223" fg:w="1"/><text x="53.9586%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="53.7086%" y="597" width="0.0242%" height="15" fill="rgb(212,207,28)" fg:x="2223" fg:w="1"/><text x="53.9586%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="53.7086%" y="581" width="0.0242%" height="15" fill="rgb(224,12,41)" fg:x="2223" fg:w="1"/><text x="53.9586%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="53.7086%" y="565" width="0.0242%" height="15" fill="rgb(216,118,12)" fg:x="2223" fg:w="1"/><text x="53.9586%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="53.7086%" y="549" width="0.0242%" height="15" fill="rgb(252,97,46)" fg:x="2223" fg:w="1"/><text x="53.9586%" y="559.50"></text></g><g><title>y2021::d12::main2::run (1,577 samples, 38.10%)</title><rect x="15.6560%" y="965" width="38.1010%" height="15" fill="rgb(244,206,19)" fg:x="648" fg:w="1577"/><text x="15.9060%" y="975.50">y2021::d12::main2::run</text></g><g><title>y2021::d12::main2::p02 (1,531 samples, 36.99%)</title><rect x="16.7673%" y="949" width="36.9896%" height="15" fill="rgb(231,84,31)" fg:x="694" fg:w="1531"/><text x="17.0173%" y="959.50">y2021::d12::main2::p02</text></g><g><title>y2021::d12::main2::traverse (1,444 samples, 34.89%)</title><rect x="18.8693%" y="933" width="34.8877%" height="15" fill="rgb(244,133,0)" fg:x="781" fg:w="1444"/><text x="19.1193%" y="943.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,444 samples, 34.89%)</title><rect x="18.8693%" y="917" width="34.8877%" height="15" fill="rgb(223,15,50)" fg:x="781" fg:w="1444"/><text x="19.1193%" y="927.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,444 samples, 34.89%)</title><rect x="18.8693%" y="901" width="34.8877%" height="15" fill="rgb(250,118,49)" fg:x="781" fg:w="1444"/><text x="19.1193%" y="911.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,444 samples, 34.89%)</title><rect x="18.8693%" y="885" width="34.8877%" height="15" fill="rgb(248,25,38)" fg:x="781" fg:w="1444"/><text x="19.1193%" y="895.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,443 samples, 34.86%)</title><rect x="18.8935%" y="869" width="34.8635%" height="15" fill="rgb(215,70,14)" fg:x="782" fg:w="1443"/><text x="19.1435%" y="879.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,441 samples, 34.82%)</title><rect x="18.9418%" y="853" width="34.8152%" height="15" fill="rgb(215,28,15)" fg:x="784" fg:w="1441"/><text x="19.1918%" y="863.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,431 samples, 34.57%)</title><rect x="19.1834%" y="837" width="34.5736%" height="15" fill="rgb(243,6,28)" fg:x="794" fg:w="1431"/><text x="19.4334%" y="847.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,394 samples, 33.68%)</title><rect x="20.0773%" y="821" width="33.6796%" height="15" fill="rgb(222,130,1)" fg:x="831" fg:w="1394"/><text x="20.3273%" y="831.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,314 samples, 31.75%)</title><rect x="22.0101%" y="805" width="31.7468%" height="15" fill="rgb(236,166,44)" fg:x="911" fg:w="1314"/><text x="22.2601%" y="815.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,064 samples, 25.71%)</title><rect x="28.0503%" y="789" width="25.7067%" height="15" fill="rgb(221,108,14)" fg:x="1161" fg:w="1064"/><text x="28.3003%" y="799.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (831 samples, 20.08%)</title><rect x="33.6796%" y="773" width="20.0773%" height="15" fill="rgb(252,3,45)" fg:x="1394" fg:w="831"/><text x="33.9296%" y="783.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (588 samples, 14.21%)</title><rect x="39.5506%" y="757" width="14.2063%" height="15" fill="rgb(237,68,30)" fg:x="1637" fg:w="588"/><text x="39.8006%" y="767.50">y2021::d12::main2::tra..</text></g><g><title>y2021::d12::main2::traverse (356 samples, 8.60%)</title><rect x="45.1558%" y="741" width="8.6011%" height="15" fill="rgb(211,79,22)" fg:x="1869" fg:w="356"/><text x="45.4058%" y="751.50">y2021::d12::..</text></g><g><title>y2021::d12::main2::traverse (162 samples, 3.91%)</title><rect x="49.8430%" y="725" width="3.9140%" height="15" fill="rgb(252,185,21)" fg:x="2063" fg:w="162"/><text x="50.0930%" y="735.50">y202..</text></g><g><title>y2021::d12::main2::traverse (20 samples, 0.48%)</title><rect x="53.2737%" y="709" width="0.4832%" height="15" fill="rgb(225,189,26)" fg:x="2205" fg:w="20"/><text x="53.5237%" y="719.50"></text></g><g><title>y2021::d12::main2::traverse (1 samples, 0.02%)</title><rect x="53.7328%" y="693" width="0.0242%" height="15" fill="rgb(241,30,40)" fg:x="2224" fg:w="1"/><text x="53.9828%" y="703.50"></text></g><g><title>y2021::d13::main::fold_points (1 samples, 0.02%)</title><rect x="53.7569%" y="933" width="0.0242%" height="15" fill="rgb(235,215,44)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="53.7569%" y="917" width="0.0242%" height="15" fill="rgb(205,8,29)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="927.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="53.7569%" y="901" width="0.0242%" height="15" fill="rgb(241,137,42)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="911.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.7569%" y="885" width="0.0242%" height="15" fill="rgb(237,155,2)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="895.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.7569%" y="869" width="0.0242%" height="15" fill="rgb(245,29,42)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.7569%" y="853" width="0.0242%" height="15" fill="rgb(234,101,35)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="53.7569%" y="837" width="0.0242%" height="15" fill="rgb(228,64,37)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.7569%" y="821" width="0.0242%" height="15" fill="rgb(217,214,36)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.7569%" y="805" width="0.0242%" height="15" fill="rgb(243,70,3)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="53.7569%" y="789" width="0.0242%" height="15" fill="rgb(253,158,52)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="53.7569%" y="773" width="0.0242%" height="15" fill="rgb(234,111,54)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="53.7569%" y="757" width="0.0242%" height="15" fill="rgb(217,70,32)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="53.7569%" y="741" width="0.0242%" height="15" fill="rgb(234,18,33)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="751.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1 samples, 0.02%)</title><rect x="53.7569%" y="725" width="0.0242%" height="15" fill="rgb(234,12,49)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="53.7569%" y="709" width="0.0242%" height="15" fill="rgb(236,10,21)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="719.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="53.7569%" y="693" width="0.0242%" height="15" fill="rgb(248,182,45)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.7569%" y="677" width="0.0242%" height="15" fill="rgb(217,95,36)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.7569%" y="661" width="0.0242%" height="15" fill="rgb(212,110,31)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.7569%" y="645" width="0.0242%" height="15" fill="rgb(206,32,53)" fg:x="2225" fg:w="1"/><text x="54.0069%" y="655.50"></text></g><g><title>y2021::d13::main::p01 (2 samples, 0.05%)</title><rect x="53.7569%" y="949" width="0.0483%" height="15" fill="rgb(246,141,37)" fg:x="2225" fg:w="2"/><text x="54.0069%" y="959.50"></text></g><g><title>y2021::d13::main::parse_input (1 samples, 0.02%)</title><rect x="53.7811%" y="933" width="0.0242%" height="15" fill="rgb(219,16,7)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="53.7811%" y="917" width="0.0242%" height="15" fill="rgb(230,205,45)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="927.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="53.7811%" y="901" width="0.0242%" height="15" fill="rgb(231,43,49)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="911.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.7811%" y="885" width="0.0242%" height="15" fill="rgb(212,106,34)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="895.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.7811%" y="869" width="0.0242%" height="15" fill="rgb(206,83,17)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.7811%" y="853" width="0.0242%" height="15" fill="rgb(244,154,49)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="53.7811%" y="837" width="0.0242%" height="15" fill="rgb(244,149,49)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.7811%" y="821" width="0.0242%" height="15" fill="rgb(227,134,18)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.7811%" y="805" width="0.0242%" height="15" fill="rgb(237,116,36)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="53.7811%" y="789" width="0.0242%" height="15" fill="rgb(205,129,40)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="53.7811%" y="773" width="0.0242%" height="15" fill="rgb(236,178,4)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="53.7811%" y="757" width="0.0242%" height="15" fill="rgb(251,76,53)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="53.7811%" y="741" width="0.0242%" height="15" fill="rgb(242,92,40)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="751.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1 samples, 0.02%)</title><rect x="53.7811%" y="725" width="0.0242%" height="15" fill="rgb(209,45,30)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="53.7811%" y="709" width="0.0242%" height="15" fill="rgb(218,157,36)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="719.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="53.7811%" y="693" width="0.0242%" height="15" fill="rgb(222,186,16)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.7811%" y="677" width="0.0242%" height="15" fill="rgb(254,72,35)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.7811%" y="661" width="0.0242%" height="15" fill="rgb(224,25,35)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.7811%" y="645" width="0.0242%" height="15" fill="rgb(206,135,52)" fg:x="2226" fg:w="1"/><text x="54.0311%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="53.8053%" y="933" width="0.0242%" height="15" fill="rgb(229,174,47)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="943.50"></text></g><g><title>y2021::d13::main::p02::{{closure}} (1 samples, 0.02%)</title><rect x="53.8053%" y="917" width="0.0242%" height="15" fill="rgb(242,184,21)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="927.50"></text></g><g><title>y2021::d13::main::fold_points (1 samples, 0.02%)</title><rect x="53.8053%" y="901" width="0.0242%" height="15" fill="rgb(213,22,45)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="53.8053%" y="885" width="0.0242%" height="15" fill="rgb(237,81,54)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="895.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="53.8053%" y="869" width="0.0242%" height="15" fill="rgb(248,177,18)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="879.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.8053%" y="853" width="0.0242%" height="15" fill="rgb(254,31,16)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="863.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.8053%" y="837" width="0.0242%" height="15" fill="rgb(235,20,31)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="847.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.8053%" y="821" width="0.0242%" height="15" fill="rgb(240,56,43)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="53.8053%" y="805" width="0.0242%" height="15" fill="rgb(237,197,51)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.8053%" y="789" width="0.0242%" height="15" fill="rgb(241,162,44)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.8053%" y="773" width="0.0242%" height="15" fill="rgb(224,23,20)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="53.8053%" y="757" width="0.0242%" height="15" fill="rgb(250,109,34)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="53.8053%" y="741" width="0.0242%" height="15" fill="rgb(214,175,50)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="53.8053%" y="725" width="0.0242%" height="15" fill="rgb(213,182,5)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="53.8053%" y="709" width="0.0242%" height="15" fill="rgb(209,199,19)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1 samples, 0.02%)</title><rect x="53.8053%" y="693" width="0.0242%" height="15" fill="rgb(236,224,42)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="53.8053%" y="677" width="0.0242%" height="15" fill="rgb(246,226,29)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="687.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="53.8053%" y="661" width="0.0242%" height="15" fill="rgb(227,223,11)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.8053%" y="645" width="0.0242%" height="15" fill="rgb(219,7,51)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.8053%" y="629" width="0.0242%" height="15" fill="rgb(245,167,10)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.8053%" y="613" width="0.0242%" height="15" fill="rgb(237,224,16)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="53.8053%" y="597" width="0.0242%" height="15" fill="rgb(226,132,13)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="53.8053%" y="581" width="0.0242%" height="15" fill="rgb(214,140,3)" fg:x="2227" fg:w="1"/><text x="54.0553%" y="591.50"></text></g><g><title>y2021::d13::main::parse_input (1 samples, 0.02%)</title><rect x="53.8294%" y="933" width="0.0242%" height="15" fill="rgb(221,177,4)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="53.8294%" y="917" width="0.0242%" height="15" fill="rgb(238,139,3)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="927.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="53.8294%" y="901" width="0.0242%" height="15" fill="rgb(216,17,39)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="911.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.8294%" y="885" width="0.0242%" height="15" fill="rgb(238,120,9)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="895.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.8294%" y="869" width="0.0242%" height="15" fill="rgb(244,92,53)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.8294%" y="853" width="0.0242%" height="15" fill="rgb(224,148,33)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="53.8294%" y="837" width="0.0242%" height="15" fill="rgb(243,6,36)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.8294%" y="821" width="0.0242%" height="15" fill="rgb(230,102,11)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.8294%" y="805" width="0.0242%" height="15" fill="rgb(234,148,36)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="53.8294%" y="789" width="0.0242%" height="15" fill="rgb(251,153,25)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="53.8294%" y="773" width="0.0242%" height="15" fill="rgb(215,129,8)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="53.8294%" y="757" width="0.0242%" height="15" fill="rgb(224,128,35)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="53.8294%" y="741" width="0.0242%" height="15" fill="rgb(237,56,52)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="751.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1 samples, 0.02%)</title><rect x="53.8294%" y="725" width="0.0242%" height="15" fill="rgb(234,213,19)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="53.8294%" y="709" width="0.0242%" height="15" fill="rgb(252,82,23)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="719.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="53.8294%" y="693" width="0.0242%" height="15" fill="rgb(254,201,21)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.8294%" y="677" width="0.0242%" height="15" fill="rgb(250,186,11)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.8294%" y="661" width="0.0242%" height="15" fill="rgb(211,174,5)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.8294%" y="645" width="0.0242%" height="15" fill="rgb(214,121,10)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="53.8294%" y="629" width="0.0242%" height="15" fill="rgb(241,66,2)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="53.8294%" y="613" width="0.0242%" height="15" fill="rgb(220,167,19)" fg:x="2228" fg:w="1"/><text x="54.0794%" y="623.50"></text></g><g><title>y2021::d13::main::run (5 samples, 0.12%)</title><rect x="53.7569%" y="965" width="0.1208%" height="15" fill="rgb(231,54,50)" fg:x="2225" fg:w="5"/><text x="54.0069%" y="975.50"></text></g><g><title>y2021::d13::main::p02 (3 samples, 0.07%)</title><rect x="53.8053%" y="949" width="0.0725%" height="15" fill="rgb(239,217,53)" fg:x="2227" fg:w="3"/><text x="54.0553%" y="959.50"></text></g><g><title>y2021::d13::main::print_points (1 samples, 0.02%)</title><rect x="53.8536%" y="933" width="0.0242%" height="15" fill="rgb(248,8,0)" fg:x="2229" fg:w="1"/><text x="54.1036%" y="943.50"></text></g><g><title>std::io::stdio::_print (1 samples, 0.02%)</title><rect x="53.8536%" y="917" width="0.0242%" height="15" fill="rgb(229,118,37)" fg:x="2229" fg:w="1"/><text x="54.1036%" y="927.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.02%)</title><rect x="53.8536%" y="901" width="0.0242%" height="15" fill="rgb(253,223,43)" fg:x="2229" fg:w="1"/><text x="54.1036%" y="911.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="53.8536%" y="885" width="0.0242%" height="15" fill="rgb(211,77,36)" fg:x="2229" fg:w="1"/><text x="54.1036%" y="895.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="53.8536%" y="869" width="0.0242%" height="15" fill="rgb(219,3,53)" fg:x="2229" fg:w="1"/><text x="54.1036%" y="879.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.02%)</title><rect x="53.8536%" y="853" width="0.0242%" height="15" fill="rgb(244,45,42)" fg:x="2229" fg:w="1"/><text x="54.1036%" y="863.50"></text></g><g><title>y2021::d14::main::p01 (1 samples, 0.02%)</title><rect x="53.8777%" y="949" width="0.0242%" height="15" fill="rgb(225,95,27)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="53.8777%" y="933" width="0.0242%" height="15" fill="rgb(207,74,8)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="943.50"></text></g><g><title>y2021::d14::main::p01::{{closure}} (1 samples, 0.02%)</title><rect x="53.8777%" y="917" width="0.0242%" height="15" fill="rgb(243,63,36)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="927.50"></text></g><g><title>y2021::d14::main::better_step (1 samples, 0.02%)</title><rect x="53.8777%" y="901" width="0.0242%" height="15" fill="rgb(211,180,12)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.8777%" y="885" width="0.0242%" height="15" fill="rgb(254,166,49)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.8777%" y="869" width="0.0242%" height="15" fill="rgb(205,19,0)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.8777%" y="853" width="0.0242%" height="15" fill="rgb(224,172,32)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.8777%" y="837" width="0.0242%" height="15" fill="rgb(254,136,30)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="53.8777%" y="821" width="0.0242%" height="15" fill="rgb(246,19,35)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="53.8777%" y="805" width="0.0242%" height="15" fill="rgb(219,24,36)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (1 samples, 0.02%)</title><rect x="53.8777%" y="789" width="0.0242%" height="15" fill="rgb(251,55,1)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="53.8777%" y="773" width="0.0242%" height="15" fill="rgb(218,117,39)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="53.8777%" y="757" width="0.0242%" height="15" fill="rgb(248,169,11)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="767.50"></text></g><g><title>y2021::d14::main::better_step::{{closure}} (1 samples, 0.02%)</title><rect x="53.8777%" y="741" width="0.0242%" height="15" fill="rgb(244,40,44)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.02%)</title><rect x="53.8777%" y="725" width="0.0242%" height="15" fill="rgb(234,62,37)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="735.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="53.8777%" y="709" width="0.0242%" height="15" fill="rgb(207,117,42)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.02%)</title><rect x="53.8777%" y="693" width="0.0242%" height="15" fill="rgb(213,43,2)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="53.8777%" y="677" width="0.0242%" height="15" fill="rgb(244,202,51)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="53.8777%" y="661" width="0.0242%" height="15" fill="rgb(253,174,46)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="53.8777%" y="645" width="0.0242%" height="15" fill="rgb(251,23,1)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (1 samples, 0.02%)</title><rect x="53.8777%" y="629" width="0.0242%" height="15" fill="rgb(253,26,1)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="53.8777%" y="613" width="0.0242%" height="15" fill="rgb(216,89,31)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="53.8777%" y="597" width="0.0242%" height="15" fill="rgb(209,109,5)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="53.8777%" y="581" width="0.0242%" height="15" fill="rgb(229,63,13)" fg:x="2230" fg:w="1"/><text x="54.1277%" y="591.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (1 samples, 0.02%)</title><rect x="53.9261%" y="725" width="0.0242%" height="15" fill="rgb(238,137,54)" fg:x="2232" fg:w="1"/><text x="54.1761%" y="735.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.02%)</title><rect x="53.9261%" y="709" width="0.0242%" height="15" fill="rgb(228,1,9)" fg:x="2232" fg:w="1"/><text x="54.1761%" y="719.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.02%)</title><rect x="53.9261%" y="693" width="0.0242%" height="15" fill="rgb(249,120,48)" fg:x="2232" fg:w="1"/><text x="54.1761%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.02%)</title><rect x="53.9261%" y="677" width="0.0242%" height="15" fill="rgb(209,72,36)" fg:x="2232" fg:w="1"/><text x="54.1761%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.02%)</title><rect x="53.9261%" y="661" width="0.0242%" height="15" fill="rgb(247,98,49)" fg:x="2232" fg:w="1"/><text x="54.1761%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="53.9261%" y="645" width="0.0242%" height="15" fill="rgb(233,75,36)" fg:x="2232" fg:w="1"/><text x="54.1761%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (3 samples, 0.07%)</title><rect x="53.9019%" y="789" width="0.0725%" height="15" fill="rgb(225,14,24)" fg:x="2231" fg:w="3"/><text x="54.1519%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.07%)</title><rect x="53.9019%" y="773" width="0.0725%" height="15" fill="rgb(237,193,20)" fg:x="2231" fg:w="3"/><text x="54.1519%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.07%)</title><rect x="53.9019%" y="757" width="0.0725%" height="15" fill="rgb(239,122,19)" fg:x="2231" fg:w="3"/><text x="54.1519%" y="767.50"></text></g><g><title>y2021::d14::main::better_step::{{closure}} (3 samples, 0.07%)</title><rect x="53.9019%" y="741" width="0.0725%" height="15" fill="rgb(231,220,10)" fg:x="2231" fg:w="3"/><text x="54.1519%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.02%)</title><rect x="53.9502%" y="725" width="0.0242%" height="15" fill="rgb(220,66,15)" fg:x="2233" fg:w="1"/><text x="54.2002%" y="735.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="53.9502%" y="709" width="0.0242%" height="15" fill="rgb(215,171,52)" fg:x="2233" fg:w="1"/><text x="54.2002%" y="719.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="53.9502%" y="693" width="0.0242%" height="15" fill="rgb(241,169,50)" fg:x="2233" fg:w="1"/><text x="54.2002%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.9502%" y="677" width="0.0242%" height="15" fill="rgb(236,189,0)" fg:x="2233" fg:w="1"/><text x="54.2002%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.9502%" y="661" width="0.0242%" height="15" fill="rgb(217,147,20)" fg:x="2233" fg:w="1"/><text x="54.2002%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.9502%" y="645" width="0.0242%" height="15" fill="rgb(206,188,39)" fg:x="2233" fg:w="1"/><text x="54.2002%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="53.9502%" y="629" width="0.0242%" height="15" fill="rgb(227,118,25)" fg:x="2233" fg:w="1"/><text x="54.2002%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="53.9502%" y="613" width="0.0242%" height="15" fill="rgb(248,171,40)" fg:x="2233" fg:w="1"/><text x="54.2002%" y="623.50"></text></g><g><title>y2021::d14::main::run (5 samples, 0.12%)</title><rect x="53.8777%" y="965" width="0.1208%" height="15" fill="rgb(251,90,54)" fg:x="2230" fg:w="5"/><text x="54.1277%" y="975.50"></text></g><g><title>y2021::d14::main::p02 (4 samples, 0.10%)</title><rect x="53.9019%" y="949" width="0.0966%" height="15" fill="rgb(234,11,46)" fg:x="2231" fg:w="4"/><text x="54.1519%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.10%)</title><rect x="53.9019%" y="933" width="0.0966%" height="15" fill="rgb(229,134,13)" fg:x="2231" fg:w="4"/><text x="54.1519%" y="943.50"></text></g><g><title>y2021::d14::main::p02::{{closure}} (4 samples, 0.10%)</title><rect x="53.9019%" y="917" width="0.0966%" height="15" fill="rgb(223,129,3)" fg:x="2231" fg:w="4"/><text x="54.1519%" y="927.50"></text></g><g><title>y2021::d14::main::better_step (4 samples, 0.10%)</title><rect x="53.9019%" y="901" width="0.0966%" height="15" fill="rgb(221,124,13)" fg:x="2231" fg:w="4"/><text x="54.1519%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.10%)</title><rect x="53.9019%" y="885" width="0.0966%" height="15" fill="rgb(234,3,18)" fg:x="2231" fg:w="4"/><text x="54.1519%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.10%)</title><rect x="53.9019%" y="869" width="0.0966%" height="15" fill="rgb(249,199,20)" fg:x="2231" fg:w="4"/><text x="54.1519%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.10%)</title><rect x="53.9019%" y="853" width="0.0966%" height="15" fill="rgb(224,134,6)" fg:x="2231" fg:w="4"/><text x="54.1519%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.10%)</title><rect x="53.9019%" y="837" width="0.0966%" height="15" fill="rgb(254,83,26)" fg:x="2231" fg:w="4"/><text x="54.1519%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.10%)</title><rect x="53.9019%" y="821" width="0.0966%" height="15" fill="rgb(217,88,9)" fg:x="2231" fg:w="4"/><text x="54.1519%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.10%)</title><rect x="53.9019%" y="805" width="0.0966%" height="15" fill="rgb(225,73,2)" fg:x="2231" fg:w="4"/><text x="54.1519%" y="815.50"></text></g><g><title>y2021::d14::main::better_step::{{closure}} (1 samples, 0.02%)</title><rect x="53.9744%" y="789" width="0.0242%" height="15" fill="rgb(226,44,39)" fg:x="2234" fg:w="1"/><text x="54.2244%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="53.9744%" y="773" width="0.0242%" height="15" fill="rgb(228,53,17)" fg:x="2234" fg:w="1"/><text x="54.2244%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="53.9744%" y="757" width="0.0242%" height="15" fill="rgb(212,27,27)" fg:x="2234" fg:w="1"/><text x="54.2244%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="53.9744%" y="741" width="0.0242%" height="15" fill="rgb(241,50,6)" fg:x="2234" fg:w="1"/><text x="54.2244%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="53.9744%" y="725" width="0.0242%" height="15" fill="rgb(225,28,51)" fg:x="2234" fg:w="1"/><text x="54.2244%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.9744%" y="709" width="0.0242%" height="15" fill="rgb(215,33,16)" fg:x="2234" fg:w="1"/><text x="54.2244%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.9744%" y="693" width="0.0242%" height="15" fill="rgb(243,40,39)" fg:x="2234" fg:w="1"/><text x="54.2244%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.9744%" y="677" width="0.0242%" height="15" fill="rgb(225,11,42)" fg:x="2234" fg:w="1"/><text x="54.2244%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.05%)</title><rect x="54.0227%" y="933" width="0.0483%" height="15" fill="rgb(241,220,38)" fg:x="2236" fg:w="2"/><text x="54.2727%" y="943.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.05%)</title><rect x="54.0227%" y="917" width="0.0483%" height="15" fill="rgb(244,52,35)" fg:x="2236" fg:w="2"/><text x="54.2727%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="54.0469%" y="901" width="0.0242%" height="15" fill="rgb(246,42,46)" fg:x="2237" fg:w="1"/><text x="54.2969%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (1 samples, 0.02%)</title><rect x="54.0469%" y="885" width="0.0242%" height="15" fill="rgb(205,184,13)" fg:x="2237" fg:w="1"/><text x="54.2969%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_allocation (1 samples, 0.02%)</title><rect x="54.0469%" y="869" width="0.0242%" height="15" fill="rgb(209,48,36)" fg:x="2237" fg:w="1"/><text x="54.2969%" y="879.50"></text></g><g><title>hashbrown::raw::calculate_layout (1 samples, 0.02%)</title><rect x="54.0469%" y="853" width="0.0242%" height="15" fill="rgb(244,34,51)" fg:x="2237" fg:w="1"/><text x="54.2969%" y="863.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.02%)</title><rect x="54.0469%" y="837" width="0.0242%" height="15" fill="rgb(221,107,33)" fg:x="2237" fg:w="1"/><text x="54.2969%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="54.0469%" y="821" width="0.0242%" height="15" fill="rgb(224,203,12)" fg:x="2237" fg:w="1"/><text x="54.2969%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="54.0469%" y="805" width="0.0242%" height="15" fill="rgb(230,215,18)" fg:x="2237" fg:w="1"/><text x="54.2969%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="54.0710%" y="933" width="0.0242%" height="15" fill="rgb(206,185,35)" fg:x="2238" fg:w="1"/><text x="54.3210%" y="943.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="54.0710%" y="917" width="0.0242%" height="15" fill="rgb(228,140,34)" fg:x="2238" fg:w="1"/><text x="54.3210%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="54.0710%" y="901" width="0.0242%" height="15" fill="rgb(208,93,13)" fg:x="2238" fg:w="1"/><text x="54.3210%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="54.0710%" y="885" width="0.0242%" height="15" fill="rgb(221,193,39)" fg:x="2238" fg:w="1"/><text x="54.3210%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="54.0710%" y="869" width="0.0242%" height="15" fill="rgb(241,132,34)" fg:x="2238" fg:w="1"/><text x="54.3210%" y="879.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (3 samples, 0.07%)</title><rect x="54.0952%" y="933" width="0.0725%" height="15" fill="rgb(221,141,10)" fg:x="2239" fg:w="3"/><text x="54.3452%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.07%)</title><rect x="54.0952%" y="917" width="0.0725%" height="15" fill="rgb(226,90,31)" fg:x="2239" fg:w="3"/><text x="54.3452%" y="927.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (3 samples, 0.07%)</title><rect x="54.0952%" y="901" width="0.0725%" height="15" fill="rgb(243,75,5)" fg:x="2239" fg:w="3"/><text x="54.3452%" y="911.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (3 samples, 0.07%)</title><rect x="54.0952%" y="885" width="0.0725%" height="15" fill="rgb(227,156,21)" fg:x="2239" fg:w="3"/><text x="54.3452%" y="895.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (2 samples, 0.05%)</title><rect x="54.1194%" y="869" width="0.0483%" height="15" fill="rgb(250,195,8)" fg:x="2240" fg:w="2"/><text x="54.3694%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.05%)</title><rect x="54.1194%" y="853" width="0.0483%" height="15" fill="rgb(220,134,5)" fg:x="2240" fg:w="2"/><text x="54.3694%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.05%)</title><rect x="54.1194%" y="837" width="0.0483%" height="15" fill="rgb(246,106,34)" fg:x="2240" fg:w="2"/><text x="54.3694%" y="847.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="54.1677%" y="837" width="0.0242%" height="15" fill="rgb(205,1,4)" fg:x="2242" fg:w="1"/><text x="54.4177%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;(usize,usize),usize&gt;&gt; (3 samples, 0.07%)</title><rect x="54.1677%" y="933" width="0.0725%" height="15" fill="rgb(224,151,29)" fg:x="2242" fg:w="3"/><text x="54.4177%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;(usize,usize),usize&gt;&gt; (3 samples, 0.07%)</title><rect x="54.1677%" y="917" width="0.0725%" height="15" fill="rgb(251,196,0)" fg:x="2242" fg:w="3"/><text x="54.4177%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;((usize,usize),usize)&gt;&gt; (3 samples, 0.07%)</title><rect x="54.1677%" y="901" width="0.0725%" height="15" fill="rgb(212,127,0)" fg:x="2242" fg:w="3"/><text x="54.4177%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="54.1677%" y="885" width="0.0725%" height="15" fill="rgb(236,71,53)" fg:x="2242" fg:w="3"/><text x="54.4177%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="54.1677%" y="869" width="0.0725%" height="15" fill="rgb(227,99,0)" fg:x="2242" fg:w="3"/><text x="54.4177%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="54.1677%" y="853" width="0.0725%" height="15" fill="rgb(239,89,21)" fg:x="2242" fg:w="3"/><text x="54.4177%" y="863.50"></text></g><g><title>_int_free (2 samples, 0.05%)</title><rect x="54.1918%" y="837" width="0.0483%" height="15" fill="rgb(243,122,19)" fg:x="2243" fg:w="2"/><text x="54.4418%" y="847.50"></text></g><g><title>tcache_put (2 samples, 0.05%)</title><rect x="54.1918%" y="821" width="0.0483%" height="15" fill="rgb(229,192,45)" fg:x="2243" fg:w="2"/><text x="54.4418%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="54.2643%" y="885" width="0.0242%" height="15" fill="rgb(235,165,35)" fg:x="2246" fg:w="1"/><text x="54.5143%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.2643%" y="869" width="0.0242%" height="15" fill="rgb(253,202,0)" fg:x="2246" fg:w="1"/><text x="54.5143%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.2643%" y="853" width="0.0242%" height="15" fill="rgb(235,51,20)" fg:x="2246" fg:w="1"/><text x="54.5143%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.2643%" y="837" width="0.0242%" height="15" fill="rgb(218,95,46)" fg:x="2246" fg:w="1"/><text x="54.5143%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="54.2643%" y="821" width="0.0242%" height="15" fill="rgb(212,81,10)" fg:x="2246" fg:w="1"/><text x="54.5143%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="54.2643%" y="805" width="0.0242%" height="15" fill="rgb(240,59,0)" fg:x="2246" fg:w="1"/><text x="54.5143%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (3 samples, 0.07%)</title><rect x="54.2402%" y="933" width="0.0725%" height="15" fill="rgb(212,191,42)" fg:x="2245" fg:w="3"/><text x="54.4902%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.07%)</title><rect x="54.2402%" y="917" width="0.0725%" height="15" fill="rgb(233,140,3)" fg:x="2245" fg:w="3"/><text x="54.4902%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.07%)</title><rect x="54.2402%" y="901" width="0.0725%" height="15" fill="rgb(215,69,23)" fg:x="2245" fg:w="3"/><text x="54.4902%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="54.2885%" y="885" width="0.0242%" height="15" fill="rgb(240,202,20)" fg:x="2247" fg:w="1"/><text x="54.5385%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="54.2885%" y="869" width="0.0242%" height="15" fill="rgb(209,146,50)" fg:x="2247" fg:w="1"/><text x="54.5385%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="54.2885%" y="853" width="0.0242%" height="15" fill="rgb(253,102,54)" fg:x="2247" fg:w="1"/><text x="54.5385%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="54.2885%" y="837" width="0.0242%" height="15" fill="rgb(250,173,47)" fg:x="2247" fg:w="1"/><text x="54.5385%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="54.2885%" y="821" width="0.0242%" height="15" fill="rgb(232,142,7)" fg:x="2247" fg:w="1"/><text x="54.5385%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="54.2885%" y="805" width="0.0242%" height="15" fill="rgb(230,157,47)" fg:x="2247" fg:w="1"/><text x="54.5385%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="54.2885%" y="789" width="0.0242%" height="15" fill="rgb(214,177,35)" fg:x="2247" fg:w="1"/><text x="54.5385%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="54.2885%" y="773" width="0.0242%" height="15" fill="rgb(234,119,46)" fg:x="2247" fg:w="1"/><text x="54.5385%" y="783.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="54.2885%" y="757" width="0.0242%" height="15" fill="rgb(241,180,50)" fg:x="2247" fg:w="1"/><text x="54.5385%" y="767.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="54.3126%" y="901" width="0.0242%" height="15" fill="rgb(221,54,25)" fg:x="2248" fg:w="1"/><text x="54.5626%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.3126%" y="885" width="0.0242%" height="15" fill="rgb(209,157,44)" fg:x="2248" fg:w="1"/><text x="54.5626%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.3126%" y="869" width="0.0242%" height="15" fill="rgb(246,115,41)" fg:x="2248" fg:w="1"/><text x="54.5626%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.3126%" y="853" width="0.0242%" height="15" fill="rgb(229,86,1)" fg:x="2248" fg:w="1"/><text x="54.5626%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="54.3126%" y="837" width="0.0242%" height="15" fill="rgb(240,108,53)" fg:x="2248" fg:w="1"/><text x="54.5626%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="54.3126%" y="821" width="0.0242%" height="15" fill="rgb(227,134,2)" fg:x="2248" fg:w="1"/><text x="54.5626%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.3610%" y="805" width="0.0242%" height="15" fill="rgb(213,129,25)" fg:x="2250" fg:w="1"/><text x="54.6110%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.3610%" y="789" width="0.0242%" height="15" fill="rgb(226,35,21)" fg:x="2250" fg:w="1"/><text x="54.6110%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.3610%" y="773" width="0.0242%" height="15" fill="rgb(208,129,26)" fg:x="2250" fg:w="1"/><text x="54.6110%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="54.3610%" y="757" width="0.0242%" height="15" fill="rgb(224,83,6)" fg:x="2250" fg:w="1"/><text x="54.6110%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="54.3610%" y="741" width="0.0242%" height="15" fill="rgb(227,52,39)" fg:x="2250" fg:w="1"/><text x="54.6110%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.10%)</title><rect x="54.3126%" y="933" width="0.0966%" height="15" fill="rgb(241,30,17)" fg:x="2248" fg:w="4"/><text x="54.5626%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.10%)</title><rect x="54.3126%" y="917" width="0.0966%" height="15" fill="rgb(246,186,42)" fg:x="2248" fg:w="4"/><text x="54.5626%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.07%)</title><rect x="54.3368%" y="901" width="0.0725%" height="15" fill="rgb(221,169,15)" fg:x="2249" fg:w="3"/><text x="54.5868%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.07%)</title><rect x="54.3368%" y="885" width="0.0725%" height="15" fill="rgb(235,108,21)" fg:x="2249" fg:w="3"/><text x="54.5868%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.07%)</title><rect x="54.3368%" y="869" width="0.0725%" height="15" fill="rgb(219,148,30)" fg:x="2249" fg:w="3"/><text x="54.5868%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.07%)</title><rect x="54.3368%" y="853" width="0.0725%" height="15" fill="rgb(220,109,5)" fg:x="2249" fg:w="3"/><text x="54.5868%" y="863.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (3 samples, 0.07%)</title><rect x="54.3368%" y="837" width="0.0725%" height="15" fill="rgb(213,203,48)" fg:x="2249" fg:w="3"/><text x="54.5868%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.07%)</title><rect x="54.3368%" y="821" width="0.0725%" height="15" fill="rgb(244,71,33)" fg:x="2249" fg:w="3"/><text x="54.5868%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (1 samples, 0.02%)</title><rect x="54.3851%" y="805" width="0.0242%" height="15" fill="rgb(209,23,2)" fg:x="2251" fg:w="1"/><text x="54.6351%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="54.3851%" y="789" width="0.0242%" height="15" fill="rgb(219,97,7)" fg:x="2251" fg:w="1"/><text x="54.6351%" y="799.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="54.3851%" y="773" width="0.0242%" height="15" fill="rgb(216,161,23)" fg:x="2251" fg:w="1"/><text x="54.6351%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="54.3851%" y="757" width="0.0242%" height="15" fill="rgb(207,45,42)" fg:x="2251" fg:w="1"/><text x="54.6351%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="54.3851%" y="741" width="0.0242%" height="15" fill="rgb(241,61,4)" fg:x="2251" fg:w="1"/><text x="54.6351%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="54.3851%" y="725" width="0.0242%" height="15" fill="rgb(236,170,1)" fg:x="2251" fg:w="1"/><text x="54.6351%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="54.4093%" y="757" width="0.0242%" height="15" fill="rgb(239,72,5)" fg:x="2252" fg:w="1"/><text x="54.6593%" y="767.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="54.4334%" y="645" width="0.0242%" height="15" fill="rgb(214,13,50)" fg:x="2253" fg:w="1"/><text x="54.6834%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (1 samples, 0.02%)</title><rect x="54.4334%" y="629" width="0.0242%" height="15" fill="rgb(224,88,9)" fg:x="2253" fg:w="1"/><text x="54.6834%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="54.4334%" y="613" width="0.0242%" height="15" fill="rgb(238,192,34)" fg:x="2253" fg:w="1"/><text x="54.6834%" y="623.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="54.4334%" y="597" width="0.0242%" height="15" fill="rgb(217,203,50)" fg:x="2253" fg:w="1"/><text x="54.6834%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="54.4334%" y="581" width="0.0242%" height="15" fill="rgb(241,123,32)" fg:x="2253" fg:w="1"/><text x="54.6834%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="54.4334%" y="565" width="0.0242%" height="15" fill="rgb(248,151,39)" fg:x="2253" fg:w="1"/><text x="54.6834%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="54.4334%" y="549" width="0.0242%" height="15" fill="rgb(208,89,6)" fg:x="2253" fg:w="1"/><text x="54.6834%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="54.4334%" y="533" width="0.0242%" height="15" fill="rgb(254,43,26)" fg:x="2253" fg:w="1"/><text x="54.6834%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="54.4334%" y="517" width="0.0242%" height="15" fill="rgb(216,158,13)" fg:x="2253" fg:w="1"/><text x="54.6834%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.05%)</title><rect x="54.4334%" y="693" width="0.0483%" height="15" fill="rgb(212,47,37)" fg:x="2253" fg:w="2"/><text x="54.6834%" y="703.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (2 samples, 0.05%)</title><rect x="54.4334%" y="677" width="0.0483%" height="15" fill="rgb(254,16,10)" fg:x="2253" fg:w="2"/><text x="54.6834%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="54.4334%" y="661" width="0.0483%" height="15" fill="rgb(223,228,16)" fg:x="2253" fg:w="2"/><text x="54.6834%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="54.4576%" y="645" width="0.0242%" height="15" fill="rgb(249,108,50)" fg:x="2254" fg:w="1"/><text x="54.7076%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="54.4576%" y="629" width="0.0242%" height="15" fill="rgb(208,220,5)" fg:x="2254" fg:w="1"/><text x="54.7076%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="54.4576%" y="613" width="0.0242%" height="15" fill="rgb(217,89,48)" fg:x="2254" fg:w="1"/><text x="54.7076%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="54.4576%" y="597" width="0.0242%" height="15" fill="rgb(212,113,41)" fg:x="2254" fg:w="1"/><text x="54.7076%" y="607.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="54.4576%" y="581" width="0.0242%" height="15" fill="rgb(231,127,5)" fg:x="2254" fg:w="1"/><text x="54.7076%" y="591.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="54.4576%" y="565" width="0.0242%" height="15" fill="rgb(217,141,17)" fg:x="2254" fg:w="1"/><text x="54.7076%" y="575.50"></text></g><g><title>core::ptr::swap_nonoverlapping (1 samples, 0.02%)</title><rect x="54.4576%" y="549" width="0.0242%" height="15" fill="rgb(245,125,54)" fg:x="2254" fg:w="1"/><text x="54.7076%" y="559.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (1 samples, 0.02%)</title><rect x="54.4576%" y="533" width="0.0242%" height="15" fill="rgb(248,125,3)" fg:x="2254" fg:w="1"/><text x="54.7076%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="54.4576%" y="517" width="0.0242%" height="15" fill="rgb(236,119,51)" fg:x="2254" fg:w="1"/><text x="54.7076%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.4818%" y="613" width="0.0242%" height="15" fill="rgb(239,99,8)" fg:x="2255" fg:w="1"/><text x="54.7318%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.4818%" y="597" width="0.0242%" height="15" fill="rgb(224,228,4)" fg:x="2255" fg:w="1"/><text x="54.7318%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.4818%" y="581" width="0.0242%" height="15" fill="rgb(220,131,45)" fg:x="2255" fg:w="1"/><text x="54.7318%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="54.4818%" y="565" width="0.0242%" height="15" fill="rgb(215,62,5)" fg:x="2255" fg:w="1"/><text x="54.7318%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="54.4818%" y="549" width="0.0242%" height="15" fill="rgb(253,12,24)" fg:x="2255" fg:w="1"/><text x="54.7318%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.07%)</title><rect x="54.4818%" y="629" width="0.0725%" height="15" fill="rgb(248,120,50)" fg:x="2255" fg:w="3"/><text x="54.7318%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (2 samples, 0.05%)</title><rect x="54.5059%" y="613" width="0.0483%" height="15" fill="rgb(245,194,10)" fg:x="2256" fg:w="2"/><text x="54.7559%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.05%)</title><rect x="54.5059%" y="597" width="0.0483%" height="15" fill="rgb(241,149,38)" fg:x="2256" fg:w="2"/><text x="54.7559%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.05%)</title><rect x="54.5059%" y="581" width="0.0483%" height="15" fill="rgb(219,215,7)" fg:x="2256" fg:w="2"/><text x="54.7559%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="54.5059%" y="565" width="0.0483%" height="15" fill="rgb(208,120,31)" fg:x="2256" fg:w="2"/><text x="54.7559%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="54.5059%" y="549" width="0.0483%" height="15" fill="rgb(244,30,8)" fg:x="2256" fg:w="2"/><text x="54.7559%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="54.5059%" y="533" width="0.0483%" height="15" fill="rgb(238,35,44)" fg:x="2256" fg:w="2"/><text x="54.7559%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="54.5301%" y="517" width="0.0242%" height="15" fill="rgb(243,218,37)" fg:x="2257" fg:w="1"/><text x="54.7801%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="54.5784%" y="549" width="0.0242%" height="15" fill="rgb(218,169,10)" fg:x="2259" fg:w="1"/><text x="54.8284%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (6 samples, 0.14%)</title><rect x="54.4818%" y="677" width="0.1450%" height="15" fill="rgb(221,144,10)" fg:x="2255" fg:w="6"/><text x="54.7318%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (6 samples, 0.14%)</title><rect x="54.4818%" y="661" width="0.1450%" height="15" fill="rgb(226,41,38)" fg:x="2255" fg:w="6"/><text x="54.7318%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.14%)</title><rect x="54.4818%" y="645" width="0.1450%" height="15" fill="rgb(228,3,1)" fg:x="2255" fg:w="6"/><text x="54.7318%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.07%)</title><rect x="54.5542%" y="629" width="0.0725%" height="15" fill="rgb(209,129,12)" fg:x="2258" fg:w="3"/><text x="54.8042%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.07%)</title><rect x="54.5542%" y="613" width="0.0725%" height="15" fill="rgb(213,136,33)" fg:x="2258" fg:w="3"/><text x="54.8042%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="54.5784%" y="597" width="0.0483%" height="15" fill="rgb(209,181,29)" fg:x="2259" fg:w="2"/><text x="54.8284%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="54.5784%" y="581" width="0.0483%" height="15" fill="rgb(234,173,18)" fg:x="2259" fg:w="2"/><text x="54.8284%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.05%)</title><rect x="54.5784%" y="565" width="0.0483%" height="15" fill="rgb(227,73,47)" fg:x="2259" fg:w="2"/><text x="54.8284%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="54.6026%" y="549" width="0.0242%" height="15" fill="rgb(234,9,34)" fg:x="2260" fg:w="1"/><text x="54.8526%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="54.6026%" y="533" width="0.0242%" height="15" fill="rgb(235,172,15)" fg:x="2260" fg:w="1"/><text x="54.8526%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="54.6026%" y="517" width="0.0242%" height="15" fill="rgb(245,61,2)" fg:x="2260" fg:w="1"/><text x="54.8526%" y="527.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="54.6026%" y="501" width="0.0242%" height="15" fill="rgb(238,39,47)" fg:x="2260" fg:w="1"/><text x="54.8526%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.6267%" y="613" width="0.0242%" height="15" fill="rgb(234,37,24)" fg:x="2261" fg:w="1"/><text x="54.8767%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.6267%" y="597" width="0.0242%" height="15" fill="rgb(248,223,24)" fg:x="2261" fg:w="1"/><text x="54.8767%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.6267%" y="581" width="0.0242%" height="15" fill="rgb(223,12,15)" fg:x="2261" fg:w="1"/><text x="54.8767%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="54.6267%" y="565" width="0.0242%" height="15" fill="rgb(249,6,3)" fg:x="2261" fg:w="1"/><text x="54.8767%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="54.6267%" y="549" width="0.0242%" height="15" fill="rgb(237,105,33)" fg:x="2261" fg:w="1"/><text x="54.8767%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.10%)</title><rect x="54.6267%" y="629" width="0.0966%" height="15" fill="rgb(252,208,35)" fg:x="2261" fg:w="4"/><text x="54.8767%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (3 samples, 0.07%)</title><rect x="54.6509%" y="613" width="0.0725%" height="15" fill="rgb(215,181,35)" fg:x="2262" fg:w="3"/><text x="54.9009%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.07%)</title><rect x="54.6509%" y="597" width="0.0725%" height="15" fill="rgb(246,212,3)" fg:x="2262" fg:w="3"/><text x="54.9009%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.07%)</title><rect x="54.6509%" y="581" width="0.0725%" height="15" fill="rgb(247,156,24)" fg:x="2262" fg:w="3"/><text x="54.9009%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="54.6509%" y="565" width="0.0725%" height="15" fill="rgb(248,9,31)" fg:x="2262" fg:w="3"/><text x="54.9009%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="54.6509%" y="549" width="0.0725%" height="15" fill="rgb(234,26,45)" fg:x="2262" fg:w="3"/><text x="54.9009%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="54.6509%" y="533" width="0.0725%" height="15" fill="rgb(249,11,32)" fg:x="2262" fg:w="3"/><text x="54.9009%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="54.6992%" y="517" width="0.0242%" height="15" fill="rgb(249,162,33)" fg:x="2264" fg:w="1"/><text x="54.9492%" y="527.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (14 samples, 0.34%)</title><rect x="54.4334%" y="709" width="0.3382%" height="15" fill="rgb(232,4,32)" fg:x="2253" fg:w="14"/><text x="54.6834%" y="719.50"></text></g><g><title>y2021::d15::main::next_points::{{closure}} (12 samples, 0.29%)</title><rect x="54.4818%" y="693" width="0.2899%" height="15" fill="rgb(212,5,45)" fg:x="2255" fg:w="12"/><text x="54.7318%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.14%)</title><rect x="54.6267%" y="677" width="0.1450%" height="15" fill="rgb(227,95,13)" fg:x="2261" fg:w="6"/><text x="54.8767%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.14%)</title><rect x="54.6267%" y="661" width="0.1450%" height="15" fill="rgb(223,205,10)" fg:x="2261" fg:w="6"/><text x="54.8767%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.14%)</title><rect x="54.6267%" y="645" width="0.1450%" height="15" fill="rgb(222,178,8)" fg:x="2261" fg:w="6"/><text x="54.8767%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.05%)</title><rect x="54.7234%" y="629" width="0.0483%" height="15" fill="rgb(216,13,22)" fg:x="2265" fg:w="2"/><text x="54.9734%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="54.7234%" y="613" width="0.0483%" height="15" fill="rgb(240,167,12)" fg:x="2265" fg:w="2"/><text x="54.9734%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="54.7475%" y="597" width="0.0242%" height="15" fill="rgb(235,68,35)" fg:x="2266" fg:w="1"/><text x="54.9975%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="54.7475%" y="581" width="0.0242%" height="15" fill="rgb(253,40,27)" fg:x="2266" fg:w="1"/><text x="54.9975%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="54.7475%" y="565" width="0.0242%" height="15" fill="rgb(214,19,28)" fg:x="2266" fg:w="1"/><text x="54.9975%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="54.7475%" y="549" width="0.0242%" height="15" fill="rgb(210,167,45)" fg:x="2266" fg:w="1"/><text x="54.9975%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="54.7475%" y="533" width="0.0242%" height="15" fill="rgb(232,97,40)" fg:x="2266" fg:w="1"/><text x="54.9975%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="54.7475%" y="517" width="0.0242%" height="15" fill="rgb(250,35,23)" fg:x="2266" fg:w="1"/><text x="54.9975%" y="527.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="54.7475%" y="501" width="0.0242%" height="15" fill="rgb(248,47,53)" fg:x="2266" fg:w="1"/><text x="54.9975%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="54.8200%" y="581" width="0.0242%" height="15" fill="rgb(226,58,50)" fg:x="2269" fg:w="1"/><text x="55.0700%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="54.8200%" y="565" width="0.0242%" height="15" fill="rgb(217,105,26)" fg:x="2269" fg:w="1"/><text x="55.0700%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="54.7958%" y="629" width="0.0725%" height="15" fill="rgb(208,64,1)" fg:x="2268" fg:w="3"/><text x="55.0458%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="54.7958%" y="613" width="0.0725%" height="15" fill="rgb(214,80,1)" fg:x="2268" fg:w="3"/><text x="55.0458%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="54.7958%" y="597" width="0.0725%" height="15" fill="rgb(206,175,26)" fg:x="2268" fg:w="3"/><text x="55.0458%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="54.8442%" y="581" width="0.0242%" height="15" fill="rgb(235,156,37)" fg:x="2270" fg:w="1"/><text x="55.0942%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.12%)</title><rect x="54.7958%" y="645" width="0.1208%" height="15" fill="rgb(213,100,9)" fg:x="2268" fg:w="5"/><text x="55.0458%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (2 samples, 0.05%)</title><rect x="54.8683%" y="629" width="0.0483%" height="15" fill="rgb(241,15,13)" fg:x="2271" fg:w="2"/><text x="55.1183%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.05%)</title><rect x="54.8683%" y="613" width="0.0483%" height="15" fill="rgb(205,97,43)" fg:x="2271" fg:w="2"/><text x="55.1183%" y="623.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.05%)</title><rect x="54.8683%" y="597" width="0.0483%" height="15" fill="rgb(216,106,32)" fg:x="2271" fg:w="2"/><text x="55.1183%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="54.8683%" y="581" width="0.0483%" height="15" fill="rgb(226,200,8)" fg:x="2271" fg:w="2"/><text x="55.1183%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="54.8683%" y="565" width="0.0483%" height="15" fill="rgb(244,54,29)" fg:x="2271" fg:w="2"/><text x="55.1183%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="54.8683%" y="549" width="0.0483%" height="15" fill="rgb(252,169,12)" fg:x="2271" fg:w="2"/><text x="55.1183%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="54.8925%" y="533" width="0.0242%" height="15" fill="rgb(231,199,11)" fg:x="2272" fg:w="1"/><text x="55.1425%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="54.8925%" y="517" width="0.0242%" height="15" fill="rgb(233,191,18)" fg:x="2272" fg:w="1"/><text x="55.1425%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (24 samples, 0.58%)</title><rect x="54.4093%" y="885" width="0.5799%" height="15" fill="rgb(215,83,47)" fg:x="2252" fg:w="24"/><text x="54.6593%" y="895.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (24 samples, 0.58%)</title><rect x="54.4093%" y="869" width="0.5799%" height="15" fill="rgb(251,67,19)" fg:x="2252" fg:w="24"/><text x="54.6593%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (24 samples, 0.58%)</title><rect x="54.4093%" y="853" width="0.5799%" height="15" fill="rgb(240,7,20)" fg:x="2252" fg:w="24"/><text x="54.6593%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.58%)</title><rect x="54.4093%" y="837" width="0.5799%" height="15" fill="rgb(210,150,26)" fg:x="2252" fg:w="24"/><text x="54.6593%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.58%)</title><rect x="54.4093%" y="821" width="0.5799%" height="15" fill="rgb(228,75,42)" fg:x="2252" fg:w="24"/><text x="54.6593%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.58%)</title><rect x="54.4093%" y="805" width="0.5799%" height="15" fill="rgb(237,134,48)" fg:x="2252" fg:w="24"/><text x="54.6593%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.58%)</title><rect x="54.4093%" y="789" width="0.5799%" height="15" fill="rgb(205,80,50)" fg:x="2252" fg:w="24"/><text x="54.6593%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (24 samples, 0.58%)</title><rect x="54.4093%" y="773" width="0.5799%" height="15" fill="rgb(217,74,48)" fg:x="2252" fg:w="24"/><text x="54.6593%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (23 samples, 0.56%)</title><rect x="54.4334%" y="757" width="0.5557%" height="15" fill="rgb(205,82,50)" fg:x="2253" fg:w="23"/><text x="54.6834%" y="767.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (23 samples, 0.56%)</title><rect x="54.4334%" y="741" width="0.5557%" height="15" fill="rgb(228,1,33)" fg:x="2253" fg:w="23"/><text x="54.6834%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (23 samples, 0.56%)</title><rect x="54.4334%" y="725" width="0.5557%" height="15" fill="rgb(214,50,23)" fg:x="2253" fg:w="23"/><text x="54.6834%" y="735.50"></text></g><g><title>y2021::d15::main::next_points::{{closure}} (9 samples, 0.22%)</title><rect x="54.7717%" y="709" width="0.2174%" height="15" fill="rgb(210,62,9)" fg:x="2267" fg:w="9"/><text x="55.0217%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.19%)</title><rect x="54.7958%" y="693" width="0.1933%" height="15" fill="rgb(210,104,37)" fg:x="2268" fg:w="8"/><text x="55.0458%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.19%)</title><rect x="54.7958%" y="677" width="0.1933%" height="15" fill="rgb(232,104,43)" fg:x="2268" fg:w="8"/><text x="55.0458%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.19%)</title><rect x="54.7958%" y="661" width="0.1933%" height="15" fill="rgb(244,52,6)" fg:x="2268" fg:w="8"/><text x="55.0458%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.07%)</title><rect x="54.9166%" y="645" width="0.0725%" height="15" fill="rgb(211,174,52)" fg:x="2273" fg:w="3"/><text x="55.1666%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.07%)</title><rect x="54.9166%" y="629" width="0.0725%" height="15" fill="rgb(229,48,4)" fg:x="2273" fg:w="3"/><text x="55.1666%" y="639.50"></text></g><g><title>y2021::d15::main::next_points (26 samples, 0.63%)</title><rect x="54.4093%" y="933" width="0.6282%" height="15" fill="rgb(205,155,16)" fg:x="2252" fg:w="26"/><text x="54.6593%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.63%)</title><rect x="54.4093%" y="917" width="0.6282%" height="15" fill="rgb(211,141,53)" fg:x="2252" fg:w="26"/><text x="54.6593%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (26 samples, 0.63%)</title><rect x="54.4093%" y="901" width="0.6282%" height="15" fill="rgb(240,148,11)" fg:x="2252" fg:w="26"/><text x="54.6593%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (2 samples, 0.05%)</title><rect x="54.9891%" y="885" width="0.0483%" height="15" fill="rgb(214,45,23)" fg:x="2276" fg:w="2"/><text x="55.2391%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (1 samples, 0.02%)</title><rect x="55.0133%" y="869" width="0.0242%" height="15" fill="rgb(248,74,26)" fg:x="2277" fg:w="1"/><text x="55.2633%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="55.0133%" y="853" width="0.0242%" height="15" fill="rgb(218,121,16)" fg:x="2277" fg:w="1"/><text x="55.2633%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_in (1 samples, 0.02%)</title><rect x="55.0133%" y="837" width="0.0242%" height="15" fill="rgb(218,10,47)" fg:x="2277" fg:w="1"/><text x="55.2633%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::static_empty (1 samples, 0.02%)</title><rect x="55.0133%" y="821" width="0.0242%" height="15" fill="rgb(227,99,14)" fg:x="2277" fg:w="1"/><text x="55.2633%" y="831.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="55.0374%" y="581" width="0.0242%" height="15" fill="rgb(229,83,46)" fg:x="2278" fg:w="1"/><text x="55.2874%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (1 samples, 0.02%)</title><rect x="55.0374%" y="565" width="0.0242%" height="15" fill="rgb(228,25,1)" fg:x="2278" fg:w="1"/><text x="55.2874%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="55.0374%" y="549" width="0.0242%" height="15" fill="rgb(252,190,15)" fg:x="2278" fg:w="1"/><text x="55.2874%" y="559.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="55.0374%" y="533" width="0.0242%" height="15" fill="rgb(213,103,51)" fg:x="2278" fg:w="1"/><text x="55.2874%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="55.0374%" y="517" width="0.0242%" height="15" fill="rgb(220,38,44)" fg:x="2278" fg:w="1"/><text x="55.2874%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="55.0374%" y="501" width="0.0242%" height="15" fill="rgb(210,45,26)" fg:x="2278" fg:w="1"/><text x="55.2874%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="55.0374%" y="485" width="0.0242%" height="15" fill="rgb(205,95,48)" fg:x="2278" fg:w="1"/><text x="55.2874%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.05%)</title><rect x="55.0616%" y="565" width="0.0483%" height="15" fill="rgb(225,179,37)" fg:x="2279" fg:w="2"/><text x="55.3116%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.05%)</title><rect x="55.0616%" y="549" width="0.0483%" height="15" fill="rgb(230,209,3)" fg:x="2279" fg:w="2"/><text x="55.3116%" y="559.50"></text></g><g><title>core::ptr::write (2 samples, 0.05%)</title><rect x="55.0616%" y="533" width="0.0483%" height="15" fill="rgb(248,12,46)" fg:x="2279" fg:w="2"/><text x="55.3116%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="55.1099%" y="485" width="0.0242%" height="15" fill="rgb(234,18,0)" fg:x="2281" fg:w="1"/><text x="55.3599%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="55.1099%" y="469" width="0.0242%" height="15" fill="rgb(238,197,14)" fg:x="2281" fg:w="1"/><text x="55.3599%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="55.1099%" y="453" width="0.0242%" height="15" fill="rgb(251,162,48)" fg:x="2281" fg:w="1"/><text x="55.3599%" y="463.50"></text></g><g><title>y2021::d15::main::p01 (49 samples, 1.18%)</title><rect x="53.9986%" y="949" width="1.1839%" height="15" fill="rgb(237,73,42)" fg:x="2235" fg:w="49"/><text x="54.2486%" y="959.50"></text></g><g><title>y2021::d15::main::parse_input (6 samples, 0.14%)</title><rect x="55.0374%" y="933" width="0.1450%" height="15" fill="rgb(211,108,8)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.14%)</title><rect x="55.0374%" y="917" width="0.1450%" height="15" fill="rgb(213,45,22)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6 samples, 0.14%)</title><rect x="55.0374%" y="901" width="0.1450%" height="15" fill="rgb(252,154,5)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.14%)</title><rect x="55.0374%" y="885" width="0.1450%" height="15" fill="rgb(221,79,52)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="895.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.14%)</title><rect x="55.0374%" y="869" width="0.1450%" height="15" fill="rgb(229,220,36)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.14%)</title><rect x="55.0374%" y="853" width="0.1450%" height="15" fill="rgb(211,17,16)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="55.0374%" y="837" width="0.1450%" height="15" fill="rgb(222,55,31)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="55.0374%" y="821" width="0.1450%" height="15" fill="rgb(221,221,31)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="55.0374%" y="805" width="0.1450%" height="15" fill="rgb(227,168,26)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="55.0374%" y="789" width="0.1450%" height="15" fill="rgb(224,139,9)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="55.0374%" y="773" width="0.1450%" height="15" fill="rgb(254,172,0)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="55.0374%" y="757" width="0.1450%" height="15" fill="rgb(235,203,1)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.14%)</title><rect x="55.0374%" y="741" width="0.1450%" height="15" fill="rgb(216,205,24)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (6 samples, 0.14%)</title><rect x="55.0374%" y="725" width="0.1450%" height="15" fill="rgb(233,24,6)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="735.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (6 samples, 0.14%)</title><rect x="55.0374%" y="709" width="0.1450%" height="15" fill="rgb(244,110,9)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.14%)</title><rect x="55.0374%" y="693" width="0.1450%" height="15" fill="rgb(239,222,42)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (6 samples, 0.14%)</title><rect x="55.0374%" y="677" width="0.1450%" height="15" fill="rgb(218,145,13)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.14%)</title><rect x="55.0374%" y="661" width="0.1450%" height="15" fill="rgb(207,69,11)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.14%)</title><rect x="55.0374%" y="645" width="0.1450%" height="15" fill="rgb(220,223,22)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.14%)</title><rect x="55.0374%" y="629" width="0.1450%" height="15" fill="rgb(245,102,5)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="639.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (6 samples, 0.14%)</title><rect x="55.0374%" y="613" width="0.1450%" height="15" fill="rgb(211,148,2)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.14%)</title><rect x="55.0374%" y="597" width="0.1450%" height="15" fill="rgb(241,13,44)" fg:x="2278" fg:w="6"/><text x="55.2874%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.12%)</title><rect x="55.0616%" y="581" width="0.1208%" height="15" fill="rgb(219,137,21)" fg:x="2279" fg:w="5"/><text x="55.3116%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.07%)</title><rect x="55.1099%" y="565" width="0.0725%" height="15" fill="rgb(242,206,5)" fg:x="2281" fg:w="3"/><text x="55.3599%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.07%)</title><rect x="55.1099%" y="549" width="0.0725%" height="15" fill="rgb(217,114,22)" fg:x="2281" fg:w="3"/><text x="55.3599%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.07%)</title><rect x="55.1099%" y="533" width="0.0725%" height="15" fill="rgb(253,206,42)" fg:x="2281" fg:w="3"/><text x="55.3599%" y="543.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (3 samples, 0.07%)</title><rect x="55.1099%" y="517" width="0.0725%" height="15" fill="rgb(236,102,18)" fg:x="2281" fg:w="3"/><text x="55.3599%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.07%)</title><rect x="55.1099%" y="501" width="0.0725%" height="15" fill="rgb(208,59,49)" fg:x="2281" fg:w="3"/><text x="55.3599%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (2 samples, 0.05%)</title><rect x="55.1341%" y="485" width="0.0483%" height="15" fill="rgb(215,194,28)" fg:x="2282" fg:w="2"/><text x="55.3841%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.05%)</title><rect x="55.1341%" y="469" width="0.0483%" height="15" fill="rgb(243,207,11)" fg:x="2282" fg:w="2"/><text x="55.3841%" y="479.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.05%)</title><rect x="55.1341%" y="453" width="0.0483%" height="15" fill="rgb(254,179,35)" fg:x="2282" fg:w="2"/><text x="55.3841%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="55.1341%" y="437" width="0.0483%" height="15" fill="rgb(235,97,3)" fg:x="2282" fg:w="2"/><text x="55.3841%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="55.1341%" y="421" width="0.0483%" height="15" fill="rgb(215,155,33)" fg:x="2282" fg:w="2"/><text x="55.3841%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="55.1341%" y="405" width="0.0483%" height="15" fill="rgb(223,128,12)" fg:x="2282" fg:w="2"/><text x="55.3841%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.05%)</title><rect x="55.1341%" y="389" width="0.0483%" height="15" fill="rgb(208,157,18)" fg:x="2282" fg:w="2"/><text x="55.3841%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.05%)</title><rect x="55.2791%" y="933" width="0.0483%" height="15" fill="rgb(249,70,54)" fg:x="2288" fg:w="2"/><text x="55.5291%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (2 samples, 0.05%)</title><rect x="55.8831%" y="853" width="0.0483%" height="15" fill="rgb(244,118,24)" fg:x="2313" fg:w="2"/><text x="56.1331%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (6 samples, 0.14%)</title><rect x="55.8106%" y="885" width="0.1450%" height="15" fill="rgb(211,54,0)" fg:x="2310" fg:w="6"/><text x="56.0606%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_allocation (3 samples, 0.07%)</title><rect x="55.8831%" y="869" width="0.0725%" height="15" fill="rgb(245,137,45)" fg:x="2313" fg:w="3"/><text x="56.1331%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (1 samples, 0.02%)</title><rect x="55.9314%" y="853" width="0.0242%" height="15" fill="rgb(232,154,31)" fg:x="2315" fg:w="1"/><text x="56.1814%" y="863.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (2 samples, 0.05%)</title><rect x="56.0763%" y="837" width="0.0483%" height="15" fill="rgb(253,6,39)" fg:x="2321" fg:w="2"/><text x="56.3263%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (34 samples, 0.82%)</title><rect x="55.3274%" y="933" width="0.8215%" height="15" fill="rgb(234,183,24)" fg:x="2290" fg:w="34"/><text x="55.5774%" y="943.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (32 samples, 0.77%)</title><rect x="55.3757%" y="917" width="0.7731%" height="15" fill="rgb(252,84,40)" fg:x="2292" fg:w="32"/><text x="55.6257%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.39%)</title><rect x="55.7623%" y="901" width="0.3866%" height="15" fill="rgb(224,65,2)" fg:x="2308" fg:w="16"/><text x="56.0123%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (8 samples, 0.19%)</title><rect x="55.9555%" y="885" width="0.1933%" height="15" fill="rgb(229,38,24)" fg:x="2316" fg:w="8"/><text x="56.2055%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (3 samples, 0.07%)</title><rect x="56.0763%" y="869" width="0.0725%" height="15" fill="rgb(218,131,50)" fg:x="2321" fg:w="3"/><text x="56.3263%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (3 samples, 0.07%)</title><rect x="56.0763%" y="853" width="0.0725%" height="15" fill="rgb(233,106,18)" fg:x="2321" fg:w="3"/><text x="56.3263%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="56.1247%" y="837" width="0.0242%" height="15" fill="rgb(220,216,11)" fg:x="2323" fg:w="1"/><text x="56.3747%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="56.1247%" y="821" width="0.0242%" height="15" fill="rgb(251,100,45)" fg:x="2323" fg:w="1"/><text x="56.3747%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="56.1730%" y="837" width="0.0242%" height="15" fill="rgb(235,143,32)" fg:x="2325" fg:w="1"/><text x="56.4230%" y="847.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.02%)</title><rect x="56.1730%" y="821" width="0.0242%" height="15" fill="rgb(248,124,34)" fg:x="2325" fg:w="1"/><text x="56.4230%" y="831.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="56.1730%" y="805" width="0.0242%" height="15" fill="rgb(225,221,4)" fg:x="2325" fg:w="1"/><text x="56.4230%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (4 samples, 0.10%)</title><rect x="56.1730%" y="853" width="0.0966%" height="15" fill="rgb(242,27,43)" fg:x="2325" fg:w="4"/><text x="56.4230%" y="863.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.07%)</title><rect x="56.1971%" y="837" width="0.0725%" height="15" fill="rgb(227,54,8)" fg:x="2326" fg:w="3"/><text x="56.4471%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.19%)</title><rect x="56.1488%" y="885" width="0.1933%" height="15" fill="rgb(253,139,49)" fg:x="2324" fg:w="8"/><text x="56.3988%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.19%)</title><rect x="56.1488%" y="869" width="0.1933%" height="15" fill="rgb(231,26,43)" fg:x="2324" fg:w="8"/><text x="56.3988%" y="879.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.07%)</title><rect x="56.2696%" y="853" width="0.0725%" height="15" fill="rgb(207,121,39)" fg:x="2329" fg:w="3"/><text x="56.5196%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.31%)</title><rect x="56.1488%" y="933" width="0.3141%" height="15" fill="rgb(223,101,35)" fg:x="2324" fg:w="13"/><text x="56.3988%" y="943.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.31%)</title><rect x="56.1488%" y="917" width="0.3141%" height="15" fill="rgb(232,87,23)" fg:x="2324" fg:w="13"/><text x="56.3988%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.31%)</title><rect x="56.1488%" y="901" width="0.3141%" height="15" fill="rgb(225,180,29)" fg:x="2324" fg:w="13"/><text x="56.3988%" y="911.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::read (5 samples, 0.12%)</title><rect x="56.3421%" y="885" width="0.1208%" height="15" fill="rgb(225,25,17)" fg:x="2332" fg:w="5"/><text x="56.5921%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (5 samples, 0.12%)</title><rect x="56.3421%" y="869" width="0.1208%" height="15" fill="rgb(223,8,52)" fg:x="2332" fg:w="5"/><text x="56.5921%" y="879.50"></text></g><g><title>core::ptr::read (5 samples, 0.12%)</title><rect x="56.3421%" y="853" width="0.1208%" height="15" fill="rgb(246,42,21)" fg:x="2332" fg:w="5"/><text x="56.5921%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="56.4629%" y="933" width="0.0242%" height="15" fill="rgb(205,64,43)" fg:x="2337" fg:w="1"/><text x="56.7129%" y="943.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="56.4629%" y="917" width="0.0242%" height="15" fill="rgb(221,160,13)" fg:x="2337" fg:w="1"/><text x="56.7129%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="56.4629%" y="901" width="0.0242%" height="15" fill="rgb(239,58,35)" fg:x="2337" fg:w="1"/><text x="56.7129%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="56.4629%" y="885" width="0.0242%" height="15" fill="rgb(251,26,40)" fg:x="2337" fg:w="1"/><text x="56.7129%" y="895.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="56.4629%" y="869" width="0.0242%" height="15" fill="rgb(247,0,4)" fg:x="2337" fg:w="1"/><text x="56.7129%" y="879.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="57.6468%" y="853" width="0.0242%" height="15" fill="rgb(218,130,10)" fg:x="2386" fg:w="1"/><text x="57.8968%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="57.6468%" y="837" width="0.0242%" height="15" fill="rgb(239,32,7)" fg:x="2386" fg:w="1"/><text x="57.8968%" y="847.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="57.6468%" y="821" width="0.0242%" height="15" fill="rgb(210,192,24)" fg:x="2386" fg:w="1"/><text x="57.8968%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="57.6468%" y="805" width="0.0242%" height="15" fill="rgb(226,212,17)" fg:x="2386" fg:w="1"/><text x="57.8968%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="57.6468%" y="789" width="0.0242%" height="15" fill="rgb(219,201,28)" fg:x="2386" fg:w="1"/><text x="57.8968%" y="799.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (5 samples, 0.12%)</title><rect x="57.6709%" y="853" width="0.1208%" height="15" fill="rgb(235,207,41)" fg:x="2387" fg:w="5"/><text x="57.9209%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.12%)</title><rect x="57.6709%" y="837" width="0.1208%" height="15" fill="rgb(241,95,54)" fg:x="2387" fg:w="5"/><text x="57.9209%" y="847.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="57.7917%" y="853" width="0.0483%" height="15" fill="rgb(248,12,23)" fg:x="2392" fg:w="2"/><text x="58.0417%" y="863.50"></text></g><g><title>core::cmp::Ordering::then_with (3 samples, 0.07%)</title><rect x="57.8401%" y="789" width="0.0725%" height="15" fill="rgb(228,173,4)" fg:x="2394" fg:w="3"/><text x="58.0901%" y="799.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp::{{closure}} (2 samples, 0.05%)</title><rect x="57.8642%" y="773" width="0.0483%" height="15" fill="rgb(254,99,5)" fg:x="2395" fg:w="2"/><text x="58.1142%" y="783.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (2 samples, 0.05%)</title><rect x="57.8642%" y="757" width="0.0483%" height="15" fill="rgb(212,184,17)" fg:x="2395" fg:w="2"/><text x="58.1142%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (2 samples, 0.05%)</title><rect x="57.8642%" y="741" width="0.0483%" height="15" fill="rgb(252,174,1)" fg:x="2395" fg:w="2"/><text x="58.1142%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (9 samples, 0.22%)</title><rect x="57.8401%" y="853" width="0.2174%" height="15" fill="rgb(241,118,51)" fg:x="2394" fg:w="9"/><text x="58.0901%" y="863.50"></text></g><g><title>core::cmp::PartialOrd::le (9 samples, 0.22%)</title><rect x="57.8401%" y="837" width="0.2174%" height="15" fill="rgb(227,94,47)" fg:x="2394" fg:w="9"/><text x="58.0901%" y="847.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::PartialOrd&gt;::partial_cmp (9 samples, 0.22%)</title><rect x="57.8401%" y="821" width="0.2174%" height="15" fill="rgb(229,104,2)" fg:x="2394" fg:w="9"/><text x="58.0901%" y="831.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp (9 samples, 0.22%)</title><rect x="57.8401%" y="805" width="0.2174%" height="15" fill="rgb(219,28,31)" fg:x="2394" fg:w="9"/><text x="58.0901%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (6 samples, 0.14%)</title><rect x="57.9125%" y="789" width="0.1450%" height="15" fill="rgb(233,109,36)" fg:x="2397" fg:w="6"/><text x="58.1625%" y="799.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (21 samples, 0.51%)</title><rect x="57.5743%" y="869" width="0.5074%" height="15" fill="rgb(246,88,11)" fg:x="2383" fg:w="21"/><text x="57.8243%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;y2021::d15::main::SearchPosition&gt;&gt; (1 samples, 0.02%)</title><rect x="58.0575%" y="853" width="0.0242%" height="15" fill="rgb(209,212,17)" fg:x="2403" fg:w="1"/><text x="58.3075%" y="863.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="58.0575%" y="837" width="0.0242%" height="15" fill="rgb(243,59,29)" fg:x="2403" fg:w="1"/><text x="58.3075%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="58.0575%" y="821" width="0.0242%" height="15" fill="rgb(244,205,48)" fg:x="2403" fg:w="1"/><text x="58.3075%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.89%)</title><rect x="58.0817%" y="853" width="0.8939%" height="15" fill="rgb(227,30,6)" fg:x="2404" fg:w="37"/><text x="58.3317%" y="863.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (48 samples, 1.16%)</title><rect x="58.0817%" y="869" width="1.1597%" height="15" fill="rgb(220,205,48)" fg:x="2404" fg:w="48"/><text x="58.3317%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11 samples, 0.27%)</title><rect x="58.9756%" y="853" width="0.2658%" height="15" fill="rgb(250,94,14)" fg:x="2441" fg:w="11"/><text x="59.2256%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (11 samples, 0.27%)</title><rect x="58.9756%" y="837" width="0.2658%" height="15" fill="rgb(216,119,42)" fg:x="2441" fg:w="11"/><text x="59.2256%" y="847.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="59.2414%" y="869" width="0.0483%" height="15" fill="rgb(232,155,0)" fg:x="2452" fg:w="2"/><text x="59.4914%" y="879.50"></text></g><g><title>core::cmp::Ordering::then_with (21 samples, 0.51%)</title><rect x="59.7004%" y="805" width="0.5074%" height="15" fill="rgb(212,24,32)" fg:x="2471" fg:w="21"/><text x="59.9504%" y="815.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp::{{closure}} (12 samples, 0.29%)</title><rect x="59.9179%" y="789" width="0.2899%" height="15" fill="rgb(216,69,20)" fg:x="2480" fg:w="12"/><text x="60.1679%" y="799.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (8 samples, 0.19%)</title><rect x="60.0145%" y="773" width="0.1933%" height="15" fill="rgb(229,73,31)" fg:x="2484" fg:w="8"/><text x="60.2645%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (3 samples, 0.07%)</title><rect x="60.1353%" y="757" width="0.0725%" height="15" fill="rgb(224,219,20)" fg:x="2489" fg:w="3"/><text x="60.3853%" y="767.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::PartialOrd&gt;::partial_cmp (50 samples, 1.21%)</title><rect x="59.5071%" y="837" width="1.2080%" height="15" fill="rgb(215,146,41)" fg:x="2463" fg:w="50"/><text x="59.7571%" y="847.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp (50 samples, 1.21%)</title><rect x="59.5071%" y="821" width="1.2080%" height="15" fill="rgb(244,71,31)" fg:x="2463" fg:w="50"/><text x="59.7571%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (21 samples, 0.51%)</title><rect x="60.2078%" y="805" width="0.5074%" height="15" fill="rgb(224,24,11)" fg:x="2492" fg:w="21"/><text x="60.4578%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (60 samples, 1.45%)</title><rect x="59.2897%" y="869" width="1.4496%" height="15" fill="rgb(229,76,15)" fg:x="2454" fg:w="60"/><text x="59.5397%" y="879.50"></text></g><g><title>core::cmp::PartialOrd::le (60 samples, 1.45%)</title><rect x="59.2897%" y="853" width="1.4496%" height="15" fill="rgb(209,93,2)" fg:x="2454" fg:w="60"/><text x="59.5397%" y="863.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="60.7151%" y="837" width="0.0242%" height="15" fill="rgb(216,200,50)" fg:x="2513" fg:w="1"/><text x="60.9651%" y="847.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="60.7151%" y="821" width="0.0242%" height="15" fill="rgb(211,67,34)" fg:x="2513" fg:w="1"/><text x="60.9651%" y="831.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="60.7151%" y="805" width="0.0242%" height="15" fill="rgb(225,87,47)" fg:x="2513" fg:w="1"/><text x="60.9651%" y="815.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="60.7151%" y="789" width="0.0242%" height="15" fill="rgb(217,185,16)" fg:x="2513" fg:w="1"/><text x="60.9651%" y="799.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="60.7151%" y="773" width="0.0242%" height="15" fill="rgb(205,0,0)" fg:x="2513" fg:w="1"/><text x="60.9651%" y="783.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="60.7151%" y="757" width="0.0242%" height="15" fill="rgb(207,116,45)" fg:x="2513" fg:w="1"/><text x="60.9651%" y="767.50"></text></g><g><title>tick_sched_handle.isra.0 (1 samples, 0.02%)</title><rect x="60.7151%" y="741" width="0.0242%" height="15" fill="rgb(221,156,26)" fg:x="2513" fg:w="1"/><text x="60.9651%" y="751.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="60.7151%" y="725" width="0.0242%" height="15" fill="rgb(213,140,4)" fg:x="2513" fg:w="1"/><text x="60.9651%" y="735.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="60.7151%" y="709" width="0.0242%" height="15" fill="rgb(231,224,15)" fg:x="2513" fg:w="1"/><text x="60.9651%" y="719.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="60.7151%" y="693" width="0.0242%" height="15" fill="rgb(244,76,20)" fg:x="2513" fg:w="1"/><text x="60.9651%" y="703.50"></text></g><g><title>perf_pmu_disable.part.0 (1 samples, 0.02%)</title><rect x="60.7151%" y="677" width="0.0242%" height="15" fill="rgb(238,117,7)" fg:x="2513" fg:w="1"/><text x="60.9651%" y="687.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="60.7151%" y="661" width="0.0242%" height="15" fill="rgb(235,1,10)" fg:x="2513" fg:w="1"/><text x="60.9651%" y="671.50"></text></g><g><title>amd_pmu_disable_all (1 samples, 0.02%)</title><rect x="60.7151%" y="645" width="0.0242%" height="15" fill="rgb(216,165,6)" fg:x="2513" fg:w="1"/><text x="60.9651%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="60.7393%" y="821" width="0.0242%" height="15" fill="rgb(246,91,35)" fg:x="2514" fg:w="1"/><text x="60.9893%" y="831.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (152 samples, 3.67%)</title><rect x="57.1394%" y="885" width="3.6724%" height="15" fill="rgb(228,96,24)" fg:x="2365" fg:w="152"/><text x="57.3894%" y="895.50">allo..</text></g><g><title>core::mem::drop (3 samples, 0.07%)</title><rect x="60.7393%" y="869" width="0.0725%" height="15" fill="rgb(254,217,53)" fg:x="2514" fg:w="3"/><text x="60.9893%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;y2021::d15::main::SearchPosition&gt;&gt; (3 samples, 0.07%)</title><rect x="60.7393%" y="853" width="0.0725%" height="15" fill="rgb(209,60,0)" fg:x="2514" fg:w="3"/><text x="60.9893%" y="863.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="60.7393%" y="837" width="0.0725%" height="15" fill="rgb(250,93,26)" fg:x="2514" fg:w="3"/><text x="60.9893%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (2 samples, 0.05%)</title><rect x="60.7635%" y="821" width="0.0483%" height="15" fill="rgb(211,9,40)" fg:x="2515" fg:w="2"/><text x="61.0135%" y="831.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.05%)</title><rect x="60.7635%" y="805" width="0.0483%" height="15" fill="rgb(242,57,20)" fg:x="2515" fg:w="2"/><text x="61.0135%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.05%)</title><rect x="60.7635%" y="789" width="0.0483%" height="15" fill="rgb(248,85,48)" fg:x="2515" fg:w="2"/><text x="61.0135%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.05%)</title><rect x="60.7635%" y="773" width="0.0483%" height="15" fill="rgb(212,117,2)" fg:x="2515" fg:w="2"/><text x="61.0135%" y="783.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (180 samples, 4.35%)</title><rect x="56.4871%" y="933" width="4.3489%" height="15" fill="rgb(243,19,3)" fg:x="2338" fg:w="180"/><text x="56.7371%" y="943.50">alloc..</text></g><g><title>core::option::Option&lt;T&gt;::map (179 samples, 4.32%)</title><rect x="56.5112%" y="917" width="4.3247%" height="15" fill="rgb(232,217,24)" fg:x="2339" fg:w="179"/><text x="56.7612%" y="927.50">core:..</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (156 samples, 3.77%)</title><rect x="57.0669%" y="901" width="3.7690%" height="15" fill="rgb(224,175,40)" fg:x="2362" fg:w="156"/><text x="57.3169%" y="911.50">allo..</text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="60.8118%" y="885" width="0.0242%" height="15" fill="rgb(212,162,32)" fg:x="2517" fg:w="1"/><text x="61.0618%" y="895.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="60.8118%" y="869" width="0.0242%" height="15" fill="rgb(215,9,4)" fg:x="2517" fg:w="1"/><text x="61.0618%" y="879.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="60.8118%" y="853" width="0.0242%" height="15" fill="rgb(242,42,7)" fg:x="2517" fg:w="1"/><text x="61.0618%" y="863.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (3 samples, 0.07%)</title><rect x="60.9568%" y="901" width="0.0725%" height="15" fill="rgb(242,184,45)" fg:x="2523" fg:w="3"/><text x="61.2068%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.07%)</title><rect x="60.9568%" y="885" width="0.0725%" height="15" fill="rgb(228,111,51)" fg:x="2523" fg:w="3"/><text x="61.2068%" y="895.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (10 samples, 0.24%)</title><rect x="60.8360%" y="933" width="0.2416%" height="15" fill="rgb(236,147,17)" fg:x="2518" fg:w="10"/><text x="61.0860%" y="943.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (8 samples, 0.19%)</title><rect x="60.8843%" y="917" width="0.1933%" height="15" fill="rgb(210,75,22)" fg:x="2520" fg:w="8"/><text x="61.1343%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (2 samples, 0.05%)</title><rect x="61.0292%" y="901" width="0.0483%" height="15" fill="rgb(217,159,45)" fg:x="2526" fg:w="2"/><text x="61.2792%" y="911.50"></text></g><g><title>core::cmp::PartialOrd::le (2 samples, 0.05%)</title><rect x="61.0292%" y="885" width="0.0483%" height="15" fill="rgb(245,165,53)" fg:x="2526" fg:w="2"/><text x="61.2792%" y="895.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.05%)</title><rect x="61.0292%" y="869" width="0.0483%" height="15" fill="rgb(251,190,50)" fg:x="2526" fg:w="2"/><text x="61.2792%" y="879.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp (2 samples, 0.05%)</title><rect x="61.0292%" y="853" width="0.0483%" height="15" fill="rgb(208,203,29)" fg:x="2526" fg:w="2"/><text x="61.2792%" y="863.50"></text></g><g><title>core::cmp::Ordering::then_with (2 samples, 0.05%)</title><rect x="61.0292%" y="837" width="0.0483%" height="15" fill="rgb(207,209,35)" fg:x="2526" fg:w="2"/><text x="61.2792%" y="847.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp::{{closure}} (2 samples, 0.05%)</title><rect x="61.0292%" y="821" width="0.0483%" height="15" fill="rgb(230,144,49)" fg:x="2526" fg:w="2"/><text x="61.2792%" y="831.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (2 samples, 0.05%)</title><rect x="61.0292%" y="805" width="0.0483%" height="15" fill="rgb(229,31,6)" fg:x="2526" fg:w="2"/><text x="61.2792%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (2 samples, 0.05%)</title><rect x="61.0292%" y="789" width="0.0483%" height="15" fill="rgb(251,129,24)" fg:x="2526" fg:w="2"/><text x="61.2792%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="61.0776%" y="853" width="0.1208%" height="15" fill="rgb(235,105,15)" fg:x="2528" fg:w="5"/><text x="61.3276%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.12%)</title><rect x="61.0776%" y="837" width="0.1208%" height="15" fill="rgb(216,52,43)" fg:x="2528" fg:w="5"/><text x="61.3276%" y="847.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="61.1259%" y="821" width="0.0725%" height="15" fill="rgb(238,144,41)" fg:x="2530" fg:w="3"/><text x="61.3759%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="61.1259%" y="805" width="0.0725%" height="15" fill="rgb(243,63,9)" fg:x="2530" fg:w="3"/><text x="61.3759%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="61.1259%" y="789" width="0.0725%" height="15" fill="rgb(246,208,1)" fg:x="2530" fg:w="3"/><text x="61.3759%" y="799.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.07%)</title><rect x="61.1259%" y="773" width="0.0725%" height="15" fill="rgb(233,182,18)" fg:x="2530" fg:w="3"/><text x="61.3759%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (16 samples, 0.39%)</title><rect x="61.0776%" y="933" width="0.3866%" height="15" fill="rgb(242,224,8)" fg:x="2528" fg:w="16"/><text x="61.3276%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (16 samples, 0.39%)</title><rect x="61.0776%" y="917" width="0.3866%" height="15" fill="rgb(243,54,37)" fg:x="2528" fg:w="16"/><text x="61.3276%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (16 samples, 0.39%)</title><rect x="61.0776%" y="901" width="0.3866%" height="15" fill="rgb(233,192,12)" fg:x="2528" fg:w="16"/><text x="61.3276%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.39%)</title><rect x="61.0776%" y="885" width="0.3866%" height="15" fill="rgb(251,192,53)" fg:x="2528" fg:w="16"/><text x="61.3276%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.39%)</title><rect x="61.0776%" y="869" width="0.3866%" height="15" fill="rgb(246,141,26)" fg:x="2528" fg:w="16"/><text x="61.3276%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.27%)</title><rect x="61.1984%" y="853" width="0.2658%" height="15" fill="rgb(239,195,19)" fg:x="2533" fg:w="11"/><text x="61.4484%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by::fold::{{closure}} (11 samples, 0.27%)</title><rect x="61.1984%" y="837" width="0.2658%" height="15" fill="rgb(241,16,39)" fg:x="2533" fg:w="11"/><text x="61.4484%" y="847.50"></text></g><g><title>core::cmp::max_by (11 samples, 0.27%)</title><rect x="61.1984%" y="821" width="0.2658%" height="15" fill="rgb(223,13,53)" fg:x="2533" fg:w="11"/><text x="61.4484%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="61.4400%" y="805" width="0.0242%" height="15" fill="rgb(214,227,0)" fg:x="2543" fg:w="1"/><text x="61.6900%" y="815.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="61.4641%" y="629" width="0.0242%" height="15" fill="rgb(228,103,26)" fg:x="2544" fg:w="1"/><text x="61.7141%" y="639.50"></text></g><g><title>tlb_finish_mmu (5 samples, 0.12%)</title><rect x="61.4641%" y="693" width="0.1208%" height="15" fill="rgb(254,177,53)" fg:x="2544" fg:w="5"/><text x="61.7141%" y="703.50"></text></g><g><title>tlb_flush_mmu (5 samples, 0.12%)</title><rect x="61.4641%" y="677" width="0.1208%" height="15" fill="rgb(208,201,34)" fg:x="2544" fg:w="5"/><text x="61.7141%" y="687.50"></text></g><g><title>free_pages_and_swap_cache (5 samples, 0.12%)</title><rect x="61.4641%" y="661" width="0.1208%" height="15" fill="rgb(212,39,5)" fg:x="2544" fg:w="5"/><text x="61.7141%" y="671.50"></text></g><g><title>release_pages (5 samples, 0.12%)</title><rect x="61.4641%" y="645" width="0.1208%" height="15" fill="rgb(246,117,3)" fg:x="2544" fg:w="5"/><text x="61.7141%" y="655.50"></text></g><g><title>free_unref_page_list (4 samples, 0.10%)</title><rect x="61.4883%" y="629" width="0.0966%" height="15" fill="rgb(244,118,39)" fg:x="2545" fg:w="4"/><text x="61.7383%" y="639.50"></text></g><g><title>free_unref_page_commit (3 samples, 0.07%)</title><rect x="61.5124%" y="613" width="0.0725%" height="15" fill="rgb(241,64,10)" fg:x="2546" fg:w="3"/><text x="61.7624%" y="623.50"></text></g><g><title>free_pcppages_bulk (3 samples, 0.07%)</title><rect x="61.5124%" y="597" width="0.0725%" height="15" fill="rgb(229,39,44)" fg:x="2546" fg:w="3"/><text x="61.7624%" y="607.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="61.5608%" y="581" width="0.0242%" height="15" fill="rgb(230,226,3)" fg:x="2548" fg:w="1"/><text x="61.8108%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;(usize,usize),usize&gt;&gt; (12 samples, 0.29%)</title><rect x="61.4641%" y="933" width="0.2899%" height="15" fill="rgb(222,13,42)" fg:x="2544" fg:w="12"/><text x="61.7141%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(usize,usize),usize,std::collections::hash::map::RandomState&gt;&gt; (12 samples, 0.29%)</title><rect x="61.4641%" y="917" width="0.2899%" height="15" fill="rgb(247,180,54)" fg:x="2544" fg:w="12"/><text x="61.7141%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((usize,usize),usize)&gt;&gt; (12 samples, 0.29%)</title><rect x="61.4641%" y="901" width="0.2899%" height="15" fill="rgb(205,96,16)" fg:x="2544" fg:w="12"/><text x="61.7141%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.29%)</title><rect x="61.4641%" y="885" width="0.2899%" height="15" fill="rgb(205,100,21)" fg:x="2544" fg:w="12"/><text x="61.7141%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (12 samples, 0.29%)</title><rect x="61.4641%" y="869" width="0.2899%" height="15" fill="rgb(248,51,4)" fg:x="2544" fg:w="12"/><text x="61.7141%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (12 samples, 0.29%)</title><rect x="61.4641%" y="853" width="0.2899%" height="15" fill="rgb(217,197,30)" fg:x="2544" fg:w="12"/><text x="61.7141%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.29%)</title><rect x="61.4641%" y="837" width="0.2899%" height="15" fill="rgb(240,179,40)" fg:x="2544" fg:w="12"/><text x="61.7141%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.29%)</title><rect x="61.4641%" y="821" width="0.2899%" height="15" fill="rgb(212,185,35)" fg:x="2544" fg:w="12"/><text x="61.7141%" y="831.50"></text></g><g><title>__GI_munmap (12 samples, 0.29%)</title><rect x="61.4641%" y="805" width="0.2899%" height="15" fill="rgb(251,222,31)" fg:x="2544" fg:w="12"/><text x="61.7141%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.29%)</title><rect x="61.4641%" y="789" width="0.2899%" height="15" fill="rgb(208,140,36)" fg:x="2544" fg:w="12"/><text x="61.7141%" y="799.50"></text></g><g><title>do_syscall_64 (12 samples, 0.29%)</title><rect x="61.4641%" y="773" width="0.2899%" height="15" fill="rgb(220,148,1)" fg:x="2544" fg:w="12"/><text x="61.7141%" y="783.50"></text></g><g><title>__x64_sys_munmap (12 samples, 0.29%)</title><rect x="61.4641%" y="757" width="0.2899%" height="15" fill="rgb(254,4,28)" fg:x="2544" fg:w="12"/><text x="61.7141%" y="767.50"></text></g><g><title>__vm_munmap (12 samples, 0.29%)</title><rect x="61.4641%" y="741" width="0.2899%" height="15" fill="rgb(222,185,44)" fg:x="2544" fg:w="12"/><text x="61.7141%" y="751.50"></text></g><g><title>__do_munmap (12 samples, 0.29%)</title><rect x="61.4641%" y="725" width="0.2899%" height="15" fill="rgb(215,74,39)" fg:x="2544" fg:w="12"/><text x="61.7141%" y="735.50"></text></g><g><title>unmap_region (12 samples, 0.29%)</title><rect x="61.4641%" y="709" width="0.2899%" height="15" fill="rgb(247,86,4)" fg:x="2544" fg:w="12"/><text x="61.7141%" y="719.50"></text></g><g><title>unmap_vmas (7 samples, 0.17%)</title><rect x="61.5849%" y="693" width="0.1691%" height="15" fill="rgb(231,105,32)" fg:x="2549" fg:w="7"/><text x="61.8349%" y="703.50"></text></g><g><title>unmap_single_vma (7 samples, 0.17%)</title><rect x="61.5849%" y="677" width="0.1691%" height="15" fill="rgb(222,65,35)" fg:x="2549" fg:w="7"/><text x="61.8349%" y="687.50"></text></g><g><title>unmap_page_range (7 samples, 0.17%)</title><rect x="61.5849%" y="661" width="0.1691%" height="15" fill="rgb(218,145,35)" fg:x="2549" fg:w="7"/><text x="61.8349%" y="671.50"></text></g><g><title>zap_pte_range.isra.0 (7 samples, 0.17%)</title><rect x="61.5849%" y="645" width="0.1691%" height="15" fill="rgb(208,7,15)" fg:x="2549" fg:w="7"/><text x="61.8349%" y="655.50"></text></g><g><title>page_remove_rmap (3 samples, 0.07%)</title><rect x="61.6816%" y="629" width="0.0725%" height="15" fill="rgb(209,83,13)" fg:x="2553" fg:w="3"/><text x="61.9316%" y="639.50"></text></g><g><title>__mod_lruvec_page_state (3 samples, 0.07%)</title><rect x="61.6816%" y="613" width="0.0725%" height="15" fill="rgb(218,3,10)" fg:x="2553" fg:w="3"/><text x="61.9316%" y="623.50"></text></g><g><title>__mod_lruvec_state (3 samples, 0.07%)</title><rect x="61.6816%" y="597" width="0.0725%" height="15" fill="rgb(211,219,4)" fg:x="2553" fg:w="3"/><text x="61.9316%" y="607.50"></text></g><g><title>__mod_memcg_lruvec_state (2 samples, 0.05%)</title><rect x="61.7057%" y="581" width="0.0483%" height="15" fill="rgb(228,194,12)" fg:x="2554" fg:w="2"/><text x="61.9557%" y="591.50"></text></g><g><title>__GI___libc_free (6 samples, 0.14%)</title><rect x="61.7540%" y="837" width="0.1450%" height="15" fill="rgb(210,175,7)" fg:x="2556" fg:w="6"/><text x="62.0040%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;(usize,usize),usize&gt;&gt; (10 samples, 0.24%)</title><rect x="61.7540%" y="933" width="0.2416%" height="15" fill="rgb(243,132,6)" fg:x="2556" fg:w="10"/><text x="62.0040%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;(usize,usize),usize&gt;&gt; (10 samples, 0.24%)</title><rect x="61.7540%" y="917" width="0.2416%" height="15" fill="rgb(207,72,18)" fg:x="2556" fg:w="10"/><text x="62.0040%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;((usize,usize),usize)&gt;&gt; (10 samples, 0.24%)</title><rect x="61.7540%" y="901" width="0.2416%" height="15" fill="rgb(236,1,18)" fg:x="2556" fg:w="10"/><text x="62.0040%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.24%)</title><rect x="61.7540%" y="885" width="0.2416%" height="15" fill="rgb(227,0,18)" fg:x="2556" fg:w="10"/><text x="62.0040%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.24%)</title><rect x="61.7540%" y="869" width="0.2416%" height="15" fill="rgb(247,37,5)" fg:x="2556" fg:w="10"/><text x="62.0040%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.24%)</title><rect x="61.7540%" y="853" width="0.2416%" height="15" fill="rgb(237,179,24)" fg:x="2556" fg:w="10"/><text x="62.0040%" y="863.50"></text></g><g><title>_int_free (4 samples, 0.10%)</title><rect x="61.8990%" y="837" width="0.0966%" height="15" fill="rgb(226,53,20)" fg:x="2562" fg:w="4"/><text x="62.1490%" y="847.50"></text></g><g><title>asm_sysvec_irq_work (1 samples, 0.02%)</title><rect x="62.0440%" y="885" width="0.0242%" height="15" fill="rgb(247,75,7)" fg:x="2568" fg:w="1"/><text x="62.2940%" y="895.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.02%)</title><rect x="62.0440%" y="869" width="0.0242%" height="15" fill="rgb(233,96,12)" fg:x="2568" fg:w="1"/><text x="62.2940%" y="879.50"></text></g><g><title>irqentry_exit (1 samples, 0.02%)</title><rect x="62.0440%" y="853" width="0.0242%" height="15" fill="rgb(224,125,0)" fg:x="2568" fg:w="1"/><text x="62.2940%" y="863.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="62.0440%" y="837" width="0.0242%" height="15" fill="rgb(224,92,25)" fg:x="2568" fg:w="1"/><text x="62.2940%" y="847.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="62.0440%" y="821" width="0.0242%" height="15" fill="rgb(224,42,24)" fg:x="2568" fg:w="1"/><text x="62.2940%" y="831.50"></text></g><g><title>schedule (1 samples, 0.02%)</title><rect x="62.0440%" y="805" width="0.0242%" height="15" fill="rgb(234,132,49)" fg:x="2568" fg:w="1"/><text x="62.2940%" y="815.50"></text></g><g><title>__schedule (1 samples, 0.02%)</title><rect x="62.0440%" y="789" width="0.0242%" height="15" fill="rgb(248,100,35)" fg:x="2568" fg:w="1"/><text x="62.2940%" y="799.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.02%)</title><rect x="62.0440%" y="773" width="0.0242%" height="15" fill="rgb(239,94,40)" fg:x="2568" fg:w="1"/><text x="62.2940%" y="783.50"></text></g><g><title>perf_pmu_disable.part.0 (1 samples, 0.02%)</title><rect x="62.0440%" y="757" width="0.0242%" height="15" fill="rgb(235,139,28)" fg:x="2568" fg:w="1"/><text x="62.2940%" y="767.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="62.0440%" y="741" width="0.0242%" height="15" fill="rgb(217,144,7)" fg:x="2568" fg:w="1"/><text x="62.2940%" y="751.50"></text></g><g><title>amd_pmu_disable_all (1 samples, 0.02%)</title><rect x="62.0440%" y="725" width="0.0242%" height="15" fill="rgb(227,55,4)" fg:x="2568" fg:w="1"/><text x="62.2940%" y="735.50"></text></g><g><title>amd_pmu_wait_on_overflow (1 samples, 0.02%)</title><rect x="62.0440%" y="709" width="0.0242%" height="15" fill="rgb(252,82,54)" fg:x="2568" fg:w="1"/><text x="62.2940%" y="719.50"></text></g><g><title>__const_udelay (1 samples, 0.02%)</title><rect x="62.0440%" y="693" width="0.0242%" height="15" fill="rgb(245,172,4)" fg:x="2568" fg:w="1"/><text x="62.2940%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="62.2614%" y="805" width="0.0242%" height="15" fill="rgb(207,26,27)" fg:x="2577" fg:w="1"/><text x="62.5114%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.10%)</title><rect x="62.2614%" y="821" width="0.0966%" height="15" fill="rgb(252,98,18)" fg:x="2577" fg:w="4"/><text x="62.5114%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="62.2856%" y="805" width="0.0725%" height="15" fill="rgb(244,8,26)" fg:x="2578" fg:w="3"/><text x="62.5356%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.24%)</title><rect x="62.3822%" y="805" width="0.2416%" height="15" fill="rgb(237,173,45)" fg:x="2582" fg:w="10"/><text x="62.6322%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.48%)</title><rect x="62.1648%" y="869" width="0.4832%" height="15" fill="rgb(208,213,49)" fg:x="2573" fg:w="20"/><text x="62.4148%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20 samples, 0.48%)</title><rect x="62.1648%" y="853" width="0.4832%" height="15" fill="rgb(212,122,37)" fg:x="2573" fg:w="20"/><text x="62.4148%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20 samples, 0.48%)</title><rect x="62.1648%" y="837" width="0.4832%" height="15" fill="rgb(213,80,17)" fg:x="2573" fg:w="20"/><text x="62.4148%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (12 samples, 0.29%)</title><rect x="62.3581%" y="821" width="0.2899%" height="15" fill="rgb(206,210,43)" fg:x="2581" fg:w="12"/><text x="62.6081%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="62.6238%" y="805" width="0.0242%" height="15" fill="rgb(229,214,3)" fg:x="2592" fg:w="1"/><text x="62.8738%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="62.6480%" y="869" width="0.0242%" height="15" fill="rgb(235,213,29)" fg:x="2593" fg:w="1"/><text x="62.8980%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.07%)</title><rect x="62.8654%" y="773" width="0.0725%" height="15" fill="rgb(248,135,26)" fg:x="2602" fg:w="3"/><text x="63.1154%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="62.8654%" y="757" width="0.0725%" height="15" fill="rgb(242,188,12)" fg:x="2602" fg:w="3"/><text x="63.1154%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (37 samples, 0.89%)</title><rect x="62.0681%" y="885" width="0.8939%" height="15" fill="rgb(245,38,12)" fg:x="2569" fg:w="37"/><text x="62.3181%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (12 samples, 0.29%)</title><rect x="62.6721%" y="869" width="0.2899%" height="15" fill="rgb(218,42,13)" fg:x="2594" fg:w="12"/><text x="62.9221%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (12 samples, 0.29%)</title><rect x="62.6721%" y="853" width="0.2899%" height="15" fill="rgb(238,132,49)" fg:x="2594" fg:w="12"/><text x="62.9221%" y="863.50"></text></g><g><title>core::hash::Hasher::write_usize (12 samples, 0.29%)</title><rect x="62.6721%" y="837" width="0.2899%" height="15" fill="rgb(209,196,19)" fg:x="2594" fg:w="12"/><text x="62.9221%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.24%)</title><rect x="62.7205%" y="821" width="0.2416%" height="15" fill="rgb(244,131,22)" fg:x="2596" fg:w="10"/><text x="62.9705%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.24%)</title><rect x="62.7205%" y="805" width="0.2416%" height="15" fill="rgb(223,18,34)" fg:x="2596" fg:w="10"/><text x="62.9705%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.24%)</title><rect x="62.7205%" y="789" width="0.2416%" height="15" fill="rgb(252,124,54)" fg:x="2596" fg:w="10"/><text x="62.9705%" y="799.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="62.9379%" y="773" width="0.0242%" height="15" fill="rgb(229,106,42)" fg:x="2605" fg:w="1"/><text x="63.1879%" y="783.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="63.0829%" y="805" width="0.0242%" height="15" fill="rgb(221,129,1)" fg:x="2611" fg:w="1"/><text x="63.3329%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.14%)</title><rect x="62.9862%" y="853" width="0.1450%" height="15" fill="rgb(229,74,15)" fg:x="2607" fg:w="6"/><text x="63.2362%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.14%)</title><rect x="62.9862%" y="837" width="0.1450%" height="15" fill="rgb(210,206,50)" fg:x="2607" fg:w="6"/><text x="63.2362%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="63.0587%" y="821" width="0.0725%" height="15" fill="rgb(251,114,31)" fg:x="2610" fg:w="3"/><text x="63.3087%" y="831.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.02%)</title><rect x="63.1070%" y="805" width="0.0242%" height="15" fill="rgb(215,225,28)" fg:x="2612" fg:w="1"/><text x="63.3570%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (53 samples, 1.28%)</title><rect x="61.9957%" y="933" width="1.2805%" height="15" fill="rgb(237,109,14)" fg:x="2566" fg:w="53"/><text x="62.2457%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (53 samples, 1.28%)</title><rect x="61.9957%" y="917" width="1.2805%" height="15" fill="rgb(230,13,37)" fg:x="2566" fg:w="53"/><text x="62.2457%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (53 samples, 1.28%)</title><rect x="61.9957%" y="901" width="1.2805%" height="15" fill="rgb(231,40,28)" fg:x="2566" fg:w="53"/><text x="62.2457%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.31%)</title><rect x="62.9621%" y="885" width="0.3141%" height="15" fill="rgb(231,202,18)" fg:x="2606" fg:w="13"/><text x="63.2121%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.31%)</title><rect x="62.9621%" y="869" width="0.3141%" height="15" fill="rgb(225,33,18)" fg:x="2606" fg:w="13"/><text x="63.2121%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.14%)</title><rect x="63.1312%" y="853" width="0.1450%" height="15" fill="rgb(223,64,47)" fg:x="2613" fg:w="6"/><text x="63.3812%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.14%)</title><rect x="63.1312%" y="837" width="0.1450%" height="15" fill="rgb(234,114,13)" fg:x="2613" fg:w="6"/><text x="63.3812%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.14%)</title><rect x="63.1312%" y="821" width="0.1450%" height="15" fill="rgb(248,56,40)" fg:x="2613" fg:w="6"/><text x="63.3812%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.14%)</title><rect x="63.1312%" y="805" width="0.1450%" height="15" fill="rgb(221,194,21)" fg:x="2613" fg:w="6"/><text x="63.3812%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (6 samples, 0.14%)</title><rect x="63.1312%" y="789" width="0.1450%" height="15" fill="rgb(242,108,46)" fg:x="2613" fg:w="6"/><text x="63.3812%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (6 samples, 0.14%)</title><rect x="63.1312%" y="773" width="0.1450%" height="15" fill="rgb(220,106,10)" fg:x="2613" fg:w="6"/><text x="63.3812%" y="783.50"></text></g><g><title>core::core_arch::simd::i8x16::new (6 samples, 0.14%)</title><rect x="63.1312%" y="757" width="0.1450%" height="15" fill="rgb(211,88,4)" fg:x="2613" fg:w="6"/><text x="63.3812%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.10%)</title><rect x="63.7835%" y="837" width="0.0966%" height="15" fill="rgb(214,95,34)" fg:x="2640" fg:w="4"/><text x="64.0335%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="63.8077%" y="821" width="0.0725%" height="15" fill="rgb(250,160,33)" fg:x="2641" fg:w="3"/><text x="64.0577%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.24%)</title><rect x="63.9285%" y="821" width="0.2416%" height="15" fill="rgb(225,29,10)" fg:x="2646" fg:w="10"/><text x="64.1785%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (27 samples, 0.65%)</title><rect x="63.6386%" y="885" width="0.6523%" height="15" fill="rgb(224,28,30)" fg:x="2634" fg:w="27"/><text x="63.8886%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (27 samples, 0.65%)</title><rect x="63.6386%" y="869" width="0.6523%" height="15" fill="rgb(231,77,4)" fg:x="2634" fg:w="27"/><text x="63.8886%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (27 samples, 0.65%)</title><rect x="63.6386%" y="853" width="0.6523%" height="15" fill="rgb(209,63,21)" fg:x="2634" fg:w="27"/><text x="63.8886%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.41%)</title><rect x="63.8802%" y="837" width="0.4107%" height="15" fill="rgb(226,22,11)" fg:x="2644" fg:w="17"/><text x="64.1302%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.12%)</title><rect x="64.1701%" y="821" width="0.1208%" height="15" fill="rgb(216,82,30)" fg:x="2656" fg:w="5"/><text x="64.4201%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.05%)</title><rect x="64.2909%" y="885" width="0.0483%" height="15" fill="rgb(246,227,38)" fg:x="2661" fg:w="2"/><text x="64.5409%" y="895.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="64.3151%" y="869" width="0.0242%" height="15" fill="rgb(251,203,53)" fg:x="2662" fg:w="1"/><text x="64.5651%" y="879.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="64.3151%" y="853" width="0.0242%" height="15" fill="rgb(254,101,1)" fg:x="2662" fg:w="1"/><text x="64.5651%" y="863.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="64.3151%" y="837" width="0.0242%" height="15" fill="rgb(241,180,5)" fg:x="2662" fg:w="1"/><text x="64.5651%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.10%)</title><rect x="64.6533%" y="773" width="0.0966%" height="15" fill="rgb(218,168,4)" fg:x="2676" fg:w="4"/><text x="64.9033%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.19%)</title><rect x="64.6050%" y="789" width="0.1933%" height="15" fill="rgb(224,223,32)" fg:x="2674" fg:w="8"/><text x="64.8550%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="64.7499%" y="773" width="0.0483%" height="15" fill="rgb(236,106,22)" fg:x="2680" fg:w="2"/><text x="64.9999%" y="783.50"></text></g><g><title>hashbrown::map::make_insert_hash (50 samples, 1.21%)</title><rect x="63.6386%" y="901" width="1.2080%" height="15" fill="rgb(206,121,5)" fg:x="2634" fg:w="50"/><text x="63.8886%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (21 samples, 0.51%)</title><rect x="64.3392%" y="885" width="0.5074%" height="15" fill="rgb(233,87,28)" fg:x="2663" fg:w="21"/><text x="64.5892%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (21 samples, 0.51%)</title><rect x="64.3392%" y="869" width="0.5074%" height="15" fill="rgb(236,137,17)" fg:x="2663" fg:w="21"/><text x="64.5892%" y="879.50"></text></g><g><title>core::hash::Hasher::write_usize (21 samples, 0.51%)</title><rect x="64.3392%" y="853" width="0.5074%" height="15" fill="rgb(209,183,38)" fg:x="2663" fg:w="21"/><text x="64.5892%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.46%)</title><rect x="64.3875%" y="837" width="0.4590%" height="15" fill="rgb(206,162,44)" fg:x="2665" fg:w="19"/><text x="64.6375%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.46%)</title><rect x="64.3875%" y="821" width="0.4590%" height="15" fill="rgb(237,70,39)" fg:x="2665" fg:w="19"/><text x="64.6375%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.46%)</title><rect x="64.3875%" y="805" width="0.4590%" height="15" fill="rgb(212,176,5)" fg:x="2665" fg:w="19"/><text x="64.6375%" y="815.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="64.7983%" y="789" width="0.0483%" height="15" fill="rgb(232,95,16)" fg:x="2682" fg:w="2"/><text x="65.0483%" y="799.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="65.1607%" y="821" width="0.0242%" height="15" fill="rgb(219,115,35)" fg:x="2697" fg:w="1"/><text x="65.4107%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="65.1123%" y="869" width="0.0966%" height="15" fill="rgb(251,67,27)" fg:x="2695" fg:w="4"/><text x="65.3623%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="65.1123%" y="853" width="0.0966%" height="15" fill="rgb(222,95,40)" fg:x="2695" fg:w="4"/><text x="65.3623%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="65.1607%" y="837" width="0.0483%" height="15" fill="rgb(250,35,16)" fg:x="2697" fg:w="2"/><text x="65.4107%" y="847.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.02%)</title><rect x="65.1848%" y="821" width="0.0242%" height="15" fill="rgb(224,86,44)" fg:x="2698" fg:w="1"/><text x="65.4348%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.05%)</title><rect x="65.2090%" y="821" width="0.0483%" height="15" fill="rgb(237,53,53)" fg:x="2699" fg:w="2"/><text x="65.4590%" y="831.50"></text></g><g><title>hashbrown::raw::h2 (3 samples, 0.07%)</title><rect x="65.2573%" y="821" width="0.0725%" height="15" fill="rgb(208,171,33)" fg:x="2701" fg:w="3"/><text x="65.5073%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (40 samples, 0.97%)</title><rect x="64.8466%" y="901" width="0.9664%" height="15" fill="rgb(222,64,27)" fg:x="2684" fg:w="40"/><text x="65.0966%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (40 samples, 0.97%)</title><rect x="64.8466%" y="885" width="0.9664%" height="15" fill="rgb(221,121,35)" fg:x="2684" fg:w="40"/><text x="65.0966%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (25 samples, 0.60%)</title><rect x="65.2090%" y="869" width="0.6040%" height="15" fill="rgb(228,137,42)" fg:x="2699" fg:w="25"/><text x="65.4590%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (25 samples, 0.60%)</title><rect x="65.2090%" y="853" width="0.6040%" height="15" fill="rgb(227,54,21)" fg:x="2699" fg:w="25"/><text x="65.4590%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (25 samples, 0.60%)</title><rect x="65.2090%" y="837" width="0.6040%" height="15" fill="rgb(240,168,33)" fg:x="2699" fg:w="25"/><text x="65.4590%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (20 samples, 0.48%)</title><rect x="65.3298%" y="821" width="0.4832%" height="15" fill="rgb(243,159,6)" fg:x="2704" fg:w="20"/><text x="65.5798%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (20 samples, 0.48%)</title><rect x="65.3298%" y="805" width="0.4832%" height="15" fill="rgb(205,211,41)" fg:x="2704" fg:w="20"/><text x="65.5798%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (20 samples, 0.48%)</title><rect x="65.3298%" y="789" width="0.4832%" height="15" fill="rgb(253,30,1)" fg:x="2704" fg:w="20"/><text x="65.5798%" y="799.50"></text></g><g><title>core::core_arch::simd::i8x16::new (20 samples, 0.48%)</title><rect x="65.3298%" y="773" width="0.4832%" height="15" fill="rgb(226,80,18)" fg:x="2704" fg:w="20"/><text x="65.5798%" y="783.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (39 samples, 0.94%)</title><rect x="65.9096%" y="885" width="0.9423%" height="15" fill="rgb(253,156,46)" fg:x="2728" fg:w="39"/><text x="66.1596%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (39 samples, 0.94%)</title><rect x="65.9096%" y="869" width="0.9423%" height="15" fill="rgb(248,87,27)" fg:x="2728" fg:w="39"/><text x="66.1596%" y="879.50"></text></g><g><title>core::ptr::write (39 samples, 0.94%)</title><rect x="65.9096%" y="853" width="0.9423%" height="15" fill="rgb(227,122,2)" fg:x="2728" fg:w="39"/><text x="66.1596%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (2 samples, 0.05%)</title><rect x="66.8519%" y="885" width="0.0483%" height="15" fill="rgb(229,94,39)" fg:x="2767" fg:w="2"/><text x="67.1019%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.05%)</title><rect x="66.8519%" y="869" width="0.0483%" height="15" fill="rgb(225,173,31)" fg:x="2767" fg:w="2"/><text x="67.1019%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.05%)</title><rect x="66.8519%" y="853" width="0.0483%" height="15" fill="rgb(239,176,30)" fg:x="2767" fg:w="2"/><text x="67.1019%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.02%)</title><rect x="66.9002%" y="805" width="0.0242%" height="15" fill="rgb(212,104,21)" fg:x="2769" fg:w="1"/><text x="67.1502%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="66.9002%" y="789" width="0.0242%" height="15" fill="rgb(240,209,40)" fg:x="2769" fg:w="1"/><text x="67.1502%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="66.9002%" y="837" width="0.0725%" height="15" fill="rgb(234,195,5)" fg:x="2769" fg:w="3"/><text x="67.1502%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="66.9002%" y="821" width="0.0725%" height="15" fill="rgb(238,213,1)" fg:x="2769" fg:w="3"/><text x="67.1502%" y="831.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.05%)</title><rect x="66.9244%" y="805" width="0.0483%" height="15" fill="rgb(235,182,54)" fg:x="2770" fg:w="2"/><text x="67.1744%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (14 samples, 0.34%)</title><rect x="67.6009%" y="741" width="0.3382%" height="15" fill="rgb(229,50,46)" fg:x="2798" fg:w="14"/><text x="67.8509%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (21 samples, 0.51%)</title><rect x="67.5042%" y="757" width="0.5074%" height="15" fill="rgb(219,145,13)" fg:x="2794" fg:w="21"/><text x="67.7542%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="67.9391%" y="741" width="0.0725%" height="15" fill="rgb(220,226,10)" fg:x="2812" fg:w="3"/><text x="68.1891%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.36%)</title><rect x="68.2532%" y="741" width="0.3624%" height="15" fill="rgb(248,47,30)" fg:x="2825" fg:w="15"/><text x="68.5032%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (66 samples, 1.59%)</title><rect x="67.1901%" y="805" width="1.5946%" height="15" fill="rgb(231,209,44)" fg:x="2781" fg:w="66"/><text x="67.4401%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (66 samples, 1.59%)</title><rect x="67.1901%" y="789" width="1.5946%" height="15" fill="rgb(209,80,30)" fg:x="2781" fg:w="66"/><text x="67.4401%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (66 samples, 1.59%)</title><rect x="67.1901%" y="773" width="1.5946%" height="15" fill="rgb(232,9,14)" fg:x="2781" fg:w="66"/><text x="67.4401%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (32 samples, 0.77%)</title><rect x="68.0116%" y="757" width="0.7731%" height="15" fill="rgb(243,91,43)" fg:x="2815" fg:w="32"/><text x="68.2616%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.17%)</title><rect x="68.6156%" y="741" width="0.1691%" height="15" fill="rgb(231,90,52)" fg:x="2840" fg:w="7"/><text x="68.8656%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.12%)</title><rect x="68.7847%" y="805" width="0.1208%" height="15" fill="rgb(253,192,44)" fg:x="2847" fg:w="5"/><text x="69.0347%" y="815.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.07%)</title><rect x="68.8331%" y="789" width="0.0725%" height="15" fill="rgb(241,66,31)" fg:x="2849" fg:w="3"/><text x="69.0831%" y="799.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.05%)</title><rect x="68.8572%" y="773" width="0.0483%" height="15" fill="rgb(235,81,37)" fg:x="2850" fg:w="2"/><text x="69.1072%" y="783.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.05%)</title><rect x="68.8572%" y="757" width="0.0483%" height="15" fill="rgb(223,221,9)" fg:x="2850" fg:w="2"/><text x="69.1072%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.17%)</title><rect x="70.2102%" y="693" width="0.1691%" height="15" fill="rgb(242,180,7)" fg:x="2906" fg:w="7"/><text x="70.4602%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (32 samples, 0.77%)</title><rect x="69.7028%" y="709" width="0.7731%" height="15" fill="rgb(243,78,19)" fg:x="2885" fg:w="32"/><text x="69.9528%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.10%)</title><rect x="70.3793%" y="693" width="0.0966%" height="15" fill="rgb(233,23,17)" fg:x="2913" fg:w="4"/><text x="70.6293%" y="703.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (150 samples, 3.62%)</title><rect x="66.9727%" y="837" width="3.6241%" height="15" fill="rgb(252,122,45)" fg:x="2772" fg:w="150"/><text x="67.2227%" y="847.50">hash..</text></g><g><title>hashbrown::map::make_hash (148 samples, 3.58%)</title><rect x="67.0210%" y="821" width="3.5757%" height="15" fill="rgb(247,108,20)" fg:x="2774" fg:w="148"/><text x="67.2710%" y="831.50">hash..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (70 samples, 1.69%)</title><rect x="68.9055%" y="805" width="1.6912%" height="15" fill="rgb(235,84,21)" fg:x="2852" fg:w="70"/><text x="69.1555%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (70 samples, 1.69%)</title><rect x="68.9055%" y="789" width="1.6912%" height="15" fill="rgb(247,129,10)" fg:x="2852" fg:w="70"/><text x="69.1555%" y="799.50"></text></g><g><title>core::hash::Hasher::write_usize (70 samples, 1.69%)</title><rect x="68.9055%" y="773" width="1.6912%" height="15" fill="rgb(208,173,14)" fg:x="2852" fg:w="70"/><text x="69.1555%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (66 samples, 1.59%)</title><rect x="69.0022%" y="757" width="1.5946%" height="15" fill="rgb(236,31,38)" fg:x="2856" fg:w="66"/><text x="69.2522%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (66 samples, 1.59%)</title><rect x="69.0022%" y="741" width="1.5946%" height="15" fill="rgb(232,65,17)" fg:x="2856" fg:w="66"/><text x="69.2522%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (66 samples, 1.59%)</title><rect x="69.0022%" y="725" width="1.5946%" height="15" fill="rgb(224,45,49)" fg:x="2856" fg:w="66"/><text x="69.2522%" y="735.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.12%)</title><rect x="70.4760%" y="709" width="0.1208%" height="15" fill="rgb(225,2,53)" fg:x="2917" fg:w="5"/><text x="70.7260%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="70.5968%" y="837" width="0.0242%" height="15" fill="rgb(248,210,53)" fg:x="2922" fg:w="1"/><text x="70.8468%" y="847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="70.5968%" y="821" width="0.0242%" height="15" fill="rgb(211,1,30)" fg:x="2922" fg:w="1"/><text x="70.8468%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="70.5968%" y="805" width="0.0242%" height="15" fill="rgb(224,96,15)" fg:x="2922" fg:w="1"/><text x="70.8468%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="70.5968%" y="789" width="0.0242%" height="15" fill="rgb(252,45,11)" fg:x="2922" fg:w="1"/><text x="70.8468%" y="799.50"></text></g><g><title>_cond_resched (2 samples, 0.05%)</title><rect x="71.1766%" y="741" width="0.0483%" height="15" fill="rgb(220,125,38)" fg:x="2946" fg:w="2"/><text x="71.4266%" y="751.50"></text></g><g><title>__count_memcg_events (1 samples, 0.02%)</title><rect x="71.2249%" y="725" width="0.0242%" height="15" fill="rgb(243,161,33)" fg:x="2948" fg:w="1"/><text x="71.4749%" y="735.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="71.2974%" y="709" width="0.0242%" height="15" fill="rgb(248,197,34)" fg:x="2951" fg:w="1"/><text x="71.5474%" y="719.50"></text></g><g><title>clear_page_rep (20 samples, 0.48%)</title><rect x="71.3699%" y="645" width="0.4832%" height="15" fill="rgb(228,165,23)" fg:x="2954" fg:w="20"/><text x="71.6199%" y="655.50"></text></g><g><title>__alloc_pages_nodemask (31 samples, 0.75%)</title><rect x="71.3216%" y="677" width="0.7490%" height="15" fill="rgb(236,94,38)" fg:x="2952" fg:w="31"/><text x="71.5716%" y="687.50"></text></g><g><title>get_page_from_freelist (31 samples, 0.75%)</title><rect x="71.3216%" y="661" width="0.7490%" height="15" fill="rgb(220,13,23)" fg:x="2952" fg:w="31"/><text x="71.5716%" y="671.50"></text></g><g><title>rmqueue (9 samples, 0.22%)</title><rect x="71.8531%" y="645" width="0.2174%" height="15" fill="rgb(234,26,39)" fg:x="2974" fg:w="9"/><text x="72.1031%" y="655.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="72.0464%" y="629" width="0.0242%" height="15" fill="rgb(205,117,44)" fg:x="2982" fg:w="1"/><text x="72.2964%" y="639.50"></text></g><g><title>alloc_pages_vma (32 samples, 0.77%)</title><rect x="71.3216%" y="693" width="0.7731%" height="15" fill="rgb(250,42,2)" fg:x="2952" fg:w="32"/><text x="71.5716%" y="703.50"></text></g><g><title>get_vma_policy.part.0 (1 samples, 0.02%)</title><rect x="72.0705%" y="677" width="0.0242%" height="15" fill="rgb(223,83,14)" fg:x="2983" fg:w="1"/><text x="72.3205%" y="687.50"></text></g><g><title>get_task_policy.part.0 (1 samples, 0.02%)</title><rect x="72.0705%" y="661" width="0.0242%" height="15" fill="rgb(241,147,50)" fg:x="2983" fg:w="1"/><text x="72.3205%" y="671.50"></text></g><g><title>cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="72.0947%" y="693" width="0.0242%" height="15" fill="rgb(218,90,6)" fg:x="2984" fg:w="1"/><text x="72.3447%" y="703.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="72.1189%" y="645" width="0.0242%" height="15" fill="rgb(210,191,5)" fg:x="2985" fg:w="1"/><text x="72.3689%" y="655.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="72.1189%" y="629" width="0.0242%" height="15" fill="rgb(225,139,19)" fg:x="2985" fg:w="1"/><text x="72.3689%" y="639.50"></text></g><g><title>__mod_memcg_state (1 samples, 0.02%)</title><rect x="72.1189%" y="613" width="0.0242%" height="15" fill="rgb(210,1,33)" fg:x="2985" fg:w="1"/><text x="72.3689%" y="623.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (2 samples, 0.05%)</title><rect x="72.1189%" y="693" width="0.0483%" height="15" fill="rgb(213,50,3)" fg:x="2985" fg:w="2"/><text x="72.3689%" y="703.50"></text></g><g><title>lru_cache_add (2 samples, 0.05%)</title><rect x="72.1189%" y="677" width="0.0483%" height="15" fill="rgb(234,227,4)" fg:x="2985" fg:w="2"/><text x="72.3689%" y="687.50"></text></g><g><title>__pagevec_lru_add (2 samples, 0.05%)</title><rect x="72.1189%" y="661" width="0.0483%" height="15" fill="rgb(246,63,5)" fg:x="2985" fg:w="2"/><text x="72.3689%" y="671.50"></text></g><g><title>page_mapping (1 samples, 0.02%)</title><rect x="72.1430%" y="645" width="0.0242%" height="15" fill="rgb(245,136,27)" fg:x="2986" fg:w="1"/><text x="72.3930%" y="655.50"></text></g><g><title>mem_cgroup_charge (2 samples, 0.05%)</title><rect x="72.1672%" y="693" width="0.0483%" height="15" fill="rgb(247,199,27)" fg:x="2987" fg:w="2"/><text x="72.4172%" y="703.50"></text></g><g><title>mem_cgroup_charge_statistics.isra.0 (1 samples, 0.02%)</title><rect x="72.1914%" y="677" width="0.0242%" height="15" fill="rgb(252,158,49)" fg:x="2988" fg:w="1"/><text x="72.4414%" y="687.50"></text></g><g><title>memcg_check_events (1 samples, 0.02%)</title><rect x="72.2155%" y="693" width="0.0242%" height="15" fill="rgb(254,73,1)" fg:x="2989" fg:w="1"/><text x="72.4655%" y="703.50"></text></g><g><title>__handle_mm_fault (42 samples, 1.01%)</title><rect x="71.2491%" y="725" width="1.0147%" height="15" fill="rgb(248,93,19)" fg:x="2949" fg:w="42"/><text x="71.4991%" y="735.50"></text></g><g><title>do_anonymous_page (39 samples, 0.94%)</title><rect x="71.3216%" y="709" width="0.9423%" height="15" fill="rgb(206,67,5)" fg:x="2952" fg:w="39"/><text x="71.5716%" y="719.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="72.2397%" y="693" width="0.0242%" height="15" fill="rgb(209,210,4)" fg:x="2990" fg:w="1"/><text x="72.4897%" y="703.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="72.2397%" y="677" width="0.0242%" height="15" fill="rgb(214,185,36)" fg:x="2990" fg:w="1"/><text x="72.4897%" y="687.50"></text></g><g><title>do_user_addr_fault (48 samples, 1.16%)</title><rect x="71.1283%" y="757" width="1.1597%" height="15" fill="rgb(233,191,26)" fg:x="2944" fg:w="48"/><text x="71.3783%" y="767.50"></text></g><g><title>handle_mm_fault (44 samples, 1.06%)</title><rect x="71.2249%" y="741" width="1.0631%" height="15" fill="rgb(248,94,17)" fg:x="2948" fg:w="44"/><text x="71.4749%" y="751.50"></text></g><g><title>pmd_page_vaddr (1 samples, 0.02%)</title><rect x="72.2638%" y="725" width="0.0242%" height="15" fill="rgb(250,64,4)" fg:x="2991" fg:w="1"/><text x="72.5138%" y="735.50"></text></g><g><title>asm_exc_page_fault (58 samples, 1.40%)</title><rect x="70.9108%" y="789" width="1.4013%" height="15" fill="rgb(218,41,53)" fg:x="2935" fg:w="58"/><text x="71.1608%" y="799.50"></text></g><g><title>exc_page_fault (49 samples, 1.18%)</title><rect x="71.1283%" y="773" width="1.1839%" height="15" fill="rgb(251,176,28)" fg:x="2944" fg:w="49"/><text x="71.3783%" y="783.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="72.2880%" y="757" width="0.0242%" height="15" fill="rgb(247,22,9)" fg:x="2992" fg:w="1"/><text x="72.5380%" y="767.50"></text></g><g><title>error_entry (1 samples, 0.02%)</title><rect x="72.3122%" y="789" width="0.0242%" height="15" fill="rgb(218,201,14)" fg:x="2993" fg:w="1"/><text x="72.5622%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (72 samples, 1.74%)</title><rect x="70.6209%" y="837" width="1.7396%" height="15" fill="rgb(218,94,10)" fg:x="2923" fg:w="72"/><text x="70.8709%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (72 samples, 1.74%)</title><rect x="70.6209%" y="821" width="1.7396%" height="15" fill="rgb(222,183,52)" fg:x="2923" fg:w="72"/><text x="70.8709%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (72 samples, 1.74%)</title><rect x="70.6209%" y="805" width="1.7396%" height="15" fill="rgb(242,140,25)" fg:x="2923" fg:w="72"/><text x="70.8709%" y="815.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="72.3363%" y="789" width="0.0242%" height="15" fill="rgb(235,197,38)" fg:x="2994" fg:w="1"/><text x="72.5863%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (3 samples, 0.07%)</title><rect x="72.3605%" y="837" width="0.0725%" height="15" fill="rgb(237,136,15)" fg:x="2995" fg:w="3"/><text x="72.6105%" y="847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (3 samples, 0.07%)</title><rect x="72.3605%" y="821" width="0.0725%" height="15" fill="rgb(223,44,49)" fg:x="2995" fg:w="3"/><text x="72.6105%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.07%)</title><rect x="72.3605%" y="805" width="0.0725%" height="15" fill="rgb(227,71,15)" fg:x="2995" fg:w="3"/><text x="72.6105%" y="815.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (3 samples, 0.07%)</title><rect x="72.3605%" y="789" width="0.0725%" height="15" fill="rgb(225,153,20)" fg:x="2995" fg:w="3"/><text x="72.6105%" y="799.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (3 samples, 0.07%)</title><rect x="72.3605%" y="773" width="0.0725%" height="15" fill="rgb(210,190,26)" fg:x="2995" fg:w="3"/><text x="72.6105%" y="783.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="72.8195%" y="805" width="0.0242%" height="15" fill="rgb(223,147,5)" fg:x="3014" fg:w="1"/><text x="73.0695%" y="815.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="72.8195%" y="789" width="0.0242%" height="15" fill="rgb(207,14,23)" fg:x="3014" fg:w="1"/><text x="73.0695%" y="799.50"></text></g><g><title>irqentry_exit (1 samples, 0.02%)</title><rect x="72.8195%" y="773" width="0.0242%" height="15" fill="rgb(211,195,53)" fg:x="3014" fg:w="1"/><text x="73.0695%" y="783.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="72.8195%" y="757" width="0.0242%" height="15" fill="rgb(237,75,46)" fg:x="3014" fg:w="1"/><text x="73.0695%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="72.8437%" y="805" width="0.0242%" height="15" fill="rgb(254,55,14)" fg:x="3015" fg:w="1"/><text x="73.0937%" y="815.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (13 samples, 0.31%)</title><rect x="72.8678%" y="805" width="0.3141%" height="15" fill="rgb(230,185,30)" fg:x="3016" fg:w="13"/><text x="73.1178%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (47 samples, 1.14%)</title><rect x="72.4330%" y="821" width="1.1355%" height="15" fill="rgb(220,14,11)" fg:x="2998" fg:w="47"/><text x="72.6830%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (16 samples, 0.39%)</title><rect x="73.1819%" y="805" width="0.3866%" height="15" fill="rgb(215,169,44)" fg:x="3029" fg:w="16"/><text x="73.4319%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (16 samples, 0.39%)</title><rect x="73.1819%" y="789" width="0.3866%" height="15" fill="rgb(253,203,20)" fg:x="3029" fg:w="16"/><text x="73.4319%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (48 samples, 1.16%)</title><rect x="72.4330%" y="837" width="1.1597%" height="15" fill="rgb(229,225,17)" fg:x="2998" fg:w="48"/><text x="72.6830%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.02%)</title><rect x="73.5685%" y="821" width="0.0242%" height="15" fill="rgb(236,76,26)" fg:x="3045" fg:w="1"/><text x="73.8185%" y="831.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="73.5685%" y="805" width="0.0242%" height="15" fill="rgb(234,15,30)" fg:x="3045" fg:w="1"/><text x="73.8185%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (281 samples, 6.79%)</title><rect x="66.9002%" y="885" width="6.7891%" height="15" fill="rgb(211,113,48)" fg:x="2769" fg:w="281"/><text x="67.1502%" y="895.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (281 samples, 6.79%)</title><rect x="66.9002%" y="869" width="6.7891%" height="15" fill="rgb(221,31,36)" fg:x="2769" fg:w="281"/><text x="67.1502%" y="879.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (281 samples, 6.79%)</title><rect x="66.9002%" y="853" width="6.7891%" height="15" fill="rgb(215,118,52)" fg:x="2769" fg:w="281"/><text x="67.1502%" y="863.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (4 samples, 0.10%)</title><rect x="73.5927%" y="837" width="0.0966%" height="15" fill="rgb(241,151,27)" fg:x="3046" fg:w="4"/><text x="73.8427%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (4 samples, 0.10%)</title><rect x="73.5927%" y="821" width="0.0966%" height="15" fill="rgb(253,51,3)" fg:x="3046" fg:w="4"/><text x="73.8427%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (4 samples, 0.10%)</title><rect x="73.5927%" y="805" width="0.0966%" height="15" fill="rgb(216,201,24)" fg:x="3046" fg:w="4"/><text x="73.8427%" y="815.50"></text></g><g><title>core::intrinsics::write_bytes (4 samples, 0.10%)</title><rect x="73.5927%" y="789" width="0.0966%" height="15" fill="rgb(231,107,4)" fg:x="3046" fg:w="4"/><text x="73.8427%" y="799.50"></text></g><g><title>__memset_avx2_unaligned_erms (4 samples, 0.10%)</title><rect x="73.5927%" y="773" width="0.0966%" height="15" fill="rgb(243,97,54)" fg:x="3046" fg:w="4"/><text x="73.8427%" y="783.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.07%)</title><rect x="73.6168%" y="757" width="0.0725%" height="15" fill="rgb(221,32,51)" fg:x="3047" fg:w="3"/><text x="73.8668%" y="767.50"></text></g><g><title>exc_page_fault (3 samples, 0.07%)</title><rect x="73.6168%" y="741" width="0.0725%" height="15" fill="rgb(218,171,35)" fg:x="3047" fg:w="3"/><text x="73.8668%" y="751.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.07%)</title><rect x="73.6168%" y="725" width="0.0725%" height="15" fill="rgb(214,20,53)" fg:x="3047" fg:w="3"/><text x="73.8668%" y="735.50"></text></g><g><title>handle_mm_fault (3 samples, 0.07%)</title><rect x="73.6168%" y="709" width="0.0725%" height="15" fill="rgb(239,9,52)" fg:x="3047" fg:w="3"/><text x="73.8668%" y="719.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.07%)</title><rect x="73.6168%" y="693" width="0.0725%" height="15" fill="rgb(215,114,45)" fg:x="3047" fg:w="3"/><text x="73.8668%" y="703.50"></text></g><g><title>do_anonymous_page (3 samples, 0.07%)</title><rect x="73.6168%" y="677" width="0.0725%" height="15" fill="rgb(208,118,9)" fg:x="3047" fg:w="3"/><text x="73.8668%" y="687.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.07%)</title><rect x="73.6168%" y="661" width="0.0725%" height="15" fill="rgb(235,7,39)" fg:x="3047" fg:w="3"/><text x="73.8668%" y="671.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.07%)</title><rect x="73.6168%" y="645" width="0.0725%" height="15" fill="rgb(243,225,15)" fg:x="3047" fg:w="3"/><text x="73.8668%" y="655.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.07%)</title><rect x="73.6168%" y="629" width="0.0725%" height="15" fill="rgb(225,216,18)" fg:x="3047" fg:w="3"/><text x="73.8668%" y="639.50"></text></g><g><title>clear_page_rep (3 samples, 0.07%)</title><rect x="73.6168%" y="613" width="0.0725%" height="15" fill="rgb(233,36,38)" fg:x="3047" fg:w="3"/><text x="73.8668%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.05%)</title><rect x="73.7618%" y="869" width="0.0483%" height="15" fill="rgb(239,88,23)" fg:x="3053" fg:w="2"/><text x="74.0118%" y="879.50"></text></g><g><title>hashbrown::raw::is_full (5 samples, 0.12%)</title><rect x="73.8101%" y="869" width="0.1208%" height="15" fill="rgb(219,181,35)" fg:x="3055" fg:w="5"/><text x="74.0601%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (442 samples, 10.68%)</title><rect x="63.2762%" y="933" width="10.6789%" height="15" fill="rgb(215,18,46)" fg:x="2619" fg:w="442"/><text x="63.5262%" y="943.50">std::collections..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (431 samples, 10.41%)</title><rect x="63.5419%" y="917" width="10.4131%" height="15" fill="rgb(241,38,11)" fg:x="2630" fg:w="431"/><text x="63.7919%" y="927.50">hashbrown::map:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (337 samples, 8.14%)</title><rect x="65.8130%" y="901" width="8.1421%" height="15" fill="rgb(248,169,45)" fg:x="2724" fg:w="337"/><text x="66.0630%" y="911.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (11 samples, 0.27%)</title><rect x="73.6893%" y="885" width="0.2658%" height="15" fill="rgb(239,50,49)" fg:x="3050" fg:w="11"/><text x="73.9393%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="73.9309%" y="869" width="0.0242%" height="15" fill="rgb(231,96,31)" fg:x="3060" fg:w="1"/><text x="74.1809%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="73.9309%" y="853" width="0.0242%" height="15" fill="rgb(224,193,37)" fg:x="3060" fg:w="1"/><text x="74.1809%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="74.0517%" y="757" width="0.0242%" height="15" fill="rgb(227,153,50)" fg:x="3065" fg:w="1"/><text x="74.3017%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.07%)</title><rect x="74.3658%" y="581" width="0.0725%" height="15" fill="rgb(249,228,3)" fg:x="3078" fg:w="3"/><text x="74.6158%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="74.3899%" y="565" width="0.0483%" height="15" fill="rgb(219,164,43)" fg:x="3079" fg:w="2"/><text x="74.6399%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.14%)</title><rect x="74.4624%" y="565" width="0.1450%" height="15" fill="rgb(216,45,41)" fg:x="3082" fg:w="6"/><text x="74.7124%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.29%)</title><rect x="74.3416%" y="629" width="0.2899%" height="15" fill="rgb(210,226,51)" fg:x="3077" fg:w="12"/><text x="74.5916%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.29%)</title><rect x="74.3416%" y="613" width="0.2899%" height="15" fill="rgb(209,117,49)" fg:x="3077" fg:w="12"/><text x="74.5916%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.29%)</title><rect x="74.3416%" y="597" width="0.2899%" height="15" fill="rgb(206,196,24)" fg:x="3077" fg:w="12"/><text x="74.5916%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.19%)</title><rect x="74.4383%" y="581" width="0.1933%" height="15" fill="rgb(253,218,3)" fg:x="3081" fg:w="8"/><text x="74.6883%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="74.6074%" y="565" width="0.0242%" height="15" fill="rgb(252,166,2)" fg:x="3088" fg:w="1"/><text x="74.8574%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.07%)</title><rect x="74.6316%" y="629" width="0.0725%" height="15" fill="rgb(236,218,26)" fg:x="3089" fg:w="3"/><text x="74.8816%" y="639.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.07%)</title><rect x="74.6316%" y="613" width="0.0725%" height="15" fill="rgb(254,84,19)" fg:x="3089" fg:w="3"/><text x="74.8816%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.07%)</title><rect x="74.6316%" y="597" width="0.0725%" height="15" fill="rgb(219,137,29)" fg:x="3089" fg:w="3"/><text x="74.8816%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.07%)</title><rect x="74.6316%" y="581" width="0.0725%" height="15" fill="rgb(227,47,52)" fg:x="3089" fg:w="3"/><text x="74.8816%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.22%)</title><rect x="74.8732%" y="533" width="0.2174%" height="15" fill="rgb(229,167,24)" fg:x="3099" fg:w="9"/><text x="75.1232%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.14%)</title><rect x="74.9456%" y="517" width="0.1450%" height="15" fill="rgb(233,164,1)" fg:x="3102" fg:w="6"/><text x="75.1956%" y="527.50"></text></g><g><title>hashbrown::map::make_insert_hash (32 samples, 0.77%)</title><rect x="74.3416%" y="645" width="0.7731%" height="15" fill="rgb(218,88,48)" fg:x="3077" fg:w="32"/><text x="74.5916%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (17 samples, 0.41%)</title><rect x="74.7040%" y="629" width="0.4107%" height="15" fill="rgb(226,214,24)" fg:x="3092" fg:w="17"/><text x="74.9540%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (17 samples, 0.41%)</title><rect x="74.7040%" y="613" width="0.4107%" height="15" fill="rgb(233,29,12)" fg:x="3092" fg:w="17"/><text x="74.9540%" y="623.50"></text></g><g><title>core::hash::Hasher::write_usize (17 samples, 0.41%)</title><rect x="74.7040%" y="597" width="0.4107%" height="15" fill="rgb(219,120,34)" fg:x="3092" fg:w="17"/><text x="74.9540%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.39%)</title><rect x="74.7282%" y="581" width="0.3866%" height="15" fill="rgb(226,78,44)" fg:x="3093" fg:w="16"/><text x="74.9782%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (16 samples, 0.39%)</title><rect x="74.7282%" y="565" width="0.3866%" height="15" fill="rgb(240,15,48)" fg:x="3093" fg:w="16"/><text x="74.9782%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.39%)</title><rect x="74.7282%" y="549" width="0.3866%" height="15" fill="rgb(253,176,7)" fg:x="3093" fg:w="16"/><text x="74.9782%" y="559.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="75.0906%" y="533" width="0.0242%" height="15" fill="rgb(206,166,28)" fg:x="3108" fg:w="1"/><text x="75.3406%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="75.1389%" y="613" width="0.0725%" height="15" fill="rgb(241,53,51)" fg:x="3110" fg:w="3"/><text x="75.3889%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="75.1389%" y="597" width="0.0725%" height="15" fill="rgb(249,112,30)" fg:x="3110" fg:w="3"/><text x="75.3889%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="75.1631%" y="581" width="0.0483%" height="15" fill="rgb(217,85,30)" fg:x="3111" fg:w="2"/><text x="75.4131%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="75.2356%" y="565" width="0.0242%" height="15" fill="rgb(233,49,7)" fg:x="3114" fg:w="1"/><text x="75.4856%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 0.24%)</title><rect x="75.1148%" y="645" width="0.2416%" height="15" fill="rgb(234,109,9)" fg:x="3109" fg:w="10"/><text x="75.3648%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.24%)</title><rect x="75.1148%" y="629" width="0.2416%" height="15" fill="rgb(253,95,22)" fg:x="3109" fg:w="10"/><text x="75.3648%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.14%)</title><rect x="75.2114%" y="613" width="0.1450%" height="15" fill="rgb(233,176,25)" fg:x="3113" fg:w="6"/><text x="75.4614%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.14%)</title><rect x="75.2114%" y="597" width="0.1450%" height="15" fill="rgb(236,33,39)" fg:x="3113" fg:w="6"/><text x="75.4614%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.14%)</title><rect x="75.2114%" y="581" width="0.1450%" height="15" fill="rgb(223,226,42)" fg:x="3113" fg:w="6"/><text x="75.4614%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.10%)</title><rect x="75.2597%" y="565" width="0.0966%" height="15" fill="rgb(216,99,33)" fg:x="3115" fg:w="4"/><text x="75.5097%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.10%)</title><rect x="75.2597%" y="549" width="0.0966%" height="15" fill="rgb(235,84,23)" fg:x="3115" fg:w="4"/><text x="75.5097%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.10%)</title><rect x="75.2597%" y="533" width="0.0966%" height="15" fill="rgb(232,2,27)" fg:x="3115" fg:w="4"/><text x="75.5097%" y="543.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4 samples, 0.10%)</title><rect x="75.2597%" y="517" width="0.0966%" height="15" fill="rgb(241,23,22)" fg:x="3115" fg:w="4"/><text x="75.5097%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.05%)</title><rect x="75.4047%" y="629" width="0.0483%" height="15" fill="rgb(211,73,27)" fg:x="3121" fg:w="2"/><text x="75.6547%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.05%)</title><rect x="75.4047%" y="613" width="0.0483%" height="15" fill="rgb(235,109,49)" fg:x="3121" fg:w="2"/><text x="75.6547%" y="623.50"></text></g><g><title>core::ptr::write (2 samples, 0.05%)</title><rect x="75.4047%" y="597" width="0.0483%" height="15" fill="rgb(230,99,29)" fg:x="3121" fg:w="2"/><text x="75.6547%" y="607.50"></text></g><g><title>core::mem::swap (7 samples, 0.17%)</title><rect x="75.4530%" y="581" width="0.1691%" height="15" fill="rgb(245,199,7)" fg:x="3123" fg:w="7"/><text x="75.7030%" y="591.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (7 samples, 0.17%)</title><rect x="75.4530%" y="565" width="0.1691%" height="15" fill="rgb(217,179,10)" fg:x="3123" fg:w="7"/><text x="75.7030%" y="575.50"></text></g><g><title>core::ptr::swap_nonoverlapping (7 samples, 0.17%)</title><rect x="75.4530%" y="549" width="0.1691%" height="15" fill="rgb(254,99,47)" fg:x="3123" fg:w="7"/><text x="75.7030%" y="559.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (7 samples, 0.17%)</title><rect x="75.4530%" y="533" width="0.1691%" height="15" fill="rgb(251,121,7)" fg:x="3123" fg:w="7"/><text x="75.7030%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.17%)</title><rect x="75.4530%" y="517" width="0.1691%" height="15" fill="rgb(250,177,26)" fg:x="3123" fg:w="7"/><text x="75.7030%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="75.6221%" y="549" width="0.0242%" height="15" fill="rgb(232,88,15)" fg:x="3130" fg:w="1"/><text x="75.8721%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="75.6221%" y="533" width="0.0242%" height="15" fill="rgb(251,54,54)" fg:x="3130" fg:w="1"/><text x="75.8721%" y="543.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (1 samples, 0.02%)</title><rect x="75.6463%" y="533" width="0.0242%" height="15" fill="rgb(208,177,15)" fg:x="3131" fg:w="1"/><text x="75.8963%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (3 samples, 0.07%)</title><rect x="75.6221%" y="581" width="0.0725%" height="15" fill="rgb(205,97,32)" fg:x="3130" fg:w="3"/><text x="75.8721%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (3 samples, 0.07%)</title><rect x="75.6221%" y="565" width="0.0725%" height="15" fill="rgb(217,192,13)" fg:x="3130" fg:w="3"/><text x="75.8721%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (2 samples, 0.05%)</title><rect x="75.6463%" y="549" width="0.0483%" height="15" fill="rgb(215,163,41)" fg:x="3131" fg:w="2"/><text x="75.8963%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="75.6705%" y="533" width="0.0242%" height="15" fill="rgb(246,83,29)" fg:x="3132" fg:w="1"/><text x="75.9205%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="75.6705%" y="517" width="0.0242%" height="15" fill="rgb(219,2,45)" fg:x="3132" fg:w="1"/><text x="75.9205%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.02%)</title><rect x="75.6946%" y="549" width="0.0242%" height="15" fill="rgb(242,215,33)" fg:x="3133" fg:w="1"/><text x="75.9446%" y="559.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.02%)</title><rect x="75.6946%" y="533" width="0.0242%" height="15" fill="rgb(217,1,6)" fg:x="3133" fg:w="1"/><text x="75.9446%" y="543.50"></text></g><g><title>__memset_avx2_unaligned (1 samples, 0.02%)</title><rect x="75.6946%" y="517" width="0.0242%" height="15" fill="rgb(207,85,52)" fg:x="3133" fg:w="1"/><text x="75.9446%" y="527.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (7 samples, 0.17%)</title><rect x="75.7429%" y="533" width="0.1691%" height="15" fill="rgb(231,171,19)" fg:x="3135" fg:w="7"/><text x="75.9929%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.17%)</title><rect x="75.7429%" y="517" width="0.1691%" height="15" fill="rgb(207,128,4)" fg:x="3135" fg:w="7"/><text x="75.9929%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.17%)</title><rect x="75.7429%" y="501" width="0.1691%" height="15" fill="rgb(219,208,4)" fg:x="3135" fg:w="7"/><text x="75.9929%" y="511.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.17%)</title><rect x="75.7429%" y="485" width="0.1691%" height="15" fill="rgb(235,161,42)" fg:x="3135" fg:w="7"/><text x="75.9929%" y="495.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.12%)</title><rect x="75.7913%" y="469" width="0.1208%" height="15" fill="rgb(247,218,18)" fg:x="3137" fg:w="5"/><text x="76.0413%" y="479.50"></text></g><g><title>tcache_get (4 samples, 0.10%)</title><rect x="75.8154%" y="453" width="0.0966%" height="15" fill="rgb(232,114,51)" fg:x="3138" fg:w="4"/><text x="76.0654%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (20 samples, 0.48%)</title><rect x="75.4530%" y="629" width="0.4832%" height="15" fill="rgb(222,95,3)" fg:x="3123" fg:w="20"/><text x="75.7030%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (20 samples, 0.48%)</title><rect x="75.4530%" y="613" width="0.4832%" height="15" fill="rgb(240,65,29)" fg:x="3123" fg:w="20"/><text x="75.7030%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (20 samples, 0.48%)</title><rect x="75.4530%" y="597" width="0.4832%" height="15" fill="rgb(249,209,20)" fg:x="3123" fg:w="20"/><text x="75.7030%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (10 samples, 0.24%)</title><rect x="75.6946%" y="581" width="0.2416%" height="15" fill="rgb(241,48,37)" fg:x="3133" fg:w="10"/><text x="75.9446%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (10 samples, 0.24%)</title><rect x="75.6946%" y="565" width="0.2416%" height="15" fill="rgb(230,140,42)" fg:x="3133" fg:w="10"/><text x="75.9446%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (9 samples, 0.22%)</title><rect x="75.7188%" y="549" width="0.2174%" height="15" fill="rgb(230,176,45)" fg:x="3134" fg:w="9"/><text x="75.9688%" y="559.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (1 samples, 0.02%)</title><rect x="75.9121%" y="533" width="0.0242%" height="15" fill="rgb(245,112,21)" fg:x="3142" fg:w="1"/><text x="76.1621%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.05%)</title><rect x="76.0812%" y="613" width="0.0483%" height="15" fill="rgb(207,183,35)" fg:x="3149" fg:w="2"/><text x="76.3312%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.05%)</title><rect x="76.1295%" y="613" width="0.0483%" height="15" fill="rgb(227,44,33)" fg:x="3151" fg:w="2"/><text x="76.3795%" y="623.50"></text></g><g><title>hashbrown::raw::is_full (2 samples, 0.05%)</title><rect x="76.1778%" y="613" width="0.0483%" height="15" fill="rgb(246,120,21)" fg:x="3153" fg:w="2"/><text x="76.4278%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (16 samples, 0.39%)</title><rect x="75.9362%" y="629" width="0.3866%" height="15" fill="rgb(235,57,52)" fg:x="3143" fg:w="16"/><text x="76.1862%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.10%)</title><rect x="76.2261%" y="613" width="0.0966%" height="15" fill="rgb(238,84,10)" fg:x="3155" fg:w="4"/><text x="76.4761%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.10%)</title><rect x="76.2261%" y="597" width="0.0966%" height="15" fill="rgb(251,200,32)" fg:x="3155" fg:w="4"/><text x="76.4761%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (89 samples, 2.15%)</title><rect x="74.2450%" y="693" width="2.1503%" height="15" fill="rgb(247,159,13)" fg:x="3073" fg:w="89"/><text x="74.4950%" y="703.50">c..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (89 samples, 2.15%)</title><rect x="74.2450%" y="677" width="2.1503%" height="15" fill="rgb(238,64,4)" fg:x="3073" fg:w="89"/><text x="74.4950%" y="687.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (89 samples, 2.15%)</title><rect x="74.2450%" y="661" width="2.1503%" height="15" fill="rgb(221,131,51)" fg:x="3073" fg:w="89"/><text x="74.4950%" y="671.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (43 samples, 1.04%)</title><rect x="75.3564%" y="645" width="1.0389%" height="15" fill="rgb(242,5,29)" fg:x="3119" fg:w="43"/><text x="75.6064%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (3 samples, 0.07%)</title><rect x="76.3228%" y="629" width="0.0725%" height="15" fill="rgb(214,130,32)" fg:x="3159" fg:w="3"/><text x="76.5728%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.02%)</title><rect x="76.3711%" y="613" width="0.0242%" height="15" fill="rgb(244,210,16)" fg:x="3161" fg:w="1"/><text x="76.6211%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.02%)</title><rect x="76.3711%" y="597" width="0.0242%" height="15" fill="rgb(234,48,26)" fg:x="3161" fg:w="1"/><text x="76.6211%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="76.7094%" y="549" width="0.0242%" height="15" fill="rgb(231,82,38)" fg:x="3175" fg:w="1"/><text x="76.9594%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.14%)</title><rect x="76.6610%" y="565" width="0.1450%" height="15" fill="rgb(254,128,41)" fg:x="3173" fg:w="6"/><text x="76.9110%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="76.7335%" y="549" width="0.0725%" height="15" fill="rgb(212,73,49)" fg:x="3176" fg:w="3"/><text x="76.9835%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.24%)</title><rect x="76.8302%" y="549" width="0.2416%" height="15" fill="rgb(205,62,54)" fg:x="3180" fg:w="10"/><text x="77.0802%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.53%)</title><rect x="76.5885%" y="613" width="0.5315%" height="15" fill="rgb(228,0,8)" fg:x="3170" fg:w="22"/><text x="76.8385%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (22 samples, 0.53%)</title><rect x="76.5885%" y="597" width="0.5315%" height="15" fill="rgb(251,28,17)" fg:x="3170" fg:w="22"/><text x="76.8385%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22 samples, 0.53%)</title><rect x="76.5885%" y="581" width="0.5315%" height="15" fill="rgb(238,105,27)" fg:x="3170" fg:w="22"/><text x="76.8385%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.31%)</title><rect x="76.8060%" y="565" width="0.3141%" height="15" fill="rgb(237,216,33)" fg:x="3179" fg:w="13"/><text x="77.0560%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="77.0718%" y="549" width="0.0483%" height="15" fill="rgb(229,228,25)" fg:x="3190" fg:w="2"/><text x="77.3218%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="77.1201%" y="613" width="0.0242%" height="15" fill="rgb(233,75,23)" fg:x="3192" fg:w="1"/><text x="77.3701%" y="623.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="77.1201%" y="597" width="0.0242%" height="15" fill="rgb(231,207,16)" fg:x="3192" fg:w="1"/><text x="77.3701%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="77.1201%" y="581" width="0.0242%" height="15" fill="rgb(231,191,45)" fg:x="3192" fg:w="1"/><text x="77.3701%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="77.1201%" y="565" width="0.0242%" height="15" fill="rgb(224,133,17)" fg:x="3192" fg:w="1"/><text x="77.3701%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="77.6274%" y="501" width="0.0242%" height="15" fill="rgb(209,178,27)" fg:x="3213" fg:w="1"/><text x="77.8774%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.14%)</title><rect x="77.5791%" y="517" width="0.1450%" height="15" fill="rgb(218,37,11)" fg:x="3211" fg:w="6"/><text x="77.8291%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="77.6516%" y="501" width="0.0725%" height="15" fill="rgb(251,226,25)" fg:x="3214" fg:w="3"/><text x="77.9016%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (60 samples, 1.45%)</title><rect x="76.4919%" y="629" width="1.4496%" height="15" fill="rgb(209,222,27)" fg:x="3166" fg:w="60"/><text x="76.7419%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (33 samples, 0.80%)</title><rect x="77.1442%" y="613" width="0.7973%" height="15" fill="rgb(238,22,21)" fg:x="3193" fg:w="33"/><text x="77.3942%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (33 samples, 0.80%)</title><rect x="77.1442%" y="597" width="0.7973%" height="15" fill="rgb(233,161,25)" fg:x="3193" fg:w="33"/><text x="77.3942%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (33 samples, 0.80%)</title><rect x="77.1442%" y="581" width="0.7973%" height="15" fill="rgb(226,122,53)" fg:x="3193" fg:w="33"/><text x="77.3942%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (32 samples, 0.77%)</title><rect x="77.1684%" y="565" width="0.7731%" height="15" fill="rgb(220,123,17)" fg:x="3194" fg:w="32"/><text x="77.4184%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (31 samples, 0.75%)</title><rect x="77.1926%" y="549" width="0.7490%" height="15" fill="rgb(230,224,35)" fg:x="3195" fg:w="31"/><text x="77.4426%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (31 samples, 0.75%)</title><rect x="77.1926%" y="533" width="0.7490%" height="15" fill="rgb(246,83,8)" fg:x="3195" fg:w="31"/><text x="77.4426%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (9 samples, 0.22%)</title><rect x="77.7241%" y="517" width="0.2174%" height="15" fill="rgb(230,214,17)" fg:x="3217" fg:w="9"/><text x="77.9741%" y="527.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (12 samples, 0.29%)</title><rect x="80.6233%" y="549" width="0.2899%" height="15" fill="rgb(222,97,18)" fg:x="3337" fg:w="12"/><text x="80.8733%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.41%)</title><rect x="80.5509%" y="565" width="0.4107%" height="15" fill="rgb(206,79,1)" fg:x="3334" fg:w="17"/><text x="80.8009%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (2 samples, 0.05%)</title><rect x="80.9133%" y="549" width="0.0483%" height="15" fill="rgb(214,121,34)" fg:x="3349" fg:w="2"/><text x="81.1633%" y="559.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (1 samples, 0.02%)</title><rect x="80.9616%" y="565" width="0.0242%" height="15" fill="rgb(249,199,46)" fg:x="3351" fg:w="1"/><text x="81.2116%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::any_bit_set (3 samples, 0.07%)</title><rect x="80.9857%" y="565" width="0.0725%" height="15" fill="rgb(214,222,46)" fg:x="3352" fg:w="3"/><text x="81.2357%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 1.16%)</title><rect x="80.3093%" y="597" width="1.1597%" height="15" fill="rgb(248,168,30)" fg:x="3324" fg:w="48"/><text x="80.5593%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 1.16%)</title><rect x="80.3093%" y="581" width="1.1597%" height="15" fill="rgb(226,14,28)" fg:x="3324" fg:w="48"/><text x="80.5593%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (17 samples, 0.41%)</title><rect x="81.0582%" y="565" width="0.4107%" height="15" fill="rgb(253,123,1)" fg:x="3355" fg:w="17"/><text x="81.3082%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (17 samples, 0.41%)</title><rect x="81.0582%" y="549" width="0.4107%" height="15" fill="rgb(225,24,42)" fg:x="3355" fg:w="17"/><text x="81.3082%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (17 samples, 0.41%)</title><rect x="81.0582%" y="533" width="0.4107%" height="15" fill="rgb(216,161,37)" fg:x="3355" fg:w="17"/><text x="81.3082%" y="543.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.14%)</title><rect x="81.4690%" y="597" width="0.1450%" height="15" fill="rgb(251,164,26)" fg:x="3372" fg:w="6"/><text x="81.7190%" y="607.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (6 samples, 0.14%)</title><rect x="81.4690%" y="581" width="0.1450%" height="15" fill="rgb(219,177,3)" fg:x="3372" fg:w="6"/><text x="81.7190%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (6 samples, 0.14%)</title><rect x="81.4690%" y="565" width="0.1450%" height="15" fill="rgb(222,65,0)" fg:x="3372" fg:w="6"/><text x="81.7190%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (5 samples, 0.12%)</title><rect x="81.6622%" y="549" width="0.1208%" height="15" fill="rgb(223,69,54)" fg:x="3380" fg:w="5"/><text x="81.9122%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (297 samples, 7.18%)</title><rect x="76.3953%" y="677" width="7.1756%" height="15" fill="rgb(235,30,27)" fg:x="3162" fg:w="297"/><text x="76.6453%" y="687.50">std::colle..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (297 samples, 7.18%)</title><rect x="76.3953%" y="661" width="7.1756%" height="15" fill="rgb(220,183,50)" fg:x="3162" fg:w="297"/><text x="76.6453%" y="671.50">hashbrown:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (297 samples, 7.18%)</title><rect x="76.3953%" y="645" width="7.1756%" height="15" fill="rgb(248,198,15)" fg:x="3162" fg:w="297"/><text x="76.6453%" y="655.50">hashbrown:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (233 samples, 5.63%)</title><rect x="77.9415%" y="629" width="5.6294%" height="15" fill="rgb(222,211,4)" fg:x="3226" fg:w="233"/><text x="78.1915%" y="639.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (233 samples, 5.63%)</title><rect x="77.9415%" y="613" width="5.6294%" height="15" fill="rgb(214,102,34)" fg:x="3226" fg:w="233"/><text x="78.1915%" y="623.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (81 samples, 1.96%)</title><rect x="81.6139%" y="597" width="1.9570%" height="15" fill="rgb(245,92,5)" fg:x="3378" fg:w="81"/><text x="81.8639%" y="607.50">h..</text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (81 samples, 1.96%)</title><rect x="81.6139%" y="581" width="1.9570%" height="15" fill="rgb(252,72,51)" fg:x="3378" fg:w="81"/><text x="81.8639%" y="591.50">h..</text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (81 samples, 1.96%)</title><rect x="81.6139%" y="565" width="1.9570%" height="15" fill="rgb(252,208,19)" fg:x="3378" fg:w="81"/><text x="81.8639%" y="575.50">h..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (74 samples, 1.79%)</title><rect x="81.7830%" y="549" width="1.7879%" height="15" fill="rgb(211,69,7)" fg:x="3385" fg:w="74"/><text x="82.0330%" y="559.50">h..</text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (74 samples, 1.79%)</title><rect x="81.7830%" y="533" width="1.7879%" height="15" fill="rgb(211,27,16)" fg:x="3385" fg:w="74"/><text x="82.0330%" y="543.50">c..</text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (74 samples, 1.79%)</title><rect x="81.7830%" y="517" width="1.7879%" height="15" fill="rgb(219,216,14)" fg:x="3385" fg:w="74"/><text x="82.0330%" y="527.50">c..</text></g><g><title>core::core_arch::simd::i8x16::new (74 samples, 1.79%)</title><rect x="81.7830%" y="501" width="1.7879%" height="15" fill="rgb(219,71,8)" fg:x="3385" fg:w="74"/><text x="82.0330%" y="511.50">c..</text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="83.8850%" y="549" width="0.0242%" height="15" fill="rgb(223,170,53)" fg:x="3472" fg:w="1"/><text x="84.1350%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.07%)</title><rect x="83.8608%" y="565" width="0.0725%" height="15" fill="rgb(246,21,26)" fg:x="3471" fg:w="3"/><text x="84.1108%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="83.9092%" y="549" width="0.0242%" height="15" fill="rgb(248,20,46)" fg:x="3473" fg:w="1"/><text x="84.1592%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.10%)</title><rect x="84.0783%" y="549" width="0.0966%" height="15" fill="rgb(252,94,11)" fg:x="3480" fg:w="4"/><text x="84.3283%" y="559.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="84.1508%" y="533" width="0.0242%" height="15" fill="rgb(236,163,8)" fg:x="3483" fg:w="1"/><text x="84.4008%" y="543.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="84.1508%" y="517" width="0.0242%" height="15" fill="rgb(217,221,45)" fg:x="3483" fg:w="1"/><text x="84.4008%" y="527.50"></text></g><g><title>irqentry_exit (1 samples, 0.02%)</title><rect x="84.1508%" y="501" width="0.0242%" height="15" fill="rgb(238,38,17)" fg:x="3483" fg:w="1"/><text x="84.4008%" y="511.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="84.1508%" y="485" width="0.0242%" height="15" fill="rgb(242,210,23)" fg:x="3483" fg:w="1"/><text x="84.4008%" y="495.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="84.1508%" y="469" width="0.0242%" height="15" fill="rgb(250,86,53)" fg:x="3483" fg:w="1"/><text x="84.4008%" y="479.50"></text></g><g><title>schedule (1 samples, 0.02%)</title><rect x="84.1508%" y="453" width="0.0242%" height="15" fill="rgb(223,168,25)" fg:x="3483" fg:w="1"/><text x="84.4008%" y="463.50"></text></g><g><title>__schedule (1 samples, 0.02%)</title><rect x="84.1508%" y="437" width="0.0242%" height="15" fill="rgb(251,189,4)" fg:x="3483" fg:w="1"/><text x="84.4008%" y="447.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="84.1508%" y="421" width="0.0242%" height="15" fill="rgb(245,19,28)" fg:x="3483" fg:w="1"/><text x="84.4008%" y="431.50"></text></g><g><title>put_prev_entity (1 samples, 0.02%)</title><rect x="84.1508%" y="405" width="0.0242%" height="15" fill="rgb(207,10,34)" fg:x="3483" fg:w="1"/><text x="84.4008%" y="415.50"></text></g><g><title>update_load_avg (1 samples, 0.02%)</title><rect x="84.1508%" y="389" width="0.0242%" height="15" fill="rgb(235,153,31)" fg:x="3483" fg:w="1"/><text x="84.4008%" y="399.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="84.1508%" y="373" width="0.0242%" height="15" fill="rgb(228,72,37)" fg:x="3483" fg:w="1"/><text x="84.4008%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.63%)</title><rect x="83.6917%" y="613" width="0.6282%" height="15" fill="rgb(215,15,16)" fg:x="3464" fg:w="26"/><text x="83.9417%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (26 samples, 0.63%)</title><rect x="83.6917%" y="597" width="0.6282%" height="15" fill="rgb(250,119,29)" fg:x="3464" fg:w="26"/><text x="83.9417%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (26 samples, 0.63%)</title><rect x="83.6917%" y="581" width="0.6282%" height="15" fill="rgb(214,59,1)" fg:x="3464" fg:w="26"/><text x="83.9417%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16 samples, 0.39%)</title><rect x="83.9333%" y="565" width="0.3866%" height="15" fill="rgb(223,109,25)" fg:x="3474" fg:w="16"/><text x="84.1833%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.14%)</title><rect x="84.1749%" y="549" width="0.1450%" height="15" fill="rgb(230,198,22)" fg:x="3484" fg:w="6"/><text x="84.4249%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.05%)</title><rect x="84.3199%" y="613" width="0.0483%" height="15" fill="rgb(245,184,46)" fg:x="3490" fg:w="2"/><text x="84.5699%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="84.9481%" y="501" width="0.0242%" height="15" fill="rgb(253,73,16)" fg:x="3516" fg:w="1"/><text x="85.1981%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.22%)</title><rect x="84.8514%" y="517" width="0.2174%" height="15" fill="rgb(206,94,45)" fg:x="3512" fg:w="9"/><text x="85.1014%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.10%)</title><rect x="84.9722%" y="501" width="0.0966%" height="15" fill="rgb(236,83,27)" fg:x="3517" fg:w="4"/><text x="85.2222%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (65 samples, 1.57%)</title><rect x="83.5951%" y="629" width="1.5704%" height="15" fill="rgb(220,196,8)" fg:x="3460" fg:w="65"/><text x="83.8451%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (33 samples, 0.80%)</title><rect x="84.3682%" y="613" width="0.7973%" height="15" fill="rgb(254,185,14)" fg:x="3492" fg:w="33"/><text x="84.6182%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (33 samples, 0.80%)</title><rect x="84.3682%" y="597" width="0.7973%" height="15" fill="rgb(226,50,22)" fg:x="3492" fg:w="33"/><text x="84.6182%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (33 samples, 0.80%)</title><rect x="84.3682%" y="581" width="0.7973%" height="15" fill="rgb(253,147,0)" fg:x="3492" fg:w="33"/><text x="84.6182%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.65%)</title><rect x="84.5132%" y="565" width="0.6523%" height="15" fill="rgb(252,46,33)" fg:x="3498" fg:w="27"/><text x="84.7632%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (21 samples, 0.51%)</title><rect x="84.6581%" y="549" width="0.5074%" height="15" fill="rgb(242,22,54)" fg:x="3504" fg:w="21"/><text x="84.9081%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.51%)</title><rect x="84.6581%" y="533" width="0.5074%" height="15" fill="rgb(223,178,32)" fg:x="3504" fg:w="21"/><text x="84.9081%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.10%)</title><rect x="85.0689%" y="517" width="0.0966%" height="15" fill="rgb(214,106,53)" fg:x="3521" fg:w="4"/><text x="85.3189%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.34%)</title><rect x="85.8662%" y="597" width="0.3382%" height="15" fill="rgb(232,65,50)" fg:x="3554" fg:w="14"/><text x="86.1162%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.34%)</title><rect x="85.8662%" y="581" width="0.3382%" height="15" fill="rgb(231,110,28)" fg:x="3554" fg:w="14"/><text x="86.1162%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.29%)</title><rect x="85.9145%" y="565" width="0.2899%" height="15" fill="rgb(216,71,40)" fg:x="3556" fg:w="12"/><text x="86.1645%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.14%)</title><rect x="86.0594%" y="549" width="0.1450%" height="15" fill="rgb(229,89,53)" fg:x="3562" fg:w="6"/><text x="86.3094%" y="559.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (506 samples, 12.23%)</title><rect x="74.2208%" y="709" width="12.2252%" height="15" fill="rgb(210,124,14)" fg:x="3072" fg:w="506"/><text x="74.4708%" y="719.50">core::iter::adapte..</text></g><g><title>y2021::d15::main::next_points::{{closure}} (416 samples, 10.05%)</title><rect x="76.3953%" y="693" width="10.0507%" height="15" fill="rgb(236,213,6)" fg:x="3162" fg:w="416"/><text x="76.6453%" y="703.50">y2021::d15::mai..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (119 samples, 2.88%)</title><rect x="83.5709%" y="677" width="2.8751%" height="15" fill="rgb(228,41,5)" fg:x="3459" fg:w="119"/><text x="83.8209%" y="687.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (119 samples, 2.88%)</title><rect x="83.5709%" y="661" width="2.8751%" height="15" fill="rgb(221,167,25)" fg:x="3459" fg:w="119"/><text x="83.8209%" y="671.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (119 samples, 2.88%)</title><rect x="83.5709%" y="645" width="2.8751%" height="15" fill="rgb(228,144,37)" fg:x="3459" fg:w="119"/><text x="83.8209%" y="655.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (53 samples, 1.28%)</title><rect x="85.1655%" y="629" width="1.2805%" height="15" fill="rgb(227,189,38)" fg:x="3525" fg:w="53"/><text x="85.4155%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (53 samples, 1.28%)</title><rect x="85.1655%" y="613" width="1.2805%" height="15" fill="rgb(218,8,2)" fg:x="3525" fg:w="53"/><text x="85.4155%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (10 samples, 0.24%)</title><rect x="86.2044%" y="597" width="0.2416%" height="15" fill="rgb(209,61,28)" fg:x="3568" fg:w="10"/><text x="86.4544%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (10 samples, 0.24%)</title><rect x="86.2044%" y="581" width="0.2416%" height="15" fill="rgb(233,140,39)" fg:x="3568" fg:w="10"/><text x="86.4544%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (10 samples, 0.24%)</title><rect x="86.2044%" y="565" width="0.2416%" height="15" fill="rgb(251,66,48)" fg:x="3568" fg:w="10"/><text x="86.4544%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.14%)</title><rect x="86.3010%" y="549" width="0.1450%" height="15" fill="rgb(210,44,45)" fg:x="3572" fg:w="6"/><text x="86.5510%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (6 samples, 0.14%)</title><rect x="86.3010%" y="533" width="0.1450%" height="15" fill="rgb(214,136,46)" fg:x="3572" fg:w="6"/><text x="86.5510%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (6 samples, 0.14%)</title><rect x="86.3010%" y="517" width="0.1450%" height="15" fill="rgb(207,130,50)" fg:x="3572" fg:w="6"/><text x="86.5510%" y="527.50"></text></g><g><title>core::core_arch::simd::i8x16::new (6 samples, 0.14%)</title><rect x="86.3010%" y="501" width="0.1450%" height="15" fill="rgb(228,102,49)" fg:x="3572" fg:w="6"/><text x="86.5510%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.22%)</title><rect x="87.2916%" y="565" width="0.2174%" height="15" fill="rgb(253,55,1)" fg:x="3613" fg:w="9"/><text x="87.5416%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.39%)</title><rect x="87.2433%" y="581" width="0.3866%" height="15" fill="rgb(238,222,9)" fg:x="3611" fg:w="16"/><text x="87.4933%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.12%)</title><rect x="87.5091%" y="565" width="0.1208%" height="15" fill="rgb(246,99,6)" fg:x="3622" fg:w="5"/><text x="87.7591%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.41%)</title><rect x="87.7507%" y="565" width="0.4107%" height="15" fill="rgb(219,110,26)" fg:x="3632" fg:w="17"/><text x="88.0007%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (68 samples, 1.64%)</title><rect x="86.6634%" y="629" width="1.6429%" height="15" fill="rgb(239,160,33)" fg:x="3587" fg:w="68"/><text x="86.9134%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (68 samples, 1.64%)</title><rect x="86.6634%" y="613" width="1.6429%" height="15" fill="rgb(220,202,23)" fg:x="3587" fg:w="68"/><text x="86.9134%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (68 samples, 1.64%)</title><rect x="86.6634%" y="597" width="1.6429%" height="15" fill="rgb(208,80,26)" fg:x="3587" fg:w="68"/><text x="86.9134%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (28 samples, 0.68%)</title><rect x="87.6299%" y="581" width="0.6765%" height="15" fill="rgb(243,85,7)" fg:x="3627" fg:w="28"/><text x="87.8799%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.14%)</title><rect x="88.1614%" y="565" width="0.1450%" height="15" fill="rgb(228,77,47)" fg:x="3649" fg:w="6"/><text x="88.4114%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (9 samples, 0.22%)</title><rect x="88.3064%" y="629" width="0.2174%" height="15" fill="rgb(212,226,8)" fg:x="3655" fg:w="9"/><text x="88.5564%" y="639.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (8 samples, 0.19%)</title><rect x="88.3305%" y="613" width="0.1933%" height="15" fill="rgb(241,120,54)" fg:x="3656" fg:w="8"/><text x="88.5805%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (8 samples, 0.19%)</title><rect x="88.3305%" y="597" width="0.1933%" height="15" fill="rgb(226,80,16)" fg:x="3656" fg:w="8"/><text x="88.5805%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (8 samples, 0.19%)</title><rect x="88.3305%" y="581" width="0.1933%" height="15" fill="rgb(240,76,13)" fg:x="3656" fg:w="8"/><text x="88.5805%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.17%)</title><rect x="89.5385%" y="517" width="0.1691%" height="15" fill="rgb(252,74,8)" fg:x="3706" fg:w="7"/><text x="89.7885%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.41%)</title><rect x="89.3936%" y="533" width="0.4107%" height="15" fill="rgb(244,155,2)" fg:x="3700" fg:w="17"/><text x="89.6436%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.10%)</title><rect x="89.7077%" y="517" width="0.0966%" height="15" fill="rgb(215,81,35)" fg:x="3713" fg:w="4"/><text x="89.9577%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (144 samples, 3.48%)</title><rect x="86.4702%" y="645" width="3.4791%" height="15" fill="rgb(206,55,2)" fg:x="3579" fg:w="144"/><text x="86.7202%" y="655.50">has..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (59 samples, 1.43%)</title><rect x="88.5238%" y="629" width="1.4255%" height="15" fill="rgb(231,2,34)" fg:x="3664" fg:w="59"/><text x="88.7738%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (59 samples, 1.43%)</title><rect x="88.5238%" y="613" width="1.4255%" height="15" fill="rgb(242,176,48)" fg:x="3664" fg:w="59"/><text x="88.7738%" y="623.50"></text></g><g><title>core::hash::Hasher::write_usize (59 samples, 1.43%)</title><rect x="88.5238%" y="597" width="1.4255%" height="15" fill="rgb(249,31,36)" fg:x="3664" fg:w="59"/><text x="88.7738%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (55 samples, 1.33%)</title><rect x="88.6204%" y="581" width="1.3288%" height="15" fill="rgb(205,18,17)" fg:x="3668" fg:w="55"/><text x="88.8704%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (55 samples, 1.33%)</title><rect x="88.6204%" y="565" width="1.3288%" height="15" fill="rgb(254,130,5)" fg:x="3668" fg:w="55"/><text x="88.8704%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (55 samples, 1.33%)</title><rect x="88.6204%" y="549" width="1.3288%" height="15" fill="rgb(229,42,45)" fg:x="3668" fg:w="55"/><text x="88.8704%" y="559.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.14%)</title><rect x="89.8043%" y="533" width="0.1450%" height="15" fill="rgb(245,95,25)" fg:x="3717" fg:w="6"/><text x="90.0543%" y="543.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.14%)</title><rect x="96.7625%" y="565" width="0.1450%" height="15" fill="rgb(249,193,38)" fg:x="4005" fg:w="6"/><text x="97.0125%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.29%)</title><rect x="96.6417%" y="613" width="0.2899%" height="15" fill="rgb(241,140,43)" fg:x="4000" fg:w="12"/><text x="96.8917%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.29%)</title><rect x="96.6417%" y="597" width="0.2899%" height="15" fill="rgb(245,78,48)" fg:x="4000" fg:w="12"/><text x="96.8917%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.27%)</title><rect x="96.6659%" y="581" width="0.2658%" height="15" fill="rgb(214,92,39)" fg:x="4001" fg:w="11"/><text x="96.9159%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.02%)</title><rect x="96.9075%" y="565" width="0.0242%" height="15" fill="rgb(211,189,14)" fg:x="4011" fg:w="1"/><text x="97.1575%" y="575.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.07%)</title><rect x="96.9316%" y="613" width="0.0725%" height="15" fill="rgb(218,7,24)" fg:x="4012" fg:w="3"/><text x="97.1816%" y="623.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (3 samples, 0.07%)</title><rect x="96.9316%" y="597" width="0.0725%" height="15" fill="rgb(224,200,49)" fg:x="4012" fg:w="3"/><text x="97.1816%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (3 samples, 0.07%)</title><rect x="96.9316%" y="581" width="0.0725%" height="15" fill="rgb(218,210,14)" fg:x="4012" fg:w="3"/><text x="97.1816%" y="591.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1,047 samples, 25.30%)</title><rect x="74.0759%" y="741" width="25.2960%" height="15" fill="rgb(234,142,31)" fg:x="3066" fg:w="1047"/><text x="74.3259%" y="751.50">core::iter::adapters::filter::filter_fol..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,046 samples, 25.27%)</title><rect x="74.1000%" y="725" width="25.2718%" height="15" fill="rgb(227,165,2)" fg:x="3067" fg:w="1046"/><text x="74.3500%" y="735.50">core::iter::adapters::map::map_fold::{{c..</text></g><g><title>y2021::d15::main::next_points::{{closure}} (535 samples, 12.93%)</title><rect x="86.4460%" y="709" width="12.9258%" height="15" fill="rgb(232,44,46)" fg:x="3578" fg:w="535"/><text x="86.6960%" y="719.50">y2021::d15::main::n..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (534 samples, 12.90%)</title><rect x="86.4702%" y="693" width="12.9017%" height="15" fill="rgb(236,149,47)" fg:x="3579" fg:w="534"/><text x="86.7202%" y="703.50">std::collections::h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (534 samples, 12.90%)</title><rect x="86.4702%" y="677" width="12.9017%" height="15" fill="rgb(227,45,31)" fg:x="3579" fg:w="534"/><text x="86.7202%" y="687.50">hashbrown::map::Has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (534 samples, 12.90%)</title><rect x="86.4702%" y="661" width="12.9017%" height="15" fill="rgb(240,176,51)" fg:x="3579" fg:w="534"/><text x="86.7202%" y="671.50">hashbrown::map::Has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (390 samples, 9.42%)</title><rect x="89.9493%" y="645" width="9.4226%" height="15" fill="rgb(249,146,41)" fg:x="3723" fg:w="390"/><text x="90.1993%" y="655.50">hashbrown::ra..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (390 samples, 9.42%)</title><rect x="89.9493%" y="629" width="9.4226%" height="15" fill="rgb(213,208,4)" fg:x="3723" fg:w="390"/><text x="90.1993%" y="639.50">hashbrown::ra..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (98 samples, 2.37%)</title><rect x="97.0041%" y="613" width="2.3677%" height="15" fill="rgb(245,84,36)" fg:x="4015" fg:w="98"/><text x="97.2541%" y="623.50">ha..</text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (98 samples, 2.37%)</title><rect x="97.0041%" y="597" width="2.3677%" height="15" fill="rgb(254,84,18)" fg:x="4015" fg:w="98"/><text x="97.2541%" y="607.50">ha..</text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (98 samples, 2.37%)</title><rect x="97.0041%" y="581" width="2.3677%" height="15" fill="rgb(225,38,54)" fg:x="4015" fg:w="98"/><text x="97.2541%" y="591.50">ha..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (95 samples, 2.30%)</title><rect x="97.0766%" y="565" width="2.2952%" height="15" fill="rgb(246,50,30)" fg:x="4018" fg:w="95"/><text x="97.3266%" y="575.50">h..</text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (95 samples, 2.30%)</title><rect x="97.0766%" y="549" width="2.2952%" height="15" fill="rgb(246,148,9)" fg:x="4018" fg:w="95"/><text x="97.3266%" y="559.50">c..</text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (95 samples, 2.30%)</title><rect x="97.0766%" y="533" width="2.2952%" height="15" fill="rgb(223,75,4)" fg:x="4018" fg:w="95"/><text x="97.3266%" y="543.50">c..</text></g><g><title>core::core_arch::simd::i8x16::new (95 samples, 2.30%)</title><rect x="97.0766%" y="517" width="2.2952%" height="15" fill="rgb(239,148,41)" fg:x="4018" fg:w="95"/><text x="97.3266%" y="527.50">c..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,053 samples, 25.44%)</title><rect x="73.9551%" y="885" width="25.4409%" height="15" fill="rgb(205,195,3)" fg:x="3061" fg:w="1053"/><text x="74.2051%" y="895.50">&lt;std::collections::hash::map::HashMap&lt;K,V..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,053 samples, 25.44%)</title><rect x="73.9551%" y="869" width="25.4409%" height="15" fill="rgb(254,161,1)" fg:x="3061" fg:w="1053"/><text x="74.2051%" y="879.50">&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,053 samples, 25.44%)</title><rect x="73.9551%" y="853" width="25.4409%" height="15" fill="rgb(211,229,8)" fg:x="3061" fg:w="1053"/><text x="74.2051%" y="863.50">core::iter::traits::iterator::Iterator::f..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,053 samples, 25.44%)</title><rect x="73.9551%" y="837" width="25.4409%" height="15" fill="rgb(220,97,9)" fg:x="3061" fg:w="1053"/><text x="74.2051%" y="847.50">&lt;core::iter::adapters::filter::Filter&lt;I,P..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,052 samples, 25.42%)</title><rect x="73.9792%" y="821" width="25.4168%" height="15" fill="rgb(240,218,8)" fg:x="3062" fg:w="1052"/><text x="74.2292%" y="831.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,051 samples, 25.39%)</title><rect x="74.0034%" y="805" width="25.3926%" height="15" fill="rgb(250,44,0)" fg:x="3063" fg:w="1051"/><text x="74.2534%" y="815.50">&lt;core::iter::adapters::filter::Filter&lt;I,P..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,051 samples, 25.39%)</title><rect x="74.0034%" y="789" width="25.3926%" height="15" fill="rgb(236,41,53)" fg:x="3063" fg:w="1051"/><text x="74.2534%" y="799.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,051 samples, 25.39%)</title><rect x="74.0034%" y="773" width="25.3926%" height="15" fill="rgb(218,227,13)" fg:x="3063" fg:w="1051"/><text x="74.2534%" y="783.50">core::iter::traits::iterator::Iterator::f..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,048 samples, 25.32%)</title><rect x="74.0759%" y="757" width="25.3201%" height="15" fill="rgb(217,94,32)" fg:x="3066" fg:w="1048"/><text x="74.3259%" y="767.50">core::iter::adapters::map::map_fold::{{c..</text></g><g><title>y2021::d15::main::next_points::{{closure}} (1 samples, 0.02%)</title><rect x="99.3718%" y="741" width="0.0242%" height="15" fill="rgb(213,217,12)" fg:x="4113" fg:w="1"/><text x="99.6218%" y="751.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (3 samples, 0.07%)</title><rect x="99.3960%" y="821" width="0.0725%" height="15" fill="rgb(229,13,46)" fg:x="4114" fg:w="3"/><text x="99.6460%" y="831.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.07%)</title><rect x="99.3960%" y="805" width="0.0725%" height="15" fill="rgb(243,139,5)" fg:x="4114" fg:w="3"/><text x="99.6460%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (5 samples, 0.12%)</title><rect x="99.3960%" y="885" width="0.1208%" height="15" fill="rgb(249,38,45)" fg:x="4114" fg:w="5"/><text x="99.6460%" y="895.50"></text></g><g><title>std::collections::hash::map::RandomState::new (5 samples, 0.12%)</title><rect x="99.3960%" y="869" width="0.1208%" height="15" fill="rgb(216,70,11)" fg:x="4114" fg:w="5"/><text x="99.6460%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.12%)</title><rect x="99.3960%" y="853" width="0.1208%" height="15" fill="rgb(253,101,25)" fg:x="4114" fg:w="5"/><text x="99.6460%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.12%)</title><rect x="99.3960%" y="837" width="0.1208%" height="15" fill="rgb(207,197,30)" fg:x="4114" fg:w="5"/><text x="99.6460%" y="847.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (2 samples, 0.05%)</title><rect x="99.4685%" y="821" width="0.0483%" height="15" fill="rgb(238,87,13)" fg:x="4117" fg:w="2"/><text x="99.7185%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="99.4926%" y="805" width="0.0242%" height="15" fill="rgb(215,155,8)" fg:x="4118" fg:w="1"/><text x="99.7426%" y="815.50"></text></g><g><title>y2021::d15::main::next_points (1,060 samples, 25.61%)</title><rect x="73.9551%" y="933" width="25.6101%" height="15" fill="rgb(239,166,38)" fg:x="3061" fg:w="1060"/><text x="74.2051%" y="943.50">y2021::d15::main::next_points</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,060 samples, 25.61%)</title><rect x="73.9551%" y="917" width="25.6101%" height="15" fill="rgb(240,194,35)" fg:x="3061" fg:w="1060"/><text x="74.2051%" y="927.50">core::iter::traits::iterator::Iterator::c..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,060 samples, 25.61%)</title><rect x="73.9551%" y="901" width="25.6101%" height="15" fill="rgb(219,10,44)" fg:x="3061" fg:w="1060"/><text x="74.2051%" y="911.50">&lt;std::collections::hash::map::HashMap&lt;K,V..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (2 samples, 0.05%)</title><rect x="99.5168%" y="885" width="0.0483%" height="15" fill="rgb(251,220,35)" fg:x="4119" fg:w="2"/><text x="99.7668%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (1 samples, 0.02%)</title><rect x="99.5410%" y="869" width="0.0242%" height="15" fill="rgb(218,117,13)" fg:x="4120" fg:w="1"/><text x="99.7910%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="99.5410%" y="853" width="0.0242%" height="15" fill="rgb(221,213,40)" fg:x="4120" fg:w="1"/><text x="99.7910%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_in (1 samples, 0.02%)</title><rect x="99.5410%" y="837" width="0.0242%" height="15" fill="rgb(251,224,35)" fg:x="4120" fg:w="1"/><text x="99.7910%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::static_empty (1 samples, 0.02%)</title><rect x="99.5410%" y="821" width="0.0242%" height="15" fill="rgb(241,33,39)" fg:x="4120" fg:w="1"/><text x="99.7910%" y="831.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="99.5651%" y="581" width="0.0242%" height="15" fill="rgb(222,74,17)" fg:x="4121" fg:w="1"/><text x="99.8151%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="99.5651%" y="565" width="0.0242%" height="15" fill="rgb(225,103,0)" fg:x="4121" fg:w="1"/><text x="99.8151%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="99.5651%" y="549" width="0.0242%" height="15" fill="rgb(240,0,12)" fg:x="4121" fg:w="1"/><text x="99.8151%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="99.5651%" y="533" width="0.0242%" height="15" fill="rgb(233,213,37)" fg:x="4121" fg:w="1"/><text x="99.8151%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="99.5651%" y="517" width="0.0242%" height="15" fill="rgb(225,84,52)" fg:x="4121" fg:w="1"/><text x="99.8151%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="99.5651%" y="501" width="0.0242%" height="15" fill="rgb(247,160,51)" fg:x="4121" fg:w="1"/><text x="99.8151%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="99.6134%" y="485" width="0.0242%" height="15" fill="rgb(244,60,51)" fg:x="4123" fg:w="1"/><text x="99.8634%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="99.6134%" y="469" width="0.0242%" height="15" fill="rgb(233,114,7)" fg:x="4123" fg:w="1"/><text x="99.8634%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="99.6134%" y="453" width="0.0242%" height="15" fill="rgb(246,136,16)" fg:x="4123" fg:w="1"/><text x="99.8634%" y="463.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (3 samples, 0.07%)</title><rect x="99.5893%" y="517" width="0.0725%" height="15" fill="rgb(243,114,45)" fg:x="4122" fg:w="3"/><text x="99.8393%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.07%)</title><rect x="99.5893%" y="501" width="0.0725%" height="15" fill="rgb(247,183,43)" fg:x="4122" fg:w="3"/><text x="99.8393%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="99.6376%" y="485" width="0.0242%" height="15" fill="rgb(251,210,42)" fg:x="4124" fg:w="1"/><text x="99.8876%" y="495.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="99.6376%" y="469" width="0.0242%" height="15" fill="rgb(221,88,35)" fg:x="4124" fg:w="1"/><text x="99.8876%" y="479.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="99.6376%" y="453" width="0.0242%" height="15" fill="rgb(242,21,20)" fg:x="4124" fg:w="1"/><text x="99.8876%" y="463.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="99.6376%" y="437" width="0.0242%" height="15" fill="rgb(233,226,36)" fg:x="4124" fg:w="1"/><text x="99.8876%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (5 samples, 0.12%)</title><rect x="99.5651%" y="725" width="0.1208%" height="15" fill="rgb(243,189,34)" fg:x="4121" fg:w="5"/><text x="99.8151%" y="735.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (5 samples, 0.12%)</title><rect x="99.5651%" y="709" width="0.1208%" height="15" fill="rgb(207,145,50)" fg:x="4121" fg:w="5"/><text x="99.8151%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.12%)</title><rect x="99.5651%" y="693" width="0.1208%" height="15" fill="rgb(242,1,50)" fg:x="4121" fg:w="5"/><text x="99.8151%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (5 samples, 0.12%)</title><rect x="99.5651%" y="677" width="0.1208%" height="15" fill="rgb(231,65,32)" fg:x="4121" fg:w="5"/><text x="99.8151%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.12%)</title><rect x="99.5651%" y="661" width="0.1208%" height="15" fill="rgb(208,68,49)" fg:x="4121" fg:w="5"/><text x="99.8151%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.12%)</title><rect x="99.5651%" y="645" width="0.1208%" height="15" fill="rgb(253,54,49)" fg:x="4121" fg:w="5"/><text x="99.8151%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.12%)</title><rect x="99.5651%" y="629" width="0.1208%" height="15" fill="rgb(245,186,24)" fg:x="4121" fg:w="5"/><text x="99.8151%" y="639.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (5 samples, 0.12%)</title><rect x="99.5651%" y="613" width="0.1208%" height="15" fill="rgb(209,2,41)" fg:x="4121" fg:w="5"/><text x="99.8151%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.12%)</title><rect x="99.5651%" y="597" width="0.1208%" height="15" fill="rgb(242,208,54)" fg:x="4121" fg:w="5"/><text x="99.8151%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.10%)</title><rect x="99.5893%" y="581" width="0.0966%" height="15" fill="rgb(225,9,51)" fg:x="4122" fg:w="4"/><text x="99.8393%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.10%)</title><rect x="99.5893%" y="565" width="0.0966%" height="15" fill="rgb(207,207,25)" fg:x="4122" fg:w="4"/><text x="99.8393%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.10%)</title><rect x="99.5893%" y="549" width="0.0966%" height="15" fill="rgb(253,96,18)" fg:x="4122" fg:w="4"/><text x="99.8393%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (4 samples, 0.10%)</title><rect x="99.5893%" y="533" width="0.0966%" height="15" fill="rgb(252,215,20)" fg:x="4122" fg:w="4"/><text x="99.8393%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (1 samples, 0.02%)</title><rect x="99.6618%" y="517" width="0.0242%" height="15" fill="rgb(245,227,26)" fg:x="4125" fg:w="1"/><text x="99.9118%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1 samples, 0.02%)</title><rect x="99.6618%" y="501" width="0.0242%" height="15" fill="rgb(241,208,0)" fg:x="4125" fg:w="1"/><text x="99.9118%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="99.6618%" y="485" width="0.0242%" height="15" fill="rgb(224,130,10)" fg:x="4125" fg:w="1"/><text x="99.9118%" y="495.50"></text></g><g><title>y2021::d15::main::run (1,892 samples, 45.71%)</title><rect x="53.9986%" y="965" width="45.7115%" height="15" fill="rgb(237,29,0)" fg:x="2235" fg:w="1892"/><text x="54.2486%" y="975.50">y2021::d15::main::run</text></g><g><title>y2021::d15::main::p02 (1,843 samples, 44.53%)</title><rect x="55.1824%" y="949" width="44.5277%" height="15" fill="rgb(219,27,41)" fg:x="2284" fg:w="1843"/><text x="55.4324%" y="959.50">y2021::d15::main::p02</text></g><g><title>y2021::d15::main::parse_input (6 samples, 0.14%)</title><rect x="99.5651%" y="933" width="0.1450%" height="15" fill="rgb(245,101,19)" fg:x="4121" fg:w="6"/><text x="99.8151%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.14%)</title><rect x="99.5651%" y="917" width="0.1450%" height="15" fill="rgb(243,44,37)" fg:x="4121" fg:w="6"/><text x="99.8151%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6 samples, 0.14%)</title><rect x="99.5651%" y="901" width="0.1450%" height="15" fill="rgb(228,213,43)" fg:x="4121" fg:w="6"/><text x="99.8151%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.14%)</title><rect x="99.5651%" y="885" width="0.1450%" height="15" fill="rgb(219,163,21)" fg:x="4121" fg:w="6"/><text x="99.8151%" y="895.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.14%)</title><rect x="99.5651%" y="869" width="0.1450%" height="15" fill="rgb(234,86,24)" fg:x="4121" fg:w="6"/><text x="99.8151%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.14%)</title><rect x="99.5651%" y="853" width="0.1450%" height="15" fill="rgb(225,10,24)" fg:x="4121" fg:w="6"/><text x="99.8151%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="99.5651%" y="837" width="0.1450%" height="15" fill="rgb(218,109,7)" fg:x="4121" fg:w="6"/><text x="99.8151%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="99.5651%" y="821" width="0.1450%" height="15" fill="rgb(210,20,26)" fg:x="4121" fg:w="6"/><text x="99.8151%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="99.5651%" y="805" width="0.1450%" height="15" fill="rgb(216,18,1)" fg:x="4121" fg:w="6"/><text x="99.8151%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="99.5651%" y="789" width="0.1450%" height="15" fill="rgb(206,163,23)" fg:x="4121" fg:w="6"/><text x="99.8151%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="99.5651%" y="773" width="0.1450%" height="15" fill="rgb(229,150,31)" fg:x="4121" fg:w="6"/><text x="99.8151%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="99.5651%" y="757" width="0.1450%" height="15" fill="rgb(231,10,5)" fg:x="4121" fg:w="6"/><text x="99.8151%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.14%)</title><rect x="99.5651%" y="741" width="0.1450%" height="15" fill="rgb(250,40,50)" fg:x="4121" fg:w="6"/><text x="99.8151%" y="751.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.6859%" y="725" width="0.0242%" height="15" fill="rgb(217,119,7)" fg:x="4126" fg:w="1"/><text x="99.9359%" y="735.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.02%)</title><rect x="99.6859%" y="709" width="0.0242%" height="15" fill="rgb(245,214,40)" fg:x="4126" fg:w="1"/><text x="99.9359%" y="719.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.02%)</title><rect x="99.6859%" y="693" width="0.0242%" height="15" fill="rgb(216,187,1)" fg:x="4126" fg:w="1"/><text x="99.9359%" y="703.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.02%)</title><rect x="99.6859%" y="677" width="0.0242%" height="15" fill="rgb(237,146,21)" fg:x="4126" fg:w="1"/><text x="99.9359%" y="687.50"></text></g><g><title>__libc_start_main (4,055 samples, 97.97%)</title><rect x="1.7637%" y="1205" width="97.9705%" height="15" fill="rgb(210,174,47)" fg:x="73" fg:w="4055"/><text x="2.0137%" y="1215.50">__libc_start_main</text></g><g><title>main (4,055 samples, 97.97%)</title><rect x="1.7637%" y="1189" width="97.9705%" height="15" fill="rgb(218,111,39)" fg:x="73" fg:w="4055"/><text x="2.0137%" y="1199.50">main</text></g><g><title>std::rt::lang_start_internal (4,055 samples, 97.97%)</title><rect x="1.7637%" y="1173" width="97.9705%" height="15" fill="rgb(224,95,19)" fg:x="73" fg:w="4055"/><text x="2.0137%" y="1183.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (4,055 samples, 97.97%)</title><rect x="1.7637%" y="1157" width="97.9705%" height="15" fill="rgb(234,15,38)" fg:x="73" fg:w="4055"/><text x="2.0137%" y="1167.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,055 samples, 97.97%)</title><rect x="1.7637%" y="1141" width="97.9705%" height="15" fill="rgb(246,56,12)" fg:x="73" fg:w="4055"/><text x="2.0137%" y="1151.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,055 samples, 97.97%)</title><rect x="1.7637%" y="1125" width="97.9705%" height="15" fill="rgb(247,16,17)" fg:x="73" fg:w="4055"/><text x="2.0137%" y="1135.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (4,055 samples, 97.97%)</title><rect x="1.7637%" y="1109" width="97.9705%" height="15" fill="rgb(215,151,11)" fg:x="73" fg:w="4055"/><text x="2.0137%" y="1119.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (4,055 samples, 97.97%)</title><rect x="1.7637%" y="1093" width="97.9705%" height="15" fill="rgb(225,16,24)" fg:x="73" fg:w="4055"/><text x="2.0137%" y="1103.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,055 samples, 97.97%)</title><rect x="1.7637%" y="1077" width="97.9705%" height="15" fill="rgb(217,117,5)" fg:x="73" fg:w="4055"/><text x="2.0137%" y="1087.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,055 samples, 97.97%)</title><rect x="1.7637%" y="1061" width="97.9705%" height="15" fill="rgb(246,187,53)" fg:x="73" fg:w="4055"/><text x="2.0137%" y="1071.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4,055 samples, 97.97%)</title><rect x="1.7637%" y="1045" width="97.9705%" height="15" fill="rgb(241,71,40)" fg:x="73" fg:w="4055"/><text x="2.0137%" y="1055.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (4,055 samples, 97.97%)</title><rect x="1.7637%" y="1029" width="97.9705%" height="15" fill="rgb(231,67,39)" fg:x="73" fg:w="4055"/><text x="2.0137%" y="1039.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,055 samples, 97.97%)</title><rect x="1.7637%" y="1013" width="97.9705%" height="15" fill="rgb(222,120,24)" fg:x="73" fg:w="4055"/><text x="2.0137%" y="1023.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (4,055 samples, 97.97%)</title><rect x="1.7637%" y="997" width="97.9705%" height="15" fill="rgb(248,3,3)" fg:x="73" fg:w="4055"/><text x="2.0137%" y="1007.50">core::ops::function::FnOnce::call_once</text></g><g><title>y2021::main (4,055 samples, 97.97%)</title><rect x="1.7637%" y="981" width="97.9705%" height="15" fill="rgb(228,218,5)" fg:x="73" fg:w="4055"/><text x="2.0137%" y="991.50">y2021::main</text></g><g><title>y2021::d16::main::run (1 samples, 0.02%)</title><rect x="99.7101%" y="965" width="0.0242%" height="15" fill="rgb(212,202,43)" fg:x="4127" fg:w="1"/><text x="99.9601%" y="975.50"></text></g><g><title>y2021::d16::main::p01 (1 samples, 0.02%)</title><rect x="99.7101%" y="949" width="0.0242%" height="15" fill="rgb(235,183,2)" fg:x="4127" fg:w="1"/><text x="99.9601%" y="959.50"></text></g><g><title>y2021::d16::main::get_packet (1 samples, 0.02%)</title><rect x="99.7101%" y="933" width="0.0242%" height="15" fill="rgb(230,165,10)" fg:x="4127" fg:w="1"/><text x="99.9601%" y="943.50"></text></g><g><title>y2021::d16::main::get_operator (1 samples, 0.02%)</title><rect x="99.7101%" y="917" width="0.0242%" height="15" fill="rgb(219,54,40)" fg:x="4127" fg:w="1"/><text x="99.9601%" y="927.50"></text></g><g><title>y2021::d16::main::get_packet (1 samples, 0.02%)</title><rect x="99.7101%" y="901" width="0.0242%" height="15" fill="rgb(244,73,9)" fg:x="4127" fg:w="1"/><text x="99.9601%" y="911.50"></text></g><g><title>y2021::d16::main::get_operator (1 samples, 0.02%)</title><rect x="99.7101%" y="885" width="0.0242%" height="15" fill="rgb(212,32,45)" fg:x="4127" fg:w="1"/><text x="99.9601%" y="895.50"></text></g><g><title>y2021::d16::main::get_packet (1 samples, 0.02%)</title><rect x="99.7101%" y="869" width="0.0242%" height="15" fill="rgb(205,58,31)" fg:x="4127" fg:w="1"/><text x="99.9601%" y="879.50"></text></g><g><title>y2021::d16::bit_stack::BitStack::pop (1 samples, 0.02%)</title><rect x="99.7101%" y="853" width="0.0242%" height="15" fill="rgb(250,120,43)" fg:x="4127" fg:w="1"/><text x="99.9601%" y="863.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="99.7342%" y="1157" width="0.0242%" height="15" fill="rgb(235,13,10)" fg:x="4128" fg:w="1"/><text x="99.9842%" y="1167.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="99.7342%" y="1141" width="0.0242%" height="15" fill="rgb(232,219,31)" fg:x="4128" fg:w="1"/><text x="99.9842%" y="1151.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="99.7342%" y="1125" width="0.0242%" height="15" fill="rgb(218,157,51)" fg:x="4128" fg:w="1"/><text x="99.9842%" y="1135.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="99.7342%" y="1109" width="0.0242%" height="15" fill="rgb(211,91,52)" fg:x="4128" fg:w="1"/><text x="99.9842%" y="1119.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="99.7342%" y="1093" width="0.0242%" height="15" fill="rgb(240,173,1)" fg:x="4128" fg:w="1"/><text x="99.9842%" y="1103.50"></text></g><g><title>do_fault (1 samples, 0.02%)</title><rect x="99.7342%" y="1077" width="0.0242%" height="15" fill="rgb(248,20,47)" fg:x="4128" fg:w="1"/><text x="99.9842%" y="1087.50"></text></g><g><title>filemap_map_pages (1 samples, 0.02%)</title><rect x="99.7342%" y="1061" width="0.0242%" height="15" fill="rgb(217,221,40)" fg:x="4128" fg:w="1"/><text x="99.9842%" y="1071.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.02%)</title><rect x="99.7584%" y="1141" width="0.0242%" height="15" fill="rgb(226,149,51)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="1151.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="99.7584%" y="1125" width="0.0242%" height="15" fill="rgb(252,193,7)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="1135.50"></text></g><g><title>openaux (1 samples, 0.02%)</title><rect x="99.7584%" y="1109" width="0.0242%" height="15" fill="rgb(205,123,0)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="1119.50"></text></g><g><title>_dl_map_object (1 samples, 0.02%)</title><rect x="99.7584%" y="1093" width="0.0242%" height="15" fill="rgb(233,173,25)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="1103.50"></text></g><g><title>open_verify (1 samples, 0.02%)</title><rect x="99.7584%" y="1077" width="0.0242%" height="15" fill="rgb(216,63,32)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="1087.50"></text></g><g><title>__GI___read_nocancel (1 samples, 0.02%)</title><rect x="99.7584%" y="1061" width="0.0242%" height="15" fill="rgb(209,56,45)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.7584%" y="1045" width="0.0242%" height="15" fill="rgb(226,111,49)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="1055.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.7584%" y="1029" width="0.0242%" height="15" fill="rgb(244,181,21)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="1039.50"></text></g><g><title>__x64_sys_read (1 samples, 0.02%)</title><rect x="99.7584%" y="1013" width="0.0242%" height="15" fill="rgb(222,126,15)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="1023.50"></text></g><g><title>ksys_read (1 samples, 0.02%)</title><rect x="99.7584%" y="997" width="0.0242%" height="15" fill="rgb(222,95,17)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="1007.50"></text></g><g><title>vfs_read (1 samples, 0.02%)</title><rect x="99.7584%" y="981" width="0.0242%" height="15" fill="rgb(254,46,5)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="991.50"></text></g><g><title>new_sync_read (1 samples, 0.02%)</title><rect x="99.7584%" y="965" width="0.0242%" height="15" fill="rgb(236,216,35)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="975.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="99.7584%" y="949" width="0.0242%" height="15" fill="rgb(217,187,26)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="959.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="99.7584%" y="933" width="0.0242%" height="15" fill="rgb(207,192,25)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="943.50"></text></g><g><title>generic_file_buffered_read (1 samples, 0.02%)</title><rect x="99.7584%" y="917" width="0.0242%" height="15" fill="rgb(253,135,27)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="927.50"></text></g><g><title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="99.7584%" y="901" width="0.0242%" height="15" fill="rgb(211,122,29)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="911.50"></text></g><g><title>copy_user_generic_string (1 samples, 0.02%)</title><rect x="99.7584%" y="885" width="0.0242%" height="15" fill="rgb(233,162,40)" fg:x="4129" fg:w="1"/><text x="100.0084%" y="895.50"></text></g><g><title>_start (4,058 samples, 98.04%)</title><rect x="1.7637%" y="1221" width="98.0430%" height="15" fill="rgb(222,184,47)" fg:x="73" fg:w="4058"/><text x="2.0137%" y="1231.50">_start</text></g><g><title>_dl_start (3 samples, 0.07%)</title><rect x="99.7342%" y="1205" width="0.0725%" height="15" fill="rgb(249,99,23)" fg:x="4128" fg:w="3"/><text x="99.9842%" y="1215.50"></text></g><g><title>_dl_start_final (3 samples, 0.07%)</title><rect x="99.7342%" y="1189" width="0.0725%" height="15" fill="rgb(214,60,12)" fg:x="4128" fg:w="3"/><text x="99.9842%" y="1199.50"></text></g><g><title>_dl_sysdep_start (3 samples, 0.07%)</title><rect x="99.7342%" y="1173" width="0.0725%" height="15" fill="rgb(250,229,36)" fg:x="4128" fg:w="3"/><text x="99.9842%" y="1183.50"></text></g><g><title>dl_main (2 samples, 0.05%)</title><rect x="99.7584%" y="1157" width="0.0483%" height="15" fill="rgb(232,195,10)" fg:x="4129" fg:w="2"/><text x="100.0084%" y="1167.50"></text></g><g><title>_dl_unload_cache (1 samples, 0.02%)</title><rect x="99.7826%" y="1141" width="0.0242%" height="15" fill="rgb(205,213,31)" fg:x="4130" fg:w="1"/><text x="100.0326%" y="1151.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="99.8067%" y="1189" width="0.0242%" height="15" fill="rgb(237,43,8)" fg:x="4131" fg:w="1"/><text x="100.0567%" y="1199.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.02%)</title><rect x="99.8067%" y="1173" width="0.0242%" height="15" fill="rgb(216,208,3)" fg:x="4131" fg:w="1"/><text x="100.0567%" y="1183.50"></text></g><g><title>bprm_execve (1 samples, 0.02%)</title><rect x="99.8067%" y="1157" width="0.0242%" height="15" fill="rgb(228,179,44)" fg:x="4131" fg:w="1"/><text x="100.0567%" y="1167.50"></text></g><g><title>exec_binprm (1 samples, 0.02%)</title><rect x="99.8067%" y="1141" width="0.0242%" height="15" fill="rgb(230,192,27)" fg:x="4131" fg:w="1"/><text x="100.0567%" y="1151.50"></text></g><g><title>load_elf_binary (1 samples, 0.02%)</title><rect x="99.8067%" y="1125" width="0.0242%" height="15" fill="rgb(251,30,38)" fg:x="4131" fg:w="1"/><text x="100.0567%" y="1135.50"></text></g><g><title>setup_arg_pages (1 samples, 0.02%)</title><rect x="99.8067%" y="1109" width="0.0242%" height="15" fill="rgb(246,55,52)" fg:x="4131" fg:w="1"/><text x="100.0567%" y="1119.50"></text></g><g><title>shift_arg_pages (1 samples, 0.02%)</title><rect x="99.8067%" y="1093" width="0.0242%" height="15" fill="rgb(249,79,26)" fg:x="4131" fg:w="1"/><text x="100.0567%" y="1103.50"></text></g><g><title>move_page_tables (1 samples, 0.02%)</title><rect x="99.8067%" y="1077" width="0.0242%" height="15" fill="rgb(220,202,16)" fg:x="4131" fg:w="1"/><text x="100.0567%" y="1087.50"></text></g><g><title>free_pgtables (1 samples, 0.02%)</title><rect x="99.8309%" y="1109" width="0.0242%" height="15" fill="rgb(250,170,23)" fg:x="4132" fg:w="1"/><text x="100.0809%" y="1119.50"></text></g><g><title>unlink_file_vma (1 samples, 0.02%)</title><rect x="99.8309%" y="1093" width="0.0242%" height="15" fill="rgb(230,7,37)" fg:x="4132" fg:w="1"/><text x="100.0809%" y="1103.50"></text></g><g><title>__remove_shared_vm_struct (1 samples, 0.02%)</title><rect x="99.8309%" y="1077" width="0.0242%" height="15" fill="rgb(213,71,1)" fg:x="4132" fg:w="1"/><text x="100.0809%" y="1087.50"></text></g><g><title>vma_interval_tree_remove (1 samples, 0.02%)</title><rect x="99.8309%" y="1061" width="0.0242%" height="15" fill="rgb(227,87,39)" fg:x="4132" fg:w="1"/><text x="100.0809%" y="1071.50"></text></g><g><title>vma_interval_tree_augment_rotate (1 samples, 0.02%)</title><rect x="99.8309%" y="1045" width="0.0242%" height="15" fill="rgb(210,41,29)" fg:x="4132" fg:w="1"/><text x="100.0809%" y="1055.50"></text></g><g><title>tlb_finish_mmu (3 samples, 0.07%)</title><rect x="99.8550%" y="1109" width="0.0725%" height="15" fill="rgb(206,191,31)" fg:x="4133" fg:w="3"/><text x="100.1050%" y="1119.50"></text></g><g><title>tlb_flush_mmu (3 samples, 0.07%)</title><rect x="99.8550%" y="1093" width="0.0725%" height="15" fill="rgb(247,75,54)" fg:x="4133" fg:w="3"/><text x="100.1050%" y="1103.50"></text></g><g><title>free_pages_and_swap_cache (3 samples, 0.07%)</title><rect x="99.8550%" y="1077" width="0.0725%" height="15" fill="rgb(208,54,50)" fg:x="4133" fg:w="3"/><text x="100.1050%" y="1087.50"></text></g><g><title>release_pages (3 samples, 0.07%)</title><rect x="99.8550%" y="1061" width="0.0725%" height="15" fill="rgb(214,90,37)" fg:x="4133" fg:w="3"/><text x="100.1050%" y="1071.50"></text></g><g><title>free_unref_page_list (1 samples, 0.02%)</title><rect x="99.9034%" y="1045" width="0.0242%" height="15" fill="rgb(220,132,6)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="1055.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="99.9034%" y="1029" width="0.0242%" height="15" fill="rgb(213,167,7)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="1039.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="99.9034%" y="1013" width="0.0242%" height="15" fill="rgb(243,36,27)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="1023.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="99.9034%" y="997" width="0.0242%" height="15" fill="rgb(235,147,12)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="1007.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="99.9034%" y="981" width="0.0242%" height="15" fill="rgb(212,198,44)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="991.50"></text></g><g><title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="99.9034%" y="965" width="0.0242%" height="15" fill="rgb(218,68,50)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="975.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="99.9034%" y="949" width="0.0242%" height="15" fill="rgb(224,79,48)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="959.50"></text></g><g><title>asm_sysvec_irq_work (1 samples, 0.02%)</title><rect x="99.9034%" y="933" width="0.0242%" height="15" fill="rgb(213,191,50)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="943.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.02%)</title><rect x="99.9034%" y="917" width="0.0242%" height="15" fill="rgb(254,146,10)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="927.50"></text></g><g><title>__sysvec_irq_work (1 samples, 0.02%)</title><rect x="99.9034%" y="901" width="0.0242%" height="15" fill="rgb(215,175,11)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="911.50"></text></g><g><title>irq_work_run (1 samples, 0.02%)</title><rect x="99.9034%" y="885" width="0.0242%" height="15" fill="rgb(207,49,7)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="895.50"></text></g><g><title>irq_work_run_list (1 samples, 0.02%)</title><rect x="99.9034%" y="869" width="0.0242%" height="15" fill="rgb(234,144,29)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="879.50"></text></g><g><title>irq_work_single (1 samples, 0.02%)</title><rect x="99.9034%" y="853" width="0.0242%" height="15" fill="rgb(213,222,48)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="863.50"></text></g><g><title>dbs_irq_work (1 samples, 0.02%)</title><rect x="99.9034%" y="837" width="0.0242%" height="15" fill="rgb(222,8,6)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="847.50"></text></g><g><title>queue_work_on (1 samples, 0.02%)</title><rect x="99.9034%" y="821" width="0.0242%" height="15" fill="rgb(221,114,49)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="831.50"></text></g><g><title>__queue_work (1 samples, 0.02%)</title><rect x="99.9034%" y="805" width="0.0242%" height="15" fill="rgb(250,140,42)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="815.50"></text></g><g><title>insert_work (1 samples, 0.02%)</title><rect x="99.9034%" y="789" width="0.0242%" height="15" fill="rgb(250,150,27)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="799.50"></text></g><g><title>wake_up_process (1 samples, 0.02%)</title><rect x="99.9034%" y="773" width="0.0242%" height="15" fill="rgb(252,159,3)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="783.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="99.9034%" y="757" width="0.0242%" height="15" fill="rgb(241,182,3)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="767.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="99.9034%" y="741" width="0.0242%" height="15" fill="rgb(236,3,9)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="751.50"></text></g><g><title>ttwu_do_wakeup (1 samples, 0.02%)</title><rect x="99.9034%" y="725" width="0.0242%" height="15" fill="rgb(223,227,51)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="735.50"></text></g><g><title>check_preempt_curr (1 samples, 0.02%)</title><rect x="99.9034%" y="709" width="0.0242%" height="15" fill="rgb(232,133,30)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="719.50"></text></g><g><title>wakeup_preempt_entity.isra.0 (1 samples, 0.02%)</title><rect x="99.9034%" y="693" width="0.0242%" height="15" fill="rgb(209,93,27)" fg:x="4135" fg:w="1"/><text x="100.1534%" y="703.50"></text></g><g><title>all (4,139 samples, 100%)</title><rect x="0.0000%" y="1253" width="100.0000%" height="15" fill="rgb(208,108,34)" fg:x="0" fg:w="4139"/><text x="0.2500%" y="1263.50"></text></g><g><title>y2021 (4,131 samples, 99.81%)</title><rect x="0.1933%" y="1237" width="99.8067%" height="15" fill="rgb(215,189,13)" fg:x="8" fg:w="4131"/><text x="0.4433%" y="1247.50">y2021</text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.19%)</title><rect x="99.8067%" y="1221" width="0.1933%" height="15" fill="rgb(206,88,23)" fg:x="4131" fg:w="8"/><text x="100.0567%" y="1231.50"></text></g><g><title>do_syscall_64 (8 samples, 0.19%)</title><rect x="99.8067%" y="1205" width="0.1933%" height="15" fill="rgb(240,173,0)" fg:x="4131" fg:w="8"/><text x="100.0567%" y="1215.50"></text></g><g><title>__x64_sys_exit_group (7 samples, 0.17%)</title><rect x="99.8309%" y="1189" width="0.1691%" height="15" fill="rgb(223,106,52)" fg:x="4132" fg:w="7"/><text x="100.0809%" y="1199.50"></text></g><g><title>do_group_exit (7 samples, 0.17%)</title><rect x="99.8309%" y="1173" width="0.1691%" height="15" fill="rgb(206,130,16)" fg:x="4132" fg:w="7"/><text x="100.0809%" y="1183.50"></text></g><g><title>do_exit (7 samples, 0.17%)</title><rect x="99.8309%" y="1157" width="0.1691%" height="15" fill="rgb(220,54,25)" fg:x="4132" fg:w="7"/><text x="100.0809%" y="1167.50"></text></g><g><title>mmput (7 samples, 0.17%)</title><rect x="99.8309%" y="1141" width="0.1691%" height="15" fill="rgb(210,4,38)" fg:x="4132" fg:w="7"/><text x="100.0809%" y="1151.50"></text></g><g><title>exit_mmap (7 samples, 0.17%)</title><rect x="99.8309%" y="1125" width="0.1691%" height="15" fill="rgb(238,94,39)" fg:x="4132" fg:w="7"/><text x="100.0809%" y="1135.50"></text></g><g><title>unmap_vmas (3 samples, 0.07%)</title><rect x="99.9275%" y="1109" width="0.0725%" height="15" fill="rgb(234,124,34)" fg:x="4136" fg:w="3"/><text x="100.1775%" y="1119.50"></text></g><g><title>unmap_single_vma (3 samples, 0.07%)</title><rect x="99.9275%" y="1093" width="0.0725%" height="15" fill="rgb(221,91,40)" fg:x="4136" fg:w="3"/><text x="100.1775%" y="1103.50"></text></g><g><title>unmap_page_range (3 samples, 0.07%)</title><rect x="99.9275%" y="1077" width="0.0725%" height="15" fill="rgb(246,53,28)" fg:x="4136" fg:w="3"/><text x="100.1775%" y="1087.50"></text></g><g><title>zap_pte_range.isra.0 (3 samples, 0.07%)</title><rect x="99.9275%" y="1061" width="0.0725%" height="15" fill="rgb(229,109,7)" fg:x="4136" fg:w="3"/><text x="100.1775%" y="1071.50"></text></g></svg></svg>