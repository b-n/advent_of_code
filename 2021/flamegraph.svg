<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1110" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1093.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1093.00"> </text><svg id="frames" x="10" width="1180" total_samples="14385"><g><title>perf (8 samples, 0.06%)</title><rect x="0.0000%" y="1045" width="0.0556%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1055.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.06%)</title><rect x="0.0000%" y="1029" width="0.0556%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1039.50"></text></g><g><title>do_syscall_64 (8 samples, 0.06%)</title><rect x="0.0000%" y="1013" width="0.0556%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1023.50"></text></g><g><title>__x64_sys_execve (8 samples, 0.06%)</title><rect x="0.0000%" y="997" width="0.0556%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1007.50"></text></g><g><title>do_execveat_common.isra.0 (8 samples, 0.06%)</title><rect x="0.0000%" y="981" width="0.0556%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="8"/><text x="0.2500%" y="991.50"></text></g><g><title>bprm_execve (8 samples, 0.06%)</title><rect x="0.0000%" y="965" width="0.0556%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="8"/><text x="0.2500%" y="975.50"></text></g><g><title>exec_binprm (8 samples, 0.06%)</title><rect x="0.0000%" y="949" width="0.0556%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="8"/><text x="0.2500%" y="959.50"></text></g><g><title>load_elf_binary (8 samples, 0.06%)</title><rect x="0.0000%" y="933" width="0.0556%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="8"/><text x="0.2500%" y="943.50"></text></g><g><title>begin_new_exec (8 samples, 0.06%)</title><rect x="0.0000%" y="917" width="0.0556%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="8"/><text x="0.2500%" y="927.50"></text></g><g><title>__set_task_comm (8 samples, 0.06%)</title><rect x="0.0000%" y="901" width="0.0556%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="8"/><text x="0.2500%" y="911.50"></text></g><g><title>perf_event_comm (8 samples, 0.06%)</title><rect x="0.0000%" y="885" width="0.0556%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="8"/><text x="0.2500%" y="895.50"></text></g><g><title>perf_iterate_sb (8 samples, 0.06%)</title><rect x="0.0000%" y="869" width="0.0556%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="8"/><text x="0.2500%" y="879.50"></text></g><g><title>perf_event_comm_output (8 samples, 0.06%)</title><rect x="0.0000%" y="853" width="0.0556%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="8"/><text x="0.2500%" y="863.50"></text></g><g><title>y2021::d12::main2::p01 (4 samples, 0.03%)</title><rect x="0.0556%" y="757" width="0.0278%" height="15" fill="rgb(206,188,39)" fg:x="8" fg:w="4"/><text x="0.3056%" y="767.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.03%)</title><rect x="0.0556%" y="741" width="0.0278%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="4"/><text x="0.3056%" y="751.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.03%)</title><rect x="0.0556%" y="725" width="0.0278%" height="15" fill="rgb(231,73,38)" fg:x="8" fg:w="4"/><text x="0.3056%" y="735.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.03%)</title><rect x="0.0556%" y="709" width="0.0278%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="4"/><text x="0.3056%" y="719.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.03%)</title><rect x="0.0556%" y="693" width="0.0278%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="4"/><text x="0.3056%" y="703.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.03%)</title><rect x="0.0556%" y="677" width="0.0278%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="4"/><text x="0.3056%" y="687.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.03%)</title><rect x="0.0556%" y="661" width="0.0278%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="4"/><text x="0.3056%" y="671.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.03%)</title><rect x="0.0556%" y="645" width="0.0278%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="4"/><text x="0.3056%" y="655.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.03%)</title><rect x="0.0556%" y="629" width="0.0278%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="4"/><text x="0.3056%" y="639.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.03%)</title><rect x="0.0556%" y="613" width="0.0278%" height="15" fill="rgb(221,5,38)" fg:x="8" fg:w="4"/><text x="0.3056%" y="623.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.03%)</title><rect x="0.0556%" y="597" width="0.0278%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="4"/><text x="0.3056%" y="607.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.03%)</title><rect x="0.0556%" y="581" width="0.0278%" height="15" fill="rgb(241,131,45)" fg:x="8" fg:w="4"/><text x="0.3056%" y="591.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.03%)</title><rect x="0.0556%" y="565" width="0.0278%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="4"/><text x="0.3056%" y="575.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.02%)</title><rect x="0.0626%" y="549" width="0.0209%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="3"/><text x="0.3126%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="0.0626%" y="533" width="0.0209%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="3"/><text x="0.3126%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.02%)</title><rect x="0.0626%" y="517" width="0.0209%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="3"/><text x="0.3126%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="0.0626%" y="501" width="0.0209%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="3"/><text x="0.3126%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.02%)</title><rect x="0.0626%" y="485" width="0.0209%" height="15" fill="rgb(209,103,24)" fg:x="9" fg:w="3"/><text x="0.3126%" y="495.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3 samples, 0.02%)</title><rect x="0.0626%" y="469" width="0.0209%" height="15" fill="rgb(229,88,8)" fg:x="9" fg:w="3"/><text x="0.3126%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.02%)</title><rect x="0.0626%" y="453" width="0.0209%" height="15" fill="rgb(213,181,19)" fg:x="9" fg:w="3"/><text x="0.3126%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.02%)</title><rect x="0.0626%" y="437" width="0.0209%" height="15" fill="rgb(254,191,54)" fg:x="9" fg:w="3"/><text x="0.3126%" y="447.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (3 samples, 0.02%)</title><rect x="0.0626%" y="421" width="0.0209%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="3"/><text x="0.3126%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned (3 samples, 0.02%)</title><rect x="0.1460%" y="245" width="0.0209%" height="15" fill="rgb(233,36,39)" fg:x="21" fg:w="3"/><text x="0.3960%" y="255.50"></text></g><g><title>alloc::fmt::format (14 samples, 0.10%)</title><rect x="0.0834%" y="549" width="0.0973%" height="15" fill="rgb(226,3,54)" fg:x="12" fg:w="14"/><text x="0.3334%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (14 samples, 0.10%)</title><rect x="0.0834%" y="533" width="0.0973%" height="15" fill="rgb(245,192,40)" fg:x="12" fg:w="14"/><text x="0.3334%" y="543.50"></text></g><g><title>core::fmt::write (14 samples, 0.10%)</title><rect x="0.0834%" y="517" width="0.0973%" height="15" fill="rgb(238,167,29)" fg:x="12" fg:w="14"/><text x="0.3334%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (14 samples, 0.10%)</title><rect x="0.0834%" y="501" width="0.0973%" height="15" fill="rgb(232,182,51)" fg:x="12" fg:w="14"/><text x="0.3334%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14 samples, 0.10%)</title><rect x="0.0834%" y="485" width="0.0973%" height="15" fill="rgb(231,60,39)" fg:x="12" fg:w="14"/><text x="0.3334%" y="495.50"></text></g><g><title>alloc::string::String::push_str (14 samples, 0.10%)</title><rect x="0.0834%" y="469" width="0.0973%" height="15" fill="rgb(208,69,12)" fg:x="12" fg:w="14"/><text x="0.3334%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.10%)</title><rect x="0.0834%" y="453" width="0.0973%" height="15" fill="rgb(235,93,37)" fg:x="12" fg:w="14"/><text x="0.3334%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 0.10%)</title><rect x="0.0834%" y="437" width="0.0973%" height="15" fill="rgb(213,116,39)" fg:x="12" fg:w="14"/><text x="0.3334%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (14 samples, 0.10%)</title><rect x="0.0834%" y="421" width="0.0973%" height="15" fill="rgb(222,207,29)" fg:x="12" fg:w="14"/><text x="0.3334%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.10%)</title><rect x="0.0834%" y="405" width="0.0973%" height="15" fill="rgb(206,96,30)" fg:x="12" fg:w="14"/><text x="0.3334%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.10%)</title><rect x="0.0834%" y="389" width="0.0973%" height="15" fill="rgb(218,138,4)" fg:x="12" fg:w="14"/><text x="0.3334%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.10%)</title><rect x="0.0834%" y="373" width="0.0973%" height="15" fill="rgb(250,191,14)" fg:x="12" fg:w="14"/><text x="0.3334%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.10%)</title><rect x="0.0834%" y="357" width="0.0973%" height="15" fill="rgb(239,60,40)" fg:x="12" fg:w="14"/><text x="0.3334%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.10%)</title><rect x="0.0834%" y="341" width="0.0973%" height="15" fill="rgb(206,27,48)" fg:x="12" fg:w="14"/><text x="0.3334%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.10%)</title><rect x="0.0834%" y="325" width="0.0973%" height="15" fill="rgb(225,35,8)" fg:x="12" fg:w="14"/><text x="0.3334%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.10%)</title><rect x="0.0834%" y="309" width="0.0973%" height="15" fill="rgb(250,213,24)" fg:x="12" fg:w="14"/><text x="0.3334%" y="319.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.10%)</title><rect x="0.0834%" y="293" width="0.0973%" height="15" fill="rgb(247,123,22)" fg:x="12" fg:w="14"/><text x="0.3334%" y="303.50"></text></g><g><title>__GI___libc_realloc (14 samples, 0.10%)</title><rect x="0.0834%" y="277" width="0.0973%" height="15" fill="rgb(231,138,38)" fg:x="12" fg:w="14"/><text x="0.3334%" y="287.50"></text></g><g><title>_int_realloc (12 samples, 0.08%)</title><rect x="0.0973%" y="261" width="0.0834%" height="15" fill="rgb(231,145,46)" fg:x="14" fg:w="12"/><text x="0.3473%" y="271.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="0.1668%" y="245" width="0.0139%" height="15" fill="rgb(251,118,11)" fg:x="24" fg:w="2"/><text x="0.4168%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="0.2155%" y="405" width="0.0139%" height="15" fill="rgb(217,147,25)" fg:x="31" fg:w="2"/><text x="0.4655%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="0.2155%" y="389" width="0.0139%" height="15" fill="rgb(247,81,37)" fg:x="31" fg:w="2"/><text x="0.4655%" y="399.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.01%)</title><rect x="0.2155%" y="373" width="0.0139%" height="15" fill="rgb(209,12,38)" fg:x="31" fg:w="2"/><text x="0.4655%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="0.2155%" y="357" width="0.0139%" height="15" fill="rgb(227,1,9)" fg:x="31" fg:w="2"/><text x="0.4655%" y="367.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.01%)</title><rect x="0.2155%" y="341" width="0.0139%" height="15" fill="rgb(248,47,43)" fg:x="31" fg:w="2"/><text x="0.4655%" y="351.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.01%)</title><rect x="0.2155%" y="325" width="0.0139%" height="15" fill="rgb(221,10,30)" fg:x="31" fg:w="2"/><text x="0.4655%" y="335.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.01%)</title><rect x="0.2155%" y="309" width="0.0139%" height="15" fill="rgb(210,229,1)" fg:x="31" fg:w="2"/><text x="0.4655%" y="319.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="0.2294%" y="373" width="0.0209%" height="15" fill="rgb(222,148,37)" fg:x="33" fg:w="3"/><text x="0.4794%" y="383.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.02%)</title><rect x="0.2294%" y="357" width="0.0209%" height="15" fill="rgb(234,67,33)" fg:x="33" fg:w="3"/><text x="0.4794%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.03%)</title><rect x="0.2294%" y="405" width="0.0278%" height="15" fill="rgb(247,98,35)" fg:x="33" fg:w="4"/><text x="0.4794%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.03%)</title><rect x="0.2294%" y="389" width="0.0278%" height="15" fill="rgb(247,138,52)" fg:x="33" fg:w="4"/><text x="0.4794%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="0.4519%" y="309" width="0.0139%" height="15" fill="rgb(213,79,30)" fg:x="65" fg:w="2"/><text x="0.7019%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (2 samples, 0.01%)</title><rect x="0.4519%" y="293" width="0.0139%" height="15" fill="rgb(246,177,23)" fg:x="65" fg:w="2"/><text x="0.7019%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (2 samples, 0.01%)</title><rect x="0.4519%" y="277" width="0.0139%" height="15" fill="rgb(230,62,27)" fg:x="65" fg:w="2"/><text x="0.7019%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.03%)</title><rect x="0.4658%" y="309" width="0.0278%" height="15" fill="rgb(216,154,8)" fg:x="67" fg:w="4"/><text x="0.7158%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.03%)</title><rect x="0.4658%" y="293" width="0.0278%" height="15" fill="rgb(244,35,45)" fg:x="67" fg:w="4"/><text x="0.7158%" y="303.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.01%)</title><rect x="0.4797%" y="277" width="0.0139%" height="15" fill="rgb(251,115,12)" fg:x="69" fg:w="2"/><text x="0.7297%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.01%)</title><rect x="0.4797%" y="261" width="0.0139%" height="15" fill="rgb(240,54,50)" fg:x="69" fg:w="2"/><text x="0.7297%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (41 samples, 0.29%)</title><rect x="0.2572%" y="405" width="0.2850%" height="15" fill="rgb(233,84,52)" fg:x="37" fg:w="41"/><text x="0.5072%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (27 samples, 0.19%)</title><rect x="0.3545%" y="389" width="0.1877%" height="15" fill="rgb(207,117,47)" fg:x="51" fg:w="27"/><text x="0.6045%" y="399.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.19%)</title><rect x="0.3545%" y="373" width="0.1877%" height="15" fill="rgb(249,43,39)" fg:x="51" fg:w="27"/><text x="0.6045%" y="383.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (27 samples, 0.19%)</title><rect x="0.3545%" y="357" width="0.1877%" height="15" fill="rgb(209,38,44)" fg:x="51" fg:w="27"/><text x="0.6045%" y="367.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (27 samples, 0.19%)</title><rect x="0.3545%" y="341" width="0.1877%" height="15" fill="rgb(236,212,23)" fg:x="51" fg:w="27"/><text x="0.6045%" y="351.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (25 samples, 0.17%)</title><rect x="0.3684%" y="325" width="0.1738%" height="15" fill="rgb(242,79,21)" fg:x="53" fg:w="25"/><text x="0.6184%" y="335.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (7 samples, 0.05%)</title><rect x="0.4936%" y="309" width="0.0487%" height="15" fill="rgb(211,96,35)" fg:x="71" fg:w="7"/><text x="0.7436%" y="319.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (11 samples, 0.08%)</title><rect x="0.5978%" y="325" width="0.0765%" height="15" fill="rgb(253,215,40)" fg:x="86" fg:w="11"/><text x="0.8478%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (11 samples, 0.08%)</title><rect x="0.5978%" y="309" width="0.0765%" height="15" fill="rgb(211,81,21)" fg:x="86" fg:w="11"/><text x="0.8478%" y="319.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.03%)</title><rect x="0.6465%" y="293" width="0.0278%" height="15" fill="rgb(208,190,38)" fg:x="93" fg:w="4"/><text x="0.8965%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (72 samples, 0.50%)</title><rect x="0.2086%" y="453" width="0.5005%" height="15" fill="rgb(235,213,38)" fg:x="30" fg:w="72"/><text x="0.4586%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (72 samples, 0.50%)</title><rect x="0.2086%" y="437" width="0.5005%" height="15" fill="rgb(237,122,38)" fg:x="30" fg:w="72"/><text x="0.4586%" y="447.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (72 samples, 0.50%)</title><rect x="0.2086%" y="421" width="0.5005%" height="15" fill="rgb(244,218,35)" fg:x="30" fg:w="72"/><text x="0.4586%" y="431.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (24 samples, 0.17%)</title><rect x="0.5422%" y="405" width="0.1668%" height="15" fill="rgb(240,68,47)" fg:x="78" fg:w="24"/><text x="0.7922%" y="415.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (24 samples, 0.17%)</title><rect x="0.5422%" y="389" width="0.1668%" height="15" fill="rgb(210,16,53)" fg:x="78" fg:w="24"/><text x="0.7922%" y="399.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (24 samples, 0.17%)</title><rect x="0.5422%" y="373" width="0.1668%" height="15" fill="rgb(235,124,12)" fg:x="78" fg:w="24"/><text x="0.7922%" y="383.50"></text></g><g><title>core::str::pattern::StrSearcher::new (24 samples, 0.17%)</title><rect x="0.5422%" y="357" width="0.1668%" height="15" fill="rgb(224,169,11)" fg:x="78" fg:w="24"/><text x="0.7922%" y="367.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (17 samples, 0.12%)</title><rect x="0.5909%" y="341" width="0.1182%" height="15" fill="rgb(250,166,2)" fg:x="85" fg:w="17"/><text x="0.8409%" y="351.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (3 samples, 0.02%)</title><rect x="0.6882%" y="325" width="0.0209%" height="15" fill="rgb(242,216,29)" fg:x="99" fg:w="3"/><text x="0.9382%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 0.52%)</title><rect x="0.2016%" y="533" width="0.5214%" height="15" fill="rgb(230,116,27)" fg:x="29" fg:w="75"/><text x="0.4516%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (75 samples, 0.52%)</title><rect x="0.2016%" y="517" width="0.5214%" height="15" fill="rgb(228,99,48)" fg:x="29" fg:w="75"/><text x="0.4516%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (75 samples, 0.52%)</title><rect x="0.2016%" y="501" width="0.5214%" height="15" fill="rgb(253,11,6)" fg:x="29" fg:w="75"/><text x="0.4516%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (75 samples, 0.52%)</title><rect x="0.2016%" y="485" width="0.5214%" height="15" fill="rgb(247,143,39)" fg:x="29" fg:w="75"/><text x="0.4516%" y="495.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (74 samples, 0.51%)</title><rect x="0.2086%" y="469" width="0.5144%" height="15" fill="rgb(236,97,10)" fg:x="30" fg:w="74"/><text x="0.4586%" y="479.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.01%)</title><rect x="0.7091%" y="453" width="0.0139%" height="15" fill="rgb(233,208,19)" fg:x="102" fg:w="2"/><text x="0.9591%" y="463.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.02%)</title><rect x="0.7230%" y="533" width="0.0209%" height="15" fill="rgb(216,164,2)" fg:x="104" fg:w="3"/><text x="0.9730%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.02%)</title><rect x="0.7230%" y="517" width="0.0209%" height="15" fill="rgb(220,129,5)" fg:x="104" fg:w="3"/><text x="0.9730%" y="527.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="0.7508%" y="437" width="0.0139%" height="15" fill="rgb(242,17,10)" fg:x="108" fg:w="2"/><text x="1.0008%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.03%)</title><rect x="0.7508%" y="533" width="0.0278%" height="15" fill="rgb(242,107,0)" fg:x="108" fg:w="4"/><text x="1.0008%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.03%)</title><rect x="0.7508%" y="517" width="0.0278%" height="15" fill="rgb(251,28,31)" fg:x="108" fg:w="4"/><text x="1.0008%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.03%)</title><rect x="0.7508%" y="501" width="0.0278%" height="15" fill="rgb(233,223,10)" fg:x="108" fg:w="4"/><text x="1.0008%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="0.7508%" y="485" width="0.0278%" height="15" fill="rgb(215,21,27)" fg:x="108" fg:w="4"/><text x="1.0008%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.03%)</title><rect x="0.7508%" y="469" width="0.0278%" height="15" fill="rgb(232,23,21)" fg:x="108" fg:w="4"/><text x="1.0008%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.03%)</title><rect x="0.7508%" y="453" width="0.0278%" height="15" fill="rgb(244,5,23)" fg:x="108" fg:w="4"/><text x="1.0008%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="0.7786%" y="469" width="0.0278%" height="15" fill="rgb(226,81,46)" fg:x="112" fg:w="4"/><text x="1.0286%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="0.7786%" y="453" width="0.0278%" height="15" fill="rgb(247,70,30)" fg:x="112" fg:w="4"/><text x="1.0286%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="0.7786%" y="437" width="0.0278%" height="15" fill="rgb(212,68,19)" fg:x="112" fg:w="4"/><text x="1.0286%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.04%)</title><rect x="0.7786%" y="485" width="0.0417%" height="15" fill="rgb(240,187,13)" fg:x="112" fg:w="6"/><text x="1.0286%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.01%)</title><rect x="0.8064%" y="469" width="0.0139%" height="15" fill="rgb(223,113,26)" fg:x="116" fg:w="2"/><text x="1.0564%" y="479.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.01%)</title><rect x="0.8064%" y="453" width="0.0139%" height="15" fill="rgb(206,192,2)" fg:x="116" fg:w="2"/><text x="1.0564%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="0.8064%" y="437" width="0.0139%" height="15" fill="rgb(241,108,4)" fg:x="116" fg:w="2"/><text x="1.0564%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="0.8064%" y="421" width="0.0139%" height="15" fill="rgb(247,173,49)" fg:x="116" fg:w="2"/><text x="1.0564%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="0.8064%" y="405" width="0.0139%" height="15" fill="rgb(224,114,35)" fg:x="116" fg:w="2"/><text x="1.0564%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.06%)</title><rect x="0.7786%" y="533" width="0.0626%" height="15" fill="rgb(245,159,27)" fg:x="112" fg:w="9"/><text x="1.0286%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.06%)</title><rect x="0.7786%" y="517" width="0.0626%" height="15" fill="rgb(245,172,44)" fg:x="112" fg:w="9"/><text x="1.0286%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.06%)</title><rect x="0.7786%" y="501" width="0.0626%" height="15" fill="rgb(236,23,11)" fg:x="112" fg:w="9"/><text x="1.0286%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.02%)</title><rect x="0.8203%" y="485" width="0.0209%" height="15" fill="rgb(205,117,38)" fg:x="118" fg:w="3"/><text x="1.0703%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="0.8203%" y="469" width="0.0209%" height="15" fill="rgb(237,72,25)" fg:x="118" fg:w="3"/><text x="1.0703%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.03%)</title><rect x="0.8690%" y="357" width="0.0278%" height="15" fill="rgb(244,70,9)" fg:x="125" fg:w="4"/><text x="1.1190%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.05%)</title><rect x="0.8551%" y="373" width="0.0487%" height="15" fill="rgb(217,125,39)" fg:x="123" fg:w="7"/><text x="1.1051%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.09%)</title><rect x="0.8412%" y="421" width="0.0904%" height="15" fill="rgb(235,36,10)" fg:x="121" fg:w="13"/><text x="1.0912%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.09%)</title><rect x="0.8412%" y="405" width="0.0904%" height="15" fill="rgb(251,123,47)" fg:x="121" fg:w="13"/><text x="1.0912%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.09%)</title><rect x="0.8412%" y="389" width="0.0904%" height="15" fill="rgb(221,13,13)" fg:x="121" fg:w="13"/><text x="1.0912%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.03%)</title><rect x="0.9037%" y="373" width="0.0278%" height="15" fill="rgb(238,131,9)" fg:x="130" fg:w="4"/><text x="1.1537%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="0.9176%" y="357" width="0.0139%" height="15" fill="rgb(211,50,8)" fg:x="132" fg:w="2"/><text x="1.1676%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (15 samples, 0.10%)</title><rect x="0.8412%" y="453" width="0.1043%" height="15" fill="rgb(245,182,24)" fg:x="121" fg:w="15"/><text x="1.0912%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (15 samples, 0.10%)</title><rect x="0.8412%" y="437" width="0.1043%" height="15" fill="rgb(242,14,37)" fg:x="121" fg:w="15"/><text x="1.0912%" y="447.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.01%)</title><rect x="0.9315%" y="421" width="0.0139%" height="15" fill="rgb(246,228,12)" fg:x="134" fg:w="2"/><text x="1.1815%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="0.9315%" y="405" width="0.0139%" height="15" fill="rgb(213,55,15)" fg:x="134" fg:w="2"/><text x="1.1815%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="0.9315%" y="389" width="0.0139%" height="15" fill="rgb(209,9,3)" fg:x="134" fg:w="2"/><text x="1.1815%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="0.9315%" y="373" width="0.0139%" height="15" fill="rgb(230,59,30)" fg:x="134" fg:w="2"/><text x="1.1815%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="0.9524%" y="405" width="0.0139%" height="15" fill="rgb(209,121,21)" fg:x="137" fg:w="2"/><text x="1.2024%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="1.0080%" y="389" width="0.0139%" height="15" fill="rgb(220,109,13)" fg:x="145" fg:w="2"/><text x="1.2580%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (27 samples, 0.19%)</title><rect x="0.8412%" y="469" width="0.1877%" height="15" fill="rgb(232,18,1)" fg:x="121" fg:w="27"/><text x="1.0912%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.08%)</title><rect x="0.9454%" y="453" width="0.0834%" height="15" fill="rgb(215,41,42)" fg:x="136" fg:w="12"/><text x="1.1954%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.08%)</title><rect x="0.9454%" y="437" width="0.0834%" height="15" fill="rgb(224,123,36)" fg:x="136" fg:w="12"/><text x="1.1954%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.08%)</title><rect x="0.9454%" y="421" width="0.0834%" height="15" fill="rgb(240,125,3)" fg:x="136" fg:w="12"/><text x="1.1954%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.06%)</title><rect x="0.9663%" y="405" width="0.0626%" height="15" fill="rgb(205,98,50)" fg:x="139" fg:w="9"/><text x="1.2163%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="1.0288%" y="437" width="0.0209%" height="15" fill="rgb(205,185,37)" fg:x="148" fg:w="3"/><text x="1.2788%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="1.0288%" y="421" width="0.0209%" height="15" fill="rgb(238,207,15)" fg:x="148" fg:w="3"/><text x="1.2788%" y="431.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (32 samples, 0.22%)</title><rect x="0.8412%" y="533" width="0.2225%" height="15" fill="rgb(213,199,42)" fg:x="121" fg:w="32"/><text x="1.0912%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (32 samples, 0.22%)</title><rect x="0.8412%" y="517" width="0.2225%" height="15" fill="rgb(235,201,11)" fg:x="121" fg:w="32"/><text x="1.0912%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (32 samples, 0.22%)</title><rect x="0.8412%" y="501" width="0.2225%" height="15" fill="rgb(207,46,11)" fg:x="121" fg:w="32"/><text x="1.0912%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (32 samples, 0.22%)</title><rect x="0.8412%" y="485" width="0.2225%" height="15" fill="rgb(241,35,35)" fg:x="121" fg:w="32"/><text x="1.0912%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.03%)</title><rect x="1.0288%" y="469" width="0.0348%" height="15" fill="rgb(243,32,47)" fg:x="148" fg:w="5"/><text x="1.2788%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.03%)</title><rect x="1.0288%" y="453" width="0.0348%" height="15" fill="rgb(247,202,23)" fg:x="148" fg:w="5"/><text x="1.2788%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.01%)</title><rect x="1.0497%" y="437" width="0.0139%" height="15" fill="rgb(219,102,11)" fg:x="151" fg:w="2"/><text x="1.2997%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.01%)</title><rect x="1.0497%" y="421" width="0.0139%" height="15" fill="rgb(243,110,44)" fg:x="151" fg:w="2"/><text x="1.2997%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.01%)</title><rect x="1.0497%" y="405" width="0.0139%" height="15" fill="rgb(222,74,54)" fg:x="151" fg:w="2"/><text x="1.2997%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.01%)</title><rect x="1.0497%" y="389" width="0.0139%" height="15" fill="rgb(216,99,12)" fg:x="151" fg:w="2"/><text x="1.2997%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.01%)</title><rect x="1.0497%" y="373" width="0.0139%" height="15" fill="rgb(226,22,26)" fg:x="151" fg:w="2"/><text x="1.2997%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.01%)</title><rect x="1.0497%" y="357" width="0.0139%" height="15" fill="rgb(217,163,10)" fg:x="151" fg:w="2"/><text x="1.2997%" y="367.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.01%)</title><rect x="1.0497%" y="341" width="0.0139%" height="15" fill="rgb(213,25,53)" fg:x="151" fg:w="2"/><text x="1.2997%" y="351.50"></text></g><g><title>__libc_start_main (148 samples, 1.03%)</title><rect x="0.0556%" y="1013" width="1.0288%" height="15" fill="rgb(252,105,26)" fg:x="8" fg:w="148"/><text x="0.3056%" y="1023.50"></text></g><g><title>main (148 samples, 1.03%)</title><rect x="0.0556%" y="997" width="1.0288%" height="15" fill="rgb(220,39,43)" fg:x="8" fg:w="148"/><text x="0.3056%" y="1007.50"></text></g><g><title>std::rt::lang_start_internal (148 samples, 1.03%)</title><rect x="0.0556%" y="981" width="1.0288%" height="15" fill="rgb(229,68,48)" fg:x="8" fg:w="148"/><text x="0.3056%" y="991.50"></text></g><g><title>std::panic::catch_unwind (148 samples, 1.03%)</title><rect x="0.0556%" y="965" width="1.0288%" height="15" fill="rgb(252,8,32)" fg:x="8" fg:w="148"/><text x="0.3056%" y="975.50"></text></g><g><title>std::panicking::try (148 samples, 1.03%)</title><rect x="0.0556%" y="949" width="1.0288%" height="15" fill="rgb(223,20,43)" fg:x="8" fg:w="148"/><text x="0.3056%" y="959.50"></text></g><g><title>std::panicking::try::do_call (148 samples, 1.03%)</title><rect x="0.0556%" y="933" width="1.0288%" height="15" fill="rgb(229,81,49)" fg:x="8" fg:w="148"/><text x="0.3056%" y="943.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (148 samples, 1.03%)</title><rect x="0.0556%" y="917" width="1.0288%" height="15" fill="rgb(236,28,36)" fg:x="8" fg:w="148"/><text x="0.3056%" y="927.50"></text></g><g><title>std::panic::catch_unwind (148 samples, 1.03%)</title><rect x="0.0556%" y="901" width="1.0288%" height="15" fill="rgb(249,185,26)" fg:x="8" fg:w="148"/><text x="0.3056%" y="911.50"></text></g><g><title>std::panicking::try (148 samples, 1.03%)</title><rect x="0.0556%" y="885" width="1.0288%" height="15" fill="rgb(249,174,33)" fg:x="8" fg:w="148"/><text x="0.3056%" y="895.50"></text></g><g><title>std::panicking::try::do_call (148 samples, 1.03%)</title><rect x="0.0556%" y="869" width="1.0288%" height="15" fill="rgb(233,201,37)" fg:x="8" fg:w="148"/><text x="0.3056%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (148 samples, 1.03%)</title><rect x="0.0556%" y="853" width="1.0288%" height="15" fill="rgb(221,78,26)" fg:x="8" fg:w="148"/><text x="0.3056%" y="863.50"></text></g><g><title>std::rt::lang_start::{{closure}} (148 samples, 1.03%)</title><rect x="0.0556%" y="837" width="1.0288%" height="15" fill="rgb(250,127,30)" fg:x="8" fg:w="148"/><text x="0.3056%" y="847.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (148 samples, 1.03%)</title><rect x="0.0556%" y="821" width="1.0288%" height="15" fill="rgb(230,49,44)" fg:x="8" fg:w="148"/><text x="0.3056%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (148 samples, 1.03%)</title><rect x="0.0556%" y="805" width="1.0288%" height="15" fill="rgb(229,67,23)" fg:x="8" fg:w="148"/><text x="0.3056%" y="815.50"></text></g><g><title>y2021::main (148 samples, 1.03%)</title><rect x="0.0556%" y="789" width="1.0288%" height="15" fill="rgb(249,83,47)" fg:x="8" fg:w="148"/><text x="0.3056%" y="799.50"></text></g><g><title>y2021::d12::main2::run (148 samples, 1.03%)</title><rect x="0.0556%" y="773" width="1.0288%" height="15" fill="rgb(215,43,3)" fg:x="8" fg:w="148"/><text x="0.3056%" y="783.50"></text></g><g><title>y2021::d12::main2::p02 (144 samples, 1.00%)</title><rect x="0.0834%" y="757" width="1.0010%" height="15" fill="rgb(238,154,13)" fg:x="12" fg:w="144"/><text x="0.3334%" y="767.50"></text></g><g><title>y2021::d12::main2::traverse (144 samples, 1.00%)</title><rect x="0.0834%" y="741" width="1.0010%" height="15" fill="rgb(219,56,2)" fg:x="12" fg:w="144"/><text x="0.3334%" y="751.50"></text></g><g><title>y2021::d12::main2::traverse (144 samples, 1.00%)</title><rect x="0.0834%" y="725" width="1.0010%" height="15" fill="rgb(233,0,4)" fg:x="12" fg:w="144"/><text x="0.3334%" y="735.50"></text></g><g><title>y2021::d12::main2::traverse (144 samples, 1.00%)</title><rect x="0.0834%" y="709" width="1.0010%" height="15" fill="rgb(235,30,7)" fg:x="12" fg:w="144"/><text x="0.3334%" y="719.50"></text></g><g><title>y2021::d12::main2::traverse (144 samples, 1.00%)</title><rect x="0.0834%" y="693" width="1.0010%" height="15" fill="rgb(250,79,13)" fg:x="12" fg:w="144"/><text x="0.3334%" y="703.50"></text></g><g><title>y2021::d12::main2::traverse (144 samples, 1.00%)</title><rect x="0.0834%" y="677" width="1.0010%" height="15" fill="rgb(211,146,34)" fg:x="12" fg:w="144"/><text x="0.3334%" y="687.50"></text></g><g><title>y2021::d12::main2::traverse (144 samples, 1.00%)</title><rect x="0.0834%" y="661" width="1.0010%" height="15" fill="rgb(228,22,38)" fg:x="12" fg:w="144"/><text x="0.3334%" y="671.50"></text></g><g><title>y2021::d12::main2::traverse (144 samples, 1.00%)</title><rect x="0.0834%" y="645" width="1.0010%" height="15" fill="rgb(235,168,5)" fg:x="12" fg:w="144"/><text x="0.3334%" y="655.50"></text></g><g><title>y2021::d12::main2::traverse (144 samples, 1.00%)</title><rect x="0.0834%" y="629" width="1.0010%" height="15" fill="rgb(221,155,16)" fg:x="12" fg:w="144"/><text x="0.3334%" y="639.50"></text></g><g><title>y2021::d12::main2::traverse (144 samples, 1.00%)</title><rect x="0.0834%" y="613" width="1.0010%" height="15" fill="rgb(215,215,53)" fg:x="12" fg:w="144"/><text x="0.3334%" y="623.50"></text></g><g><title>y2021::d12::main2::traverse (144 samples, 1.00%)</title><rect x="0.0834%" y="597" width="1.0010%" height="15" fill="rgb(223,4,10)" fg:x="12" fg:w="144"/><text x="0.3334%" y="607.50"></text></g><g><title>y2021::d12::main2::traverse (144 samples, 1.00%)</title><rect x="0.0834%" y="581" width="1.0010%" height="15" fill="rgb(234,103,6)" fg:x="12" fg:w="144"/><text x="0.3334%" y="591.50"></text></g><g><title>y2021::d12::main2::traverse (144 samples, 1.00%)</title><rect x="0.0834%" y="565" width="1.0010%" height="15" fill="rgb(227,97,0)" fg:x="12" fg:w="144"/><text x="0.3334%" y="575.50"></text></g><g><title>y2021::d12::main2::traverse (130 samples, 0.90%)</title><rect x="0.1807%" y="549" width="0.9037%" height="15" fill="rgb(234,150,53)" fg:x="26" fg:w="130"/><text x="0.4307%" y="559.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.0706%" y="533" width="0.0139%" height="15" fill="rgb(228,201,54)" fg:x="154" fg:w="2"/><text x="1.3206%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="1.1053%" y="565" width="0.0139%" height="15" fill="rgb(222,22,37)" fg:x="159" fg:w="2"/><text x="1.3553%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="1.1053%" y="549" width="0.0139%" height="15" fill="rgb(237,53,32)" fg:x="159" fg:w="2"/><text x="1.3553%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.01%)</title><rect x="1.1053%" y="533" width="0.0139%" height="15" fill="rgb(233,25,53)" fg:x="159" fg:w="2"/><text x="1.3553%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="1.1053%" y="517" width="0.0139%" height="15" fill="rgb(210,40,34)" fg:x="159" fg:w="2"/><text x="1.3553%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.01%)</title><rect x="1.1053%" y="501" width="0.0139%" height="15" fill="rgb(241,220,44)" fg:x="159" fg:w="2"/><text x="1.3553%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.01%)</title><rect x="1.1053%" y="485" width="0.0139%" height="15" fill="rgb(235,28,35)" fg:x="159" fg:w="2"/><text x="1.3553%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.03%)</title><rect x="1.1192%" y="565" width="0.0278%" height="15" fill="rgb(210,56,17)" fg:x="161" fg:w="4"/><text x="1.3692%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.03%)</title><rect x="1.1192%" y="549" width="0.0278%" height="15" fill="rgb(224,130,29)" fg:x="161" fg:w="4"/><text x="1.3692%" y="559.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="1.1262%" y="533" width="0.0209%" height="15" fill="rgb(235,212,8)" fg:x="162" fg:w="3"/><text x="1.3762%" y="543.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.02%)</title><rect x="1.1262%" y="517" width="0.0209%" height="15" fill="rgb(223,33,50)" fg:x="162" fg:w="3"/><text x="1.3762%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="1.1331%" y="501" width="0.0139%" height="15" fill="rgb(219,149,13)" fg:x="163" fg:w="2"/><text x="1.3831%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (13 samples, 0.09%)</title><rect x="1.1470%" y="565" width="0.0904%" height="15" fill="rgb(250,156,29)" fg:x="165" fg:w="13"/><text x="1.3970%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (22 samples, 0.15%)</title><rect x="1.1053%" y="613" width="0.1529%" height="15" fill="rgb(216,193,19)" fg:x="159" fg:w="22"/><text x="1.3553%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (22 samples, 0.15%)</title><rect x="1.1053%" y="597" width="0.1529%" height="15" fill="rgb(216,135,14)" fg:x="159" fg:w="22"/><text x="1.3553%" y="607.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (22 samples, 0.15%)</title><rect x="1.1053%" y="581" width="0.1529%" height="15" fill="rgb(241,47,5)" fg:x="159" fg:w="22"/><text x="1.3553%" y="591.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (3 samples, 0.02%)</title><rect x="1.2374%" y="565" width="0.0209%" height="15" fill="rgb(233,42,35)" fg:x="178" fg:w="3"/><text x="1.4874%" y="575.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (3 samples, 0.02%)</title><rect x="1.2374%" y="549" width="0.0209%" height="15" fill="rgb(231,13,6)" fg:x="178" fg:w="3"/><text x="1.4874%" y="559.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (3 samples, 0.02%)</title><rect x="1.2374%" y="533" width="0.0209%" height="15" fill="rgb(207,181,40)" fg:x="178" fg:w="3"/><text x="1.4874%" y="543.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3 samples, 0.02%)</title><rect x="1.2374%" y="517" width="0.0209%" height="15" fill="rgb(254,173,49)" fg:x="178" fg:w="3"/><text x="1.4874%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.17%)</title><rect x="1.0984%" y="693" width="0.1668%" height="15" fill="rgb(221,1,38)" fg:x="158" fg:w="24"/><text x="1.3484%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (24 samples, 0.17%)</title><rect x="1.0984%" y="677" width="0.1668%" height="15" fill="rgb(206,124,46)" fg:x="158" fg:w="24"/><text x="1.3484%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.17%)</title><rect x="1.0984%" y="661" width="0.1668%" height="15" fill="rgb(249,21,11)" fg:x="158" fg:w="24"/><text x="1.3484%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.17%)</title><rect x="1.0984%" y="645" width="0.1668%" height="15" fill="rgb(222,201,40)" fg:x="158" fg:w="24"/><text x="1.3484%" y="655.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (23 samples, 0.16%)</title><rect x="1.1053%" y="629" width="0.1599%" height="15" fill="rgb(235,61,29)" fg:x="159" fg:w="23"/><text x="1.3553%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.03%)</title><rect x="1.2722%" y="613" width="0.0278%" height="15" fill="rgb(219,207,3)" fg:x="183" fg:w="4"/><text x="1.5222%" y="623.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.02%)</title><rect x="1.2791%" y="597" width="0.0209%" height="15" fill="rgb(222,56,46)" fg:x="184" fg:w="3"/><text x="1.5291%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.02%)</title><rect x="1.2791%" y="581" width="0.0209%" height="15" fill="rgb(239,76,54)" fg:x="184" fg:w="3"/><text x="1.5291%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.02%)</title><rect x="1.2791%" y="565" width="0.0209%" height="15" fill="rgb(231,124,27)" fg:x="184" fg:w="3"/><text x="1.5291%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.02%)</title><rect x="1.2791%" y="549" width="0.0209%" height="15" fill="rgb(249,195,6)" fg:x="184" fg:w="3"/><text x="1.5291%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.03%)</title><rect x="1.2722%" y="693" width="0.0348%" height="15" fill="rgb(237,174,47)" fg:x="183" fg:w="5"/><text x="1.5222%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.03%)</title><rect x="1.2722%" y="677" width="0.0348%" height="15" fill="rgb(206,201,31)" fg:x="183" fg:w="5"/><text x="1.5222%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.03%)</title><rect x="1.2722%" y="661" width="0.0348%" height="15" fill="rgb(231,57,52)" fg:x="183" fg:w="5"/><text x="1.5222%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.03%)</title><rect x="1.2722%" y="645" width="0.0348%" height="15" fill="rgb(248,177,22)" fg:x="183" fg:w="5"/><text x="1.5222%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.03%)</title><rect x="1.2722%" y="629" width="0.0348%" height="15" fill="rgb(215,211,37)" fg:x="183" fg:w="5"/><text x="1.5222%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="1.3069%" y="597" width="0.0139%" height="15" fill="rgb(241,128,51)" fg:x="188" fg:w="2"/><text x="1.5569%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="1.3069%" y="581" width="0.0139%" height="15" fill="rgb(227,165,31)" fg:x="188" fg:w="2"/><text x="1.5569%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="1.3069%" y="565" width="0.0139%" height="15" fill="rgb(228,167,24)" fg:x="188" fg:w="2"/><text x="1.5569%" y="575.50"></text></g><g><title>std::rt::lang_start::{{closure}} (34 samples, 0.24%)</title><rect x="1.0914%" y="1013" width="0.2364%" height="15" fill="rgb(228,143,12)" fg:x="157" fg:w="34"/><text x="1.3414%" y="1023.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (34 samples, 0.24%)</title><rect x="1.0914%" y="997" width="0.2364%" height="15" fill="rgb(249,149,8)" fg:x="157" fg:w="34"/><text x="1.3414%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (34 samples, 0.24%)</title><rect x="1.0914%" y="981" width="0.2364%" height="15" fill="rgb(243,35,44)" fg:x="157" fg:w="34"/><text x="1.3414%" y="991.50"></text></g><g><title>y2021::main (34 samples, 0.24%)</title><rect x="1.0914%" y="965" width="0.2364%" height="15" fill="rgb(246,89,9)" fg:x="157" fg:w="34"/><text x="1.3414%" y="975.50"></text></g><g><title>y2021::d12::main2::run (34 samples, 0.24%)</title><rect x="1.0914%" y="949" width="0.2364%" height="15" fill="rgb(233,213,13)" fg:x="157" fg:w="34"/><text x="1.3414%" y="959.50"></text></g><g><title>y2021::d12::main2::p02 (34 samples, 0.24%)</title><rect x="1.0914%" y="933" width="0.2364%" height="15" fill="rgb(233,141,41)" fg:x="157" fg:w="34"/><text x="1.3414%" y="943.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.24%)</title><rect x="1.0914%" y="917" width="0.2364%" height="15" fill="rgb(239,167,4)" fg:x="157" fg:w="34"/><text x="1.3414%" y="927.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.24%)</title><rect x="1.0914%" y="901" width="0.2364%" height="15" fill="rgb(209,217,16)" fg:x="157" fg:w="34"/><text x="1.3414%" y="911.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.24%)</title><rect x="1.0914%" y="885" width="0.2364%" height="15" fill="rgb(219,88,35)" fg:x="157" fg:w="34"/><text x="1.3414%" y="895.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.24%)</title><rect x="1.0914%" y="869" width="0.2364%" height="15" fill="rgb(220,193,23)" fg:x="157" fg:w="34"/><text x="1.3414%" y="879.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.24%)</title><rect x="1.0914%" y="853" width="0.2364%" height="15" fill="rgb(230,90,52)" fg:x="157" fg:w="34"/><text x="1.3414%" y="863.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.24%)</title><rect x="1.0914%" y="837" width="0.2364%" height="15" fill="rgb(252,106,19)" fg:x="157" fg:w="34"/><text x="1.3414%" y="847.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.24%)</title><rect x="1.0914%" y="821" width="0.2364%" height="15" fill="rgb(206,74,20)" fg:x="157" fg:w="34"/><text x="1.3414%" y="831.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.24%)</title><rect x="1.0914%" y="805" width="0.2364%" height="15" fill="rgb(230,138,44)" fg:x="157" fg:w="34"/><text x="1.3414%" y="815.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.24%)</title><rect x="1.0914%" y="789" width="0.2364%" height="15" fill="rgb(235,182,43)" fg:x="157" fg:w="34"/><text x="1.3414%" y="799.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.24%)</title><rect x="1.0914%" y="773" width="0.2364%" height="15" fill="rgb(242,16,51)" fg:x="157" fg:w="34"/><text x="1.3414%" y="783.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.24%)</title><rect x="1.0914%" y="757" width="0.2364%" height="15" fill="rgb(248,9,4)" fg:x="157" fg:w="34"/><text x="1.3414%" y="767.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.24%)</title><rect x="1.0914%" y="741" width="0.2364%" height="15" fill="rgb(210,31,22)" fg:x="157" fg:w="34"/><text x="1.3414%" y="751.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.24%)</title><rect x="1.0914%" y="725" width="0.2364%" height="15" fill="rgb(239,54,39)" fg:x="157" fg:w="34"/><text x="1.3414%" y="735.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.24%)</title><rect x="1.0914%" y="709" width="0.2364%" height="15" fill="rgb(230,99,41)" fg:x="157" fg:w="34"/><text x="1.3414%" y="719.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (3 samples, 0.02%)</title><rect x="1.3069%" y="693" width="0.0209%" height="15" fill="rgb(253,106,12)" fg:x="188" fg:w="3"/><text x="1.5569%" y="703.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (3 samples, 0.02%)</title><rect x="1.3069%" y="677" width="0.0209%" height="15" fill="rgb(213,46,41)" fg:x="188" fg:w="3"/><text x="1.5569%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.02%)</title><rect x="1.3069%" y="661" width="0.0209%" height="15" fill="rgb(215,133,35)" fg:x="188" fg:w="3"/><text x="1.5569%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.02%)</title><rect x="1.3069%" y="645" width="0.0209%" height="15" fill="rgb(213,28,5)" fg:x="188" fg:w="3"/><text x="1.5569%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.02%)</title><rect x="1.3069%" y="629" width="0.0209%" height="15" fill="rgb(215,77,49)" fg:x="188" fg:w="3"/><text x="1.5569%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="1.3069%" y="613" width="0.0209%" height="15" fill="rgb(248,100,22)" fg:x="188" fg:w="3"/><text x="1.5569%" y="623.50"></text></g><g><title>alloc::fmt::format (8 samples, 0.06%)</title><rect x="1.3347%" y="581" width="0.0556%" height="15" fill="rgb(208,67,9)" fg:x="192" fg:w="8"/><text x="1.5847%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (8 samples, 0.06%)</title><rect x="1.3347%" y="565" width="0.0556%" height="15" fill="rgb(219,133,21)" fg:x="192" fg:w="8"/><text x="1.5847%" y="575.50"></text></g><g><title>core::fmt::write (8 samples, 0.06%)</title><rect x="1.3347%" y="549" width="0.0556%" height="15" fill="rgb(246,46,29)" fg:x="192" fg:w="8"/><text x="1.5847%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.06%)</title><rect x="1.3347%" y="533" width="0.0556%" height="15" fill="rgb(246,185,52)" fg:x="192" fg:w="8"/><text x="1.5847%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.06%)</title><rect x="1.3347%" y="517" width="0.0556%" height="15" fill="rgb(252,136,11)" fg:x="192" fg:w="8"/><text x="1.5847%" y="527.50"></text></g><g><title>alloc::string::String::push_str (8 samples, 0.06%)</title><rect x="1.3347%" y="501" width="0.0556%" height="15" fill="rgb(219,138,53)" fg:x="192" fg:w="8"/><text x="1.5847%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.06%)</title><rect x="1.3347%" y="485" width="0.0556%" height="15" fill="rgb(211,51,23)" fg:x="192" fg:w="8"/><text x="1.5847%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.06%)</title><rect x="1.3347%" y="469" width="0.0556%" height="15" fill="rgb(247,221,28)" fg:x="192" fg:w="8"/><text x="1.5847%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.06%)</title><rect x="1.3347%" y="453" width="0.0556%" height="15" fill="rgb(251,222,45)" fg:x="192" fg:w="8"/><text x="1.5847%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.06%)</title><rect x="1.3347%" y="437" width="0.0556%" height="15" fill="rgb(217,162,53)" fg:x="192" fg:w="8"/><text x="1.5847%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.06%)</title><rect x="1.3347%" y="421" width="0.0556%" height="15" fill="rgb(229,93,14)" fg:x="192" fg:w="8"/><text x="1.5847%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.06%)</title><rect x="1.3347%" y="405" width="0.0556%" height="15" fill="rgb(209,67,49)" fg:x="192" fg:w="8"/><text x="1.5847%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.06%)</title><rect x="1.3347%" y="389" width="0.0556%" height="15" fill="rgb(213,87,29)" fg:x="192" fg:w="8"/><text x="1.5847%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.06%)</title><rect x="1.3347%" y="373" width="0.0556%" height="15" fill="rgb(205,151,52)" fg:x="192" fg:w="8"/><text x="1.5847%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.06%)</title><rect x="1.3347%" y="357" width="0.0556%" height="15" fill="rgb(253,215,39)" fg:x="192" fg:w="8"/><text x="1.5847%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.06%)</title><rect x="1.3347%" y="341" width="0.0556%" height="15" fill="rgb(221,220,41)" fg:x="192" fg:w="8"/><text x="1.5847%" y="351.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.06%)</title><rect x="1.3347%" y="325" width="0.0556%" height="15" fill="rgb(218,133,21)" fg:x="192" fg:w="8"/><text x="1.5847%" y="335.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.06%)</title><rect x="1.3347%" y="309" width="0.0556%" height="15" fill="rgb(221,193,43)" fg:x="192" fg:w="8"/><text x="1.5847%" y="319.50"></text></g><g><title>_int_realloc (8 samples, 0.06%)</title><rect x="1.3347%" y="293" width="0.0556%" height="15" fill="rgb(240,128,52)" fg:x="192" fg:w="8"/><text x="1.5847%" y="303.50"></text></g><g><title>_int_malloc (8 samples, 0.06%)</title><rect x="1.3347%" y="277" width="0.0556%" height="15" fill="rgb(253,114,12)" fg:x="192" fg:w="8"/><text x="1.5847%" y="287.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.02%)</title><rect x="1.3973%" y="517" width="0.0209%" height="15" fill="rgb(215,223,47)" fg:x="201" fg:w="3"/><text x="1.6473%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (12 samples, 0.08%)</title><rect x="1.4460%" y="357" width="0.0834%" height="15" fill="rgb(248,225,23)" fg:x="208" fg:w="12"/><text x="1.6960%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="1.5433%" y="341" width="0.0139%" height="15" fill="rgb(250,108,0)" fg:x="222" fg:w="2"/><text x="1.7933%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="1.5433%" y="325" width="0.0139%" height="15" fill="rgb(228,208,7)" fg:x="222" fg:w="2"/><text x="1.7933%" y="335.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="1.5433%" y="309" width="0.0139%" height="15" fill="rgb(244,45,10)" fg:x="222" fg:w="2"/><text x="1.7933%" y="319.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="1.5572%" y="341" width="0.0139%" height="15" fill="rgb(207,125,25)" fg:x="224" fg:w="2"/><text x="1.8072%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.06%)</title><rect x="1.5294%" y="357" width="0.0626%" height="15" fill="rgb(210,195,18)" fg:x="220" fg:w="9"/><text x="1.7794%" y="367.50"></text></g><g><title>__rust_alloc (2 samples, 0.01%)</title><rect x="1.5780%" y="341" width="0.0139%" height="15" fill="rgb(249,80,12)" fg:x="227" fg:w="2"/><text x="1.8280%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (24 samples, 0.17%)</title><rect x="1.4320%" y="421" width="0.1668%" height="15" fill="rgb(221,65,9)" fg:x="206" fg:w="24"/><text x="1.6820%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 0.17%)</title><rect x="1.4320%" y="405" width="0.1668%" height="15" fill="rgb(235,49,36)" fg:x="206" fg:w="24"/><text x="1.6820%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.15%)</title><rect x="1.4460%" y="389" width="0.1529%" height="15" fill="rgb(225,32,20)" fg:x="208" fg:w="22"/><text x="1.6960%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.15%)</title><rect x="1.4460%" y="373" width="0.1529%" height="15" fill="rgb(215,141,46)" fg:x="208" fg:w="22"/><text x="1.6960%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="1.5989%" y="421" width="0.0139%" height="15" fill="rgb(250,160,47)" fg:x="230" fg:w="2"/><text x="1.8489%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="1.5989%" y="405" width="0.0139%" height="15" fill="rgb(216,222,40)" fg:x="230" fg:w="2"/><text x="1.8489%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (32 samples, 0.22%)</title><rect x="1.4181%" y="517" width="0.2225%" height="15" fill="rgb(234,217,39)" fg:x="204" fg:w="32"/><text x="1.6681%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (30 samples, 0.21%)</title><rect x="1.4320%" y="501" width="0.2086%" height="15" fill="rgb(207,178,40)" fg:x="206" fg:w="30"/><text x="1.6820%" y="511.50"></text></g><g><title>alloc::string::String::push_str (30 samples, 0.21%)</title><rect x="1.4320%" y="485" width="0.2086%" height="15" fill="rgb(221,136,13)" fg:x="206" fg:w="30"/><text x="1.6820%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (30 samples, 0.21%)</title><rect x="1.4320%" y="469" width="0.2086%" height="15" fill="rgb(249,199,10)" fg:x="206" fg:w="30"/><text x="1.6820%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (30 samples, 0.21%)</title><rect x="1.4320%" y="453" width="0.2086%" height="15" fill="rgb(249,222,13)" fg:x="206" fg:w="30"/><text x="1.6820%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (30 samples, 0.21%)</title><rect x="1.4320%" y="437" width="0.2086%" height="15" fill="rgb(244,185,38)" fg:x="206" fg:w="30"/><text x="1.6820%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.03%)</title><rect x="1.6128%" y="421" width="0.0278%" height="15" fill="rgb(236,202,9)" fg:x="232" fg:w="4"/><text x="1.8628%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.03%)</title><rect x="1.6128%" y="405" width="0.0278%" height="15" fill="rgb(250,229,37)" fg:x="232" fg:w="4"/><text x="1.8628%" y="415.50"></text></g><g><title>alloc::fmt::format (40 samples, 0.28%)</title><rect x="1.3903%" y="565" width="0.2781%" height="15" fill="rgb(206,174,23)" fg:x="200" fg:w="40"/><text x="1.6403%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (40 samples, 0.28%)</title><rect x="1.3903%" y="549" width="0.2781%" height="15" fill="rgb(211,33,43)" fg:x="200" fg:w="40"/><text x="1.6403%" y="559.50"></text></g><g><title>core::fmt::write (40 samples, 0.28%)</title><rect x="1.3903%" y="533" width="0.2781%" height="15" fill="rgb(245,58,50)" fg:x="200" fg:w="40"/><text x="1.6403%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.01%)</title><rect x="1.6545%" y="517" width="0.0139%" height="15" fill="rgb(244,68,36)" fg:x="238" fg:w="2"/><text x="1.9045%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="1.6684%" y="501" width="0.0139%" height="15" fill="rgb(232,229,15)" fg:x="240" fg:w="2"/><text x="1.9184%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.01%)</title><rect x="1.6684%" y="485" width="0.0139%" height="15" fill="rgb(254,30,23)" fg:x="240" fg:w="2"/><text x="1.9184%" y="495.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.01%)</title><rect x="1.6684%" y="469" width="0.0139%" height="15" fill="rgb(235,160,14)" fg:x="240" fg:w="2"/><text x="1.9184%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="1.6823%" y="437" width="0.0139%" height="15" fill="rgb(212,155,44)" fg:x="242" fg:w="2"/><text x="1.9323%" y="447.50"></text></g><g><title>hashbrown::map::make_insert_hash (5 samples, 0.03%)</title><rect x="1.6684%" y="517" width="0.0348%" height="15" fill="rgb(226,2,50)" fg:x="240" fg:w="5"/><text x="1.9184%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="1.6823%" y="501" width="0.0209%" height="15" fill="rgb(234,177,6)" fg:x="242" fg:w="3"/><text x="1.9323%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="1.6823%" y="485" width="0.0209%" height="15" fill="rgb(217,24,9)" fg:x="242" fg:w="3"/><text x="1.9323%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="1.6823%" y="469" width="0.0209%" height="15" fill="rgb(220,13,46)" fg:x="242" fg:w="3"/><text x="1.9323%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.02%)</title><rect x="1.6823%" y="453" width="0.0209%" height="15" fill="rgb(239,221,27)" fg:x="242" fg:w="3"/><text x="1.9323%" y="463.50"></text></g><g><title>std::rt::lang_start_internal (56 samples, 0.39%)</title><rect x="1.3278%" y="1013" width="0.3893%" height="15" fill="rgb(222,198,25)" fg:x="191" fg:w="56"/><text x="1.5778%" y="1023.50"></text></g><g><title>std::panic::catch_unwind (56 samples, 0.39%)</title><rect x="1.3278%" y="997" width="0.3893%" height="15" fill="rgb(211,99,13)" fg:x="191" fg:w="56"/><text x="1.5778%" y="1007.50"></text></g><g><title>std::panicking::try (56 samples, 0.39%)</title><rect x="1.3278%" y="981" width="0.3893%" height="15" fill="rgb(232,111,31)" fg:x="191" fg:w="56"/><text x="1.5778%" y="991.50"></text></g><g><title>std::panicking::try::do_call (56 samples, 0.39%)</title><rect x="1.3278%" y="965" width="0.3893%" height="15" fill="rgb(245,82,37)" fg:x="191" fg:w="56"/><text x="1.5778%" y="975.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (56 samples, 0.39%)</title><rect x="1.3278%" y="949" width="0.3893%" height="15" fill="rgb(227,149,46)" fg:x="191" fg:w="56"/><text x="1.5778%" y="959.50"></text></g><g><title>std::panic::catch_unwind (56 samples, 0.39%)</title><rect x="1.3278%" y="933" width="0.3893%" height="15" fill="rgb(218,36,50)" fg:x="191" fg:w="56"/><text x="1.5778%" y="943.50"></text></g><g><title>std::panicking::try (56 samples, 0.39%)</title><rect x="1.3278%" y="917" width="0.3893%" height="15" fill="rgb(226,80,48)" fg:x="191" fg:w="56"/><text x="1.5778%" y="927.50"></text></g><g><title>std::panicking::try::do_call (56 samples, 0.39%)</title><rect x="1.3278%" y="901" width="0.3893%" height="15" fill="rgb(238,224,15)" fg:x="191" fg:w="56"/><text x="1.5778%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (56 samples, 0.39%)</title><rect x="1.3278%" y="885" width="0.3893%" height="15" fill="rgb(241,136,10)" fg:x="191" fg:w="56"/><text x="1.5778%" y="895.50"></text></g><g><title>std::rt::lang_start::{{closure}} (56 samples, 0.39%)</title><rect x="1.3278%" y="869" width="0.3893%" height="15" fill="rgb(208,32,45)" fg:x="191" fg:w="56"/><text x="1.5778%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (56 samples, 0.39%)</title><rect x="1.3278%" y="853" width="0.3893%" height="15" fill="rgb(207,135,9)" fg:x="191" fg:w="56"/><text x="1.5778%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (56 samples, 0.39%)</title><rect x="1.3278%" y="837" width="0.3893%" height="15" fill="rgb(206,86,44)" fg:x="191" fg:w="56"/><text x="1.5778%" y="847.50"></text></g><g><title>y2021::main (56 samples, 0.39%)</title><rect x="1.3278%" y="821" width="0.3893%" height="15" fill="rgb(245,177,15)" fg:x="191" fg:w="56"/><text x="1.5778%" y="831.50"></text></g><g><title>y2021::d12::main2::run (55 samples, 0.38%)</title><rect x="1.3347%" y="805" width="0.3823%" height="15" fill="rgb(206,64,50)" fg:x="192" fg:w="55"/><text x="1.5847%" y="815.50"></text></g><g><title>y2021::d12::main2::p02 (55 samples, 0.38%)</title><rect x="1.3347%" y="789" width="0.3823%" height="15" fill="rgb(234,36,40)" fg:x="192" fg:w="55"/><text x="1.5847%" y="799.50"></text></g><g><title>y2021::d12::main2::traverse (55 samples, 0.38%)</title><rect x="1.3347%" y="773" width="0.3823%" height="15" fill="rgb(213,64,8)" fg:x="192" fg:w="55"/><text x="1.5847%" y="783.50"></text></g><g><title>y2021::d12::main2::traverse (55 samples, 0.38%)</title><rect x="1.3347%" y="757" width="0.3823%" height="15" fill="rgb(210,75,36)" fg:x="192" fg:w="55"/><text x="1.5847%" y="767.50"></text></g><g><title>y2021::d12::main2::traverse (55 samples, 0.38%)</title><rect x="1.3347%" y="741" width="0.3823%" height="15" fill="rgb(229,88,21)" fg:x="192" fg:w="55"/><text x="1.5847%" y="751.50"></text></g><g><title>y2021::d12::main2::traverse (55 samples, 0.38%)</title><rect x="1.3347%" y="725" width="0.3823%" height="15" fill="rgb(252,204,47)" fg:x="192" fg:w="55"/><text x="1.5847%" y="735.50"></text></g><g><title>y2021::d12::main2::traverse (55 samples, 0.38%)</title><rect x="1.3347%" y="709" width="0.3823%" height="15" fill="rgb(208,77,27)" fg:x="192" fg:w="55"/><text x="1.5847%" y="719.50"></text></g><g><title>y2021::d12::main2::traverse (55 samples, 0.38%)</title><rect x="1.3347%" y="693" width="0.3823%" height="15" fill="rgb(221,76,26)" fg:x="192" fg:w="55"/><text x="1.5847%" y="703.50"></text></g><g><title>y2021::d12::main2::traverse (55 samples, 0.38%)</title><rect x="1.3347%" y="677" width="0.3823%" height="15" fill="rgb(225,139,18)" fg:x="192" fg:w="55"/><text x="1.5847%" y="687.50"></text></g><g><title>y2021::d12::main2::traverse (55 samples, 0.38%)</title><rect x="1.3347%" y="661" width="0.3823%" height="15" fill="rgb(230,137,11)" fg:x="192" fg:w="55"/><text x="1.5847%" y="671.50"></text></g><g><title>y2021::d12::main2::traverse (55 samples, 0.38%)</title><rect x="1.3347%" y="645" width="0.3823%" height="15" fill="rgb(212,28,1)" fg:x="192" fg:w="55"/><text x="1.5847%" y="655.50"></text></g><g><title>y2021::d12::main2::traverse (55 samples, 0.38%)</title><rect x="1.3347%" y="629" width="0.3823%" height="15" fill="rgb(248,164,17)" fg:x="192" fg:w="55"/><text x="1.5847%" y="639.50"></text></g><g><title>y2021::d12::main2::traverse (55 samples, 0.38%)</title><rect x="1.3347%" y="613" width="0.3823%" height="15" fill="rgb(222,171,42)" fg:x="192" fg:w="55"/><text x="1.5847%" y="623.50"></text></g><g><title>y2021::d12::main2::traverse (55 samples, 0.38%)</title><rect x="1.3347%" y="597" width="0.3823%" height="15" fill="rgb(243,84,45)" fg:x="192" fg:w="55"/><text x="1.5847%" y="607.50"></text></g><g><title>y2021::d12::main2::traverse (47 samples, 0.33%)</title><rect x="1.3903%" y="581" width="0.3267%" height="15" fill="rgb(252,49,23)" fg:x="200" fg:w="47"/><text x="1.6403%" y="591.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (7 samples, 0.05%)</title><rect x="1.6684%" y="565" width="0.0487%" height="15" fill="rgb(215,19,7)" fg:x="240" fg:w="7"/><text x="1.9184%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (7 samples, 0.05%)</title><rect x="1.6684%" y="549" width="0.0487%" height="15" fill="rgb(238,81,41)" fg:x="240" fg:w="7"/><text x="1.9184%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.05%)</title><rect x="1.6684%" y="533" width="0.0487%" height="15" fill="rgb(210,199,37)" fg:x="240" fg:w="7"/><text x="1.9184%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.01%)</title><rect x="1.7032%" y="517" width="0.0139%" height="15" fill="rgb(244,192,49)" fg:x="245" fg:w="2"/><text x="1.9532%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.01%)</title><rect x="1.7032%" y="501" width="0.0139%" height="15" fill="rgb(226,211,11)" fg:x="245" fg:w="2"/><text x="1.9532%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.01%)</title><rect x="1.7032%" y="485" width="0.0139%" height="15" fill="rgb(236,162,54)" fg:x="245" fg:w="2"/><text x="1.9532%" y="495.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="1.7032%" y="469" width="0.0139%" height="15" fill="rgb(220,229,9)" fg:x="245" fg:w="2"/><text x="1.9532%" y="479.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.01%)</title><rect x="1.7240%" y="741" width="0.0139%" height="15" fill="rgb(250,87,22)" fg:x="248" fg:w="2"/><text x="1.9740%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.01%)</title><rect x="1.7240%" y="725" width="0.0139%" height="15" fill="rgb(239,43,17)" fg:x="248" fg:w="2"/><text x="1.9740%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.01%)</title><rect x="1.7240%" y="709" width="0.0139%" height="15" fill="rgb(231,177,25)" fg:x="248" fg:w="2"/><text x="1.9740%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="1.7240%" y="693" width="0.0139%" height="15" fill="rgb(219,179,1)" fg:x="248" fg:w="2"/><text x="1.9740%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="1.7240%" y="677" width="0.0139%" height="15" fill="rgb(238,219,53)" fg:x="248" fg:w="2"/><text x="1.9740%" y="687.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.01%)</title><rect x="1.7240%" y="661" width="0.0139%" height="15" fill="rgb(232,167,36)" fg:x="248" fg:w="2"/><text x="1.9740%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="1.7240%" y="645" width="0.0139%" height="15" fill="rgb(244,19,51)" fg:x="248" fg:w="2"/><text x="1.9740%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="1.7240%" y="629" width="0.0139%" height="15" fill="rgb(224,6,22)" fg:x="248" fg:w="2"/><text x="1.9740%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="1.7240%" y="613" width="0.0139%" height="15" fill="rgb(224,145,5)" fg:x="248" fg:w="2"/><text x="1.9740%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="1.7240%" y="597" width="0.0139%" height="15" fill="rgb(234,130,49)" fg:x="248" fg:w="2"/><text x="1.9740%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="1.7240%" y="581" width="0.0139%" height="15" fill="rgb(254,6,2)" fg:x="248" fg:w="2"/><text x="1.9740%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="1.7240%" y="565" width="0.0139%" height="15" fill="rgb(208,96,46)" fg:x="248" fg:w="2"/><text x="1.9740%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="1.7240%" y="549" width="0.0139%" height="15" fill="rgb(239,3,39)" fg:x="248" fg:w="2"/><text x="1.9740%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="1.7240%" y="533" width="0.0139%" height="15" fill="rgb(233,210,1)" fg:x="248" fg:w="2"/><text x="1.9740%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="1.7240%" y="517" width="0.0139%" height="15" fill="rgb(244,137,37)" fg:x="248" fg:w="2"/><text x="1.9740%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="1.7240%" y="501" width="0.0139%" height="15" fill="rgb(240,136,2)" fg:x="248" fg:w="2"/><text x="1.9740%" y="511.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="1.7240%" y="485" width="0.0139%" height="15" fill="rgb(239,18,37)" fg:x="248" fg:w="2"/><text x="1.9740%" y="495.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="1.7240%" y="469" width="0.0139%" height="15" fill="rgb(218,185,22)" fg:x="248" fg:w="2"/><text x="1.9740%" y="479.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="1.7240%" y="453" width="0.0139%" height="15" fill="rgb(225,218,4)" fg:x="248" fg:w="2"/><text x="1.9740%" y="463.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="1.7240%" y="437" width="0.0139%" height="15" fill="rgb(230,182,32)" fg:x="248" fg:w="2"/><text x="1.9740%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.01%)</title><rect x="1.7379%" y="597" width="0.0139%" height="15" fill="rgb(242,56,43)" fg:x="250" fg:w="2"/><text x="1.9879%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="1.7379%" y="581" width="0.0139%" height="15" fill="rgb(233,99,24)" fg:x="250" fg:w="2"/><text x="1.9879%" y="591.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="1.7379%" y="565" width="0.0139%" height="15" fill="rgb(234,209,42)" fg:x="250" fg:w="2"/><text x="1.9879%" y="575.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (2 samples, 0.01%)</title><rect x="1.7379%" y="549" width="0.0139%" height="15" fill="rgb(227,7,12)" fg:x="250" fg:w="2"/><text x="1.9879%" y="559.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.01%)</title><rect x="1.7379%" y="533" width="0.0139%" height="15" fill="rgb(245,203,43)" fg:x="250" fg:w="2"/><text x="1.9879%" y="543.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.01%)</title><rect x="1.7379%" y="517" width="0.0139%" height="15" fill="rgb(238,205,33)" fg:x="250" fg:w="2"/><text x="1.9879%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="1.7379%" y="725" width="0.0209%" height="15" fill="rgb(231,56,7)" fg:x="250" fg:w="3"/><text x="1.9879%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.02%)</title><rect x="1.7379%" y="709" width="0.0209%" height="15" fill="rgb(244,186,29)" fg:x="250" fg:w="3"/><text x="1.9879%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="1.7379%" y="693" width="0.0209%" height="15" fill="rgb(234,111,31)" fg:x="250" fg:w="3"/><text x="1.9879%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.02%)</title><rect x="1.7379%" y="677" width="0.0209%" height="15" fill="rgb(241,149,10)" fg:x="250" fg:w="3"/><text x="1.9879%" y="687.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3 samples, 0.02%)</title><rect x="1.7379%" y="661" width="0.0209%" height="15" fill="rgb(249,206,44)" fg:x="250" fg:w="3"/><text x="1.9879%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.02%)</title><rect x="1.7379%" y="645" width="0.0209%" height="15" fill="rgb(251,153,30)" fg:x="250" fg:w="3"/><text x="1.9879%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.02%)</title><rect x="1.7379%" y="629" width="0.0209%" height="15" fill="rgb(239,152,38)" fg:x="250" fg:w="3"/><text x="1.9879%" y="639.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (3 samples, 0.02%)</title><rect x="1.7379%" y="613" width="0.0209%" height="15" fill="rgb(249,139,47)" fg:x="250" fg:w="3"/><text x="1.9879%" y="623.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.01%)</title><rect x="1.7727%" y="677" width="0.0139%" height="15" fill="rgb(244,64,35)" fg:x="255" fg:w="2"/><text x="2.0227%" y="687.50"></text></g><g><title>y2021::d12::main2::run (10 samples, 0.07%)</title><rect x="1.7240%" y="1013" width="0.0695%" height="15" fill="rgb(216,46,15)" fg:x="248" fg:w="10"/><text x="1.9740%" y="1023.50"></text></g><g><title>y2021::d12::main2::p02 (10 samples, 0.07%)</title><rect x="1.7240%" y="997" width="0.0695%" height="15" fill="rgb(250,74,19)" fg:x="248" fg:w="10"/><text x="1.9740%" y="1007.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.07%)</title><rect x="1.7240%" y="981" width="0.0695%" height="15" fill="rgb(249,42,33)" fg:x="248" fg:w="10"/><text x="1.9740%" y="991.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.07%)</title><rect x="1.7240%" y="965" width="0.0695%" height="15" fill="rgb(242,149,17)" fg:x="248" fg:w="10"/><text x="1.9740%" y="975.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.07%)</title><rect x="1.7240%" y="949" width="0.0695%" height="15" fill="rgb(244,29,21)" fg:x="248" fg:w="10"/><text x="1.9740%" y="959.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.07%)</title><rect x="1.7240%" y="933" width="0.0695%" height="15" fill="rgb(220,130,37)" fg:x="248" fg:w="10"/><text x="1.9740%" y="943.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.07%)</title><rect x="1.7240%" y="917" width="0.0695%" height="15" fill="rgb(211,67,2)" fg:x="248" fg:w="10"/><text x="1.9740%" y="927.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.07%)</title><rect x="1.7240%" y="901" width="0.0695%" height="15" fill="rgb(235,68,52)" fg:x="248" fg:w="10"/><text x="1.9740%" y="911.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.07%)</title><rect x="1.7240%" y="885" width="0.0695%" height="15" fill="rgb(246,142,3)" fg:x="248" fg:w="10"/><text x="1.9740%" y="895.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.07%)</title><rect x="1.7240%" y="869" width="0.0695%" height="15" fill="rgb(241,25,7)" fg:x="248" fg:w="10"/><text x="1.9740%" y="879.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.07%)</title><rect x="1.7240%" y="853" width="0.0695%" height="15" fill="rgb(242,119,39)" fg:x="248" fg:w="10"/><text x="1.9740%" y="863.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.07%)</title><rect x="1.7240%" y="837" width="0.0695%" height="15" fill="rgb(241,98,45)" fg:x="248" fg:w="10"/><text x="1.9740%" y="847.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.07%)</title><rect x="1.7240%" y="821" width="0.0695%" height="15" fill="rgb(254,28,30)" fg:x="248" fg:w="10"/><text x="1.9740%" y="831.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.07%)</title><rect x="1.7240%" y="805" width="0.0695%" height="15" fill="rgb(241,142,54)" fg:x="248" fg:w="10"/><text x="1.9740%" y="815.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.07%)</title><rect x="1.7240%" y="789" width="0.0695%" height="15" fill="rgb(222,85,15)" fg:x="248" fg:w="10"/><text x="1.9740%" y="799.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.07%)</title><rect x="1.7240%" y="773" width="0.0695%" height="15" fill="rgb(210,85,47)" fg:x="248" fg:w="10"/><text x="1.9740%" y="783.50"></text></g><g><title>y2021::d12::main2::traverse (10 samples, 0.07%)</title><rect x="1.7240%" y="757" width="0.0695%" height="15" fill="rgb(224,206,25)" fg:x="248" fg:w="10"/><text x="1.9740%" y="767.50"></text></g><g><title>y2021::d12::main2::traverse (8 samples, 0.06%)</title><rect x="1.7379%" y="741" width="0.0556%" height="15" fill="rgb(243,201,19)" fg:x="250" fg:w="8"/><text x="1.9879%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (3 samples, 0.02%)</title><rect x="1.7727%" y="725" width="0.0209%" height="15" fill="rgb(236,59,4)" fg:x="255" fg:w="3"/><text x="2.0227%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="1.7727%" y="709" width="0.0209%" height="15" fill="rgb(254,179,45)" fg:x="255" fg:w="3"/><text x="2.0227%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="1.7727%" y="693" width="0.0209%" height="15" fill="rgb(226,14,10)" fg:x="255" fg:w="3"/><text x="2.0227%" y="703.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="1013" width="0.0139%" height="15" fill="rgb(244,27,41)" fg:x="258" fg:w="2"/><text x="2.0435%" y="1023.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="997" width="0.0139%" height="15" fill="rgb(235,35,32)" fg:x="258" fg:w="2"/><text x="2.0435%" y="1007.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="981" width="0.0139%" height="15" fill="rgb(218,68,31)" fg:x="258" fg:w="2"/><text x="2.0435%" y="991.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="965" width="0.0139%" height="15" fill="rgb(207,120,37)" fg:x="258" fg:w="2"/><text x="2.0435%" y="975.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="949" width="0.0139%" height="15" fill="rgb(227,98,0)" fg:x="258" fg:w="2"/><text x="2.0435%" y="959.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="933" width="0.0139%" height="15" fill="rgb(207,7,3)" fg:x="258" fg:w="2"/><text x="2.0435%" y="943.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="917" width="0.0139%" height="15" fill="rgb(206,98,19)" fg:x="258" fg:w="2"/><text x="2.0435%" y="927.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="901" width="0.0139%" height="15" fill="rgb(217,5,26)" fg:x="258" fg:w="2"/><text x="2.0435%" y="911.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="885" width="0.0139%" height="15" fill="rgb(235,190,38)" fg:x="258" fg:w="2"/><text x="2.0435%" y="895.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="869" width="0.0139%" height="15" fill="rgb(247,86,24)" fg:x="258" fg:w="2"/><text x="2.0435%" y="879.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="853" width="0.0139%" height="15" fill="rgb(205,101,16)" fg:x="258" fg:w="2"/><text x="2.0435%" y="863.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="837" width="0.0139%" height="15" fill="rgb(246,168,33)" fg:x="258" fg:w="2"/><text x="2.0435%" y="847.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="821" width="0.0139%" height="15" fill="rgb(231,114,1)" fg:x="258" fg:w="2"/><text x="2.0435%" y="831.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="805" width="0.0139%" height="15" fill="rgb(207,184,53)" fg:x="258" fg:w="2"/><text x="2.0435%" y="815.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="789" width="0.0139%" height="15" fill="rgb(224,95,51)" fg:x="258" fg:w="2"/><text x="2.0435%" y="799.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.01%)</title><rect x="1.7935%" y="773" width="0.0139%" height="15" fill="rgb(212,188,45)" fg:x="258" fg:w="2"/><text x="2.0435%" y="783.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.01%)</title><rect x="1.7935%" y="757" width="0.0139%" height="15" fill="rgb(223,154,38)" fg:x="258" fg:w="2"/><text x="2.0435%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.01%)</title><rect x="1.7935%" y="741" width="0.0139%" height="15" fill="rgb(251,22,52)" fg:x="258" fg:w="2"/><text x="2.0435%" y="751.50"></text></g><g><title>core::fmt::write (2 samples, 0.01%)</title><rect x="1.7935%" y="725" width="0.0139%" height="15" fill="rgb(229,209,22)" fg:x="258" fg:w="2"/><text x="2.0435%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="1.7935%" y="709" width="0.0139%" height="15" fill="rgb(234,138,34)" fg:x="258" fg:w="2"/><text x="2.0435%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="1.7935%" y="693" width="0.0139%" height="15" fill="rgb(212,95,11)" fg:x="258" fg:w="2"/><text x="2.0435%" y="703.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.01%)</title><rect x="1.7935%" y="677" width="0.0139%" height="15" fill="rgb(240,179,47)" fg:x="258" fg:w="2"/><text x="2.0435%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="1.7935%" y="661" width="0.0139%" height="15" fill="rgb(240,163,11)" fg:x="258" fg:w="2"/><text x="2.0435%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="1.7935%" y="645" width="0.0139%" height="15" fill="rgb(236,37,12)" fg:x="258" fg:w="2"/><text x="2.0435%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="1.7935%" y="629" width="0.0139%" height="15" fill="rgb(232,164,16)" fg:x="258" fg:w="2"/><text x="2.0435%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="1.7935%" y="613" width="0.0139%" height="15" fill="rgb(244,205,15)" fg:x="258" fg:w="2"/><text x="2.0435%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="1.7935%" y="597" width="0.0139%" height="15" fill="rgb(223,117,47)" fg:x="258" fg:w="2"/><text x="2.0435%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="1.7935%" y="581" width="0.0139%" height="15" fill="rgb(244,107,35)" fg:x="258" fg:w="2"/><text x="2.0435%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="1.7935%" y="565" width="0.0139%" height="15" fill="rgb(205,140,8)" fg:x="258" fg:w="2"/><text x="2.0435%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="1.7935%" y="549" width="0.0139%" height="15" fill="rgb(228,84,46)" fg:x="258" fg:w="2"/><text x="2.0435%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="1.7935%" y="533" width="0.0139%" height="15" fill="rgb(254,188,9)" fg:x="258" fg:w="2"/><text x="2.0435%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="1.7935%" y="517" width="0.0139%" height="15" fill="rgb(206,112,54)" fg:x="258" fg:w="2"/><text x="2.0435%" y="527.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="1.7935%" y="501" width="0.0139%" height="15" fill="rgb(216,84,49)" fg:x="258" fg:w="2"/><text x="2.0435%" y="511.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="1.7935%" y="485" width="0.0139%" height="15" fill="rgb(214,194,35)" fg:x="258" fg:w="2"/><text x="2.0435%" y="495.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="1.7935%" y="469" width="0.0139%" height="15" fill="rgb(249,28,3)" fg:x="258" fg:w="2"/><text x="2.0435%" y="479.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.01%)</title><rect x="1.8422%" y="453" width="0.0139%" height="15" fill="rgb(222,56,52)" fg:x="265" fg:w="2"/><text x="2.0922%" y="463.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.02%)</title><rect x="1.8978%" y="437" width="0.0209%" height="15" fill="rgb(245,217,50)" fg:x="273" fg:w="3"/><text x="2.1478%" y="447.50"></text></g><g><title>exc_page_fault (3 samples, 0.02%)</title><rect x="1.8978%" y="421" width="0.0209%" height="15" fill="rgb(213,201,24)" fg:x="273" fg:w="3"/><text x="2.1478%" y="431.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.02%)</title><rect x="1.8978%" y="405" width="0.0209%" height="15" fill="rgb(248,116,28)" fg:x="273" fg:w="3"/><text x="2.1478%" y="415.50"></text></g><g><title>handle_mm_fault (3 samples, 0.02%)</title><rect x="1.8978%" y="389" width="0.0209%" height="15" fill="rgb(219,72,43)" fg:x="273" fg:w="3"/><text x="2.1478%" y="399.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.02%)</title><rect x="1.8978%" y="373" width="0.0209%" height="15" fill="rgb(209,138,14)" fg:x="273" fg:w="3"/><text x="2.1478%" y="383.50"></text></g><g><title>do_anonymous_page (2 samples, 0.01%)</title><rect x="1.9048%" y="357" width="0.0139%" height="15" fill="rgb(222,18,33)" fg:x="274" fg:w="2"/><text x="2.1548%" y="367.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="1.9048%" y="341" width="0.0139%" height="15" fill="rgb(213,199,7)" fg:x="274" fg:w="2"/><text x="2.1548%" y="351.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="1.9048%" y="325" width="0.0139%" height="15" fill="rgb(250,110,10)" fg:x="274" fg:w="2"/><text x="2.1548%" y="335.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="1.9048%" y="309" width="0.0139%" height="15" fill="rgb(248,123,6)" fg:x="274" fg:w="2"/><text x="2.1548%" y="319.50"></text></g><g><title>alloc::fmt::format (17 samples, 0.12%)</title><rect x="1.8074%" y="757" width="0.1182%" height="15" fill="rgb(206,91,31)" fg:x="260" fg:w="17"/><text x="2.0574%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (17 samples, 0.12%)</title><rect x="1.8074%" y="741" width="0.1182%" height="15" fill="rgb(211,154,13)" fg:x="260" fg:w="17"/><text x="2.0574%" y="751.50"></text></g><g><title>core::fmt::write (17 samples, 0.12%)</title><rect x="1.8074%" y="725" width="0.1182%" height="15" fill="rgb(225,148,7)" fg:x="260" fg:w="17"/><text x="2.0574%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (17 samples, 0.12%)</title><rect x="1.8074%" y="709" width="0.1182%" height="15" fill="rgb(220,160,43)" fg:x="260" fg:w="17"/><text x="2.0574%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (17 samples, 0.12%)</title><rect x="1.8074%" y="693" width="0.1182%" height="15" fill="rgb(213,52,39)" fg:x="260" fg:w="17"/><text x="2.0574%" y="703.50"></text></g><g><title>alloc::string::String::push_str (17 samples, 0.12%)</title><rect x="1.8074%" y="677" width="0.1182%" height="15" fill="rgb(243,137,7)" fg:x="260" fg:w="17"/><text x="2.0574%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (17 samples, 0.12%)</title><rect x="1.8074%" y="661" width="0.1182%" height="15" fill="rgb(230,79,13)" fg:x="260" fg:w="17"/><text x="2.0574%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.12%)</title><rect x="1.8074%" y="645" width="0.1182%" height="15" fill="rgb(247,105,23)" fg:x="260" fg:w="17"/><text x="2.0574%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (17 samples, 0.12%)</title><rect x="1.8074%" y="629" width="0.1182%" height="15" fill="rgb(223,179,41)" fg:x="260" fg:w="17"/><text x="2.0574%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (17 samples, 0.12%)</title><rect x="1.8074%" y="613" width="0.1182%" height="15" fill="rgb(218,9,34)" fg:x="260" fg:w="17"/><text x="2.0574%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.12%)</title><rect x="1.8074%" y="597" width="0.1182%" height="15" fill="rgb(222,106,8)" fg:x="260" fg:w="17"/><text x="2.0574%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.12%)</title><rect x="1.8074%" y="581" width="0.1182%" height="15" fill="rgb(211,220,0)" fg:x="260" fg:w="17"/><text x="2.0574%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.12%)</title><rect x="1.8074%" y="565" width="0.1182%" height="15" fill="rgb(229,52,16)" fg:x="260" fg:w="17"/><text x="2.0574%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.12%)</title><rect x="1.8074%" y="549" width="0.1182%" height="15" fill="rgb(212,155,18)" fg:x="260" fg:w="17"/><text x="2.0574%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 0.12%)</title><rect x="1.8074%" y="533" width="0.1182%" height="15" fill="rgb(242,21,14)" fg:x="260" fg:w="17"/><text x="2.0574%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (17 samples, 0.12%)</title><rect x="1.8074%" y="517" width="0.1182%" height="15" fill="rgb(222,19,48)" fg:x="260" fg:w="17"/><text x="2.0574%" y="527.50"></text></g><g><title>alloc::alloc::realloc (17 samples, 0.12%)</title><rect x="1.8074%" y="501" width="0.1182%" height="15" fill="rgb(232,45,27)" fg:x="260" fg:w="17"/><text x="2.0574%" y="511.50"></text></g><g><title>__GI___libc_realloc (17 samples, 0.12%)</title><rect x="1.8074%" y="485" width="0.1182%" height="15" fill="rgb(249,103,42)" fg:x="260" fg:w="17"/><text x="2.0574%" y="495.50"></text></g><g><title>_int_realloc (17 samples, 0.12%)</title><rect x="1.8074%" y="469" width="0.1182%" height="15" fill="rgb(246,81,33)" fg:x="260" fg:w="17"/><text x="2.0574%" y="479.50"></text></g><g><title>_int_malloc (10 samples, 0.07%)</title><rect x="1.8561%" y="453" width="0.0695%" height="15" fill="rgb(252,33,42)" fg:x="267" fg:w="10"/><text x="2.1061%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="2.1411%" y="517" width="0.0139%" height="15" fill="rgb(209,212,41)" fg:x="308" fg:w="2"/><text x="2.3911%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (2 samples, 0.01%)</title><rect x="2.1411%" y="501" width="0.0139%" height="15" fill="rgb(207,154,6)" fg:x="308" fg:w="2"/><text x="2.3911%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (2 samples, 0.01%)</title><rect x="2.1411%" y="485" width="0.0139%" height="15" fill="rgb(223,64,47)" fg:x="308" fg:w="2"/><text x="2.3911%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.06%)</title><rect x="2.1550%" y="517" width="0.0556%" height="15" fill="rgb(211,161,38)" fg:x="310" fg:w="8"/><text x="2.4050%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.06%)</title><rect x="2.1550%" y="501" width="0.0556%" height="15" fill="rgb(219,138,40)" fg:x="310" fg:w="8"/><text x="2.4050%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (46 samples, 0.32%)</title><rect x="1.9326%" y="613" width="0.3198%" height="15" fill="rgb(241,228,46)" fg:x="278" fg:w="46"/><text x="2.1826%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (46 samples, 0.32%)</title><rect x="1.9326%" y="597" width="0.3198%" height="15" fill="rgb(223,209,38)" fg:x="278" fg:w="46"/><text x="2.1826%" y="607.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.32%)</title><rect x="1.9326%" y="581" width="0.3198%" height="15" fill="rgb(236,164,45)" fg:x="278" fg:w="46"/><text x="2.1826%" y="591.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (46 samples, 0.32%)</title><rect x="1.9326%" y="565" width="0.3198%" height="15" fill="rgb(231,15,5)" fg:x="278" fg:w="46"/><text x="2.1826%" y="575.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (46 samples, 0.32%)</title><rect x="1.9326%" y="549" width="0.3198%" height="15" fill="rgb(252,35,15)" fg:x="278" fg:w="46"/><text x="2.1826%" y="559.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (44 samples, 0.31%)</title><rect x="1.9465%" y="533" width="0.3059%" height="15" fill="rgb(248,181,18)" fg:x="280" fg:w="44"/><text x="2.1965%" y="543.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (6 samples, 0.04%)</title><rect x="2.2106%" y="517" width="0.0417%" height="15" fill="rgb(233,39,42)" fg:x="318" fg:w="6"/><text x="2.4606%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.01%)</title><rect x="2.3080%" y="533" width="0.0139%" height="15" fill="rgb(238,110,33)" fg:x="332" fg:w="2"/><text x="2.5580%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.01%)</title><rect x="2.3080%" y="517" width="0.0139%" height="15" fill="rgb(233,195,10)" fg:x="332" fg:w="2"/><text x="2.5580%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.42%)</title><rect x="1.9326%" y="741" width="0.4241%" height="15" fill="rgb(254,105,3)" fg:x="278" fg:w="61"/><text x="2.1826%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (61 samples, 0.42%)</title><rect x="1.9326%" y="725" width="0.4241%" height="15" fill="rgb(221,225,9)" fg:x="278" fg:w="61"/><text x="2.1826%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (61 samples, 0.42%)</title><rect x="1.9326%" y="709" width="0.4241%" height="15" fill="rgb(224,227,45)" fg:x="278" fg:w="61"/><text x="2.1826%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (61 samples, 0.42%)</title><rect x="1.9326%" y="693" width="0.4241%" height="15" fill="rgb(229,198,43)" fg:x="278" fg:w="61"/><text x="2.1826%" y="703.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (61 samples, 0.42%)</title><rect x="1.9326%" y="677" width="0.4241%" height="15" fill="rgb(206,209,35)" fg:x="278" fg:w="61"/><text x="2.1826%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (61 samples, 0.42%)</title><rect x="1.9326%" y="661" width="0.4241%" height="15" fill="rgb(245,195,53)" fg:x="278" fg:w="61"/><text x="2.1826%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (61 samples, 0.42%)</title><rect x="1.9326%" y="645" width="0.4241%" height="15" fill="rgb(240,92,26)" fg:x="278" fg:w="61"/><text x="2.1826%" y="655.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (61 samples, 0.42%)</title><rect x="1.9326%" y="629" width="0.4241%" height="15" fill="rgb(207,40,23)" fg:x="278" fg:w="61"/><text x="2.1826%" y="639.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (15 samples, 0.10%)</title><rect x="2.2523%" y="613" width="0.1043%" height="15" fill="rgb(223,111,35)" fg:x="324" fg:w="15"/><text x="2.5023%" y="623.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (15 samples, 0.10%)</title><rect x="2.2523%" y="597" width="0.1043%" height="15" fill="rgb(229,147,28)" fg:x="324" fg:w="15"/><text x="2.5023%" y="607.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (15 samples, 0.10%)</title><rect x="2.2523%" y="581" width="0.1043%" height="15" fill="rgb(211,29,28)" fg:x="324" fg:w="15"/><text x="2.5023%" y="591.50"></text></g><g><title>core::str::pattern::StrSearcher::new (15 samples, 0.10%)</title><rect x="2.2523%" y="565" width="0.1043%" height="15" fill="rgb(228,72,33)" fg:x="324" fg:w="15"/><text x="2.5023%" y="575.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (8 samples, 0.06%)</title><rect x="2.3010%" y="549" width="0.0556%" height="15" fill="rgb(205,214,31)" fg:x="331" fg:w="8"/><text x="2.5510%" y="559.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (3 samples, 0.02%)</title><rect x="2.3358%" y="533" width="0.0209%" height="15" fill="rgb(224,111,15)" fg:x="336" fg:w="3"/><text x="2.5858%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (2 samples, 0.01%)</title><rect x="2.3775%" y="533" width="0.0139%" height="15" fill="rgb(253,21,26)" fg:x="342" fg:w="2"/><text x="2.6275%" y="543.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="2.4470%" y="437" width="0.0139%" height="15" fill="rgb(245,139,43)" fg:x="352" fg:w="2"/><text x="2.6970%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.08%)</title><rect x="2.4053%" y="517" width="0.0834%" height="15" fill="rgb(252,170,7)" fg:x="346" fg:w="12"/><text x="2.6553%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.08%)</title><rect x="2.4053%" y="501" width="0.0834%" height="15" fill="rgb(231,118,14)" fg:x="346" fg:w="12"/><text x="2.6553%" y="511.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.08%)</title><rect x="2.4053%" y="485" width="0.0834%" height="15" fill="rgb(238,83,0)" fg:x="346" fg:w="12"/><text x="2.6553%" y="495.50"></text></g><g><title>__GI___libc_realloc (12 samples, 0.08%)</title><rect x="2.4053%" y="469" width="0.0834%" height="15" fill="rgb(221,39,39)" fg:x="346" fg:w="12"/><text x="2.6553%" y="479.50"></text></g><g><title>_int_realloc (11 samples, 0.08%)</title><rect x="2.4122%" y="453" width="0.0765%" height="15" fill="rgb(222,119,46)" fg:x="347" fg:w="11"/><text x="2.6622%" y="463.50"></text></g><g><title>_int_malloc (4 samples, 0.03%)</title><rect x="2.4609%" y="437" width="0.0278%" height="15" fill="rgb(222,165,49)" fg:x="354" fg:w="4"/><text x="2.7109%" y="447.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="2.4887%" y="517" width="0.0209%" height="15" fill="rgb(219,113,52)" fg:x="358" fg:w="3"/><text x="2.7387%" y="527.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="2.4957%" y="501" width="0.0139%" height="15" fill="rgb(214,7,15)" fg:x="359" fg:w="2"/><text x="2.7457%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (21 samples, 0.15%)</title><rect x="2.3775%" y="597" width="0.1460%" height="15" fill="rgb(235,32,4)" fg:x="342" fg:w="21"/><text x="2.6275%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.15%)</title><rect x="2.3775%" y="581" width="0.1460%" height="15" fill="rgb(238,90,54)" fg:x="342" fg:w="21"/><text x="2.6275%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 0.15%)</title><rect x="2.3775%" y="565" width="0.1460%" height="15" fill="rgb(213,208,19)" fg:x="342" fg:w="21"/><text x="2.6275%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.15%)</title><rect x="2.3775%" y="549" width="0.1460%" height="15" fill="rgb(233,156,4)" fg:x="342" fg:w="21"/><text x="2.6275%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.13%)</title><rect x="2.3914%" y="533" width="0.1321%" height="15" fill="rgb(207,194,5)" fg:x="344" fg:w="19"/><text x="2.6414%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="2.5235%" y="597" width="0.0139%" height="15" fill="rgb(206,111,30)" fg:x="363" fg:w="2"/><text x="2.7735%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (25 samples, 0.17%)</title><rect x="2.3705%" y="693" width="0.1738%" height="15" fill="rgb(243,70,54)" fg:x="341" fg:w="25"/><text x="2.6205%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (25 samples, 0.17%)</title><rect x="2.3705%" y="677" width="0.1738%" height="15" fill="rgb(242,28,8)" fg:x="341" fg:w="25"/><text x="2.6205%" y="687.50"></text></g><g><title>alloc::string::String::push_str (25 samples, 0.17%)</title><rect x="2.3705%" y="661" width="0.1738%" height="15" fill="rgb(219,106,18)" fg:x="341" fg:w="25"/><text x="2.6205%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (25 samples, 0.17%)</title><rect x="2.3705%" y="645" width="0.1738%" height="15" fill="rgb(244,222,10)" fg:x="341" fg:w="25"/><text x="2.6205%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (25 samples, 0.17%)</title><rect x="2.3705%" y="629" width="0.1738%" height="15" fill="rgb(236,179,52)" fg:x="341" fg:w="25"/><text x="2.6205%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (25 samples, 0.17%)</title><rect x="2.3705%" y="613" width="0.1738%" height="15" fill="rgb(213,23,39)" fg:x="341" fg:w="25"/><text x="2.6205%" y="623.50"></text></g><g><title>alloc::fmt::format (29 samples, 0.20%)</title><rect x="2.3566%" y="741" width="0.2016%" height="15" fill="rgb(238,48,10)" fg:x="339" fg:w="29"/><text x="2.6066%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (28 samples, 0.19%)</title><rect x="2.3636%" y="725" width="0.1946%" height="15" fill="rgb(251,196,23)" fg:x="340" fg:w="28"/><text x="2.6136%" y="735.50"></text></g><g><title>core::fmt::write (27 samples, 0.19%)</title><rect x="2.3705%" y="709" width="0.1877%" height="15" fill="rgb(250,152,24)" fg:x="341" fg:w="27"/><text x="2.6205%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.03%)</title><rect x="2.5652%" y="741" width="0.0278%" height="15" fill="rgb(209,150,17)" fg:x="369" fg:w="4"/><text x="2.8152%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.03%)</title><rect x="2.5652%" y="725" width="0.0278%" height="15" fill="rgb(234,202,34)" fg:x="369" fg:w="4"/><text x="2.8152%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.03%)</title><rect x="2.5652%" y="709" width="0.0278%" height="15" fill="rgb(253,148,53)" fg:x="369" fg:w="4"/><text x="2.8152%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.03%)</title><rect x="2.5652%" y="693" width="0.0278%" height="15" fill="rgb(218,129,16)" fg:x="369" fg:w="4"/><text x="2.8152%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="2.5652%" y="677" width="0.0278%" height="15" fill="rgb(216,85,19)" fg:x="369" fg:w="4"/><text x="2.8152%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="2.5652%" y="661" width="0.0278%" height="15" fill="rgb(235,228,7)" fg:x="369" fg:w="4"/><text x="2.8152%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="2.5652%" y="645" width="0.0278%" height="15" fill="rgb(245,175,0)" fg:x="369" fg:w="4"/><text x="2.8152%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="2.5791%" y="629" width="0.0139%" height="15" fill="rgb(208,168,36)" fg:x="371" fg:w="2"/><text x="2.8291%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.02%)</title><rect x="2.6069%" y="581" width="0.0209%" height="15" fill="rgb(246,171,24)" fg:x="375" fg:w="3"/><text x="2.8569%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.04%)</title><rect x="2.5999%" y="629" width="0.0417%" height="15" fill="rgb(215,142,24)" fg:x="374" fg:w="6"/><text x="2.8499%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="2.6069%" y="613" width="0.0348%" height="15" fill="rgb(250,187,7)" fg:x="375" fg:w="5"/><text x="2.8569%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="2.6069%" y="597" width="0.0348%" height="15" fill="rgb(228,66,33)" fg:x="375" fg:w="5"/><text x="2.8569%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.01%)</title><rect x="2.6277%" y="581" width="0.0139%" height="15" fill="rgb(234,215,21)" fg:x="378" fg:w="2"/><text x="2.8777%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (8 samples, 0.06%)</title><rect x="2.5930%" y="661" width="0.0556%" height="15" fill="rgb(222,191,20)" fg:x="373" fg:w="8"/><text x="2.8430%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (7 samples, 0.05%)</title><rect x="2.5999%" y="645" width="0.0487%" height="15" fill="rgb(245,79,54)" fg:x="374" fg:w="7"/><text x="2.8499%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="2.6764%" y="597" width="0.0139%" height="15" fill="rgb(240,10,37)" fg:x="385" fg:w="2"/><text x="2.9264%" y="607.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (15 samples, 0.10%)</title><rect x="2.5930%" y="741" width="0.1043%" height="15" fill="rgb(214,192,32)" fg:x="373" fg:w="15"/><text x="2.8430%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (15 samples, 0.10%)</title><rect x="2.5930%" y="725" width="0.1043%" height="15" fill="rgb(209,36,54)" fg:x="373" fg:w="15"/><text x="2.8430%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (15 samples, 0.10%)</title><rect x="2.5930%" y="709" width="0.1043%" height="15" fill="rgb(220,10,11)" fg:x="373" fg:w="15"/><text x="2.8430%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15 samples, 0.10%)</title><rect x="2.5930%" y="693" width="0.1043%" height="15" fill="rgb(221,106,17)" fg:x="373" fg:w="15"/><text x="2.8430%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.10%)</title><rect x="2.5930%" y="677" width="0.1043%" height="15" fill="rgb(251,142,44)" fg:x="373" fg:w="15"/><text x="2.8430%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="2.6486%" y="661" width="0.0487%" height="15" fill="rgb(238,13,15)" fg:x="381" fg:w="7"/><text x="2.8986%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="2.6486%" y="645" width="0.0487%" height="15" fill="rgb(208,107,27)" fg:x="381" fg:w="7"/><text x="2.8986%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="2.6486%" y="629" width="0.0487%" height="15" fill="rgb(205,136,37)" fg:x="381" fg:w="7"/><text x="2.8986%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.02%)</title><rect x="2.6764%" y="613" width="0.0209%" height="15" fill="rgb(250,205,27)" fg:x="385" fg:w="3"/><text x="2.9264%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="2.7042%" y="677" width="0.0139%" height="15" fill="rgb(210,80,43)" fg:x="389" fg:w="2"/><text x="2.9542%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.01%)</title><rect x="2.7042%" y="661" width="0.0139%" height="15" fill="rgb(247,160,36)" fg:x="389" fg:w="2"/><text x="2.9542%" y="671.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.02%)</title><rect x="2.7042%" y="693" width="0.0209%" height="15" fill="rgb(234,13,49)" fg:x="389" fg:w="3"/><text x="2.9542%" y="703.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (5 samples, 0.03%)</title><rect x="2.6973%" y="741" width="0.0348%" height="15" fill="rgb(234,122,0)" fg:x="388" fg:w="5"/><text x="2.9473%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (5 samples, 0.03%)</title><rect x="2.6973%" y="725" width="0.0348%" height="15" fill="rgb(207,146,38)" fg:x="388" fg:w="5"/><text x="2.9473%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.03%)</title><rect x="2.6973%" y="709" width="0.0348%" height="15" fill="rgb(207,177,25)" fg:x="388" fg:w="5"/><text x="2.9473%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (30 samples, 0.21%)</title><rect x="2.7529%" y="597" width="0.2086%" height="15" fill="rgb(211,178,42)" fg:x="396" fg:w="30"/><text x="3.0029%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (23 samples, 0.16%)</title><rect x="2.8015%" y="581" width="0.1599%" height="15" fill="rgb(230,69,54)" fg:x="403" fg:w="23"/><text x="3.0515%" y="591.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.14%)</title><rect x="2.8224%" y="565" width="0.1390%" height="15" fill="rgb(214,135,41)" fg:x="406" fg:w="20"/><text x="3.0724%" y="575.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (20 samples, 0.14%)</title><rect x="2.8224%" y="549" width="0.1390%" height="15" fill="rgb(237,67,25)" fg:x="406" fg:w="20"/><text x="3.0724%" y="559.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (20 samples, 0.14%)</title><rect x="2.8224%" y="533" width="0.1390%" height="15" fill="rgb(222,189,50)" fg:x="406" fg:w="20"/><text x="3.0724%" y="543.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (19 samples, 0.13%)</title><rect x="2.8293%" y="517" width="0.1321%" height="15" fill="rgb(245,148,34)" fg:x="407" fg:w="19"/><text x="3.0793%" y="527.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (7 samples, 0.05%)</title><rect x="2.9128%" y="501" width="0.0487%" height="15" fill="rgb(222,29,6)" fg:x="419" fg:w="7"/><text x="3.1628%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (37 samples, 0.26%)</title><rect x="2.7390%" y="645" width="0.2572%" height="15" fill="rgb(221,189,43)" fg:x="394" fg:w="37"/><text x="2.9890%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (37 samples, 0.26%)</title><rect x="2.7390%" y="629" width="0.2572%" height="15" fill="rgb(207,36,27)" fg:x="394" fg:w="37"/><text x="2.9890%" y="639.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (37 samples, 0.26%)</title><rect x="2.7390%" y="613" width="0.2572%" height="15" fill="rgb(217,90,24)" fg:x="394" fg:w="37"/><text x="2.9890%" y="623.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (5 samples, 0.03%)</title><rect x="2.9614%" y="597" width="0.0348%" height="15" fill="rgb(224,66,35)" fg:x="426" fg:w="5"/><text x="3.2114%" y="607.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (5 samples, 0.03%)</title><rect x="2.9614%" y="581" width="0.0348%" height="15" fill="rgb(221,13,50)" fg:x="426" fg:w="5"/><text x="3.2114%" y="591.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (5 samples, 0.03%)</title><rect x="2.9614%" y="565" width="0.0348%" height="15" fill="rgb(236,68,49)" fg:x="426" fg:w="5"/><text x="3.2114%" y="575.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3 samples, 0.02%)</title><rect x="2.9753%" y="549" width="0.0209%" height="15" fill="rgb(229,146,28)" fg:x="428" fg:w="3"/><text x="3.2253%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.26%)</title><rect x="2.7390%" y="725" width="0.2642%" height="15" fill="rgb(225,31,38)" fg:x="394" fg:w="38"/><text x="2.9890%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (38 samples, 0.26%)</title><rect x="2.7390%" y="709" width="0.2642%" height="15" fill="rgb(250,208,3)" fg:x="394" fg:w="38"/><text x="2.9890%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (38 samples, 0.26%)</title><rect x="2.7390%" y="693" width="0.2642%" height="15" fill="rgb(246,54,23)" fg:x="394" fg:w="38"/><text x="2.9890%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (38 samples, 0.26%)</title><rect x="2.7390%" y="677" width="0.2642%" height="15" fill="rgb(243,76,11)" fg:x="394" fg:w="38"/><text x="2.9890%" y="687.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (38 samples, 0.26%)</title><rect x="2.7390%" y="661" width="0.2642%" height="15" fill="rgb(245,21,50)" fg:x="394" fg:w="38"/><text x="2.9890%" y="671.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (2 samples, 0.01%)</title><rect x="3.0170%" y="709" width="0.0139%" height="15" fill="rgb(228,9,43)" fg:x="434" fg:w="2"/><text x="3.2670%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.01%)</title><rect x="3.0170%" y="693" width="0.0139%" height="15" fill="rgb(208,100,47)" fg:x="434" fg:w="2"/><text x="3.2670%" y="703.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.01%)</title><rect x="3.0170%" y="677" width="0.0139%" height="15" fill="rgb(232,26,8)" fg:x="434" fg:w="2"/><text x="3.2670%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="3.0170%" y="661" width="0.0139%" height="15" fill="rgb(216,166,38)" fg:x="434" fg:w="2"/><text x="3.2670%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="3.0170%" y="645" width="0.0139%" height="15" fill="rgb(251,202,51)" fg:x="434" fg:w="2"/><text x="3.2670%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="3.0379%" y="581" width="0.0139%" height="15" fill="rgb(254,216,34)" fg:x="437" fg:w="2"/><text x="3.2879%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="3.0379%" y="565" width="0.0139%" height="15" fill="rgb(251,32,27)" fg:x="437" fg:w="2"/><text x="3.2879%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="3.0379%" y="549" width="0.0139%" height="15" fill="rgb(208,127,28)" fg:x="437" fg:w="2"/><text x="3.2879%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="3.0379%" y="533" width="0.0139%" height="15" fill="rgb(224,137,22)" fg:x="437" fg:w="2"/><text x="3.2879%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="3.0379%" y="517" width="0.0139%" height="15" fill="rgb(254,70,32)" fg:x="437" fg:w="2"/><text x="3.2879%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="3.0518%" y="581" width="0.0139%" height="15" fill="rgb(229,75,37)" fg:x="439" fg:w="2"/><text x="3.3018%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.04%)</title><rect x="3.0309%" y="677" width="0.0417%" height="15" fill="rgb(252,64,23)" fg:x="436" fg:w="6"/><text x="3.2809%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.04%)</title><rect x="3.0309%" y="661" width="0.0417%" height="15" fill="rgb(232,162,48)" fg:x="436" fg:w="6"/><text x="3.2809%" y="671.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.04%)</title><rect x="3.0309%" y="645" width="0.0417%" height="15" fill="rgb(246,160,12)" fg:x="436" fg:w="6"/><text x="3.2809%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.04%)</title><rect x="3.0309%" y="629" width="0.0417%" height="15" fill="rgb(247,166,0)" fg:x="436" fg:w="6"/><text x="3.2809%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.04%)</title><rect x="3.0309%" y="613" width="0.0417%" height="15" fill="rgb(249,219,21)" fg:x="436" fg:w="6"/><text x="3.2809%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.04%)</title><rect x="3.0309%" y="597" width="0.0417%" height="15" fill="rgb(205,209,3)" fg:x="436" fg:w="6"/><text x="3.2809%" y="607.50"></text></g><g><title>alloc::fmt::format (11 samples, 0.08%)</title><rect x="3.0031%" y="725" width="0.0765%" height="15" fill="rgb(243,44,1)" fg:x="432" fg:w="11"/><text x="3.2531%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.05%)</title><rect x="3.0309%" y="709" width="0.0487%" height="15" fill="rgb(206,159,16)" fg:x="436" fg:w="7"/><text x="3.2809%" y="719.50"></text></g><g><title>core::fmt::write (7 samples, 0.05%)</title><rect x="3.0309%" y="693" width="0.0487%" height="15" fill="rgb(244,77,30)" fg:x="436" fg:w="7"/><text x="3.2809%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="3.0865%" y="661" width="0.0139%" height="15" fill="rgb(218,69,12)" fg:x="444" fg:w="2"/><text x="3.3365%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="3.0865%" y="645" width="0.0139%" height="15" fill="rgb(212,87,7)" fg:x="444" fg:w="2"/><text x="3.3365%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="3.0865%" y="629" width="0.0139%" height="15" fill="rgb(245,114,25)" fg:x="444" fg:w="2"/><text x="3.3365%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="3.0865%" y="613" width="0.0139%" height="15" fill="rgb(210,61,42)" fg:x="444" fg:w="2"/><text x="3.3365%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.02%)</title><rect x="3.0865%" y="725" width="0.0209%" height="15" fill="rgb(211,52,33)" fg:x="444" fg:w="3"/><text x="3.3365%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.02%)</title><rect x="3.0865%" y="709" width="0.0209%" height="15" fill="rgb(234,58,33)" fg:x="444" fg:w="3"/><text x="3.3365%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.02%)</title><rect x="3.0865%" y="693" width="0.0209%" height="15" fill="rgb(220,115,36)" fg:x="444" fg:w="3"/><text x="3.3365%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.02%)</title><rect x="3.0865%" y="677" width="0.0209%" height="15" fill="rgb(243,153,54)" fg:x="444" fg:w="3"/><text x="3.3365%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.02%)</title><rect x="3.1074%" y="565" width="0.0209%" height="15" fill="rgb(251,47,18)" fg:x="447" fg:w="3"/><text x="3.3574%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.02%)</title><rect x="3.1074%" y="549" width="0.0209%" height="15" fill="rgb(242,102,42)" fg:x="447" fg:w="3"/><text x="3.3574%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.03%)</title><rect x="3.1074%" y="661" width="0.0348%" height="15" fill="rgb(234,31,38)" fg:x="447" fg:w="5"/><text x="3.3574%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (5 samples, 0.03%)</title><rect x="3.1074%" y="645" width="0.0348%" height="15" fill="rgb(221,117,51)" fg:x="447" fg:w="5"/><text x="3.3574%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (5 samples, 0.03%)</title><rect x="3.1074%" y="629" width="0.0348%" height="15" fill="rgb(212,20,18)" fg:x="447" fg:w="5"/><text x="3.3574%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="3.1074%" y="613" width="0.0348%" height="15" fill="rgb(245,133,36)" fg:x="447" fg:w="5"/><text x="3.3574%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="3.1074%" y="597" width="0.0348%" height="15" fill="rgb(212,6,19)" fg:x="447" fg:w="5"/><text x="3.3574%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="3.1074%" y="581" width="0.0348%" height="15" fill="rgb(218,1,36)" fg:x="447" fg:w="5"/><text x="3.3574%" y="591.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (7 samples, 0.05%)</title><rect x="3.1074%" y="725" width="0.0487%" height="15" fill="rgb(246,84,54)" fg:x="447" fg:w="7"/><text x="3.3574%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (7 samples, 0.05%)</title><rect x="3.1074%" y="709" width="0.0487%" height="15" fill="rgb(242,110,6)" fg:x="447" fg:w="7"/><text x="3.3574%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (7 samples, 0.05%)</title><rect x="3.1074%" y="693" width="0.0487%" height="15" fill="rgb(214,47,5)" fg:x="447" fg:w="7"/><text x="3.3574%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.05%)</title><rect x="3.1074%" y="677" width="0.0487%" height="15" fill="rgb(218,159,25)" fg:x="447" fg:w="7"/><text x="3.3574%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.01%)</title><rect x="3.1422%" y="661" width="0.0139%" height="15" fill="rgb(215,211,28)" fg:x="452" fg:w="2"/><text x="3.3922%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="3.1422%" y="645" width="0.0139%" height="15" fill="rgb(238,59,32)" fg:x="452" fg:w="2"/><text x="3.3922%" y="655.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (3 samples, 0.02%)</title><rect x="3.1561%" y="725" width="0.0209%" height="15" fill="rgb(226,82,3)" fg:x="454" fg:w="3"/><text x="3.4061%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="3.1561%" y="709" width="0.0209%" height="15" fill="rgb(240,164,32)" fg:x="454" fg:w="3"/><text x="3.4061%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="3.1561%" y="693" width="0.0209%" height="15" fill="rgb(232,46,7)" fg:x="454" fg:w="3"/><text x="3.4061%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.01%)</title><rect x="3.1630%" y="677" width="0.0139%" height="15" fill="rgb(229,129,53)" fg:x="455" fg:w="2"/><text x="3.4130%" y="687.50"></text></g><g><title>[unknown] (452 samples, 3.14%)</title><rect x="0.0556%" y="1029" width="3.1422%" height="15" fill="rgb(234,188,29)" fg:x="8" fg:w="452"/><text x="0.3056%" y="1039.50">[un..</text></g><g><title>y2021::main (200 samples, 1.39%)</title><rect x="1.8074%" y="1013" width="1.3903%" height="15" fill="rgb(246,141,4)" fg:x="260" fg:w="200"/><text x="2.0574%" y="1023.50"></text></g><g><title>y2021::d12::main2::run (200 samples, 1.39%)</title><rect x="1.8074%" y="997" width="1.3903%" height="15" fill="rgb(229,23,39)" fg:x="260" fg:w="200"/><text x="2.0574%" y="1007.50"></text></g><g><title>y2021::d12::main2::p02 (200 samples, 1.39%)</title><rect x="1.8074%" y="981" width="1.3903%" height="15" fill="rgb(206,12,3)" fg:x="260" fg:w="200"/><text x="2.0574%" y="991.50"></text></g><g><title>y2021::d12::main2::traverse (200 samples, 1.39%)</title><rect x="1.8074%" y="965" width="1.3903%" height="15" fill="rgb(252,226,20)" fg:x="260" fg:w="200"/><text x="2.0574%" y="975.50"></text></g><g><title>y2021::d12::main2::traverse (200 samples, 1.39%)</title><rect x="1.8074%" y="949" width="1.3903%" height="15" fill="rgb(216,123,35)" fg:x="260" fg:w="200"/><text x="2.0574%" y="959.50"></text></g><g><title>y2021::d12::main2::traverse (200 samples, 1.39%)</title><rect x="1.8074%" y="933" width="1.3903%" height="15" fill="rgb(212,68,40)" fg:x="260" fg:w="200"/><text x="2.0574%" y="943.50"></text></g><g><title>y2021::d12::main2::traverse (200 samples, 1.39%)</title><rect x="1.8074%" y="917" width="1.3903%" height="15" fill="rgb(254,125,32)" fg:x="260" fg:w="200"/><text x="2.0574%" y="927.50"></text></g><g><title>y2021::d12::main2::traverse (200 samples, 1.39%)</title><rect x="1.8074%" y="901" width="1.3903%" height="15" fill="rgb(253,97,22)" fg:x="260" fg:w="200"/><text x="2.0574%" y="911.50"></text></g><g><title>y2021::d12::main2::traverse (200 samples, 1.39%)</title><rect x="1.8074%" y="885" width="1.3903%" height="15" fill="rgb(241,101,14)" fg:x="260" fg:w="200"/><text x="2.0574%" y="895.50"></text></g><g><title>y2021::d12::main2::traverse (200 samples, 1.39%)</title><rect x="1.8074%" y="869" width="1.3903%" height="15" fill="rgb(238,103,29)" fg:x="260" fg:w="200"/><text x="2.0574%" y="879.50"></text></g><g><title>y2021::d12::main2::traverse (200 samples, 1.39%)</title><rect x="1.8074%" y="853" width="1.3903%" height="15" fill="rgb(233,195,47)" fg:x="260" fg:w="200"/><text x="2.0574%" y="863.50"></text></g><g><title>y2021::d12::main2::traverse (200 samples, 1.39%)</title><rect x="1.8074%" y="837" width="1.3903%" height="15" fill="rgb(246,218,30)" fg:x="260" fg:w="200"/><text x="2.0574%" y="847.50"></text></g><g><title>y2021::d12::main2::traverse (200 samples, 1.39%)</title><rect x="1.8074%" y="821" width="1.3903%" height="15" fill="rgb(219,145,47)" fg:x="260" fg:w="200"/><text x="2.0574%" y="831.50"></text></g><g><title>y2021::d12::main2::traverse (200 samples, 1.39%)</title><rect x="1.8074%" y="805" width="1.3903%" height="15" fill="rgb(243,12,26)" fg:x="260" fg:w="200"/><text x="2.0574%" y="815.50"></text></g><g><title>y2021::d12::main2::traverse (200 samples, 1.39%)</title><rect x="1.8074%" y="789" width="1.3903%" height="15" fill="rgb(214,87,16)" fg:x="260" fg:w="200"/><text x="2.0574%" y="799.50"></text></g><g><title>y2021::d12::main2::traverse (200 samples, 1.39%)</title><rect x="1.8074%" y="773" width="1.3903%" height="15" fill="rgb(208,99,42)" fg:x="260" fg:w="200"/><text x="2.0574%" y="783.50"></text></g><g><title>y2021::d12::main2::traverse (182 samples, 1.27%)</title><rect x="1.9326%" y="757" width="1.2652%" height="15" fill="rgb(253,99,2)" fg:x="278" fg:w="182"/><text x="2.1826%" y="767.50"></text></g><g><title>y2021::d12::main2::traverse (67 samples, 0.47%)</title><rect x="2.7320%" y="741" width="0.4658%" height="15" fill="rgb(220,168,23)" fg:x="393" fg:w="67"/><text x="2.9820%" y="751.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.02%)</title><rect x="3.1769%" y="725" width="0.0209%" height="15" fill="rgb(242,38,24)" fg:x="457" fg:w="3"/><text x="3.4269%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="3.1769%" y="709" width="0.0209%" height="15" fill="rgb(225,182,9)" fg:x="457" fg:w="3"/><text x="3.4269%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.02%)</title><rect x="3.1769%" y="693" width="0.0209%" height="15" fill="rgb(243,178,37)" fg:x="457" fg:w="3"/><text x="3.4269%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="3.1769%" y="677" width="0.0209%" height="15" fill="rgb(232,139,19)" fg:x="457" fg:w="3"/><text x="3.4269%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.02%)</title><rect x="3.1769%" y="661" width="0.0209%" height="15" fill="rgb(225,201,24)" fg:x="457" fg:w="3"/><text x="3.4269%" y="671.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3 samples, 0.02%)</title><rect x="3.1769%" y="645" width="0.0209%" height="15" fill="rgb(221,47,46)" fg:x="457" fg:w="3"/><text x="3.4269%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.02%)</title><rect x="3.1769%" y="629" width="0.0209%" height="15" fill="rgb(249,23,13)" fg:x="457" fg:w="3"/><text x="3.4269%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.02%)</title><rect x="3.1769%" y="613" width="0.0209%" height="15" fill="rgb(219,9,5)" fg:x="457" fg:w="3"/><text x="3.4269%" y="623.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (3 samples, 0.02%)</title><rect x="3.1769%" y="597" width="0.0209%" height="15" fill="rgb(254,171,16)" fg:x="457" fg:w="3"/><text x="3.4269%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (3 samples, 0.02%)</title><rect x="3.1769%" y="581" width="0.0209%" height="15" fill="rgb(230,171,20)" fg:x="457" fg:w="3"/><text x="3.4269%" y="591.50"></text></g><g><title>y2021::d01::main::run (2 samples, 0.01%)</title><rect x="3.1978%" y="773" width="0.0139%" height="15" fill="rgb(210,71,41)" fg:x="460" fg:w="2"/><text x="3.4478%" y="783.50"></text></g><g><title>y2021::d02::main::run (2 samples, 0.01%)</title><rect x="3.2117%" y="773" width="0.0139%" height="15" fill="rgb(206,173,20)" fg:x="462" fg:w="2"/><text x="3.4617%" y="783.50"></text></g><g><title>y2021::d03::main::p01 (2 samples, 0.01%)</title><rect x="3.2256%" y="757" width="0.0139%" height="15" fill="rgb(233,88,34)" fg:x="464" fg:w="2"/><text x="3.4756%" y="767.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d (2 samples, 0.01%)</title><rect x="3.2256%" y="741" width="0.0139%" height="15" fill="rgb(223,209,46)" fg:x="464" fg:w="2"/><text x="3.4756%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="3.2256%" y="725" width="0.0139%" height="15" fill="rgb(250,43,18)" fg:x="464" fg:w="2"/><text x="3.4756%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="3.2256%" y="709" width="0.0139%" height="15" fill="rgb(208,13,10)" fg:x="464" fg:w="2"/><text x="3.4756%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="3.2256%" y="693" width="0.0139%" height="15" fill="rgb(212,200,36)" fg:x="464" fg:w="2"/><text x="3.4756%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="3.2256%" y="677" width="0.0139%" height="15" fill="rgb(225,90,30)" fg:x="464" fg:w="2"/><text x="3.4756%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="3.2256%" y="661" width="0.0139%" height="15" fill="rgb(236,182,39)" fg:x="464" fg:w="2"/><text x="3.4756%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.01%)</title><rect x="3.2256%" y="645" width="0.0139%" height="15" fill="rgb(212,144,35)" fg:x="464" fg:w="2"/><text x="3.4756%" y="655.50"></text></g><g><title>y2021::d03::main::run (4 samples, 0.03%)</title><rect x="3.2256%" y="773" width="0.0278%" height="15" fill="rgb(228,63,44)" fg:x="464" fg:w="4"/><text x="3.4756%" y="783.50"></text></g><g><title>y2021::d03::main::p02 (2 samples, 0.01%)</title><rect x="3.2395%" y="757" width="0.0139%" height="15" fill="rgb(228,109,6)" fg:x="466" fg:w="2"/><text x="3.4895%" y="767.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d (2 samples, 0.01%)</title><rect x="3.2395%" y="741" width="0.0139%" height="15" fill="rgb(238,117,24)" fg:x="466" fg:w="2"/><text x="3.4895%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="3.2395%" y="725" width="0.0139%" height="15" fill="rgb(242,26,26)" fg:x="466" fg:w="2"/><text x="3.4895%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="3.2395%" y="709" width="0.0139%" height="15" fill="rgb(221,92,48)" fg:x="466" fg:w="2"/><text x="3.4895%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="3.2395%" y="693" width="0.0139%" height="15" fill="rgb(209,209,32)" fg:x="466" fg:w="2"/><text x="3.4895%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="3.2395%" y="677" width="0.0139%" height="15" fill="rgb(221,70,22)" fg:x="466" fg:w="2"/><text x="3.4895%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="3.2395%" y="661" width="0.0139%" height="15" fill="rgb(248,145,5)" fg:x="466" fg:w="2"/><text x="3.4895%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.01%)</title><rect x="3.2395%" y="645" width="0.0139%" height="15" fill="rgb(226,116,26)" fg:x="466" fg:w="2"/><text x="3.4895%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="3.2395%" y="629" width="0.0139%" height="15" fill="rgb(244,5,17)" fg:x="466" fg:w="2"/><text x="3.4895%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="3.2395%" y="613" width="0.0139%" height="15" fill="rgb(252,159,33)" fg:x="466" fg:w="2"/><text x="3.4895%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="3.2395%" y="597" width="0.0139%" height="15" fill="rgb(206,71,0)" fg:x="466" fg:w="2"/><text x="3.4895%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.01%)</title><rect x="3.2395%" y="581" width="0.0139%" height="15" fill="rgb(233,118,54)" fg:x="466" fg:w="2"/><text x="3.4895%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="3.2395%" y="565" width="0.0139%" height="15" fill="rgb(234,83,48)" fg:x="466" fg:w="2"/><text x="3.4895%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="3.2395%" y="549" width="0.0139%" height="15" fill="rgb(228,3,54)" fg:x="466" fg:w="2"/><text x="3.4895%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="3.2395%" y="533" width="0.0139%" height="15" fill="rgb(226,155,13)" fg:x="466" fg:w="2"/><text x="3.4895%" y="543.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="3.2395%" y="517" width="0.0139%" height="15" fill="rgb(241,28,37)" fg:x="466" fg:w="2"/><text x="3.4895%" y="527.50"></text></g><g><title>std::io::BufRead::read_line (2 samples, 0.01%)</title><rect x="3.2395%" y="501" width="0.0139%" height="15" fill="rgb(233,93,10)" fg:x="466" fg:w="2"/><text x="3.4895%" y="511.50"></text></g><g><title>std::io::append_to_string (2 samples, 0.01%)</title><rect x="3.2395%" y="485" width="0.0139%" height="15" fill="rgb(225,113,19)" fg:x="466" fg:w="2"/><text x="3.4895%" y="495.50"></text></g><g><title>y2021::d04::main::p01 (2 samples, 0.01%)</title><rect x="3.2534%" y="757" width="0.0139%" height="15" fill="rgb(241,2,18)" fg:x="468" fg:w="2"/><text x="3.5034%" y="767.50"></text></g><g><title>y2021::d04::main::bingo_game_from_path (2 samples, 0.01%)</title><rect x="3.2534%" y="741" width="0.0139%" height="15" fill="rgb(228,207,21)" fg:x="468" fg:w="2"/><text x="3.5034%" y="751.50"></text></g><g><title>y2021::d04::main::run (12 samples, 0.08%)</title><rect x="3.2534%" y="773" width="0.0834%" height="15" fill="rgb(213,211,35)" fg:x="468" fg:w="12"/><text x="3.5034%" y="783.50"></text></g><g><title>y2021::d04::main::p02 (10 samples, 0.07%)</title><rect x="3.2673%" y="757" width="0.0695%" height="15" fill="rgb(209,83,10)" fg:x="470" fg:w="10"/><text x="3.5173%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (4 samples, 0.03%)</title><rect x="3.4967%" y="421" width="0.0278%" height="15" fill="rgb(209,164,1)" fg:x="503" fg:w="4"/><text x="3.7467%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (4 samples, 0.03%)</title><rect x="3.4967%" y="405" width="0.0278%" height="15" fill="rgb(213,184,43)" fg:x="503" fg:w="4"/><text x="3.7467%" y="415.50"></text></g><g><title>core::ptr::write (4 samples, 0.03%)</title><rect x="3.4967%" y="389" width="0.0278%" height="15" fill="rgb(231,61,34)" fg:x="503" fg:w="4"/><text x="3.7467%" y="399.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (9 samples, 0.06%)</title><rect x="3.4689%" y="485" width="0.0626%" height="15" fill="rgb(235,75,3)" fg:x="499" fg:w="9"/><text x="3.7189%" y="495.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (9 samples, 0.06%)</title><rect x="3.4689%" y="469" width="0.0626%" height="15" fill="rgb(220,106,47)" fg:x="499" fg:w="9"/><text x="3.7189%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (9 samples, 0.06%)</title><rect x="3.4689%" y="453" width="0.0626%" height="15" fill="rgb(210,196,33)" fg:x="499" fg:w="9"/><text x="3.7189%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (7 samples, 0.05%)</title><rect x="3.4828%" y="437" width="0.0487%" height="15" fill="rgb(229,154,42)" fg:x="501" fg:w="7"/><text x="3.7328%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.03%)</title><rect x="3.5732%" y="293" width="0.0278%" height="15" fill="rgb(228,114,26)" fg:x="514" fg:w="4"/><text x="3.8232%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.03%)</title><rect x="3.5732%" y="309" width="0.0348%" height="15" fill="rgb(208,144,1)" fg:x="514" fg:w="5"/><text x="3.8232%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.09%)</title><rect x="3.6149%" y="293" width="0.0904%" height="15" fill="rgb(239,112,37)" fg:x="520" fg:w="13"/><text x="3.8649%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (23 samples, 0.16%)</title><rect x="3.5593%" y="357" width="0.1599%" height="15" fill="rgb(210,96,50)" fg:x="512" fg:w="23"/><text x="3.8093%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (23 samples, 0.16%)</title><rect x="3.5593%" y="341" width="0.1599%" height="15" fill="rgb(222,178,2)" fg:x="512" fg:w="23"/><text x="3.8093%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (23 samples, 0.16%)</title><rect x="3.5593%" y="325" width="0.1599%" height="15" fill="rgb(226,74,18)" fg:x="512" fg:w="23"/><text x="3.8093%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16 samples, 0.11%)</title><rect x="3.6079%" y="309" width="0.1112%" height="15" fill="rgb(225,67,54)" fg:x="519" fg:w="16"/><text x="3.8579%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="3.7052%" y="293" width="0.0139%" height="15" fill="rgb(251,92,32)" fg:x="533" fg:w="2"/><text x="3.9552%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.03%)</title><rect x="3.7470%" y="245" width="0.0278%" height="15" fill="rgb(228,149,22)" fg:x="539" fg:w="4"/><text x="3.9970%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.05%)</title><rect x="3.7400%" y="261" width="0.0487%" height="15" fill="rgb(243,54,13)" fg:x="538" fg:w="7"/><text x="3.9900%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="3.7748%" y="245" width="0.0139%" height="15" fill="rgb(243,180,28)" fg:x="543" fg:w="2"/><text x="4.0248%" y="255.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.02%)</title><rect x="3.7887%" y="261" width="0.0209%" height="15" fill="rgb(208,167,24)" fg:x="545" fg:w="3"/><text x="4.0387%" y="271.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (38 samples, 0.26%)</title><rect x="3.5523%" y="389" width="0.2642%" height="15" fill="rgb(245,73,45)" fg:x="511" fg:w="38"/><text x="3.8023%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (38 samples, 0.26%)</title><rect x="3.5523%" y="373" width="0.2642%" height="15" fill="rgb(237,203,48)" fg:x="511" fg:w="38"/><text x="3.8023%" y="383.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (14 samples, 0.10%)</title><rect x="3.7192%" y="357" width="0.0973%" height="15" fill="rgb(211,197,16)" fg:x="535" fg:w="14"/><text x="3.9692%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (14 samples, 0.10%)</title><rect x="3.7192%" y="341" width="0.0973%" height="15" fill="rgb(243,99,51)" fg:x="535" fg:w="14"/><text x="3.9692%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (14 samples, 0.10%)</title><rect x="3.7192%" y="325" width="0.0973%" height="15" fill="rgb(215,123,29)" fg:x="535" fg:w="14"/><text x="3.9692%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.10%)</title><rect x="3.7192%" y="309" width="0.0973%" height="15" fill="rgb(239,186,37)" fg:x="535" fg:w="14"/><text x="3.9692%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.10%)</title><rect x="3.7192%" y="293" width="0.0973%" height="15" fill="rgb(252,136,39)" fg:x="535" fg:w="14"/><text x="3.9692%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.10%)</title><rect x="3.7192%" y="277" width="0.0973%" height="15" fill="rgb(223,213,32)" fg:x="535" fg:w="14"/><text x="3.9692%" y="287.50"></text></g><g><title>clear_page_rep (8 samples, 0.06%)</title><rect x="3.8512%" y="197" width="0.0556%" height="15" fill="rgb(233,115,5)" fg:x="554" fg:w="8"/><text x="4.1012%" y="207.50"></text></g><g><title>alloc_pages_vma (9 samples, 0.06%)</title><rect x="3.8512%" y="245" width="0.0626%" height="15" fill="rgb(207,226,44)" fg:x="554" fg:w="9"/><text x="4.1012%" y="255.50"></text></g><g><title>__alloc_pages_nodemask (9 samples, 0.06%)</title><rect x="3.8512%" y="229" width="0.0626%" height="15" fill="rgb(208,126,0)" fg:x="554" fg:w="9"/><text x="4.1012%" y="239.50"></text></g><g><title>get_page_from_freelist (9 samples, 0.06%)</title><rect x="3.8512%" y="213" width="0.0626%" height="15" fill="rgb(244,66,21)" fg:x="554" fg:w="9"/><text x="4.1012%" y="223.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (15 samples, 0.10%)</title><rect x="3.8234%" y="389" width="0.1043%" height="15" fill="rgb(222,97,12)" fg:x="550" fg:w="15"/><text x="4.0734%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (15 samples, 0.10%)</title><rect x="3.8234%" y="373" width="0.1043%" height="15" fill="rgb(219,213,19)" fg:x="550" fg:w="15"/><text x="4.0734%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.10%)</title><rect x="3.8234%" y="357" width="0.1043%" height="15" fill="rgb(252,169,30)" fg:x="550" fg:w="15"/><text x="4.0734%" y="367.50"></text></g><g><title>asm_exc_page_fault (14 samples, 0.10%)</title><rect x="3.8304%" y="341" width="0.0973%" height="15" fill="rgb(206,32,51)" fg:x="551" fg:w="14"/><text x="4.0804%" y="351.50"></text></g><g><title>exc_page_fault (13 samples, 0.09%)</title><rect x="3.8373%" y="325" width="0.0904%" height="15" fill="rgb(250,172,42)" fg:x="552" fg:w="13"/><text x="4.0873%" y="335.50"></text></g><g><title>do_user_addr_fault (13 samples, 0.09%)</title><rect x="3.8373%" y="309" width="0.0904%" height="15" fill="rgb(209,34,43)" fg:x="552" fg:w="13"/><text x="4.0873%" y="319.50"></text></g><g><title>handle_mm_fault (13 samples, 0.09%)</title><rect x="3.8373%" y="293" width="0.0904%" height="15" fill="rgb(223,11,35)" fg:x="552" fg:w="13"/><text x="4.0873%" y="303.50"></text></g><g><title>__handle_mm_fault (13 samples, 0.09%)</title><rect x="3.8373%" y="277" width="0.0904%" height="15" fill="rgb(251,219,26)" fg:x="552" fg:w="13"/><text x="4.0873%" y="287.50"></text></g><g><title>do_anonymous_page (13 samples, 0.09%)</title><rect x="3.8373%" y="261" width="0.0904%" height="15" fill="rgb(231,119,3)" fg:x="552" fg:w="13"/><text x="4.0873%" y="271.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.02%)</title><rect x="3.9625%" y="357" width="0.0209%" height="15" fill="rgb(216,97,11)" fg:x="570" fg:w="3"/><text x="4.2125%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (11 samples, 0.08%)</title><rect x="3.9347%" y="389" width="0.0765%" height="15" fill="rgb(223,59,9)" fg:x="566" fg:w="11"/><text x="4.1847%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (11 samples, 0.08%)</title><rect x="3.9347%" y="373" width="0.0765%" height="15" fill="rgb(233,93,31)" fg:x="566" fg:w="11"/><text x="4.1847%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.03%)</title><rect x="3.9833%" y="357" width="0.0278%" height="15" fill="rgb(239,81,33)" fg:x="573" fg:w="4"/><text x="4.2333%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.03%)</title><rect x="3.9833%" y="341" width="0.0278%" height="15" fill="rgb(213,120,34)" fg:x="573" fg:w="4"/><text x="4.2333%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (69 samples, 0.48%)</title><rect x="3.5384%" y="453" width="0.4797%" height="15" fill="rgb(243,49,53)" fg:x="509" fg:w="69"/><text x="3.7884%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (69 samples, 0.48%)</title><rect x="3.5384%" y="437" width="0.4797%" height="15" fill="rgb(247,216,33)" fg:x="509" fg:w="69"/><text x="3.7884%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (68 samples, 0.47%)</title><rect x="3.5454%" y="421" width="0.4727%" height="15" fill="rgb(226,26,14)" fg:x="510" fg:w="68"/><text x="3.7954%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (68 samples, 0.47%)</title><rect x="3.5454%" y="405" width="0.4727%" height="15" fill="rgb(215,49,53)" fg:x="510" fg:w="68"/><text x="3.7954%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.03%)</title><rect x="4.0181%" y="437" width="0.0348%" height="15" fill="rgb(245,162,40)" fg:x="578" fg:w="5"/><text x="4.2681%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.03%)</title><rect x="4.0181%" y="421" width="0.0348%" height="15" fill="rgb(229,68,17)" fg:x="578" fg:w="5"/><text x="4.2681%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.03%)</title><rect x="4.0181%" y="405" width="0.0348%" height="15" fill="rgb(213,182,10)" fg:x="578" fg:w="5"/><text x="4.2681%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.03%)</title><rect x="4.0250%" y="389" width="0.0278%" height="15" fill="rgb(245,125,30)" fg:x="579" fg:w="4"/><text x="4.2750%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="4.0389%" y="373" width="0.0139%" height="15" fill="rgb(232,202,2)" fg:x="581" fg:w="2"/><text x="4.2889%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="4.0876%" y="341" width="0.0139%" height="15" fill="rgb(237,140,51)" fg:x="588" fg:w="2"/><text x="4.3376%" y="351.50"></text></g><g><title>hashbrown::map::make_insert_hash (14 samples, 0.10%)</title><rect x="4.0181%" y="453" width="0.0973%" height="15" fill="rgb(236,157,25)" fg:x="578" fg:w="14"/><text x="4.2681%" y="463.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (8 samples, 0.06%)</title><rect x="4.0598%" y="437" width="0.0556%" height="15" fill="rgb(219,209,0)" fg:x="584" fg:w="8"/><text x="4.3098%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (8 samples, 0.06%)</title><rect x="4.0598%" y="421" width="0.0556%" height="15" fill="rgb(240,116,54)" fg:x="584" fg:w="8"/><text x="4.3098%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (8 samples, 0.06%)</title><rect x="4.0598%" y="405" width="0.0556%" height="15" fill="rgb(216,10,36)" fg:x="584" fg:w="8"/><text x="4.3098%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.06%)</title><rect x="4.0598%" y="389" width="0.0556%" height="15" fill="rgb(222,72,44)" fg:x="584" fg:w="8"/><text x="4.3098%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.06%)</title><rect x="4.0598%" y="373" width="0.0556%" height="15" fill="rgb(232,159,9)" fg:x="584" fg:w="8"/><text x="4.3098%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.06%)</title><rect x="4.0598%" y="357" width="0.0556%" height="15" fill="rgb(210,39,32)" fg:x="584" fg:w="8"/><text x="4.3098%" y="367.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.01%)</title><rect x="4.1015%" y="341" width="0.0139%" height="15" fill="rgb(216,194,45)" fg:x="590" fg:w="2"/><text x="4.3515%" y="351.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (102 samples, 0.71%)</title><rect x="3.5315%" y="469" width="0.7091%" height="15" fill="rgb(218,18,35)" fg:x="508" fg:w="102"/><text x="3.7815%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.13%)</title><rect x="4.1154%" y="453" width="0.1251%" height="15" fill="rgb(207,83,51)" fg:x="592" fg:w="18"/><text x="4.3654%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (9 samples, 0.06%)</title><rect x="4.1780%" y="437" width="0.0626%" height="15" fill="rgb(225,63,43)" fg:x="601" fg:w="9"/><text x="4.4280%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (9 samples, 0.06%)</title><rect x="4.1780%" y="421" width="0.0626%" height="15" fill="rgb(207,57,36)" fg:x="601" fg:w="9"/><text x="4.4280%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (9 samples, 0.06%)</title><rect x="4.1780%" y="405" width="0.0626%" height="15" fill="rgb(216,99,33)" fg:x="601" fg:w="9"/><text x="4.4280%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (9 samples, 0.06%)</title><rect x="4.1780%" y="389" width="0.0626%" height="15" fill="rgb(225,42,16)" fg:x="601" fg:w="9"/><text x="4.4280%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (9 samples, 0.06%)</title><rect x="4.1780%" y="373" width="0.0626%" height="15" fill="rgb(220,201,45)" fg:x="601" fg:w="9"/><text x="4.4280%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (9 samples, 0.06%)</title><rect x="4.1780%" y="357" width="0.0626%" height="15" fill="rgb(225,33,4)" fg:x="601" fg:w="9"/><text x="4.4280%" y="367.50"></text></g><g><title>core::core_arch::simd::i8x16::new (9 samples, 0.06%)</title><rect x="4.1780%" y="341" width="0.0626%" height="15" fill="rgb(224,33,50)" fg:x="601" fg:w="9"/><text x="4.4280%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (142 samples, 0.99%)</title><rect x="3.3368%" y="549" width="0.9871%" height="15" fill="rgb(246,198,51)" fg:x="480" fg:w="142"/><text x="3.5868%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (142 samples, 0.99%)</title><rect x="3.3368%" y="533" width="0.9871%" height="15" fill="rgb(205,22,4)" fg:x="480" fg:w="142"/><text x="3.5868%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (142 samples, 0.99%)</title><rect x="3.3368%" y="517" width="0.9871%" height="15" fill="rgb(206,3,8)" fg:x="480" fg:w="142"/><text x="3.5868%" y="527.50"></text></g><g><title>y2021::d05::main::p01::{{closure}} (138 samples, 0.96%)</title><rect x="3.3646%" y="501" width="0.9593%" height="15" fill="rgb(251,23,15)" fg:x="484" fg:w="138"/><text x="3.6146%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (114 samples, 0.79%)</title><rect x="3.5315%" y="485" width="0.7925%" height="15" fill="rgb(252,88,28)" fg:x="508" fg:w="114"/><text x="3.7815%" y="495.50"></text></g><g><title>std::collections::hash::map::map_entry (12 samples, 0.08%)</title><rect x="4.2405%" y="469" width="0.0834%" height="15" fill="rgb(212,127,14)" fg:x="610" fg:w="12"/><text x="4.4905%" y="479.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (143 samples, 0.99%)</title><rect x="3.3368%" y="581" width="0.9941%" height="15" fill="rgb(247,145,37)" fg:x="480" fg:w="143"/><text x="3.5868%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (143 samples, 0.99%)</title><rect x="3.3368%" y="565" width="0.9941%" height="15" fill="rgb(209,117,53)" fg:x="480" fg:w="143"/><text x="3.5868%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="4.3309%" y="533" width="0.0139%" height="15" fill="rgb(212,90,42)" fg:x="623" fg:w="2"/><text x="4.5809%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="4.3309%" y="517" width="0.0139%" height="15" fill="rgb(218,164,37)" fg:x="623" fg:w="2"/><text x="4.5809%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="4.3309%" y="501" width="0.0139%" height="15" fill="rgb(246,65,34)" fg:x="623" fg:w="2"/><text x="4.5809%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="4.3309%" y="485" width="0.0139%" height="15" fill="rgb(231,100,33)" fg:x="623" fg:w="2"/><text x="4.5809%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="4.3309%" y="469" width="0.0139%" height="15" fill="rgb(228,126,14)" fg:x="623" fg:w="2"/><text x="4.5809%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.01%)</title><rect x="4.3309%" y="453" width="0.0139%" height="15" fill="rgb(215,173,21)" fg:x="623" fg:w="2"/><text x="4.5809%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (149 samples, 1.04%)</title><rect x="3.3368%" y="741" width="1.0358%" height="15" fill="rgb(210,6,40)" fg:x="480" fg:w="149"/><text x="3.5868%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (149 samples, 1.04%)</title><rect x="3.3368%" y="725" width="1.0358%" height="15" fill="rgb(212,48,18)" fg:x="480" fg:w="149"/><text x="3.5868%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (149 samples, 1.04%)</title><rect x="3.3368%" y="709" width="1.0358%" height="15" fill="rgb(230,214,11)" fg:x="480" fg:w="149"/><text x="3.5868%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (149 samples, 1.04%)</title><rect x="3.3368%" y="693" width="1.0358%" height="15" fill="rgb(254,105,39)" fg:x="480" fg:w="149"/><text x="3.5868%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (149 samples, 1.04%)</title><rect x="3.3368%" y="677" width="1.0358%" height="15" fill="rgb(245,158,5)" fg:x="480" fg:w="149"/><text x="3.5868%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (149 samples, 1.04%)</title><rect x="3.3368%" y="661" width="1.0358%" height="15" fill="rgb(249,208,11)" fg:x="480" fg:w="149"/><text x="3.5868%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (149 samples, 1.04%)</title><rect x="3.3368%" y="645" width="1.0358%" height="15" fill="rgb(210,39,28)" fg:x="480" fg:w="149"/><text x="3.5868%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (149 samples, 1.04%)</title><rect x="3.3368%" y="629" width="1.0358%" height="15" fill="rgb(211,56,53)" fg:x="480" fg:w="149"/><text x="3.5868%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (149 samples, 1.04%)</title><rect x="3.3368%" y="613" width="1.0358%" height="15" fill="rgb(226,201,30)" fg:x="480" fg:w="149"/><text x="3.5868%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (149 samples, 1.04%)</title><rect x="3.3368%" y="597" width="1.0358%" height="15" fill="rgb(239,101,34)" fg:x="480" fg:w="149"/><text x="3.5868%" y="607.50"></text></g><g><title>y2021::d05::main::read_path_to_lines::{{closure}} (6 samples, 0.04%)</title><rect x="4.3309%" y="581" width="0.0417%" height="15" fill="rgb(226,209,5)" fg:x="623" fg:w="6"/><text x="4.5809%" y="591.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (6 samples, 0.04%)</title><rect x="4.3309%" y="565" width="0.0417%" height="15" fill="rgb(250,105,47)" fg:x="623" fg:w="6"/><text x="4.5809%" y="575.50"></text></g><g><title>&lt;y2021::types::line::Line as core::str::traits::FromStr&gt;::from_str (6 samples, 0.04%)</title><rect x="4.3309%" y="549" width="0.0417%" height="15" fill="rgb(230,72,3)" fg:x="623" fg:w="6"/><text x="4.5809%" y="559.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (4 samples, 0.03%)</title><rect x="4.3448%" y="533" width="0.0278%" height="15" fill="rgb(232,218,39)" fg:x="625" fg:w="4"/><text x="4.5948%" y="543.50"></text></g><g><title>&lt;y2021::types::point::Point as core::str::traits::FromStr&gt;::from_str (4 samples, 0.03%)</title><rect x="4.3448%" y="517" width="0.0278%" height="15" fill="rgb(248,166,6)" fg:x="625" fg:w="4"/><text x="4.5948%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.03%)</title><rect x="4.3448%" y="501" width="0.0278%" height="15" fill="rgb(247,89,20)" fg:x="625" fg:w="4"/><text x="4.5948%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="4.3448%" y="485" width="0.0278%" height="15" fill="rgb(248,130,54)" fg:x="625" fg:w="4"/><text x="4.5948%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="4.3518%" y="469" width="0.0209%" height="15" fill="rgb(234,196,4)" fg:x="626" fg:w="3"/><text x="4.6018%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="4.3518%" y="453" width="0.0209%" height="15" fill="rgb(250,143,31)" fg:x="626" fg:w="3"/><text x="4.6018%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.01%)</title><rect x="4.3587%" y="437" width="0.0139%" height="15" fill="rgb(211,110,34)" fg:x="627" fg:w="2"/><text x="4.6087%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="4.3587%" y="421" width="0.0139%" height="15" fill="rgb(215,124,48)" fg:x="627" fg:w="2"/><text x="4.6087%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="4.3587%" y="405" width="0.0139%" height="15" fill="rgb(216,46,13)" fg:x="627" fg:w="2"/><text x="4.6087%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="4.3587%" y="389" width="0.0139%" height="15" fill="rgb(205,184,25)" fg:x="627" fg:w="2"/><text x="4.6087%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="4.3587%" y="373" width="0.0139%" height="15" fill="rgb(228,1,10)" fg:x="627" fg:w="2"/><text x="4.6087%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="4.3587%" y="357" width="0.0139%" height="15" fill="rgb(213,116,27)" fg:x="627" fg:w="2"/><text x="4.6087%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="4.3587%" y="341" width="0.0139%" height="15" fill="rgb(241,95,50)" fg:x="627" fg:w="2"/><text x="4.6087%" y="351.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="4.3587%" y="325" width="0.0139%" height="15" fill="rgb(238,48,32)" fg:x="627" fg:w="2"/><text x="4.6087%" y="335.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="4.3587%" y="309" width="0.0139%" height="15" fill="rgb(235,113,49)" fg:x="627" fg:w="2"/><text x="4.6087%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.03%)</title><rect x="4.3726%" y="741" width="0.0278%" height="15" fill="rgb(205,127,43)" fg:x="629" fg:w="4"/><text x="4.6226%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="4.3726%" y="725" width="0.0278%" height="15" fill="rgb(250,162,2)" fg:x="629" fg:w="4"/><text x="4.6226%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="4.3726%" y="709" width="0.0278%" height="15" fill="rgb(220,13,41)" fg:x="629" fg:w="4"/><text x="4.6226%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="4.3726%" y="693" width="0.0278%" height="15" fill="rgb(249,221,25)" fg:x="629" fg:w="4"/><text x="4.6226%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.03%)</title><rect x="4.3726%" y="677" width="0.0278%" height="15" fill="rgb(215,208,19)" fg:x="629" fg:w="4"/><text x="4.6226%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.03%)</title><rect x="4.3726%" y="661" width="0.0278%" height="15" fill="rgb(236,175,2)" fg:x="629" fg:w="4"/><text x="4.6226%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="4.3796%" y="645" width="0.0209%" height="15" fill="rgb(241,52,2)" fg:x="630" fg:w="3"/><text x="4.6296%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.02%)</title><rect x="4.3796%" y="629" width="0.0209%" height="15" fill="rgb(248,140,14)" fg:x="630" fg:w="3"/><text x="4.6296%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.02%)</title><rect x="4.3796%" y="613" width="0.0209%" height="15" fill="rgb(253,22,42)" fg:x="630" fg:w="3"/><text x="4.6296%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="4.3865%" y="597" width="0.0139%" height="15" fill="rgb(234,61,47)" fg:x="631" fg:w="2"/><text x="4.6365%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="4.3865%" y="581" width="0.0139%" height="15" fill="rgb(208,226,15)" fg:x="631" fg:w="2"/><text x="4.6365%" y="591.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="4.3865%" y="565" width="0.0139%" height="15" fill="rgb(217,221,4)" fg:x="631" fg:w="2"/><text x="4.6365%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="4.3865%" y="549" width="0.0139%" height="15" fill="rgb(212,174,34)" fg:x="631" fg:w="2"/><text x="4.6365%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="4.3865%" y="533" width="0.0139%" height="15" fill="rgb(253,83,4)" fg:x="631" fg:w="2"/><text x="4.6365%" y="543.50"></text></g><g><title>y2021::d05::main::p01 (155 samples, 1.08%)</title><rect x="3.3368%" y="757" width="1.0775%" height="15" fill="rgb(250,195,49)" fg:x="480" fg:w="155"/><text x="3.5868%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (13 samples, 0.09%)</title><rect x="4.6785%" y="453" width="0.0904%" height="15" fill="rgb(241,192,25)" fg:x="673" fg:w="13"/><text x="4.9285%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (13 samples, 0.09%)</title><rect x="4.6785%" y="437" width="0.0904%" height="15" fill="rgb(208,124,10)" fg:x="673" fg:w="13"/><text x="4.9285%" y="447.50"></text></g><g><title>core::ptr::write (13 samples, 0.09%)</title><rect x="4.6785%" y="421" width="0.0904%" height="15" fill="rgb(222,33,0)" fg:x="673" fg:w="13"/><text x="4.9285%" y="431.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (18 samples, 0.13%)</title><rect x="4.6576%" y="517" width="0.1251%" height="15" fill="rgb(234,209,28)" fg:x="670" fg:w="18"/><text x="4.9076%" y="527.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (18 samples, 0.13%)</title><rect x="4.6576%" y="501" width="0.1251%" height="15" fill="rgb(224,11,23)" fg:x="670" fg:w="18"/><text x="4.9076%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (18 samples, 0.13%)</title><rect x="4.6576%" y="485" width="0.1251%" height="15" fill="rgb(232,99,1)" fg:x="670" fg:w="18"/><text x="4.9076%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (16 samples, 0.11%)</title><rect x="4.6715%" y="469" width="0.1112%" height="15" fill="rgb(237,95,45)" fg:x="672" fg:w="16"/><text x="4.9215%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.01%)</title><rect x="4.7689%" y="453" width="0.0139%" height="15" fill="rgb(208,109,11)" fg:x="686" fg:w="2"/><text x="5.0189%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.01%)</title><rect x="4.7689%" y="437" width="0.0139%" height="15" fill="rgb(216,190,48)" fg:x="686" fg:w="2"/><text x="5.0189%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (2 samples, 0.01%)</title><rect x="4.8036%" y="421" width="0.0139%" height="15" fill="rgb(251,171,36)" fg:x="691" fg:w="2"/><text x="5.0536%" y="431.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="4.8036%" y="405" width="0.0139%" height="15" fill="rgb(230,62,22)" fg:x="691" fg:w="2"/><text x="5.0536%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (2 samples, 0.01%)</title><rect x="4.8036%" y="389" width="0.0139%" height="15" fill="rgb(225,114,35)" fg:x="691" fg:w="2"/><text x="5.0536%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (2 samples, 0.01%)</title><rect x="4.8036%" y="373" width="0.0139%" height="15" fill="rgb(215,118,42)" fg:x="691" fg:w="2"/><text x="5.0536%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="4.8036%" y="357" width="0.0139%" height="15" fill="rgb(243,119,21)" fg:x="691" fg:w="2"/><text x="5.0536%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="4.8036%" y="341" width="0.0139%" height="15" fill="rgb(252,177,53)" fg:x="691" fg:w="2"/><text x="5.0536%" y="351.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="4.8036%" y="325" width="0.0139%" height="15" fill="rgb(237,209,29)" fg:x="691" fg:w="2"/><text x="5.0536%" y="335.50"></text></g><g><title>systrim (2 samples, 0.01%)</title><rect x="4.8036%" y="309" width="0.0139%" height="15" fill="rgb(212,65,23)" fg:x="691" fg:w="2"/><text x="5.0536%" y="319.50"></text></g><g><title>__GI___default_morecore (2 samples, 0.01%)</title><rect x="4.8036%" y="293" width="0.0139%" height="15" fill="rgb(230,222,46)" fg:x="691" fg:w="2"/><text x="5.0536%" y="303.50"></text></g><g><title>__GI___sbrk (2 samples, 0.01%)</title><rect x="4.8036%" y="277" width="0.0139%" height="15" fill="rgb(215,135,32)" fg:x="691" fg:w="2"/><text x="5.0536%" y="287.50"></text></g><g><title>__GI___sbrk (2 samples, 0.01%)</title><rect x="4.8036%" y="261" width="0.0139%" height="15" fill="rgb(246,101,22)" fg:x="691" fg:w="2"/><text x="5.0536%" y="271.50"></text></g><g><title>__brk (2 samples, 0.01%)</title><rect x="4.8036%" y="245" width="0.0139%" height="15" fill="rgb(206,107,13)" fg:x="691" fg:w="2"/><text x="5.0536%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="4.8036%" y="229" width="0.0139%" height="15" fill="rgb(250,100,44)" fg:x="691" fg:w="2"/><text x="5.0536%" y="239.50"></text></g><g><title>do_syscall_64 (2 samples, 0.01%)</title><rect x="4.8036%" y="213" width="0.0139%" height="15" fill="rgb(231,147,38)" fg:x="691" fg:w="2"/><text x="5.0536%" y="223.50"></text></g><g><title>__x64_sys_brk (2 samples, 0.01%)</title><rect x="4.8036%" y="197" width="0.0139%" height="15" fill="rgb(229,8,40)" fg:x="691" fg:w="2"/><text x="5.0536%" y="207.50"></text></g><g><title>__do_munmap (2 samples, 0.01%)</title><rect x="4.8036%" y="181" width="0.0139%" height="15" fill="rgb(221,135,30)" fg:x="691" fg:w="2"/><text x="5.0536%" y="191.50"></text></g><g><title>unmap_region (2 samples, 0.01%)</title><rect x="4.8036%" y="165" width="0.0139%" height="15" fill="rgb(249,193,18)" fg:x="691" fg:w="2"/><text x="5.0536%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.02%)</title><rect x="4.9009%" y="325" width="0.0209%" height="15" fill="rgb(209,133,39)" fg:x="705" fg:w="3"/><text x="5.1509%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.06%)</title><rect x="4.8801%" y="341" width="0.0626%" height="15" fill="rgb(232,100,14)" fg:x="702" fg:w="9"/><text x="5.1301%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.02%)</title><rect x="4.9218%" y="325" width="0.0209%" height="15" fill="rgb(224,185,1)" fg:x="708" fg:w="3"/><text x="5.1718%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (14 samples, 0.10%)</title><rect x="4.9496%" y="325" width="0.0973%" height="15" fill="rgb(223,139,8)" fg:x="712" fg:w="14"/><text x="5.1996%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (32 samples, 0.22%)</title><rect x="4.8384%" y="389" width="0.2225%" height="15" fill="rgb(232,213,38)" fg:x="696" fg:w="32"/><text x="5.0884%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (32 samples, 0.22%)</title><rect x="4.8384%" y="373" width="0.2225%" height="15" fill="rgb(207,94,22)" fg:x="696" fg:w="32"/><text x="5.0884%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (32 samples, 0.22%)</title><rect x="4.8384%" y="357" width="0.2225%" height="15" fill="rgb(219,183,54)" fg:x="696" fg:w="32"/><text x="5.0884%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.12%)</title><rect x="4.9426%" y="341" width="0.1182%" height="15" fill="rgb(216,185,54)" fg:x="711" fg:w="17"/><text x="5.1926%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="5.0469%" y="325" width="0.0139%" height="15" fill="rgb(254,217,39)" fg:x="726" fg:w="2"/><text x="5.2969%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.03%)</title><rect x="5.2555%" y="277" width="0.0278%" height="15" fill="rgb(240,178,23)" fg:x="756" fg:w="4"/><text x="5.5055%" y="287.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (71 samples, 0.49%)</title><rect x="4.8175%" y="421" width="0.4936%" height="15" fill="rgb(218,11,47)" fg:x="693" fg:w="71"/><text x="5.0675%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (70 samples, 0.49%)</title><rect x="4.8245%" y="405" width="0.4866%" height="15" fill="rgb(218,51,51)" fg:x="694" fg:w="70"/><text x="5.0745%" y="415.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (35 samples, 0.24%)</title><rect x="5.0678%" y="389" width="0.2433%" height="15" fill="rgb(238,126,27)" fg:x="729" fg:w="35"/><text x="5.3178%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (32 samples, 0.22%)</title><rect x="5.0886%" y="373" width="0.2225%" height="15" fill="rgb(249,202,22)" fg:x="732" fg:w="32"/><text x="5.3386%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (31 samples, 0.22%)</title><rect x="5.0956%" y="357" width="0.2155%" height="15" fill="rgb(254,195,49)" fg:x="733" fg:w="31"/><text x="5.3456%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (31 samples, 0.22%)</title><rect x="5.0956%" y="341" width="0.2155%" height="15" fill="rgb(208,123,14)" fg:x="733" fg:w="31"/><text x="5.3456%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (31 samples, 0.22%)</title><rect x="5.0956%" y="325" width="0.2155%" height="15" fill="rgb(224,200,8)" fg:x="733" fg:w="31"/><text x="5.3456%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (31 samples, 0.22%)</title><rect x="5.0956%" y="309" width="0.2155%" height="15" fill="rgb(217,61,36)" fg:x="733" fg:w="31"/><text x="5.3456%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.11%)</title><rect x="5.1999%" y="293" width="0.1112%" height="15" fill="rgb(206,35,45)" fg:x="748" fg:w="16"/><text x="5.4499%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.03%)</title><rect x="5.2833%" y="277" width="0.0278%" height="15" fill="rgb(217,65,33)" fg:x="760" fg:w="4"/><text x="5.5333%" y="287.50"></text></g><g><title>clear_page_rep (9 samples, 0.06%)</title><rect x="5.4015%" y="229" width="0.0626%" height="15" fill="rgb(222,158,48)" fg:x="777" fg:w="9"/><text x="5.6515%" y="239.50"></text></g><g><title>alloc_pages_vma (13 samples, 0.09%)</title><rect x="5.4015%" y="277" width="0.0904%" height="15" fill="rgb(254,2,54)" fg:x="777" fg:w="13"/><text x="5.6515%" y="287.50"></text></g><g><title>__alloc_pages_nodemask (13 samples, 0.09%)</title><rect x="5.4015%" y="261" width="0.0904%" height="15" fill="rgb(250,143,38)" fg:x="777" fg:w="13"/><text x="5.6515%" y="271.50"></text></g><g><title>get_page_from_freelist (13 samples, 0.09%)</title><rect x="5.4015%" y="245" width="0.0904%" height="15" fill="rgb(248,25,0)" fg:x="777" fg:w="13"/><text x="5.6515%" y="255.50"></text></g><g><title>rmqueue (4 samples, 0.03%)</title><rect x="5.4640%" y="229" width="0.0278%" height="15" fill="rgb(206,152,27)" fg:x="786" fg:w="4"/><text x="5.7140%" y="239.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (3 samples, 0.02%)</title><rect x="5.4918%" y="277" width="0.0209%" height="15" fill="rgb(240,77,30)" fg:x="790" fg:w="3"/><text x="5.7418%" y="287.50"></text></g><g><title>lru_cache_add (3 samples, 0.02%)</title><rect x="5.4918%" y="261" width="0.0209%" height="15" fill="rgb(231,5,3)" fg:x="790" fg:w="3"/><text x="5.7418%" y="271.50"></text></g><g><title>__pagevec_lru_add (2 samples, 0.01%)</title><rect x="5.4988%" y="245" width="0.0139%" height="15" fill="rgb(207,226,32)" fg:x="791" fg:w="2"/><text x="5.7488%" y="255.50"></text></g><g><title>mem_cgroup_charge (4 samples, 0.03%)</title><rect x="5.5127%" y="277" width="0.0278%" height="15" fill="rgb(222,207,47)" fg:x="793" fg:w="4"/><text x="5.7627%" y="287.50"></text></g><g><title>try_charge (3 samples, 0.02%)</title><rect x="5.5196%" y="261" width="0.0209%" height="15" fill="rgb(229,115,45)" fg:x="794" fg:w="3"/><text x="5.7696%" y="271.50"></text></g><g><title>do_anonymous_page (21 samples, 0.15%)</title><rect x="5.4015%" y="293" width="0.1460%" height="15" fill="rgb(224,191,6)" fg:x="777" fg:w="21"/><text x="5.6515%" y="303.50"></text></g><g><title>asm_exc_page_fault (27 samples, 0.19%)</title><rect x="5.3667%" y="373" width="0.1877%" height="15" fill="rgb(230,227,24)" fg:x="772" fg:w="27"/><text x="5.6167%" y="383.50"></text></g><g><title>exc_page_fault (25 samples, 0.17%)</title><rect x="5.3806%" y="357" width="0.1738%" height="15" fill="rgb(228,80,19)" fg:x="774" fg:w="25"/><text x="5.6306%" y="367.50"></text></g><g><title>do_user_addr_fault (25 samples, 0.17%)</title><rect x="5.3806%" y="341" width="0.1738%" height="15" fill="rgb(247,229,0)" fg:x="774" fg:w="25"/><text x="5.6306%" y="351.50"></text></g><g><title>handle_mm_fault (24 samples, 0.17%)</title><rect x="5.3876%" y="325" width="0.1668%" height="15" fill="rgb(237,194,15)" fg:x="775" fg:w="24"/><text x="5.6376%" y="335.50"></text></g><g><title>__handle_mm_fault (24 samples, 0.17%)</title><rect x="5.3876%" y="309" width="0.1668%" height="15" fill="rgb(219,203,20)" fg:x="775" fg:w="24"/><text x="5.6376%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (36 samples, 0.25%)</title><rect x="5.3180%" y="421" width="0.2503%" height="15" fill="rgb(234,128,8)" fg:x="765" fg:w="36"/><text x="5.5680%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (36 samples, 0.25%)</title><rect x="5.3180%" y="405" width="0.2503%" height="15" fill="rgb(248,202,8)" fg:x="765" fg:w="36"/><text x="5.5680%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36 samples, 0.25%)</title><rect x="5.3180%" y="389" width="0.2503%" height="15" fill="rgb(206,104,37)" fg:x="765" fg:w="36"/><text x="5.5680%" y="399.50"></text></g><g><title>sync_regs (2 samples, 0.01%)</title><rect x="5.5544%" y="373" width="0.0139%" height="15" fill="rgb(223,8,27)" fg:x="799" fg:w="2"/><text x="5.8044%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (3 samples, 0.02%)</title><rect x="5.5683%" y="421" width="0.0209%" height="15" fill="rgb(216,217,28)" fg:x="801" fg:w="3"/><text x="5.8183%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (3 samples, 0.02%)</title><rect x="5.5683%" y="405" width="0.0209%" height="15" fill="rgb(249,199,1)" fg:x="801" fg:w="3"/><text x="5.8183%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.02%)</title><rect x="5.5683%" y="389" width="0.0209%" height="15" fill="rgb(240,85,17)" fg:x="801" fg:w="3"/><text x="5.8183%" y="399.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (3 samples, 0.02%)</title><rect x="5.5683%" y="373" width="0.0209%" height="15" fill="rgb(206,108,45)" fg:x="801" fg:w="3"/><text x="5.8183%" y="383.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (3 samples, 0.02%)</title><rect x="5.5683%" y="357" width="0.0209%" height="15" fill="rgb(245,210,41)" fg:x="801" fg:w="3"/><text x="5.8183%" y="367.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.06%)</title><rect x="5.6587%" y="389" width="0.0556%" height="15" fill="rgb(206,13,37)" fg:x="814" fg:w="8"/><text x="5.9087%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (25 samples, 0.17%)</title><rect x="5.5892%" y="405" width="0.1738%" height="15" fill="rgb(250,61,18)" fg:x="804" fg:w="25"/><text x="5.8392%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (6 samples, 0.04%)</title><rect x="5.7212%" y="389" width="0.0417%" height="15" fill="rgb(235,172,48)" fg:x="823" fg:w="6"/><text x="5.9712%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (6 samples, 0.04%)</title><rect x="5.7212%" y="373" width="0.0417%" height="15" fill="rgb(249,201,17)" fg:x="823" fg:w="6"/><text x="5.9712%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (26 samples, 0.18%)</title><rect x="5.5892%" y="421" width="0.1807%" height="15" fill="rgb(219,208,6)" fg:x="804" fg:w="26"/><text x="5.8392%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (145 samples, 1.01%)</title><rect x="4.7967%" y="485" width="1.0080%" height="15" fill="rgb(248,31,23)" fg:x="690" fg:w="145"/><text x="5.0467%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (145 samples, 1.01%)</title><rect x="4.7967%" y="469" width="1.0080%" height="15" fill="rgb(245,15,42)" fg:x="690" fg:w="145"/><text x="5.0467%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (145 samples, 1.01%)</title><rect x="4.7967%" y="453" width="1.0080%" height="15" fill="rgb(222,217,39)" fg:x="690" fg:w="145"/><text x="5.0467%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (145 samples, 1.01%)</title><rect x="4.7967%" y="437" width="1.0080%" height="15" fill="rgb(210,219,27)" fg:x="690" fg:w="145"/><text x="5.0467%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (5 samples, 0.03%)</title><rect x="5.7699%" y="421" width="0.0348%" height="15" fill="rgb(252,166,36)" fg:x="830" fg:w="5"/><text x="6.0199%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (5 samples, 0.03%)</title><rect x="5.7699%" y="405" width="0.0348%" height="15" fill="rgb(245,132,34)" fg:x="830" fg:w="5"/><text x="6.0199%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (5 samples, 0.03%)</title><rect x="5.7699%" y="389" width="0.0348%" height="15" fill="rgb(236,54,3)" fg:x="830" fg:w="5"/><text x="6.0199%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (5 samples, 0.03%)</title><rect x="5.7699%" y="373" width="0.0348%" height="15" fill="rgb(241,173,43)" fg:x="830" fg:w="5"/><text x="6.0199%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (4 samples, 0.03%)</title><rect x="5.7769%" y="357" width="0.0278%" height="15" fill="rgb(215,190,9)" fg:x="831" fg:w="4"/><text x="6.0269%" y="367.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.01%)</title><rect x="5.7908%" y="341" width="0.0139%" height="15" fill="rgb(242,101,16)" fg:x="833" fg:w="2"/><text x="6.0408%" y="351.50"></text></g><g><title>exc_page_fault (2 samples, 0.01%)</title><rect x="5.7908%" y="325" width="0.0139%" height="15" fill="rgb(223,190,21)" fg:x="833" fg:w="2"/><text x="6.0408%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.02%)</title><rect x="5.8325%" y="421" width="0.0209%" height="15" fill="rgb(215,228,25)" fg:x="839" fg:w="3"/><text x="6.0825%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="5.8394%" y="405" width="0.0139%" height="15" fill="rgb(225,36,22)" fg:x="840" fg:w="2"/><text x="6.0894%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.06%)</title><rect x="5.8047%" y="469" width="0.0556%" height="15" fill="rgb(251,106,46)" fg:x="835" fg:w="8"/><text x="6.0547%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.06%)</title><rect x="5.8047%" y="453" width="0.0556%" height="15" fill="rgb(208,90,1)" fg:x="835" fg:w="8"/><text x="6.0547%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.06%)</title><rect x="5.8047%" y="437" width="0.0556%" height="15" fill="rgb(243,10,4)" fg:x="835" fg:w="8"/><text x="6.0547%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.02%)</title><rect x="5.8603%" y="469" width="0.0209%" height="15" fill="rgb(212,137,27)" fg:x="843" fg:w="3"/><text x="6.1103%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.04%)</title><rect x="5.9506%" y="373" width="0.0417%" height="15" fill="rgb(231,220,49)" fg:x="856" fg:w="6"/><text x="6.2006%" y="383.50"></text></g><g><title>hashbrown::map::make_insert_hash (28 samples, 0.19%)</title><rect x="5.8047%" y="485" width="0.1946%" height="15" fill="rgb(237,96,20)" fg:x="835" fg:w="28"/><text x="6.0547%" y="495.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (17 samples, 0.12%)</title><rect x="5.8811%" y="469" width="0.1182%" height="15" fill="rgb(239,229,30)" fg:x="846" fg:w="17"/><text x="6.1311%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (17 samples, 0.12%)</title><rect x="5.8811%" y="453" width="0.1182%" height="15" fill="rgb(219,65,33)" fg:x="846" fg:w="17"/><text x="6.1311%" y="463.50"></text></g><g><title>core::hash::Hasher::write_usize (16 samples, 0.11%)</title><rect x="5.8881%" y="437" width="0.1112%" height="15" fill="rgb(243,134,7)" fg:x="847" fg:w="16"/><text x="6.1381%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.11%)</title><rect x="5.8881%" y="421" width="0.1112%" height="15" fill="rgb(216,177,54)" fg:x="847" fg:w="16"/><text x="6.1381%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (16 samples, 0.11%)</title><rect x="5.8881%" y="405" width="0.1112%" height="15" fill="rgb(211,160,20)" fg:x="847" fg:w="16"/><text x="6.1381%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.11%)</title><rect x="5.8881%" y="389" width="0.1112%" height="15" fill="rgb(239,85,39)" fg:x="847" fg:w="16"/><text x="6.1381%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.01%)</title><rect x="6.1244%" y="421" width="0.0139%" height="15" fill="rgb(232,125,22)" fg:x="881" fg:w="2"/><text x="6.3744%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="6.1175%" y="437" width="0.0278%" height="15" fill="rgb(244,57,34)" fg:x="880" fg:w="4"/><text x="6.3675%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.05%)</title><rect x="6.1036%" y="469" width="0.0487%" height="15" fill="rgb(214,203,32)" fg:x="878" fg:w="7"/><text x="6.3536%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.05%)</title><rect x="6.1036%" y="453" width="0.0487%" height="15" fill="rgb(207,58,43)" fg:x="878" fg:w="7"/><text x="6.3536%" y="463.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (218 samples, 1.52%)</title><rect x="4.7828%" y="501" width="1.5155%" height="15" fill="rgb(215,193,15)" fg:x="688" fg:w="218"/><text x="5.0328%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (43 samples, 0.30%)</title><rect x="5.9993%" y="485" width="0.2989%" height="15" fill="rgb(232,15,44)" fg:x="863" fg:w="43"/><text x="6.2493%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (21 samples, 0.15%)</title><rect x="6.1522%" y="469" width="0.1460%" height="15" fill="rgb(212,3,48)" fg:x="885" fg:w="21"/><text x="6.4022%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (21 samples, 0.15%)</title><rect x="6.1522%" y="453" width="0.1460%" height="15" fill="rgb(218,128,7)" fg:x="885" fg:w="21"/><text x="6.4022%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (21 samples, 0.15%)</title><rect x="6.1522%" y="437" width="0.1460%" height="15" fill="rgb(226,216,39)" fg:x="885" fg:w="21"/><text x="6.4022%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (21 samples, 0.15%)</title><rect x="6.1522%" y="421" width="0.1460%" height="15" fill="rgb(243,47,51)" fg:x="885" fg:w="21"/><text x="6.4022%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (21 samples, 0.15%)</title><rect x="6.1522%" y="405" width="0.1460%" height="15" fill="rgb(241,183,40)" fg:x="885" fg:w="21"/><text x="6.4022%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (21 samples, 0.15%)</title><rect x="6.1522%" y="389" width="0.1460%" height="15" fill="rgb(231,217,32)" fg:x="885" fg:w="21"/><text x="6.4022%" y="399.50"></text></g><g><title>core::core_arch::simd::i8x16::new (21 samples, 0.15%)</title><rect x="6.1522%" y="373" width="0.1460%" height="15" fill="rgb(229,61,38)" fg:x="885" fg:w="21"/><text x="6.4022%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (288 samples, 2.00%)</title><rect x="4.4143%" y="581" width="2.0021%" height="15" fill="rgb(225,210,5)" fg:x="635" fg:w="288"/><text x="4.6643%" y="591.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (288 samples, 2.00%)</title><rect x="4.4143%" y="565" width="2.0021%" height="15" fill="rgb(231,79,45)" fg:x="635" fg:w="288"/><text x="4.6643%" y="575.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (288 samples, 2.00%)</title><rect x="4.4143%" y="549" width="2.0021%" height="15" fill="rgb(224,100,7)" fg:x="635" fg:w="288"/><text x="4.6643%" y="559.50">c..</text></g><g><title>y2021::d05::main::p02::{{closure}} (281 samples, 1.95%)</title><rect x="4.4630%" y="533" width="1.9534%" height="15" fill="rgb(241,198,18)" fg:x="642" fg:w="281"/><text x="4.7130%" y="543.50">y..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (235 samples, 1.63%)</title><rect x="4.7828%" y="517" width="1.6336%" height="15" fill="rgb(252,97,53)" fg:x="688" fg:w="235"/><text x="5.0328%" y="527.50"></text></g><g><title>std::collections::hash::map::map_entry (17 samples, 0.12%)</title><rect x="6.2982%" y="501" width="0.1182%" height="15" fill="rgb(220,88,7)" fg:x="906" fg:w="17"/><text x="6.5482%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (289 samples, 2.01%)</title><rect x="4.4143%" y="597" width="2.0090%" height="15" fill="rgb(213,176,14)" fg:x="635" fg:w="289"/><text x="4.6643%" y="607.50">c..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (292 samples, 2.03%)</title><rect x="4.4143%" y="741" width="2.0299%" height="15" fill="rgb(246,73,7)" fg:x="635" fg:w="292"/><text x="4.6643%" y="751.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (292 samples, 2.03%)</title><rect x="4.4143%" y="725" width="2.0299%" height="15" fill="rgb(245,64,36)" fg:x="635" fg:w="292"/><text x="4.6643%" y="735.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (292 samples, 2.03%)</title><rect x="4.4143%" y="709" width="2.0299%" height="15" fill="rgb(245,80,10)" fg:x="635" fg:w="292"/><text x="4.6643%" y="719.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (292 samples, 2.03%)</title><rect x="4.4143%" y="693" width="2.0299%" height="15" fill="rgb(232,107,50)" fg:x="635" fg:w="292"/><text x="4.6643%" y="703.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (292 samples, 2.03%)</title><rect x="4.4143%" y="677" width="2.0299%" height="15" fill="rgb(253,3,0)" fg:x="635" fg:w="292"/><text x="4.6643%" y="687.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (292 samples, 2.03%)</title><rect x="4.4143%" y="661" width="2.0299%" height="15" fill="rgb(212,99,53)" fg:x="635" fg:w="292"/><text x="4.6643%" y="671.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (292 samples, 2.03%)</title><rect x="4.4143%" y="645" width="2.0299%" height="15" fill="rgb(249,111,54)" fg:x="635" fg:w="292"/><text x="4.6643%" y="655.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (292 samples, 2.03%)</title><rect x="4.4143%" y="629" width="2.0299%" height="15" fill="rgb(249,55,30)" fg:x="635" fg:w="292"/><text x="4.6643%" y="639.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (292 samples, 2.03%)</title><rect x="4.4143%" y="613" width="2.0299%" height="15" fill="rgb(237,47,42)" fg:x="635" fg:w="292"/><text x="4.6643%" y="623.50">c..</text></g><g><title>y2021::d05::main::read_path_to_lines::{{closure}} (3 samples, 0.02%)</title><rect x="6.4234%" y="597" width="0.0209%" height="15" fill="rgb(211,20,18)" fg:x="924" fg:w="3"/><text x="6.6734%" y="607.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (3 samples, 0.02%)</title><rect x="6.4234%" y="581" width="0.0209%" height="15" fill="rgb(231,203,46)" fg:x="924" fg:w="3"/><text x="6.6734%" y="591.50"></text></g><g><title>&lt;y2021::types::line::Line as core::str::traits::FromStr&gt;::from_str (3 samples, 0.02%)</title><rect x="6.4234%" y="565" width="0.0209%" height="15" fill="rgb(237,142,3)" fg:x="924" fg:w="3"/><text x="6.6734%" y="575.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2 samples, 0.01%)</title><rect x="6.4303%" y="549" width="0.0139%" height="15" fill="rgb(241,107,1)" fg:x="925" fg:w="2"/><text x="6.6803%" y="559.50"></text></g><g><title>&lt;y2021::types::point::Point as core::str::traits::FromStr&gt;::from_str (2 samples, 0.01%)</title><rect x="6.4303%" y="533" width="0.0139%" height="15" fill="rgb(229,83,13)" fg:x="925" fg:w="2"/><text x="6.6803%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.06%)</title><rect x="6.4512%" y="645" width="0.0556%" height="15" fill="rgb(241,91,40)" fg:x="928" fg:w="8"/><text x="6.7012%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (8 samples, 0.06%)</title><rect x="6.4512%" y="629" width="0.0556%" height="15" fill="rgb(225,3,45)" fg:x="928" fg:w="8"/><text x="6.7012%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.06%)</title><rect x="6.4512%" y="613" width="0.0556%" height="15" fill="rgb(244,223,14)" fg:x="928" fg:w="8"/><text x="6.7012%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="6.4651%" y="597" width="0.0417%" height="15" fill="rgb(224,124,37)" fg:x="930" fg:w="6"/><text x="6.7151%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="6.4651%" y="581" width="0.0417%" height="15" fill="rgb(251,171,30)" fg:x="930" fg:w="6"/><text x="6.7151%" y="591.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="6.4651%" y="565" width="0.0417%" height="15" fill="rgb(236,46,54)" fg:x="930" fg:w="6"/><text x="6.7151%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="6.4651%" y="549" width="0.0417%" height="15" fill="rgb(245,213,5)" fg:x="930" fg:w="6"/><text x="6.7151%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="6.4651%" y="533" width="0.0417%" height="15" fill="rgb(230,144,27)" fg:x="930" fg:w="6"/><text x="6.7151%" y="543.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.03%)</title><rect x="6.4790%" y="517" width="0.0278%" height="15" fill="rgb(220,86,6)" fg:x="932" fg:w="4"/><text x="6.7290%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.07%)</title><rect x="6.4442%" y="741" width="0.0695%" height="15" fill="rgb(240,20,13)" fg:x="927" fg:w="10"/><text x="6.6942%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.07%)</title><rect x="6.4442%" y="725" width="0.0695%" height="15" fill="rgb(217,89,34)" fg:x="927" fg:w="10"/><text x="6.6942%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.07%)</title><rect x="6.4442%" y="709" width="0.0695%" height="15" fill="rgb(229,13,5)" fg:x="927" fg:w="10"/><text x="6.6942%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.07%)</title><rect x="6.4442%" y="693" width="0.0695%" height="15" fill="rgb(244,67,35)" fg:x="927" fg:w="10"/><text x="6.6942%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.07%)</title><rect x="6.4442%" y="677" width="0.0695%" height="15" fill="rgb(221,40,2)" fg:x="927" fg:w="10"/><text x="6.6942%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (10 samples, 0.07%)</title><rect x="6.4442%" y="661" width="0.0695%" height="15" fill="rgb(237,157,21)" fg:x="927" fg:w="10"/><text x="6.6942%" y="671.50"></text></g><g><title>__GI_munmap (2 samples, 0.01%)</title><rect x="6.5137%" y="613" width="0.0139%" height="15" fill="rgb(222,94,11)" fg:x="937" fg:w="2"/><text x="6.7637%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="6.5137%" y="597" width="0.0139%" height="15" fill="rgb(249,113,6)" fg:x="937" fg:w="2"/><text x="6.7637%" y="607.50"></text></g><g><title>do_syscall_64 (2 samples, 0.01%)</title><rect x="6.5137%" y="581" width="0.0139%" height="15" fill="rgb(238,137,36)" fg:x="937" fg:w="2"/><text x="6.7637%" y="591.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="6.5137%" y="565" width="0.0139%" height="15" fill="rgb(210,102,26)" fg:x="937" fg:w="2"/><text x="6.7637%" y="575.50"></text></g><g><title>__vm_munmap (2 samples, 0.01%)</title><rect x="6.5137%" y="549" width="0.0139%" height="15" fill="rgb(218,30,30)" fg:x="937" fg:w="2"/><text x="6.7637%" y="559.50"></text></g><g><title>__do_munmap (2 samples, 0.01%)</title><rect x="6.5137%" y="533" width="0.0139%" height="15" fill="rgb(214,67,26)" fg:x="937" fg:w="2"/><text x="6.7637%" y="543.50"></text></g><g><title>unmap_region (2 samples, 0.01%)</title><rect x="6.5137%" y="517" width="0.0139%" height="15" fill="rgb(251,9,53)" fg:x="937" fg:w="2"/><text x="6.7637%" y="527.50"></text></g><g><title>tlb_finish_mmu (3 samples, 0.02%)</title><rect x="6.5276%" y="437" width="0.0209%" height="15" fill="rgb(228,204,25)" fg:x="939" fg:w="3"/><text x="6.7776%" y="447.50"></text></g><g><title>tlb_flush_mmu (3 samples, 0.02%)</title><rect x="6.5276%" y="421" width="0.0209%" height="15" fill="rgb(207,153,8)" fg:x="939" fg:w="3"/><text x="6.7776%" y="431.50"></text></g><g><title>free_pages_and_swap_cache (3 samples, 0.02%)</title><rect x="6.5276%" y="405" width="0.0209%" height="15" fill="rgb(242,9,16)" fg:x="939" fg:w="3"/><text x="6.7776%" y="415.50"></text></g><g><title>release_pages (3 samples, 0.02%)</title><rect x="6.5276%" y="389" width="0.0209%" height="15" fill="rgb(217,211,10)" fg:x="939" fg:w="3"/><text x="6.7776%" y="399.50"></text></g><g><title>free_unref_page_list (3 samples, 0.02%)</title><rect x="6.5276%" y="373" width="0.0209%" height="15" fill="rgb(219,228,52)" fg:x="939" fg:w="3"/><text x="6.7776%" y="383.50"></text></g><g><title>free_unref_page_commit (3 samples, 0.02%)</title><rect x="6.5276%" y="357" width="0.0209%" height="15" fill="rgb(231,92,29)" fg:x="939" fg:w="3"/><text x="6.7776%" y="367.50"></text></g><g><title>free_pcppages_bulk (3 samples, 0.02%)</title><rect x="6.5276%" y="341" width="0.0209%" height="15" fill="rgb(232,8,23)" fg:x="939" fg:w="3"/><text x="6.7776%" y="351.50"></text></g><g><title>y2021::d05::main::run (465 samples, 3.23%)</title><rect x="3.3368%" y="773" width="3.2325%" height="15" fill="rgb(216,211,34)" fg:x="480" fg:w="465"/><text x="3.5868%" y="783.50">y20..</text></g><g><title>y2021::d05::main::p02 (310 samples, 2.16%)</title><rect x="4.4143%" y="757" width="2.1550%" height="15" fill="rgb(236,151,0)" fg:x="635" fg:w="310"/><text x="4.6643%" y="767.50">y..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::types::point::Point,i32&gt;&gt; (8 samples, 0.06%)</title><rect x="6.5137%" y="741" width="0.0556%" height="15" fill="rgb(209,168,3)" fg:x="937" fg:w="8"/><text x="6.7637%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::types::point::Point,i32,std::collections::hash::map::RandomState&gt;&gt; (8 samples, 0.06%)</title><rect x="6.5137%" y="725" width="0.0556%" height="15" fill="rgb(208,129,28)" fg:x="937" fg:w="8"/><text x="6.7637%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::types::point::Point,i32)&gt;&gt; (8 samples, 0.06%)</title><rect x="6.5137%" y="709" width="0.0556%" height="15" fill="rgb(229,78,22)" fg:x="937" fg:w="8"/><text x="6.7637%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.06%)</title><rect x="6.5137%" y="693" width="0.0556%" height="15" fill="rgb(228,187,13)" fg:x="937" fg:w="8"/><text x="6.7637%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (8 samples, 0.06%)</title><rect x="6.5137%" y="677" width="0.0556%" height="15" fill="rgb(240,119,24)" fg:x="937" fg:w="8"/><text x="6.7637%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (8 samples, 0.06%)</title><rect x="6.5137%" y="661" width="0.0556%" height="15" fill="rgb(209,194,42)" fg:x="937" fg:w="8"/><text x="6.7637%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.06%)</title><rect x="6.5137%" y="645" width="0.0556%" height="15" fill="rgb(247,200,46)" fg:x="937" fg:w="8"/><text x="6.7637%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.06%)</title><rect x="6.5137%" y="629" width="0.0556%" height="15" fill="rgb(218,76,16)" fg:x="937" fg:w="8"/><text x="6.7637%" y="639.50"></text></g><g><title>_int_free (6 samples, 0.04%)</title><rect x="6.5276%" y="613" width="0.0417%" height="15" fill="rgb(225,21,48)" fg:x="939" fg:w="6"/><text x="6.7776%" y="623.50"></text></g><g><title>systrim (6 samples, 0.04%)</title><rect x="6.5276%" y="597" width="0.0417%" height="15" fill="rgb(239,223,50)" fg:x="939" fg:w="6"/><text x="6.7776%" y="607.50"></text></g><g><title>__GI___default_morecore (6 samples, 0.04%)</title><rect x="6.5276%" y="581" width="0.0417%" height="15" fill="rgb(244,45,21)" fg:x="939" fg:w="6"/><text x="6.7776%" y="591.50"></text></g><g><title>__GI___sbrk (6 samples, 0.04%)</title><rect x="6.5276%" y="565" width="0.0417%" height="15" fill="rgb(232,33,43)" fg:x="939" fg:w="6"/><text x="6.7776%" y="575.50"></text></g><g><title>__GI___sbrk (6 samples, 0.04%)</title><rect x="6.5276%" y="549" width="0.0417%" height="15" fill="rgb(209,8,3)" fg:x="939" fg:w="6"/><text x="6.7776%" y="559.50"></text></g><g><title>__brk (6 samples, 0.04%)</title><rect x="6.5276%" y="533" width="0.0417%" height="15" fill="rgb(214,25,53)" fg:x="939" fg:w="6"/><text x="6.7776%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="6.5276%" y="517" width="0.0417%" height="15" fill="rgb(254,186,54)" fg:x="939" fg:w="6"/><text x="6.7776%" y="527.50"></text></g><g><title>do_syscall_64 (6 samples, 0.04%)</title><rect x="6.5276%" y="501" width="0.0417%" height="15" fill="rgb(208,174,49)" fg:x="939" fg:w="6"/><text x="6.7776%" y="511.50"></text></g><g><title>__x64_sys_brk (6 samples, 0.04%)</title><rect x="6.5276%" y="485" width="0.0417%" height="15" fill="rgb(233,191,51)" fg:x="939" fg:w="6"/><text x="6.7776%" y="495.50"></text></g><g><title>__do_munmap (6 samples, 0.04%)</title><rect x="6.5276%" y="469" width="0.0417%" height="15" fill="rgb(222,134,10)" fg:x="939" fg:w="6"/><text x="6.7776%" y="479.50"></text></g><g><title>unmap_region (6 samples, 0.04%)</title><rect x="6.5276%" y="453" width="0.0417%" height="15" fill="rgb(230,226,20)" fg:x="939" fg:w="6"/><text x="6.7776%" y="463.50"></text></g><g><title>unmap_vmas (3 samples, 0.02%)</title><rect x="6.5485%" y="437" width="0.0209%" height="15" fill="rgb(251,111,25)" fg:x="942" fg:w="3"/><text x="6.7985%" y="447.50"></text></g><g><title>unmap_single_vma (3 samples, 0.02%)</title><rect x="6.5485%" y="421" width="0.0209%" height="15" fill="rgb(224,40,46)" fg:x="942" fg:w="3"/><text x="6.7985%" y="431.50"></text></g><g><title>unmap_page_range (3 samples, 0.02%)</title><rect x="6.5485%" y="405" width="0.0209%" height="15" fill="rgb(236,108,47)" fg:x="942" fg:w="3"/><text x="6.7985%" y="415.50"></text></g><g><title>zap_pte_range.isra.0 (3 samples, 0.02%)</title><rect x="6.5485%" y="389" width="0.0209%" height="15" fill="rgb(234,93,0)" fg:x="942" fg:w="3"/><text x="6.7985%" y="399.50"></text></g><g><title>y2021::d07::main::p01 (9 samples, 0.06%)</title><rect x="6.5693%" y="757" width="0.0626%" height="15" fill="rgb(224,213,32)" fg:x="945" fg:w="9"/><text x="6.8193%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.06%)</title><rect x="6.5693%" y="741" width="0.0626%" height="15" fill="rgb(251,11,48)" fg:x="945" fg:w="9"/><text x="6.8193%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.06%)</title><rect x="6.5693%" y="725" width="0.0626%" height="15" fill="rgb(236,173,5)" fg:x="945" fg:w="9"/><text x="6.8193%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.06%)</title><rect x="6.5693%" y="709" width="0.0626%" height="15" fill="rgb(230,95,12)" fg:x="945" fg:w="9"/><text x="6.8193%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.06%)</title><rect x="6.5693%" y="693" width="0.0626%" height="15" fill="rgb(232,209,1)" fg:x="945" fg:w="9"/><text x="6.8193%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.06%)</title><rect x="6.5693%" y="677" width="0.0626%" height="15" fill="rgb(232,6,1)" fg:x="945" fg:w="9"/><text x="6.8193%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.06%)</title><rect x="6.5693%" y="661" width="0.0626%" height="15" fill="rgb(210,224,50)" fg:x="945" fg:w="9"/><text x="6.8193%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.06%)</title><rect x="6.5693%" y="645" width="0.0626%" height="15" fill="rgb(228,127,35)" fg:x="945" fg:w="9"/><text x="6.8193%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (9 samples, 0.06%)</title><rect x="6.5693%" y="629" width="0.0626%" height="15" fill="rgb(245,102,45)" fg:x="945" fg:w="9"/><text x="6.8193%" y="639.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (9 samples, 0.06%)</title><rect x="6.5693%" y="613" width="0.0626%" height="15" fill="rgb(214,1,49)" fg:x="945" fg:w="9"/><text x="6.8193%" y="623.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (9 samples, 0.06%)</title><rect x="6.5693%" y="597" width="0.0626%" height="15" fill="rgb(226,163,40)" fg:x="945" fg:w="9"/><text x="6.8193%" y="607.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (9 samples, 0.06%)</title><rect x="6.5693%" y="581" width="0.0626%" height="15" fill="rgb(239,212,28)" fg:x="945" fg:w="9"/><text x="6.8193%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9 samples, 0.06%)</title><rect x="6.5693%" y="565" width="0.0626%" height="15" fill="rgb(220,20,13)" fg:x="945" fg:w="9"/><text x="6.8193%" y="575.50"></text></g><g><title>y2021::d07::main::p01::{{closure}} (9 samples, 0.06%)</title><rect x="6.5693%" y="549" width="0.0626%" height="15" fill="rgb(210,164,35)" fg:x="945" fg:w="9"/><text x="6.8193%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (9 samples, 0.06%)</title><rect x="6.5693%" y="533" width="0.0626%" height="15" fill="rgb(248,109,41)" fg:x="945" fg:w="9"/><text x="6.8193%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (9 samples, 0.06%)</title><rect x="6.5693%" y="517" width="0.0626%" height="15" fill="rgb(238,23,50)" fg:x="945" fg:w="9"/><text x="6.8193%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.06%)</title><rect x="6.5693%" y="501" width="0.0626%" height="15" fill="rgb(211,48,49)" fg:x="945" fg:w="9"/><text x="6.8193%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.06%)</title><rect x="6.5693%" y="485" width="0.0626%" height="15" fill="rgb(223,36,21)" fg:x="945" fg:w="9"/><text x="6.8193%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9 samples, 0.06%)</title><rect x="6.5693%" y="469" width="0.0626%" height="15" fill="rgb(207,123,46)" fg:x="945" fg:w="9"/><text x="6.8193%" y="479.50"></text></g><g><title>y2021::d07::main::p01::{{closure}}::{{closure}} (8 samples, 0.06%)</title><rect x="6.5763%" y="453" width="0.0556%" height="15" fill="rgb(240,218,32)" fg:x="946" fg:w="8"/><text x="6.8263%" y="463.50"></text></g><g><title>y2021::utils::math::abs_diff (8 samples, 0.06%)</title><rect x="6.5763%" y="437" width="0.0556%" height="15" fill="rgb(252,5,43)" fg:x="946" fg:w="8"/><text x="6.8263%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (7 samples, 0.05%)</title><rect x="6.5832%" y="421" width="0.0487%" height="15" fill="rgb(252,84,19)" fg:x="947" fg:w="7"/><text x="6.8332%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::gt (7 samples, 0.05%)</title><rect x="6.5832%" y="405" width="0.0487%" height="15" fill="rgb(243,152,39)" fg:x="947" fg:w="7"/><text x="6.8332%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="6.6319%" y="453" width="0.0278%" height="15" fill="rgb(234,160,15)" fg:x="954" fg:w="4"/><text x="6.8819%" y="463.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (5 samples, 0.03%)</title><rect x="6.6597%" y="421" width="0.0348%" height="15" fill="rgb(237,34,20)" fg:x="958" fg:w="5"/><text x="6.9097%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.05%)</title><rect x="6.6597%" y="437" width="0.0487%" height="15" fill="rgb(229,97,13)" fg:x="958" fg:w="7"/><text x="6.9097%" y="447.50"></text></g><g><title>y2021::d07::main::p02::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="6.6945%" y="421" width="0.0139%" height="15" fill="rgb(234,71,50)" fg:x="963" fg:w="2"/><text x="6.9445%" y="431.50"></text></g><g><title>y2021::d07::main::run (22 samples, 0.15%)</title><rect x="6.5693%" y="773" width="0.1529%" height="15" fill="rgb(253,155,4)" fg:x="945" fg:w="22"/><text x="6.8193%" y="783.50"></text></g><g><title>y2021::d07::main::p02 (13 samples, 0.09%)</title><rect x="6.6319%" y="757" width="0.0904%" height="15" fill="rgb(222,185,37)" fg:x="954" fg:w="13"/><text x="6.8819%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.09%)</title><rect x="6.6319%" y="741" width="0.0904%" height="15" fill="rgb(251,177,13)" fg:x="954" fg:w="13"/><text x="6.8819%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.09%)</title><rect x="6.6319%" y="725" width="0.0904%" height="15" fill="rgb(250,179,40)" fg:x="954" fg:w="13"/><text x="6.8819%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.09%)</title><rect x="6.6319%" y="709" width="0.0904%" height="15" fill="rgb(242,44,2)" fg:x="954" fg:w="13"/><text x="6.8819%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.09%)</title><rect x="6.6319%" y="693" width="0.0904%" height="15" fill="rgb(216,177,13)" fg:x="954" fg:w="13"/><text x="6.8819%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 0.09%)</title><rect x="6.6319%" y="677" width="0.0904%" height="15" fill="rgb(216,106,43)" fg:x="954" fg:w="13"/><text x="6.8819%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 0.09%)</title><rect x="6.6319%" y="661" width="0.0904%" height="15" fill="rgb(216,183,2)" fg:x="954" fg:w="13"/><text x="6.8819%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.09%)</title><rect x="6.6319%" y="645" width="0.0904%" height="15" fill="rgb(249,75,3)" fg:x="954" fg:w="13"/><text x="6.8819%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (13 samples, 0.09%)</title><rect x="6.6319%" y="629" width="0.0904%" height="15" fill="rgb(219,67,39)" fg:x="954" fg:w="13"/><text x="6.8819%" y="639.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (13 samples, 0.09%)</title><rect x="6.6319%" y="613" width="0.0904%" height="15" fill="rgb(253,228,2)" fg:x="954" fg:w="13"/><text x="6.8819%" y="623.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (13 samples, 0.09%)</title><rect x="6.6319%" y="597" width="0.0904%" height="15" fill="rgb(235,138,27)" fg:x="954" fg:w="13"/><text x="6.8819%" y="607.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (13 samples, 0.09%)</title><rect x="6.6319%" y="581" width="0.0904%" height="15" fill="rgb(236,97,51)" fg:x="954" fg:w="13"/><text x="6.8819%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (13 samples, 0.09%)</title><rect x="6.6319%" y="565" width="0.0904%" height="15" fill="rgb(240,80,30)" fg:x="954" fg:w="13"/><text x="6.8819%" y="575.50"></text></g><g><title>y2021::d07::main::p02::{{closure}} (13 samples, 0.09%)</title><rect x="6.6319%" y="549" width="0.0904%" height="15" fill="rgb(230,178,19)" fg:x="954" fg:w="13"/><text x="6.8819%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (13 samples, 0.09%)</title><rect x="6.6319%" y="533" width="0.0904%" height="15" fill="rgb(210,190,27)" fg:x="954" fg:w="13"/><text x="6.8819%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (13 samples, 0.09%)</title><rect x="6.6319%" y="517" width="0.0904%" height="15" fill="rgb(222,107,31)" fg:x="954" fg:w="13"/><text x="6.8819%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.09%)</title><rect x="6.6319%" y="501" width="0.0904%" height="15" fill="rgb(216,127,34)" fg:x="954" fg:w="13"/><text x="6.8819%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.09%)</title><rect x="6.6319%" y="485" width="0.0904%" height="15" fill="rgb(234,116,52)" fg:x="954" fg:w="13"/><text x="6.8819%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 0.09%)</title><rect x="6.6319%" y="469" width="0.0904%" height="15" fill="rgb(222,124,15)" fg:x="954" fg:w="13"/><text x="6.8819%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9 samples, 0.06%)</title><rect x="6.6597%" y="453" width="0.0626%" height="15" fill="rgb(231,179,28)" fg:x="958" fg:w="9"/><text x="6.9097%" y="463.50"></text></g><g><title>y2021::d07::main::p02::{{closure}}::{{closure}} (2 samples, 0.01%)</title><rect x="6.7084%" y="437" width="0.0139%" height="15" fill="rgb(226,93,45)" fg:x="965" fg:w="2"/><text x="6.9584%" y="447.50"></text></g><g><title>y2021::utils::math::abs_diff (2 samples, 0.01%)</title><rect x="6.7084%" y="421" width="0.0139%" height="15" fill="rgb(215,8,51)" fg:x="965" fg:w="2"/><text x="6.9584%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (2 samples, 0.01%)</title><rect x="6.7084%" y="405" width="0.0139%" height="15" fill="rgb(223,106,5)" fg:x="965" fg:w="2"/><text x="6.9584%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::gt (2 samples, 0.01%)</title><rect x="6.7084%" y="389" width="0.0139%" height="15" fill="rgb(250,191,5)" fg:x="965" fg:w="2"/><text x="6.9584%" y="399.50"></text></g><g><title>y2021::d08::main::p01 (3 samples, 0.02%)</title><rect x="6.7223%" y="757" width="0.0209%" height="15" fill="rgb(242,132,44)" fg:x="967" fg:w="3"/><text x="6.9723%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.02%)</title><rect x="6.7223%" y="741" width="0.0209%" height="15" fill="rgb(251,152,29)" fg:x="967" fg:w="3"/><text x="6.9723%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="6.7223%" y="725" width="0.0209%" height="15" fill="rgb(218,179,5)" fg:x="967" fg:w="3"/><text x="6.9723%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="6.7223%" y="709" width="0.0209%" height="15" fill="rgb(227,67,19)" fg:x="967" fg:w="3"/><text x="6.9723%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="6.7223%" y="693" width="0.0209%" height="15" fill="rgb(233,119,31)" fg:x="967" fg:w="3"/><text x="6.9723%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="6.7223%" y="677" width="0.0209%" height="15" fill="rgb(241,120,22)" fg:x="967" fg:w="3"/><text x="6.9723%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.02%)</title><rect x="6.7223%" y="661" width="0.0209%" height="15" fill="rgb(224,102,30)" fg:x="967" fg:w="3"/><text x="6.9723%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="6.7223%" y="645" width="0.0209%" height="15" fill="rgb(210,164,37)" fg:x="967" fg:w="3"/><text x="6.9723%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.02%)</title><rect x="6.7223%" y="629" width="0.0209%" height="15" fill="rgb(226,191,16)" fg:x="967" fg:w="3"/><text x="6.9723%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="6.7223%" y="613" width="0.0209%" height="15" fill="rgb(214,40,45)" fg:x="967" fg:w="3"/><text x="6.9723%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="6.7223%" y="597" width="0.0209%" height="15" fill="rgb(244,29,26)" fg:x="967" fg:w="3"/><text x="6.9723%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="6.7223%" y="581" width="0.0209%" height="15" fill="rgb(216,16,5)" fg:x="967" fg:w="3"/><text x="6.9723%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (3 samples, 0.02%)</title><rect x="6.7223%" y="565" width="0.0209%" height="15" fill="rgb(249,76,35)" fg:x="967" fg:w="3"/><text x="6.9723%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="6.7223%" y="549" width="0.0209%" height="15" fill="rgb(207,11,44)" fg:x="967" fg:w="3"/><text x="6.9723%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="6.7223%" y="533" width="0.0209%" height="15" fill="rgb(228,190,49)" fg:x="967" fg:w="3"/><text x="6.9723%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.02%)</title><rect x="6.7223%" y="517" width="0.0209%" height="15" fill="rgb(214,173,12)" fg:x="967" fg:w="3"/><text x="6.9723%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.02%)</title><rect x="6.7223%" y="501" width="0.0209%" height="15" fill="rgb(218,26,35)" fg:x="967" fg:w="3"/><text x="6.9723%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.02%)</title><rect x="6.7223%" y="485" width="0.0209%" height="15" fill="rgb(220,200,19)" fg:x="967" fg:w="3"/><text x="6.9723%" y="495.50"></text></g><g><title>y2021::d08::main::p01::{{closure}} (3 samples, 0.02%)</title><rect x="6.7223%" y="469" width="0.0209%" height="15" fill="rgb(239,95,49)" fg:x="967" fg:w="3"/><text x="6.9723%" y="479.50"></text></g><g><title>y2021::d08::main::parse_line (3 samples, 0.02%)</title><rect x="6.7223%" y="453" width="0.0209%" height="15" fill="rgb(235,85,53)" fg:x="967" fg:w="3"/><text x="6.9723%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="6.7292%" y="437" width="0.0139%" height="15" fill="rgb(233,133,31)" fg:x="968" fg:w="2"/><text x="6.9792%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="6.7292%" y="421" width="0.0139%" height="15" fill="rgb(218,25,20)" fg:x="968" fg:w="2"/><text x="6.9792%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="6.7292%" y="405" width="0.0139%" height="15" fill="rgb(252,210,38)" fg:x="968" fg:w="2"/><text x="6.9792%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="6.7292%" y="389" width="0.0139%" height="15" fill="rgb(242,134,21)" fg:x="968" fg:w="2"/><text x="6.9792%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="6.7292%" y="373" width="0.0139%" height="15" fill="rgb(213,28,48)" fg:x="968" fg:w="2"/><text x="6.9792%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.01%)</title><rect x="6.7292%" y="357" width="0.0139%" height="15" fill="rgb(250,196,2)" fg:x="968" fg:w="2"/><text x="6.9792%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="6.7292%" y="341" width="0.0139%" height="15" fill="rgb(227,5,17)" fg:x="968" fg:w="2"/><text x="6.9792%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="6.7292%" y="325" width="0.0139%" height="15" fill="rgb(221,226,24)" fg:x="968" fg:w="2"/><text x="6.9792%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.01%)</title><rect x="6.7292%" y="309" width="0.0139%" height="15" fill="rgb(211,5,48)" fg:x="968" fg:w="2"/><text x="6.9792%" y="319.50"></text></g><g><title>y2021::d08::main::parse_line::{{closure}} (2 samples, 0.01%)</title><rect x="6.7292%" y="293" width="0.0139%" height="15" fill="rgb(219,150,6)" fg:x="968" fg:w="2"/><text x="6.9792%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (2 samples, 0.01%)</title><rect x="6.7292%" y="277" width="0.0139%" height="15" fill="rgb(251,46,16)" fg:x="968" fg:w="2"/><text x="6.9792%" y="287.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.01%)</title><rect x="6.7292%" y="261" width="0.0139%" height="15" fill="rgb(220,204,40)" fg:x="968" fg:w="2"/><text x="6.9792%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.01%)</title><rect x="6.7292%" y="245" width="0.0139%" height="15" fill="rgb(211,85,2)" fg:x="968" fg:w="2"/><text x="6.9792%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.01%)</title><rect x="6.7292%" y="229" width="0.0139%" height="15" fill="rgb(229,17,7)" fg:x="968" fg:w="2"/><text x="6.9792%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="6.7292%" y="213" width="0.0139%" height="15" fill="rgb(239,72,28)" fg:x="968" fg:w="2"/><text x="6.9792%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="6.7292%" y="197" width="0.0139%" height="15" fill="rgb(230,47,54)" fg:x="968" fg:w="2"/><text x="6.9792%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="6.7292%" y="181" width="0.0139%" height="15" fill="rgb(214,50,8)" fg:x="968" fg:w="2"/><text x="6.9792%" y="191.50"></text></g><g><title>y2021::d08::main::parse_line (2 samples, 0.01%)</title><rect x="6.7431%" y="469" width="0.0139%" height="15" fill="rgb(216,198,43)" fg:x="970" fg:w="2"/><text x="6.9931%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="6.7570%" y="453" width="0.0139%" height="15" fill="rgb(234,20,35)" fg:x="972" fg:w="2"/><text x="7.0070%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2 samples, 0.01%)</title><rect x="6.7570%" y="437" width="0.0139%" height="15" fill="rgb(254,45,19)" fg:x="972" fg:w="2"/><text x="7.0070%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.01%)</title><rect x="6.7570%" y="421" width="0.0139%" height="15" fill="rgb(219,14,44)" fg:x="972" fg:w="2"/><text x="7.0070%" y="431.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (2 samples, 0.01%)</title><rect x="6.7570%" y="405" width="0.0139%" height="15" fill="rgb(217,220,26)" fg:x="972" fg:w="2"/><text x="7.0070%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="6.7570%" y="389" width="0.0139%" height="15" fill="rgb(213,158,28)" fg:x="972" fg:w="2"/><text x="7.0070%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="6.7570%" y="373" width="0.0139%" height="15" fill="rgb(252,51,52)" fg:x="972" fg:w="2"/><text x="7.0070%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="6.7570%" y="357" width="0.0139%" height="15" fill="rgb(246,89,16)" fg:x="972" fg:w="2"/><text x="7.0070%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="6.7570%" y="341" width="0.0139%" height="15" fill="rgb(216,158,49)" fg:x="972" fg:w="2"/><text x="7.0070%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="6.7570%" y="325" width="0.0139%" height="15" fill="rgb(236,107,19)" fg:x="972" fg:w="2"/><text x="7.0070%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.01%)</title><rect x="6.7570%" y="309" width="0.0139%" height="15" fill="rgb(228,185,30)" fg:x="972" fg:w="2"/><text x="7.0070%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.02%)</title><rect x="6.7709%" y="453" width="0.0209%" height="15" fill="rgb(246,134,8)" fg:x="974" fg:w="3"/><text x="7.0209%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="6.7709%" y="437" width="0.0209%" height="15" fill="rgb(214,143,50)" fg:x="974" fg:w="3"/><text x="7.0209%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="6.7709%" y="421" width="0.0209%" height="15" fill="rgb(228,75,8)" fg:x="974" fg:w="3"/><text x="7.0209%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="6.7709%" y="405" width="0.0209%" height="15" fill="rgb(207,175,4)" fg:x="974" fg:w="3"/><text x="7.0209%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="6.7709%" y="389" width="0.0209%" height="15" fill="rgb(205,108,24)" fg:x="974" fg:w="3"/><text x="7.0209%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.02%)</title><rect x="6.7709%" y="373" width="0.0209%" height="15" fill="rgb(244,120,49)" fg:x="974" fg:w="3"/><text x="7.0209%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="6.7709%" y="357" width="0.0209%" height="15" fill="rgb(223,47,38)" fg:x="974" fg:w="3"/><text x="7.0209%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="6.7709%" y="341" width="0.0209%" height="15" fill="rgb(229,179,11)" fg:x="974" fg:w="3"/><text x="7.0209%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.02%)</title><rect x="6.7709%" y="325" width="0.0209%" height="15" fill="rgb(231,122,1)" fg:x="974" fg:w="3"/><text x="7.0209%" y="335.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (2 samples, 0.01%)</title><rect x="6.7779%" y="309" width="0.0139%" height="15" fill="rgb(245,119,9)" fg:x="975" fg:w="2"/><text x="7.0279%" y="319.50"></text></g><g><title>y2021::d08::main::set_from_iter (2 samples, 0.01%)</title><rect x="6.7779%" y="293" width="0.0139%" height="15" fill="rgb(241,163,25)" fg:x="975" fg:w="2"/><text x="7.0279%" y="303.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.01%)</title><rect x="6.7779%" y="277" width="0.0139%" height="15" fill="rgb(217,214,3)" fg:x="975" fg:w="2"/><text x="7.0279%" y="287.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="6.7779%" y="261" width="0.0139%" height="15" fill="rgb(240,86,28)" fg:x="975" fg:w="2"/><text x="7.0279%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="6.7779%" y="245" width="0.0139%" height="15" fill="rgb(215,47,9)" fg:x="975" fg:w="2"/><text x="7.0279%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.01%)</title><rect x="6.7779%" y="229" width="0.0139%" height="15" fill="rgb(252,25,45)" fg:x="975" fg:w="2"/><text x="7.0279%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="6.7779%" y="213" width="0.0139%" height="15" fill="rgb(251,164,9)" fg:x="975" fg:w="2"/><text x="7.0279%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.01%)</title><rect x="6.7779%" y="197" width="0.0139%" height="15" fill="rgb(233,194,0)" fg:x="975" fg:w="2"/><text x="7.0279%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.01%)</title><rect x="6.7779%" y="181" width="0.0139%" height="15" fill="rgb(249,111,24)" fg:x="975" fg:w="2"/><text x="7.0279%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;std::collections::hash::set::HashSet&lt;char&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="6.8057%" y="453" width="0.0139%" height="15" fill="rgb(250,223,3)" fg:x="979" fg:w="2"/><text x="7.0557%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="6.8057%" y="437" width="0.0139%" height="15" fill="rgb(236,178,37)" fg:x="979" fg:w="2"/><text x="7.0557%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[std::collections::hash::set::HashSet&lt;char&gt;]&gt; (2 samples, 0.01%)</title><rect x="6.8057%" y="421" width="0.0139%" height="15" fill="rgb(241,158,50)" fg:x="979" fg:w="2"/><text x="7.0557%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;char&gt;&gt; (2 samples, 0.01%)</title><rect x="6.8057%" y="405" width="0.0139%" height="15" fill="rgb(213,121,41)" fg:x="979" fg:w="2"/><text x="7.0557%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;char,std::collections::hash::map::RandomState&gt;&gt; (2 samples, 0.01%)</title><rect x="6.8057%" y="389" width="0.0139%" height="15" fill="rgb(240,92,3)" fg:x="979" fg:w="2"/><text x="7.0557%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;char,(),std::collections::hash::map::RandomState&gt;&gt; (2 samples, 0.01%)</title><rect x="6.8057%" y="373" width="0.0139%" height="15" fill="rgb(205,123,3)" fg:x="979" fg:w="2"/><text x="7.0557%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(char,())&gt;&gt; (2 samples, 0.01%)</title><rect x="6.8057%" y="357" width="0.0139%" height="15" fill="rgb(205,97,47)" fg:x="979" fg:w="2"/><text x="7.0557%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="6.8057%" y="341" width="0.0139%" height="15" fill="rgb(247,152,14)" fg:x="979" fg:w="2"/><text x="7.0557%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (2 samples, 0.01%)</title><rect x="6.8057%" y="325" width="0.0139%" height="15" fill="rgb(248,195,53)" fg:x="979" fg:w="2"/><text x="7.0557%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (2 samples, 0.01%)</title><rect x="6.8057%" y="309" width="0.0139%" height="15" fill="rgb(226,201,16)" fg:x="979" fg:w="2"/><text x="7.0557%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="6.8057%" y="293" width="0.0139%" height="15" fill="rgb(205,98,0)" fg:x="979" fg:w="2"/><text x="7.0557%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="6.8057%" y="277" width="0.0139%" height="15" fill="rgb(214,191,48)" fg:x="979" fg:w="2"/><text x="7.0557%" y="287.50"></text></g><g><title>y2021::d08::main::run (17 samples, 0.12%)</title><rect x="6.7223%" y="773" width="0.1182%" height="15" fill="rgb(237,112,39)" fg:x="967" fg:w="17"/><text x="6.9723%" y="783.50"></text></g><g><title>y2021::d08::main::p02 (14 samples, 0.10%)</title><rect x="6.7431%" y="757" width="0.0973%" height="15" fill="rgb(247,203,27)" fg:x="970" fg:w="14"/><text x="6.9931%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.10%)</title><rect x="6.7431%" y="741" width="0.0973%" height="15" fill="rgb(235,124,28)" fg:x="970" fg:w="14"/><text x="6.9931%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::iter::traits::accum::Sum&lt;core::option::Option&lt;U&gt;&gt;&gt;::sum (14 samples, 0.10%)</title><rect x="6.7431%" y="725" width="0.0973%" height="15" fill="rgb(208,207,46)" fg:x="970" fg:w="14"/><text x="6.9931%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.10%)</title><rect x="6.7431%" y="709" width="0.0973%" height="15" fill="rgb(234,176,4)" fg:x="970" fg:w="14"/><text x="6.9931%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::accum::Sum&lt;core::result::Result&lt;U,E&gt;&gt;&gt;::sum (14 samples, 0.10%)</title><rect x="6.7431%" y="693" width="0.0973%" height="15" fill="rgb(230,133,28)" fg:x="970" fg:w="14"/><text x="6.9931%" y="703.50"></text></g><g><title>core::iter::adapters::process_results (14 samples, 0.10%)</title><rect x="6.7431%" y="677" width="0.0973%" height="15" fill="rgb(211,137,40)" fg:x="970" fg:w="14"/><text x="6.9931%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::accum::Sum&lt;core::result::Result&lt;U,E&gt;&gt;&gt;::sum::{{closure}} (14 samples, 0.10%)</title><rect x="6.7431%" y="661" width="0.0973%" height="15" fill="rgb(254,35,13)" fg:x="970" fg:w="14"/><text x="6.9931%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.10%)</title><rect x="6.7431%" y="645" width="0.0973%" height="15" fill="rgb(225,49,51)" fg:x="970" fg:w="14"/><text x="6.9931%" y="655.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (14 samples, 0.10%)</title><rect x="6.7431%" y="629" width="0.0973%" height="15" fill="rgb(251,10,15)" fg:x="970" fg:w="14"/><text x="6.9931%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.10%)</title><rect x="6.7431%" y="613" width="0.0973%" height="15" fill="rgb(228,207,15)" fg:x="970" fg:w="14"/><text x="6.9931%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.10%)</title><rect x="6.7431%" y="597" width="0.0973%" height="15" fill="rgb(241,99,19)" fg:x="970" fg:w="14"/><text x="6.9931%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.10%)</title><rect x="6.7431%" y="581" width="0.0973%" height="15" fill="rgb(207,104,49)" fg:x="970" fg:w="14"/><text x="6.9931%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.10%)</title><rect x="6.7431%" y="565" width="0.0973%" height="15" fill="rgb(234,99,18)" fg:x="970" fg:w="14"/><text x="6.9931%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.10%)</title><rect x="6.7431%" y="549" width="0.0973%" height="15" fill="rgb(213,191,49)" fg:x="970" fg:w="14"/><text x="6.9931%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.10%)</title><rect x="6.7431%" y="533" width="0.0973%" height="15" fill="rgb(210,226,19)" fg:x="970" fg:w="14"/><text x="6.9931%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (14 samples, 0.10%)</title><rect x="6.7431%" y="517" width="0.0973%" height="15" fill="rgb(229,97,18)" fg:x="970" fg:w="14"/><text x="6.9931%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (14 samples, 0.10%)</title><rect x="6.7431%" y="501" width="0.0973%" height="15" fill="rgb(211,167,15)" fg:x="970" fg:w="14"/><text x="6.9931%" y="511.50"></text></g><g><title>y2021::d08::main::p02::{{closure}} (14 samples, 0.10%)</title><rect x="6.7431%" y="485" width="0.0973%" height="15" fill="rgb(210,169,34)" fg:x="970" fg:w="14"/><text x="6.9931%" y="495.50"></text></g><g><title>y2021::d08::main::signal_value (12 samples, 0.08%)</title><rect x="6.7570%" y="469" width="0.0834%" height="15" fill="rgb(241,121,31)" fg:x="972" fg:w="12"/><text x="7.0070%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.07%)</title><rect x="6.8474%" y="741" width="0.0695%" height="15" fill="rgb(232,40,11)" fg:x="985" fg:w="10"/><text x="7.0974%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.07%)</title><rect x="6.8474%" y="725" width="0.0695%" height="15" fill="rgb(205,86,26)" fg:x="985" fg:w="10"/><text x="7.0974%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.07%)</title><rect x="6.8474%" y="709" width="0.0695%" height="15" fill="rgb(231,126,28)" fg:x="985" fg:w="10"/><text x="7.0974%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.07%)</title><rect x="6.8474%" y="693" width="0.0695%" height="15" fill="rgb(219,221,18)" fg:x="985" fg:w="10"/><text x="7.0974%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.07%)</title><rect x="6.8474%" y="677" width="0.0695%" height="15" fill="rgb(211,40,0)" fg:x="985" fg:w="10"/><text x="7.0974%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 0.07%)</title><rect x="6.8474%" y="661" width="0.0695%" height="15" fill="rgb(239,85,43)" fg:x="985" fg:w="10"/><text x="7.0974%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.07%)</title><rect x="6.8474%" y="645" width="0.0695%" height="15" fill="rgb(231,55,21)" fg:x="985" fg:w="10"/><text x="7.0974%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.07%)</title><rect x="6.8474%" y="629" width="0.0695%" height="15" fill="rgb(225,184,43)" fg:x="985" fg:w="10"/><text x="7.0974%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (10 samples, 0.07%)</title><rect x="6.8474%" y="613" width="0.0695%" height="15" fill="rgb(251,158,41)" fg:x="985" fg:w="10"/><text x="7.0974%" y="623.50"></text></g><g><title>y2021::d09::main::p02::{{closure}} (10 samples, 0.07%)</title><rect x="6.8474%" y="597" width="0.0695%" height="15" fill="rgb(234,159,37)" fg:x="985" fg:w="10"/><text x="7.0974%" y="607.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.07%)</title><rect x="6.8474%" y="581" width="0.0695%" height="15" fill="rgb(216,204,22)" fg:x="985" fg:w="10"/><text x="7.0974%" y="591.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.07%)</title><rect x="6.8474%" y="565" width="0.0695%" height="15" fill="rgb(214,17,3)" fg:x="985" fg:w="10"/><text x="7.0974%" y="575.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.07%)</title><rect x="6.8474%" y="549" width="0.0695%" height="15" fill="rgb(212,111,17)" fg:x="985" fg:w="10"/><text x="7.0974%" y="559.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.07%)</title><rect x="6.8474%" y="533" width="0.0695%" height="15" fill="rgb(221,157,24)" fg:x="985" fg:w="10"/><text x="7.0974%" y="543.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.07%)</title><rect x="6.8474%" y="517" width="0.0695%" height="15" fill="rgb(252,16,13)" fg:x="985" fg:w="10"/><text x="7.0974%" y="527.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.07%)</title><rect x="6.8474%" y="501" width="0.0695%" height="15" fill="rgb(221,62,2)" fg:x="985" fg:w="10"/><text x="7.0974%" y="511.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.07%)</title><rect x="6.8474%" y="485" width="0.0695%" height="15" fill="rgb(247,87,22)" fg:x="985" fg:w="10"/><text x="7.0974%" y="495.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.07%)</title><rect x="6.8474%" y="469" width="0.0695%" height="15" fill="rgb(215,73,9)" fg:x="985" fg:w="10"/><text x="7.0974%" y="479.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.07%)</title><rect x="6.8474%" y="453" width="0.0695%" height="15" fill="rgb(207,175,33)" fg:x="985" fg:w="10"/><text x="7.0974%" y="463.50"></text></g><g><title>y2021::d09::main::get_basin_size (9 samples, 0.06%)</title><rect x="6.8544%" y="437" width="0.0626%" height="15" fill="rgb(243,129,54)" fg:x="986" fg:w="9"/><text x="7.1044%" y="447.50"></text></g><g><title>y2021::d09::main::get_basin_size (9 samples, 0.06%)</title><rect x="6.8544%" y="421" width="0.0626%" height="15" fill="rgb(227,119,45)" fg:x="986" fg:w="9"/><text x="7.1044%" y="431.50"></text></g><g><title>y2021::d09::main::get_basin_size (9 samples, 0.06%)</title><rect x="6.8544%" y="405" width="0.0626%" height="15" fill="rgb(205,109,36)" fg:x="986" fg:w="9"/><text x="7.1044%" y="415.50"></text></g><g><title>y2021::d09::main::get_basin_size (9 samples, 0.06%)</title><rect x="6.8544%" y="389" width="0.0626%" height="15" fill="rgb(205,6,39)" fg:x="986" fg:w="9"/><text x="7.1044%" y="399.50"></text></g><g><title>y2021::d09::main::get_basin_size (9 samples, 0.06%)</title><rect x="6.8544%" y="373" width="0.0626%" height="15" fill="rgb(221,32,16)" fg:x="986" fg:w="9"/><text x="7.1044%" y="383.50"></text></g><g><title>y2021::d09::main::get_basin_size (8 samples, 0.06%)</title><rect x="6.8613%" y="357" width="0.0556%" height="15" fill="rgb(228,144,50)" fg:x="987" fg:w="8"/><text x="7.1113%" y="367.50"></text></g><g><title>y2021::d09::main::get_basin_size (8 samples, 0.06%)</title><rect x="6.8613%" y="341" width="0.0556%" height="15" fill="rgb(229,201,53)" fg:x="987" fg:w="8"/><text x="7.1113%" y="351.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.05%)</title><rect x="6.8683%" y="325" width="0.0487%" height="15" fill="rgb(249,153,27)" fg:x="988" fg:w="7"/><text x="7.1183%" y="335.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.05%)</title><rect x="6.8683%" y="309" width="0.0487%" height="15" fill="rgb(227,106,25)" fg:x="988" fg:w="7"/><text x="7.1183%" y="319.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.05%)</title><rect x="6.8683%" y="293" width="0.0487%" height="15" fill="rgb(230,65,29)" fg:x="988" fg:w="7"/><text x="7.1183%" y="303.50"></text></g><g><title>y2021::d09::main::get_basin_size (6 samples, 0.04%)</title><rect x="6.8752%" y="277" width="0.0417%" height="15" fill="rgb(221,57,46)" fg:x="989" fg:w="6"/><text x="7.1252%" y="287.50"></text></g><g><title>y2021::d09::main::get_basin_size (6 samples, 0.04%)</title><rect x="6.8752%" y="261" width="0.0417%" height="15" fill="rgb(229,161,17)" fg:x="989" fg:w="6"/><text x="7.1252%" y="271.50"></text></g><g><title>y2021::d09::main::get_basin_size (6 samples, 0.04%)</title><rect x="6.8752%" y="245" width="0.0417%" height="15" fill="rgb(222,213,11)" fg:x="989" fg:w="6"/><text x="7.1252%" y="255.50"></text></g><g><title>y2021::d09::main::get_basin_size (6 samples, 0.04%)</title><rect x="6.8752%" y="229" width="0.0417%" height="15" fill="rgb(235,35,13)" fg:x="989" fg:w="6"/><text x="7.1252%" y="239.50"></text></g><g><title>y2021::d09::main::get_basin_size (6 samples, 0.04%)</title><rect x="6.8752%" y="213" width="0.0417%" height="15" fill="rgb(233,158,34)" fg:x="989" fg:w="6"/><text x="7.1252%" y="223.50"></text></g><g><title>y2021::d09::main::get_basin_size (6 samples, 0.04%)</title><rect x="6.8752%" y="197" width="0.0417%" height="15" fill="rgb(215,151,48)" fg:x="989" fg:w="6"/><text x="7.1252%" y="207.50"></text></g><g><title>y2021::d09::main::get_basin_size (5 samples, 0.03%)</title><rect x="6.8822%" y="181" width="0.0348%" height="15" fill="rgb(229,84,14)" fg:x="990" fg:w="5"/><text x="7.1322%" y="191.50"></text></g><g><title>y2021::d09::main::get_basin_size (5 samples, 0.03%)</title><rect x="6.8822%" y="165" width="0.0348%" height="15" fill="rgb(229,68,14)" fg:x="990" fg:w="5"/><text x="7.1322%" y="175.50"></text></g><g><title>y2021::d09::main::get_basin_size (5 samples, 0.03%)</title><rect x="6.8822%" y="149" width="0.0348%" height="15" fill="rgb(243,106,26)" fg:x="990" fg:w="5"/><text x="7.1322%" y="159.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.03%)</title><rect x="6.8891%" y="133" width="0.0278%" height="15" fill="rgb(206,45,38)" fg:x="991" fg:w="4"/><text x="7.1391%" y="143.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.03%)</title><rect x="6.8891%" y="117" width="0.0278%" height="15" fill="rgb(226,6,15)" fg:x="991" fg:w="4"/><text x="7.1391%" y="127.50"></text></g><g><title>y2021::d09::main::get_basin_size (3 samples, 0.02%)</title><rect x="6.8961%" y="101" width="0.0209%" height="15" fill="rgb(232,22,54)" fg:x="992" fg:w="3"/><text x="7.1461%" y="111.50"></text></g><g><title>y2021::d09::main::get_basin_size (3 samples, 0.02%)</title><rect x="6.8961%" y="85" width="0.0209%" height="15" fill="rgb(229,222,32)" fg:x="992" fg:w="3"/><text x="7.1461%" y="95.50"></text></g><g><title>y2021::d09::main::get_basin_size (3 samples, 0.02%)</title><rect x="6.8961%" y="69" width="0.0209%" height="15" fill="rgb(228,62,29)" fg:x="992" fg:w="3"/><text x="7.1461%" y="79.50"></text></g><g><title>y2021::d09::main::get_basin_size (3 samples, 0.02%)</title><rect x="6.8961%" y="53" width="0.0209%" height="15" fill="rgb(251,103,34)" fg:x="992" fg:w="3"/><text x="7.1461%" y="63.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.01%)</title><rect x="6.9030%" y="37" width="0.0139%" height="15" fill="rgb(233,12,30)" fg:x="993" fg:w="2"/><text x="7.1530%" y="47.50"></text></g><g><title>y2021::d09::main::run (12 samples, 0.08%)</title><rect x="6.8405%" y="773" width="0.0834%" height="15" fill="rgb(238,52,0)" fg:x="984" fg:w="12"/><text x="7.0905%" y="783.50"></text></g><g><title>y2021::d09::main::p02 (11 samples, 0.08%)</title><rect x="6.8474%" y="757" width="0.0765%" height="15" fill="rgb(223,98,5)" fg:x="985" fg:w="11"/><text x="7.0974%" y="767.50"></text></g><g><title>y2021::d10::main::p01 (2 samples, 0.01%)</title><rect x="6.9308%" y="757" width="0.0139%" height="15" fill="rgb(228,75,37)" fg:x="997" fg:w="2"/><text x="7.1808%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.01%)</title><rect x="6.9308%" y="741" width="0.0139%" height="15" fill="rgb(205,115,49)" fg:x="997" fg:w="2"/><text x="7.1808%" y="751.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.01%)</title><rect x="6.9308%" y="725" width="0.0139%" height="15" fill="rgb(250,154,43)" fg:x="997" fg:w="2"/><text x="7.1808%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="6.9308%" y="709" width="0.0139%" height="15" fill="rgb(226,43,29)" fg:x="997" fg:w="2"/><text x="7.1808%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="6.9308%" y="693" width="0.0139%" height="15" fill="rgb(249,228,39)" fg:x="997" fg:w="2"/><text x="7.1808%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="6.9308%" y="677" width="0.0139%" height="15" fill="rgb(216,79,43)" fg:x="997" fg:w="2"/><text x="7.1808%" y="687.50"></text></g><g><title>y2021::d10::main::run (5 samples, 0.03%)</title><rect x="6.9239%" y="773" width="0.0348%" height="15" fill="rgb(228,95,12)" fg:x="996" fg:w="5"/><text x="7.1739%" y="783.50"></text></g><g><title>y2021::d10::main::p02 (2 samples, 0.01%)</title><rect x="6.9447%" y="757" width="0.0139%" height="15" fill="rgb(249,221,15)" fg:x="999" fg:w="2"/><text x="7.1947%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="6.9447%" y="741" width="0.0139%" height="15" fill="rgb(233,34,13)" fg:x="999" fg:w="2"/><text x="7.1947%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="6.9447%" y="725" width="0.0139%" height="15" fill="rgb(214,103,39)" fg:x="999" fg:w="2"/><text x="7.1947%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="6.9447%" y="709" width="0.0139%" height="15" fill="rgb(251,126,39)" fg:x="999" fg:w="2"/><text x="7.1947%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="6.9447%" y="693" width="0.0139%" height="15" fill="rgb(214,216,36)" fg:x="999" fg:w="2"/><text x="7.1947%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="6.9447%" y="677" width="0.0139%" height="15" fill="rgb(220,221,8)" fg:x="999" fg:w="2"/><text x="7.1947%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.01%)</title><rect x="6.9447%" y="661" width="0.0139%" height="15" fill="rgb(240,216,3)" fg:x="999" fg:w="2"/><text x="7.1947%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="6.9447%" y="645" width="0.0139%" height="15" fill="rgb(232,218,17)" fg:x="999" fg:w="2"/><text x="7.1947%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.01%)</title><rect x="6.9447%" y="629" width="0.0139%" height="15" fill="rgb(229,163,45)" fg:x="999" fg:w="2"/><text x="7.1947%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="6.9447%" y="613" width="0.0139%" height="15" fill="rgb(231,110,42)" fg:x="999" fg:w="2"/><text x="7.1947%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="6.9447%" y="597" width="0.0139%" height="15" fill="rgb(208,170,48)" fg:x="999" fg:w="2"/><text x="7.1947%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="6.9447%" y="581" width="0.0139%" height="15" fill="rgb(239,116,25)" fg:x="999" fg:w="2"/><text x="7.1947%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.01%)</title><rect x="6.9447%" y="565" width="0.0139%" height="15" fill="rgb(219,200,50)" fg:x="999" fg:w="2"/><text x="7.1947%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.01%)</title><rect x="6.9447%" y="549" width="0.0139%" height="15" fill="rgb(245,200,0)" fg:x="999" fg:w="2"/><text x="7.1947%" y="559.50"></text></g><g><title>y2021::d10::main::p02::{{closure}} (2 samples, 0.01%)</title><rect x="6.9447%" y="533" width="0.0139%" height="15" fill="rgb(245,119,33)" fg:x="999" fg:w="2"/><text x="7.1947%" y="543.50"></text></g><g><title>y2021::d10::main::check_line (2 samples, 0.01%)</title><rect x="6.9447%" y="517" width="0.0139%" height="15" fill="rgb(231,125,12)" fg:x="999" fg:w="2"/><text x="7.1947%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="6.9656%" y="453" width="0.0278%" height="15" fill="rgb(216,96,41)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (4 samples, 0.03%)</title><rect x="6.9656%" y="437" width="0.0278%" height="15" fill="rgb(248,43,45)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="6.9656%" y="421" width="0.0278%" height="15" fill="rgb(217,222,7)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="6.9656%" y="405" width="0.0278%" height="15" fill="rgb(233,28,6)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.03%)</title><rect x="6.9656%" y="389" width="0.0278%" height="15" fill="rgb(231,218,15)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.03%)</title><rect x="6.9656%" y="373" width="0.0278%" height="15" fill="rgb(226,171,48)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.03%)</title><rect x="6.9656%" y="357" width="0.0278%" height="15" fill="rgb(235,201,9)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (4 samples, 0.03%)</title><rect x="6.9656%" y="341" width="0.0278%" height="15" fill="rgb(217,80,15)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.03%)</title><rect x="6.9656%" y="325" width="0.0278%" height="15" fill="rgb(219,152,8)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.03%)</title><rect x="6.9656%" y="309" width="0.0278%" height="15" fill="rgb(243,107,38)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (4 samples, 0.03%)</title><rect x="6.9656%" y="293" width="0.0278%" height="15" fill="rgb(231,17,5)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.03%)</title><rect x="6.9656%" y="277" width="0.0278%" height="15" fill="rgb(209,25,54)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="287.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (4 samples, 0.03%)</title><rect x="6.9656%" y="261" width="0.0278%" height="15" fill="rgb(219,0,2)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (4 samples, 0.03%)</title><rect x="6.9656%" y="245" width="0.0278%" height="15" fill="rgb(246,9,5)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="255.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (4 samples, 0.03%)</title><rect x="6.9656%" y="229" width="0.0278%" height="15" fill="rgb(226,159,4)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (4 samples, 0.03%)</title><rect x="6.9656%" y="213" width="0.0278%" height="15" fill="rgb(219,175,34)" fg:x="1002" fg:w="4"/><text x="7.2156%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.03%)</title><rect x="6.9656%" y="565" width="0.0348%" height="15" fill="rgb(236,10,46)" fg:x="1002" fg:w="5"/><text x="7.2156%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.03%)</title><rect x="6.9656%" y="549" width="0.0348%" height="15" fill="rgb(240,211,16)" fg:x="1002" fg:w="5"/><text x="7.2156%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="6.9656%" y="533" width="0.0348%" height="15" fill="rgb(205,3,43)" fg:x="1002" fg:w="5"/><text x="7.2156%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="6.9656%" y="517" width="0.0348%" height="15" fill="rgb(245,7,22)" fg:x="1002" fg:w="5"/><text x="7.2156%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (5 samples, 0.03%)</title><rect x="6.9656%" y="501" width="0.0348%" height="15" fill="rgb(239,132,32)" fg:x="1002" fg:w="5"/><text x="7.2156%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="6.9656%" y="485" width="0.0348%" height="15" fill="rgb(228,202,34)" fg:x="1002" fg:w="5"/><text x="7.2156%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="6.9656%" y="469" width="0.0348%" height="15" fill="rgb(254,200,22)" fg:x="1002" fg:w="5"/><text x="7.2156%" y="479.50"></text></g><g><title>y2021::d11::main::p01 (8 samples, 0.06%)</title><rect x="6.9586%" y="757" width="0.0556%" height="15" fill="rgb(219,10,39)" fg:x="1001" fg:w="8"/><text x="7.2086%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (8 samples, 0.06%)</title><rect x="6.9586%" y="741" width="0.0556%" height="15" fill="rgb(226,210,39)" fg:x="1001" fg:w="8"/><text x="7.2086%" y="751.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (8 samples, 0.06%)</title><rect x="6.9586%" y="725" width="0.0556%" height="15" fill="rgb(208,219,16)" fg:x="1001" fg:w="8"/><text x="7.2086%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.06%)</title><rect x="6.9586%" y="709" width="0.0556%" height="15" fill="rgb(216,158,51)" fg:x="1001" fg:w="8"/><text x="7.2086%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.06%)</title><rect x="6.9586%" y="693" width="0.0556%" height="15" fill="rgb(233,14,44)" fg:x="1001" fg:w="8"/><text x="7.2086%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 0.06%)</title><rect x="6.9586%" y="677" width="0.0556%" height="15" fill="rgb(237,97,39)" fg:x="1001" fg:w="8"/><text x="7.2086%" y="687.50"></text></g><g><title>y2021::d11::main::p01::{{closure}} (8 samples, 0.06%)</title><rect x="6.9586%" y="661" width="0.0556%" height="15" fill="rgb(218,198,43)" fg:x="1001" fg:w="8"/><text x="7.2086%" y="671.50"></text></g><g><title>y2021::d11::main::cycle_step (7 samples, 0.05%)</title><rect x="6.9656%" y="645" width="0.0487%" height="15" fill="rgb(231,104,20)" fg:x="1002" fg:w="7"/><text x="7.2156%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.05%)</title><rect x="6.9656%" y="629" width="0.0487%" height="15" fill="rgb(254,36,13)" fg:x="1002" fg:w="7"/><text x="7.2156%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.05%)</title><rect x="6.9656%" y="613" width="0.0487%" height="15" fill="rgb(248,14,50)" fg:x="1002" fg:w="7"/><text x="7.2156%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.05%)</title><rect x="6.9656%" y="597" width="0.0487%" height="15" fill="rgb(217,107,29)" fg:x="1002" fg:w="7"/><text x="7.2156%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.05%)</title><rect x="6.9656%" y="581" width="0.0487%" height="15" fill="rgb(251,169,33)" fg:x="1002" fg:w="7"/><text x="7.2156%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="7.0003%" y="565" width="0.0139%" height="15" fill="rgb(217,108,32)" fg:x="1007" fg:w="2"/><text x="7.2503%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="7.0003%" y="549" width="0.0139%" height="15" fill="rgb(219,66,42)" fg:x="1007" fg:w="2"/><text x="7.2503%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.01%)</title><rect x="7.0003%" y="533" width="0.0139%" height="15" fill="rgb(206,180,7)" fg:x="1007" fg:w="2"/><text x="7.2503%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="7.0003%" y="517" width="0.0139%" height="15" fill="rgb(208,226,31)" fg:x="1007" fg:w="2"/><text x="7.2503%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="7.0003%" y="501" width="0.0139%" height="15" fill="rgb(218,26,49)" fg:x="1007" fg:w="2"/><text x="7.2503%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="7.0003%" y="485" width="0.0139%" height="15" fill="rgb(233,197,48)" fg:x="1007" fg:w="2"/><text x="7.2503%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (2 samples, 0.01%)</title><rect x="7.0003%" y="469" width="0.0139%" height="15" fill="rgb(252,181,51)" fg:x="1007" fg:w="2"/><text x="7.2503%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="7.0003%" y="453" width="0.0139%" height="15" fill="rgb(253,90,19)" fg:x="1007" fg:w="2"/><text x="7.2503%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="7.0003%" y="437" width="0.0139%" height="15" fill="rgb(215,171,30)" fg:x="1007" fg:w="2"/><text x="7.2503%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="7.0003%" y="421" width="0.0139%" height="15" fill="rgb(214,222,9)" fg:x="1007" fg:w="2"/><text x="7.2503%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.01%)</title><rect x="7.0003%" y="405" width="0.0139%" height="15" fill="rgb(223,3,22)" fg:x="1007" fg:w="2"/><text x="7.2503%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.01%)</title><rect x="7.0003%" y="389" width="0.0139%" height="15" fill="rgb(225,196,46)" fg:x="1007" fg:w="2"/><text x="7.2503%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (2 samples, 0.01%)</title><rect x="7.0003%" y="373" width="0.0139%" height="15" fill="rgb(209,110,37)" fg:x="1007" fg:w="2"/><text x="7.2503%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="7.0003%" y="357" width="0.0139%" height="15" fill="rgb(249,89,12)" fg:x="1007" fg:w="2"/><text x="7.2503%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.08%)</title><rect x="7.0212%" y="549" width="0.0765%" height="15" fill="rgb(226,27,33)" fg:x="1010" fg:w="11"/><text x="7.2712%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (11 samples, 0.08%)</title><rect x="7.0212%" y="533" width="0.0765%" height="15" fill="rgb(213,82,22)" fg:x="1010" fg:w="11"/><text x="7.2712%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.08%)</title><rect x="7.0212%" y="517" width="0.0765%" height="15" fill="rgb(248,140,0)" fg:x="1010" fg:w="11"/><text x="7.2712%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.08%)</title><rect x="7.0212%" y="501" width="0.0765%" height="15" fill="rgb(228,106,3)" fg:x="1010" fg:w="11"/><text x="7.2712%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.08%)</title><rect x="7.0212%" y="485" width="0.0765%" height="15" fill="rgb(209,23,37)" fg:x="1010" fg:w="11"/><text x="7.2712%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (11 samples, 0.08%)</title><rect x="7.0212%" y="469" width="0.0765%" height="15" fill="rgb(241,93,50)" fg:x="1010" fg:w="11"/><text x="7.2712%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (11 samples, 0.08%)</title><rect x="7.0212%" y="453" width="0.0765%" height="15" fill="rgb(253,46,43)" fg:x="1010" fg:w="11"/><text x="7.2712%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (11 samples, 0.08%)</title><rect x="7.0212%" y="437" width="0.0765%" height="15" fill="rgb(226,206,43)" fg:x="1010" fg:w="11"/><text x="7.2712%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.08%)</title><rect x="7.0212%" y="421" width="0.0765%" height="15" fill="rgb(217,54,7)" fg:x="1010" fg:w="11"/><text x="7.2712%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.07%)</title><rect x="7.0282%" y="405" width="0.0695%" height="15" fill="rgb(223,5,52)" fg:x="1011" fg:w="10"/><text x="7.2782%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (10 samples, 0.07%)</title><rect x="7.0282%" y="389" width="0.0695%" height="15" fill="rgb(206,52,46)" fg:x="1011" fg:w="10"/><text x="7.2782%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.06%)</title><rect x="7.0351%" y="373" width="0.0626%" height="15" fill="rgb(253,136,11)" fg:x="1012" fg:w="9"/><text x="7.2851%" y="383.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (9 samples, 0.06%)</title><rect x="7.0351%" y="357" width="0.0626%" height="15" fill="rgb(208,106,33)" fg:x="1012" fg:w="9"/><text x="7.2851%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (9 samples, 0.06%)</title><rect x="7.0351%" y="341" width="0.0626%" height="15" fill="rgb(206,54,4)" fg:x="1012" fg:w="9"/><text x="7.2851%" y="351.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (9 samples, 0.06%)</title><rect x="7.0351%" y="325" width="0.0626%" height="15" fill="rgb(213,3,15)" fg:x="1012" fg:w="9"/><text x="7.2851%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (9 samples, 0.06%)</title><rect x="7.0351%" y="309" width="0.0626%" height="15" fill="rgb(252,211,39)" fg:x="1012" fg:w="9"/><text x="7.2851%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.10%)</title><rect x="7.0212%" y="613" width="0.0973%" height="15" fill="rgb(223,6,36)" fg:x="1010" fg:w="14"/><text x="7.2712%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (14 samples, 0.10%)</title><rect x="7.0212%" y="597" width="0.0973%" height="15" fill="rgb(252,169,45)" fg:x="1010" fg:w="14"/><text x="7.2712%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.10%)</title><rect x="7.0212%" y="581" width="0.0973%" height="15" fill="rgb(212,48,26)" fg:x="1010" fg:w="14"/><text x="7.2712%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.10%)</title><rect x="7.0212%" y="565" width="0.0973%" height="15" fill="rgb(251,102,48)" fg:x="1010" fg:w="14"/><text x="7.2712%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.02%)</title><rect x="7.0977%" y="549" width="0.0209%" height="15" fill="rgb(243,208,16)" fg:x="1021" fg:w="3"/><text x="7.3477%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.01%)</title><rect x="7.1046%" y="533" width="0.0139%" height="15" fill="rgb(219,96,24)" fg:x="1022" fg:w="2"/><text x="7.3546%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.01%)</title><rect x="7.1046%" y="517" width="0.0139%" height="15" fill="rgb(219,33,29)" fg:x="1022" fg:w="2"/><text x="7.3546%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.10%)</title><rect x="7.0212%" y="661" width="0.1043%" height="15" fill="rgb(223,176,5)" fg:x="1010" fg:w="15"/><text x="7.2712%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (15 samples, 0.10%)</title><rect x="7.0212%" y="645" width="0.1043%" height="15" fill="rgb(228,140,14)" fg:x="1010" fg:w="15"/><text x="7.2712%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.10%)</title><rect x="7.0212%" y="629" width="0.1043%" height="15" fill="rgb(217,179,31)" fg:x="1010" fg:w="15"/><text x="7.2712%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="7.1255%" y="437" width="0.0139%" height="15" fill="rgb(230,9,30)" fg:x="1025" fg:w="2"/><text x="7.3755%" y="447.50"></text></g><g><title>y2021::d11::main::run (35 samples, 0.24%)</title><rect x="6.9586%" y="773" width="0.2433%" height="15" fill="rgb(230,136,20)" fg:x="1001" fg:w="35"/><text x="7.2086%" y="783.50"></text></g><g><title>y2021::d11::main::p02 (27 samples, 0.19%)</title><rect x="7.0143%" y="757" width="0.1877%" height="15" fill="rgb(215,210,22)" fg:x="1009" fg:w="27"/><text x="7.2643%" y="767.50"></text></g><g><title>y2021::d11::main::cycle_step (26 samples, 0.18%)</title><rect x="7.0212%" y="741" width="0.1807%" height="15" fill="rgb(218,43,5)" fg:x="1010" fg:w="26"/><text x="7.2712%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.18%)</title><rect x="7.0212%" y="725" width="0.1807%" height="15" fill="rgb(216,11,5)" fg:x="1010" fg:w="26"/><text x="7.2712%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 0.18%)</title><rect x="7.0212%" y="709" width="0.1807%" height="15" fill="rgb(209,82,29)" fg:x="1010" fg:w="26"/><text x="7.2712%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 0.18%)</title><rect x="7.0212%" y="693" width="0.1807%" height="15" fill="rgb(244,115,12)" fg:x="1010" fg:w="26"/><text x="7.2712%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (26 samples, 0.18%)</title><rect x="7.0212%" y="677" width="0.1807%" height="15" fill="rgb(222,82,18)" fg:x="1010" fg:w="26"/><text x="7.2712%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.08%)</title><rect x="7.1255%" y="661" width="0.0765%" height="15" fill="rgb(249,227,8)" fg:x="1025" fg:w="11"/><text x="7.3755%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.08%)</title><rect x="7.1255%" y="645" width="0.0765%" height="15" fill="rgb(253,141,45)" fg:x="1025" fg:w="11"/><text x="7.3755%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (11 samples, 0.08%)</title><rect x="7.1255%" y="629" width="0.0765%" height="15" fill="rgb(234,184,4)" fg:x="1025" fg:w="11"/><text x="7.3755%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.08%)</title><rect x="7.1255%" y="613" width="0.0765%" height="15" fill="rgb(218,194,23)" fg:x="1025" fg:w="11"/><text x="7.3755%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.08%)</title><rect x="7.1255%" y="597" width="0.0765%" height="15" fill="rgb(235,66,41)" fg:x="1025" fg:w="11"/><text x="7.3755%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.08%)</title><rect x="7.1255%" y="581" width="0.0765%" height="15" fill="rgb(245,217,1)" fg:x="1025" fg:w="11"/><text x="7.3755%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (11 samples, 0.08%)</title><rect x="7.1255%" y="565" width="0.0765%" height="15" fill="rgb(229,91,1)" fg:x="1025" fg:w="11"/><text x="7.3755%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.08%)</title><rect x="7.1255%" y="549" width="0.0765%" height="15" fill="rgb(207,101,30)" fg:x="1025" fg:w="11"/><text x="7.3755%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.08%)</title><rect x="7.1255%" y="533" width="0.0765%" height="15" fill="rgb(223,82,49)" fg:x="1025" fg:w="11"/><text x="7.3755%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.08%)</title><rect x="7.1255%" y="517" width="0.0765%" height="15" fill="rgb(218,167,17)" fg:x="1025" fg:w="11"/><text x="7.3755%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (11 samples, 0.08%)</title><rect x="7.1255%" y="501" width="0.0765%" height="15" fill="rgb(208,103,14)" fg:x="1025" fg:w="11"/><text x="7.3755%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (11 samples, 0.08%)</title><rect x="7.1255%" y="485" width="0.0765%" height="15" fill="rgb(238,20,8)" fg:x="1025" fg:w="11"/><text x="7.3755%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (11 samples, 0.08%)</title><rect x="7.1255%" y="469" width="0.0765%" height="15" fill="rgb(218,80,54)" fg:x="1025" fg:w="11"/><text x="7.3755%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.08%)</title><rect x="7.1255%" y="453" width="0.0765%" height="15" fill="rgb(240,144,17)" fg:x="1025" fg:w="11"/><text x="7.3755%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.06%)</title><rect x="7.1394%" y="437" width="0.0626%" height="15" fill="rgb(245,27,50)" fg:x="1027" fg:w="9"/><text x="7.3894%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (9 samples, 0.06%)</title><rect x="7.1394%" y="421" width="0.0626%" height="15" fill="rgb(251,51,7)" fg:x="1027" fg:w="9"/><text x="7.3894%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.05%)</title><rect x="7.1533%" y="405" width="0.0487%" height="15" fill="rgb(245,217,29)" fg:x="1029" fg:w="7"/><text x="7.4033%" y="415.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (7 samples, 0.05%)</title><rect x="7.1533%" y="389" width="0.0487%" height="15" fill="rgb(221,176,29)" fg:x="1029" fg:w="7"/><text x="7.4033%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (7 samples, 0.05%)</title><rect x="7.1533%" y="373" width="0.0487%" height="15" fill="rgb(212,180,24)" fg:x="1029" fg:w="7"/><text x="7.4033%" y="383.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (7 samples, 0.05%)</title><rect x="7.1533%" y="357" width="0.0487%" height="15" fill="rgb(254,24,2)" fg:x="1029" fg:w="7"/><text x="7.4033%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (7 samples, 0.05%)</title><rect x="7.1533%" y="341" width="0.0487%" height="15" fill="rgb(230,100,2)" fg:x="1029" fg:w="7"/><text x="7.4033%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.01%)</title><rect x="7.2367%" y="485" width="0.0139%" height="15" fill="rgb(219,142,25)" fg:x="1041" fg:w="2"/><text x="7.4867%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="7.2367%" y="469" width="0.0139%" height="15" fill="rgb(240,73,43)" fg:x="1041" fg:w="2"/><text x="7.4867%" y="479.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="7.2367%" y="453" width="0.0139%" height="15" fill="rgb(214,114,15)" fg:x="1041" fg:w="2"/><text x="7.4867%" y="463.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (2 samples, 0.01%)</title><rect x="7.2367%" y="437" width="0.0139%" height="15" fill="rgb(207,130,4)" fg:x="1041" fg:w="2"/><text x="7.4867%" y="447.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.01%)</title><rect x="7.2367%" y="421" width="0.0139%" height="15" fill="rgb(221,25,40)" fg:x="1041" fg:w="2"/><text x="7.4867%" y="431.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.01%)</title><rect x="7.2367%" y="405" width="0.0139%" height="15" fill="rgb(241,184,7)" fg:x="1041" fg:w="2"/><text x="7.4867%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.02%)</title><rect x="7.2367%" y="533" width="0.0209%" height="15" fill="rgb(235,159,4)" fg:x="1041" fg:w="3"/><text x="7.4867%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.02%)</title><rect x="7.2367%" y="517" width="0.0209%" height="15" fill="rgb(214,87,48)" fg:x="1041" fg:w="3"/><text x="7.4867%" y="527.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (3 samples, 0.02%)</title><rect x="7.2367%" y="501" width="0.0209%" height="15" fill="rgb(246,198,24)" fg:x="1041" fg:w="3"/><text x="7.4867%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="7.2367%" y="613" width="0.0278%" height="15" fill="rgb(209,66,40)" fg:x="1041" fg:w="4"/><text x="7.4867%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4 samples, 0.03%)</title><rect x="7.2367%" y="597" width="0.0278%" height="15" fill="rgb(233,147,39)" fg:x="1041" fg:w="4"/><text x="7.4867%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="7.2367%" y="581" width="0.0278%" height="15" fill="rgb(231,145,52)" fg:x="1041" fg:w="4"/><text x="7.4867%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.03%)</title><rect x="7.2367%" y="565" width="0.0278%" height="15" fill="rgb(206,20,26)" fg:x="1041" fg:w="4"/><text x="7.4867%" y="575.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (4 samples, 0.03%)</title><rect x="7.2367%" y="549" width="0.0278%" height="15" fill="rgb(238,220,4)" fg:x="1041" fg:w="4"/><text x="7.4867%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="7.2784%" y="597" width="0.0209%" height="15" fill="rgb(252,195,42)" fg:x="1047" fg:w="3"/><text x="7.5284%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.02%)</title><rect x="7.2784%" y="581" width="0.0209%" height="15" fill="rgb(209,10,6)" fg:x="1047" fg:w="3"/><text x="7.5284%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="7.2784%" y="565" width="0.0209%" height="15" fill="rgb(229,3,52)" fg:x="1047" fg:w="3"/><text x="7.5284%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.02%)</title><rect x="7.2784%" y="549" width="0.0209%" height="15" fill="rgb(253,49,37)" fg:x="1047" fg:w="3"/><text x="7.5284%" y="559.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3 samples, 0.02%)</title><rect x="7.2784%" y="533" width="0.0209%" height="15" fill="rgb(240,103,49)" fg:x="1047" fg:w="3"/><text x="7.5284%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.02%)</title><rect x="7.2784%" y="517" width="0.0209%" height="15" fill="rgb(250,182,30)" fg:x="1047" fg:w="3"/><text x="7.5284%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.02%)</title><rect x="7.2784%" y="501" width="0.0209%" height="15" fill="rgb(248,8,30)" fg:x="1047" fg:w="3"/><text x="7.5284%" y="511.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (3 samples, 0.02%)</title><rect x="7.2784%" y="485" width="0.0209%" height="15" fill="rgb(237,120,30)" fg:x="1047" fg:w="3"/><text x="7.5284%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.01%)</title><rect x="7.2854%" y="469" width="0.0139%" height="15" fill="rgb(221,146,34)" fg:x="1048" fg:w="2"/><text x="7.5354%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="7.2854%" y="453" width="0.0139%" height="15" fill="rgb(242,55,13)" fg:x="1048" fg:w="2"/><text x="7.5354%" y="463.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="7.2854%" y="437" width="0.0139%" height="15" fill="rgb(242,112,31)" fg:x="1048" fg:w="2"/><text x="7.5354%" y="447.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (2 samples, 0.01%)</title><rect x="7.2854%" y="421" width="0.0139%" height="15" fill="rgb(249,192,27)" fg:x="1048" fg:w="2"/><text x="7.5354%" y="431.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.01%)</title><rect x="7.2854%" y="405" width="0.0139%" height="15" fill="rgb(208,204,44)" fg:x="1048" fg:w="2"/><text x="7.5354%" y="415.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.01%)</title><rect x="7.2854%" y="389" width="0.0139%" height="15" fill="rgb(208,93,54)" fg:x="1048" fg:w="2"/><text x="7.5354%" y="399.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.02%)</title><rect x="7.2993%" y="597" width="0.0209%" height="15" fill="rgb(242,1,31)" fg:x="1050" fg:w="3"/><text x="7.5493%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.02%)</title><rect x="7.2993%" y="581" width="0.0209%" height="15" fill="rgb(241,83,25)" fg:x="1050" fg:w="3"/><text x="7.5493%" y="591.50"></text></g><g><title>core::fmt::write (3 samples, 0.02%)</title><rect x="7.2993%" y="565" width="0.0209%" height="15" fill="rgb(205,169,50)" fg:x="1050" fg:w="3"/><text x="7.5493%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="7.2993%" y="549" width="0.0209%" height="15" fill="rgb(239,186,37)" fg:x="1050" fg:w="3"/><text x="7.5493%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="7.2993%" y="533" width="0.0209%" height="15" fill="rgb(205,221,10)" fg:x="1050" fg:w="3"/><text x="7.5493%" y="543.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.02%)</title><rect x="7.2993%" y="517" width="0.0209%" height="15" fill="rgb(218,196,15)" fg:x="1050" fg:w="3"/><text x="7.5493%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.02%)</title><rect x="7.2993%" y="501" width="0.0209%" height="15" fill="rgb(218,196,35)" fg:x="1050" fg:w="3"/><text x="7.5493%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="7.2993%" y="485" width="0.0209%" height="15" fill="rgb(233,63,24)" fg:x="1050" fg:w="3"/><text x="7.5493%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.02%)</title><rect x="7.2993%" y="469" width="0.0209%" height="15" fill="rgb(225,8,4)" fg:x="1050" fg:w="3"/><text x="7.5493%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="7.2993%" y="453" width="0.0209%" height="15" fill="rgb(234,105,35)" fg:x="1050" fg:w="3"/><text x="7.5493%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="7.2993%" y="437" width="0.0209%" height="15" fill="rgb(236,21,32)" fg:x="1050" fg:w="3"/><text x="7.5493%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="7.2993%" y="421" width="0.0209%" height="15" fill="rgb(228,109,6)" fg:x="1050" fg:w="3"/><text x="7.5493%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="7.2993%" y="405" width="0.0209%" height="15" fill="rgb(229,215,31)" fg:x="1050" fg:w="3"/><text x="7.5493%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="7.2993%" y="389" width="0.0209%" height="15" fill="rgb(221,52,54)" fg:x="1050" fg:w="3"/><text x="7.5493%" y="399.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.01%)</title><rect x="7.3201%" y="597" width="0.0139%" height="15" fill="rgb(252,129,43)" fg:x="1053" fg:w="2"/><text x="7.5701%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="7.3201%" y="581" width="0.0139%" height="15" fill="rgb(248,183,27)" fg:x="1053" fg:w="2"/><text x="7.5701%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="7.3201%" y="565" width="0.0139%" height="15" fill="rgb(250,0,22)" fg:x="1053" fg:w="2"/><text x="7.5701%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (3 samples, 0.02%)</title><rect x="7.3340%" y="453" width="0.0209%" height="15" fill="rgb(213,166,10)" fg:x="1055" fg:w="3"/><text x="7.5840%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="7.3340%" y="581" width="0.0278%" height="15" fill="rgb(207,163,36)" fg:x="1055" fg:w="4"/><text x="7.5840%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4 samples, 0.03%)</title><rect x="7.3340%" y="565" width="0.0278%" height="15" fill="rgb(208,122,22)" fg:x="1055" fg:w="4"/><text x="7.5840%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.03%)</title><rect x="7.3340%" y="549" width="0.0278%" height="15" fill="rgb(207,104,49)" fg:x="1055" fg:w="4"/><text x="7.5840%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.03%)</title><rect x="7.3340%" y="533" width="0.0278%" height="15" fill="rgb(248,211,50)" fg:x="1055" fg:w="4"/><text x="7.5840%" y="543.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (4 samples, 0.03%)</title><rect x="7.3340%" y="517" width="0.0278%" height="15" fill="rgb(217,13,45)" fg:x="1055" fg:w="4"/><text x="7.5840%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (4 samples, 0.03%)</title><rect x="7.3340%" y="501" width="0.0278%" height="15" fill="rgb(211,216,49)" fg:x="1055" fg:w="4"/><text x="7.5840%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.03%)</title><rect x="7.3340%" y="485" width="0.0278%" height="15" fill="rgb(221,58,53)" fg:x="1055" fg:w="4"/><text x="7.5840%" y="495.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (4 samples, 0.03%)</title><rect x="7.3340%" y="469" width="0.0278%" height="15" fill="rgb(220,112,41)" fg:x="1055" fg:w="4"/><text x="7.5840%" y="479.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.01%)</title><rect x="7.3618%" y="581" width="0.0139%" height="15" fill="rgb(236,38,28)" fg:x="1059" fg:w="2"/><text x="7.6118%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.01%)</title><rect x="7.3618%" y="565" width="0.0139%" height="15" fill="rgb(227,195,22)" fg:x="1059" fg:w="2"/><text x="7.6118%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.01%)</title><rect x="7.3618%" y="549" width="0.0139%" height="15" fill="rgb(214,55,33)" fg:x="1059" fg:w="2"/><text x="7.6118%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="7.3618%" y="533" width="0.0139%" height="15" fill="rgb(248,80,13)" fg:x="1059" fg:w="2"/><text x="7.6118%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="7.3618%" y="517" width="0.0139%" height="15" fill="rgb(238,52,6)" fg:x="1059" fg:w="2"/><text x="7.6118%" y="527.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.01%)</title><rect x="7.3618%" y="501" width="0.0139%" height="15" fill="rgb(224,198,47)" fg:x="1059" fg:w="2"/><text x="7.6118%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="7.3618%" y="485" width="0.0139%" height="15" fill="rgb(233,171,20)" fg:x="1059" fg:w="2"/><text x="7.6118%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="7.3618%" y="469" width="0.0139%" height="15" fill="rgb(241,30,25)" fg:x="1059" fg:w="2"/><text x="7.6118%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="7.3618%" y="453" width="0.0139%" height="15" fill="rgb(207,171,38)" fg:x="1059" fg:w="2"/><text x="7.6118%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="7.3618%" y="437" width="0.0139%" height="15" fill="rgb(234,70,1)" fg:x="1059" fg:w="2"/><text x="7.6118%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="7.3618%" y="421" width="0.0139%" height="15" fill="rgb(232,178,18)" fg:x="1059" fg:w="2"/><text x="7.6118%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="7.3618%" y="405" width="0.0139%" height="15" fill="rgb(241,78,40)" fg:x="1059" fg:w="2"/><text x="7.6118%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="7.3618%" y="389" width="0.0139%" height="15" fill="rgb(222,35,25)" fg:x="1059" fg:w="2"/><text x="7.6118%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="7.3618%" y="373" width="0.0139%" height="15" fill="rgb(207,92,16)" fg:x="1059" fg:w="2"/><text x="7.6118%" y="383.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="7.3618%" y="357" width="0.0139%" height="15" fill="rgb(216,59,51)" fg:x="1059" fg:w="2"/><text x="7.6118%" y="367.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.01%)</title><rect x="7.3966%" y="565" width="0.0139%" height="15" fill="rgb(213,80,28)" fg:x="1064" fg:w="2"/><text x="7.6466%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.01%)</title><rect x="7.3966%" y="549" width="0.0139%" height="15" fill="rgb(220,93,7)" fg:x="1064" fg:w="2"/><text x="7.6466%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (3 samples, 0.02%)</title><rect x="7.4314%" y="421" width="0.0209%" height="15" fill="rgb(225,24,44)" fg:x="1069" fg:w="3"/><text x="7.6814%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="7.4383%" y="405" width="0.0139%" height="15" fill="rgb(243,74,40)" fg:x="1070" fg:w="2"/><text x="7.6883%" y="415.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="7.4383%" y="389" width="0.0139%" height="15" fill="rgb(228,39,7)" fg:x="1070" fg:w="2"/><text x="7.6883%" y="399.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (2 samples, 0.01%)</title><rect x="7.4383%" y="373" width="0.0139%" height="15" fill="rgb(227,79,8)" fg:x="1070" fg:w="2"/><text x="7.6883%" y="383.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.01%)</title><rect x="7.4383%" y="357" width="0.0139%" height="15" fill="rgb(236,58,11)" fg:x="1070" fg:w="2"/><text x="7.6883%" y="367.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.01%)</title><rect x="7.4383%" y="341" width="0.0139%" height="15" fill="rgb(249,63,35)" fg:x="1070" fg:w="2"/><text x="7.6883%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="7.4244%" y="549" width="0.0348%" height="15" fill="rgb(252,114,16)" fg:x="1068" fg:w="5"/><text x="7.6744%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (5 samples, 0.03%)</title><rect x="7.4244%" y="533" width="0.0348%" height="15" fill="rgb(254,151,24)" fg:x="1068" fg:w="5"/><text x="7.6744%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.03%)</title><rect x="7.4244%" y="517" width="0.0348%" height="15" fill="rgb(253,54,39)" fg:x="1068" fg:w="5"/><text x="7.6744%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="7.4244%" y="501" width="0.0348%" height="15" fill="rgb(243,25,45)" fg:x="1068" fg:w="5"/><text x="7.6744%" y="511.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (5 samples, 0.03%)</title><rect x="7.4244%" y="485" width="0.0348%" height="15" fill="rgb(234,134,9)" fg:x="1068" fg:w="5"/><text x="7.6744%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (5 samples, 0.03%)</title><rect x="7.4244%" y="469" width="0.0348%" height="15" fill="rgb(227,166,31)" fg:x="1068" fg:w="5"/><text x="7.6744%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.03%)</title><rect x="7.4244%" y="453" width="0.0348%" height="15" fill="rgb(245,143,41)" fg:x="1068" fg:w="5"/><text x="7.6744%" y="463.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (5 samples, 0.03%)</title><rect x="7.4244%" y="437" width="0.0348%" height="15" fill="rgb(238,181,32)" fg:x="1068" fg:w="5"/><text x="7.6744%" y="447.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.01%)</title><rect x="7.4592%" y="549" width="0.0139%" height="15" fill="rgb(224,113,18)" fg:x="1073" fg:w="2"/><text x="7.7092%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.01%)</title><rect x="7.4592%" y="533" width="0.0139%" height="15" fill="rgb(240,229,28)" fg:x="1073" fg:w="2"/><text x="7.7092%" y="543.50"></text></g><g><title>core::fmt::write (2 samples, 0.01%)</title><rect x="7.4592%" y="517" width="0.0139%" height="15" fill="rgb(250,185,3)" fg:x="1073" fg:w="2"/><text x="7.7092%" y="527.50"></text></g><g><title>y2021::d12::main2::p01 (41 samples, 0.29%)</title><rect x="7.2019%" y="757" width="0.2850%" height="15" fill="rgb(212,59,25)" fg:x="1036" fg:w="41"/><text x="7.4519%" y="767.50"></text></g><g><title>y2021::d12::main2::traverse (40 samples, 0.28%)</title><rect x="7.2089%" y="741" width="0.2781%" height="15" fill="rgb(221,87,20)" fg:x="1037" fg:w="40"/><text x="7.4589%" y="751.50"></text></g><g><title>y2021::d12::main2::traverse (40 samples, 0.28%)</title><rect x="7.2089%" y="725" width="0.2781%" height="15" fill="rgb(213,74,28)" fg:x="1037" fg:w="40"/><text x="7.4589%" y="735.50"></text></g><g><title>y2021::d12::main2::traverse (40 samples, 0.28%)</title><rect x="7.2089%" y="709" width="0.2781%" height="15" fill="rgb(224,132,34)" fg:x="1037" fg:w="40"/><text x="7.4589%" y="719.50"></text></g><g><title>y2021::d12::main2::traverse (40 samples, 0.28%)</title><rect x="7.2089%" y="693" width="0.2781%" height="15" fill="rgb(222,101,24)" fg:x="1037" fg:w="40"/><text x="7.4589%" y="703.50"></text></g><g><title>y2021::d12::main2::traverse (40 samples, 0.28%)</title><rect x="7.2089%" y="677" width="0.2781%" height="15" fill="rgb(254,142,4)" fg:x="1037" fg:w="40"/><text x="7.4589%" y="687.50"></text></g><g><title>y2021::d12::main2::traverse (39 samples, 0.27%)</title><rect x="7.2158%" y="661" width="0.2711%" height="15" fill="rgb(230,229,49)" fg:x="1038" fg:w="39"/><text x="7.4658%" y="671.50"></text></g><g><title>y2021::d12::main2::traverse (38 samples, 0.26%)</title><rect x="7.2228%" y="645" width="0.2642%" height="15" fill="rgb(238,70,47)" fg:x="1039" fg:w="38"/><text x="7.4728%" y="655.50"></text></g><g><title>y2021::d12::main2::traverse (37 samples, 0.26%)</title><rect x="7.2298%" y="629" width="0.2572%" height="15" fill="rgb(231,160,17)" fg:x="1040" fg:w="37"/><text x="7.4798%" y="639.50"></text></g><g><title>y2021::d12::main2::traverse (30 samples, 0.21%)</title><rect x="7.2784%" y="613" width="0.2086%" height="15" fill="rgb(218,68,53)" fg:x="1047" fg:w="30"/><text x="7.5284%" y="623.50"></text></g><g><title>y2021::d12::main2::traverse (22 samples, 0.15%)</title><rect x="7.3340%" y="597" width="0.1529%" height="15" fill="rgb(236,111,10)" fg:x="1055" fg:w="22"/><text x="7.5840%" y="607.50"></text></g><g><title>y2021::d12::main2::traverse (14 samples, 0.10%)</title><rect x="7.3896%" y="581" width="0.0973%" height="15" fill="rgb(224,34,41)" fg:x="1063" fg:w="14"/><text x="7.6396%" y="591.50"></text></g><g><title>y2021::d12::main2::traverse (9 samples, 0.06%)</title><rect x="7.4244%" y="565" width="0.0626%" height="15" fill="rgb(241,118,19)" fg:x="1068" fg:w="9"/><text x="7.6744%" y="575.50"></text></g><g><title>__GI___libc_free (26 samples, 0.18%)</title><rect x="7.5009%" y="501" width="0.1807%" height="15" fill="rgb(238,129,25)" fg:x="1079" fg:w="26"/><text x="7.7509%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (51 samples, 0.35%)</title><rect x="7.4939%" y="533" width="0.3545%" height="15" fill="rgb(238,22,31)" fg:x="1078" fg:w="51"/><text x="7.7439%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (51 samples, 0.35%)</title><rect x="7.4939%" y="517" width="0.3545%" height="15" fill="rgb(222,174,48)" fg:x="1078" fg:w="51"/><text x="7.7439%" y="527.50"></text></g><g><title>_int_free (23 samples, 0.16%)</title><rect x="7.6886%" y="501" width="0.1599%" height="15" fill="rgb(206,152,40)" fg:x="1106" fg:w="23"/><text x="7.9386%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (53 samples, 0.37%)</title><rect x="7.4870%" y="661" width="0.3684%" height="15" fill="rgb(218,99,54)" fg:x="1077" fg:w="53"/><text x="7.7370%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (52 samples, 0.36%)</title><rect x="7.4939%" y="645" width="0.3615%" height="15" fill="rgb(220,174,26)" fg:x="1078" fg:w="52"/><text x="7.7439%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (52 samples, 0.36%)</title><rect x="7.4939%" y="629" width="0.3615%" height="15" fill="rgb(245,116,9)" fg:x="1078" fg:w="52"/><text x="7.7439%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (52 samples, 0.36%)</title><rect x="7.4939%" y="613" width="0.3615%" height="15" fill="rgb(209,72,35)" fg:x="1078" fg:w="52"/><text x="7.7439%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (52 samples, 0.36%)</title><rect x="7.4939%" y="597" width="0.3615%" height="15" fill="rgb(226,126,21)" fg:x="1078" fg:w="52"/><text x="7.7439%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (52 samples, 0.36%)</title><rect x="7.4939%" y="581" width="0.3615%" height="15" fill="rgb(227,192,1)" fg:x="1078" fg:w="52"/><text x="7.7439%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (52 samples, 0.36%)</title><rect x="7.4939%" y="565" width="0.3615%" height="15" fill="rgb(237,180,29)" fg:x="1078" fg:w="52"/><text x="7.7439%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.36%)</title><rect x="7.4939%" y="549" width="0.3615%" height="15" fill="rgb(230,197,35)" fg:x="1078" fg:w="52"/><text x="7.7439%" y="559.50"></text></g><g><title>malloc_consolidate (24 samples, 0.17%)</title><rect x="7.8554%" y="581" width="0.1668%" height="15" fill="rgb(246,193,31)" fg:x="1130" fg:w="24"/><text x="8.1054%" y="591.50"></text></g><g><title>unlink_chunk (8 samples, 0.06%)</title><rect x="7.9666%" y="565" width="0.0556%" height="15" fill="rgb(241,36,4)" fg:x="1146" fg:w="8"/><text x="8.2166%" y="575.50"></text></g><g><title>tlb_finish_mmu (3 samples, 0.02%)</title><rect x="8.0222%" y="421" width="0.0209%" height="15" fill="rgb(241,130,17)" fg:x="1154" fg:w="3"/><text x="8.2722%" y="431.50"></text></g><g><title>tlb_flush_mmu (3 samples, 0.02%)</title><rect x="8.0222%" y="405" width="0.0209%" height="15" fill="rgb(206,137,32)" fg:x="1154" fg:w="3"/><text x="8.2722%" y="415.50"></text></g><g><title>free_pages_and_swap_cache (3 samples, 0.02%)</title><rect x="8.0222%" y="389" width="0.0209%" height="15" fill="rgb(237,228,51)" fg:x="1154" fg:w="3"/><text x="8.2722%" y="399.50"></text></g><g><title>release_pages (3 samples, 0.02%)</title><rect x="8.0222%" y="373" width="0.0209%" height="15" fill="rgb(243,6,42)" fg:x="1154" fg:w="3"/><text x="8.2722%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (85 samples, 0.59%)</title><rect x="7.4870%" y="741" width="0.5909%" height="15" fill="rgb(251,74,28)" fg:x="1077" fg:w="85"/><text x="7.7370%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (85 samples, 0.59%)</title><rect x="7.4870%" y="725" width="0.5909%" height="15" fill="rgb(218,20,49)" fg:x="1077" fg:w="85"/><text x="7.7370%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (85 samples, 0.59%)</title><rect x="7.4870%" y="709" width="0.5909%" height="15" fill="rgb(238,28,14)" fg:x="1077" fg:w="85"/><text x="7.7370%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (85 samples, 0.59%)</title><rect x="7.4870%" y="693" width="0.5909%" height="15" fill="rgb(229,40,46)" fg:x="1077" fg:w="85"/><text x="7.7370%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (85 samples, 0.59%)</title><rect x="7.4870%" y="677" width="0.5909%" height="15" fill="rgb(244,195,20)" fg:x="1077" fg:w="85"/><text x="7.7370%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (32 samples, 0.22%)</title><rect x="7.8554%" y="661" width="0.2225%" height="15" fill="rgb(253,56,35)" fg:x="1130" fg:w="32"/><text x="8.1054%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (32 samples, 0.22%)</title><rect x="7.8554%" y="645" width="0.2225%" height="15" fill="rgb(210,149,44)" fg:x="1130" fg:w="32"/><text x="8.1054%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (32 samples, 0.22%)</title><rect x="7.8554%" y="629" width="0.2225%" height="15" fill="rgb(240,135,12)" fg:x="1130" fg:w="32"/><text x="8.1054%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (32 samples, 0.22%)</title><rect x="7.8554%" y="613" width="0.2225%" height="15" fill="rgb(251,24,50)" fg:x="1130" fg:w="32"/><text x="8.1054%" y="623.50"></text></g><g><title>_int_free (32 samples, 0.22%)</title><rect x="7.8554%" y="597" width="0.2225%" height="15" fill="rgb(243,200,47)" fg:x="1130" fg:w="32"/><text x="8.1054%" y="607.50"></text></g><g><title>systrim (8 samples, 0.06%)</title><rect x="8.0222%" y="581" width="0.0556%" height="15" fill="rgb(224,166,26)" fg:x="1154" fg:w="8"/><text x="8.2722%" y="591.50"></text></g><g><title>__GI___default_morecore (8 samples, 0.06%)</title><rect x="8.0222%" y="565" width="0.0556%" height="15" fill="rgb(233,0,47)" fg:x="1154" fg:w="8"/><text x="8.2722%" y="575.50"></text></g><g><title>__GI___sbrk (8 samples, 0.06%)</title><rect x="8.0222%" y="549" width="0.0556%" height="15" fill="rgb(253,80,5)" fg:x="1154" fg:w="8"/><text x="8.2722%" y="559.50"></text></g><g><title>__GI___sbrk (8 samples, 0.06%)</title><rect x="8.0222%" y="533" width="0.0556%" height="15" fill="rgb(214,133,25)" fg:x="1154" fg:w="8"/><text x="8.2722%" y="543.50"></text></g><g><title>__brk (8 samples, 0.06%)</title><rect x="8.0222%" y="517" width="0.0556%" height="15" fill="rgb(209,27,14)" fg:x="1154" fg:w="8"/><text x="8.2722%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.06%)</title><rect x="8.0222%" y="501" width="0.0556%" height="15" fill="rgb(219,102,51)" fg:x="1154" fg:w="8"/><text x="8.2722%" y="511.50"></text></g><g><title>do_syscall_64 (8 samples, 0.06%)</title><rect x="8.0222%" y="485" width="0.0556%" height="15" fill="rgb(237,18,16)" fg:x="1154" fg:w="8"/><text x="8.2722%" y="495.50"></text></g><g><title>__x64_sys_brk (8 samples, 0.06%)</title><rect x="8.0222%" y="469" width="0.0556%" height="15" fill="rgb(241,85,17)" fg:x="1154" fg:w="8"/><text x="8.2722%" y="479.50"></text></g><g><title>__do_munmap (8 samples, 0.06%)</title><rect x="8.0222%" y="453" width="0.0556%" height="15" fill="rgb(236,90,42)" fg:x="1154" fg:w="8"/><text x="8.2722%" y="463.50"></text></g><g><title>unmap_region (8 samples, 0.06%)</title><rect x="8.0222%" y="437" width="0.0556%" height="15" fill="rgb(249,57,21)" fg:x="1154" fg:w="8"/><text x="8.2722%" y="447.50"></text></g><g><title>unmap_vmas (5 samples, 0.03%)</title><rect x="8.0431%" y="421" width="0.0348%" height="15" fill="rgb(243,12,36)" fg:x="1157" fg:w="5"/><text x="8.2931%" y="431.50"></text></g><g><title>unmap_single_vma (5 samples, 0.03%)</title><rect x="8.0431%" y="405" width="0.0348%" height="15" fill="rgb(253,128,47)" fg:x="1157" fg:w="5"/><text x="8.2931%" y="415.50"></text></g><g><title>unmap_page_range (5 samples, 0.03%)</title><rect x="8.0431%" y="389" width="0.0348%" height="15" fill="rgb(207,33,20)" fg:x="1157" fg:w="5"/><text x="8.2931%" y="399.50"></text></g><g><title>zap_pte_range.isra.0 (5 samples, 0.03%)</title><rect x="8.0431%" y="373" width="0.0348%" height="15" fill="rgb(233,215,35)" fg:x="1157" fg:w="5"/><text x="8.2931%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="8.0848%" y="661" width="0.0139%" height="15" fill="rgb(249,188,52)" fg:x="1163" fg:w="2"/><text x="8.3348%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.01%)</title><rect x="8.0848%" y="645" width="0.0139%" height="15" fill="rgb(225,12,32)" fg:x="1163" fg:w="2"/><text x="8.3348%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="8.0848%" y="629" width="0.0139%" height="15" fill="rgb(247,98,14)" fg:x="1163" fg:w="2"/><text x="8.3348%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="8.0848%" y="613" width="0.0139%" height="15" fill="rgb(247,219,48)" fg:x="1163" fg:w="2"/><text x="8.3348%" y="623.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.01%)</title><rect x="8.0848%" y="597" width="0.0139%" height="15" fill="rgb(253,60,48)" fg:x="1163" fg:w="2"/><text x="8.3348%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.01%)</title><rect x="8.0848%" y="581" width="0.0139%" height="15" fill="rgb(245,15,52)" fg:x="1163" fg:w="2"/><text x="8.3348%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.01%)</title><rect x="8.0848%" y="565" width="0.0139%" height="15" fill="rgb(220,133,28)" fg:x="1163" fg:w="2"/><text x="8.3348%" y="575.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.01%)</title><rect x="8.0848%" y="549" width="0.0139%" height="15" fill="rgb(217,180,4)" fg:x="1163" fg:w="2"/><text x="8.3348%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.01%)</title><rect x="8.0848%" y="533" width="0.0139%" height="15" fill="rgb(251,24,1)" fg:x="1163" fg:w="2"/><text x="8.3348%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="8.1057%" y="645" width="0.0139%" height="15" fill="rgb(212,185,49)" fg:x="1166" fg:w="2"/><text x="8.3557%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.01%)</title><rect x="8.1057%" y="629" width="0.0139%" height="15" fill="rgb(215,175,22)" fg:x="1166" fg:w="2"/><text x="8.3557%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="8.1057%" y="613" width="0.0139%" height="15" fill="rgb(250,205,14)" fg:x="1166" fg:w="2"/><text x="8.3557%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="8.1057%" y="597" width="0.0139%" height="15" fill="rgb(225,211,22)" fg:x="1166" fg:w="2"/><text x="8.3557%" y="607.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.01%)</title><rect x="8.1057%" y="581" width="0.0139%" height="15" fill="rgb(251,179,42)" fg:x="1166" fg:w="2"/><text x="8.3557%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.01%)</title><rect x="8.1057%" y="565" width="0.0139%" height="15" fill="rgb(208,216,51)" fg:x="1166" fg:w="2"/><text x="8.3557%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.01%)</title><rect x="8.1057%" y="549" width="0.0139%" height="15" fill="rgb(235,36,11)" fg:x="1166" fg:w="2"/><text x="8.3557%" y="559.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.01%)</title><rect x="8.1057%" y="533" width="0.0139%" height="15" fill="rgb(213,189,28)" fg:x="1166" fg:w="2"/><text x="8.3557%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.01%)</title><rect x="8.1057%" y="517" width="0.0139%" height="15" fill="rgb(227,203,42)" fg:x="1166" fg:w="2"/><text x="8.3557%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="8.1057%" y="501" width="0.0139%" height="15" fill="rgb(244,72,36)" fg:x="1166" fg:w="2"/><text x="8.3557%" y="511.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="8.1057%" y="485" width="0.0139%" height="15" fill="rgb(213,53,17)" fg:x="1166" fg:w="2"/><text x="8.3557%" y="495.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (2 samples, 0.01%)</title><rect x="8.1057%" y="469" width="0.0139%" height="15" fill="rgb(207,167,3)" fg:x="1166" fg:w="2"/><text x="8.3557%" y="479.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.01%)</title><rect x="8.1057%" y="453" width="0.0139%" height="15" fill="rgb(216,98,30)" fg:x="1166" fg:w="2"/><text x="8.3557%" y="463.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.01%)</title><rect x="8.1057%" y="437" width="0.0139%" height="15" fill="rgb(236,123,15)" fg:x="1166" fg:w="2"/><text x="8.3557%" y="447.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.03%)</title><rect x="8.1196%" y="645" width="0.0278%" height="15" fill="rgb(248,81,50)" fg:x="1168" fg:w="4"/><text x="8.3696%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.03%)</title><rect x="8.1196%" y="629" width="0.0278%" height="15" fill="rgb(214,120,4)" fg:x="1168" fg:w="4"/><text x="8.3696%" y="639.50"></text></g><g><title>core::fmt::write (3 samples, 0.02%)</title><rect x="8.1265%" y="613" width="0.0209%" height="15" fill="rgb(208,179,34)" fg:x="1169" fg:w="3"/><text x="8.3765%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.02%)</title><rect x="8.1265%" y="597" width="0.0209%" height="15" fill="rgb(227,140,7)" fg:x="1169" fg:w="3"/><text x="8.3765%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="8.1335%" y="581" width="0.0139%" height="15" fill="rgb(214,22,6)" fg:x="1170" fg:w="2"/><text x="8.3835%" y="591.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.01%)</title><rect x="8.1335%" y="565" width="0.0139%" height="15" fill="rgb(207,137,27)" fg:x="1170" fg:w="2"/><text x="8.3835%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="8.1335%" y="549" width="0.0139%" height="15" fill="rgb(210,8,46)" fg:x="1170" fg:w="2"/><text x="8.3835%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="8.1335%" y="533" width="0.0139%" height="15" fill="rgb(240,16,54)" fg:x="1170" fg:w="2"/><text x="8.3835%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="8.1335%" y="517" width="0.0139%" height="15" fill="rgb(211,209,29)" fg:x="1170" fg:w="2"/><text x="8.3835%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="8.1335%" y="501" width="0.0139%" height="15" fill="rgb(226,228,24)" fg:x="1170" fg:w="2"/><text x="8.3835%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="8.1335%" y="485" width="0.0139%" height="15" fill="rgb(222,84,9)" fg:x="1170" fg:w="2"/><text x="8.3835%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="8.1335%" y="469" width="0.0139%" height="15" fill="rgb(234,203,30)" fg:x="1170" fg:w="2"/><text x="8.3835%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="8.1335%" y="453" width="0.0139%" height="15" fill="rgb(238,109,14)" fg:x="1170" fg:w="2"/><text x="8.3835%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.01%)</title><rect x="8.1474%" y="645" width="0.0139%" height="15" fill="rgb(233,206,34)" fg:x="1172" fg:w="2"/><text x="8.3974%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="8.1474%" y="629" width="0.0139%" height="15" fill="rgb(220,167,47)" fg:x="1172" fg:w="2"/><text x="8.3974%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="8.1474%" y="613" width="0.0139%" height="15" fill="rgb(238,105,10)" fg:x="1172" fg:w="2"/><text x="8.3974%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="8.1474%" y="597" width="0.0139%" height="15" fill="rgb(213,227,17)" fg:x="1172" fg:w="2"/><text x="8.3974%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="8.1474%" y="581" width="0.0139%" height="15" fill="rgb(217,132,38)" fg:x="1172" fg:w="2"/><text x="8.3974%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="8.1474%" y="565" width="0.0139%" height="15" fill="rgb(242,146,4)" fg:x="1172" fg:w="2"/><text x="8.3974%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="8.1613%" y="581" width="0.0139%" height="15" fill="rgb(212,61,9)" fg:x="1174" fg:w="2"/><text x="8.4113%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="8.1613%" y="565" width="0.0139%" height="15" fill="rgb(247,126,22)" fg:x="1174" fg:w="2"/><text x="8.4113%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="8.1613%" y="549" width="0.0139%" height="15" fill="rgb(220,196,2)" fg:x="1174" fg:w="2"/><text x="8.4113%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.02%)</title><rect x="8.1613%" y="597" width="0.0209%" height="15" fill="rgb(208,46,4)" fg:x="1174" fg:w="3"/><text x="8.4113%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.03%)</title><rect x="8.1613%" y="645" width="0.0278%" height="15" fill="rgb(252,104,46)" fg:x="1174" fg:w="4"/><text x="8.4113%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.03%)</title><rect x="8.1613%" y="629" width="0.0278%" height="15" fill="rgb(237,152,48)" fg:x="1174" fg:w="4"/><text x="8.4113%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.03%)</title><rect x="8.1613%" y="613" width="0.0278%" height="15" fill="rgb(221,59,37)" fg:x="1174" fg:w="4"/><text x="8.4113%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (7 samples, 0.05%)</title><rect x="8.2030%" y="501" width="0.0487%" height="15" fill="rgb(209,202,51)" fg:x="1180" fg:w="7"/><text x="8.4530%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.03%)</title><rect x="8.2238%" y="485" width="0.0278%" height="15" fill="rgb(228,81,30)" fg:x="1183" fg:w="4"/><text x="8.4738%" y="495.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="8.2238%" y="469" width="0.0278%" height="15" fill="rgb(227,42,39)" fg:x="1183" fg:w="4"/><text x="8.4738%" y="479.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (4 samples, 0.03%)</title><rect x="8.2238%" y="453" width="0.0278%" height="15" fill="rgb(221,26,2)" fg:x="1183" fg:w="4"/><text x="8.4738%" y="463.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (4 samples, 0.03%)</title><rect x="8.2238%" y="437" width="0.0278%" height="15" fill="rgb(254,61,31)" fg:x="1183" fg:w="4"/><text x="8.4738%" y="447.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (3 samples, 0.02%)</title><rect x="8.2308%" y="421" width="0.0209%" height="15" fill="rgb(222,173,38)" fg:x="1184" fg:w="3"/><text x="8.4808%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.06%)</title><rect x="8.2030%" y="629" width="0.0626%" height="15" fill="rgb(218,50,12)" fg:x="1180" fg:w="9"/><text x="8.4530%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (9 samples, 0.06%)</title><rect x="8.2030%" y="613" width="0.0626%" height="15" fill="rgb(223,88,40)" fg:x="1180" fg:w="9"/><text x="8.4530%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.06%)</title><rect x="8.2030%" y="597" width="0.0626%" height="15" fill="rgb(237,54,19)" fg:x="1180" fg:w="9"/><text x="8.4530%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.06%)</title><rect x="8.2030%" y="581" width="0.0626%" height="15" fill="rgb(251,129,25)" fg:x="1180" fg:w="9"/><text x="8.4530%" y="591.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (9 samples, 0.06%)</title><rect x="8.2030%" y="565" width="0.0626%" height="15" fill="rgb(238,97,19)" fg:x="1180" fg:w="9"/><text x="8.4530%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (9 samples, 0.06%)</title><rect x="8.2030%" y="549" width="0.0626%" height="15" fill="rgb(240,169,18)" fg:x="1180" fg:w="9"/><text x="8.4530%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.06%)</title><rect x="8.2030%" y="533" width="0.0626%" height="15" fill="rgb(230,187,49)" fg:x="1180" fg:w="9"/><text x="8.4530%" y="543.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (9 samples, 0.06%)</title><rect x="8.2030%" y="517" width="0.0626%" height="15" fill="rgb(209,44,26)" fg:x="1180" fg:w="9"/><text x="8.4530%" y="527.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (2 samples, 0.01%)</title><rect x="8.2517%" y="501" width="0.0139%" height="15" fill="rgb(244,0,6)" fg:x="1187" fg:w="2"/><text x="8.5017%" y="511.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.01%)</title><rect x="8.2517%" y="485" width="0.0139%" height="15" fill="rgb(248,18,21)" fg:x="1187" fg:w="2"/><text x="8.5017%" y="495.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.01%)</title><rect x="8.2517%" y="469" width="0.0139%" height="15" fill="rgb(245,180,19)" fg:x="1187" fg:w="2"/><text x="8.5017%" y="479.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.01%)</title><rect x="8.2517%" y="453" width="0.0139%" height="15" fill="rgb(252,118,36)" fg:x="1187" fg:w="2"/><text x="8.5017%" y="463.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2 samples, 0.01%)</title><rect x="8.2517%" y="437" width="0.0139%" height="15" fill="rgb(210,224,19)" fg:x="1187" fg:w="2"/><text x="8.5017%" y="447.50"></text></g><g><title>_int_free (4 samples, 0.03%)</title><rect x="8.3073%" y="325" width="0.0278%" height="15" fill="rgb(218,30,24)" fg:x="1195" fg:w="4"/><text x="8.5573%" y="335.50"></text></g><g><title>tcache_put (2 samples, 0.01%)</title><rect x="8.3212%" y="309" width="0.0139%" height="15" fill="rgb(219,75,50)" fg:x="1197" fg:w="2"/><text x="8.5712%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.08%)</title><rect x="8.2795%" y="485" width="0.0765%" height="15" fill="rgb(234,72,50)" fg:x="1191" fg:w="11"/><text x="8.5295%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.08%)</title><rect x="8.2795%" y="469" width="0.0765%" height="15" fill="rgb(219,100,48)" fg:x="1191" fg:w="11"/><text x="8.5295%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.08%)</title><rect x="8.2795%" y="453" width="0.0765%" height="15" fill="rgb(253,5,41)" fg:x="1191" fg:w="11"/><text x="8.5295%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.08%)</title><rect x="8.2795%" y="437" width="0.0765%" height="15" fill="rgb(247,181,11)" fg:x="1191" fg:w="11"/><text x="8.5295%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.07%)</title><rect x="8.2864%" y="421" width="0.0695%" height="15" fill="rgb(222,223,25)" fg:x="1192" fg:w="10"/><text x="8.5364%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.06%)</title><rect x="8.2934%" y="405" width="0.0626%" height="15" fill="rgb(214,198,28)" fg:x="1193" fg:w="9"/><text x="8.5434%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.06%)</title><rect x="8.2934%" y="389" width="0.0626%" height="15" fill="rgb(230,46,43)" fg:x="1193" fg:w="9"/><text x="8.5434%" y="399.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.06%)</title><rect x="8.2934%" y="373" width="0.0626%" height="15" fill="rgb(233,65,53)" fg:x="1193" fg:w="9"/><text x="8.5434%" y="383.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.06%)</title><rect x="8.2934%" y="357" width="0.0626%" height="15" fill="rgb(221,121,27)" fg:x="1193" fg:w="9"/><text x="8.5434%" y="367.50"></text></g><g><title>_int_realloc (9 samples, 0.06%)</title><rect x="8.2934%" y="341" width="0.0626%" height="15" fill="rgb(247,70,47)" fg:x="1193" fg:w="9"/><text x="8.5434%" y="351.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="8.3351%" y="325" width="0.0209%" height="15" fill="rgb(228,85,35)" fg:x="1199" fg:w="3"/><text x="8.5851%" y="335.50"></text></g><g><title>alloc::fmt::format (15 samples, 0.10%)</title><rect x="8.2656%" y="629" width="0.1043%" height="15" fill="rgb(209,50,18)" fg:x="1189" fg:w="15"/><text x="8.5156%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (14 samples, 0.10%)</title><rect x="8.2725%" y="613" width="0.0973%" height="15" fill="rgb(250,19,35)" fg:x="1190" fg:w="14"/><text x="8.5225%" y="623.50"></text></g><g><title>core::fmt::write (13 samples, 0.09%)</title><rect x="8.2795%" y="597" width="0.0904%" height="15" fill="rgb(253,107,29)" fg:x="1191" fg:w="13"/><text x="8.5295%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (13 samples, 0.09%)</title><rect x="8.2795%" y="581" width="0.0904%" height="15" fill="rgb(252,179,29)" fg:x="1191" fg:w="13"/><text x="8.5295%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (13 samples, 0.09%)</title><rect x="8.2795%" y="565" width="0.0904%" height="15" fill="rgb(238,194,6)" fg:x="1191" fg:w="13"/><text x="8.5295%" y="575.50"></text></g><g><title>alloc::string::String::push_str (13 samples, 0.09%)</title><rect x="8.2795%" y="549" width="0.0904%" height="15" fill="rgb(238,164,29)" fg:x="1191" fg:w="13"/><text x="8.5295%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.09%)</title><rect x="8.2795%" y="533" width="0.0904%" height="15" fill="rgb(224,25,9)" fg:x="1191" fg:w="13"/><text x="8.5295%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.09%)</title><rect x="8.2795%" y="517" width="0.0904%" height="15" fill="rgb(244,153,23)" fg:x="1191" fg:w="13"/><text x="8.5295%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.09%)</title><rect x="8.2795%" y="501" width="0.0904%" height="15" fill="rgb(212,203,14)" fg:x="1191" fg:w="13"/><text x="8.5295%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.01%)</title><rect x="8.3837%" y="629" width="0.0139%" height="15" fill="rgb(220,164,20)" fg:x="1206" fg:w="2"/><text x="8.6337%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.01%)</title><rect x="8.3837%" y="613" width="0.0139%" height="15" fill="rgb(222,203,48)" fg:x="1206" fg:w="2"/><text x="8.6337%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.01%)</title><rect x="8.3837%" y="597" width="0.0139%" height="15" fill="rgb(215,159,22)" fg:x="1206" fg:w="2"/><text x="8.6337%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="8.3837%" y="581" width="0.0139%" height="15" fill="rgb(216,183,47)" fg:x="1206" fg:w="2"/><text x="8.6337%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.02%)</title><rect x="8.3976%" y="565" width="0.0209%" height="15" fill="rgb(229,195,25)" fg:x="1208" fg:w="3"/><text x="8.6476%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="8.3976%" y="549" width="0.0209%" height="15" fill="rgb(224,132,51)" fg:x="1208" fg:w="3"/><text x="8.6476%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.01%)</title><rect x="8.4046%" y="533" width="0.0139%" height="15" fill="rgb(240,63,7)" fg:x="1209" fg:w="2"/><text x="8.6546%" y="543.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (4 samples, 0.03%)</title><rect x="8.3976%" y="629" width="0.0278%" height="15" fill="rgb(249,182,41)" fg:x="1208" fg:w="4"/><text x="8.6476%" y="639.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (4 samples, 0.03%)</title><rect x="8.3976%" y="613" width="0.0278%" height="15" fill="rgb(243,47,26)" fg:x="1208" fg:w="4"/><text x="8.6476%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.03%)</title><rect x="8.3976%" y="597" width="0.0278%" height="15" fill="rgb(233,48,2)" fg:x="1208" fg:w="4"/><text x="8.6476%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.03%)</title><rect x="8.3976%" y="581" width="0.0278%" height="15" fill="rgb(244,165,34)" fg:x="1208" fg:w="4"/><text x="8.6476%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="8.4324%" y="485" width="0.0139%" height="15" fill="rgb(207,89,7)" fg:x="1213" fg:w="2"/><text x="8.6824%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="8.4324%" y="469" width="0.0139%" height="15" fill="rgb(244,117,36)" fg:x="1213" fg:w="2"/><text x="8.6824%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.01%)</title><rect x="8.4324%" y="453" width="0.0139%" height="15" fill="rgb(226,144,34)" fg:x="1213" fg:w="2"/><text x="8.6824%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="8.4324%" y="437" width="0.0139%" height="15" fill="rgb(213,23,19)" fg:x="1213" fg:w="2"/><text x="8.6824%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.01%)</title><rect x="8.4324%" y="421" width="0.0139%" height="15" fill="rgb(217,75,12)" fg:x="1213" fg:w="2"/><text x="8.6824%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.01%)</title><rect x="8.4324%" y="405" width="0.0139%" height="15" fill="rgb(224,159,17)" fg:x="1213" fg:w="2"/><text x="8.6824%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (6 samples, 0.04%)</title><rect x="8.4463%" y="485" width="0.0417%" height="15" fill="rgb(217,118,1)" fg:x="1215" fg:w="6"/><text x="8.6963%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.04%)</title><rect x="8.4463%" y="469" width="0.0417%" height="15" fill="rgb(232,180,48)" fg:x="1215" fg:w="6"/><text x="8.6963%" y="479.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="8.4532%" y="453" width="0.0348%" height="15" fill="rgb(230,27,33)" fg:x="1216" fg:w="5"/><text x="8.7032%" y="463.50"></text></g><g><title>core::str::validations::next_code_point (5 samples, 0.03%)</title><rect x="8.4532%" y="437" width="0.0348%" height="15" fill="rgb(205,31,21)" fg:x="1216" fg:w="5"/><text x="8.7032%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (11 samples, 0.08%)</title><rect x="8.4880%" y="485" width="0.0765%" height="15" fill="rgb(253,59,4)" fg:x="1221" fg:w="11"/><text x="8.7380%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.05%)</title><rect x="8.5158%" y="469" width="0.0487%" height="15" fill="rgb(224,201,9)" fg:x="1225" fg:w="7"/><text x="8.7658%" y="479.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.05%)</title><rect x="8.5158%" y="453" width="0.0487%" height="15" fill="rgb(229,206,30)" fg:x="1225" fg:w="7"/><text x="8.7658%" y="463.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (7 samples, 0.05%)</title><rect x="8.5158%" y="437" width="0.0487%" height="15" fill="rgb(212,67,47)" fg:x="1225" fg:w="7"/><text x="8.7658%" y="447.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (7 samples, 0.05%)</title><rect x="8.5158%" y="421" width="0.0487%" height="15" fill="rgb(211,96,50)" fg:x="1225" fg:w="7"/><text x="8.7658%" y="431.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (5 samples, 0.03%)</title><rect x="8.5297%" y="405" width="0.0348%" height="15" fill="rgb(252,114,18)" fg:x="1227" fg:w="5"/><text x="8.7797%" y="415.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (3 samples, 0.02%)</title><rect x="8.5436%" y="389" width="0.0209%" height="15" fill="rgb(223,58,37)" fg:x="1229" fg:w="3"/><text x="8.7936%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.17%)</title><rect x="8.4324%" y="613" width="0.1668%" height="15" fill="rgb(237,70,4)" fg:x="1213" fg:w="24"/><text x="8.6824%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (24 samples, 0.17%)</title><rect x="8.4324%" y="597" width="0.1668%" height="15" fill="rgb(244,85,46)" fg:x="1213" fg:w="24"/><text x="8.6824%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.17%)</title><rect x="8.4324%" y="581" width="0.1668%" height="15" fill="rgb(223,39,52)" fg:x="1213" fg:w="24"/><text x="8.6824%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.17%)</title><rect x="8.4324%" y="565" width="0.1668%" height="15" fill="rgb(218,200,14)" fg:x="1213" fg:w="24"/><text x="8.6824%" y="575.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (24 samples, 0.17%)</title><rect x="8.4324%" y="549" width="0.1668%" height="15" fill="rgb(208,171,16)" fg:x="1213" fg:w="24"/><text x="8.6824%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (24 samples, 0.17%)</title><rect x="8.4324%" y="533" width="0.1668%" height="15" fill="rgb(234,200,18)" fg:x="1213" fg:w="24"/><text x="8.6824%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (24 samples, 0.17%)</title><rect x="8.4324%" y="517" width="0.1668%" height="15" fill="rgb(228,45,11)" fg:x="1213" fg:w="24"/><text x="8.6824%" y="527.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (24 samples, 0.17%)</title><rect x="8.4324%" y="501" width="0.1668%" height="15" fill="rgb(237,182,11)" fg:x="1213" fg:w="24"/><text x="8.6824%" y="511.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (5 samples, 0.03%)</title><rect x="8.5645%" y="485" width="0.0348%" height="15" fill="rgb(241,175,49)" fg:x="1232" fg:w="5"/><text x="8.8145%" y="495.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (5 samples, 0.03%)</title><rect x="8.5645%" y="469" width="0.0348%" height="15" fill="rgb(247,38,35)" fg:x="1232" fg:w="5"/><text x="8.8145%" y="479.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (5 samples, 0.03%)</title><rect x="8.5645%" y="453" width="0.0348%" height="15" fill="rgb(228,39,49)" fg:x="1232" fg:w="5"/><text x="8.8145%" y="463.50"></text></g><g><title>core::str::pattern::StrSearcher::new (5 samples, 0.03%)</title><rect x="8.5645%" y="437" width="0.0348%" height="15" fill="rgb(226,101,26)" fg:x="1232" fg:w="5"/><text x="8.8145%" y="447.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (4 samples, 0.03%)</title><rect x="8.5714%" y="421" width="0.0278%" height="15" fill="rgb(206,141,19)" fg:x="1233" fg:w="4"/><text x="8.8214%" y="431.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (2 samples, 0.01%)</title><rect x="8.5853%" y="405" width="0.0139%" height="15" fill="rgb(211,200,13)" fg:x="1235" fg:w="2"/><text x="8.8353%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.01%)</title><rect x="8.6131%" y="565" width="0.0139%" height="15" fill="rgb(241,121,6)" fg:x="1239" fg:w="2"/><text x="8.8631%" y="575.50"></text></g><g><title>_int_free (5 samples, 0.03%)</title><rect x="8.6757%" y="309" width="0.0348%" height="15" fill="rgb(234,221,29)" fg:x="1248" fg:w="5"/><text x="8.9257%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.09%)</title><rect x="8.6479%" y="389" width="0.0904%" height="15" fill="rgb(229,136,5)" fg:x="1244" fg:w="13"/><text x="8.8979%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.09%)</title><rect x="8.6479%" y="373" width="0.0904%" height="15" fill="rgb(238,36,11)" fg:x="1244" fg:w="13"/><text x="8.8979%" y="383.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.09%)</title><rect x="8.6479%" y="357" width="0.0904%" height="15" fill="rgb(251,55,41)" fg:x="1244" fg:w="13"/><text x="8.8979%" y="367.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.09%)</title><rect x="8.6479%" y="341" width="0.0904%" height="15" fill="rgb(242,34,40)" fg:x="1244" fg:w="13"/><text x="8.8979%" y="351.50"></text></g><g><title>_int_realloc (13 samples, 0.09%)</title><rect x="8.6479%" y="325" width="0.0904%" height="15" fill="rgb(215,42,17)" fg:x="1244" fg:w="13"/><text x="8.8979%" y="335.50"></text></g><g><title>_int_malloc (4 samples, 0.03%)</title><rect x="8.7105%" y="309" width="0.0278%" height="15" fill="rgb(207,44,46)" fg:x="1253" fg:w="4"/><text x="8.9605%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (18 samples, 0.13%)</title><rect x="8.6270%" y="565" width="0.1251%" height="15" fill="rgb(211,206,28)" fg:x="1241" fg:w="18"/><text x="8.8770%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (18 samples, 0.13%)</title><rect x="8.6270%" y="549" width="0.1251%" height="15" fill="rgb(237,167,16)" fg:x="1241" fg:w="18"/><text x="8.8770%" y="559.50"></text></g><g><title>alloc::string::String::push_str (18 samples, 0.13%)</title><rect x="8.6270%" y="533" width="0.1251%" height="15" fill="rgb(233,66,6)" fg:x="1241" fg:w="18"/><text x="8.8770%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (18 samples, 0.13%)</title><rect x="8.6270%" y="517" width="0.1251%" height="15" fill="rgb(246,123,29)" fg:x="1241" fg:w="18"/><text x="8.8770%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (18 samples, 0.13%)</title><rect x="8.6270%" y="501" width="0.1251%" height="15" fill="rgb(209,62,40)" fg:x="1241" fg:w="18"/><text x="8.8770%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (18 samples, 0.13%)</title><rect x="8.6270%" y="485" width="0.1251%" height="15" fill="rgb(218,4,25)" fg:x="1241" fg:w="18"/><text x="8.8770%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (17 samples, 0.12%)</title><rect x="8.6340%" y="469" width="0.1182%" height="15" fill="rgb(253,91,49)" fg:x="1242" fg:w="17"/><text x="8.8840%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.12%)</title><rect x="8.6340%" y="453" width="0.1182%" height="15" fill="rgb(228,155,29)" fg:x="1242" fg:w="17"/><text x="8.8840%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.12%)</title><rect x="8.6340%" y="437" width="0.1182%" height="15" fill="rgb(243,57,37)" fg:x="1242" fg:w="17"/><text x="8.8840%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.12%)</title><rect x="8.6340%" y="421" width="0.1182%" height="15" fill="rgb(244,167,17)" fg:x="1242" fg:w="17"/><text x="8.8840%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.10%)</title><rect x="8.6479%" y="405" width="0.1043%" height="15" fill="rgb(207,181,38)" fg:x="1244" fg:w="15"/><text x="8.8979%" y="415.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="8.7383%" y="389" width="0.0139%" height="15" fill="rgb(211,8,23)" fg:x="1257" fg:w="2"/><text x="8.9883%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="8.7383%" y="373" width="0.0139%" height="15" fill="rgb(235,11,44)" fg:x="1257" fg:w="2"/><text x="8.9883%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (23 samples, 0.16%)</title><rect x="8.5992%" y="597" width="0.1599%" height="15" fill="rgb(248,18,52)" fg:x="1237" fg:w="23"/><text x="8.8492%" y="607.50"></text></g><g><title>core::fmt::write (22 samples, 0.15%)</title><rect x="8.6062%" y="581" width="0.1529%" height="15" fill="rgb(208,4,7)" fg:x="1238" fg:w="22"/><text x="8.8562%" y="591.50"></text></g><g><title>alloc::fmt::format (24 samples, 0.17%)</title><rect x="8.5992%" y="613" width="0.1668%" height="15" fill="rgb(240,17,39)" fg:x="1237" fg:w="24"/><text x="8.8492%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.01%)</title><rect x="8.7661%" y="613" width="0.0139%" height="15" fill="rgb(207,170,3)" fg:x="1261" fg:w="2"/><text x="9.0161%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="8.7661%" y="597" width="0.0139%" height="15" fill="rgb(236,100,52)" fg:x="1261" fg:w="2"/><text x="9.0161%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.01%)</title><rect x="8.7661%" y="581" width="0.0139%" height="15" fill="rgb(246,78,51)" fg:x="1261" fg:w="2"/><text x="9.0161%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="8.7661%" y="565" width="0.0139%" height="15" fill="rgb(211,17,15)" fg:x="1261" fg:w="2"/><text x="9.0161%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="8.7661%" y="549" width="0.0139%" height="15" fill="rgb(209,59,46)" fg:x="1261" fg:w="2"/><text x="9.0161%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="8.7661%" y="533" width="0.0139%" height="15" fill="rgb(210,92,25)" fg:x="1261" fg:w="2"/><text x="9.0161%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="8.7869%" y="501" width="0.0209%" height="15" fill="rgb(238,174,52)" fg:x="1264" fg:w="3"/><text x="9.0369%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="8.7869%" y="485" width="0.0209%" height="15" fill="rgb(230,73,7)" fg:x="1264" fg:w="3"/><text x="9.0369%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="8.7869%" y="469" width="0.0209%" height="15" fill="rgb(243,124,40)" fg:x="1264" fg:w="3"/><text x="9.0369%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4 samples, 0.03%)</title><rect x="8.7869%" y="533" width="0.0278%" height="15" fill="rgb(244,170,11)" fg:x="1264" fg:w="4"/><text x="9.0369%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.03%)</title><rect x="8.7869%" y="517" width="0.0278%" height="15" fill="rgb(207,114,54)" fg:x="1264" fg:w="4"/><text x="9.0369%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.05%)</title><rect x="8.7869%" y="549" width="0.0487%" height="15" fill="rgb(205,42,20)" fg:x="1264" fg:w="7"/><text x="9.0369%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="8.8147%" y="533" width="0.0209%" height="15" fill="rgb(230,30,28)" fg:x="1268" fg:w="3"/><text x="9.0647%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="8.8147%" y="517" width="0.0209%" height="15" fill="rgb(205,73,54)" fg:x="1268" fg:w="3"/><text x="9.0647%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="8.8147%" y="501" width="0.0209%" height="15" fill="rgb(254,227,23)" fg:x="1268" fg:w="3"/><text x="9.0647%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.02%)</title><rect x="8.8147%" y="485" width="0.0209%" height="15" fill="rgb(228,202,34)" fg:x="1268" fg:w="3"/><text x="9.0647%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="8.8217%" y="469" width="0.0139%" height="15" fill="rgb(222,225,37)" fg:x="1269" fg:w="2"/><text x="9.0717%" y="479.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.02%)</title><rect x="8.8495%" y="517" width="0.0209%" height="15" fill="rgb(221,14,54)" fg:x="1273" fg:w="3"/><text x="9.0995%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="8.8495%" y="501" width="0.0209%" height="15" fill="rgb(254,102,2)" fg:x="1273" fg:w="3"/><text x="9.0995%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.02%)</title><rect x="8.8495%" y="485" width="0.0209%" height="15" fill="rgb(232,104,17)" fg:x="1273" fg:w="3"/><text x="9.0995%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.02%)</title><rect x="8.8495%" y="469" width="0.0209%" height="15" fill="rgb(250,220,14)" fg:x="1273" fg:w="3"/><text x="9.0995%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.02%)</title><rect x="8.8495%" y="453" width="0.0209%" height="15" fill="rgb(241,158,9)" fg:x="1273" fg:w="3"/><text x="9.0995%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.02%)</title><rect x="8.8495%" y="437" width="0.0209%" height="15" fill="rgb(246,9,43)" fg:x="1273" fg:w="3"/><text x="9.0995%" y="447.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (15 samples, 0.10%)</title><rect x="8.7869%" y="613" width="0.1043%" height="15" fill="rgb(206,73,33)" fg:x="1264" fg:w="15"/><text x="9.0369%" y="623.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (15 samples, 0.10%)</title><rect x="8.7869%" y="597" width="0.1043%" height="15" fill="rgb(222,79,8)" fg:x="1264" fg:w="15"/><text x="9.0369%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (15 samples, 0.10%)</title><rect x="8.7869%" y="581" width="0.1043%" height="15" fill="rgb(234,8,54)" fg:x="1264" fg:w="15"/><text x="9.0369%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15 samples, 0.10%)</title><rect x="8.7869%" y="565" width="0.1043%" height="15" fill="rgb(209,134,38)" fg:x="1264" fg:w="15"/><text x="9.0369%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.06%)</title><rect x="8.8356%" y="549" width="0.0556%" height="15" fill="rgb(230,127,29)" fg:x="1271" fg:w="8"/><text x="9.0856%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.06%)</title><rect x="8.8356%" y="533" width="0.0556%" height="15" fill="rgb(242,44,41)" fg:x="1271" fg:w="8"/><text x="9.0856%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.02%)</title><rect x="8.8704%" y="517" width="0.0209%" height="15" fill="rgb(222,56,43)" fg:x="1276" fg:w="3"/><text x="9.1204%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.02%)</title><rect x="8.8704%" y="501" width="0.0209%" height="15" fill="rgb(238,39,47)" fg:x="1276" fg:w="3"/><text x="9.1204%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.02%)</title><rect x="8.8704%" y="485" width="0.0209%" height="15" fill="rgb(226,79,43)" fg:x="1276" fg:w="3"/><text x="9.1204%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.02%)</title><rect x="8.8704%" y="469" width="0.0209%" height="15" fill="rgb(242,105,53)" fg:x="1276" fg:w="3"/><text x="9.1204%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.02%)</title><rect x="8.8704%" y="453" width="0.0209%" height="15" fill="rgb(251,132,46)" fg:x="1276" fg:w="3"/><text x="9.1204%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.02%)</title><rect x="8.8704%" y="437" width="0.0209%" height="15" fill="rgb(231,77,14)" fg:x="1276" fg:w="3"/><text x="9.1204%" y="447.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.02%)</title><rect x="8.8704%" y="421" width="0.0209%" height="15" fill="rgb(240,135,9)" fg:x="1276" fg:w="3"/><text x="9.1204%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="8.9051%" y="469" width="0.0139%" height="15" fill="rgb(248,109,14)" fg:x="1281" fg:w="2"/><text x="9.1551%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.01%)</title><rect x="8.9051%" y="453" width="0.0139%" height="15" fill="rgb(227,146,52)" fg:x="1281" fg:w="2"/><text x="9.1551%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="8.9051%" y="437" width="0.0139%" height="15" fill="rgb(232,54,3)" fg:x="1281" fg:w="2"/><text x="9.1551%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="8.9051%" y="421" width="0.0139%" height="15" fill="rgb(229,201,43)" fg:x="1281" fg:w="2"/><text x="9.1551%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="8.9051%" y="405" width="0.0139%" height="15" fill="rgb(252,161,33)" fg:x="1281" fg:w="2"/><text x="9.1551%" y="415.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (4 samples, 0.03%)</title><rect x="8.9051%" y="501" width="0.0278%" height="15" fill="rgb(226,146,40)" fg:x="1281" fg:w="4"/><text x="9.1551%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.03%)</title><rect x="8.9051%" y="485" width="0.0278%" height="15" fill="rgb(219,47,25)" fg:x="1281" fg:w="4"/><text x="9.1551%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="8.9190%" y="469" width="0.0139%" height="15" fill="rgb(250,135,13)" fg:x="1283" fg:w="2"/><text x="9.1690%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="8.9190%" y="453" width="0.0139%" height="15" fill="rgb(219,229,18)" fg:x="1283" fg:w="2"/><text x="9.1690%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="8.9190%" y="437" width="0.0139%" height="15" fill="rgb(217,152,27)" fg:x="1283" fg:w="2"/><text x="9.1690%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="8.9190%" y="421" width="0.0139%" height="15" fill="rgb(225,71,47)" fg:x="1283" fg:w="2"/><text x="9.1690%" y="431.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (9 samples, 0.06%)</title><rect x="8.8912%" y="613" width="0.0626%" height="15" fill="rgb(220,139,14)" fg:x="1279" fg:w="9"/><text x="9.1412%" y="623.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (9 samples, 0.06%)</title><rect x="8.8912%" y="597" width="0.0626%" height="15" fill="rgb(247,54,32)" fg:x="1279" fg:w="9"/><text x="9.1412%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.06%)</title><rect x="8.8982%" y="581" width="0.0556%" height="15" fill="rgb(252,131,39)" fg:x="1280" fg:w="8"/><text x="9.1482%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.05%)</title><rect x="8.9051%" y="565" width="0.0487%" height="15" fill="rgb(210,108,39)" fg:x="1281" fg:w="7"/><text x="9.1551%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (7 samples, 0.05%)</title><rect x="8.9051%" y="549" width="0.0487%" height="15" fill="rgb(205,23,29)" fg:x="1281" fg:w="7"/><text x="9.1551%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.05%)</title><rect x="8.9051%" y="533" width="0.0487%" height="15" fill="rgb(246,139,46)" fg:x="1281" fg:w="7"/><text x="9.1551%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (7 samples, 0.05%)</title><rect x="8.9051%" y="517" width="0.0487%" height="15" fill="rgb(250,81,26)" fg:x="1281" fg:w="7"/><text x="9.1551%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.01%)</title><rect x="8.9399%" y="501" width="0.0139%" height="15" fill="rgb(214,104,7)" fg:x="1286" fg:w="2"/><text x="9.1899%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.01%)</title><rect x="8.9399%" y="485" width="0.0139%" height="15" fill="rgb(233,189,8)" fg:x="1286" fg:w="2"/><text x="9.1899%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.02%)</title><rect x="8.9885%" y="469" width="0.0209%" height="15" fill="rgb(228,141,17)" fg:x="1293" fg:w="3"/><text x="9.2385%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.02%)</title><rect x="8.9885%" y="453" width="0.0209%" height="15" fill="rgb(247,157,1)" fg:x="1293" fg:w="3"/><text x="9.2385%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.02%)</title><rect x="8.9885%" y="437" width="0.0209%" height="15" fill="rgb(249,225,5)" fg:x="1293" fg:w="3"/><text x="9.2385%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.02%)</title><rect x="8.9885%" y="421" width="0.0209%" height="15" fill="rgb(242,55,13)" fg:x="1293" fg:w="3"/><text x="9.2385%" y="431.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.02%)</title><rect x="8.9885%" y="405" width="0.0209%" height="15" fill="rgb(230,49,50)" fg:x="1293" fg:w="3"/><text x="9.2385%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.02%)</title><rect x="8.9885%" y="389" width="0.0209%" height="15" fill="rgb(241,111,38)" fg:x="1293" fg:w="3"/><text x="9.2385%" y="399.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.01%)</title><rect x="8.9955%" y="373" width="0.0139%" height="15" fill="rgb(252,155,4)" fg:x="1294" fg:w="2"/><text x="9.2455%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.01%)</title><rect x="9.0094%" y="469" width="0.0139%" height="15" fill="rgb(212,69,32)" fg:x="1296" fg:w="2"/><text x="9.2594%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="9.0094%" y="453" width="0.0139%" height="15" fill="rgb(243,107,47)" fg:x="1296" fg:w="2"/><text x="9.2594%" y="463.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="9.0094%" y="437" width="0.0139%" height="15" fill="rgb(247,130,12)" fg:x="1296" fg:w="2"/><text x="9.2594%" y="447.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.01%)</title><rect x="9.0094%" y="421" width="0.0139%" height="15" fill="rgb(233,74,16)" fg:x="1296" fg:w="2"/><text x="9.2594%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="9.1276%" y="373" width="0.0139%" height="15" fill="rgb(208,58,18)" fg:x="1313" fg:w="2"/><text x="9.3776%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="9.1276%" y="357" width="0.0139%" height="15" fill="rgb(242,225,1)" fg:x="1313" fg:w="2"/><text x="9.3776%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (20 samples, 0.14%)</title><rect x="9.0233%" y="469" width="0.1390%" height="15" fill="rgb(249,39,40)" fg:x="1298" fg:w="20"/><text x="9.2733%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (17 samples, 0.12%)</title><rect x="9.0441%" y="453" width="0.1182%" height="15" fill="rgb(207,72,44)" fg:x="1301" fg:w="17"/><text x="9.2941%" y="463.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.12%)</title><rect x="9.0441%" y="437" width="0.1182%" height="15" fill="rgb(215,193,12)" fg:x="1301" fg:w="17"/><text x="9.2941%" y="447.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (17 samples, 0.12%)</title><rect x="9.0441%" y="421" width="0.1182%" height="15" fill="rgb(248,41,39)" fg:x="1301" fg:w="17"/><text x="9.2941%" y="431.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (17 samples, 0.12%)</title><rect x="9.0441%" y="405" width="0.1182%" height="15" fill="rgb(253,85,4)" fg:x="1301" fg:w="17"/><text x="9.2941%" y="415.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (14 samples, 0.10%)</title><rect x="9.0650%" y="389" width="0.0973%" height="15" fill="rgb(243,70,31)" fg:x="1304" fg:w="14"/><text x="9.3150%" y="399.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (3 samples, 0.02%)</title><rect x="9.1415%" y="373" width="0.0209%" height="15" fill="rgb(253,195,26)" fg:x="1315" fg:w="3"/><text x="9.3915%" y="383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.03%)</title><rect x="9.1971%" y="389" width="0.0348%" height="15" fill="rgb(243,42,11)" fg:x="1323" fg:w="5"/><text x="9.4471%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.03%)</title><rect x="9.1971%" y="373" width="0.0348%" height="15" fill="rgb(239,66,17)" fg:x="1323" fg:w="5"/><text x="9.4471%" y="383.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.01%)</title><rect x="9.2179%" y="357" width="0.0139%" height="15" fill="rgb(217,132,21)" fg:x="1326" fg:w="2"/><text x="9.4679%" y="367.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (2 samples, 0.01%)</title><rect x="9.2318%" y="389" width="0.0139%" height="15" fill="rgb(252,202,21)" fg:x="1328" fg:w="2"/><text x="9.4818%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="9.2318%" y="373" width="0.0139%" height="15" fill="rgb(233,98,36)" fg:x="1328" fg:w="2"/><text x="9.4818%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="9.2318%" y="357" width="0.0139%" height="15" fill="rgb(216,153,54)" fg:x="1328" fg:w="2"/><text x="9.4818%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.29%)</title><rect x="8.9885%" y="597" width="0.2850%" height="15" fill="rgb(250,99,7)" fg:x="1293" fg:w="41"/><text x="9.2385%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (41 samples, 0.29%)</title><rect x="8.9885%" y="581" width="0.2850%" height="15" fill="rgb(207,56,50)" fg:x="1293" fg:w="41"/><text x="9.2385%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (41 samples, 0.29%)</title><rect x="8.9885%" y="565" width="0.2850%" height="15" fill="rgb(244,61,34)" fg:x="1293" fg:w="41"/><text x="9.2385%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (41 samples, 0.29%)</title><rect x="8.9885%" y="549" width="0.2850%" height="15" fill="rgb(241,50,38)" fg:x="1293" fg:w="41"/><text x="9.2385%" y="559.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (41 samples, 0.29%)</title><rect x="8.9885%" y="533" width="0.2850%" height="15" fill="rgb(212,166,30)" fg:x="1293" fg:w="41"/><text x="9.2385%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (41 samples, 0.29%)</title><rect x="8.9885%" y="517" width="0.2850%" height="15" fill="rgb(249,127,32)" fg:x="1293" fg:w="41"/><text x="9.2385%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (41 samples, 0.29%)</title><rect x="8.9885%" y="501" width="0.2850%" height="15" fill="rgb(209,103,0)" fg:x="1293" fg:w="41"/><text x="9.2385%" y="511.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (41 samples, 0.29%)</title><rect x="8.9885%" y="485" width="0.2850%" height="15" fill="rgb(238,209,51)" fg:x="1293" fg:w="41"/><text x="9.2385%" y="495.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (16 samples, 0.11%)</title><rect x="9.1623%" y="469" width="0.1112%" height="15" fill="rgb(237,56,23)" fg:x="1318" fg:w="16"/><text x="9.4123%" y="479.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (16 samples, 0.11%)</title><rect x="9.1623%" y="453" width="0.1112%" height="15" fill="rgb(215,153,46)" fg:x="1318" fg:w="16"/><text x="9.4123%" y="463.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (16 samples, 0.11%)</title><rect x="9.1623%" y="437" width="0.1112%" height="15" fill="rgb(224,49,31)" fg:x="1318" fg:w="16"/><text x="9.4123%" y="447.50"></text></g><g><title>core::str::pattern::StrSearcher::new (16 samples, 0.11%)</title><rect x="9.1623%" y="421" width="0.1112%" height="15" fill="rgb(250,18,42)" fg:x="1318" fg:w="16"/><text x="9.4123%" y="431.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (11 samples, 0.08%)</title><rect x="9.1971%" y="405" width="0.0765%" height="15" fill="rgb(215,176,39)" fg:x="1323" fg:w="11"/><text x="9.4471%" y="415.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (4 samples, 0.03%)</title><rect x="9.2457%" y="389" width="0.0278%" height="15" fill="rgb(223,77,29)" fg:x="1330" fg:w="4"/><text x="9.4957%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (8 samples, 0.06%)</title><rect x="9.3292%" y="389" width="0.0556%" height="15" fill="rgb(234,94,52)" fg:x="1342" fg:w="8"/><text x="9.5792%" y="399.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="9.4195%" y="293" width="0.0139%" height="15" fill="rgb(220,154,50)" fg:x="1355" fg:w="2"/><text x="9.6695%" y="303.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.03%)</title><rect x="9.4056%" y="325" width="0.0348%" height="15" fill="rgb(212,11,10)" fg:x="1353" fg:w="5"/><text x="9.6556%" y="335.50"></text></g><g><title>_int_realloc (3 samples, 0.02%)</title><rect x="9.4195%" y="309" width="0.0209%" height="15" fill="rgb(205,166,19)" fg:x="1355" fg:w="3"/><text x="9.6695%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.04%)</title><rect x="9.4056%" y="373" width="0.0417%" height="15" fill="rgb(244,198,16)" fg:x="1353" fg:w="6"/><text x="9.6556%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.04%)</title><rect x="9.4056%" y="357" width="0.0417%" height="15" fill="rgb(219,69,12)" fg:x="1353" fg:w="6"/><text x="9.6556%" y="367.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.04%)</title><rect x="9.4056%" y="341" width="0.0417%" height="15" fill="rgb(245,30,7)" fg:x="1353" fg:w="6"/><text x="9.6556%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.15%)</title><rect x="9.3083%" y="453" width="0.1529%" height="15" fill="rgb(218,221,48)" fg:x="1339" fg:w="22"/><text x="9.5583%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.15%)</title><rect x="9.3083%" y="437" width="0.1529%" height="15" fill="rgb(216,66,15)" fg:x="1339" fg:w="22"/><text x="9.5583%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 0.15%)</title><rect x="9.3153%" y="421" width="0.1460%" height="15" fill="rgb(226,122,50)" fg:x="1340" fg:w="21"/><text x="9.5653%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.14%)</title><rect x="9.3222%" y="405" width="0.1390%" height="15" fill="rgb(239,156,16)" fg:x="1341" fg:w="20"/><text x="9.5722%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.08%)</title><rect x="9.3848%" y="389" width="0.0765%" height="15" fill="rgb(224,27,38)" fg:x="1350" fg:w="11"/><text x="9.6348%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.01%)</title><rect x="9.4473%" y="373" width="0.0139%" height="15" fill="rgb(224,39,27)" fg:x="1359" fg:w="2"/><text x="9.6973%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (25 samples, 0.17%)</title><rect x="9.3014%" y="549" width="0.1738%" height="15" fill="rgb(215,92,29)" fg:x="1338" fg:w="25"/><text x="9.5514%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (24 samples, 0.17%)</title><rect x="9.3083%" y="533" width="0.1668%" height="15" fill="rgb(207,159,16)" fg:x="1339" fg:w="24"/><text x="9.5583%" y="543.50"></text></g><g><title>alloc::string::String::push_str (24 samples, 0.17%)</title><rect x="9.3083%" y="517" width="0.1668%" height="15" fill="rgb(238,163,47)" fg:x="1339" fg:w="24"/><text x="9.5583%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (24 samples, 0.17%)</title><rect x="9.3083%" y="501" width="0.1668%" height="15" fill="rgb(219,91,49)" fg:x="1339" fg:w="24"/><text x="9.5583%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (24 samples, 0.17%)</title><rect x="9.3083%" y="485" width="0.1668%" height="15" fill="rgb(227,167,31)" fg:x="1339" fg:w="24"/><text x="9.5583%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (24 samples, 0.17%)</title><rect x="9.3083%" y="469" width="0.1668%" height="15" fill="rgb(234,80,54)" fg:x="1339" fg:w="24"/><text x="9.5583%" y="479.50"></text></g><g><title>alloc::fmt::format (30 samples, 0.21%)</title><rect x="9.2735%" y="597" width="0.2086%" height="15" fill="rgb(212,114,2)" fg:x="1334" fg:w="30"/><text x="9.5235%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (28 samples, 0.19%)</title><rect x="9.2875%" y="581" width="0.1946%" height="15" fill="rgb(234,50,24)" fg:x="1336" fg:w="28"/><text x="9.5375%" y="591.50"></text></g><g><title>core::fmt::write (28 samples, 0.19%)</title><rect x="9.2875%" y="565" width="0.1946%" height="15" fill="rgb(221,68,8)" fg:x="1336" fg:w="28"/><text x="9.5375%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.02%)</title><rect x="9.4821%" y="533" width="0.0209%" height="15" fill="rgb(254,180,31)" fg:x="1364" fg:w="3"/><text x="9.7321%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.02%)</title><rect x="9.4821%" y="517" width="0.0209%" height="15" fill="rgb(247,130,50)" fg:x="1364" fg:w="3"/><text x="9.7321%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.03%)</title><rect x="9.4821%" y="597" width="0.0278%" height="15" fill="rgb(211,109,4)" fg:x="1364" fg:w="4"/><text x="9.7321%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.03%)</title><rect x="9.4821%" y="581" width="0.0278%" height="15" fill="rgb(238,50,21)" fg:x="1364" fg:w="4"/><text x="9.7321%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.03%)</title><rect x="9.4821%" y="565" width="0.0278%" height="15" fill="rgb(225,57,45)" fg:x="1364" fg:w="4"/><text x="9.7321%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="9.4821%" y="549" width="0.0278%" height="15" fill="rgb(209,196,50)" fg:x="1364" fg:w="4"/><text x="9.7321%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="9.5099%" y="485" width="0.0139%" height="15" fill="rgb(242,140,13)" fg:x="1368" fg:w="2"/><text x="9.7599%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="9.5099%" y="533" width="0.0278%" height="15" fill="rgb(217,111,7)" fg:x="1368" fg:w="4"/><text x="9.7599%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="9.5099%" y="517" width="0.0278%" height="15" fill="rgb(253,193,51)" fg:x="1368" fg:w="4"/><text x="9.7599%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="9.5099%" y="501" width="0.0278%" height="15" fill="rgb(252,70,29)" fg:x="1368" fg:w="4"/><text x="9.7599%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="9.5238%" y="485" width="0.0139%" height="15" fill="rgb(232,127,12)" fg:x="1370" fg:w="2"/><text x="9.7738%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="9.5238%" y="469" width="0.0139%" height="15" fill="rgb(211,180,21)" fg:x="1370" fg:w="2"/><text x="9.7738%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.04%)</title><rect x="9.5099%" y="549" width="0.0417%" height="15" fill="rgb(229,72,13)" fg:x="1368" fg:w="6"/><text x="9.7599%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.01%)</title><rect x="9.5377%" y="533" width="0.0139%" height="15" fill="rgb(240,211,49)" fg:x="1372" fg:w="2"/><text x="9.7877%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.06%)</title><rect x="9.5099%" y="597" width="0.0556%" height="15" fill="rgb(219,149,40)" fg:x="1368" fg:w="8"/><text x="9.7599%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.06%)</title><rect x="9.5099%" y="581" width="0.0556%" height="15" fill="rgb(210,127,46)" fg:x="1368" fg:w="8"/><text x="9.7599%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.06%)</title><rect x="9.5099%" y="565" width="0.0556%" height="15" fill="rgb(220,106,7)" fg:x="1368" fg:w="8"/><text x="9.7599%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.01%)</title><rect x="9.5516%" y="549" width="0.0139%" height="15" fill="rgb(249,31,22)" fg:x="1374" fg:w="2"/><text x="9.8016%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="9.5516%" y="533" width="0.0139%" height="15" fill="rgb(253,1,49)" fg:x="1374" fg:w="2"/><text x="9.8016%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.03%)</title><rect x="9.5864%" y="437" width="0.0348%" height="15" fill="rgb(227,144,33)" fg:x="1379" fg:w="5"/><text x="9.8364%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="9.6072%" y="421" width="0.0139%" height="15" fill="rgb(249,163,44)" fg:x="1382" fg:w="2"/><text x="9.8572%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.06%)</title><rect x="9.5725%" y="485" width="0.0556%" height="15" fill="rgb(234,15,39)" fg:x="1377" fg:w="8"/><text x="9.8225%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.06%)</title><rect x="9.5725%" y="469" width="0.0556%" height="15" fill="rgb(207,66,16)" fg:x="1377" fg:w="8"/><text x="9.8225%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.06%)</title><rect x="9.5725%" y="453" width="0.0556%" height="15" fill="rgb(233,112,24)" fg:x="1377" fg:w="8"/><text x="9.8225%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.03%)</title><rect x="9.6350%" y="421" width="0.0278%" height="15" fill="rgb(230,90,22)" fg:x="1386" fg:w="4"/><text x="9.8850%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.03%)</title><rect x="9.6350%" y="405" width="0.0278%" height="15" fill="rgb(229,61,13)" fg:x="1386" fg:w="4"/><text x="9.8850%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (14 samples, 0.10%)</title><rect x="9.5725%" y="517" width="0.0973%" height="15" fill="rgb(225,57,24)" fg:x="1377" fg:w="14"/><text x="9.8225%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (14 samples, 0.10%)</title><rect x="9.5725%" y="501" width="0.0973%" height="15" fill="rgb(208,169,48)" fg:x="1377" fg:w="14"/><text x="9.8225%" y="511.50"></text></g><g><title>core::hash::Hasher::write_u8 (6 samples, 0.04%)</title><rect x="9.6281%" y="485" width="0.0417%" height="15" fill="rgb(244,218,51)" fg:x="1385" fg:w="6"/><text x="9.8781%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.04%)</title><rect x="9.6281%" y="469" width="0.0417%" height="15" fill="rgb(214,148,10)" fg:x="1385" fg:w="6"/><text x="9.8781%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.04%)</title><rect x="9.6281%" y="453" width="0.0417%" height="15" fill="rgb(225,174,27)" fg:x="1385" fg:w="6"/><text x="9.8781%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.04%)</title><rect x="9.6281%" y="437" width="0.0417%" height="15" fill="rgb(230,96,26)" fg:x="1385" fg:w="6"/><text x="9.8781%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 0.13%)</title><rect x="9.5655%" y="533" width="0.1321%" height="15" fill="rgb(232,10,30)" fg:x="1376" fg:w="19"/><text x="9.8155%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="9.6698%" y="517" width="0.0278%" height="15" fill="rgb(222,8,50)" fg:x="1391" fg:w="4"/><text x="9.9198%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="9.6698%" y="501" width="0.0278%" height="15" fill="rgb(213,81,27)" fg:x="1391" fg:w="4"/><text x="9.9198%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="9.6698%" y="485" width="0.0278%" height="15" fill="rgb(245,50,10)" fg:x="1391" fg:w="4"/><text x="9.9198%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="9.6837%" y="469" width="0.0139%" height="15" fill="rgb(216,100,18)" fg:x="1393" fg:w="2"/><text x="9.9337%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="9.6837%" y="453" width="0.0139%" height="15" fill="rgb(236,147,54)" fg:x="1393" fg:w="2"/><text x="9.9337%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.04%)</title><rect x="9.7046%" y="501" width="0.0417%" height="15" fill="rgb(205,143,26)" fg:x="1396" fg:w="6"/><text x="9.9546%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (6 samples, 0.04%)</title><rect x="9.7046%" y="485" width="0.0417%" height="15" fill="rgb(236,26,9)" fg:x="1396" fg:w="6"/><text x="9.9546%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.04%)</title><rect x="9.7046%" y="469" width="0.0417%" height="15" fill="rgb(221,165,53)" fg:x="1396" fg:w="6"/><text x="9.9546%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.04%)</title><rect x="9.7046%" y="453" width="0.0417%" height="15" fill="rgb(214,110,17)" fg:x="1396" fg:w="6"/><text x="9.9546%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.04%)</title><rect x="9.7046%" y="437" width="0.0417%" height="15" fill="rgb(237,197,12)" fg:x="1396" fg:w="6"/><text x="9.9546%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.04%)</title><rect x="9.7046%" y="421" width="0.0417%" height="15" fill="rgb(205,84,17)" fg:x="1396" fg:w="6"/><text x="9.9546%" y="431.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (30 samples, 0.21%)</title><rect x="9.5655%" y="597" width="0.2086%" height="15" fill="rgb(237,18,45)" fg:x="1376" fg:w="30"/><text x="9.8155%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (30 samples, 0.21%)</title><rect x="9.5655%" y="581" width="0.2086%" height="15" fill="rgb(221,87,14)" fg:x="1376" fg:w="30"/><text x="9.8155%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (30 samples, 0.21%)</title><rect x="9.5655%" y="565" width="0.2086%" height="15" fill="rgb(238,186,15)" fg:x="1376" fg:w="30"/><text x="9.8155%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30 samples, 0.21%)</title><rect x="9.5655%" y="549" width="0.2086%" height="15" fill="rgb(208,115,11)" fg:x="1376" fg:w="30"/><text x="9.8155%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11 samples, 0.08%)</title><rect x="9.6976%" y="533" width="0.0765%" height="15" fill="rgb(254,175,0)" fg:x="1395" fg:w="11"/><text x="9.9476%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.08%)</title><rect x="9.6976%" y="517" width="0.0765%" height="15" fill="rgb(227,24,42)" fg:x="1395" fg:w="11"/><text x="9.9476%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.03%)</title><rect x="9.7463%" y="501" width="0.0278%" height="15" fill="rgb(223,211,37)" fg:x="1402" fg:w="4"/><text x="9.9963%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.03%)</title><rect x="9.7463%" y="485" width="0.0278%" height="15" fill="rgb(235,49,27)" fg:x="1402" fg:w="4"/><text x="9.9963%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.03%)</title><rect x="9.7463%" y="469" width="0.0278%" height="15" fill="rgb(254,97,51)" fg:x="1402" fg:w="4"/><text x="9.9963%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.03%)</title><rect x="9.7463%" y="453" width="0.0278%" height="15" fill="rgb(249,51,40)" fg:x="1402" fg:w="4"/><text x="9.9963%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.03%)</title><rect x="9.7463%" y="437" width="0.0278%" height="15" fill="rgb(210,128,45)" fg:x="1402" fg:w="4"/><text x="9.9963%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.03%)</title><rect x="9.7463%" y="421" width="0.0278%" height="15" fill="rgb(224,137,50)" fg:x="1402" fg:w="4"/><text x="9.9963%" y="431.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4 samples, 0.03%)</title><rect x="9.7463%" y="405" width="0.0278%" height="15" fill="rgb(242,15,9)" fg:x="1402" fg:w="4"/><text x="9.9963%" y="415.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.01%)</title><rect x="9.7741%" y="549" width="0.0139%" height="15" fill="rgb(233,187,41)" fg:x="1406" fg:w="2"/><text x="10.0241%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.01%)</title><rect x="9.7880%" y="533" width="0.0139%" height="15" fill="rgb(227,2,29)" fg:x="1408" fg:w="2"/><text x="10.0380%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.01%)</title><rect x="9.7880%" y="517" width="0.0139%" height="15" fill="rgb(222,70,3)" fg:x="1408" fg:w="2"/><text x="10.0380%" y="527.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="9.7880%" y="501" width="0.0139%" height="15" fill="rgb(213,11,42)" fg:x="1408" fg:w="2"/><text x="10.0380%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (75 samples, 0.52%)</title><rect x="9.8297%" y="373" width="0.5214%" height="15" fill="rgb(225,150,9)" fg:x="1414" fg:w="75"/><text x="10.0797%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.02%)</title><rect x="10.3302%" y="357" width="0.0209%" height="15" fill="rgb(230,162,45)" fg:x="1486" fg:w="3"/><text x="10.5802%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (82 samples, 0.57%)</title><rect x="9.8088%" y="421" width="0.5700%" height="15" fill="rgb(222,14,52)" fg:x="1411" fg:w="82"/><text x="10.0588%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (81 samples, 0.56%)</title><rect x="9.8158%" y="405" width="0.5631%" height="15" fill="rgb(254,198,14)" fg:x="1412" fg:w="81"/><text x="10.0658%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (81 samples, 0.56%)</title><rect x="9.8158%" y="389" width="0.5631%" height="15" fill="rgb(220,217,30)" fg:x="1412" fg:w="81"/><text x="10.0658%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.03%)</title><rect x="10.3511%" y="373" width="0.0278%" height="15" fill="rgb(215,146,41)" fg:x="1489" fg:w="4"/><text x="10.6011%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (85 samples, 0.59%)</title><rect x="9.8088%" y="453" width="0.5909%" height="15" fill="rgb(217,27,36)" fg:x="1411" fg:w="85"/><text x="10.0588%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (85 samples, 0.59%)</title><rect x="9.8088%" y="437" width="0.5909%" height="15" fill="rgb(219,218,39)" fg:x="1411" fg:w="85"/><text x="10.0588%" y="447.50"></text></g><g><title>core::hash::Hasher::write_u8 (3 samples, 0.02%)</title><rect x="10.3789%" y="421" width="0.0209%" height="15" fill="rgb(219,4,42)" fg:x="1493" fg:w="3"/><text x="10.6289%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="10.3789%" y="405" width="0.0209%" height="15" fill="rgb(249,119,36)" fg:x="1493" fg:w="3"/><text x="10.6289%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="10.3858%" y="389" width="0.0139%" height="15" fill="rgb(209,23,33)" fg:x="1494" fg:w="2"/><text x="10.6358%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="10.3858%" y="373" width="0.0139%" height="15" fill="rgb(211,10,0)" fg:x="1494" fg:w="2"/><text x="10.6358%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="10.4206%" y="389" width="0.0139%" height="15" fill="rgb(208,99,37)" fg:x="1499" fg:w="2"/><text x="10.6706%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="10.3997%" y="453" width="0.0487%" height="15" fill="rgb(213,132,31)" fg:x="1496" fg:w="7"/><text x="10.6497%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="10.3997%" y="437" width="0.0487%" height="15" fill="rgb(243,129,40)" fg:x="1496" fg:w="7"/><text x="10.6497%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="10.3997%" y="421" width="0.0487%" height="15" fill="rgb(210,66,33)" fg:x="1496" fg:w="7"/><text x="10.6497%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.03%)</title><rect x="10.4136%" y="405" width="0.0348%" height="15" fill="rgb(209,189,4)" fg:x="1498" fg:w="5"/><text x="10.6636%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="10.4345%" y="389" width="0.0139%" height="15" fill="rgb(214,107,37)" fg:x="1501" fg:w="2"/><text x="10.6845%" y="399.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (96 samples, 0.67%)</title><rect x="9.8019%" y="485" width="0.6674%" height="15" fill="rgb(245,88,54)" fg:x="1410" fg:w="96"/><text x="10.0519%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (96 samples, 0.67%)</title><rect x="9.8019%" y="469" width="0.6674%" height="15" fill="rgb(205,146,20)" fg:x="1410" fg:w="96"/><text x="10.0519%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.02%)</title><rect x="10.4484%" y="453" width="0.0209%" height="15" fill="rgb(220,161,25)" fg:x="1503" fg:w="3"/><text x="10.6984%" y="463.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.01%)</title><rect x="10.4553%" y="437" width="0.0139%" height="15" fill="rgb(215,152,15)" fg:x="1504" fg:w="2"/><text x="10.7053%" y="447.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.01%)</title><rect x="10.4553%" y="421" width="0.0139%" height="15" fill="rgb(233,192,44)" fg:x="1504" fg:w="2"/><text x="10.7053%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.01%)</title><rect x="10.4553%" y="405" width="0.0139%" height="15" fill="rgb(240,170,46)" fg:x="1504" fg:w="2"/><text x="10.7053%" y="415.50"></text></g><g><title>clear_page_rep (4 samples, 0.03%)</title><rect x="10.5109%" y="293" width="0.0278%" height="15" fill="rgb(207,104,33)" fg:x="1512" fg:w="4"/><text x="10.7609%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (14 samples, 0.10%)</title><rect x="10.4692%" y="469" width="0.0973%" height="15" fill="rgb(219,21,39)" fg:x="1506" fg:w="14"/><text x="10.7192%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.10%)</title><rect x="10.4692%" y="453" width="0.0973%" height="15" fill="rgb(214,133,29)" fg:x="1506" fg:w="14"/><text x="10.7192%" y="463.50"></text></g><g><title>asm_exc_page_fault (11 samples, 0.08%)</title><rect x="10.4901%" y="437" width="0.0765%" height="15" fill="rgb(226,93,6)" fg:x="1509" fg:w="11"/><text x="10.7401%" y="447.50"></text></g><g><title>exc_page_fault (9 samples, 0.06%)</title><rect x="10.5040%" y="421" width="0.0626%" height="15" fill="rgb(252,222,34)" fg:x="1511" fg:w="9"/><text x="10.7540%" y="431.50"></text></g><g><title>do_user_addr_fault (9 samples, 0.06%)</title><rect x="10.5040%" y="405" width="0.0626%" height="15" fill="rgb(252,92,48)" fg:x="1511" fg:w="9"/><text x="10.7540%" y="415.50"></text></g><g><title>handle_mm_fault (9 samples, 0.06%)</title><rect x="10.5040%" y="389" width="0.0626%" height="15" fill="rgb(245,223,24)" fg:x="1511" fg:w="9"/><text x="10.7540%" y="399.50"></text></g><g><title>__handle_mm_fault (9 samples, 0.06%)</title><rect x="10.5040%" y="373" width="0.0626%" height="15" fill="rgb(205,176,3)" fg:x="1511" fg:w="9"/><text x="10.7540%" y="383.50"></text></g><g><title>do_anonymous_page (9 samples, 0.06%)</title><rect x="10.5040%" y="357" width="0.0626%" height="15" fill="rgb(235,151,15)" fg:x="1511" fg:w="9"/><text x="10.7540%" y="367.50"></text></g><g><title>alloc_pages_vma (9 samples, 0.06%)</title><rect x="10.5040%" y="341" width="0.0626%" height="15" fill="rgb(237,209,11)" fg:x="1511" fg:w="9"/><text x="10.7540%" y="351.50"></text></g><g><title>__alloc_pages_nodemask (9 samples, 0.06%)</title><rect x="10.5040%" y="325" width="0.0626%" height="15" fill="rgb(243,227,24)" fg:x="1511" fg:w="9"/><text x="10.7540%" y="335.50"></text></g><g><title>get_page_from_freelist (9 samples, 0.06%)</title><rect x="10.5040%" y="309" width="0.0626%" height="15" fill="rgb(239,193,16)" fg:x="1511" fg:w="9"/><text x="10.7540%" y="319.50"></text></g><g><title>rmqueue (4 samples, 0.03%)</title><rect x="10.5388%" y="293" width="0.0278%" height="15" fill="rgb(231,27,9)" fg:x="1516" fg:w="4"/><text x="10.7888%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (15 samples, 0.10%)</title><rect x="10.4692%" y="485" width="0.1043%" height="15" fill="rgb(219,169,10)" fg:x="1506" fg:w="15"/><text x="10.7192%" y="495.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.02%)</title><rect x="10.5944%" y="453" width="0.0209%" height="15" fill="rgb(244,229,43)" fg:x="1524" fg:w="3"/><text x="10.8444%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.01%)</title><rect x="10.6222%" y="453" width="0.0139%" height="15" fill="rgb(254,38,20)" fg:x="1528" fg:w="2"/><text x="10.8722%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.01%)</title><rect x="10.6222%" y="437" width="0.0139%" height="15" fill="rgb(250,47,30)" fg:x="1528" fg:w="2"/><text x="10.8722%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="10.6222%" y="421" width="0.0139%" height="15" fill="rgb(224,124,36)" fg:x="1528" fg:w="2"/><text x="10.8722%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (11 samples, 0.08%)</title><rect x="10.5735%" y="485" width="0.0765%" height="15" fill="rgb(246,68,51)" fg:x="1521" fg:w="11"/><text x="10.8235%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (11 samples, 0.08%)</title><rect x="10.5735%" y="469" width="0.0765%" height="15" fill="rgb(253,43,49)" fg:x="1521" fg:w="11"/><text x="10.8235%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.01%)</title><rect x="10.6361%" y="453" width="0.0139%" height="15" fill="rgb(219,54,36)" fg:x="1530" fg:w="2"/><text x="10.8861%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.01%)</title><rect x="10.6361%" y="437" width="0.0139%" height="15" fill="rgb(227,133,34)" fg:x="1530" fg:w="2"/><text x="10.8861%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (2 samples, 0.01%)</title><rect x="10.6500%" y="453" width="0.0139%" height="15" fill="rgb(247,227,15)" fg:x="1532" fg:w="2"/><text x="10.9000%" y="463.50"></text></g><g><title>core::intrinsics::write_bytes (2 samples, 0.01%)</title><rect x="10.6500%" y="437" width="0.0139%" height="15" fill="rgb(229,96,14)" fg:x="1532" fg:w="2"/><text x="10.9000%" y="447.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="10.6500%" y="421" width="0.0139%" height="15" fill="rgb(220,79,17)" fg:x="1532" fg:w="2"/><text x="10.9000%" y="431.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.01%)</title><rect x="10.6500%" y="405" width="0.0139%" height="15" fill="rgb(205,131,53)" fg:x="1532" fg:w="2"/><text x="10.9000%" y="415.50"></text></g><g><title>exc_page_fault (2 samples, 0.01%)</title><rect x="10.6500%" y="389" width="0.0139%" height="15" fill="rgb(209,50,29)" fg:x="1532" fg:w="2"/><text x="10.9000%" y="399.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.01%)</title><rect x="10.6500%" y="373" width="0.0139%" height="15" fill="rgb(245,86,46)" fg:x="1532" fg:w="2"/><text x="10.9000%" y="383.50"></text></g><g><title>handle_mm_fault (2 samples, 0.01%)</title><rect x="10.6500%" y="357" width="0.0139%" height="15" fill="rgb(235,66,46)" fg:x="1532" fg:w="2"/><text x="10.9000%" y="367.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (129 samples, 0.90%)</title><rect x="9.7741%" y="597" width="0.8968%" height="15" fill="rgb(232,148,31)" fg:x="1406" fg:w="129"/><text x="10.0241%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (129 samples, 0.90%)</title><rect x="9.7741%" y="581" width="0.8968%" height="15" fill="rgb(217,149,8)" fg:x="1406" fg:w="129"/><text x="10.0241%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (129 samples, 0.90%)</title><rect x="9.7741%" y="565" width="0.8968%" height="15" fill="rgb(209,183,11)" fg:x="1406" fg:w="129"/><text x="10.0241%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (127 samples, 0.88%)</title><rect x="9.7880%" y="549" width="0.8829%" height="15" fill="rgb(208,55,20)" fg:x="1408" fg:w="127"/><text x="10.0380%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (125 samples, 0.87%)</title><rect x="9.8019%" y="533" width="0.8690%" height="15" fill="rgb(218,39,14)" fg:x="1410" fg:w="125"/><text x="10.0519%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (125 samples, 0.87%)</title><rect x="9.8019%" y="517" width="0.8690%" height="15" fill="rgb(216,169,33)" fg:x="1410" fg:w="125"/><text x="10.0519%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (125 samples, 0.87%)</title><rect x="9.8019%" y="501" width="0.8690%" height="15" fill="rgb(233,80,24)" fg:x="1410" fg:w="125"/><text x="10.0519%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (3 samples, 0.02%)</title><rect x="10.6500%" y="485" width="0.0209%" height="15" fill="rgb(213,179,31)" fg:x="1532" fg:w="3"/><text x="10.9000%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (3 samples, 0.02%)</title><rect x="10.6500%" y="469" width="0.0209%" height="15" fill="rgb(209,19,5)" fg:x="1532" fg:w="3"/><text x="10.9000%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.01%)</title><rect x="10.7056%" y="453" width="0.0139%" height="15" fill="rgb(219,18,35)" fg:x="1540" fg:w="2"/><text x="10.9556%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="10.7056%" y="437" width="0.0139%" height="15" fill="rgb(209,169,16)" fg:x="1540" fg:w="2"/><text x="10.9556%" y="447.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="10.7056%" y="421" width="0.0139%" height="15" fill="rgb(245,90,51)" fg:x="1540" fg:w="2"/><text x="10.9556%" y="431.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.01%)</title><rect x="10.7056%" y="405" width="0.0139%" height="15" fill="rgb(220,99,45)" fg:x="1540" fg:w="2"/><text x="10.9556%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="10.9837%" y="357" width="0.0139%" height="15" fill="rgb(249,89,25)" fg:x="1580" fg:w="2"/><text x="11.2337%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="10.9837%" y="341" width="0.0139%" height="15" fill="rgb(239,193,0)" fg:x="1580" fg:w="2"/><text x="11.2337%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (44 samples, 0.31%)</title><rect x="10.7195%" y="453" width="0.3059%" height="15" fill="rgb(231,126,1)" fg:x="1542" fg:w="44"/><text x="10.9695%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (34 samples, 0.24%)</title><rect x="10.7890%" y="437" width="0.2364%" height="15" fill="rgb(243,166,3)" fg:x="1552" fg:w="34"/><text x="11.0390%" y="447.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.23%)</title><rect x="10.7960%" y="421" width="0.2294%" height="15" fill="rgb(223,22,34)" fg:x="1553" fg:w="33"/><text x="11.0460%" y="431.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (33 samples, 0.23%)</title><rect x="10.7960%" y="405" width="0.2294%" height="15" fill="rgb(251,52,51)" fg:x="1553" fg:w="33"/><text x="11.0460%" y="415.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (33 samples, 0.23%)</title><rect x="10.7960%" y="389" width="0.2294%" height="15" fill="rgb(221,165,28)" fg:x="1553" fg:w="33"/><text x="11.0460%" y="399.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (29 samples, 0.20%)</title><rect x="10.8238%" y="373" width="0.2016%" height="15" fill="rgb(218,121,47)" fg:x="1557" fg:w="29"/><text x="11.0738%" y="383.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (4 samples, 0.03%)</title><rect x="10.9976%" y="357" width="0.0278%" height="15" fill="rgb(209,120,9)" fg:x="1582" fg:w="4"/><text x="11.2476%" y="367.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.02%)</title><rect x="11.0601%" y="373" width="0.0209%" height="15" fill="rgb(236,68,12)" fg:x="1591" fg:w="3"/><text x="11.3101%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.02%)</title><rect x="11.0601%" y="357" width="0.0209%" height="15" fill="rgb(225,194,26)" fg:x="1591" fg:w="3"/><text x="11.3101%" y="367.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.02%)</title><rect x="11.0601%" y="341" width="0.0209%" height="15" fill="rgb(231,84,39)" fg:x="1591" fg:w="3"/><text x="11.3101%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (56 samples, 0.39%)</title><rect x="10.7056%" y="501" width="0.3893%" height="15" fill="rgb(210,11,45)" fg:x="1540" fg:w="56"/><text x="10.9556%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (56 samples, 0.39%)</title><rect x="10.7056%" y="485" width="0.3893%" height="15" fill="rgb(224,54,52)" fg:x="1540" fg:w="56"/><text x="10.9556%" y="495.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (56 samples, 0.39%)</title><rect x="10.7056%" y="469" width="0.3893%" height="15" fill="rgb(238,102,14)" fg:x="1540" fg:w="56"/><text x="10.9556%" y="479.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (10 samples, 0.07%)</title><rect x="11.0254%" y="453" width="0.0695%" height="15" fill="rgb(243,160,52)" fg:x="1586" fg:w="10"/><text x="11.2754%" y="463.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (10 samples, 0.07%)</title><rect x="11.0254%" y="437" width="0.0695%" height="15" fill="rgb(216,114,19)" fg:x="1586" fg:w="10"/><text x="11.2754%" y="447.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (10 samples, 0.07%)</title><rect x="11.0254%" y="421" width="0.0695%" height="15" fill="rgb(244,166,37)" fg:x="1586" fg:w="10"/><text x="11.2754%" y="431.50"></text></g><g><title>core::str::pattern::StrSearcher::new (10 samples, 0.07%)</title><rect x="11.0254%" y="405" width="0.0695%" height="15" fill="rgb(246,29,44)" fg:x="1586" fg:w="10"/><text x="11.2754%" y="415.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (5 samples, 0.03%)</title><rect x="11.0601%" y="389" width="0.0348%" height="15" fill="rgb(215,56,53)" fg:x="1591" fg:w="5"/><text x="11.3101%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.40%)</title><rect x="10.6986%" y="581" width="0.4032%" height="15" fill="rgb(217,60,2)" fg:x="1539" fg:w="58"/><text x="10.9486%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (58 samples, 0.40%)</title><rect x="10.6986%" y="565" width="0.4032%" height="15" fill="rgb(207,26,24)" fg:x="1539" fg:w="58"/><text x="10.9486%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (58 samples, 0.40%)</title><rect x="10.6986%" y="549" width="0.4032%" height="15" fill="rgb(252,210,15)" fg:x="1539" fg:w="58"/><text x="10.9486%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (58 samples, 0.40%)</title><rect x="10.6986%" y="533" width="0.4032%" height="15" fill="rgb(253,209,26)" fg:x="1539" fg:w="58"/><text x="10.9486%" y="543.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (57 samples, 0.40%)</title><rect x="10.7056%" y="517" width="0.3962%" height="15" fill="rgb(238,170,14)" fg:x="1540" fg:w="57"/><text x="10.9556%" y="527.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.01%)</title><rect x="11.1366%" y="533" width="0.0139%" height="15" fill="rgb(216,178,15)" fg:x="1602" fg:w="2"/><text x="11.3866%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (3 samples, 0.02%)</title><rect x="11.1783%" y="373" width="0.0209%" height="15" fill="rgb(250,197,2)" fg:x="1608" fg:w="3"/><text x="11.4283%" y="383.50"></text></g><g><title>_int_free (4 samples, 0.03%)</title><rect x="11.2409%" y="277" width="0.0278%" height="15" fill="rgb(212,70,42)" fg:x="1617" fg:w="4"/><text x="11.4909%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 0.12%)</title><rect x="11.2061%" y="357" width="0.1182%" height="15" fill="rgb(227,213,9)" fg:x="1612" fg:w="17"/><text x="11.4561%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (17 samples, 0.12%)</title><rect x="11.2061%" y="341" width="0.1182%" height="15" fill="rgb(245,99,25)" fg:x="1612" fg:w="17"/><text x="11.4561%" y="351.50"></text></g><g><title>alloc::alloc::realloc (17 samples, 0.12%)</title><rect x="11.2061%" y="325" width="0.1182%" height="15" fill="rgb(250,82,29)" fg:x="1612" fg:w="17"/><text x="11.4561%" y="335.50"></text></g><g><title>__GI___libc_realloc (17 samples, 0.12%)</title><rect x="11.2061%" y="309" width="0.1182%" height="15" fill="rgb(241,226,54)" fg:x="1612" fg:w="17"/><text x="11.4561%" y="319.50"></text></g><g><title>_int_realloc (17 samples, 0.12%)</title><rect x="11.2061%" y="293" width="0.1182%" height="15" fill="rgb(221,99,41)" fg:x="1612" fg:w="17"/><text x="11.4561%" y="303.50"></text></g><g><title>_int_malloc (8 samples, 0.06%)</title><rect x="11.2687%" y="277" width="0.0556%" height="15" fill="rgb(213,90,21)" fg:x="1621" fg:w="8"/><text x="11.5187%" y="287.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="11.3312%" y="357" width="0.0139%" height="15" fill="rgb(205,208,24)" fg:x="1630" fg:w="2"/><text x="11.5812%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.19%)</title><rect x="11.1644%" y="437" width="0.1946%" height="15" fill="rgb(246,31,12)" fg:x="1606" fg:w="28"/><text x="11.4144%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.19%)</title><rect x="11.1714%" y="421" width="0.1877%" height="15" fill="rgb(213,154,6)" fg:x="1607" fg:w="27"/><text x="11.4214%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.19%)</title><rect x="11.1714%" y="405" width="0.1877%" height="15" fill="rgb(222,163,29)" fg:x="1607" fg:w="27"/><text x="11.4214%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (26 samples, 0.18%)</title><rect x="11.1783%" y="389" width="0.1807%" height="15" fill="rgb(227,201,8)" fg:x="1608" fg:w="26"/><text x="11.4283%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (23 samples, 0.16%)</title><rect x="11.1992%" y="373" width="0.1599%" height="15" fill="rgb(233,9,32)" fg:x="1611" fg:w="23"/><text x="11.4492%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.01%)</title><rect x="11.3452%" y="357" width="0.0139%" height="15" fill="rgb(217,54,24)" fg:x="1632" fg:w="2"/><text x="11.5952%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (34 samples, 0.24%)</title><rect x="11.1505%" y="533" width="0.2364%" height="15" fill="rgb(235,192,0)" fg:x="1604" fg:w="34"/><text x="11.4005%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (33 samples, 0.23%)</title><rect x="11.1575%" y="517" width="0.2294%" height="15" fill="rgb(235,45,9)" fg:x="1605" fg:w="33"/><text x="11.4075%" y="527.50"></text></g><g><title>alloc::string::String::push_str (33 samples, 0.23%)</title><rect x="11.1575%" y="501" width="0.2294%" height="15" fill="rgb(246,42,40)" fg:x="1605" fg:w="33"/><text x="11.4075%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (33 samples, 0.23%)</title><rect x="11.1575%" y="485" width="0.2294%" height="15" fill="rgb(248,111,24)" fg:x="1605" fg:w="33"/><text x="11.4075%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (33 samples, 0.23%)</title><rect x="11.1575%" y="469" width="0.2294%" height="15" fill="rgb(249,65,22)" fg:x="1605" fg:w="33"/><text x="11.4075%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (33 samples, 0.23%)</title><rect x="11.1575%" y="453" width="0.2294%" height="15" fill="rgb(238,111,51)" fg:x="1605" fg:w="33"/><text x="11.4075%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.02%)</title><rect x="11.3660%" y="437" width="0.0209%" height="15" fill="rgb(250,118,22)" fg:x="1635" fg:w="3"/><text x="11.6160%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.02%)</title><rect x="11.3660%" y="421" width="0.0209%" height="15" fill="rgb(234,84,26)" fg:x="1635" fg:w="3"/><text x="11.6160%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="11.3869%" y="533" width="0.0139%" height="15" fill="rgb(243,172,12)" fg:x="1638" fg:w="2"/><text x="11.6369%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="11.3869%" y="517" width="0.0139%" height="15" fill="rgb(236,150,49)" fg:x="1638" fg:w="2"/><text x="11.6369%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.02%)</title><rect x="11.4077%" y="533" width="0.0209%" height="15" fill="rgb(225,197,26)" fg:x="1641" fg:w="3"/><text x="11.6577%" y="543.50"></text></g><g><title>alloc::fmt::format (48 samples, 0.33%)</title><rect x="11.1018%" y="581" width="0.3337%" height="15" fill="rgb(214,17,42)" fg:x="1597" fg:w="48"/><text x="11.3518%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (44 samples, 0.31%)</title><rect x="11.1296%" y="565" width="0.3059%" height="15" fill="rgb(224,165,40)" fg:x="1601" fg:w="44"/><text x="11.3796%" y="575.50"></text></g><g><title>core::fmt::write (43 samples, 0.30%)</title><rect x="11.1366%" y="549" width="0.2989%" height="15" fill="rgb(246,100,4)" fg:x="1602" fg:w="43"/><text x="11.3866%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.03%)</title><rect x="11.4355%" y="581" width="0.0278%" height="15" fill="rgb(222,103,0)" fg:x="1645" fg:w="4"/><text x="11.6855%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.03%)</title><rect x="11.4355%" y="565" width="0.0278%" height="15" fill="rgb(227,189,26)" fg:x="1645" fg:w="4"/><text x="11.6855%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.03%)</title><rect x="11.4355%" y="549" width="0.0278%" height="15" fill="rgb(214,202,17)" fg:x="1645" fg:w="4"/><text x="11.6855%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="11.4355%" y="533" width="0.0278%" height="15" fill="rgb(229,111,3)" fg:x="1645" fg:w="4"/><text x="11.6855%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.03%)</title><rect x="11.4355%" y="517" width="0.0278%" height="15" fill="rgb(229,172,15)" fg:x="1645" fg:w="4"/><text x="11.6855%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.03%)</title><rect x="11.4355%" y="501" width="0.0278%" height="15" fill="rgb(230,224,35)" fg:x="1645" fg:w="4"/><text x="11.6855%" y="511.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="11.4494%" y="485" width="0.0139%" height="15" fill="rgb(251,141,6)" fg:x="1647" fg:w="2"/><text x="11.6994%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.02%)</title><rect x="11.4633%" y="533" width="0.0209%" height="15" fill="rgb(225,208,6)" fg:x="1649" fg:w="3"/><text x="11.7133%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.01%)</title><rect x="11.4703%" y="517" width="0.0139%" height="15" fill="rgb(246,181,16)" fg:x="1650" fg:w="2"/><text x="11.7203%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.04%)</title><rect x="11.4633%" y="581" width="0.0417%" height="15" fill="rgb(227,129,36)" fg:x="1649" fg:w="6"/><text x="11.7133%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.04%)</title><rect x="11.4633%" y="565" width="0.0417%" height="15" fill="rgb(248,117,24)" fg:x="1649" fg:w="6"/><text x="11.7133%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.04%)</title><rect x="11.4633%" y="549" width="0.0417%" height="15" fill="rgb(214,185,35)" fg:x="1649" fg:w="6"/><text x="11.7133%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.02%)</title><rect x="11.4842%" y="533" width="0.0209%" height="15" fill="rgb(236,150,34)" fg:x="1652" fg:w="3"/><text x="11.7342%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="11.4842%" y="517" width="0.0209%" height="15" fill="rgb(243,228,27)" fg:x="1652" fg:w="3"/><text x="11.7342%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="11.5120%" y="421" width="0.0139%" height="15" fill="rgb(245,77,44)" fg:x="1656" fg:w="2"/><text x="11.7620%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="11.5120%" y="405" width="0.0139%" height="15" fill="rgb(235,214,42)" fg:x="1656" fg:w="2"/><text x="11.7620%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="11.5050%" y="469" width="0.0278%" height="15" fill="rgb(221,74,3)" fg:x="1655" fg:w="4"/><text x="11.7550%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="11.5050%" y="453" width="0.0278%" height="15" fill="rgb(206,121,29)" fg:x="1655" fg:w="4"/><text x="11.7550%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="11.5050%" y="437" width="0.0278%" height="15" fill="rgb(249,131,53)" fg:x="1655" fg:w="4"/><text x="11.7550%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (5 samples, 0.03%)</title><rect x="11.5050%" y="501" width="0.0348%" height="15" fill="rgb(236,170,29)" fg:x="1655" fg:w="5"/><text x="11.7550%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (5 samples, 0.03%)</title><rect x="11.5050%" y="485" width="0.0348%" height="15" fill="rgb(247,96,15)" fg:x="1655" fg:w="5"/><text x="11.7550%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.08%)</title><rect x="11.5050%" y="517" width="0.0765%" height="15" fill="rgb(211,210,7)" fg:x="1655" fg:w="11"/><text x="11.7550%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.04%)</title><rect x="11.5398%" y="501" width="0.0417%" height="15" fill="rgb(240,88,50)" fg:x="1660" fg:w="6"/><text x="11.7898%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.04%)</title><rect x="11.5398%" y="485" width="0.0417%" height="15" fill="rgb(209,229,26)" fg:x="1660" fg:w="6"/><text x="11.7898%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.04%)</title><rect x="11.5398%" y="469" width="0.0417%" height="15" fill="rgb(210,68,23)" fg:x="1660" fg:w="6"/><text x="11.7898%" y="479.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.02%)</title><rect x="11.5885%" y="485" width="0.0209%" height="15" fill="rgb(229,180,13)" fg:x="1667" fg:w="3"/><text x="11.8385%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="11.5885%" y="469" width="0.0209%" height="15" fill="rgb(236,53,44)" fg:x="1667" fg:w="3"/><text x="11.8385%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.02%)</title><rect x="11.5885%" y="453" width="0.0209%" height="15" fill="rgb(244,214,29)" fg:x="1667" fg:w="3"/><text x="11.8385%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.02%)</title><rect x="11.5885%" y="437" width="0.0209%" height="15" fill="rgb(220,75,29)" fg:x="1667" fg:w="3"/><text x="11.8385%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.02%)</title><rect x="11.5885%" y="421" width="0.0209%" height="15" fill="rgb(214,183,37)" fg:x="1667" fg:w="3"/><text x="11.8385%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.02%)</title><rect x="11.5885%" y="405" width="0.0209%" height="15" fill="rgb(239,117,29)" fg:x="1667" fg:w="3"/><text x="11.8385%" y="415.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (20 samples, 0.14%)</title><rect x="11.5050%" y="581" width="0.1390%" height="15" fill="rgb(237,171,35)" fg:x="1655" fg:w="20"/><text x="11.7550%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (20 samples, 0.14%)</title><rect x="11.5050%" y="565" width="0.1390%" height="15" fill="rgb(229,178,53)" fg:x="1655" fg:w="20"/><text x="11.7550%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (20 samples, 0.14%)</title><rect x="11.5050%" y="549" width="0.1390%" height="15" fill="rgb(210,102,19)" fg:x="1655" fg:w="20"/><text x="11.7550%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.14%)</title><rect x="11.5050%" y="533" width="0.1390%" height="15" fill="rgb(235,127,22)" fg:x="1655" fg:w="20"/><text x="11.7550%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.06%)</title><rect x="11.5815%" y="517" width="0.0626%" height="15" fill="rgb(244,31,31)" fg:x="1666" fg:w="9"/><text x="11.8315%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.06%)</title><rect x="11.5815%" y="501" width="0.0626%" height="15" fill="rgb(231,43,21)" fg:x="1666" fg:w="9"/><text x="11.8315%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.03%)</title><rect x="11.6093%" y="485" width="0.0348%" height="15" fill="rgb(217,131,35)" fg:x="1670" fg:w="5"/><text x="11.8593%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.03%)</title><rect x="11.6093%" y="469" width="0.0348%" height="15" fill="rgb(221,149,4)" fg:x="1670" fg:w="5"/><text x="11.8593%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.03%)</title><rect x="11.6093%" y="453" width="0.0348%" height="15" fill="rgb(232,170,28)" fg:x="1670" fg:w="5"/><text x="11.8593%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.03%)</title><rect x="11.6093%" y="437" width="0.0348%" height="15" fill="rgb(238,56,10)" fg:x="1670" fg:w="5"/><text x="11.8593%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.03%)</title><rect x="11.6093%" y="421" width="0.0348%" height="15" fill="rgb(235,196,14)" fg:x="1670" fg:w="5"/><text x="11.8593%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.03%)</title><rect x="11.6093%" y="405" width="0.0348%" height="15" fill="rgb(216,45,48)" fg:x="1670" fg:w="5"/><text x="11.8593%" y="415.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.03%)</title><rect x="11.6093%" y="389" width="0.0348%" height="15" fill="rgb(238,213,17)" fg:x="1670" fg:w="5"/><text x="11.8593%" y="399.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.01%)</title><rect x="11.6441%" y="533" width="0.0139%" height="15" fill="rgb(212,13,2)" fg:x="1675" fg:w="2"/><text x="11.8941%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (23 samples, 0.16%)</title><rect x="11.6927%" y="357" width="0.1599%" height="15" fill="rgb(240,114,20)" fg:x="1682" fg:w="23"/><text x="11.9427%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (29 samples, 0.20%)</title><rect x="11.6649%" y="437" width="0.2016%" height="15" fill="rgb(228,41,40)" fg:x="1678" fg:w="29"/><text x="11.9149%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (28 samples, 0.19%)</title><rect x="11.6719%" y="421" width="0.1946%" height="15" fill="rgb(244,132,35)" fg:x="1679" fg:w="28"/><text x="11.9219%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 0.19%)</title><rect x="11.6719%" y="405" width="0.1946%" height="15" fill="rgb(253,189,4)" fg:x="1679" fg:w="28"/><text x="11.9219%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (28 samples, 0.19%)</title><rect x="11.6719%" y="389" width="0.1946%" height="15" fill="rgb(224,37,19)" fg:x="1679" fg:w="28"/><text x="11.9219%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.19%)</title><rect x="11.6719%" y="373" width="0.1946%" height="15" fill="rgb(235,223,18)" fg:x="1679" fg:w="28"/><text x="11.9219%" y="383.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.01%)</title><rect x="11.8526%" y="357" width="0.0139%" height="15" fill="rgb(235,163,25)" fg:x="1705" fg:w="2"/><text x="12.1026%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="11.8665%" y="373" width="0.0139%" height="15" fill="rgb(217,145,28)" fg:x="1707" fg:w="2"/><text x="12.1165%" y="383.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (33 samples, 0.23%)</title><rect x="11.6649%" y="469" width="0.2294%" height="15" fill="rgb(223,223,32)" fg:x="1678" fg:w="33"/><text x="11.9149%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (33 samples, 0.23%)</title><rect x="11.6649%" y="453" width="0.2294%" height="15" fill="rgb(227,189,39)" fg:x="1678" fg:w="33"/><text x="11.9149%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="11.8665%" y="437" width="0.0278%" height="15" fill="rgb(248,10,22)" fg:x="1707" fg:w="4"/><text x="12.1165%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="11.8665%" y="421" width="0.0278%" height="15" fill="rgb(248,46,39)" fg:x="1707" fg:w="4"/><text x="12.1165%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="11.8665%" y="405" width="0.0278%" height="15" fill="rgb(248,113,48)" fg:x="1707" fg:w="4"/><text x="12.1165%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.03%)</title><rect x="11.8665%" y="389" width="0.0278%" height="15" fill="rgb(245,16,25)" fg:x="1707" fg:w="4"/><text x="12.1165%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="11.8804%" y="373" width="0.0139%" height="15" fill="rgb(249,152,16)" fg:x="1709" fg:w="2"/><text x="12.1304%" y="383.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.03%)</title><rect x="11.9152%" y="325" width="0.0278%" height="15" fill="rgb(250,16,1)" fg:x="1714" fg:w="4"/><text x="12.1652%" y="335.50"></text></g><g><title>__alloc_pages_nodemask (4 samples, 0.03%)</title><rect x="11.9152%" y="309" width="0.0278%" height="15" fill="rgb(249,138,3)" fg:x="1714" fg:w="4"/><text x="12.1652%" y="319.50"></text></g><g><title>get_page_from_freelist (4 samples, 0.03%)</title><rect x="11.9152%" y="293" width="0.0278%" height="15" fill="rgb(227,71,41)" fg:x="1714" fg:w="4"/><text x="12.1652%" y="303.50"></text></g><g><title>rmqueue (3 samples, 0.02%)</title><rect x="11.9221%" y="277" width="0.0209%" height="15" fill="rgb(209,184,23)" fg:x="1715" fg:w="3"/><text x="12.1721%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (9 samples, 0.06%)</title><rect x="11.8943%" y="453" width="0.0626%" height="15" fill="rgb(223,215,31)" fg:x="1711" fg:w="9"/><text x="12.1443%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.06%)</title><rect x="11.8943%" y="437" width="0.0626%" height="15" fill="rgb(210,146,28)" fg:x="1711" fg:w="9"/><text x="12.1443%" y="447.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.04%)</title><rect x="11.9152%" y="421" width="0.0417%" height="15" fill="rgb(209,183,41)" fg:x="1714" fg:w="6"/><text x="12.1652%" y="431.50"></text></g><g><title>exc_page_fault (6 samples, 0.04%)</title><rect x="11.9152%" y="405" width="0.0417%" height="15" fill="rgb(209,224,45)" fg:x="1714" fg:w="6"/><text x="12.1652%" y="415.50"></text></g><g><title>do_user_addr_fault (6 samples, 0.04%)</title><rect x="11.9152%" y="389" width="0.0417%" height="15" fill="rgb(224,209,51)" fg:x="1714" fg:w="6"/><text x="12.1652%" y="399.50"></text></g><g><title>handle_mm_fault (6 samples, 0.04%)</title><rect x="11.9152%" y="373" width="0.0417%" height="15" fill="rgb(223,17,39)" fg:x="1714" fg:w="6"/><text x="12.1652%" y="383.50"></text></g><g><title>__handle_mm_fault (6 samples, 0.04%)</title><rect x="11.9152%" y="357" width="0.0417%" height="15" fill="rgb(234,204,37)" fg:x="1714" fg:w="6"/><text x="12.1652%" y="367.50"></text></g><g><title>do_anonymous_page (6 samples, 0.04%)</title><rect x="11.9152%" y="341" width="0.0417%" height="15" fill="rgb(236,120,5)" fg:x="1714" fg:w="6"/><text x="12.1652%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (10 samples, 0.07%)</title><rect x="11.8943%" y="469" width="0.0695%" height="15" fill="rgb(248,97,27)" fg:x="1711" fg:w="10"/><text x="12.1443%" y="479.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (49 samples, 0.34%)</title><rect x="11.6441%" y="581" width="0.3406%" height="15" fill="rgb(240,66,17)" fg:x="1675" fg:w="49"/><text x="11.8941%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (49 samples, 0.34%)</title><rect x="11.6441%" y="565" width="0.3406%" height="15" fill="rgb(210,79,3)" fg:x="1675" fg:w="49"/><text x="11.8941%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (49 samples, 0.34%)</title><rect x="11.6441%" y="549" width="0.3406%" height="15" fill="rgb(214,176,27)" fg:x="1675" fg:w="49"/><text x="11.8941%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (47 samples, 0.33%)</title><rect x="11.6580%" y="533" width="0.3267%" height="15" fill="rgb(235,185,3)" fg:x="1677" fg:w="47"/><text x="11.9080%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (46 samples, 0.32%)</title><rect x="11.6649%" y="517" width="0.3198%" height="15" fill="rgb(227,24,12)" fg:x="1678" fg:w="46"/><text x="11.9149%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (46 samples, 0.32%)</title><rect x="11.6649%" y="501" width="0.3198%" height="15" fill="rgb(252,169,48)" fg:x="1678" fg:w="46"/><text x="11.9149%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (46 samples, 0.32%)</title><rect x="11.6649%" y="485" width="0.3198%" height="15" fill="rgb(212,65,1)" fg:x="1678" fg:w="46"/><text x="11.9149%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (3 samples, 0.02%)</title><rect x="11.9639%" y="469" width="0.0209%" height="15" fill="rgb(242,39,24)" fg:x="1721" fg:w="3"/><text x="12.2139%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (3 samples, 0.02%)</title><rect x="11.9639%" y="453" width="0.0209%" height="15" fill="rgb(249,32,23)" fg:x="1721" fg:w="3"/><text x="12.2139%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.06%)</title><rect x="12.0264%" y="437" width="0.0556%" height="15" fill="rgb(251,195,23)" fg:x="1730" fg:w="8"/><text x="12.2764%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.06%)</title><rect x="12.0264%" y="421" width="0.0556%" height="15" fill="rgb(236,174,8)" fg:x="1730" fg:w="8"/><text x="12.2764%" y="431.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (8 samples, 0.06%)</title><rect x="12.0264%" y="405" width="0.0556%" height="15" fill="rgb(220,197,8)" fg:x="1730" fg:w="8"/><text x="12.2764%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.06%)</title><rect x="12.0264%" y="389" width="0.0556%" height="15" fill="rgb(240,108,37)" fg:x="1730" fg:w="8"/><text x="12.2764%" y="399.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (8 samples, 0.06%)</title><rect x="12.0264%" y="373" width="0.0556%" height="15" fill="rgb(232,176,24)" fg:x="1730" fg:w="8"/><text x="12.2764%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (8 samples, 0.06%)</title><rect x="12.0264%" y="357" width="0.0556%" height="15" fill="rgb(243,35,29)" fg:x="1730" fg:w="8"/><text x="12.2764%" y="367.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.04%)</title><rect x="12.0403%" y="341" width="0.0417%" height="15" fill="rgb(210,37,18)" fg:x="1732" fg:w="6"/><text x="12.2903%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (6 samples, 0.04%)</title><rect x="12.0820%" y="437" width="0.0417%" height="15" fill="rgb(224,184,40)" fg:x="1738" fg:w="6"/><text x="12.3320%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.04%)</title><rect x="12.0820%" y="421" width="0.0417%" height="15" fill="rgb(236,39,29)" fg:x="1738" fg:w="6"/><text x="12.3320%" y="431.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="12.1029%" y="405" width="0.0209%" height="15" fill="rgb(232,48,39)" fg:x="1741" fg:w="3"/><text x="12.3529%" y="415.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.02%)</title><rect x="12.1029%" y="389" width="0.0209%" height="15" fill="rgb(236,34,42)" fg:x="1741" fg:w="3"/><text x="12.3529%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.05%)</title><rect x="12.4505%" y="341" width="0.0487%" height="15" fill="rgb(243,106,37)" fg:x="1791" fg:w="7"/><text x="12.7005%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.05%)</title><rect x="12.4505%" y="325" width="0.0487%" height="15" fill="rgb(218,96,6)" fg:x="1791" fg:w="7"/><text x="12.7005%" y="335.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.01%)</title><rect x="12.4852%" y="309" width="0.0139%" height="15" fill="rgb(235,130,12)" fg:x="1796" fg:w="2"/><text x="12.7352%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.01%)</title><rect x="12.4852%" y="293" width="0.0139%" height="15" fill="rgb(231,95,0)" fg:x="1796" fg:w="2"/><text x="12.7352%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (63 samples, 0.44%)</title><rect x="12.1237%" y="437" width="0.4380%" height="15" fill="rgb(228,12,23)" fg:x="1744" fg:w="63"/><text x="12.3737%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (48 samples, 0.33%)</title><rect x="12.2280%" y="421" width="0.3337%" height="15" fill="rgb(216,12,1)" fg:x="1759" fg:w="48"/><text x="12.4780%" y="431.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.33%)</title><rect x="12.2350%" y="405" width="0.3267%" height="15" fill="rgb(219,59,3)" fg:x="1760" fg:w="47"/><text x="12.4850%" y="415.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (47 samples, 0.33%)</title><rect x="12.2350%" y="389" width="0.3267%" height="15" fill="rgb(215,208,46)" fg:x="1760" fg:w="47"/><text x="12.4850%" y="399.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (44 samples, 0.31%)</title><rect x="12.2558%" y="373" width="0.3059%" height="15" fill="rgb(254,224,29)" fg:x="1763" fg:w="44"/><text x="12.5058%" y="383.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (42 samples, 0.29%)</title><rect x="12.2697%" y="357" width="0.2920%" height="15" fill="rgb(232,14,29)" fg:x="1765" fg:w="42"/><text x="12.5197%" y="367.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (8 samples, 0.06%)</title><rect x="12.5061%" y="341" width="0.0556%" height="15" fill="rgb(208,45,52)" fg:x="1799" fg:w="8"/><text x="12.7561%" y="351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (8 samples, 0.06%)</title><rect x="12.6521%" y="357" width="0.0556%" height="15" fill="rgb(234,191,28)" fg:x="1820" fg:w="8"/><text x="12.9021%" y="367.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (8 samples, 0.06%)</title><rect x="12.6521%" y="341" width="0.0556%" height="15" fill="rgb(244,67,43)" fg:x="1820" fg:w="8"/><text x="12.9021%" y="351.50"></text></g><g><title>__memcmp_avx2_movbe (7 samples, 0.05%)</title><rect x="12.6590%" y="325" width="0.0487%" height="15" fill="rgb(236,189,24)" fg:x="1821" fg:w="7"/><text x="12.9090%" y="335.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (2 samples, 0.01%)</title><rect x="12.7146%" y="357" width="0.0139%" height="15" fill="rgb(239,214,33)" fg:x="1829" fg:w="2"/><text x="12.9646%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="12.7146%" y="341" width="0.0139%" height="15" fill="rgb(226,176,41)" fg:x="1829" fg:w="2"/><text x="12.9646%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (108 samples, 0.75%)</title><rect x="12.0264%" y="485" width="0.7508%" height="15" fill="rgb(248,47,8)" fg:x="1730" fg:w="108"/><text x="12.2764%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (108 samples, 0.75%)</title><rect x="12.0264%" y="469" width="0.7508%" height="15" fill="rgb(218,81,44)" fg:x="1730" fg:w="108"/><text x="12.2764%" y="479.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (108 samples, 0.75%)</title><rect x="12.0264%" y="453" width="0.7508%" height="15" fill="rgb(213,98,6)" fg:x="1730" fg:w="108"/><text x="12.2764%" y="463.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (31 samples, 0.22%)</title><rect x="12.5617%" y="437" width="0.2155%" height="15" fill="rgb(222,85,22)" fg:x="1807" fg:w="31"/><text x="12.8117%" y="447.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (31 samples, 0.22%)</title><rect x="12.5617%" y="421" width="0.2155%" height="15" fill="rgb(239,46,39)" fg:x="1807" fg:w="31"/><text x="12.8117%" y="431.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (31 samples, 0.22%)</title><rect x="12.5617%" y="405" width="0.2155%" height="15" fill="rgb(237,12,29)" fg:x="1807" fg:w="31"/><text x="12.8117%" y="415.50"></text></g><g><title>core::str::pattern::StrSearcher::new (31 samples, 0.22%)</title><rect x="12.5617%" y="389" width="0.2155%" height="15" fill="rgb(214,77,8)" fg:x="1807" fg:w="31"/><text x="12.8117%" y="399.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (22 samples, 0.15%)</title><rect x="12.6243%" y="373" width="0.1529%" height="15" fill="rgb(217,168,37)" fg:x="1816" fg:w="22"/><text x="12.8743%" y="383.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (7 samples, 0.05%)</title><rect x="12.7285%" y="357" width="0.0487%" height="15" fill="rgb(221,217,23)" fg:x="1831" fg:w="7"/><text x="12.9785%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 0.76%)</title><rect x="12.0195%" y="565" width="0.7647%" height="15" fill="rgb(243,229,36)" fg:x="1729" fg:w="110"/><text x="12.2695%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (110 samples, 0.76%)</title><rect x="12.0195%" y="549" width="0.7647%" height="15" fill="rgb(251,163,40)" fg:x="1729" fg:w="110"/><text x="12.2695%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (110 samples, 0.76%)</title><rect x="12.0195%" y="533" width="0.7647%" height="15" fill="rgb(237,222,12)" fg:x="1729" fg:w="110"/><text x="12.2695%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (110 samples, 0.76%)</title><rect x="12.0195%" y="517" width="0.7647%" height="15" fill="rgb(248,132,6)" fg:x="1729" fg:w="110"/><text x="12.2695%" y="527.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (109 samples, 0.76%)</title><rect x="12.0264%" y="501" width="0.7577%" height="15" fill="rgb(227,167,50)" fg:x="1730" fg:w="109"/><text x="12.2764%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (7 samples, 0.05%)</title><rect x="12.8676%" y="357" width="0.0487%" height="15" fill="rgb(242,84,37)" fg:x="1851" fg:w="7"/><text x="13.1176%" y="367.50"></text></g><g><title>__memcpy_avx_unaligned (4 samples, 0.03%)</title><rect x="12.9649%" y="261" width="0.0278%" height="15" fill="rgb(212,4,50)" fg:x="1865" fg:w="4"/><text x="13.2149%" y="271.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="12.9927%" y="261" width="0.0139%" height="15" fill="rgb(230,228,32)" fg:x="1869" fg:w="2"/><text x="13.2427%" y="271.50"></text></g><g><title>__GI___libc_realloc (22 samples, 0.15%)</title><rect x="12.9232%" y="293" width="0.1529%" height="15" fill="rgb(248,217,23)" fg:x="1859" fg:w="22"/><text x="13.1732%" y="303.50"></text></g><g><title>_int_realloc (20 samples, 0.14%)</title><rect x="12.9371%" y="277" width="0.1390%" height="15" fill="rgb(238,197,32)" fg:x="1861" fg:w="20"/><text x="13.1871%" y="287.50"></text></g><g><title>_int_malloc (10 samples, 0.07%)</title><rect x="13.0066%" y="261" width="0.0695%" height="15" fill="rgb(236,106,1)" fg:x="1871" fg:w="10"/><text x="13.2566%" y="271.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.02%)</title><rect x="13.0553%" y="245" width="0.0209%" height="15" fill="rgb(219,228,13)" fg:x="1878" fg:w="3"/><text x="13.3053%" y="255.50"></text></g><g><title>exc_page_fault (3 samples, 0.02%)</title><rect x="13.0553%" y="229" width="0.0209%" height="15" fill="rgb(238,30,35)" fg:x="1878" fg:w="3"/><text x="13.3053%" y="239.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.02%)</title><rect x="13.0553%" y="213" width="0.0209%" height="15" fill="rgb(236,70,23)" fg:x="1878" fg:w="3"/><text x="13.3053%" y="223.50"></text></g><g><title>handle_mm_fault (3 samples, 0.02%)</title><rect x="13.0553%" y="197" width="0.0209%" height="15" fill="rgb(249,104,48)" fg:x="1878" fg:w="3"/><text x="13.3053%" y="207.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.02%)</title><rect x="13.0553%" y="181" width="0.0209%" height="15" fill="rgb(254,117,50)" fg:x="1878" fg:w="3"/><text x="13.3053%" y="191.50"></text></g><g><title>do_anonymous_page (3 samples, 0.02%)</title><rect x="13.0553%" y="165" width="0.0209%" height="15" fill="rgb(223,152,4)" fg:x="1878" fg:w="3"/><text x="13.3053%" y="175.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.02%)</title><rect x="13.0553%" y="149" width="0.0209%" height="15" fill="rgb(245,6,2)" fg:x="1878" fg:w="3"/><text x="13.3053%" y="159.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.02%)</title><rect x="13.0553%" y="133" width="0.0209%" height="15" fill="rgb(249,150,24)" fg:x="1878" fg:w="3"/><text x="13.3053%" y="143.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="13.0622%" y="117" width="0.0139%" height="15" fill="rgb(228,185,42)" fg:x="1879" fg:w="2"/><text x="13.3122%" y="127.50"></text></g><g><title>clear_page_rep (2 samples, 0.01%)</title><rect x="13.0622%" y="101" width="0.0139%" height="15" fill="rgb(226,39,33)" fg:x="1879" fg:w="2"/><text x="13.3122%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (23 samples, 0.16%)</title><rect x="12.9232%" y="341" width="0.1599%" height="15" fill="rgb(221,166,19)" fg:x="1859" fg:w="23"/><text x="13.1732%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (23 samples, 0.16%)</title><rect x="12.9232%" y="325" width="0.1599%" height="15" fill="rgb(209,109,2)" fg:x="1859" fg:w="23"/><text x="13.1732%" y="335.50"></text></g><g><title>alloc::alloc::realloc (23 samples, 0.16%)</title><rect x="12.9232%" y="309" width="0.1599%" height="15" fill="rgb(252,216,26)" fg:x="1859" fg:w="23"/><text x="13.1732%" y="319.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.03%)</title><rect x="13.0831%" y="341" width="0.0348%" height="15" fill="rgb(227,173,36)" fg:x="1882" fg:w="5"/><text x="13.3331%" y="351.50"></text></g><g><title>tcache_get (3 samples, 0.02%)</title><rect x="13.0970%" y="325" width="0.0209%" height="15" fill="rgb(209,90,7)" fg:x="1884" fg:w="3"/><text x="13.3470%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (36 samples, 0.25%)</title><rect x="12.9162%" y="357" width="0.2503%" height="15" fill="rgb(250,194,11)" fg:x="1858" fg:w="36"/><text x="13.1662%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (6 samples, 0.04%)</title><rect x="13.1248%" y="341" width="0.0417%" height="15" fill="rgb(220,72,50)" fg:x="1888" fg:w="6"/><text x="13.3748%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (49 samples, 0.34%)</title><rect x="12.8328%" y="421" width="0.3406%" height="15" fill="rgb(222,106,48)" fg:x="1846" fg:w="49"/><text x="13.0828%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (48 samples, 0.33%)</title><rect x="12.8398%" y="405" width="0.3337%" height="15" fill="rgb(216,220,45)" fg:x="1847" fg:w="48"/><text x="13.0898%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (46 samples, 0.32%)</title><rect x="12.8537%" y="389" width="0.3198%" height="15" fill="rgb(234,112,18)" fg:x="1849" fg:w="46"/><text x="13.1037%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (44 samples, 0.31%)</title><rect x="12.8676%" y="373" width="0.3059%" height="15" fill="rgb(206,179,9)" fg:x="1851" fg:w="44"/><text x="13.1176%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="13.1734%" y="421" width="0.0209%" height="15" fill="rgb(215,115,40)" fg:x="1895" fg:w="3"/><text x="13.4234%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned (3 samples, 0.02%)</title><rect x="13.1734%" y="405" width="0.0209%" height="15" fill="rgb(222,69,34)" fg:x="1895" fg:w="3"/><text x="13.4234%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (57 samples, 0.40%)</title><rect x="12.8259%" y="517" width="0.3962%" height="15" fill="rgb(209,161,10)" fg:x="1845" fg:w="57"/><text x="13.0759%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (57 samples, 0.40%)</title><rect x="12.8259%" y="501" width="0.3962%" height="15" fill="rgb(217,6,38)" fg:x="1845" fg:w="57"/><text x="13.0759%" y="511.50"></text></g><g><title>alloc::string::String::push_str (57 samples, 0.40%)</title><rect x="12.8259%" y="485" width="0.3962%" height="15" fill="rgb(229,229,48)" fg:x="1845" fg:w="57"/><text x="13.0759%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (57 samples, 0.40%)</title><rect x="12.8259%" y="469" width="0.3962%" height="15" fill="rgb(225,21,28)" fg:x="1845" fg:w="57"/><text x="13.0759%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (57 samples, 0.40%)</title><rect x="12.8259%" y="453" width="0.3962%" height="15" fill="rgb(206,33,13)" fg:x="1845" fg:w="57"/><text x="13.0759%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (57 samples, 0.40%)</title><rect x="12.8259%" y="437" width="0.3962%" height="15" fill="rgb(242,178,17)" fg:x="1845" fg:w="57"/><text x="13.0759%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.03%)</title><rect x="13.1943%" y="421" width="0.0278%" height="15" fill="rgb(220,162,5)" fg:x="1898" fg:w="4"/><text x="13.4443%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.03%)</title><rect x="13.1943%" y="405" width="0.0278%" height="15" fill="rgb(210,33,43)" fg:x="1898" fg:w="4"/><text x="13.4443%" y="415.50"></text></g><g><title>alloc::fmt::format (66 samples, 0.46%)</title><rect x="12.7842%" y="565" width="0.4588%" height="15" fill="rgb(216,116,54)" fg:x="1839" fg:w="66"/><text x="13.0342%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (64 samples, 0.44%)</title><rect x="12.7981%" y="549" width="0.4449%" height="15" fill="rgb(249,92,24)" fg:x="1841" fg:w="64"/><text x="13.0481%" y="559.50"></text></g><g><title>core::fmt::write (62 samples, 0.43%)</title><rect x="12.8120%" y="533" width="0.4310%" height="15" fill="rgb(231,189,14)" fg:x="1843" fg:w="62"/><text x="13.0620%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.02%)</title><rect x="13.2221%" y="517" width="0.0209%" height="15" fill="rgb(230,8,41)" fg:x="1902" fg:w="3"/><text x="13.4721%" y="527.50"></text></g><g><title>__GI___libc_free (4 samples, 0.03%)</title><rect x="13.2430%" y="469" width="0.0278%" height="15" fill="rgb(249,7,27)" fg:x="1905" fg:w="4"/><text x="13.4930%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.05%)</title><rect x="13.2430%" y="565" width="0.0487%" height="15" fill="rgb(232,86,5)" fg:x="1905" fg:w="7"/><text x="13.4930%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.05%)</title><rect x="13.2430%" y="549" width="0.0487%" height="15" fill="rgb(224,175,18)" fg:x="1905" fg:w="7"/><text x="13.4930%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.05%)</title><rect x="13.2430%" y="533" width="0.0487%" height="15" fill="rgb(220,129,12)" fg:x="1905" fg:w="7"/><text x="13.4930%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.05%)</title><rect x="13.2430%" y="517" width="0.0487%" height="15" fill="rgb(210,19,36)" fg:x="1905" fg:w="7"/><text x="13.4930%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.05%)</title><rect x="13.2430%" y="501" width="0.0487%" height="15" fill="rgb(219,96,14)" fg:x="1905" fg:w="7"/><text x="13.4930%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.05%)</title><rect x="13.2430%" y="485" width="0.0487%" height="15" fill="rgb(249,106,1)" fg:x="1905" fg:w="7"/><text x="13.4930%" y="495.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="13.2777%" y="469" width="0.0139%" height="15" fill="rgb(249,155,20)" fg:x="1910" fg:w="2"/><text x="13.5277%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="13.3055%" y="453" width="0.0139%" height="15" fill="rgb(244,168,9)" fg:x="1914" fg:w="2"/><text x="13.5555%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="13.3055%" y="437" width="0.0139%" height="15" fill="rgb(216,23,50)" fg:x="1914" fg:w="2"/><text x="13.5555%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="13.2916%" y="501" width="0.0487%" height="15" fill="rgb(224,219,20)" fg:x="1912" fg:w="7"/><text x="13.5416%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="13.2916%" y="485" width="0.0487%" height="15" fill="rgb(222,156,15)" fg:x="1912" fg:w="7"/><text x="13.5416%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="13.2916%" y="469" width="0.0487%" height="15" fill="rgb(231,97,17)" fg:x="1912" fg:w="7"/><text x="13.5416%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.02%)</title><rect x="13.3194%" y="453" width="0.0209%" height="15" fill="rgb(218,70,48)" fg:x="1916" fg:w="3"/><text x="13.5694%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.06%)</title><rect x="13.2916%" y="517" width="0.0626%" height="15" fill="rgb(212,196,52)" fg:x="1912" fg:w="9"/><text x="13.5416%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.08%)</title><rect x="13.2916%" y="565" width="0.0765%" height="15" fill="rgb(243,203,18)" fg:x="1912" fg:w="11"/><text x="13.5416%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.08%)</title><rect x="13.2916%" y="549" width="0.0765%" height="15" fill="rgb(252,125,41)" fg:x="1912" fg:w="11"/><text x="13.5416%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.08%)</title><rect x="13.2916%" y="533" width="0.0765%" height="15" fill="rgb(223,180,33)" fg:x="1912" fg:w="11"/><text x="13.5416%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.01%)</title><rect x="13.3542%" y="517" width="0.0139%" height="15" fill="rgb(254,159,46)" fg:x="1921" fg:w="2"/><text x="13.6042%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="13.3542%" y="501" width="0.0139%" height="15" fill="rgb(254,38,10)" fg:x="1921" fg:w="2"/><text x="13.6042%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.04%)</title><rect x="13.3820%" y="453" width="0.0417%" height="15" fill="rgb(208,217,32)" fg:x="1925" fg:w="6"/><text x="13.6320%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.04%)</title><rect x="13.3820%" y="437" width="0.0417%" height="15" fill="rgb(221,120,13)" fg:x="1925" fg:w="6"/><text x="13.6320%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.04%)</title><rect x="13.3820%" y="421" width="0.0417%" height="15" fill="rgb(246,54,52)" fg:x="1925" fg:w="6"/><text x="13.6320%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.03%)</title><rect x="13.3889%" y="405" width="0.0348%" height="15" fill="rgb(242,34,25)" fg:x="1926" fg:w="5"/><text x="13.6389%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.02%)</title><rect x="13.4029%" y="389" width="0.0209%" height="15" fill="rgb(247,209,9)" fg:x="1928" fg:w="3"/><text x="13.6529%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (11 samples, 0.08%)</title><rect x="13.3820%" y="485" width="0.0765%" height="15" fill="rgb(228,71,26)" fg:x="1925" fg:w="11"/><text x="13.6320%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (11 samples, 0.08%)</title><rect x="13.3820%" y="469" width="0.0765%" height="15" fill="rgb(222,145,49)" fg:x="1925" fg:w="11"/><text x="13.6320%" y="479.50"></text></g><g><title>core::hash::Hasher::write_u8 (5 samples, 0.03%)</title><rect x="13.4237%" y="453" width="0.0348%" height="15" fill="rgb(218,121,17)" fg:x="1931" fg:w="5"/><text x="13.6737%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="13.4376%" y="437" width="0.0209%" height="15" fill="rgb(244,50,7)" fg:x="1933" fg:w="3"/><text x="13.6876%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="13.4376%" y="421" width="0.0209%" height="15" fill="rgb(246,229,37)" fg:x="1933" fg:w="3"/><text x="13.6876%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="13.4376%" y="405" width="0.0209%" height="15" fill="rgb(225,18,5)" fg:x="1933" fg:w="3"/><text x="13.6876%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="13.4863%" y="437" width="0.0139%" height="15" fill="rgb(213,204,8)" fg:x="1940" fg:w="2"/><text x="13.7363%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="13.5002%" y="421" width="0.0139%" height="15" fill="rgb(238,103,6)" fg:x="1942" fg:w="2"/><text x="13.7502%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (22 samples, 0.15%)</title><rect x="13.3750%" y="501" width="0.1529%" height="15" fill="rgb(222,25,35)" fg:x="1924" fg:w="22"/><text x="13.6250%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.07%)</title><rect x="13.4585%" y="485" width="0.0695%" height="15" fill="rgb(213,203,35)" fg:x="1936" fg:w="10"/><text x="13.7085%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.07%)</title><rect x="13.4585%" y="469" width="0.0695%" height="15" fill="rgb(221,79,53)" fg:x="1936" fg:w="10"/><text x="13.7085%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.07%)</title><rect x="13.4585%" y="453" width="0.0695%" height="15" fill="rgb(243,200,35)" fg:x="1936" fg:w="10"/><text x="13.7085%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.03%)</title><rect x="13.5002%" y="437" width="0.0278%" height="15" fill="rgb(248,60,25)" fg:x="1942" fg:w="4"/><text x="13.7502%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="13.5141%" y="421" width="0.0139%" height="15" fill="rgb(227,53,46)" fg:x="1944" fg:w="2"/><text x="13.7641%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="13.5349%" y="469" width="0.0139%" height="15" fill="rgb(216,120,32)" fg:x="1947" fg:w="2"/><text x="13.7849%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="13.5349%" y="453" width="0.0139%" height="15" fill="rgb(220,134,1)" fg:x="1947" fg:w="2"/><text x="13.7849%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.02%)</title><rect x="13.5488%" y="469" width="0.0209%" height="15" fill="rgb(237,168,5)" fg:x="1949" fg:w="3"/><text x="13.7988%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="13.5488%" y="453" width="0.0209%" height="15" fill="rgb(231,100,33)" fg:x="1949" fg:w="3"/><text x="13.7988%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.02%)</title><rect x="13.5488%" y="437" width="0.0209%" height="15" fill="rgb(236,177,47)" fg:x="1949" fg:w="3"/><text x="13.7988%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.02%)</title><rect x="13.5488%" y="421" width="0.0209%" height="15" fill="rgb(235,7,49)" fg:x="1949" fg:w="3"/><text x="13.7988%" y="431.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.02%)</title><rect x="13.5488%" y="405" width="0.0209%" height="15" fill="rgb(232,119,22)" fg:x="1949" fg:w="3"/><text x="13.7988%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.02%)</title><rect x="13.5488%" y="389" width="0.0209%" height="15" fill="rgb(254,73,53)" fg:x="1949" fg:w="3"/><text x="13.7988%" y="399.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (32 samples, 0.22%)</title><rect x="13.3681%" y="565" width="0.2225%" height="15" fill="rgb(251,35,20)" fg:x="1923" fg:w="32"/><text x="13.6181%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (32 samples, 0.22%)</title><rect x="13.3681%" y="549" width="0.2225%" height="15" fill="rgb(241,119,20)" fg:x="1923" fg:w="32"/><text x="13.6181%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (32 samples, 0.22%)</title><rect x="13.3681%" y="533" width="0.2225%" height="15" fill="rgb(207,102,14)" fg:x="1923" fg:w="32"/><text x="13.6181%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (32 samples, 0.22%)</title><rect x="13.3681%" y="517" width="0.2225%" height="15" fill="rgb(248,201,50)" fg:x="1923" fg:w="32"/><text x="13.6181%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.06%)</title><rect x="13.5280%" y="501" width="0.0626%" height="15" fill="rgb(222,185,44)" fg:x="1946" fg:w="9"/><text x="13.7780%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.06%)</title><rect x="13.5280%" y="485" width="0.0626%" height="15" fill="rgb(218,107,18)" fg:x="1946" fg:w="9"/><text x="13.7780%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.02%)</title><rect x="13.5697%" y="469" width="0.0209%" height="15" fill="rgb(237,177,39)" fg:x="1952" fg:w="3"/><text x="13.8197%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.02%)</title><rect x="13.5697%" y="453" width="0.0209%" height="15" fill="rgb(246,69,6)" fg:x="1952" fg:w="3"/><text x="13.8197%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.02%)</title><rect x="13.5697%" y="437" width="0.0209%" height="15" fill="rgb(234,208,37)" fg:x="1952" fg:w="3"/><text x="13.8197%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.02%)</title><rect x="13.5697%" y="421" width="0.0209%" height="15" fill="rgb(225,4,6)" fg:x="1952" fg:w="3"/><text x="13.8197%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.02%)</title><rect x="13.5697%" y="405" width="0.0209%" height="15" fill="rgb(233,45,0)" fg:x="1952" fg:w="3"/><text x="13.8197%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.02%)</title><rect x="13.5697%" y="389" width="0.0209%" height="15" fill="rgb(226,136,5)" fg:x="1952" fg:w="3"/><text x="13.8197%" y="399.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.02%)</title><rect x="13.5697%" y="373" width="0.0209%" height="15" fill="rgb(211,91,47)" fg:x="1952" fg:w="3"/><text x="13.8197%" y="383.50"></text></g><g><title>hashbrown::map::make_insert_hash (4 samples, 0.03%)</title><rect x="13.5905%" y="517" width="0.0278%" height="15" fill="rgb(242,88,51)" fg:x="1955" fg:w="4"/><text x="13.8405%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="13.5975%" y="501" width="0.0209%" height="15" fill="rgb(230,91,28)" fg:x="1956" fg:w="3"/><text x="13.8475%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="13.5975%" y="485" width="0.0209%" height="15" fill="rgb(254,186,29)" fg:x="1956" fg:w="3"/><text x="13.8475%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="13.5975%" y="469" width="0.0209%" height="15" fill="rgb(238,6,4)" fg:x="1956" fg:w="3"/><text x="13.8475%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="13.6044%" y="453" width="0.0139%" height="15" fill="rgb(221,151,16)" fg:x="1957" fg:w="2"/><text x="13.8544%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.08%)</title><rect x="13.6323%" y="341" width="0.0765%" height="15" fill="rgb(251,143,52)" fg:x="1961" fg:w="11"/><text x="13.8823%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.08%)</title><rect x="13.6323%" y="389" width="0.0834%" height="15" fill="rgb(206,90,15)" fg:x="1961" fg:w="12"/><text x="13.8823%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.08%)</title><rect x="13.6323%" y="373" width="0.0834%" height="15" fill="rgb(218,35,8)" fg:x="1961" fg:w="12"/><text x="13.8823%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.08%)</title><rect x="13.6323%" y="357" width="0.0834%" height="15" fill="rgb(239,215,6)" fg:x="1961" fg:w="12"/><text x="13.8823%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (14 samples, 0.10%)</title><rect x="13.6323%" y="421" width="0.0973%" height="15" fill="rgb(245,116,39)" fg:x="1961" fg:w="14"/><text x="13.8823%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (14 samples, 0.10%)</title><rect x="13.6323%" y="405" width="0.0973%" height="15" fill="rgb(242,65,28)" fg:x="1961" fg:w="14"/><text x="13.8823%" y="415.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.01%)</title><rect x="13.7157%" y="389" width="0.0139%" height="15" fill="rgb(252,132,53)" fg:x="1973" fg:w="2"/><text x="13.9657%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="13.7157%" y="373" width="0.0139%" height="15" fill="rgb(224,159,50)" fg:x="1973" fg:w="2"/><text x="13.9657%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="13.7157%" y="357" width="0.0139%" height="15" fill="rgb(224,93,4)" fg:x="1973" fg:w="2"/><text x="13.9657%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="13.7157%" y="341" width="0.0139%" height="15" fill="rgb(208,81,34)" fg:x="1973" fg:w="2"/><text x="13.9657%" y="351.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (15 samples, 0.10%)</title><rect x="13.6323%" y="453" width="0.1043%" height="15" fill="rgb(233,92,54)" fg:x="1961" fg:w="15"/><text x="13.8823%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.10%)</title><rect x="13.6323%" y="437" width="0.1043%" height="15" fill="rgb(237,21,14)" fg:x="1961" fg:w="15"/><text x="13.8823%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (2 samples, 0.01%)</title><rect x="13.7365%" y="453" width="0.0139%" height="15" fill="rgb(249,128,51)" fg:x="1976" fg:w="2"/><text x="13.9865%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (2 samples, 0.01%)</title><rect x="13.7365%" y="437" width="0.0139%" height="15" fill="rgb(223,129,24)" fg:x="1976" fg:w="2"/><text x="13.9865%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="13.7365%" y="421" width="0.0139%" height="15" fill="rgb(231,168,25)" fg:x="1976" fg:w="2"/><text x="13.9865%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (20 samples, 0.14%)</title><rect x="13.6323%" y="501" width="0.1390%" height="15" fill="rgb(224,39,20)" fg:x="1961" fg:w="20"/><text x="13.8823%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (20 samples, 0.14%)</title><rect x="13.6323%" y="485" width="0.1390%" height="15" fill="rgb(225,152,53)" fg:x="1961" fg:w="20"/><text x="13.8823%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (20 samples, 0.14%)</title><rect x="13.6323%" y="469" width="0.1390%" height="15" fill="rgb(252,17,24)" fg:x="1961" fg:w="20"/><text x="13.8823%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (3 samples, 0.02%)</title><rect x="13.7504%" y="453" width="0.0209%" height="15" fill="rgb(250,114,30)" fg:x="1978" fg:w="3"/><text x="14.0004%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (3 samples, 0.02%)</title><rect x="13.7504%" y="437" width="0.0209%" height="15" fill="rgb(229,5,4)" fg:x="1978" fg:w="3"/><text x="14.0004%" y="447.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (28 samples, 0.19%)</title><rect x="13.5905%" y="565" width="0.1946%" height="15" fill="rgb(225,176,49)" fg:x="1955" fg:w="28"/><text x="13.8405%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (28 samples, 0.19%)</title><rect x="13.5905%" y="549" width="0.1946%" height="15" fill="rgb(224,221,49)" fg:x="1955" fg:w="28"/><text x="13.8405%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 0.19%)</title><rect x="13.5905%" y="533" width="0.1946%" height="15" fill="rgb(253,169,27)" fg:x="1955" fg:w="28"/><text x="13.8405%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (23 samples, 0.16%)</title><rect x="13.6253%" y="517" width="0.1599%" height="15" fill="rgb(211,206,16)" fg:x="1960" fg:w="23"/><text x="13.8753%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.01%)</title><rect x="13.7713%" y="501" width="0.0139%" height="15" fill="rgb(244,87,35)" fg:x="1981" fg:w="2"/><text x="14.0213%" y="511.50"></text></g><g><title>hashbrown::raw::is_full (2 samples, 0.01%)</title><rect x="13.7713%" y="485" width="0.0139%" height="15" fill="rgb(246,28,10)" fg:x="1981" fg:w="2"/><text x="14.0213%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.03%)</title><rect x="13.8408%" y="421" width="0.0278%" height="15" fill="rgb(229,12,44)" fg:x="1991" fg:w="4"/><text x="14.0908%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.03%)</title><rect x="13.8408%" y="405" width="0.0278%" height="15" fill="rgb(210,145,37)" fg:x="1991" fg:w="4"/><text x="14.0908%" y="415.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.03%)</title><rect x="13.8408%" y="389" width="0.0278%" height="15" fill="rgb(227,112,52)" fg:x="1991" fg:w="4"/><text x="14.0908%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.03%)</title><rect x="13.8408%" y="373" width="0.0278%" height="15" fill="rgb(238,155,34)" fg:x="1991" fg:w="4"/><text x="14.0908%" y="383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.03%)</title><rect x="13.8408%" y="357" width="0.0278%" height="15" fill="rgb(239,226,36)" fg:x="1991" fg:w="4"/><text x="14.0908%" y="367.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.03%)</title><rect x="13.8408%" y="341" width="0.0278%" height="15" fill="rgb(230,16,23)" fg:x="1991" fg:w="4"/><text x="14.0908%" y="351.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.01%)</title><rect x="13.8547%" y="325" width="0.0139%" height="15" fill="rgb(236,171,36)" fg:x="1993" fg:w="2"/><text x="14.1047%" y="335.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="13.8686%" y="389" width="0.0348%" height="15" fill="rgb(221,22,14)" fg:x="1995" fg:w="5"/><text x="14.1186%" y="399.50"></text></g><g><title>core::str::validations::next_code_point (5 samples, 0.03%)</title><rect x="13.8686%" y="373" width="0.0348%" height="15" fill="rgb(242,43,11)" fg:x="1995" fg:w="5"/><text x="14.1186%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (6 samples, 0.04%)</title><rect x="13.8686%" y="421" width="0.0417%" height="15" fill="rgb(232,69,23)" fg:x="1995" fg:w="6"/><text x="14.1186%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.04%)</title><rect x="13.8686%" y="405" width="0.0417%" height="15" fill="rgb(216,180,54)" fg:x="1995" fg:w="6"/><text x="14.1186%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="14.2996%" y="325" width="0.0139%" height="15" fill="rgb(216,5,24)" fg:x="2057" fg:w="2"/><text x="14.5496%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (2 samples, 0.01%)</title><rect x="14.2996%" y="309" width="0.0139%" height="15" fill="rgb(225,89,9)" fg:x="2057" fg:w="2"/><text x="14.5496%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (2 samples, 0.01%)</title><rect x="14.2996%" y="293" width="0.0139%" height="15" fill="rgb(243,75,33)" fg:x="2057" fg:w="2"/><text x="14.5496%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.01%)</title><rect x="14.2996%" y="277" width="0.0139%" height="15" fill="rgb(247,141,45)" fg:x="2057" fg:w="2"/><text x="14.5496%" y="287.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (2 samples, 0.01%)</title><rect x="14.3135%" y="325" width="0.0139%" height="15" fill="rgb(232,177,36)" fg:x="2059" fg:w="2"/><text x="14.5635%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.06%)</title><rect x="14.3274%" y="325" width="0.0556%" height="15" fill="rgb(219,125,36)" fg:x="2061" fg:w="8"/><text x="14.5774%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.06%)</title><rect x="14.3274%" y="309" width="0.0556%" height="15" fill="rgb(227,94,9)" fg:x="2061" fg:w="8"/><text x="14.5774%" y="319.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.02%)</title><rect x="14.3622%" y="293" width="0.0209%" height="15" fill="rgb(240,34,52)" fg:x="2066" fg:w="3"/><text x="14.6122%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3 samples, 0.02%)</title><rect x="14.3622%" y="277" width="0.0209%" height="15" fill="rgb(216,45,12)" fg:x="2066" fg:w="3"/><text x="14.6122%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (79 samples, 0.55%)</title><rect x="13.9103%" y="421" width="0.5492%" height="15" fill="rgb(246,21,19)" fg:x="2001" fg:w="79"/><text x="14.1603%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (66 samples, 0.46%)</title><rect x="14.0007%" y="405" width="0.4588%" height="15" fill="rgb(213,98,42)" fg:x="2014" fg:w="66"/><text x="14.2507%" y="415.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.45%)</title><rect x="14.0076%" y="389" width="0.4519%" height="15" fill="rgb(250,136,47)" fg:x="2015" fg:w="65"/><text x="14.2576%" y="399.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (65 samples, 0.45%)</title><rect x="14.0076%" y="373" width="0.4519%" height="15" fill="rgb(251,124,27)" fg:x="2015" fg:w="65"/><text x="14.2576%" y="383.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (64 samples, 0.44%)</title><rect x="14.0146%" y="357" width="0.4449%" height="15" fill="rgb(229,180,14)" fg:x="2016" fg:w="64"/><text x="14.2646%" y="367.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (59 samples, 0.41%)</title><rect x="14.0494%" y="341" width="0.4101%" height="15" fill="rgb(245,216,25)" fg:x="2021" fg:w="59"/><text x="14.2994%" y="351.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (10 samples, 0.07%)</title><rect x="14.3900%" y="325" width="0.0695%" height="15" fill="rgb(251,43,5)" fg:x="2070" fg:w="10"/><text x="14.6400%" y="335.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.02%)</title><rect x="14.5290%" y="341" width="0.0209%" height="15" fill="rgb(250,128,24)" fg:x="2090" fg:w="3"/><text x="14.7790%" y="351.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.02%)</title><rect x="14.5290%" y="325" width="0.0209%" height="15" fill="rgb(217,117,27)" fg:x="2090" fg:w="3"/><text x="14.7790%" y="335.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.01%)</title><rect x="14.5360%" y="309" width="0.0139%" height="15" fill="rgb(245,147,4)" fg:x="2091" fg:w="2"/><text x="14.7860%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.01%)</title><rect x="14.5499%" y="341" width="0.0139%" height="15" fill="rgb(242,201,35)" fg:x="2093" fg:w="2"/><text x="14.7999%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.01%)</title><rect x="14.5499%" y="325" width="0.0139%" height="15" fill="rgb(218,181,1)" fg:x="2093" fg:w="2"/><text x="14.7999%" y="335.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (3 samples, 0.02%)</title><rect x="14.5638%" y="341" width="0.0209%" height="15" fill="rgb(222,6,29)" fg:x="2095" fg:w="3"/><text x="14.8138%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="14.5638%" y="325" width="0.0209%" height="15" fill="rgb(208,186,3)" fg:x="2095" fg:w="3"/><text x="14.8138%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="14.5707%" y="309" width="0.0139%" height="15" fill="rgb(216,36,26)" fg:x="2096" fg:w="2"/><text x="14.8207%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (113 samples, 0.79%)</title><rect x="13.8269%" y="549" width="0.7855%" height="15" fill="rgb(248,201,23)" fg:x="1989" fg:w="113"/><text x="14.0769%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (113 samples, 0.79%)</title><rect x="13.8269%" y="533" width="0.7855%" height="15" fill="rgb(251,170,31)" fg:x="1989" fg:w="113"/><text x="14.0769%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (113 samples, 0.79%)</title><rect x="13.8269%" y="517" width="0.7855%" height="15" fill="rgb(207,110,25)" fg:x="1989" fg:w="113"/><text x="14.0769%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (113 samples, 0.79%)</title><rect x="13.8269%" y="501" width="0.7855%" height="15" fill="rgb(250,54,15)" fg:x="1989" fg:w="113"/><text x="14.0769%" y="511.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (112 samples, 0.78%)</title><rect x="13.8339%" y="485" width="0.7786%" height="15" fill="rgb(227,68,33)" fg:x="1990" fg:w="112"/><text x="14.0839%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (112 samples, 0.78%)</title><rect x="13.8339%" y="469" width="0.7786%" height="15" fill="rgb(238,34,41)" fg:x="1990" fg:w="112"/><text x="14.0839%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (112 samples, 0.78%)</title><rect x="13.8339%" y="453" width="0.7786%" height="15" fill="rgb(220,11,15)" fg:x="1990" fg:w="112"/><text x="14.0839%" y="463.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (112 samples, 0.78%)</title><rect x="13.8339%" y="437" width="0.7786%" height="15" fill="rgb(246,111,35)" fg:x="1990" fg:w="112"/><text x="14.0839%" y="447.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (22 samples, 0.15%)</title><rect x="14.4595%" y="421" width="0.1529%" height="15" fill="rgb(209,88,53)" fg:x="2080" fg:w="22"/><text x="14.7095%" y="431.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (22 samples, 0.15%)</title><rect x="14.4595%" y="405" width="0.1529%" height="15" fill="rgb(231,185,47)" fg:x="2080" fg:w="22"/><text x="14.7095%" y="415.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (22 samples, 0.15%)</title><rect x="14.4595%" y="389" width="0.1529%" height="15" fill="rgb(233,154,1)" fg:x="2080" fg:w="22"/><text x="14.7095%" y="399.50"></text></g><g><title>core::str::pattern::StrSearcher::new (22 samples, 0.15%)</title><rect x="14.4595%" y="373" width="0.1529%" height="15" fill="rgb(225,15,46)" fg:x="2080" fg:w="22"/><text x="14.7095%" y="383.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (15 samples, 0.10%)</title><rect x="14.5082%" y="357" width="0.1043%" height="15" fill="rgb(211,135,41)" fg:x="2087" fg:w="15"/><text x="14.7582%" y="367.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (4 samples, 0.03%)</title><rect x="14.5846%" y="341" width="0.0278%" height="15" fill="rgb(208,54,0)" fg:x="2098" fg:w="4"/><text x="14.8346%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (7 samples, 0.05%)</title><rect x="14.6820%" y="341" width="0.0487%" height="15" fill="rgb(244,136,14)" fg:x="2112" fg:w="7"/><text x="14.9320%" y="351.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.05%)</title><rect x="14.7723%" y="325" width="0.0487%" height="15" fill="rgb(241,56,14)" fg:x="2125" fg:w="7"/><text x="15.0223%" y="335.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="14.8071%" y="309" width="0.0139%" height="15" fill="rgb(205,80,24)" fg:x="2130" fg:w="2"/><text x="15.0571%" y="319.50"></text></g><g><title>__rust_alloc (2 samples, 0.01%)</title><rect x="14.8210%" y="325" width="0.0139%" height="15" fill="rgb(220,57,4)" fg:x="2132" fg:w="2"/><text x="15.0710%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.19%)</title><rect x="14.6611%" y="405" width="0.1946%" height="15" fill="rgb(226,193,50)" fg:x="2109" fg:w="28"/><text x="14.9111%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.19%)</title><rect x="14.6681%" y="389" width="0.1877%" height="15" fill="rgb(231,168,22)" fg:x="2110" fg:w="27"/><text x="14.9181%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (26 samples, 0.18%)</title><rect x="14.6750%" y="373" width="0.1807%" height="15" fill="rgb(254,215,14)" fg:x="2111" fg:w="26"/><text x="14.9250%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 0.17%)</title><rect x="14.6820%" y="357" width="0.1738%" height="15" fill="rgb(211,115,16)" fg:x="2112" fg:w="25"/><text x="14.9320%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (18 samples, 0.13%)</title><rect x="14.7306%" y="341" width="0.1251%" height="15" fill="rgb(236,210,16)" fg:x="2119" fg:w="18"/><text x="14.9806%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.02%)</title><rect x="14.8349%" y="325" width="0.0209%" height="15" fill="rgb(221,94,12)" fg:x="2134" fg:w="3"/><text x="15.0849%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="14.8558%" y="405" width="0.0139%" height="15" fill="rgb(235,218,49)" fg:x="2137" fg:w="2"/><text x="15.1058%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (32 samples, 0.22%)</title><rect x="14.6611%" y="501" width="0.2225%" height="15" fill="rgb(217,114,14)" fg:x="2109" fg:w="32"/><text x="14.9111%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (32 samples, 0.22%)</title><rect x="14.6611%" y="485" width="0.2225%" height="15" fill="rgb(216,145,22)" fg:x="2109" fg:w="32"/><text x="14.9111%" y="495.50"></text></g><g><title>alloc::string::String::push_str (32 samples, 0.22%)</title><rect x="14.6611%" y="469" width="0.2225%" height="15" fill="rgb(217,112,39)" fg:x="2109" fg:w="32"/><text x="14.9111%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (32 samples, 0.22%)</title><rect x="14.6611%" y="453" width="0.2225%" height="15" fill="rgb(225,85,32)" fg:x="2109" fg:w="32"/><text x="14.9111%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (32 samples, 0.22%)</title><rect x="14.6611%" y="437" width="0.2225%" height="15" fill="rgb(245,209,47)" fg:x="2109" fg:w="32"/><text x="14.9111%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (32 samples, 0.22%)</title><rect x="14.6611%" y="421" width="0.2225%" height="15" fill="rgb(218,220,15)" fg:x="2109" fg:w="32"/><text x="14.9111%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.01%)</title><rect x="14.8697%" y="405" width="0.0139%" height="15" fill="rgb(222,202,31)" fg:x="2139" fg:w="2"/><text x="15.1197%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="14.8697%" y="389" width="0.0139%" height="15" fill="rgb(243,203,4)" fg:x="2139" fg:w="2"/><text x="15.1197%" y="399.50"></text></g><g><title>alloc::fmt::format (44 samples, 0.31%)</title><rect x="14.6124%" y="549" width="0.3059%" height="15" fill="rgb(237,92,17)" fg:x="2102" fg:w="44"/><text x="14.8624%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (40 samples, 0.28%)</title><rect x="14.6403%" y="533" width="0.2781%" height="15" fill="rgb(231,119,7)" fg:x="2106" fg:w="40"/><text x="14.8903%" y="543.50"></text></g><g><title>core::fmt::write (39 samples, 0.27%)</title><rect x="14.6472%" y="517" width="0.2711%" height="15" fill="rgb(237,82,41)" fg:x="2107" fg:w="39"/><text x="14.8972%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.02%)</title><rect x="14.8975%" y="501" width="0.0209%" height="15" fill="rgb(226,81,48)" fg:x="2143" fg:w="3"/><text x="15.1475%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.03%)</title><rect x="14.9253%" y="549" width="0.0278%" height="15" fill="rgb(234,70,51)" fg:x="2147" fg:w="4"/><text x="15.1753%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.03%)</title><rect x="14.9253%" y="533" width="0.0278%" height="15" fill="rgb(251,86,4)" fg:x="2147" fg:w="4"/><text x="15.1753%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.03%)</title><rect x="14.9253%" y="517" width="0.0278%" height="15" fill="rgb(244,144,28)" fg:x="2147" fg:w="4"/><text x="15.1753%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="14.9253%" y="501" width="0.0278%" height="15" fill="rgb(232,161,39)" fg:x="2147" fg:w="4"/><text x="15.1753%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.03%)</title><rect x="14.9253%" y="485" width="0.0278%" height="15" fill="rgb(247,34,51)" fg:x="2147" fg:w="4"/><text x="15.1753%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.03%)</title><rect x="14.9253%" y="469" width="0.0278%" height="15" fill="rgb(225,132,2)" fg:x="2147" fg:w="4"/><text x="15.1753%" y="479.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="14.9322%" y="453" width="0.0209%" height="15" fill="rgb(209,159,44)" fg:x="2148" fg:w="3"/><text x="15.1822%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="14.9739%" y="485" width="0.0139%" height="15" fill="rgb(251,214,1)" fg:x="2154" fg:w="2"/><text x="15.2239%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="14.9739%" y="469" width="0.0139%" height="15" fill="rgb(247,84,47)" fg:x="2154" fg:w="2"/><text x="15.2239%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="14.9739%" y="453" width="0.0139%" height="15" fill="rgb(240,111,43)" fg:x="2154" fg:w="2"/><text x="15.2239%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.04%)</title><rect x="14.9531%" y="501" width="0.0417%" height="15" fill="rgb(215,214,35)" fg:x="2151" fg:w="6"/><text x="15.2031%" y="511.50"></text></g><g><title>&lt;&amp;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (2 samples, 0.01%)</title><rect x="14.9948%" y="453" width="0.0139%" height="15" fill="rgb(248,207,23)" fg:x="2157" fg:w="2"/><text x="15.2448%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.03%)</title><rect x="14.9948%" y="469" width="0.0278%" height="15" fill="rgb(214,186,4)" fg:x="2157" fg:w="4"/><text x="15.2448%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.01%)</title><rect x="15.0087%" y="453" width="0.0139%" height="15" fill="rgb(220,133,22)" fg:x="2159" fg:w="2"/><text x="15.2587%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="15.0087%" y="437" width="0.0139%" height="15" fill="rgb(239,134,19)" fg:x="2159" fg:w="2"/><text x="15.2587%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.01%)</title><rect x="15.0087%" y="421" width="0.0139%" height="15" fill="rgb(250,140,9)" fg:x="2159" fg:w="2"/><text x="15.2587%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.01%)</title><rect x="15.0087%" y="405" width="0.0139%" height="15" fill="rgb(225,59,14)" fg:x="2159" fg:w="2"/><text x="15.2587%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.08%)</title><rect x="14.9531%" y="549" width="0.0834%" height="15" fill="rgb(214,152,51)" fg:x="2151" fg:w="12"/><text x="15.2031%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12 samples, 0.08%)</title><rect x="14.9531%" y="533" width="0.0834%" height="15" fill="rgb(251,227,43)" fg:x="2151" fg:w="12"/><text x="15.2031%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 0.08%)</title><rect x="14.9531%" y="517" width="0.0834%" height="15" fill="rgb(241,96,17)" fg:x="2151" fg:w="12"/><text x="15.2031%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.04%)</title><rect x="14.9948%" y="501" width="0.0417%" height="15" fill="rgb(234,198,43)" fg:x="2157" fg:w="6"/><text x="15.2448%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.04%)</title><rect x="14.9948%" y="485" width="0.0417%" height="15" fill="rgb(220,108,29)" fg:x="2157" fg:w="6"/><text x="15.2448%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.01%)</title><rect x="15.0226%" y="469" width="0.0139%" height="15" fill="rgb(226,163,33)" fg:x="2161" fg:w="2"/><text x="15.2726%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.01%)</title><rect x="15.0226%" y="453" width="0.0139%" height="15" fill="rgb(205,194,45)" fg:x="2161" fg:w="2"/><text x="15.2726%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.01%)</title><rect x="15.0226%" y="437" width="0.0139%" height="15" fill="rgb(206,143,44)" fg:x="2161" fg:w="2"/><text x="15.2726%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.01%)</title><rect x="15.0226%" y="421" width="0.0139%" height="15" fill="rgb(236,136,36)" fg:x="2161" fg:w="2"/><text x="15.2726%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.01%)</title><rect x="15.0226%" y="405" width="0.0139%" height="15" fill="rgb(249,172,42)" fg:x="2161" fg:w="2"/><text x="15.2726%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.01%)</title><rect x="15.0226%" y="389" width="0.0139%" height="15" fill="rgb(216,139,23)" fg:x="2161" fg:w="2"/><text x="15.2726%" y="399.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.01%)</title><rect x="15.0226%" y="373" width="0.0139%" height="15" fill="rgb(207,166,20)" fg:x="2161" fg:w="2"/><text x="15.2726%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.03%)</title><rect x="15.0504%" y="389" width="0.0348%" height="15" fill="rgb(210,209,22)" fg:x="2165" fg:w="5"/><text x="15.3004%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.03%)</title><rect x="15.0574%" y="373" width="0.0278%" height="15" fill="rgb(232,118,20)" fg:x="2166" fg:w="4"/><text x="15.3074%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.06%)</title><rect x="15.0365%" y="437" width="0.0556%" height="15" fill="rgb(238,113,42)" fg:x="2163" fg:w="8"/><text x="15.2865%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.06%)</title><rect x="15.0365%" y="421" width="0.0556%" height="15" fill="rgb(231,42,5)" fg:x="2163" fg:w="8"/><text x="15.2865%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.06%)</title><rect x="15.0365%" y="405" width="0.0556%" height="15" fill="rgb(243,166,24)" fg:x="2163" fg:w="8"/><text x="15.2865%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (13 samples, 0.09%)</title><rect x="15.0365%" y="469" width="0.0904%" height="15" fill="rgb(237,226,12)" fg:x="2163" fg:w="13"/><text x="15.2865%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (13 samples, 0.09%)</title><rect x="15.0365%" y="453" width="0.0904%" height="15" fill="rgb(229,133,24)" fg:x="2163" fg:w="13"/><text x="15.2865%" y="463.50"></text></g><g><title>core::hash::Hasher::write_u8 (5 samples, 0.03%)</title><rect x="15.0921%" y="437" width="0.0348%" height="15" fill="rgb(238,33,43)" fg:x="2171" fg:w="5"/><text x="15.3421%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="15.0991%" y="421" width="0.0278%" height="15" fill="rgb(227,59,38)" fg:x="2172" fg:w="4"/><text x="15.3491%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="15.0991%" y="405" width="0.0278%" height="15" fill="rgb(230,97,0)" fg:x="2172" fg:w="4"/><text x="15.3491%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="15.0991%" y="389" width="0.0278%" height="15" fill="rgb(250,173,50)" fg:x="2172" fg:w="4"/><text x="15.3491%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="15.1338%" y="421" width="0.0139%" height="15" fill="rgb(240,15,50)" fg:x="2177" fg:w="2"/><text x="15.3838%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="15.1338%" y="405" width="0.0139%" height="15" fill="rgb(221,93,22)" fg:x="2177" fg:w="2"/><text x="15.3838%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="15.1269%" y="469" width="0.0487%" height="15" fill="rgb(245,180,53)" fg:x="2176" fg:w="7"/><text x="15.3769%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="15.1269%" y="453" width="0.0487%" height="15" fill="rgb(231,88,51)" fg:x="2176" fg:w="7"/><text x="15.3769%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="15.1269%" y="437" width="0.0487%" height="15" fill="rgb(240,58,21)" fg:x="2176" fg:w="7"/><text x="15.3769%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.03%)</title><rect x="15.1477%" y="421" width="0.0278%" height="15" fill="rgb(237,21,10)" fg:x="2179" fg:w="4"/><text x="15.3977%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.02%)</title><rect x="15.1547%" y="405" width="0.0209%" height="15" fill="rgb(218,43,11)" fg:x="2180" fg:w="3"/><text x="15.4047%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.15%)</title><rect x="15.0365%" y="485" width="0.1460%" height="15" fill="rgb(218,221,29)" fg:x="2163" fg:w="21"/><text x="15.2865%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="15.1825%" y="453" width="0.0209%" height="15" fill="rgb(214,118,42)" fg:x="2184" fg:w="3"/><text x="15.4325%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="15.1825%" y="437" width="0.0209%" height="15" fill="rgb(251,200,26)" fg:x="2184" fg:w="3"/><text x="15.4325%" y="447.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.01%)</title><rect x="15.2033%" y="453" width="0.0139%" height="15" fill="rgb(237,101,39)" fg:x="2187" fg:w="2"/><text x="15.4533%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="15.2033%" y="437" width="0.0139%" height="15" fill="rgb(251,117,11)" fg:x="2187" fg:w="2"/><text x="15.4533%" y="447.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.01%)</title><rect x="15.2033%" y="421" width="0.0139%" height="15" fill="rgb(216,223,23)" fg:x="2187" fg:w="2"/><text x="15.4533%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="15.2033%" y="405" width="0.0139%" height="15" fill="rgb(251,54,12)" fg:x="2187" fg:w="2"/><text x="15.4533%" y="415.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.01%)</title><rect x="15.2033%" y="389" width="0.0139%" height="15" fill="rgb(254,176,54)" fg:x="2187" fg:w="2"/><text x="15.4533%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.01%)</title><rect x="15.2033%" y="373" width="0.0139%" height="15" fill="rgb(210,32,8)" fg:x="2187" fg:w="2"/><text x="15.4533%" y="383.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (29 samples, 0.20%)</title><rect x="15.0365%" y="549" width="0.2016%" height="15" fill="rgb(235,52,38)" fg:x="2163" fg:w="29"/><text x="15.2865%" y="559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (29 samples, 0.20%)</title><rect x="15.0365%" y="533" width="0.2016%" height="15" fill="rgb(231,4,44)" fg:x="2163" fg:w="29"/><text x="15.2865%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (29 samples, 0.20%)</title><rect x="15.0365%" y="517" width="0.2016%" height="15" fill="rgb(249,2,32)" fg:x="2163" fg:w="29"/><text x="15.2865%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (29 samples, 0.20%)</title><rect x="15.0365%" y="501" width="0.2016%" height="15" fill="rgb(224,65,26)" fg:x="2163" fg:w="29"/><text x="15.2865%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.06%)</title><rect x="15.1825%" y="485" width="0.0556%" height="15" fill="rgb(250,73,40)" fg:x="2184" fg:w="8"/><text x="15.4325%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.06%)</title><rect x="15.1825%" y="469" width="0.0556%" height="15" fill="rgb(253,177,16)" fg:x="2184" fg:w="8"/><text x="15.4325%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.02%)</title><rect x="15.2172%" y="453" width="0.0209%" height="15" fill="rgb(217,32,34)" fg:x="2189" fg:w="3"/><text x="15.4672%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.02%)</title><rect x="15.2172%" y="437" width="0.0209%" height="15" fill="rgb(212,7,10)" fg:x="2189" fg:w="3"/><text x="15.4672%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.02%)</title><rect x="15.2172%" y="421" width="0.0209%" height="15" fill="rgb(245,89,8)" fg:x="2189" fg:w="3"/><text x="15.4672%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.01%)</title><rect x="15.2242%" y="405" width="0.0139%" height="15" fill="rgb(237,16,53)" fg:x="2190" fg:w="2"/><text x="15.4742%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.01%)</title><rect x="15.2242%" y="389" width="0.0139%" height="15" fill="rgb(250,204,30)" fg:x="2190" fg:w="2"/><text x="15.4742%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.01%)</title><rect x="15.2242%" y="373" width="0.0139%" height="15" fill="rgb(208,77,27)" fg:x="2190" fg:w="2"/><text x="15.4742%" y="383.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.01%)</title><rect x="15.2242%" y="357" width="0.0139%" height="15" fill="rgb(250,204,28)" fg:x="2190" fg:w="2"/><text x="15.4742%" y="367.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.01%)</title><rect x="15.2450%" y="405" width="0.0139%" height="15" fill="rgb(244,63,21)" fg:x="2193" fg:w="2"/><text x="15.4950%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="15.2450%" y="389" width="0.0139%" height="15" fill="rgb(236,85,44)" fg:x="2193" fg:w="2"/><text x="15.4950%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4 samples, 0.03%)</title><rect x="15.2381%" y="485" width="0.0278%" height="15" fill="rgb(215,98,4)" fg:x="2192" fg:w="4"/><text x="15.4881%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.03%)</title><rect x="15.2381%" y="469" width="0.0278%" height="15" fill="rgb(235,38,11)" fg:x="2192" fg:w="4"/><text x="15.4881%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="15.2381%" y="453" width="0.0278%" height="15" fill="rgb(254,186,25)" fg:x="2192" fg:w="4"/><text x="15.4881%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="15.2381%" y="437" width="0.0278%" height="15" fill="rgb(225,55,31)" fg:x="2192" fg:w="4"/><text x="15.4881%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="15.2381%" y="421" width="0.0278%" height="15" fill="rgb(211,15,21)" fg:x="2192" fg:w="4"/><text x="15.4881%" y="431.50"></text></g><g><title>hashbrown::map::make_insert_hash (7 samples, 0.05%)</title><rect x="15.2381%" y="501" width="0.0487%" height="15" fill="rgb(215,187,41)" fg:x="2192" fg:w="7"/><text x="15.4881%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="15.2659%" y="485" width="0.0209%" height="15" fill="rgb(248,69,32)" fg:x="2196" fg:w="3"/><text x="15.5159%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="15.2659%" y="469" width="0.0209%" height="15" fill="rgb(252,102,52)" fg:x="2196" fg:w="3"/><text x="15.5159%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="15.2659%" y="453" width="0.0209%" height="15" fill="rgb(253,140,32)" fg:x="2196" fg:w="3"/><text x="15.5159%" y="463.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (10 samples, 0.07%)</title><rect x="15.2381%" y="549" width="0.0695%" height="15" fill="rgb(216,56,42)" fg:x="2192" fg:w="10"/><text x="15.4881%" y="559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (10 samples, 0.07%)</title><rect x="15.2381%" y="533" width="0.0695%" height="15" fill="rgb(216,184,14)" fg:x="2192" fg:w="10"/><text x="15.4881%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.07%)</title><rect x="15.2381%" y="517" width="0.0695%" height="15" fill="rgb(237,187,27)" fg:x="2192" fg:w="10"/><text x="15.4881%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.01%)</title><rect x="15.2937%" y="501" width="0.0139%" height="15" fill="rgb(219,65,3)" fg:x="2200" fg:w="2"/><text x="15.5437%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.01%)</title><rect x="15.2937%" y="485" width="0.0139%" height="15" fill="rgb(245,83,25)" fg:x="2200" fg:w="2"/><text x="15.5437%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.01%)</title><rect x="15.2937%" y="469" width="0.0139%" height="15" fill="rgb(214,205,45)" fg:x="2200" fg:w="2"/><text x="15.5437%" y="479.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="15.2937%" y="453" width="0.0139%" height="15" fill="rgb(241,20,18)" fg:x="2200" fg:w="2"/><text x="15.5437%" y="463.50"></text></g><g><title>y2021::d12::main2::run (1,172 samples, 8.15%)</title><rect x="7.2019%" y="773" width="8.1474%" height="15" fill="rgb(232,163,23)" fg:x="1036" fg:w="1172"/><text x="7.4519%" y="783.50">y2021::d12:..</text></g><g><title>y2021::d12::main2::p02 (1,131 samples, 7.86%)</title><rect x="7.4870%" y="757" width="7.8624%" height="15" fill="rgb(214,5,46)" fg:x="1077" fg:w="1131"/><text x="7.7370%" y="767.50">y2021::d12:..</text></g><g><title>y2021::d12::main2::traverse (1,046 samples, 7.27%)</title><rect x="8.0779%" y="741" width="7.2715%" height="15" fill="rgb(229,78,17)" fg:x="1162" fg:w="1046"/><text x="8.3279%" y="751.50">y2021::d12..</text></g><g><title>y2021::d12::main2::traverse (1,046 samples, 7.27%)</title><rect x="8.0779%" y="725" width="7.2715%" height="15" fill="rgb(248,89,10)" fg:x="1162" fg:w="1046"/><text x="8.3279%" y="735.50">y2021::d12..</text></g><g><title>y2021::d12::main2::traverse (1,046 samples, 7.27%)</title><rect x="8.0779%" y="709" width="7.2715%" height="15" fill="rgb(248,54,15)" fg:x="1162" fg:w="1046"/><text x="8.3279%" y="719.50">y2021::d12..</text></g><g><title>y2021::d12::main2::traverse (1,046 samples, 7.27%)</title><rect x="8.0779%" y="693" width="7.2715%" height="15" fill="rgb(223,116,6)" fg:x="1162" fg:w="1046"/><text x="8.3279%" y="703.50">y2021::d12..</text></g><g><title>y2021::d12::main2::traverse (1,045 samples, 7.26%)</title><rect x="8.0848%" y="677" width="7.2645%" height="15" fill="rgb(205,125,38)" fg:x="1163" fg:w="1045"/><text x="8.3348%" y="687.50">y2021::d12..</text></g><g><title>y2021::d12::main2::traverse (1,042 samples, 7.24%)</title><rect x="8.1057%" y="661" width="7.2437%" height="15" fill="rgb(251,78,38)" fg:x="1166" fg:w="1042"/><text x="8.3557%" y="671.50">y2021::d12..</text></g><g><title>y2021::d12::main2::traverse (1,029 samples, 7.15%)</title><rect x="8.1960%" y="645" width="7.1533%" height="15" fill="rgb(253,78,28)" fg:x="1179" fg:w="1029"/><text x="8.4460%" y="655.50">y2021::d12..</text></g><g><title>y2021::d12::main2::traverse (996 samples, 6.92%)</title><rect x="8.4254%" y="629" width="6.9239%" height="15" fill="rgb(209,120,3)" fg:x="1212" fg:w="996"/><text x="8.6754%" y="639.50">y2021::d1..</text></g><g><title>y2021::d12::main2::traverse (920 samples, 6.40%)</title><rect x="8.9538%" y="613" width="6.3956%" height="15" fill="rgb(238,229,9)" fg:x="1288" fg:w="920"/><text x="9.2038%" y="623.50">y2021::d..</text></g><g><title>y2021::d12::main2::traverse (673 samples, 4.68%)</title><rect x="10.6708%" y="597" width="4.6785%" height="15" fill="rgb(253,159,18)" fg:x="1535" fg:w="673"/><text x="10.9208%" y="607.50">y2021..</text></g><g><title>y2021::d12::main2::traverse (484 samples, 3.36%)</title><rect x="11.9847%" y="581" width="3.3646%" height="15" fill="rgb(244,42,34)" fg:x="1724" fg:w="484"/><text x="12.2347%" y="591.50">y20..</text></g><g><title>y2021::d12::main2::traverse (225 samples, 1.56%)</title><rect x="13.7852%" y="565" width="1.5641%" height="15" fill="rgb(224,8,7)" fg:x="1983" fg:w="225"/><text x="14.0352%" y="575.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.04%)</title><rect x="15.3076%" y="549" width="0.0417%" height="15" fill="rgb(210,201,45)" fg:x="2202" fg:w="6"/><text x="15.5576%" y="559.50"></text></g><g><title>y2021::d13::main::p01 (2 samples, 0.01%)</title><rect x="15.3493%" y="757" width="0.0139%" height="15" fill="rgb(252,185,21)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="767.50"></text></g><g><title>y2021::d13::main::parse_input (2 samples, 0.01%)</title><rect x="15.3493%" y="741" width="0.0139%" height="15" fill="rgb(223,131,1)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="15.3493%" y="725" width="0.0139%" height="15" fill="rgb(245,141,16)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="15.3493%" y="709" width="0.0139%" height="15" fill="rgb(229,55,45)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="15.3493%" y="693" width="0.0139%" height="15" fill="rgb(208,92,15)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="703.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="15.3493%" y="677" width="0.0139%" height="15" fill="rgb(234,185,47)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="15.3493%" y="661" width="0.0139%" height="15" fill="rgb(253,104,50)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="15.3493%" y="645" width="0.0139%" height="15" fill="rgb(205,70,7)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="15.3493%" y="629" width="0.0139%" height="15" fill="rgb(240,178,43)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="15.3493%" y="613" width="0.0139%" height="15" fill="rgb(214,112,2)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="15.3493%" y="597" width="0.0139%" height="15" fill="rgb(206,46,17)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="15.3493%" y="581" width="0.0139%" height="15" fill="rgb(225,220,16)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="591.50"></text></g><g><title>y2021::d13::main::parse_input::{{closure}} (2 samples, 0.01%)</title><rect x="15.3493%" y="565" width="0.0139%" height="15" fill="rgb(238,65,40)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="575.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2 samples, 0.01%)</title><rect x="15.3493%" y="549" width="0.0139%" height="15" fill="rgb(230,151,21)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="559.50"></text></g><g><title>&lt;y2021::types::point::Point as core::str::traits::FromStr&gt;::from_str (2 samples, 0.01%)</title><rect x="15.3493%" y="533" width="0.0139%" height="15" fill="rgb(218,58,49)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="15.3493%" y="517" width="0.0139%" height="15" fill="rgb(219,179,14)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="15.3493%" y="501" width="0.0139%" height="15" fill="rgb(223,72,1)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="15.3493%" y="485" width="0.0139%" height="15" fill="rgb(238,126,10)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="15.3493%" y="469" width="0.0139%" height="15" fill="rgb(224,206,38)" fg:x="2208" fg:w="2"/><text x="15.5993%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="15.3632%" y="741" width="0.0139%" height="15" fill="rgb(212,201,54)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="751.50"></text></g><g><title>y2021::d13::main::p02::{{closure}} (2 samples, 0.01%)</title><rect x="15.3632%" y="725" width="0.0139%" height="15" fill="rgb(218,154,48)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="735.50"></text></g><g><title>y2021::d13::main::fold_points (2 samples, 0.01%)</title><rect x="15.3632%" y="709" width="0.0139%" height="15" fill="rgb(232,93,24)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="15.3632%" y="693" width="0.0139%" height="15" fill="rgb(245,30,21)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="703.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="15.3632%" y="677" width="0.0139%" height="15" fill="rgb(242,148,29)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="687.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="15.3632%" y="661" width="0.0139%" height="15" fill="rgb(244,153,54)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="671.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="15.3632%" y="645" width="0.0139%" height="15" fill="rgb(252,87,22)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="655.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="15.3632%" y="629" width="0.0139%" height="15" fill="rgb(210,51,29)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="15.3632%" y="613" width="0.0139%" height="15" fill="rgb(242,136,47)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="15.3632%" y="597" width="0.0139%" height="15" fill="rgb(238,68,4)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="15.3632%" y="581" width="0.0139%" height="15" fill="rgb(242,161,30)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="15.3632%" y="565" width="0.0139%" height="15" fill="rgb(218,58,44)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="15.3632%" y="549" width="0.0139%" height="15" fill="rgb(252,125,32)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="15.3632%" y="533" width="0.0139%" height="15" fill="rgb(219,178,0)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.01%)</title><rect x="15.3632%" y="517" width="0.0139%" height="15" fill="rgb(213,152,7)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (2 samples, 0.01%)</title><rect x="15.3632%" y="501" width="0.0139%" height="15" fill="rgb(249,109,34)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="15.3632%" y="485" width="0.0139%" height="15" fill="rgb(232,96,21)" fg:x="2210" fg:w="2"/><text x="15.6132%" y="495.50"></text></g><g><title>y2021::d13::main::run (5 samples, 0.03%)</title><rect x="15.3493%" y="773" width="0.0348%" height="15" fill="rgb(228,27,39)" fg:x="2208" fg:w="5"/><text x="15.5993%" y="783.50"></text></g><g><title>y2021::d13::main::p02 (3 samples, 0.02%)</title><rect x="15.3632%" y="757" width="0.0209%" height="15" fill="rgb(211,182,52)" fg:x="2210" fg:w="3"/><text x="15.6132%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="15.3910%" y="741" width="0.0209%" height="15" fill="rgb(234,178,38)" fg:x="2214" fg:w="3"/><text x="15.6410%" y="751.50"></text></g><g><title>y2021::d14::main::p02::{{closure}} (3 samples, 0.02%)</title><rect x="15.3910%" y="725" width="0.0209%" height="15" fill="rgb(221,111,3)" fg:x="2214" fg:w="3"/><text x="15.6410%" y="735.50"></text></g><g><title>y2021::d14::main::better_step (3 samples, 0.02%)</title><rect x="15.3910%" y="709" width="0.0209%" height="15" fill="rgb(228,175,21)" fg:x="2214" fg:w="3"/><text x="15.6410%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="15.3910%" y="693" width="0.0209%" height="15" fill="rgb(228,174,43)" fg:x="2214" fg:w="3"/><text x="15.6410%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="15.3910%" y="677" width="0.0209%" height="15" fill="rgb(211,191,0)" fg:x="2214" fg:w="3"/><text x="15.6410%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="15.3910%" y="661" width="0.0209%" height="15" fill="rgb(253,117,3)" fg:x="2214" fg:w="3"/><text x="15.6410%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="15.3910%" y="645" width="0.0209%" height="15" fill="rgb(241,127,19)" fg:x="2214" fg:w="3"/><text x="15.6410%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="15.3910%" y="629" width="0.0209%" height="15" fill="rgb(218,103,12)" fg:x="2214" fg:w="3"/><text x="15.6410%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.02%)</title><rect x="15.3910%" y="613" width="0.0209%" height="15" fill="rgb(236,214,43)" fg:x="2214" fg:w="3"/><text x="15.6410%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (3 samples, 0.02%)</title><rect x="15.3910%" y="597" width="0.0209%" height="15" fill="rgb(244,144,19)" fg:x="2214" fg:w="3"/><text x="15.6410%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="15.3910%" y="581" width="0.0209%" height="15" fill="rgb(246,188,10)" fg:x="2214" fg:w="3"/><text x="15.6410%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.02%)</title><rect x="15.3910%" y="565" width="0.0209%" height="15" fill="rgb(212,193,33)" fg:x="2214" fg:w="3"/><text x="15.6410%" y="575.50"></text></g><g><title>y2021::d14::main::better_step::{{closure}} (3 samples, 0.02%)</title><rect x="15.3910%" y="549" width="0.0209%" height="15" fill="rgb(241,51,29)" fg:x="2214" fg:w="3"/><text x="15.6410%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.02%)</title><rect x="15.3910%" y="533" width="0.0209%" height="15" fill="rgb(211,58,19)" fg:x="2214" fg:w="3"/><text x="15.6410%" y="543.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.02%)</title><rect x="15.3910%" y="517" width="0.0209%" height="15" fill="rgb(229,111,26)" fg:x="2214" fg:w="3"/><text x="15.6410%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="15.3980%" y="501" width="0.0139%" height="15" fill="rgb(213,115,40)" fg:x="2215" fg:w="2"/><text x="15.6480%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="15.3980%" y="485" width="0.0139%" height="15" fill="rgb(209,56,44)" fg:x="2215" fg:w="2"/><text x="15.6480%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="15.3980%" y="469" width="0.0139%" height="15" fill="rgb(230,108,32)" fg:x="2215" fg:w="2"/><text x="15.6480%" y="479.50"></text></g><g><title>y2021::d14::main::run (5 samples, 0.03%)</title><rect x="15.3841%" y="773" width="0.0348%" height="15" fill="rgb(216,165,31)" fg:x="2213" fg:w="5"/><text x="15.6341%" y="783.50"></text></g><g><title>y2021::d14::main::p02 (4 samples, 0.03%)</title><rect x="15.3910%" y="757" width="0.0278%" height="15" fill="rgb(218,122,21)" fg:x="2214" fg:w="4"/><text x="15.6410%" y="767.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (3 samples, 0.02%)</title><rect x="15.4188%" y="741" width="0.0209%" height="15" fill="rgb(223,224,47)" fg:x="2218" fg:w="3"/><text x="15.6688%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.02%)</title><rect x="15.4188%" y="725" width="0.0209%" height="15" fill="rgb(238,102,44)" fg:x="2218" fg:w="3"/><text x="15.6688%" y="735.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (3 samples, 0.02%)</title><rect x="15.4188%" y="709" width="0.0209%" height="15" fill="rgb(236,46,40)" fg:x="2218" fg:w="3"/><text x="15.6688%" y="719.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (3 samples, 0.02%)</title><rect x="15.4188%" y="693" width="0.0209%" height="15" fill="rgb(247,202,50)" fg:x="2218" fg:w="3"/><text x="15.6688%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (2 samples, 0.01%)</title><rect x="15.4258%" y="677" width="0.0139%" height="15" fill="rgb(209,99,20)" fg:x="2219" fg:w="2"/><text x="15.6758%" y="687.50"></text></g><g><title>core::cmp::PartialOrd::le (2 samples, 0.01%)</title><rect x="15.4258%" y="661" width="0.0139%" height="15" fill="rgb(252,27,34)" fg:x="2219" fg:w="2"/><text x="15.6758%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (6 samples, 0.04%)</title><rect x="15.4536%" y="741" width="0.0417%" height="15" fill="rgb(215,206,23)" fg:x="2223" fg:w="6"/><text x="15.7036%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.04%)</title><rect x="15.4536%" y="725" width="0.0417%" height="15" fill="rgb(212,135,36)" fg:x="2223" fg:w="6"/><text x="15.7036%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.03%)</title><rect x="15.4675%" y="709" width="0.0278%" height="15" fill="rgb(240,189,1)" fg:x="2225" fg:w="4"/><text x="15.7175%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.03%)</title><rect x="15.4675%" y="693" width="0.0278%" height="15" fill="rgb(242,56,20)" fg:x="2225" fg:w="4"/><text x="15.7175%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.03%)</title><rect x="15.4675%" y="677" width="0.0278%" height="15" fill="rgb(247,132,33)" fg:x="2225" fg:w="4"/><text x="15.7175%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (4 samples, 0.03%)</title><rect x="15.4675%" y="661" width="0.0278%" height="15" fill="rgb(208,149,11)" fg:x="2225" fg:w="4"/><text x="15.7175%" y="671.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (4 samples, 0.03%)</title><rect x="15.4675%" y="645" width="0.0278%" height="15" fill="rgb(211,33,11)" fg:x="2225" fg:w="4"/><text x="15.7175%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.03%)</title><rect x="15.4675%" y="629" width="0.0278%" height="15" fill="rgb(221,29,38)" fg:x="2225" fg:w="4"/><text x="15.7175%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (2 samples, 0.01%)</title><rect x="15.4814%" y="613" width="0.0139%" height="15" fill="rgb(206,182,49)" fg:x="2227" fg:w="2"/><text x="15.7314%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.01%)</title><rect x="15.4814%" y="597" width="0.0139%" height="15" fill="rgb(216,140,1)" fg:x="2227" fg:w="2"/><text x="15.7314%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.01%)</title><rect x="15.4814%" y="581" width="0.0139%" height="15" fill="rgb(232,57,40)" fg:x="2227" fg:w="2"/><text x="15.7314%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="15.4814%" y="565" width="0.0139%" height="15" fill="rgb(224,186,18)" fg:x="2227" fg:w="2"/><text x="15.7314%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="15.4814%" y="549" width="0.0139%" height="15" fill="rgb(215,121,11)" fg:x="2227" fg:w="2"/><text x="15.7314%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="15.4814%" y="533" width="0.0139%" height="15" fill="rgb(245,147,10)" fg:x="2227" fg:w="2"/><text x="15.7314%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.02%)</title><rect x="15.4953%" y="501" width="0.0209%" height="15" fill="rgb(238,153,13)" fg:x="2229" fg:w="3"/><text x="15.7453%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (3 samples, 0.02%)</title><rect x="15.4953%" y="485" width="0.0209%" height="15" fill="rgb(233,108,0)" fg:x="2229" fg:w="3"/><text x="15.7453%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="15.4953%" y="469" width="0.0209%" height="15" fill="rgb(212,157,17)" fg:x="2229" fg:w="3"/><text x="15.7453%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.01%)</title><rect x="15.5023%" y="453" width="0.0139%" height="15" fill="rgb(225,213,38)" fg:x="2230" fg:w="2"/><text x="15.7523%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.03%)</title><rect x="15.5162%" y="437" width="0.0348%" height="15" fill="rgb(248,16,11)" fg:x="2232" fg:w="5"/><text x="15.7662%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (3 samples, 0.02%)</title><rect x="15.5301%" y="421" width="0.0209%" height="15" fill="rgb(241,33,4)" fg:x="2234" fg:w="3"/><text x="15.7801%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.02%)</title><rect x="15.5301%" y="405" width="0.0209%" height="15" fill="rgb(222,26,43)" fg:x="2234" fg:w="3"/><text x="15.7801%" y="415.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.02%)</title><rect x="15.5301%" y="389" width="0.0209%" height="15" fill="rgb(243,29,36)" fg:x="2234" fg:w="3"/><text x="15.7801%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="15.5301%" y="373" width="0.0209%" height="15" fill="rgb(241,9,27)" fg:x="2234" fg:w="3"/><text x="15.7801%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="15.5301%" y="357" width="0.0209%" height="15" fill="rgb(205,117,26)" fg:x="2234" fg:w="3"/><text x="15.7801%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="15.5301%" y="341" width="0.0209%" height="15" fill="rgb(209,80,39)" fg:x="2234" fg:w="3"/><text x="15.7801%" y="351.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (9 samples, 0.06%)</title><rect x="15.5162%" y="485" width="0.0626%" height="15" fill="rgb(239,155,6)" fg:x="2232" fg:w="9"/><text x="15.7662%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (9 samples, 0.06%)</title><rect x="15.5162%" y="469" width="0.0626%" height="15" fill="rgb(212,104,12)" fg:x="2232" fg:w="9"/><text x="15.7662%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.06%)</title><rect x="15.5162%" y="453" width="0.0626%" height="15" fill="rgb(234,204,3)" fg:x="2232" fg:w="9"/><text x="15.7662%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.03%)</title><rect x="15.5509%" y="437" width="0.0278%" height="15" fill="rgb(251,218,7)" fg:x="2237" fg:w="4"/><text x="15.8009%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.03%)</title><rect x="15.5509%" y="421" width="0.0278%" height="15" fill="rgb(221,81,32)" fg:x="2237" fg:w="4"/><text x="15.8009%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.02%)</title><rect x="15.5579%" y="405" width="0.0209%" height="15" fill="rgb(214,152,26)" fg:x="2238" fg:w="3"/><text x="15.8079%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.02%)</title><rect x="15.5579%" y="389" width="0.0209%" height="15" fill="rgb(223,22,3)" fg:x="2238" fg:w="3"/><text x="15.8079%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.02%)</title><rect x="15.5579%" y="373" width="0.0209%" height="15" fill="rgb(207,174,7)" fg:x="2238" fg:w="3"/><text x="15.8079%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.01%)</title><rect x="15.5648%" y="357" width="0.0139%" height="15" fill="rgb(224,19,52)" fg:x="2239" fg:w="2"/><text x="15.8148%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.01%)</title><rect x="15.5648%" y="341" width="0.0139%" height="15" fill="rgb(228,24,14)" fg:x="2239" fg:w="2"/><text x="15.8148%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.01%)</title><rect x="15.5648%" y="325" width="0.0139%" height="15" fill="rgb(230,153,43)" fg:x="2239" fg:w="2"/><text x="15.8148%" y="335.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.01%)</title><rect x="15.5648%" y="309" width="0.0139%" height="15" fill="rgb(231,106,12)" fg:x="2239" fg:w="2"/><text x="15.8148%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="15.5857%" y="421" width="0.0209%" height="15" fill="rgb(215,92,2)" fg:x="2242" fg:w="3"/><text x="15.8357%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="15.5857%" y="405" width="0.0209%" height="15" fill="rgb(249,143,25)" fg:x="2242" fg:w="3"/><text x="15.8357%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="15.5857%" y="389" width="0.0209%" height="15" fill="rgb(252,7,35)" fg:x="2242" fg:w="3"/><text x="15.8357%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="15.5926%" y="373" width="0.0139%" height="15" fill="rgb(216,69,40)" fg:x="2243" fg:w="2"/><text x="15.8426%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="15.5926%" y="357" width="0.0139%" height="15" fill="rgb(240,36,33)" fg:x="2243" fg:w="2"/><text x="15.8426%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.03%)</title><rect x="15.5787%" y="437" width="0.0348%" height="15" fill="rgb(231,128,14)" fg:x="2241" fg:w="5"/><text x="15.8287%" y="447.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (22 samples, 0.15%)</title><rect x="15.4953%" y="517" width="0.1529%" height="15" fill="rgb(245,143,14)" fg:x="2229" fg:w="22"/><text x="15.7453%" y="527.50"></text></g><g><title>y2021::d15::main::next_points::{{closure}} (19 samples, 0.13%)</title><rect x="15.5162%" y="501" width="0.1321%" height="15" fill="rgb(222,130,28)" fg:x="2232" fg:w="19"/><text x="15.7662%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.07%)</title><rect x="15.5787%" y="485" width="0.0695%" height="15" fill="rgb(212,10,48)" fg:x="2241" fg:w="10"/><text x="15.8287%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 0.07%)</title><rect x="15.5787%" y="469" width="0.0695%" height="15" fill="rgb(254,118,45)" fg:x="2241" fg:w="10"/><text x="15.8287%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.07%)</title><rect x="15.5787%" y="453" width="0.0695%" height="15" fill="rgb(228,6,45)" fg:x="2241" fg:w="10"/><text x="15.8287%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.03%)</title><rect x="15.6135%" y="437" width="0.0348%" height="15" fill="rgb(241,18,35)" fg:x="2246" fg:w="5"/><text x="15.8635%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.03%)</title><rect x="15.6135%" y="421" width="0.0348%" height="15" fill="rgb(227,214,53)" fg:x="2246" fg:w="5"/><text x="15.8635%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.01%)</title><rect x="15.6343%" y="405" width="0.0139%" height="15" fill="rgb(224,107,51)" fg:x="2249" fg:w="2"/><text x="15.8843%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.01%)</title><rect x="15.6343%" y="389" width="0.0139%" height="15" fill="rgb(248,60,28)" fg:x="2249" fg:w="2"/><text x="15.8843%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.01%)</title><rect x="15.6343%" y="373" width="0.0139%" height="15" fill="rgb(249,101,23)" fg:x="2249" fg:w="2"/><text x="15.8843%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.01%)</title><rect x="15.6343%" y="357" width="0.0139%" height="15" fill="rgb(228,51,19)" fg:x="2249" fg:w="2"/><text x="15.8843%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.01%)</title><rect x="15.6343%" y="341" width="0.0139%" height="15" fill="rgb(213,20,6)" fg:x="2249" fg:w="2"/><text x="15.8843%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.01%)</title><rect x="15.6343%" y="325" width="0.0139%" height="15" fill="rgb(212,124,10)" fg:x="2249" fg:w="2"/><text x="15.8843%" y="335.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.01%)</title><rect x="15.6343%" y="309" width="0.0139%" height="15" fill="rgb(248,3,40)" fg:x="2249" fg:w="2"/><text x="15.8843%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="15.6482%" y="437" width="0.0278%" height="15" fill="rgb(223,178,23)" fg:x="2251" fg:w="4"/><text x="15.8982%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="15.6482%" y="421" width="0.0278%" height="15" fill="rgb(240,132,45)" fg:x="2251" fg:w="4"/><text x="15.8982%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="15.6482%" y="405" width="0.0278%" height="15" fill="rgb(245,164,36)" fg:x="2251" fg:w="4"/><text x="15.8982%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.04%)</title><rect x="15.6482%" y="453" width="0.0417%" height="15" fill="rgb(231,188,53)" fg:x="2251" fg:w="6"/><text x="15.8982%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (2 samples, 0.01%)</title><rect x="15.6761%" y="437" width="0.0139%" height="15" fill="rgb(237,198,39)" fg:x="2255" fg:w="2"/><text x="15.9261%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.01%)</title><rect x="15.6761%" y="421" width="0.0139%" height="15" fill="rgb(223,120,35)" fg:x="2255" fg:w="2"/><text x="15.9261%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.01%)</title><rect x="15.6761%" y="405" width="0.0139%" height="15" fill="rgb(253,107,49)" fg:x="2255" fg:w="2"/><text x="15.9261%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="15.6761%" y="389" width="0.0139%" height="15" fill="rgb(216,44,31)" fg:x="2255" fg:w="2"/><text x="15.9261%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="15.6761%" y="373" width="0.0139%" height="15" fill="rgb(253,87,21)" fg:x="2255" fg:w="2"/><text x="15.9261%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="15.6761%" y="357" width="0.0139%" height="15" fill="rgb(226,18,2)" fg:x="2255" fg:w="2"/><text x="15.9261%" y="367.50"></text></g><g><title>y2021::d15::main::next_points (33 samples, 0.23%)</title><rect x="15.4953%" y="741" width="0.2294%" height="15" fill="rgb(216,8,46)" fg:x="2229" fg:w="33"/><text x="15.7453%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (33 samples, 0.23%)</title><rect x="15.4953%" y="725" width="0.2294%" height="15" fill="rgb(226,140,39)" fg:x="2229" fg:w="33"/><text x="15.7453%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (33 samples, 0.23%)</title><rect x="15.4953%" y="709" width="0.2294%" height="15" fill="rgb(221,194,54)" fg:x="2229" fg:w="33"/><text x="15.7453%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (33 samples, 0.23%)</title><rect x="15.4953%" y="693" width="0.2294%" height="15" fill="rgb(213,92,11)" fg:x="2229" fg:w="33"/><text x="15.7453%" y="703.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (33 samples, 0.23%)</title><rect x="15.4953%" y="677" width="0.2294%" height="15" fill="rgb(229,162,46)" fg:x="2229" fg:w="33"/><text x="15.7453%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (33 samples, 0.23%)</title><rect x="15.4953%" y="661" width="0.2294%" height="15" fill="rgb(214,111,36)" fg:x="2229" fg:w="33"/><text x="15.7453%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.23%)</title><rect x="15.4953%" y="645" width="0.2294%" height="15" fill="rgb(207,6,21)" fg:x="2229" fg:w="33"/><text x="15.7453%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.23%)</title><rect x="15.4953%" y="629" width="0.2294%" height="15" fill="rgb(213,127,38)" fg:x="2229" fg:w="33"/><text x="15.7453%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.23%)</title><rect x="15.4953%" y="613" width="0.2294%" height="15" fill="rgb(238,118,32)" fg:x="2229" fg:w="33"/><text x="15.7453%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.23%)</title><rect x="15.4953%" y="597" width="0.2294%" height="15" fill="rgb(240,139,39)" fg:x="2229" fg:w="33"/><text x="15.7453%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (33 samples, 0.23%)</title><rect x="15.4953%" y="581" width="0.2294%" height="15" fill="rgb(235,10,37)" fg:x="2229" fg:w="33"/><text x="15.7453%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (33 samples, 0.23%)</title><rect x="15.4953%" y="565" width="0.2294%" height="15" fill="rgb(249,171,38)" fg:x="2229" fg:w="33"/><text x="15.7453%" y="575.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (33 samples, 0.23%)</title><rect x="15.4953%" y="549" width="0.2294%" height="15" fill="rgb(242,144,32)" fg:x="2229" fg:w="33"/><text x="15.7453%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (33 samples, 0.23%)</title><rect x="15.4953%" y="533" width="0.2294%" height="15" fill="rgb(217,117,21)" fg:x="2229" fg:w="33"/><text x="15.7453%" y="543.50"></text></g><g><title>y2021::d15::main::next_points::{{closure}} (11 samples, 0.08%)</title><rect x="15.6482%" y="517" width="0.0765%" height="15" fill="rgb(249,87,1)" fg:x="2251" fg:w="11"/><text x="15.8982%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.08%)</title><rect x="15.6482%" y="501" width="0.0765%" height="15" fill="rgb(248,196,48)" fg:x="2251" fg:w="11"/><text x="15.8982%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.08%)</title><rect x="15.6482%" y="485" width="0.0765%" height="15" fill="rgb(251,206,33)" fg:x="2251" fg:w="11"/><text x="15.8982%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.08%)</title><rect x="15.6482%" y="469" width="0.0765%" height="15" fill="rgb(232,141,28)" fg:x="2251" fg:w="11"/><text x="15.8982%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.03%)</title><rect x="15.6900%" y="453" width="0.0348%" height="15" fill="rgb(209,167,14)" fg:x="2257" fg:w="5"/><text x="15.9400%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.03%)</title><rect x="15.6900%" y="437" width="0.0348%" height="15" fill="rgb(225,11,50)" fg:x="2257" fg:w="5"/><text x="15.9400%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.02%)</title><rect x="15.7039%" y="421" width="0.0209%" height="15" fill="rgb(209,50,20)" fg:x="2259" fg:w="3"/><text x="15.9539%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.02%)</title><rect x="15.7039%" y="405" width="0.0209%" height="15" fill="rgb(212,17,46)" fg:x="2259" fg:w="3"/><text x="15.9539%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.02%)</title><rect x="15.7039%" y="389" width="0.0209%" height="15" fill="rgb(216,101,39)" fg:x="2259" fg:w="3"/><text x="15.9539%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.02%)</title><rect x="15.7039%" y="373" width="0.0209%" height="15" fill="rgb(212,228,48)" fg:x="2259" fg:w="3"/><text x="15.9539%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.02%)</title><rect x="15.7039%" y="357" width="0.0209%" height="15" fill="rgb(250,6,50)" fg:x="2259" fg:w="3"/><text x="15.9539%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.02%)</title><rect x="15.7039%" y="341" width="0.0209%" height="15" fill="rgb(250,160,48)" fg:x="2259" fg:w="3"/><text x="15.9539%" y="351.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.02%)</title><rect x="15.7039%" y="325" width="0.0209%" height="15" fill="rgb(244,216,33)" fg:x="2259" fg:w="3"/><text x="15.9539%" y="335.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.01%)</title><rect x="15.7247%" y="389" width="0.0139%" height="15" fill="rgb(207,157,5)" fg:x="2262" fg:w="2"/><text x="15.9747%" y="399.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (3 samples, 0.02%)</title><rect x="15.7386%" y="325" width="0.0209%" height="15" fill="rgb(228,199,8)" fg:x="2264" fg:w="3"/><text x="15.9886%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="15.7456%" y="309" width="0.0139%" height="15" fill="rgb(227,80,20)" fg:x="2265" fg:w="2"/><text x="15.9956%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="15.7456%" y="293" width="0.0139%" height="15" fill="rgb(222,9,33)" fg:x="2265" fg:w="2"/><text x="15.9956%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="15.7456%" y="277" width="0.0139%" height="15" fill="rgb(239,44,28)" fg:x="2265" fg:w="2"/><text x="15.9956%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="15.7456%" y="261" width="0.0139%" height="15" fill="rgb(249,187,43)" fg:x="2265" fg:w="2"/><text x="15.9956%" y="271.50"></text></g><g><title>y2021::d15::main::p01 (50 samples, 0.35%)</title><rect x="15.4188%" y="757" width="0.3476%" height="15" fill="rgb(216,141,28)" fg:x="2218" fg:w="50"/><text x="15.6688%" y="767.50"></text></g><g><title>y2021::d15::main::parse_input (6 samples, 0.04%)</title><rect x="15.7247%" y="741" width="0.0417%" height="15" fill="rgb(230,154,53)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.04%)</title><rect x="15.7247%" y="725" width="0.0417%" height="15" fill="rgb(227,82,4)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6 samples, 0.04%)</title><rect x="15.7247%" y="709" width="0.0417%" height="15" fill="rgb(220,107,16)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.04%)</title><rect x="15.7247%" y="693" width="0.0417%" height="15" fill="rgb(207,187,2)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="703.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.04%)</title><rect x="15.7247%" y="677" width="0.0417%" height="15" fill="rgb(210,162,52)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.04%)</title><rect x="15.7247%" y="661" width="0.0417%" height="15" fill="rgb(217,216,49)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.04%)</title><rect x="15.7247%" y="645" width="0.0417%" height="15" fill="rgb(218,146,49)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.04%)</title><rect x="15.7247%" y="629" width="0.0417%" height="15" fill="rgb(216,55,40)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.04%)</title><rect x="15.7247%" y="613" width="0.0417%" height="15" fill="rgb(208,196,21)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.04%)</title><rect x="15.7247%" y="597" width="0.0417%" height="15" fill="rgb(242,117,42)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.04%)</title><rect x="15.7247%" y="581" width="0.0417%" height="15" fill="rgb(210,11,23)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.04%)</title><rect x="15.7247%" y="565" width="0.0417%" height="15" fill="rgb(217,110,2)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.04%)</title><rect x="15.7247%" y="549" width="0.0417%" height="15" fill="rgb(229,77,54)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (6 samples, 0.04%)</title><rect x="15.7247%" y="533" width="0.0417%" height="15" fill="rgb(218,53,16)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="543.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (6 samples, 0.04%)</title><rect x="15.7247%" y="517" width="0.0417%" height="15" fill="rgb(215,38,13)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.04%)</title><rect x="15.7247%" y="501" width="0.0417%" height="15" fill="rgb(235,42,18)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (6 samples, 0.04%)</title><rect x="15.7247%" y="485" width="0.0417%" height="15" fill="rgb(219,66,54)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.04%)</title><rect x="15.7247%" y="469" width="0.0417%" height="15" fill="rgb(222,205,4)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.04%)</title><rect x="15.7247%" y="453" width="0.0417%" height="15" fill="rgb(227,213,46)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.04%)</title><rect x="15.7247%" y="437" width="0.0417%" height="15" fill="rgb(250,145,42)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (6 samples, 0.04%)</title><rect x="15.7247%" y="421" width="0.0417%" height="15" fill="rgb(219,15,2)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.04%)</title><rect x="15.7247%" y="405" width="0.0417%" height="15" fill="rgb(231,181,52)" fg:x="2262" fg:w="6"/><text x="15.9747%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.03%)</title><rect x="15.7386%" y="389" width="0.0278%" height="15" fill="rgb(235,1,42)" fg:x="2264" fg:w="4"/><text x="15.9886%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.03%)</title><rect x="15.7386%" y="373" width="0.0278%" height="15" fill="rgb(249,88,27)" fg:x="2264" fg:w="4"/><text x="15.9886%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.03%)</title><rect x="15.7386%" y="357" width="0.0278%" height="15" fill="rgb(235,145,16)" fg:x="2264" fg:w="4"/><text x="15.9886%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (4 samples, 0.03%)</title><rect x="15.7386%" y="341" width="0.0278%" height="15" fill="rgb(237,114,19)" fg:x="2264" fg:w="4"/><text x="15.9886%" y="351.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="15.7873%" y="741" width="0.0139%" height="15" fill="rgb(238,51,50)" fg:x="2271" fg:w="2"/><text x="16.0373%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (3 samples, 0.02%)</title><rect x="16.0167%" y="693" width="0.0209%" height="15" fill="rgb(205,194,25)" fg:x="2304" fg:w="3"/><text x="16.2667%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_allocation (2 samples, 0.01%)</title><rect x="16.0236%" y="677" width="0.0139%" height="15" fill="rgb(215,203,17)" fg:x="2305" fg:w="2"/><text x="16.2736%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (2 samples, 0.01%)</title><rect x="16.0236%" y="661" width="0.0139%" height="15" fill="rgb(233,112,49)" fg:x="2305" fg:w="2"/><text x="16.2736%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (39 samples, 0.27%)</title><rect x="15.8012%" y="741" width="0.2711%" height="15" fill="rgb(241,130,26)" fg:x="2273" fg:w="39"/><text x="16.0512%" y="751.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (34 samples, 0.24%)</title><rect x="15.8359%" y="725" width="0.2364%" height="15" fill="rgb(252,223,19)" fg:x="2278" fg:w="34"/><text x="16.0859%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (9 samples, 0.06%)</title><rect x="16.0097%" y="709" width="0.0626%" height="15" fill="rgb(211,95,25)" fg:x="2303" fg:w="9"/><text x="16.2597%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (5 samples, 0.03%)</title><rect x="16.0375%" y="693" width="0.0348%" height="15" fill="rgb(251,182,27)" fg:x="2307" fg:w="5"/><text x="16.2875%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="16.0514%" y="677" width="0.0209%" height="15" fill="rgb(238,24,4)" fg:x="2309" fg:w="3"/><text x="16.3014%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (2 samples, 0.01%)</title><rect x="16.0584%" y="661" width="0.0139%" height="15" fill="rgb(224,220,25)" fg:x="2310" fg:w="2"/><text x="16.3084%" y="671.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (2 samples, 0.01%)</title><rect x="16.0584%" y="645" width="0.0139%" height="15" fill="rgb(239,133,26)" fg:x="2310" fg:w="2"/><text x="16.3084%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="16.0723%" y="693" width="0.0278%" height="15" fill="rgb(211,94,48)" fg:x="2312" fg:w="4"/><text x="16.3223%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="16.0723%" y="677" width="0.0278%" height="15" fill="rgb(239,87,6)" fg:x="2312" fg:w="4"/><text x="16.3223%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.05%)</title><rect x="16.0723%" y="741" width="0.0487%" height="15" fill="rgb(227,62,0)" fg:x="2312" fg:w="7"/><text x="16.3223%" y="751.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.05%)</title><rect x="16.0723%" y="725" width="0.0487%" height="15" fill="rgb(211,226,4)" fg:x="2312" fg:w="7"/><text x="16.3223%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.05%)</title><rect x="16.0723%" y="709" width="0.0487%" height="15" fill="rgb(253,38,52)" fg:x="2312" fg:w="7"/><text x="16.3223%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::read (3 samples, 0.02%)</title><rect x="16.1001%" y="693" width="0.0209%" height="15" fill="rgb(229,126,40)" fg:x="2316" fg:w="3"/><text x="16.3501%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (3 samples, 0.02%)</title><rect x="16.1001%" y="677" width="0.0209%" height="15" fill="rgb(229,165,44)" fg:x="2316" fg:w="3"/><text x="16.3501%" y="687.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="16.1001%" y="661" width="0.0209%" height="15" fill="rgb(247,95,47)" fg:x="2316" fg:w="3"/><text x="16.3501%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="16.1210%" y="741" width="0.0139%" height="15" fill="rgb(216,140,30)" fg:x="2319" fg:w="2"/><text x="16.3710%" y="751.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="16.1210%" y="725" width="0.0139%" height="15" fill="rgb(246,214,8)" fg:x="2319" fg:w="2"/><text x="16.3710%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="16.1210%" y="709" width="0.0139%" height="15" fill="rgb(227,224,15)" fg:x="2319" fg:w="2"/><text x="16.3710%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="16.1210%" y="693" width="0.0139%" height="15" fill="rgb(233,175,4)" fg:x="2319" fg:w="2"/><text x="16.3710%" y="703.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.01%)</title><rect x="16.1210%" y="677" width="0.0139%" height="15" fill="rgb(221,66,45)" fg:x="2319" fg:w="2"/><text x="16.3710%" y="687.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (4 samples, 0.03%)</title><rect x="16.5311%" y="661" width="0.0278%" height="15" fill="rgb(221,178,18)" fg:x="2378" fg:w="4"/><text x="16.7811%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.03%)</title><rect x="16.5311%" y="645" width="0.0278%" height="15" fill="rgb(213,81,29)" fg:x="2378" fg:w="4"/><text x="16.7811%" y="655.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (8 samples, 0.06%)</title><rect x="16.5311%" y="677" width="0.0556%" height="15" fill="rgb(220,89,49)" fg:x="2378" fg:w="8"/><text x="16.7811%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (3 samples, 0.02%)</title><rect x="16.5659%" y="661" width="0.0209%" height="15" fill="rgb(227,60,33)" fg:x="2383" fg:w="3"/><text x="16.8159%" y="671.50"></text></g><g><title>core::cmp::PartialOrd::le (3 samples, 0.02%)</title><rect x="16.5659%" y="645" width="0.0209%" height="15" fill="rgb(205,113,12)" fg:x="2383" fg:w="3"/><text x="16.8159%" y="655.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::PartialOrd&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="16.5659%" y="629" width="0.0209%" height="15" fill="rgb(211,32,1)" fg:x="2383" fg:w="3"/><text x="16.8159%" y="639.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp (3 samples, 0.02%)</title><rect x="16.5659%" y="613" width="0.0209%" height="15" fill="rgb(246,2,12)" fg:x="2383" fg:w="3"/><text x="16.8159%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (2 samples, 0.01%)</title><rect x="16.5728%" y="597" width="0.0139%" height="15" fill="rgb(243,37,27)" fg:x="2384" fg:w="2"/><text x="16.8228%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36 samples, 0.25%)</title><rect x="16.5867%" y="661" width="0.2503%" height="15" fill="rgb(248,211,31)" fg:x="2386" fg:w="36"/><text x="16.8367%" y="671.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (42 samples, 0.29%)</title><rect x="16.5867%" y="677" width="0.2920%" height="15" fill="rgb(242,146,47)" fg:x="2386" fg:w="42"/><text x="16.8367%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.04%)</title><rect x="16.8370%" y="661" width="0.0417%" height="15" fill="rgb(206,70,20)" fg:x="2422" fg:w="6"/><text x="17.0870%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.04%)</title><rect x="16.8370%" y="645" width="0.0417%" height="15" fill="rgb(215,10,51)" fg:x="2422" fg:w="6"/><text x="17.0870%" y="655.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (7 samples, 0.05%)</title><rect x="16.8787%" y="677" width="0.0487%" height="15" fill="rgb(243,178,53)" fg:x="2428" fg:w="7"/><text x="17.1287%" y="687.50"></text></g><g><title>core::cmp::Ordering::then_with (18 samples, 0.13%)</title><rect x="17.0525%" y="613" width="0.1251%" height="15" fill="rgb(233,221,20)" fg:x="2453" fg:w="18"/><text x="17.3025%" y="623.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp::{{closure}} (11 samples, 0.08%)</title><rect x="17.1011%" y="597" width="0.0765%" height="15" fill="rgb(218,95,35)" fg:x="2460" fg:w="11"/><text x="17.3511%" y="607.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (10 samples, 0.07%)</title><rect x="17.1081%" y="581" width="0.0695%" height="15" fill="rgb(229,13,5)" fg:x="2461" fg:w="10"/><text x="17.3581%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (4 samples, 0.03%)</title><rect x="17.1498%" y="565" width="0.0278%" height="15" fill="rgb(252,164,30)" fg:x="2467" fg:w="4"/><text x="17.3998%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (54 samples, 0.38%)</title><rect x="16.9274%" y="677" width="0.3754%" height="15" fill="rgb(232,68,36)" fg:x="2435" fg:w="54"/><text x="17.1774%" y="687.50"></text></g><g><title>core::cmp::PartialOrd::le (54 samples, 0.38%)</title><rect x="16.9274%" y="661" width="0.3754%" height="15" fill="rgb(219,59,54)" fg:x="2435" fg:w="54"/><text x="17.1774%" y="671.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::PartialOrd&gt;::partial_cmp (46 samples, 0.32%)</title><rect x="16.9830%" y="645" width="0.3198%" height="15" fill="rgb(250,92,33)" fg:x="2443" fg:w="46"/><text x="17.2330%" y="655.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp (46 samples, 0.32%)</title><rect x="16.9830%" y="629" width="0.3198%" height="15" fill="rgb(229,162,54)" fg:x="2443" fg:w="46"/><text x="17.2330%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (18 samples, 0.13%)</title><rect x="17.1776%" y="613" width="0.1251%" height="15" fill="rgb(244,114,52)" fg:x="2471" fg:w="18"/><text x="17.4276%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="17.3027%" y="629" width="0.0139%" height="15" fill="rgb(212,211,43)" fg:x="2489" fg:w="2"/><text x="17.5527%" y="639.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (130 samples, 0.90%)</title><rect x="16.4268%" y="693" width="0.9037%" height="15" fill="rgb(226,147,8)" fg:x="2363" fg:w="130"/><text x="16.6768%" y="703.50"></text></g><g><title>core::mem::drop (4 samples, 0.03%)</title><rect x="17.3027%" y="677" width="0.0278%" height="15" fill="rgb(226,23,13)" fg:x="2489" fg:w="4"/><text x="17.5527%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;y2021::d15::main::SearchPosition&gt;&gt; (4 samples, 0.03%)</title><rect x="17.3027%" y="661" width="0.0278%" height="15" fill="rgb(240,63,4)" fg:x="2489" fg:w="4"/><text x="17.5527%" y="671.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="17.3027%" y="645" width="0.0278%" height="15" fill="rgb(221,1,32)" fg:x="2489" fg:w="4"/><text x="17.5527%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (2 samples, 0.01%)</title><rect x="17.3166%" y="629" width="0.0139%" height="15" fill="rgb(242,117,10)" fg:x="2491" fg:w="2"/><text x="17.5666%" y="639.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.01%)</title><rect x="17.3166%" y="613" width="0.0139%" height="15" fill="rgb(249,172,44)" fg:x="2491" fg:w="2"/><text x="17.5666%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.01%)</title><rect x="17.3166%" y="597" width="0.0139%" height="15" fill="rgb(244,46,45)" fg:x="2491" fg:w="2"/><text x="17.5666%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="17.3166%" y="581" width="0.0139%" height="15" fill="rgb(206,43,17)" fg:x="2491" fg:w="2"/><text x="17.5666%" y="591.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (173 samples, 1.20%)</title><rect x="16.1349%" y="741" width="1.2026%" height="15" fill="rgb(239,218,39)" fg:x="2321" fg:w="173"/><text x="16.3849%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (173 samples, 1.20%)</title><rect x="16.1349%" y="725" width="1.2026%" height="15" fill="rgb(208,169,54)" fg:x="2321" fg:w="173"/><text x="16.3849%" y="735.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (132 samples, 0.92%)</title><rect x="16.4199%" y="709" width="0.9176%" height="15" fill="rgb(247,25,42)" fg:x="2362" fg:w="132"/><text x="16.6699%" y="719.50"></text></g><g><title>core::cmp::Ordering::then_with (2 samples, 0.01%)</title><rect x="17.3584%" y="645" width="0.0139%" height="15" fill="rgb(226,23,31)" fg:x="2497" fg:w="2"/><text x="17.6084%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (3 samples, 0.02%)</title><rect x="17.3584%" y="709" width="0.0209%" height="15" fill="rgb(247,16,28)" fg:x="2497" fg:w="3"/><text x="17.6084%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::le (3 samples, 0.02%)</title><rect x="17.3584%" y="693" width="0.0209%" height="15" fill="rgb(231,147,38)" fg:x="2497" fg:w="3"/><text x="17.6084%" y="703.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::PartialOrd&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="17.3584%" y="677" width="0.0209%" height="15" fill="rgb(253,81,48)" fg:x="2497" fg:w="3"/><text x="17.6084%" y="687.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp (3 samples, 0.02%)</title><rect x="17.3584%" y="661" width="0.0209%" height="15" fill="rgb(249,222,43)" fg:x="2497" fg:w="3"/><text x="17.6084%" y="671.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (4 samples, 0.03%)</title><rect x="17.3584%" y="725" width="0.0278%" height="15" fill="rgb(221,3,27)" fg:x="2497" fg:w="4"/><text x="17.6084%" y="735.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (9 samples, 0.06%)</title><rect x="17.3375%" y="741" width="0.0626%" height="15" fill="rgb(228,180,5)" fg:x="2494" fg:w="9"/><text x="17.5875%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="17.3862%" y="725" width="0.0139%" height="15" fill="rgb(227,131,42)" fg:x="2501" fg:w="2"/><text x="17.6362%" y="735.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="17.3862%" y="709" width="0.0139%" height="15" fill="rgb(212,3,39)" fg:x="2501" fg:w="2"/><text x="17.6362%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="17.4001%" y="661" width="0.0278%" height="15" fill="rgb(226,45,5)" fg:x="2503" fg:w="4"/><text x="17.6501%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="17.4001%" y="645" width="0.0278%" height="15" fill="rgb(215,167,45)" fg:x="2503" fg:w="4"/><text x="17.6501%" y="655.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="17.4140%" y="629" width="0.0139%" height="15" fill="rgb(250,218,53)" fg:x="2505" fg:w="2"/><text x="17.6640%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="17.4140%" y="613" width="0.0139%" height="15" fill="rgb(207,140,0)" fg:x="2505" fg:w="2"/><text x="17.6640%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="17.4140%" y="597" width="0.0139%" height="15" fill="rgb(238,133,51)" fg:x="2505" fg:w="2"/><text x="17.6640%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.01%)</title><rect x="17.4140%" y="581" width="0.0139%" height="15" fill="rgb(218,203,53)" fg:x="2505" fg:w="2"/><text x="17.6640%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (16 samples, 0.11%)</title><rect x="17.4001%" y="741" width="0.1112%" height="15" fill="rgb(226,184,25)" fg:x="2503" fg:w="16"/><text x="17.6501%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (16 samples, 0.11%)</title><rect x="17.4001%" y="725" width="0.1112%" height="15" fill="rgb(231,121,21)" fg:x="2503" fg:w="16"/><text x="17.6501%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (16 samples, 0.11%)</title><rect x="17.4001%" y="709" width="0.1112%" height="15" fill="rgb(251,14,34)" fg:x="2503" fg:w="16"/><text x="17.6501%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.11%)</title><rect x="17.4001%" y="693" width="0.1112%" height="15" fill="rgb(249,193,11)" fg:x="2503" fg:w="16"/><text x="17.6501%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.11%)</title><rect x="17.4001%" y="677" width="0.1112%" height="15" fill="rgb(220,172,37)" fg:x="2503" fg:w="16"/><text x="17.6501%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (12 samples, 0.08%)</title><rect x="17.4279%" y="661" width="0.0834%" height="15" fill="rgb(231,229,43)" fg:x="2507" fg:w="12"/><text x="17.6779%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by::fold::{{closure}} (12 samples, 0.08%)</title><rect x="17.4279%" y="645" width="0.0834%" height="15" fill="rgb(250,161,5)" fg:x="2507" fg:w="12"/><text x="17.6779%" y="655.50"></text></g><g><title>core::cmp::max_by (12 samples, 0.08%)</title><rect x="17.4279%" y="629" width="0.0834%" height="15" fill="rgb(218,225,18)" fg:x="2507" fg:w="12"/><text x="17.6779%" y="639.50"></text></g><g><title>free_unref_page_list (3 samples, 0.02%)</title><rect x="17.5182%" y="437" width="0.0209%" height="15" fill="rgb(245,45,42)" fg:x="2520" fg:w="3"/><text x="17.7682%" y="447.50"></text></g><g><title>free_unref_page_commit (3 samples, 0.02%)</title><rect x="17.5182%" y="421" width="0.0209%" height="15" fill="rgb(211,115,1)" fg:x="2520" fg:w="3"/><text x="17.7682%" y="431.50"></text></g><g><title>free_pcppages_bulk (3 samples, 0.02%)</title><rect x="17.5182%" y="405" width="0.0209%" height="15" fill="rgb(248,133,52)" fg:x="2520" fg:w="3"/><text x="17.7682%" y="415.50"></text></g><g><title>tlb_finish_mmu (5 samples, 0.03%)</title><rect x="17.5113%" y="501" width="0.0348%" height="15" fill="rgb(238,100,21)" fg:x="2519" fg:w="5"/><text x="17.7613%" y="511.50"></text></g><g><title>tlb_flush_mmu (5 samples, 0.03%)</title><rect x="17.5113%" y="485" width="0.0348%" height="15" fill="rgb(247,144,11)" fg:x="2519" fg:w="5"/><text x="17.7613%" y="495.50"></text></g><g><title>free_pages_and_swap_cache (5 samples, 0.03%)</title><rect x="17.5113%" y="469" width="0.0348%" height="15" fill="rgb(206,164,16)" fg:x="2519" fg:w="5"/><text x="17.7613%" y="479.50"></text></g><g><title>release_pages (5 samples, 0.03%)</title><rect x="17.5113%" y="453" width="0.0348%" height="15" fill="rgb(222,34,3)" fg:x="2519" fg:w="5"/><text x="17.7613%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;(usize,usize),usize&gt;&gt; (12 samples, 0.08%)</title><rect x="17.5113%" y="741" width="0.0834%" height="15" fill="rgb(248,82,4)" fg:x="2519" fg:w="12"/><text x="17.7613%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(usize,usize),usize,std::collections::hash::map::RandomState&gt;&gt; (12 samples, 0.08%)</title><rect x="17.5113%" y="725" width="0.0834%" height="15" fill="rgb(228,81,46)" fg:x="2519" fg:w="12"/><text x="17.7613%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((usize,usize),usize)&gt;&gt; (12 samples, 0.08%)</title><rect x="17.5113%" y="709" width="0.0834%" height="15" fill="rgb(227,67,47)" fg:x="2519" fg:w="12"/><text x="17.7613%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.08%)</title><rect x="17.5113%" y="693" width="0.0834%" height="15" fill="rgb(215,93,53)" fg:x="2519" fg:w="12"/><text x="17.7613%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (12 samples, 0.08%)</title><rect x="17.5113%" y="677" width="0.0834%" height="15" fill="rgb(248,194,39)" fg:x="2519" fg:w="12"/><text x="17.7613%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (12 samples, 0.08%)</title><rect x="17.5113%" y="661" width="0.0834%" height="15" fill="rgb(215,5,19)" fg:x="2519" fg:w="12"/><text x="17.7613%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.08%)</title><rect x="17.5113%" y="645" width="0.0834%" height="15" fill="rgb(226,215,51)" fg:x="2519" fg:w="12"/><text x="17.7613%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.08%)</title><rect x="17.5113%" y="629" width="0.0834%" height="15" fill="rgb(225,56,26)" fg:x="2519" fg:w="12"/><text x="17.7613%" y="639.50"></text></g><g><title>__GI_munmap (12 samples, 0.08%)</title><rect x="17.5113%" y="613" width="0.0834%" height="15" fill="rgb(222,75,29)" fg:x="2519" fg:w="12"/><text x="17.7613%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.08%)</title><rect x="17.5113%" y="597" width="0.0834%" height="15" fill="rgb(236,139,6)" fg:x="2519" fg:w="12"/><text x="17.7613%" y="607.50"></text></g><g><title>do_syscall_64 (12 samples, 0.08%)</title><rect x="17.5113%" y="581" width="0.0834%" height="15" fill="rgb(223,137,36)" fg:x="2519" fg:w="12"/><text x="17.7613%" y="591.50"></text></g><g><title>__x64_sys_munmap (12 samples, 0.08%)</title><rect x="17.5113%" y="565" width="0.0834%" height="15" fill="rgb(226,99,2)" fg:x="2519" fg:w="12"/><text x="17.7613%" y="575.50"></text></g><g><title>__vm_munmap (12 samples, 0.08%)</title><rect x="17.5113%" y="549" width="0.0834%" height="15" fill="rgb(206,133,23)" fg:x="2519" fg:w="12"/><text x="17.7613%" y="559.50"></text></g><g><title>__do_munmap (12 samples, 0.08%)</title><rect x="17.5113%" y="533" width="0.0834%" height="15" fill="rgb(243,173,15)" fg:x="2519" fg:w="12"/><text x="17.7613%" y="543.50"></text></g><g><title>unmap_region (12 samples, 0.08%)</title><rect x="17.5113%" y="517" width="0.0834%" height="15" fill="rgb(228,69,28)" fg:x="2519" fg:w="12"/><text x="17.7613%" y="527.50"></text></g><g><title>unmap_vmas (7 samples, 0.05%)</title><rect x="17.5461%" y="501" width="0.0487%" height="15" fill="rgb(212,51,22)" fg:x="2524" fg:w="7"/><text x="17.7961%" y="511.50"></text></g><g><title>unmap_single_vma (7 samples, 0.05%)</title><rect x="17.5461%" y="485" width="0.0487%" height="15" fill="rgb(227,113,0)" fg:x="2524" fg:w="7"/><text x="17.7961%" y="495.50"></text></g><g><title>unmap_page_range (7 samples, 0.05%)</title><rect x="17.5461%" y="469" width="0.0487%" height="15" fill="rgb(252,84,27)" fg:x="2524" fg:w="7"/><text x="17.7961%" y="479.50"></text></g><g><title>zap_pte_range.isra.0 (7 samples, 0.05%)</title><rect x="17.5461%" y="453" width="0.0487%" height="15" fill="rgb(223,145,39)" fg:x="2524" fg:w="7"/><text x="17.7961%" y="463.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="17.5947%" y="645" width="0.0209%" height="15" fill="rgb(239,219,30)" fg:x="2531" fg:w="3"/><text x="17.8447%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;(usize,usize),usize&gt;&gt; (6 samples, 0.04%)</title><rect x="17.5947%" y="741" width="0.0417%" height="15" fill="rgb(224,196,39)" fg:x="2531" fg:w="6"/><text x="17.8447%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;(usize,usize),usize&gt;&gt; (6 samples, 0.04%)</title><rect x="17.5947%" y="725" width="0.0417%" height="15" fill="rgb(205,35,43)" fg:x="2531" fg:w="6"/><text x="17.8447%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;((usize,usize),usize)&gt;&gt; (6 samples, 0.04%)</title><rect x="17.5947%" y="709" width="0.0417%" height="15" fill="rgb(228,201,21)" fg:x="2531" fg:w="6"/><text x="17.8447%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.04%)</title><rect x="17.5947%" y="693" width="0.0417%" height="15" fill="rgb(237,118,16)" fg:x="2531" fg:w="6"/><text x="17.8447%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.04%)</title><rect x="17.5947%" y="677" width="0.0417%" height="15" fill="rgb(241,17,19)" fg:x="2531" fg:w="6"/><text x="17.8447%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.04%)</title><rect x="17.5947%" y="661" width="0.0417%" height="15" fill="rgb(214,10,25)" fg:x="2531" fg:w="6"/><text x="17.8447%" y="671.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="17.6156%" y="645" width="0.0209%" height="15" fill="rgb(238,37,29)" fg:x="2534" fg:w="3"/><text x="17.8656%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="17.7059%" y="613" width="0.0139%" height="15" fill="rgb(253,83,25)" fg:x="2547" fg:w="2"/><text x="17.9559%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.03%)</title><rect x="17.6990%" y="629" width="0.0278%" height="15" fill="rgb(234,192,12)" fg:x="2546" fg:w="4"/><text x="17.9490%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.03%)</title><rect x="17.7477%" y="613" width="0.0348%" height="15" fill="rgb(241,216,45)" fg:x="2553" fg:w="5"/><text x="17.9977%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.11%)</title><rect x="17.6781%" y="677" width="0.1112%" height="15" fill="rgb(242,22,33)" fg:x="2543" fg:w="16"/><text x="17.9281%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.11%)</title><rect x="17.6781%" y="661" width="0.1112%" height="15" fill="rgb(231,105,49)" fg:x="2543" fg:w="16"/><text x="17.9281%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.11%)</title><rect x="17.6781%" y="645" width="0.1112%" height="15" fill="rgb(218,204,15)" fg:x="2543" fg:w="16"/><text x="17.9281%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.06%)</title><rect x="17.7268%" y="629" width="0.0626%" height="15" fill="rgb(235,138,41)" fg:x="2550" fg:w="9"/><text x="17.9768%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.02%)</title><rect x="17.8589%" y="565" width="0.0209%" height="15" fill="rgb(246,0,9)" fg:x="2569" fg:w="3"/><text x="18.1089%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (34 samples, 0.24%)</title><rect x="17.6503%" y="693" width="0.2364%" height="15" fill="rgb(210,74,4)" fg:x="2539" fg:w="34"/><text x="17.9003%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (13 samples, 0.09%)</title><rect x="17.7963%" y="677" width="0.0904%" height="15" fill="rgb(250,60,41)" fg:x="2560" fg:w="13"/><text x="18.0463%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (13 samples, 0.09%)</title><rect x="17.7963%" y="661" width="0.0904%" height="15" fill="rgb(220,115,12)" fg:x="2560" fg:w="13"/><text x="18.0463%" y="671.50"></text></g><g><title>core::hash::Hasher::write_usize (13 samples, 0.09%)</title><rect x="17.7963%" y="645" width="0.0904%" height="15" fill="rgb(237,100,13)" fg:x="2560" fg:w="13"/><text x="18.0463%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.08%)</title><rect x="17.8033%" y="629" width="0.0834%" height="15" fill="rgb(213,55,26)" fg:x="2561" fg:w="12"/><text x="18.0533%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.08%)</title><rect x="17.8033%" y="613" width="0.0834%" height="15" fill="rgb(216,17,4)" fg:x="2561" fg:w="12"/><text x="18.0533%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.08%)</title><rect x="17.8033%" y="597" width="0.0834%" height="15" fill="rgb(220,153,47)" fg:x="2561" fg:w="12"/><text x="18.0533%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.04%)</title><rect x="17.8450%" y="581" width="0.0417%" height="15" fill="rgb(215,131,9)" fg:x="2567" fg:w="6"/><text x="18.0950%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="17.9006%" y="629" width="0.0348%" height="15" fill="rgb(233,46,42)" fg:x="2575" fg:w="5"/><text x="18.1506%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.06%)</title><rect x="17.8867%" y="661" width="0.0626%" height="15" fill="rgb(226,86,7)" fg:x="2573" fg:w="9"/><text x="18.1367%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.06%)</title><rect x="17.8867%" y="645" width="0.0626%" height="15" fill="rgb(239,226,21)" fg:x="2573" fg:w="9"/><text x="18.1367%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (49 samples, 0.34%)</title><rect x="17.6364%" y="741" width="0.3406%" height="15" fill="rgb(244,137,22)" fg:x="2537" fg:w="49"/><text x="17.8864%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (49 samples, 0.34%)</title><rect x="17.6364%" y="725" width="0.3406%" height="15" fill="rgb(211,139,35)" fg:x="2537" fg:w="49"/><text x="17.8864%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (49 samples, 0.34%)</title><rect x="17.6364%" y="709" width="0.3406%" height="15" fill="rgb(214,62,50)" fg:x="2537" fg:w="49"/><text x="17.8864%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.09%)</title><rect x="17.8867%" y="693" width="0.0904%" height="15" fill="rgb(212,113,44)" fg:x="2573" fg:w="13"/><text x="18.1367%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.09%)</title><rect x="17.8867%" y="677" width="0.0904%" height="15" fill="rgb(226,150,43)" fg:x="2573" fg:w="13"/><text x="18.1367%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.03%)</title><rect x="17.9493%" y="661" width="0.0278%" height="15" fill="rgb(250,71,37)" fg:x="2582" fg:w="4"/><text x="18.1993%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.03%)</title><rect x="17.9493%" y="645" width="0.0278%" height="15" fill="rgb(219,76,19)" fg:x="2582" fg:w="4"/><text x="18.1993%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.03%)</title><rect x="17.9493%" y="629" width="0.0278%" height="15" fill="rgb(250,39,11)" fg:x="2582" fg:w="4"/><text x="18.1993%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.02%)</title><rect x="17.9562%" y="613" width="0.0209%" height="15" fill="rgb(230,64,31)" fg:x="2583" fg:w="3"/><text x="18.2062%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.02%)</title><rect x="17.9562%" y="597" width="0.0209%" height="15" fill="rgb(208,222,23)" fg:x="2583" fg:w="3"/><text x="18.2062%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.02%)</title><rect x="17.9562%" y="581" width="0.0209%" height="15" fill="rgb(227,125,18)" fg:x="2583" fg:w="3"/><text x="18.2062%" y="591.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.02%)</title><rect x="17.9562%" y="565" width="0.0209%" height="15" fill="rgb(234,210,9)" fg:x="2583" fg:w="3"/><text x="18.2062%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.02%)</title><rect x="18.2273%" y="645" width="0.0209%" height="15" fill="rgb(217,127,24)" fg:x="2622" fg:w="3"/><text x="18.4773%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.02%)</title><rect x="18.2273%" y="629" width="0.0209%" height="15" fill="rgb(239,141,48)" fg:x="2622" fg:w="3"/><text x="18.4773%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.06%)</title><rect x="18.2551%" y="629" width="0.0626%" height="15" fill="rgb(227,109,8)" fg:x="2626" fg:w="9"/><text x="18.5051%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.17%)</title><rect x="18.1856%" y="693" width="0.1738%" height="15" fill="rgb(235,184,23)" fg:x="2616" fg:w="25"/><text x="18.4356%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (25 samples, 0.17%)</title><rect x="18.1856%" y="677" width="0.1738%" height="15" fill="rgb(227,226,48)" fg:x="2616" fg:w="25"/><text x="18.4356%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (25 samples, 0.17%)</title><rect x="18.1856%" y="661" width="0.1738%" height="15" fill="rgb(206,150,11)" fg:x="2616" fg:w="25"/><text x="18.4356%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16 samples, 0.11%)</title><rect x="18.2482%" y="645" width="0.1112%" height="15" fill="rgb(254,2,33)" fg:x="2625" fg:w="16"/><text x="18.4982%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.04%)</title><rect x="18.3177%" y="629" width="0.0417%" height="15" fill="rgb(243,160,20)" fg:x="2635" fg:w="6"/><text x="18.5677%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.04%)</title><rect x="18.3594%" y="693" width="0.0417%" height="15" fill="rgb(218,208,30)" fg:x="2641" fg:w="6"/><text x="18.6094%" y="703.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.03%)</title><rect x="18.3664%" y="677" width="0.0348%" height="15" fill="rgb(224,120,49)" fg:x="2642" fg:w="5"/><text x="18.6164%" y="687.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.02%)</title><rect x="18.3803%" y="661" width="0.0209%" height="15" fill="rgb(246,12,2)" fg:x="2644" fg:w="3"/><text x="18.6303%" y="671.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.02%)</title><rect x="18.3803%" y="645" width="0.0209%" height="15" fill="rgb(236,117,3)" fg:x="2644" fg:w="3"/><text x="18.6303%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.03%)</title><rect x="18.5054%" y="581" width="0.0278%" height="15" fill="rgb(216,128,52)" fg:x="2662" fg:w="4"/><text x="18.7554%" y="591.50"></text></g><g><title>hashbrown::map::make_insert_hash (51 samples, 0.35%)</title><rect x="18.1856%" y="709" width="0.3545%" height="15" fill="rgb(246,145,19)" fg:x="2616" fg:w="51"/><text x="18.4356%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (20 samples, 0.14%)</title><rect x="18.4011%" y="693" width="0.1390%" height="15" fill="rgb(222,11,46)" fg:x="2647" fg:w="20"/><text x="18.6511%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (20 samples, 0.14%)</title><rect x="18.4011%" y="677" width="0.1390%" height="15" fill="rgb(245,82,36)" fg:x="2647" fg:w="20"/><text x="18.6511%" y="687.50"></text></g><g><title>core::hash::Hasher::write_usize (20 samples, 0.14%)</title><rect x="18.4011%" y="661" width="0.1390%" height="15" fill="rgb(250,73,51)" fg:x="2647" fg:w="20"/><text x="18.6511%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.13%)</title><rect x="18.4150%" y="645" width="0.1251%" height="15" fill="rgb(221,189,23)" fg:x="2649" fg:w="18"/><text x="18.6650%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (18 samples, 0.13%)</title><rect x="18.4150%" y="629" width="0.1251%" height="15" fill="rgb(210,33,7)" fg:x="2649" fg:w="18"/><text x="18.6650%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.13%)</title><rect x="18.4150%" y="613" width="0.1251%" height="15" fill="rgb(210,107,22)" fg:x="2649" fg:w="18"/><text x="18.6650%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.06%)</title><rect x="18.4845%" y="597" width="0.0556%" height="15" fill="rgb(222,116,37)" fg:x="2659" fg:w="8"/><text x="18.7345%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="18.6375%" y="677" width="0.0139%" height="15" fill="rgb(254,17,48)" fg:x="2681" fg:w="2"/><text x="18.8875%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="18.6375%" y="661" width="0.0139%" height="15" fill="rgb(224,36,32)" fg:x="2681" fg:w="2"/><text x="18.8875%" y="671.50"></text></g><g><title>hashbrown::raw::h2 (3 samples, 0.02%)</title><rect x="18.6514%" y="629" width="0.0209%" height="15" fill="rgb(232,90,46)" fg:x="2683" fg:w="3"/><text x="18.9014%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (40 samples, 0.28%)</title><rect x="18.5401%" y="709" width="0.2781%" height="15" fill="rgb(241,66,40)" fg:x="2667" fg:w="40"/><text x="18.7901%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (40 samples, 0.28%)</title><rect x="18.5401%" y="693" width="0.2781%" height="15" fill="rgb(249,184,29)" fg:x="2667" fg:w="40"/><text x="18.7901%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (24 samples, 0.17%)</title><rect x="18.6514%" y="677" width="0.1668%" height="15" fill="rgb(231,181,1)" fg:x="2683" fg:w="24"/><text x="18.9014%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (24 samples, 0.17%)</title><rect x="18.6514%" y="661" width="0.1668%" height="15" fill="rgb(224,94,2)" fg:x="2683" fg:w="24"/><text x="18.9014%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (24 samples, 0.17%)</title><rect x="18.6514%" y="645" width="0.1668%" height="15" fill="rgb(229,170,15)" fg:x="2683" fg:w="24"/><text x="18.9014%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (21 samples, 0.15%)</title><rect x="18.6722%" y="629" width="0.1460%" height="15" fill="rgb(240,127,35)" fg:x="2686" fg:w="21"/><text x="18.9222%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (21 samples, 0.15%)</title><rect x="18.6722%" y="613" width="0.1460%" height="15" fill="rgb(248,196,34)" fg:x="2686" fg:w="21"/><text x="18.9222%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (21 samples, 0.15%)</title><rect x="18.6722%" y="597" width="0.1460%" height="15" fill="rgb(236,137,7)" fg:x="2686" fg:w="21"/><text x="18.9222%" y="607.50"></text></g><g><title>core::core_arch::simd::i8x16::new (21 samples, 0.15%)</title><rect x="18.6722%" y="581" width="0.1460%" height="15" fill="rgb(235,127,16)" fg:x="2686" fg:w="21"/><text x="18.9222%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (36 samples, 0.25%)</title><rect x="18.8391%" y="693" width="0.2503%" height="15" fill="rgb(250,192,54)" fg:x="2710" fg:w="36"/><text x="19.0891%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (36 samples, 0.25%)</title><rect x="18.8391%" y="677" width="0.2503%" height="15" fill="rgb(218,98,20)" fg:x="2710" fg:w="36"/><text x="19.0891%" y="687.50"></text></g><g><title>core::ptr::write (36 samples, 0.25%)</title><rect x="18.8391%" y="661" width="0.2503%" height="15" fill="rgb(230,176,47)" fg:x="2710" fg:w="36"/><text x="19.0891%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (2 samples, 0.01%)</title><rect x="19.0893%" y="693" width="0.0139%" height="15" fill="rgb(244,2,33)" fg:x="2746" fg:w="2"/><text x="19.3393%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.01%)</title><rect x="19.0893%" y="677" width="0.0139%" height="15" fill="rgb(231,100,17)" fg:x="2746" fg:w="2"/><text x="19.3393%" y="687.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.01%)</title><rect x="19.0893%" y="661" width="0.0139%" height="15" fill="rgb(245,23,12)" fg:x="2746" fg:w="2"/><text x="19.3393%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.03%)</title><rect x="19.2909%" y="549" width="0.0348%" height="15" fill="rgb(249,55,22)" fg:x="2775" fg:w="5"/><text x="19.5409%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.06%)</title><rect x="19.2770%" y="565" width="0.0556%" height="15" fill="rgb(207,134,9)" fg:x="2773" fg:w="8"/><text x="19.5270%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.12%)</title><rect x="19.4091%" y="549" width="0.1182%" height="15" fill="rgb(218,134,0)" fg:x="2792" fg:w="17"/><text x="19.6591%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (58 samples, 0.40%)</title><rect x="19.1797%" y="613" width="0.4032%" height="15" fill="rgb(213,212,33)" fg:x="2759" fg:w="58"/><text x="19.4297%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (58 samples, 0.40%)</title><rect x="19.1797%" y="597" width="0.4032%" height="15" fill="rgb(252,106,18)" fg:x="2759" fg:w="58"/><text x="19.4297%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (58 samples, 0.40%)</title><rect x="19.1797%" y="581" width="0.4032%" height="15" fill="rgb(208,126,42)" fg:x="2759" fg:w="58"/><text x="19.4297%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (36 samples, 0.25%)</title><rect x="19.3326%" y="565" width="0.2503%" height="15" fill="rgb(246,175,29)" fg:x="2781" fg:w="36"/><text x="19.5826%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.06%)</title><rect x="19.5273%" y="549" width="0.0556%" height="15" fill="rgb(215,13,50)" fg:x="2809" fg:w="8"/><text x="19.7773%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.03%)</title><rect x="19.5829%" y="613" width="0.0278%" height="15" fill="rgb(216,172,15)" fg:x="2817" fg:w="4"/><text x="19.8329%" y="623.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.02%)</title><rect x="19.5899%" y="597" width="0.0209%" height="15" fill="rgb(212,103,13)" fg:x="2818" fg:w="3"/><text x="19.8399%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.02%)</title><rect x="19.5899%" y="581" width="0.0209%" height="15" fill="rgb(231,171,36)" fg:x="2818" fg:w="3"/><text x="19.8399%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.02%)</title><rect x="19.5899%" y="565" width="0.0209%" height="15" fill="rgb(250,123,20)" fg:x="2818" fg:w="3"/><text x="19.8399%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.04%)</title><rect x="19.9096%" y="501" width="0.0417%" height="15" fill="rgb(212,53,50)" fg:x="2864" fg:w="6"/><text x="20.1596%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (29 samples, 0.20%)</title><rect x="19.7984%" y="517" width="0.2016%" height="15" fill="rgb(243,54,12)" fg:x="2848" fg:w="29"/><text x="20.0484%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.05%)</title><rect x="19.9513%" y="501" width="0.0487%" height="15" fill="rgb(234,101,34)" fg:x="2870" fg:w="7"/><text x="20.2013%" y="511.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (131 samples, 0.91%)</title><rect x="19.1032%" y="645" width="0.9107%" height="15" fill="rgb(254,67,22)" fg:x="2748" fg:w="131"/><text x="19.3532%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (129 samples, 0.90%)</title><rect x="19.1171%" y="629" width="0.8968%" height="15" fill="rgb(250,35,47)" fg:x="2750" fg:w="129"/><text x="19.3671%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (58 samples, 0.40%)</title><rect x="19.6107%" y="613" width="0.4032%" height="15" fill="rgb(226,126,38)" fg:x="2821" fg:w="58"/><text x="19.8607%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (58 samples, 0.40%)</title><rect x="19.6107%" y="597" width="0.4032%" height="15" fill="rgb(216,138,53)" fg:x="2821" fg:w="58"/><text x="19.8607%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (58 samples, 0.40%)</title><rect x="19.6107%" y="581" width="0.4032%" height="15" fill="rgb(246,199,43)" fg:x="2821" fg:w="58"/><text x="19.8607%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (56 samples, 0.39%)</title><rect x="19.6246%" y="565" width="0.3893%" height="15" fill="rgb(232,125,11)" fg:x="2823" fg:w="56"/><text x="19.8746%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (55 samples, 0.38%)</title><rect x="19.6316%" y="549" width="0.3823%" height="15" fill="rgb(218,219,45)" fg:x="2824" fg:w="55"/><text x="19.8816%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (55 samples, 0.38%)</title><rect x="19.6316%" y="533" width="0.3823%" height="15" fill="rgb(216,102,54)" fg:x="2824" fg:w="55"/><text x="19.8816%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.01%)</title><rect x="20.0000%" y="517" width="0.0139%" height="15" fill="rgb(250,228,7)" fg:x="2877" fg:w="2"/><text x="20.2500%" y="527.50"></text></g><g><title>clear_page_rep (21 samples, 0.15%)</title><rect x="20.2225%" y="453" width="0.1460%" height="15" fill="rgb(226,125,25)" fg:x="2909" fg:w="21"/><text x="20.4725%" y="463.50"></text></g><g><title>alloc_pages_vma (35 samples, 0.24%)</title><rect x="20.2086%" y="501" width="0.2433%" height="15" fill="rgb(224,165,27)" fg:x="2907" fg:w="35"/><text x="20.4586%" y="511.50"></text></g><g><title>__alloc_pages_nodemask (35 samples, 0.24%)</title><rect x="20.2086%" y="485" width="0.2433%" height="15" fill="rgb(233,86,3)" fg:x="2907" fg:w="35"/><text x="20.4586%" y="495.50"></text></g><g><title>get_page_from_freelist (35 samples, 0.24%)</title><rect x="20.2086%" y="469" width="0.2433%" height="15" fill="rgb(228,116,20)" fg:x="2907" fg:w="35"/><text x="20.4586%" y="479.50"></text></g><g><title>rmqueue (11 samples, 0.08%)</title><rect x="20.3754%" y="453" width="0.0765%" height="15" fill="rgb(209,192,17)" fg:x="2931" fg:w="11"/><text x="20.6254%" y="463.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (6 samples, 0.04%)</title><rect x="20.4519%" y="501" width="0.0417%" height="15" fill="rgb(224,88,34)" fg:x="2942" fg:w="6"/><text x="20.7019%" y="511.50"></text></g><g><title>lru_cache_add (6 samples, 0.04%)</title><rect x="20.4519%" y="485" width="0.0417%" height="15" fill="rgb(233,38,6)" fg:x="2942" fg:w="6"/><text x="20.7019%" y="495.50"></text></g><g><title>__pagevec_lru_add (6 samples, 0.04%)</title><rect x="20.4519%" y="469" width="0.0417%" height="15" fill="rgb(212,59,30)" fg:x="2942" fg:w="6"/><text x="20.7019%" y="479.50"></text></g><g><title>mem_cgroup_charge (2 samples, 0.01%)</title><rect x="20.4936%" y="501" width="0.0139%" height="15" fill="rgb(213,80,3)" fg:x="2948" fg:w="2"/><text x="20.7436%" y="511.50"></text></g><g><title>do_anonymous_page (47 samples, 0.33%)</title><rect x="20.1946%" y="517" width="0.3267%" height="15" fill="rgb(251,178,7)" fg:x="2905" fg:w="47"/><text x="20.4446%" y="527.50"></text></g><g><title>page_add_new_anon_rmap (2 samples, 0.01%)</title><rect x="20.5075%" y="501" width="0.0139%" height="15" fill="rgb(213,154,26)" fg:x="2950" fg:w="2"/><text x="20.7575%" y="511.50"></text></g><g><title>__mod_lruvec_page_state (2 samples, 0.01%)</title><rect x="20.5075%" y="485" width="0.0139%" height="15" fill="rgb(238,165,49)" fg:x="2950" fg:w="2"/><text x="20.7575%" y="495.50"></text></g><g><title>do_user_addr_fault (52 samples, 0.36%)</title><rect x="20.1738%" y="565" width="0.3615%" height="15" fill="rgb(248,91,46)" fg:x="2902" fg:w="52"/><text x="20.4238%" y="575.50"></text></g><g><title>handle_mm_fault (52 samples, 0.36%)</title><rect x="20.1738%" y="549" width="0.3615%" height="15" fill="rgb(244,21,52)" fg:x="2902" fg:w="52"/><text x="20.4238%" y="559.50"></text></g><g><title>__handle_mm_fault (52 samples, 0.36%)</title><rect x="20.1738%" y="533" width="0.3615%" height="15" fill="rgb(247,122,20)" fg:x="2902" fg:w="52"/><text x="20.4238%" y="543.50"></text></g><g><title>asm_exc_page_fault (65 samples, 0.45%)</title><rect x="20.0904%" y="597" width="0.4519%" height="15" fill="rgb(218,27,9)" fg:x="2890" fg:w="65"/><text x="20.3404%" y="607.50"></text></g><g><title>exc_page_fault (53 samples, 0.37%)</title><rect x="20.1738%" y="581" width="0.3684%" height="15" fill="rgb(246,7,6)" fg:x="2902" fg:w="53"/><text x="20.4238%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (76 samples, 0.53%)</title><rect x="20.0209%" y="645" width="0.5283%" height="15" fill="rgb(227,135,54)" fg:x="2880" fg:w="76"/><text x="20.2709%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (76 samples, 0.53%)</title><rect x="20.0209%" y="629" width="0.5283%" height="15" fill="rgb(247,14,11)" fg:x="2880" fg:w="76"/><text x="20.2709%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (76 samples, 0.53%)</title><rect x="20.0209%" y="613" width="0.5283%" height="15" fill="rgb(206,149,34)" fg:x="2880" fg:w="76"/><text x="20.2709%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (4 samples, 0.03%)</title><rect x="20.5492%" y="645" width="0.0278%" height="15" fill="rgb(227,228,4)" fg:x="2956" fg:w="4"/><text x="20.7992%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (4 samples, 0.03%)</title><rect x="20.5492%" y="629" width="0.0278%" height="15" fill="rgb(238,218,28)" fg:x="2956" fg:w="4"/><text x="20.7992%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.03%)</title><rect x="20.5492%" y="613" width="0.0278%" height="15" fill="rgb(252,86,40)" fg:x="2956" fg:w="4"/><text x="20.7992%" y="623.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (4 samples, 0.03%)</title><rect x="20.5492%" y="597" width="0.0278%" height="15" fill="rgb(251,225,11)" fg:x="2956" fg:w="4"/><text x="20.7992%" y="607.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (4 samples, 0.03%)</title><rect x="20.5492%" y="581" width="0.0278%" height="15" fill="rgb(206,46,49)" fg:x="2956" fg:w="4"/><text x="20.7992%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (4 samples, 0.03%)</title><rect x="20.7647%" y="613" width="0.0278%" height="15" fill="rgb(245,128,24)" fg:x="2987" fg:w="4"/><text x="21.0147%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (9 samples, 0.06%)</title><rect x="20.7925%" y="613" width="0.0626%" height="15" fill="rgb(219,177,34)" fg:x="2991" fg:w="9"/><text x="21.0425%" y="623.50"></text></g><g><title>hashbrown::raw::is_full (3 samples, 0.02%)</title><rect x="20.8551%" y="613" width="0.0209%" height="15" fill="rgb(218,60,48)" fg:x="3000" fg:w="3"/><text x="21.1051%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (62 samples, 0.43%)</title><rect x="20.5770%" y="629" width="0.4310%" height="15" fill="rgb(221,11,5)" fg:x="2960" fg:w="62"/><text x="20.8270%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (19 samples, 0.13%)</title><rect x="20.8759%" y="613" width="0.1321%" height="15" fill="rgb(220,148,13)" fg:x="3003" fg:w="19"/><text x="21.1259%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (19 samples, 0.13%)</title><rect x="20.8759%" y="597" width="0.1321%" height="15" fill="rgb(210,16,3)" fg:x="3003" fg:w="19"/><text x="21.1259%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (67 samples, 0.47%)</title><rect x="20.5770%" y="645" width="0.4658%" height="15" fill="rgb(236,80,2)" fg:x="2960" fg:w="67"/><text x="20.8270%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (5 samples, 0.03%)</title><rect x="21.0080%" y="629" width="0.0348%" height="15" fill="rgb(239,129,19)" fg:x="3022" fg:w="5"/><text x="21.2580%" y="639.50"></text></g><g><title>hashbrown::raw::h2 (5 samples, 0.03%)</title><rect x="21.0080%" y="613" width="0.0348%" height="15" fill="rgb(220,106,35)" fg:x="3022" fg:w="5"/><text x="21.2580%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (282 samples, 1.96%)</title><rect x="19.1032%" y="693" width="1.9604%" height="15" fill="rgb(252,139,45)" fg:x="2748" fg:w="282"/><text x="19.3532%" y="703.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (282 samples, 1.96%)</title><rect x="19.1032%" y="677" width="1.9604%" height="15" fill="rgb(229,8,36)" fg:x="2748" fg:w="282"/><text x="19.3532%" y="687.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (282 samples, 1.96%)</title><rect x="19.1032%" y="661" width="1.9604%" height="15" fill="rgb(230,126,33)" fg:x="2748" fg:w="282"/><text x="19.3532%" y="671.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (3 samples, 0.02%)</title><rect x="21.0428%" y="645" width="0.0209%" height="15" fill="rgb(239,140,21)" fg:x="3027" fg:w="3"/><text x="21.2928%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (3 samples, 0.02%)</title><rect x="21.0428%" y="629" width="0.0209%" height="15" fill="rgb(254,104,9)" fg:x="3027" fg:w="3"/><text x="21.2928%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (3 samples, 0.02%)</title><rect x="21.0428%" y="613" width="0.0209%" height="15" fill="rgb(239,52,14)" fg:x="3027" fg:w="3"/><text x="21.2928%" y="623.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.02%)</title><rect x="21.0428%" y="597" width="0.0209%" height="15" fill="rgb(208,227,44)" fg:x="3027" fg:w="3"/><text x="21.2928%" y="607.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.02%)</title><rect x="21.0428%" y="581" width="0.0209%" height="15" fill="rgb(246,18,19)" fg:x="3027" fg:w="3"/><text x="21.2928%" y="591.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.01%)</title><rect x="21.0497%" y="565" width="0.0139%" height="15" fill="rgb(235,228,25)" fg:x="3028" fg:w="2"/><text x="21.2997%" y="575.50"></text></g><g><title>exc_page_fault (2 samples, 0.01%)</title><rect x="21.0497%" y="549" width="0.0139%" height="15" fill="rgb(240,156,20)" fg:x="3028" fg:w="2"/><text x="21.2997%" y="559.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.01%)</title><rect x="21.0497%" y="533" width="0.0139%" height="15" fill="rgb(224,8,20)" fg:x="3028" fg:w="2"/><text x="21.2997%" y="543.50"></text></g><g><title>handle_mm_fault (2 samples, 0.01%)</title><rect x="21.0497%" y="517" width="0.0139%" height="15" fill="rgb(214,12,52)" fg:x="3028" fg:w="2"/><text x="21.2997%" y="527.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="21.0497%" y="501" width="0.0139%" height="15" fill="rgb(211,220,47)" fg:x="3028" fg:w="2"/><text x="21.2997%" y="511.50"></text></g><g><title>do_anonymous_page (2 samples, 0.01%)</title><rect x="21.0497%" y="485" width="0.0139%" height="15" fill="rgb(250,173,5)" fg:x="3028" fg:w="2"/><text x="21.2997%" y="495.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="21.0497%" y="469" width="0.0139%" height="15" fill="rgb(250,125,52)" fg:x="3028" fg:w="2"/><text x="21.2997%" y="479.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="21.0497%" y="453" width="0.0139%" height="15" fill="rgb(209,133,18)" fg:x="3028" fg:w="2"/><text x="21.2997%" y="463.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="21.0497%" y="437" width="0.0139%" height="15" fill="rgb(216,173,22)" fg:x="3028" fg:w="2"/><text x="21.2997%" y="447.50"></text></g><g><title>rmqueue (2 samples, 0.01%)</title><rect x="21.0497%" y="421" width="0.0139%" height="15" fill="rgb(205,3,22)" fg:x="3028" fg:w="2"/><text x="21.2997%" y="431.50"></text></g><g><title>hashbrown::raw::is_full (11 samples, 0.08%)</title><rect x="21.0845%" y="677" width="0.0765%" height="15" fill="rgb(248,22,20)" fg:x="3033" fg:w="11"/><text x="21.3345%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (459 samples, 3.19%)</title><rect x="17.9771%" y="741" width="3.1908%" height="15" fill="rgb(233,6,29)" fg:x="2586" fg:w="459"/><text x="18.2271%" y="751.50">std..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (456 samples, 3.17%)</title><rect x="17.9979%" y="725" width="3.1700%" height="15" fill="rgb(240,22,54)" fg:x="2589" fg:w="456"/><text x="18.2479%" y="735.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (338 samples, 2.35%)</title><rect x="18.8182%" y="709" width="2.3497%" height="15" fill="rgb(231,133,32)" fg:x="2707" fg:w="338"/><text x="19.0682%" y="719.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (15 samples, 0.10%)</title><rect x="21.0636%" y="693" width="0.1043%" height="15" fill="rgb(248,193,4)" fg:x="3030" fg:w="15"/><text x="21.3136%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="21.1957%" y="565" width="0.0139%" height="15" fill="rgb(211,178,46)" fg:x="3049" fg:w="2"/><text x="21.4457%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="21.3556%" y="389" width="0.0139%" height="15" fill="rgb(224,5,42)" fg:x="3072" fg:w="2"/><text x="21.6056%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.03%)</title><rect x="21.3834%" y="373" width="0.0278%" height="15" fill="rgb(239,176,25)" fg:x="3076" fg:w="4"/><text x="21.6334%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.11%)</title><rect x="21.3139%" y="437" width="0.1112%" height="15" fill="rgb(245,187,50)" fg:x="3066" fg:w="16"/><text x="21.5639%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.11%)</title><rect x="21.3139%" y="421" width="0.1112%" height="15" fill="rgb(248,24,15)" fg:x="3066" fg:w="16"/><text x="21.5639%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.11%)</title><rect x="21.3139%" y="405" width="0.1112%" height="15" fill="rgb(205,166,13)" fg:x="3066" fg:w="16"/><text x="21.5639%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.06%)</title><rect x="21.3695%" y="389" width="0.0556%" height="15" fill="rgb(208,114,23)" fg:x="3074" fg:w="8"/><text x="21.6195%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="21.4112%" y="373" width="0.0139%" height="15" fill="rgb(239,127,18)" fg:x="3080" fg:w="2"/><text x="21.6612%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.02%)</title><rect x="21.4251%" y="437" width="0.0209%" height="15" fill="rgb(219,154,28)" fg:x="3082" fg:w="3"/><text x="21.6751%" y="447.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.02%)</title><rect x="21.4251%" y="421" width="0.0209%" height="15" fill="rgb(225,157,23)" fg:x="3082" fg:w="3"/><text x="21.6751%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.01%)</title><rect x="21.4320%" y="405" width="0.0139%" height="15" fill="rgb(219,8,6)" fg:x="3083" fg:w="2"/><text x="21.6820%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.01%)</title><rect x="21.4320%" y="389" width="0.0139%" height="15" fill="rgb(212,47,6)" fg:x="3083" fg:w="2"/><text x="21.6820%" y="399.50"></text></g><g><title>hashbrown::map::make_insert_hash (35 samples, 0.24%)</title><rect x="21.3139%" y="453" width="0.2433%" height="15" fill="rgb(224,190,4)" fg:x="3066" fg:w="35"/><text x="21.5639%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (16 samples, 0.11%)</title><rect x="21.4460%" y="437" width="0.1112%" height="15" fill="rgb(239,183,29)" fg:x="3085" fg:w="16"/><text x="21.6960%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (16 samples, 0.11%)</title><rect x="21.4460%" y="421" width="0.1112%" height="15" fill="rgb(213,57,7)" fg:x="3085" fg:w="16"/><text x="21.6960%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (16 samples, 0.11%)</title><rect x="21.4460%" y="405" width="0.1112%" height="15" fill="rgb(216,148,1)" fg:x="3085" fg:w="16"/><text x="21.6960%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.10%)</title><rect x="21.4599%" y="389" width="0.0973%" height="15" fill="rgb(236,182,29)" fg:x="3087" fg:w="14"/><text x="21.7099%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.10%)</title><rect x="21.4599%" y="373" width="0.0973%" height="15" fill="rgb(244,120,48)" fg:x="3087" fg:w="14"/><text x="21.7099%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.10%)</title><rect x="21.4599%" y="357" width="0.0973%" height="15" fill="rgb(206,71,34)" fg:x="3087" fg:w="14"/><text x="21.7099%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.03%)</title><rect x="21.5294%" y="341" width="0.0278%" height="15" fill="rgb(242,32,6)" fg:x="3097" fg:w="4"/><text x="21.7794%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.02%)</title><rect x="21.5363%" y="325" width="0.0209%" height="15" fill="rgb(241,35,3)" fg:x="3098" fg:w="3"/><text x="21.7863%" y="335.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.01%)</title><rect x="21.5780%" y="373" width="0.0139%" height="15" fill="rgb(222,62,19)" fg:x="3104" fg:w="2"/><text x="21.8280%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 0.07%)</title><rect x="21.5572%" y="453" width="0.0695%" height="15" fill="rgb(223,110,41)" fg:x="3101" fg:w="10"/><text x="21.8072%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.07%)</title><rect x="21.5572%" y="437" width="0.0695%" height="15" fill="rgb(208,224,4)" fg:x="3101" fg:w="10"/><text x="21.8072%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (7 samples, 0.05%)</title><rect x="21.5780%" y="421" width="0.0487%" height="15" fill="rgb(241,137,19)" fg:x="3104" fg:w="7"/><text x="21.8280%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (7 samples, 0.05%)</title><rect x="21.5780%" y="405" width="0.0487%" height="15" fill="rgb(244,24,17)" fg:x="3104" fg:w="7"/><text x="21.8280%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (7 samples, 0.05%)</title><rect x="21.5780%" y="389" width="0.0487%" height="15" fill="rgb(245,178,49)" fg:x="3104" fg:w="7"/><text x="21.8280%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.03%)</title><rect x="21.5919%" y="373" width="0.0348%" height="15" fill="rgb(219,160,38)" fg:x="3106" fg:w="5"/><text x="21.8419%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.03%)</title><rect x="21.5919%" y="357" width="0.0348%" height="15" fill="rgb(228,137,14)" fg:x="3106" fg:w="5"/><text x="21.8419%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.03%)</title><rect x="21.5919%" y="341" width="0.0348%" height="15" fill="rgb(237,134,11)" fg:x="3106" fg:w="5"/><text x="21.8419%" y="351.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.03%)</title><rect x="21.5919%" y="325" width="0.0348%" height="15" fill="rgb(211,126,44)" fg:x="3106" fg:w="5"/><text x="21.8419%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.01%)</title><rect x="21.6475%" y="437" width="0.0139%" height="15" fill="rgb(226,171,33)" fg:x="3114" fg:w="2"/><text x="21.8975%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.01%)</title><rect x="21.6475%" y="421" width="0.0139%" height="15" fill="rgb(253,99,13)" fg:x="3114" fg:w="2"/><text x="21.8975%" y="431.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="21.6475%" y="405" width="0.0139%" height="15" fill="rgb(244,48,7)" fg:x="3114" fg:w="2"/><text x="21.8975%" y="415.50"></text></g><g><title>core::mem::swap (7 samples, 0.05%)</title><rect x="21.6962%" y="389" width="0.0487%" height="15" fill="rgb(244,217,54)" fg:x="3121" fg:w="7"/><text x="21.9462%" y="399.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (7 samples, 0.05%)</title><rect x="21.6962%" y="373" width="0.0487%" height="15" fill="rgb(224,15,18)" fg:x="3121" fg:w="7"/><text x="21.9462%" y="383.50"></text></g><g><title>core::ptr::swap_nonoverlapping (7 samples, 0.05%)</title><rect x="21.6962%" y="357" width="0.0487%" height="15" fill="rgb(244,99,12)" fg:x="3121" fg:w="7"/><text x="21.9462%" y="367.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (7 samples, 0.05%)</title><rect x="21.6962%" y="341" width="0.0487%" height="15" fill="rgb(233,226,8)" fg:x="3121" fg:w="7"/><text x="21.9462%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.05%)</title><rect x="21.6962%" y="325" width="0.0487%" height="15" fill="rgb(229,211,3)" fg:x="3121" fg:w="7"/><text x="21.9462%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.02%)</title><rect x="21.7449%" y="357" width="0.0209%" height="15" fill="rgb(216,140,21)" fg:x="3128" fg:w="3"/><text x="21.9949%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.02%)</title><rect x="21.7449%" y="341" width="0.0209%" height="15" fill="rgb(234,122,30)" fg:x="3128" fg:w="3"/><text x="21.9949%" y="351.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (2 samples, 0.01%)</title><rect x="21.7657%" y="341" width="0.0139%" height="15" fill="rgb(236,25,46)" fg:x="3131" fg:w="2"/><text x="22.0157%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (7 samples, 0.05%)</title><rect x="21.7449%" y="389" width="0.0487%" height="15" fill="rgb(217,52,54)" fg:x="3128" fg:w="7"/><text x="21.9949%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (7 samples, 0.05%)</title><rect x="21.7449%" y="373" width="0.0487%" height="15" fill="rgb(222,29,26)" fg:x="3128" fg:w="7"/><text x="21.9949%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (4 samples, 0.03%)</title><rect x="21.7657%" y="357" width="0.0278%" height="15" fill="rgb(216,177,29)" fg:x="3131" fg:w="4"/><text x="22.0157%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.01%)</title><rect x="21.7796%" y="341" width="0.0139%" height="15" fill="rgb(247,136,51)" fg:x="3133" fg:w="2"/><text x="22.0296%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.01%)</title><rect x="21.7796%" y="325" width="0.0139%" height="15" fill="rgb(231,47,47)" fg:x="3133" fg:w="2"/><text x="22.0296%" y="335.50"></text></g><g><title>__GI___libc_malloc (10 samples, 0.07%)</title><rect x="21.8074%" y="277" width="0.0695%" height="15" fill="rgb(211,192,36)" fg:x="3137" fg:w="10"/><text x="22.0574%" y="287.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (14 samples, 0.10%)</title><rect x="21.7935%" y="341" width="0.0973%" height="15" fill="rgb(229,156,32)" fg:x="3135" fg:w="14"/><text x="22.0435%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.10%)</title><rect x="21.7935%" y="325" width="0.0973%" height="15" fill="rgb(248,213,20)" fg:x="3135" fg:w="14"/><text x="22.0435%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.10%)</title><rect x="21.7935%" y="309" width="0.0973%" height="15" fill="rgb(217,64,7)" fg:x="3135" fg:w="14"/><text x="22.0435%" y="319.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.09%)</title><rect x="21.8005%" y="293" width="0.0904%" height="15" fill="rgb(232,142,8)" fg:x="3136" fg:w="13"/><text x="22.0505%" y="303.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="21.8770%" y="277" width="0.0139%" height="15" fill="rgb(224,92,44)" fg:x="3147" fg:w="2"/><text x="22.1270%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (15 samples, 0.10%)</title><rect x="21.7935%" y="357" width="0.1043%" height="15" fill="rgb(214,169,17)" fg:x="3135" fg:w="15"/><text x="22.0435%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (34 samples, 0.24%)</title><rect x="21.6684%" y="437" width="0.2364%" height="15" fill="rgb(210,59,37)" fg:x="3117" fg:w="34"/><text x="21.9184%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (34 samples, 0.24%)</title><rect x="21.6684%" y="421" width="0.2364%" height="15" fill="rgb(214,116,48)" fg:x="3117" fg:w="34"/><text x="21.9184%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (30 samples, 0.21%)</title><rect x="21.6962%" y="405" width="0.2086%" height="15" fill="rgb(244,191,6)" fg:x="3121" fg:w="30"/><text x="21.9462%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (16 samples, 0.11%)</title><rect x="21.7935%" y="389" width="0.1112%" height="15" fill="rgb(241,50,52)" fg:x="3135" fg:w="16"/><text x="22.0435%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (16 samples, 0.11%)</title><rect x="21.7935%" y="373" width="0.1112%" height="15" fill="rgb(236,75,39)" fg:x="3135" fg:w="16"/><text x="22.0435%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.03%)</title><rect x="21.9187%" y="421" width="0.0278%" height="15" fill="rgb(236,99,0)" fg:x="3153" fg:w="4"/><text x="22.1687%" y="431.50"></text></g><g><title>hashbrown::raw::is_full (3 samples, 0.02%)</title><rect x="21.9465%" y="421" width="0.0209%" height="15" fill="rgb(207,202,15)" fg:x="3157" fg:w="3"/><text x="22.1965%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (10 samples, 0.07%)</title><rect x="21.9048%" y="437" width="0.0695%" height="15" fill="rgb(233,207,14)" fg:x="3151" fg:w="10"/><text x="22.1548%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (106 samples, 0.74%)</title><rect x="21.2652%" y="501" width="0.7369%" height="15" fill="rgb(226,27,51)" fg:x="3059" fg:w="106"/><text x="21.5152%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (106 samples, 0.74%)</title><rect x="21.2652%" y="485" width="0.7369%" height="15" fill="rgb(206,104,42)" fg:x="3059" fg:w="106"/><text x="21.5152%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (106 samples, 0.74%)</title><rect x="21.2652%" y="469" width="0.7369%" height="15" fill="rgb(212,225,4)" fg:x="3059" fg:w="106"/><text x="21.5152%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (54 samples, 0.38%)</title><rect x="21.6267%" y="453" width="0.3754%" height="15" fill="rgb(233,96,42)" fg:x="3111" fg:w="54"/><text x="21.8767%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (4 samples, 0.03%)</title><rect x="21.9743%" y="437" width="0.0278%" height="15" fill="rgb(229,21,32)" fg:x="3161" fg:w="4"/><text x="22.2243%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (2 samples, 0.01%)</title><rect x="21.9882%" y="421" width="0.0139%" height="15" fill="rgb(226,216,24)" fg:x="3163" fg:w="2"/><text x="22.2382%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (2 samples, 0.01%)</title><rect x="21.9882%" y="405" width="0.0139%" height="15" fill="rgb(221,163,17)" fg:x="3163" fg:w="2"/><text x="22.2382%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.03%)</title><rect x="22.1133%" y="373" width="0.0278%" height="15" fill="rgb(216,216,42)" fg:x="3181" fg:w="4"/><text x="22.3633%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.03%)</title><rect x="22.1550%" y="357" width="0.0348%" height="15" fill="rgb(240,118,7)" fg:x="3187" fg:w="5"/><text x="22.4050%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.15%)</title><rect x="22.0716%" y="421" width="0.1460%" height="15" fill="rgb(221,67,37)" fg:x="3175" fg:w="21"/><text x="22.3216%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21 samples, 0.15%)</title><rect x="22.0716%" y="405" width="0.1460%" height="15" fill="rgb(241,32,44)" fg:x="3175" fg:w="21"/><text x="22.3216%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21 samples, 0.15%)</title><rect x="22.0716%" y="389" width="0.1460%" height="15" fill="rgb(235,204,43)" fg:x="3175" fg:w="21"/><text x="22.3216%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.08%)</title><rect x="22.1411%" y="373" width="0.0765%" height="15" fill="rgb(213,116,10)" fg:x="3185" fg:w="11"/><text x="22.3911%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.03%)</title><rect x="22.1898%" y="357" width="0.0278%" height="15" fill="rgb(239,15,48)" fg:x="3192" fg:w="4"/><text x="22.4398%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.02%)</title><rect x="22.2176%" y="421" width="0.0209%" height="15" fill="rgb(207,123,36)" fg:x="3196" fg:w="3"/><text x="22.4676%" y="431.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.01%)</title><rect x="22.2245%" y="405" width="0.0139%" height="15" fill="rgb(209,103,30)" fg:x="3197" fg:w="2"/><text x="22.4745%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.01%)</title><rect x="22.2245%" y="389" width="0.0139%" height="15" fill="rgb(238,100,19)" fg:x="3197" fg:w="2"/><text x="22.4745%" y="399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.01%)</title><rect x="22.2245%" y="373" width="0.0139%" height="15" fill="rgb(244,30,14)" fg:x="3197" fg:w="2"/><text x="22.4745%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.03%)</title><rect x="22.4192%" y="309" width="0.0278%" height="15" fill="rgb(249,174,6)" fg:x="3225" fg:w="4"/><text x="22.6692%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.08%)</title><rect x="22.3705%" y="325" width="0.0834%" height="15" fill="rgb(235,213,41)" fg:x="3218" fg:w="12"/><text x="22.6205%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (64 samples, 0.44%)</title><rect x="22.0299%" y="437" width="0.4449%" height="15" fill="rgb(213,118,6)" fg:x="3169" fg:w="64"/><text x="22.2799%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (34 samples, 0.24%)</title><rect x="22.2384%" y="421" width="0.2364%" height="15" fill="rgb(235,44,51)" fg:x="3199" fg:w="34"/><text x="22.4884%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (34 samples, 0.24%)</title><rect x="22.2384%" y="405" width="0.2364%" height="15" fill="rgb(217,9,53)" fg:x="3199" fg:w="34"/><text x="22.4884%" y="415.50"></text></g><g><title>core::hash::Hasher::write_usize (34 samples, 0.24%)</title><rect x="22.2384%" y="389" width="0.2364%" height="15" fill="rgb(237,172,34)" fg:x="3199" fg:w="34"/><text x="22.4884%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (32 samples, 0.22%)</title><rect x="22.2523%" y="373" width="0.2225%" height="15" fill="rgb(206,206,11)" fg:x="3201" fg:w="32"/><text x="22.5023%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (31 samples, 0.22%)</title><rect x="22.2593%" y="357" width="0.2155%" height="15" fill="rgb(214,149,29)" fg:x="3202" fg:w="31"/><text x="22.5093%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (31 samples, 0.22%)</title><rect x="22.2593%" y="341" width="0.2155%" height="15" fill="rgb(208,123,3)" fg:x="3202" fg:w="31"/><text x="22.5093%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.02%)</title><rect x="22.4539%" y="325" width="0.0209%" height="15" fill="rgb(229,126,4)" fg:x="3230" fg:w="3"/><text x="22.7039%" y="335.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (9 samples, 0.06%)</title><rect x="23.3229%" y="357" width="0.0626%" height="15" fill="rgb(222,92,36)" fg:x="3355" fg:w="9"/><text x="23.5729%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.13%)</title><rect x="23.2812%" y="373" width="0.1321%" height="15" fill="rgb(216,39,41)" fg:x="3349" fg:w="19"/><text x="23.5312%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (4 samples, 0.03%)</title><rect x="23.3855%" y="357" width="0.0278%" height="15" fill="rgb(253,127,28)" fg:x="3364" fg:w="4"/><text x="23.6355%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.29%)</title><rect x="23.2256%" y="405" width="0.2850%" height="15" fill="rgb(249,152,51)" fg:x="3341" fg:w="41"/><text x="23.4756%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.29%)</title><rect x="23.2256%" y="389" width="0.2850%" height="15" fill="rgb(209,123,42)" fg:x="3341" fg:w="41"/><text x="23.4756%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (11 samples, 0.08%)</title><rect x="23.4341%" y="373" width="0.0765%" height="15" fill="rgb(241,118,22)" fg:x="3371" fg:w="11"/><text x="23.6841%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (11 samples, 0.08%)</title><rect x="23.4341%" y="357" width="0.0765%" height="15" fill="rgb(208,25,7)" fg:x="3371" fg:w="11"/><text x="23.6841%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.08%)</title><rect x="23.4341%" y="341" width="0.0765%" height="15" fill="rgb(243,144,39)" fg:x="3371" fg:w="11"/><text x="23.6841%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.01%)</title><rect x="23.5106%" y="405" width="0.0139%" height="15" fill="rgb(250,50,5)" fg:x="3382" fg:w="2"/><text x="23.7606%" y="415.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (2 samples, 0.01%)</title><rect x="23.5106%" y="389" width="0.0139%" height="15" fill="rgb(207,67,11)" fg:x="3382" fg:w="2"/><text x="23.7606%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (2 samples, 0.01%)</title><rect x="23.5106%" y="373" width="0.0139%" height="15" fill="rgb(245,204,40)" fg:x="3382" fg:w="2"/><text x="23.7606%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (284 samples, 1.97%)</title><rect x="22.0021%" y="485" width="1.9743%" height="15" fill="rgb(238,228,24)" fg:x="3165" fg:w="284"/><text x="22.2521%" y="495.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (284 samples, 1.97%)</title><rect x="22.0021%" y="469" width="1.9743%" height="15" fill="rgb(217,116,22)" fg:x="3165" fg:w="284"/><text x="22.2521%" y="479.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (284 samples, 1.97%)</title><rect x="22.0021%" y="453" width="1.9743%" height="15" fill="rgb(234,98,12)" fg:x="3165" fg:w="284"/><text x="22.2521%" y="463.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (216 samples, 1.50%)</title><rect x="22.4748%" y="437" width="1.5016%" height="15" fill="rgb(242,170,50)" fg:x="3233" fg:w="216"/><text x="22.7248%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (216 samples, 1.50%)</title><rect x="22.4748%" y="421" width="1.5016%" height="15" fill="rgb(235,7,5)" fg:x="3233" fg:w="216"/><text x="22.7248%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (65 samples, 0.45%)</title><rect x="23.5245%" y="405" width="0.4519%" height="15" fill="rgb(241,114,28)" fg:x="3384" fg:w="65"/><text x="23.7745%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (65 samples, 0.45%)</title><rect x="23.5245%" y="389" width="0.4519%" height="15" fill="rgb(246,112,42)" fg:x="3384" fg:w="65"/><text x="23.7745%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (65 samples, 0.45%)</title><rect x="23.5245%" y="373" width="0.4519%" height="15" fill="rgb(248,228,14)" fg:x="3384" fg:w="65"/><text x="23.7745%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (61 samples, 0.42%)</title><rect x="23.5523%" y="357" width="0.4241%" height="15" fill="rgb(208,133,18)" fg:x="3388" fg:w="61"/><text x="23.8023%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (61 samples, 0.42%)</title><rect x="23.5523%" y="341" width="0.4241%" height="15" fill="rgb(207,35,49)" fg:x="3388" fg:w="61"/><text x="23.8023%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (61 samples, 0.42%)</title><rect x="23.5523%" y="325" width="0.4241%" height="15" fill="rgb(205,68,36)" fg:x="3388" fg:w="61"/><text x="23.8023%" y="335.50"></text></g><g><title>core::core_arch::simd::i8x16::new (61 samples, 0.42%)</title><rect x="23.5523%" y="309" width="0.4241%" height="15" fill="rgb(245,62,40)" fg:x="3388" fg:w="61"/><text x="23.8023%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.04%)</title><rect x="24.0389%" y="373" width="0.0417%" height="15" fill="rgb(228,27,24)" fg:x="3458" fg:w="6"/><text x="24.2889%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="24.0667%" y="357" width="0.0139%" height="15" fill="rgb(253,19,12)" fg:x="3462" fg:w="2"/><text x="24.3167%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.03%)</title><rect x="24.0876%" y="357" width="0.0348%" height="15" fill="rgb(232,28,20)" fg:x="3465" fg:w="5"/><text x="24.3376%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.14%)</title><rect x="24.0181%" y="421" width="0.1390%" height="15" fill="rgb(218,35,51)" fg:x="3455" fg:w="20"/><text x="24.2681%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20 samples, 0.14%)</title><rect x="24.0181%" y="405" width="0.1390%" height="15" fill="rgb(212,90,40)" fg:x="3455" fg:w="20"/><text x="24.2681%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20 samples, 0.14%)</title><rect x="24.0181%" y="389" width="0.1390%" height="15" fill="rgb(220,172,12)" fg:x="3455" fg:w="20"/><text x="24.2681%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.08%)</title><rect x="24.0806%" y="373" width="0.0765%" height="15" fill="rgb(226,159,20)" fg:x="3464" fg:w="11"/><text x="24.3306%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.03%)</title><rect x="24.1223%" y="357" width="0.0348%" height="15" fill="rgb(234,205,16)" fg:x="3470" fg:w="5"/><text x="24.3723%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (7 samples, 0.05%)</title><rect x="24.1571%" y="421" width="0.0487%" height="15" fill="rgb(207,9,39)" fg:x="3475" fg:w="7"/><text x="24.4071%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.06%)</title><rect x="24.2961%" y="325" width="0.0556%" height="15" fill="rgb(249,143,15)" fg:x="3495" fg:w="8"/><text x="24.5461%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="24.3379%" y="309" width="0.0139%" height="15" fill="rgb(253,133,29)" fg:x="3501" fg:w="2"/><text x="24.5879%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (56 samples, 0.39%)</title><rect x="23.9833%" y="437" width="0.3893%" height="15" fill="rgb(221,187,0)" fg:x="3450" fg:w="56"/><text x="24.2333%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (24 samples, 0.17%)</title><rect x="24.2058%" y="421" width="0.1668%" height="15" fill="rgb(205,204,26)" fg:x="3482" fg:w="24"/><text x="24.4558%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (24 samples, 0.17%)</title><rect x="24.2058%" y="405" width="0.1668%" height="15" fill="rgb(224,68,54)" fg:x="3482" fg:w="24"/><text x="24.4558%" y="415.50"></text></g><g><title>core::hash::Hasher::write_usize (24 samples, 0.17%)</title><rect x="24.2058%" y="389" width="0.1668%" height="15" fill="rgb(209,67,4)" fg:x="3482" fg:w="24"/><text x="24.4558%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (24 samples, 0.17%)</title><rect x="24.2058%" y="373" width="0.1668%" height="15" fill="rgb(228,229,18)" fg:x="3482" fg:w="24"/><text x="24.4558%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (22 samples, 0.15%)</title><rect x="24.2197%" y="357" width="0.1529%" height="15" fill="rgb(231,89,13)" fg:x="3484" fg:w="22"/><text x="24.4697%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (22 samples, 0.15%)</title><rect x="24.2197%" y="341" width="0.1529%" height="15" fill="rgb(210,182,18)" fg:x="3484" fg:w="22"/><text x="24.4697%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.02%)</title><rect x="24.3518%" y="325" width="0.0209%" height="15" fill="rgb(240,105,2)" fg:x="3503" fg:w="3"/><text x="24.6018%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.11%)</title><rect x="24.5395%" y="405" width="0.1112%" height="15" fill="rgb(207,170,50)" fg:x="3530" fg:w="16"/><text x="24.7895%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.11%)</title><rect x="24.5395%" y="389" width="0.1112%" height="15" fill="rgb(232,133,24)" fg:x="3530" fg:w="16"/><text x="24.7895%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.10%)</title><rect x="24.5464%" y="373" width="0.1043%" height="15" fill="rgb(235,166,27)" fg:x="3531" fg:w="15"/><text x="24.7964%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.06%)</title><rect x="24.5951%" y="357" width="0.0556%" height="15" fill="rgb(209,19,13)" fg:x="3538" fg:w="8"/><text x="24.8451%" y="367.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.02%)</title><rect x="24.6507%" y="405" width="0.0209%" height="15" fill="rgb(226,79,39)" fg:x="3546" fg:w="3"/><text x="24.9007%" y="415.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (3 samples, 0.02%)</title><rect x="24.6507%" y="389" width="0.0209%" height="15" fill="rgb(222,163,10)" fg:x="3546" fg:w="3"/><text x="24.9007%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (3 samples, 0.02%)</title><rect x="24.6507%" y="373" width="0.0209%" height="15" fill="rgb(214,44,19)" fg:x="3546" fg:w="3"/><text x="24.9007%" y="383.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (509 samples, 3.54%)</title><rect x="21.2513%" y="517" width="3.5384%" height="15" fill="rgb(210,217,13)" fg:x="3057" fg:w="509"/><text x="21.5013%" y="527.50">cor..</text></g><g><title>y2021::d15::main::next_points::{{closure}} (401 samples, 2.79%)</title><rect x="22.0021%" y="501" width="2.7876%" height="15" fill="rgb(237,61,54)" fg:x="3165" fg:w="401"/><text x="22.2521%" y="511.50">y2..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (117 samples, 0.81%)</title><rect x="23.9764%" y="485" width="0.8133%" height="15" fill="rgb(226,184,24)" fg:x="3449" fg:w="117"/><text x="24.2264%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (117 samples, 0.81%)</title><rect x="23.9764%" y="469" width="0.8133%" height="15" fill="rgb(223,226,4)" fg:x="3449" fg:w="117"/><text x="24.2264%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (117 samples, 0.81%)</title><rect x="23.9764%" y="453" width="0.8133%" height="15" fill="rgb(210,26,41)" fg:x="3449" fg:w="117"/><text x="24.2264%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (60 samples, 0.42%)</title><rect x="24.3726%" y="437" width="0.4171%" height="15" fill="rgb(220,221,6)" fg:x="3506" fg:w="60"/><text x="24.6226%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (60 samples, 0.42%)</title><rect x="24.3726%" y="421" width="0.4171%" height="15" fill="rgb(225,89,49)" fg:x="3506" fg:w="60"/><text x="24.6226%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (17 samples, 0.12%)</title><rect x="24.6715%" y="405" width="0.1182%" height="15" fill="rgb(218,70,45)" fg:x="3549" fg:w="17"/><text x="24.9215%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (17 samples, 0.12%)</title><rect x="24.6715%" y="389" width="0.1182%" height="15" fill="rgb(238,166,21)" fg:x="3549" fg:w="17"/><text x="24.9215%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (17 samples, 0.12%)</title><rect x="24.6715%" y="373" width="0.1182%" height="15" fill="rgb(224,141,44)" fg:x="3549" fg:w="17"/><text x="24.9215%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (12 samples, 0.08%)</title><rect x="24.7063%" y="357" width="0.0834%" height="15" fill="rgb(230,12,49)" fg:x="3554" fg:w="12"/><text x="24.9563%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (12 samples, 0.08%)</title><rect x="24.7063%" y="341" width="0.0834%" height="15" fill="rgb(212,174,12)" fg:x="3554" fg:w="12"/><text x="24.9563%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (12 samples, 0.08%)</title><rect x="24.7063%" y="325" width="0.0834%" height="15" fill="rgb(246,67,9)" fg:x="3554" fg:w="12"/><text x="24.9563%" y="335.50"></text></g><g><title>core::core_arch::simd::i8x16::new (12 samples, 0.08%)</title><rect x="24.7063%" y="309" width="0.0834%" height="15" fill="rgb(239,35,23)" fg:x="3554" fg:w="12"/><text x="24.9563%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.03%)</title><rect x="24.9705%" y="389" width="0.0278%" height="15" fill="rgb(211,167,0)" fg:x="3592" fg:w="4"/><text x="25.2205%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.03%)</title><rect x="24.9705%" y="373" width="0.0278%" height="15" fill="rgb(225,119,45)" fg:x="3592" fg:w="4"/><text x="25.2205%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (24 samples, 0.17%)</title><rect x="25.0261%" y="373" width="0.1668%" height="15" fill="rgb(210,162,6)" fg:x="3600" fg:w="24"/><text x="25.2761%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (58 samples, 0.40%)</title><rect x="24.8453%" y="437" width="0.4032%" height="15" fill="rgb(208,118,35)" fg:x="3574" fg:w="58"/><text x="25.0953%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (58 samples, 0.40%)</title><rect x="24.8453%" y="421" width="0.4032%" height="15" fill="rgb(239,4,53)" fg:x="3574" fg:w="58"/><text x="25.0953%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (58 samples, 0.40%)</title><rect x="24.8453%" y="405" width="0.4032%" height="15" fill="rgb(213,130,21)" fg:x="3574" fg:w="58"/><text x="25.0953%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (36 samples, 0.25%)</title><rect x="24.9983%" y="389" width="0.2503%" height="15" fill="rgb(235,148,0)" fg:x="3596" fg:w="36"/><text x="25.2483%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.06%)</title><rect x="25.1929%" y="373" width="0.0556%" height="15" fill="rgb(244,224,18)" fg:x="3624" fg:w="8"/><text x="25.4429%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (7 samples, 0.05%)</title><rect x="25.2485%" y="437" width="0.0487%" height="15" fill="rgb(211,214,4)" fg:x="3632" fg:w="7"/><text x="25.4985%" y="447.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.03%)</title><rect x="25.2624%" y="421" width="0.0348%" height="15" fill="rgb(206,119,25)" fg:x="3634" fg:w="5"/><text x="25.5124%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.03%)</title><rect x="25.2624%" y="405" width="0.0348%" height="15" fill="rgb(243,93,47)" fg:x="3634" fg:w="5"/><text x="25.5124%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.03%)</title><rect x="25.2624%" y="389" width="0.0348%" height="15" fill="rgb(224,194,6)" fg:x="3634" fg:w="5"/><text x="25.5124%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.10%)</title><rect x="25.5683%" y="325" width="0.1043%" height="15" fill="rgb(243,229,6)" fg:x="3678" fg:w="15"/><text x="25.8183%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (30 samples, 0.21%)</title><rect x="25.4988%" y="341" width="0.2086%" height="15" fill="rgb(207,23,50)" fg:x="3668" fg:w="30"/><text x="25.7488%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.03%)</title><rect x="25.6726%" y="325" width="0.0348%" height="15" fill="rgb(253,192,32)" fg:x="3693" fg:w="5"/><text x="25.9226%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (136 samples, 0.95%)</title><rect x="24.7897%" y="453" width="0.9454%" height="15" fill="rgb(213,21,6)" fg:x="3566" fg:w="136"/><text x="25.0397%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (63 samples, 0.44%)</title><rect x="25.2972%" y="437" width="0.4380%" height="15" fill="rgb(243,151,13)" fg:x="3639" fg:w="63"/><text x="25.5472%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (63 samples, 0.44%)</title><rect x="25.2972%" y="421" width="0.4380%" height="15" fill="rgb(233,165,41)" fg:x="3639" fg:w="63"/><text x="25.5472%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (63 samples, 0.44%)</title><rect x="25.2972%" y="405" width="0.4380%" height="15" fill="rgb(246,176,45)" fg:x="3639" fg:w="63"/><text x="25.5472%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (60 samples, 0.42%)</title><rect x="25.3180%" y="389" width="0.4171%" height="15" fill="rgb(217,170,52)" fg:x="3642" fg:w="60"/><text x="25.5680%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (60 samples, 0.42%)</title><rect x="25.3180%" y="373" width="0.4171%" height="15" fill="rgb(214,203,54)" fg:x="3642" fg:w="60"/><text x="25.5680%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (60 samples, 0.42%)</title><rect x="25.3180%" y="357" width="0.4171%" height="15" fill="rgb(248,215,49)" fg:x="3642" fg:w="60"/><text x="25.5680%" y="367.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.03%)</title><rect x="25.7073%" y="341" width="0.0278%" height="15" fill="rgb(208,46,10)" fg:x="3698" fg:w="4"/><text x="25.9573%" y="351.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.05%)</title><rect x="28.0431%" y="373" width="0.0487%" height="15" fill="rgb(254,5,31)" fg:x="4034" fg:w="7"/><text x="28.2931%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.12%)</title><rect x="27.9805%" y="421" width="0.1182%" height="15" fill="rgb(222,104,33)" fg:x="4025" fg:w="17"/><text x="28.2305%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.12%)</title><rect x="27.9805%" y="405" width="0.1182%" height="15" fill="rgb(248,49,16)" fg:x="4025" fg:w="17"/><text x="28.2305%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.10%)</title><rect x="28.0014%" y="389" width="0.0973%" height="15" fill="rgb(232,198,41)" fg:x="4028" fg:w="14"/><text x="28.2514%" y="399.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.05%)</title><rect x="28.0987%" y="421" width="0.0487%" height="15" fill="rgb(214,125,3)" fg:x="4042" fg:w="7"/><text x="28.3487%" y="431.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (7 samples, 0.05%)</title><rect x="28.0987%" y="405" width="0.0487%" height="15" fill="rgb(229,220,28)" fg:x="4042" fg:w="7"/><text x="28.3487%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (7 samples, 0.05%)</title><rect x="28.0987%" y="389" width="0.0487%" height="15" fill="rgb(222,64,37)" fg:x="4042" fg:w="7"/><text x="28.3487%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,108 samples, 7.70%)</title><rect x="21.2304%" y="533" width="7.7025%" height="15" fill="rgb(249,184,13)" fg:x="3054" fg:w="1108"/><text x="21.4804%" y="543.50">core::iter:..</text></g><g><title>y2021::d15::main::next_points::{{closure}} (596 samples, 4.14%)</title><rect x="24.7897%" y="517" width="4.1432%" height="15" fill="rgb(252,176,6)" fg:x="3566" fg:w="596"/><text x="25.0397%" y="527.50">y2021..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (596 samples, 4.14%)</title><rect x="24.7897%" y="501" width="4.1432%" height="15" fill="rgb(228,153,7)" fg:x="3566" fg:w="596"/><text x="25.0397%" y="511.50">std::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (596 samples, 4.14%)</title><rect x="24.7897%" y="485" width="4.1432%" height="15" fill="rgb(242,193,5)" fg:x="3566" fg:w="596"/><text x="25.0397%" y="495.50">hashb..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (596 samples, 4.14%)</title><rect x="24.7897%" y="469" width="4.1432%" height="15" fill="rgb(232,140,9)" fg:x="3566" fg:w="596"/><text x="25.0397%" y="479.50">hashb..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (460 samples, 3.20%)</title><rect x="25.7351%" y="453" width="3.1978%" height="15" fill="rgb(213,222,16)" fg:x="3702" fg:w="460"/><text x="25.9851%" y="463.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (460 samples, 3.20%)</title><rect x="25.7351%" y="437" width="3.1978%" height="15" fill="rgb(222,75,50)" fg:x="3702" fg:w="460"/><text x="25.9851%" y="447.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (113 samples, 0.79%)</title><rect x="28.1474%" y="421" width="0.7855%" height="15" fill="rgb(205,180,2)" fg:x="4049" fg:w="113"/><text x="28.3974%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (113 samples, 0.79%)</title><rect x="28.1474%" y="405" width="0.7855%" height="15" fill="rgb(216,34,7)" fg:x="4049" fg:w="113"/><text x="28.3974%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (113 samples, 0.79%)</title><rect x="28.1474%" y="389" width="0.7855%" height="15" fill="rgb(253,16,32)" fg:x="4049" fg:w="113"/><text x="28.3974%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (112 samples, 0.78%)</title><rect x="28.1543%" y="373" width="0.7786%" height="15" fill="rgb(208,97,28)" fg:x="4050" fg:w="112"/><text x="28.4043%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (112 samples, 0.78%)</title><rect x="28.1543%" y="357" width="0.7786%" height="15" fill="rgb(225,92,11)" fg:x="4050" fg:w="112"/><text x="28.4043%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (112 samples, 0.78%)</title><rect x="28.1543%" y="341" width="0.7786%" height="15" fill="rgb(243,38,12)" fg:x="4050" fg:w="112"/><text x="28.4043%" y="351.50"></text></g><g><title>core::core_arch::simd::i8x16::new (112 samples, 0.78%)</title><rect x="28.1543%" y="325" width="0.7786%" height="15" fill="rgb(208,139,16)" fg:x="4050" fg:w="112"/><text x="28.4043%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,118 samples, 7.77%)</title><rect x="21.1679%" y="693" width="7.7720%" height="15" fill="rgb(227,24,9)" fg:x="3045" fg:w="1118"/><text x="21.4179%" y="703.50">&lt;std::colle..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,118 samples, 7.77%)</title><rect x="21.1679%" y="677" width="7.7720%" height="15" fill="rgb(206,62,11)" fg:x="3045" fg:w="1118"/><text x="21.4179%" y="687.50">&lt;hashbrown:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,118 samples, 7.77%)</title><rect x="21.1679%" y="661" width="7.7720%" height="15" fill="rgb(228,134,27)" fg:x="3045" fg:w="1118"/><text x="21.4179%" y="671.50">core::iter:..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,118 samples, 7.77%)</title><rect x="21.1679%" y="645" width="7.7720%" height="15" fill="rgb(205,55,33)" fg:x="3045" fg:w="1118"/><text x="21.4179%" y="655.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,115 samples, 7.75%)</title><rect x="21.1887%" y="629" width="7.7511%" height="15" fill="rgb(243,75,43)" fg:x="3048" fg:w="1115"/><text x="21.4387%" y="639.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,115 samples, 7.75%)</title><rect x="21.1887%" y="613" width="7.7511%" height="15" fill="rgb(223,27,42)" fg:x="3048" fg:w="1115"/><text x="21.4387%" y="623.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,115 samples, 7.75%)</title><rect x="21.1887%" y="597" width="7.7511%" height="15" fill="rgb(232,189,33)" fg:x="3048" fg:w="1115"/><text x="21.4387%" y="607.50">&lt;core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,115 samples, 7.75%)</title><rect x="21.1887%" y="581" width="7.7511%" height="15" fill="rgb(210,9,39)" fg:x="3048" fg:w="1115"/><text x="21.4387%" y="591.50">core::iter:..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,112 samples, 7.73%)</title><rect x="21.2096%" y="565" width="7.7303%" height="15" fill="rgb(242,85,26)" fg:x="3051" fg:w="1112"/><text x="21.4596%" y="575.50">core::iter:..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1,112 samples, 7.73%)</title><rect x="21.2096%" y="549" width="7.7303%" height="15" fill="rgb(248,44,4)" fg:x="3051" fg:w="1112"/><text x="21.4596%" y="559.50">core::iter:..</text></g><g><title>y2021::d15::main::next_points (1,121 samples, 7.79%)</title><rect x="21.1679%" y="741" width="7.7928%" height="15" fill="rgb(250,96,46)" fg:x="3045" fg:w="1121"/><text x="21.4179%" y="751.50">y2021::d15:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,121 samples, 7.79%)</title><rect x="21.1679%" y="725" width="7.7928%" height="15" fill="rgb(229,116,26)" fg:x="3045" fg:w="1121"/><text x="21.4179%" y="735.50">core::iter:..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,121 samples, 7.79%)</title><rect x="21.1679%" y="709" width="7.7928%" height="15" fill="rgb(246,94,34)" fg:x="3045" fg:w="1121"/><text x="21.4179%" y="719.50">&lt;std::colle..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (3 samples, 0.02%)</title><rect x="28.9399%" y="693" width="0.0209%" height="15" fill="rgb(251,73,21)" fg:x="4163" fg:w="3"/><text x="29.1899%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (2 samples, 0.01%)</title><rect x="28.9468%" y="677" width="0.0139%" height="15" fill="rgb(254,121,25)" fg:x="4164" fg:w="2"/><text x="29.1968%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="28.9468%" y="661" width="0.0139%" height="15" fill="rgb(215,161,49)" fg:x="4164" fg:w="2"/><text x="29.1968%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_in (2 samples, 0.01%)</title><rect x="28.9468%" y="645" width="0.0139%" height="15" fill="rgb(221,43,13)" fg:x="4164" fg:w="2"/><text x="29.1968%" y="655.50"></text></g><g><title>y2021::d15::main::run (1,954 samples, 13.58%)</title><rect x="15.4188%" y="773" width="13.5836%" height="15" fill="rgb(249,5,37)" fg:x="2218" fg:w="1954"/><text x="15.6688%" y="783.50">y2021::d15::main::run</text></g><g><title>y2021::d15::main::p02 (1,904 samples, 13.24%)</title><rect x="15.7664%" y="757" width="13.2360%" height="15" fill="rgb(226,25,44)" fg:x="2268" fg:w="1904"/><text x="16.0164%" y="767.50">y2021::d15::main::p02</text></g><g><title>y2021::d15::main::parse_input (6 samples, 0.04%)</title><rect x="28.9607%" y="741" width="0.0417%" height="15" fill="rgb(238,189,16)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.04%)</title><rect x="28.9607%" y="725" width="0.0417%" height="15" fill="rgb(251,186,8)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6 samples, 0.04%)</title><rect x="28.9607%" y="709" width="0.0417%" height="15" fill="rgb(254,34,31)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.04%)</title><rect x="28.9607%" y="693" width="0.0417%" height="15" fill="rgb(225,215,27)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="703.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.04%)</title><rect x="28.9607%" y="677" width="0.0417%" height="15" fill="rgb(221,192,48)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.04%)</title><rect x="28.9607%" y="661" width="0.0417%" height="15" fill="rgb(219,137,20)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.04%)</title><rect x="28.9607%" y="645" width="0.0417%" height="15" fill="rgb(219,84,11)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.04%)</title><rect x="28.9607%" y="629" width="0.0417%" height="15" fill="rgb(224,10,23)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.04%)</title><rect x="28.9607%" y="613" width="0.0417%" height="15" fill="rgb(248,22,39)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.04%)</title><rect x="28.9607%" y="597" width="0.0417%" height="15" fill="rgb(212,154,20)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.04%)</title><rect x="28.9607%" y="581" width="0.0417%" height="15" fill="rgb(236,199,50)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.04%)</title><rect x="28.9607%" y="565" width="0.0417%" height="15" fill="rgb(211,9,17)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.04%)</title><rect x="28.9607%" y="549" width="0.0417%" height="15" fill="rgb(243,216,36)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (6 samples, 0.04%)</title><rect x="28.9607%" y="533" width="0.0417%" height="15" fill="rgb(250,2,10)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="543.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (6 samples, 0.04%)</title><rect x="28.9607%" y="517" width="0.0417%" height="15" fill="rgb(226,50,48)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.04%)</title><rect x="28.9607%" y="501" width="0.0417%" height="15" fill="rgb(243,81,16)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (6 samples, 0.04%)</title><rect x="28.9607%" y="485" width="0.0417%" height="15" fill="rgb(250,14,2)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.04%)</title><rect x="28.9607%" y="469" width="0.0417%" height="15" fill="rgb(233,135,29)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.04%)</title><rect x="28.9607%" y="453" width="0.0417%" height="15" fill="rgb(224,64,43)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.04%)</title><rect x="28.9607%" y="437" width="0.0417%" height="15" fill="rgb(238,84,13)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (6 samples, 0.04%)</title><rect x="28.9607%" y="421" width="0.0417%" height="15" fill="rgb(253,48,26)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.04%)</title><rect x="28.9607%" y="405" width="0.0417%" height="15" fill="rgb(205,223,31)" fg:x="4166" fg:w="6"/><text x="29.2107%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.03%)</title><rect x="28.9746%" y="389" width="0.0278%" height="15" fill="rgb(221,41,32)" fg:x="4168" fg:w="4"/><text x="29.2246%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="28.9816%" y="373" width="0.0209%" height="15" fill="rgb(213,158,31)" fg:x="4169" fg:w="3"/><text x="29.2316%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.02%)</title><rect x="28.9816%" y="357" width="0.0209%" height="15" fill="rgb(245,126,43)" fg:x="4169" fg:w="3"/><text x="29.2316%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.02%)</title><rect x="28.9816%" y="341" width="0.0209%" height="15" fill="rgb(227,7,22)" fg:x="4169" fg:w="3"/><text x="29.2316%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.01%)</title><rect x="28.9885%" y="325" width="0.0139%" height="15" fill="rgb(252,90,44)" fg:x="4170" fg:w="2"/><text x="29.2385%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.01%)</title><rect x="28.9885%" y="309" width="0.0139%" height="15" fill="rgb(253,91,0)" fg:x="4170" fg:w="2"/><text x="29.2385%" y="319.50"></text></g><g><title>y2021::d17::main::run (4 samples, 0.03%)</title><rect x="29.0094%" y="773" width="0.0278%" height="15" fill="rgb(252,175,49)" fg:x="4173" fg:w="4"/><text x="29.2594%" y="783.50"></text></g><g><title>y2021::d17::main::p02 (3 samples, 0.02%)</title><rect x="29.0163%" y="757" width="0.0209%" height="15" fill="rgb(246,150,1)" fg:x="4174" fg:w="3"/><text x="29.2663%" y="767.50"></text></g><g><title>std::io::stdio::_print (2 samples, 0.01%)</title><rect x="29.0372%" y="757" width="0.0139%" height="15" fill="rgb(241,192,25)" fg:x="4177" fg:w="2"/><text x="29.2872%" y="767.50"></text></g><g><title>std::io::stdio::print_to (2 samples, 0.01%)</title><rect x="29.0372%" y="741" width="0.0139%" height="15" fill="rgb(239,187,11)" fg:x="4177" fg:w="2"/><text x="29.2872%" y="751.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2 samples, 0.01%)</title><rect x="29.0372%" y="725" width="0.0139%" height="15" fill="rgb(218,202,51)" fg:x="4177" fg:w="2"/><text x="29.2872%" y="735.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2 samples, 0.01%)</title><rect x="29.0372%" y="709" width="0.0139%" height="15" fill="rgb(225,176,8)" fg:x="4177" fg:w="2"/><text x="29.2872%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d18::main::Snail&gt; (2 samples, 0.01%)</title><rect x="29.0580%" y="741" width="0.0139%" height="15" fill="rgb(219,122,41)" fg:x="4180" fg:w="2"/><text x="29.3080%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail&gt;&gt; (2 samples, 0.01%)</title><rect x="29.0580%" y="725" width="0.0139%" height="15" fill="rgb(248,140,20)" fg:x="4180" fg:w="2"/><text x="29.3080%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail,std::collections::hash::map::RandomState&gt;&gt; (2 samples, 0.01%)</title><rect x="29.0580%" y="709" width="0.0139%" height="15" fill="rgb(245,41,37)" fg:x="4180" fg:w="2"/><text x="29.3080%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::d18::main::Side,y2021::d18::main::Snail)&gt;&gt; (2 samples, 0.01%)</title><rect x="29.0580%" y="693" width="0.0139%" height="15" fill="rgb(235,82,39)" fg:x="4180" fg:w="2"/><text x="29.3080%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="29.0580%" y="677" width="0.0139%" height="15" fill="rgb(230,108,42)" fg:x="4180" fg:w="2"/><text x="29.3080%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (2 samples, 0.01%)</title><rect x="29.0580%" y="661" width="0.0139%" height="15" fill="rgb(215,150,50)" fg:x="4180" fg:w="2"/><text x="29.3080%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.01%)</title><rect x="29.0580%" y="645" width="0.0139%" height="15" fill="rgb(233,212,5)" fg:x="4180" fg:w="2"/><text x="29.3080%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.01%)</title><rect x="29.0580%" y="629" width="0.0139%" height="15" fill="rgb(245,80,22)" fg:x="4180" fg:w="2"/><text x="29.3080%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(y2021::d18::main::Side,y2021::d18::main::Snail)&gt; (2 samples, 0.01%)</title><rect x="29.0580%" y="613" width="0.0139%" height="15" fill="rgb(238,129,16)" fg:x="4180" fg:w="2"/><text x="29.3080%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d18::main::Snail&gt; (2 samples, 0.01%)</title><rect x="29.0580%" y="597" width="0.0139%" height="15" fill="rgb(240,19,0)" fg:x="4180" fg:w="2"/><text x="29.3080%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail&gt;&gt; (2 samples, 0.01%)</title><rect x="29.0580%" y="581" width="0.0139%" height="15" fill="rgb(232,42,35)" fg:x="4180" fg:w="2"/><text x="29.3080%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail,std::collections::hash::map::RandomState&gt;&gt; (2 samples, 0.01%)</title><rect x="29.0580%" y="565" width="0.0139%" height="15" fill="rgb(223,130,24)" fg:x="4180" fg:w="2"/><text x="29.3080%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::d18::main::Side,y2021::d18::main::Snail)&gt;&gt; (2 samples, 0.01%)</title><rect x="29.0580%" y="549" width="0.0139%" height="15" fill="rgb(237,16,22)" fg:x="4180" fg:w="2"/><text x="29.3080%" y="559.50"></text></g><g><title>y2021::d18::main::Snail::combine (2 samples, 0.01%)</title><rect x="29.0719%" y="741" width="0.0139%" height="15" fill="rgb(248,192,20)" fg:x="4182" fg:w="2"/><text x="29.3219%" y="751.50"></text></g><g><title>&lt;y2021::d18::main::Snail as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="29.0719%" y="725" width="0.0139%" height="15" fill="rgb(233,167,2)" fg:x="4182" fg:w="2"/><text x="29.3219%" y="735.50"></text></g><g><title>&lt;y2021::d18::main::Snail as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="29.0719%" y="709" width="0.0139%" height="15" fill="rgb(252,71,44)" fg:x="4182" fg:w="2"/><text x="29.3219%" y="719.50"></text></g><g><title>y2021::d18::main::Snail::add (2 samples, 0.01%)</title><rect x="29.1067%" y="693" width="0.0139%" height="15" fill="rgb(238,37,47)" fg:x="4187" fg:w="2"/><text x="29.3567%" y="703.50"></text></g><g><title>y2021::d18::main::Snail::has (2 samples, 0.01%)</title><rect x="29.1067%" y="677" width="0.0139%" height="15" fill="rgb(214,202,54)" fg:x="4187" fg:w="2"/><text x="29.3567%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.01%)</title><rect x="29.1067%" y="661" width="0.0139%" height="15" fill="rgb(254,165,40)" fg:x="4187" fg:w="2"/><text x="29.3567%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.01%)</title><rect x="29.1067%" y="645" width="0.0139%" height="15" fill="rgb(246,173,38)" fg:x="4187" fg:w="2"/><text x="29.3567%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.01%)</title><rect x="29.1067%" y="629" width="0.0139%" height="15" fill="rgb(215,3,27)" fg:x="4187" fg:w="2"/><text x="29.3567%" y="639.50"></text></g><g><title>y2021::d18::main::Snail::explode (3 samples, 0.02%)</title><rect x="29.1345%" y="661" width="0.0209%" height="15" fill="rgb(239,169,51)" fg:x="4191" fg:w="3"/><text x="29.3845%" y="671.50"></text></g><g><title>y2021::d18::main::Snail::has (3 samples, 0.02%)</title><rect x="29.1345%" y="645" width="0.0209%" height="15" fill="rgb(212,5,25)" fg:x="4191" fg:w="3"/><text x="29.3845%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (3 samples, 0.02%)</title><rect x="29.1345%" y="629" width="0.0209%" height="15" fill="rgb(243,45,17)" fg:x="4191" fg:w="3"/><text x="29.3845%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.02%)</title><rect x="29.1345%" y="613" width="0.0209%" height="15" fill="rgb(242,97,9)" fg:x="4191" fg:w="3"/><text x="29.3845%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.01%)</title><rect x="29.1415%" y="597" width="0.0139%" height="15" fill="rgb(228,71,31)" fg:x="4192" fg:w="2"/><text x="29.3915%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="29.1415%" y="581" width="0.0139%" height="15" fill="rgb(252,184,16)" fg:x="4192" fg:w="2"/><text x="29.3915%" y="591.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (2 samples, 0.01%)</title><rect x="29.1554%" y="661" width="0.0139%" height="15" fill="rgb(236,169,46)" fg:x="4194" fg:w="2"/><text x="29.4054%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.01%)</title><rect x="29.1554%" y="645" width="0.0139%" height="15" fill="rgb(207,17,47)" fg:x="4194" fg:w="2"/><text x="29.4054%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2 samples, 0.01%)</title><rect x="29.1554%" y="629" width="0.0139%" height="15" fill="rgb(206,201,28)" fg:x="4194" fg:w="2"/><text x="29.4054%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (2 samples, 0.01%)</title><rect x="29.1554%" y="613" width="0.0139%" height="15" fill="rgb(224,184,23)" fg:x="4194" fg:w="2"/><text x="29.4054%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="29.1554%" y="597" width="0.0139%" height="15" fill="rgb(208,139,48)" fg:x="4194" fg:w="2"/><text x="29.4054%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="29.1554%" y="581" width="0.0139%" height="15" fill="rgb(208,130,10)" fg:x="4194" fg:w="2"/><text x="29.4054%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="29.1554%" y="565" width="0.0139%" height="15" fill="rgb(211,213,45)" fg:x="4194" fg:w="2"/><text x="29.4054%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="29.1554%" y="549" width="0.0139%" height="15" fill="rgb(235,100,30)" fg:x="4194" fg:w="2"/><text x="29.4054%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="29.1554%" y="533" width="0.0139%" height="15" fill="rgb(206,144,31)" fg:x="4194" fg:w="2"/><text x="29.4054%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.03%)</title><rect x="29.2388%" y="517" width="0.0278%" height="15" fill="rgb(224,200,26)" fg:x="4206" fg:w="4"/><text x="29.4888%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.05%)</title><rect x="29.2249%" y="533" width="0.0487%" height="15" fill="rgb(247,104,53)" fg:x="4204" fg:w="7"/><text x="29.4749%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.08%)</title><rect x="29.2944%" y="517" width="0.0765%" height="15" fill="rgb(220,14,17)" fg:x="4214" fg:w="11"/><text x="29.5444%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (28 samples, 0.19%)</title><rect x="29.1971%" y="581" width="0.1946%" height="15" fill="rgb(230,140,40)" fg:x="4200" fg:w="28"/><text x="29.4471%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (28 samples, 0.19%)</title><rect x="29.1971%" y="565" width="0.1946%" height="15" fill="rgb(229,2,41)" fg:x="4200" fg:w="28"/><text x="29.4471%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (28 samples, 0.19%)</title><rect x="29.1971%" y="549" width="0.1946%" height="15" fill="rgb(232,89,16)" fg:x="4200" fg:w="28"/><text x="29.4471%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (17 samples, 0.12%)</title><rect x="29.2735%" y="533" width="0.1182%" height="15" fill="rgb(247,59,52)" fg:x="4211" fg:w="17"/><text x="29.5235%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.02%)</title><rect x="29.3709%" y="517" width="0.0209%" height="15" fill="rgb(226,110,21)" fg:x="4225" fg:w="3"/><text x="29.6209%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.04%)</title><rect x="29.3917%" y="581" width="0.0417%" height="15" fill="rgb(224,176,43)" fg:x="4228" fg:w="6"/><text x="29.6417%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (6 samples, 0.04%)</title><rect x="29.3917%" y="565" width="0.0417%" height="15" fill="rgb(221,73,6)" fg:x="4228" fg:w="6"/><text x="29.6417%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (6 samples, 0.04%)</title><rect x="29.3917%" y="549" width="0.0417%" height="15" fill="rgb(232,78,19)" fg:x="4228" fg:w="6"/><text x="29.6417%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (6 samples, 0.04%)</title><rect x="29.3917%" y="533" width="0.0417%" height="15" fill="rgb(233,112,48)" fg:x="4228" fg:w="6"/><text x="29.6417%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.03%)</title><rect x="29.4543%" y="469" width="0.0348%" height="15" fill="rgb(243,131,47)" fg:x="4237" fg:w="5"/><text x="29.7043%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="29.4751%" y="453" width="0.0139%" height="15" fill="rgb(226,51,1)" fg:x="4240" fg:w="2"/><text x="29.7251%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (43 samples, 0.30%)</title><rect x="29.1971%" y="597" width="0.2989%" height="15" fill="rgb(247,58,7)" fg:x="4200" fg:w="43"/><text x="29.4471%" y="607.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (9 samples, 0.06%)</title><rect x="29.4334%" y="581" width="0.0626%" height="15" fill="rgb(209,7,32)" fg:x="4234" fg:w="9"/><text x="29.6834%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (8 samples, 0.06%)</title><rect x="29.4404%" y="565" width="0.0556%" height="15" fill="rgb(209,39,41)" fg:x="4235" fg:w="8"/><text x="29.6904%" y="575.50"></text></g><g><title>core::hash::Hasher::write_isize (8 samples, 0.06%)</title><rect x="29.4404%" y="549" width="0.0556%" height="15" fill="rgb(226,182,46)" fg:x="4235" fg:w="8"/><text x="29.6904%" y="559.50"></text></g><g><title>core::hash::Hasher::write_usize (8 samples, 0.06%)</title><rect x="29.4404%" y="533" width="0.0556%" height="15" fill="rgb(230,219,10)" fg:x="4235" fg:w="8"/><text x="29.6904%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.06%)</title><rect x="29.4404%" y="517" width="0.0556%" height="15" fill="rgb(227,175,30)" fg:x="4235" fg:w="8"/><text x="29.6904%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.06%)</title><rect x="29.4404%" y="501" width="0.0556%" height="15" fill="rgb(217,2,50)" fg:x="4235" fg:w="8"/><text x="29.6904%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.06%)</title><rect x="29.4404%" y="485" width="0.0556%" height="15" fill="rgb(229,160,0)" fg:x="4235" fg:w="8"/><text x="29.6904%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="29.5099%" y="565" width="0.0278%" height="15" fill="rgb(207,78,37)" fg:x="4245" fg:w="4"/><text x="29.7599%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="29.5099%" y="549" width="0.0278%" height="15" fill="rgb(225,57,0)" fg:x="4245" fg:w="4"/><text x="29.7599%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="29.5238%" y="533" width="0.0139%" height="15" fill="rgb(232,154,2)" fg:x="4247" fg:w="2"/><text x="29.7738%" y="543.50"></text></g><g><title>y2021::d18::main::Snail::has (59 samples, 0.41%)</title><rect x="29.1693%" y="661" width="0.4101%" height="15" fill="rgb(241,212,25)" fg:x="4196" fg:w="59"/><text x="29.4193%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (59 samples, 0.41%)</title><rect x="29.1693%" y="645" width="0.4101%" height="15" fill="rgb(226,69,20)" fg:x="4196" fg:w="59"/><text x="29.4193%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (59 samples, 0.41%)</title><rect x="29.1693%" y="629" width="0.4101%" height="15" fill="rgb(247,184,54)" fg:x="4196" fg:w="59"/><text x="29.4193%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (57 samples, 0.40%)</title><rect x="29.1832%" y="613" width="0.3962%" height="15" fill="rgb(210,145,0)" fg:x="4198" fg:w="57"/><text x="29.4332%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.08%)</title><rect x="29.4960%" y="597" width="0.0834%" height="15" fill="rgb(253,82,12)" fg:x="4243" fg:w="12"/><text x="29.7460%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.08%)</title><rect x="29.4960%" y="581" width="0.0834%" height="15" fill="rgb(245,42,11)" fg:x="4243" fg:w="12"/><text x="29.7460%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.04%)</title><rect x="29.5377%" y="565" width="0.0417%" height="15" fill="rgb(219,147,32)" fg:x="4249" fg:w="6"/><text x="29.7877%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.04%)</title><rect x="29.5377%" y="549" width="0.0417%" height="15" fill="rgb(246,12,7)" fg:x="4249" fg:w="6"/><text x="29.7877%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.04%)</title><rect x="29.5377%" y="533" width="0.0417%" height="15" fill="rgb(243,50,9)" fg:x="4249" fg:w="6"/><text x="29.7877%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.03%)</title><rect x="29.5447%" y="517" width="0.0348%" height="15" fill="rgb(219,149,6)" fg:x="4250" fg:w="5"/><text x="29.7947%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.03%)</title><rect x="29.5447%" y="501" width="0.0348%" height="15" fill="rgb(241,51,42)" fg:x="4250" fg:w="5"/><text x="29.7947%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.03%)</title><rect x="29.5447%" y="485" width="0.0348%" height="15" fill="rgb(226,128,27)" fg:x="4250" fg:w="5"/><text x="29.7947%" y="495.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.03%)</title><rect x="29.5447%" y="469" width="0.0348%" height="15" fill="rgb(244,144,4)" fg:x="4250" fg:w="5"/><text x="29.7947%" y="479.50"></text></g><g><title>y2021::d18::main::Snail::has (2 samples, 0.01%)</title><rect x="29.5864%" y="645" width="0.0139%" height="15" fill="rgb(221,4,13)" fg:x="4256" fg:w="2"/><text x="29.8364%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.01%)</title><rect x="29.5864%" y="629" width="0.0139%" height="15" fill="rgb(208,170,28)" fg:x="4256" fg:w="2"/><text x="29.8364%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.01%)</title><rect x="29.5864%" y="613" width="0.0139%" height="15" fill="rgb(226,131,13)" fg:x="4256" fg:w="2"/><text x="29.8364%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.01%)</title><rect x="29.5864%" y="597" width="0.0139%" height="15" fill="rgb(215,72,41)" fg:x="4256" fg:w="2"/><text x="29.8364%" y="607.50"></text></g><g><title>y2021::d18::main::Snail::explode (72 samples, 0.50%)</title><rect x="29.1276%" y="677" width="0.5005%" height="15" fill="rgb(243,108,20)" fg:x="4190" fg:w="72"/><text x="29.3776%" y="687.50"></text></g><g><title>y2021::d18::main::Snail::prune (7 samples, 0.05%)</title><rect x="29.5794%" y="661" width="0.0487%" height="15" fill="rgb(230,189,17)" fg:x="4255" fg:w="7"/><text x="29.8294%" y="671.50"></text></g><g><title>y2021::d18::main::Snail::remove (4 samples, 0.03%)</title><rect x="29.6003%" y="645" width="0.0278%" height="15" fill="rgb(220,50,17)" fg:x="4258" fg:w="4"/><text x="29.8503%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (4 samples, 0.03%)</title><rect x="29.6003%" y="629" width="0.0278%" height="15" fill="rgb(248,152,48)" fg:x="4258" fg:w="4"/><text x="29.8503%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (4 samples, 0.03%)</title><rect x="29.6003%" y="613" width="0.0278%" height="15" fill="rgb(244,91,11)" fg:x="4258" fg:w="4"/><text x="29.8503%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (3 samples, 0.02%)</title><rect x="29.6072%" y="597" width="0.0209%" height="15" fill="rgb(220,157,5)" fg:x="4259" fg:w="3"/><text x="29.8572%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2 samples, 0.01%)</title><rect x="29.6142%" y="581" width="0.0139%" height="15" fill="rgb(253,137,8)" fg:x="4260" fg:w="2"/><text x="29.8642%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="29.6628%" y="533" width="0.0139%" height="15" fill="rgb(217,137,51)" fg:x="4267" fg:w="2"/><text x="29.9128%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="29.6420%" y="597" width="0.0487%" height="15" fill="rgb(218,209,53)" fg:x="4264" fg:w="7"/><text x="29.8920%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="29.6420%" y="581" width="0.0487%" height="15" fill="rgb(249,137,25)" fg:x="4264" fg:w="7"/><text x="29.8920%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="29.6420%" y="565" width="0.0487%" height="15" fill="rgb(239,155,26)" fg:x="4264" fg:w="7"/><text x="29.8920%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.03%)</title><rect x="29.6559%" y="549" width="0.0348%" height="15" fill="rgb(227,85,46)" fg:x="4266" fg:w="5"/><text x="29.9059%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="29.6767%" y="533" width="0.0139%" height="15" fill="rgb(251,107,43)" fg:x="4269" fg:w="2"/><text x="29.9267%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.07%)</title><rect x="29.6350%" y="613" width="0.0695%" height="15" fill="rgb(234,170,33)" fg:x="4263" fg:w="10"/><text x="29.8850%" y="623.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="29.6906%" y="597" width="0.0139%" height="15" fill="rgb(206,29,35)" fg:x="4271" fg:w="2"/><text x="29.9406%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="29.7185%" y="581" width="0.0139%" height="15" fill="rgb(227,138,25)" fg:x="4275" fg:w="2"/><text x="29.9685%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="29.7185%" y="565" width="0.0139%" height="15" fill="rgb(249,131,35)" fg:x="4275" fg:w="2"/><text x="29.9685%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="29.7185%" y="549" width="0.0139%" height="15" fill="rgb(239,6,40)" fg:x="4275" fg:w="2"/><text x="29.9685%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (3 samples, 0.02%)</title><rect x="29.7324%" y="581" width="0.0209%" height="15" fill="rgb(246,136,47)" fg:x="4277" fg:w="3"/><text x="29.9824%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (3 samples, 0.02%)</title><rect x="29.7324%" y="565" width="0.0209%" height="15" fill="rgb(253,58,26)" fg:x="4277" fg:w="3"/><text x="29.9824%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.02%)</title><rect x="29.7324%" y="549" width="0.0209%" height="15" fill="rgb(237,141,10)" fg:x="4277" fg:w="3"/><text x="29.9824%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.02%)</title><rect x="29.7324%" y="533" width="0.0209%" height="15" fill="rgb(234,156,12)" fg:x="4277" fg:w="3"/><text x="29.9824%" y="543.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (21 samples, 0.15%)</title><rect x="29.6281%" y="677" width="0.1460%" height="15" fill="rgb(243,224,36)" fg:x="4262" fg:w="21"/><text x="29.8781%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (21 samples, 0.15%)</title><rect x="29.6281%" y="661" width="0.1460%" height="15" fill="rgb(205,229,51)" fg:x="4262" fg:w="21"/><text x="29.8781%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (21 samples, 0.15%)</title><rect x="29.6281%" y="645" width="0.1460%" height="15" fill="rgb(223,189,4)" fg:x="4262" fg:w="21"/><text x="29.8781%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (21 samples, 0.15%)</title><rect x="29.6281%" y="629" width="0.1460%" height="15" fill="rgb(249,167,54)" fg:x="4262" fg:w="21"/><text x="29.8781%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 0.07%)</title><rect x="29.7046%" y="613" width="0.0695%" height="15" fill="rgb(218,34,28)" fg:x="4273" fg:w="10"/><text x="29.9546%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.07%)</title><rect x="29.7046%" y="597" width="0.0695%" height="15" fill="rgb(232,109,42)" fg:x="4273" fg:w="10"/><text x="29.9546%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.02%)</title><rect x="29.7532%" y="581" width="0.0209%" height="15" fill="rgb(248,214,46)" fg:x="4280" fg:w="3"/><text x="30.0032%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.02%)</title><rect x="29.7532%" y="565" width="0.0209%" height="15" fill="rgb(244,216,40)" fg:x="4280" fg:w="3"/><text x="30.0032%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.02%)</title><rect x="29.7532%" y="549" width="0.0209%" height="15" fill="rgb(231,226,31)" fg:x="4280" fg:w="3"/><text x="30.0032%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.01%)</title><rect x="29.7602%" y="533" width="0.0139%" height="15" fill="rgb(238,38,43)" fg:x="4281" fg:w="2"/><text x="30.0102%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.01%)</title><rect x="29.7602%" y="517" width="0.0139%" height="15" fill="rgb(208,88,43)" fg:x="4281" fg:w="2"/><text x="30.0102%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.01%)</title><rect x="29.7602%" y="501" width="0.0139%" height="15" fill="rgb(205,136,37)" fg:x="4281" fg:w="2"/><text x="30.0102%" y="511.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.01%)</title><rect x="29.7602%" y="485" width="0.0139%" height="15" fill="rgb(237,34,14)" fg:x="4281" fg:w="2"/><text x="30.0102%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.04%)</title><rect x="29.8227%" y="533" width="0.0417%" height="15" fill="rgb(236,193,44)" fg:x="4290" fg:w="6"/><text x="30.0727%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.10%)</title><rect x="29.7880%" y="597" width="0.1043%" height="15" fill="rgb(231,48,10)" fg:x="4285" fg:w="15"/><text x="30.0380%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.10%)</title><rect x="29.7880%" y="581" width="0.1043%" height="15" fill="rgb(213,141,34)" fg:x="4285" fg:w="15"/><text x="30.0380%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.10%)</title><rect x="29.7880%" y="565" width="0.1043%" height="15" fill="rgb(249,130,34)" fg:x="4285" fg:w="15"/><text x="30.0380%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (12 samples, 0.08%)</title><rect x="29.8088%" y="549" width="0.0834%" height="15" fill="rgb(219,42,41)" fg:x="4288" fg:w="12"/><text x="30.0588%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.03%)</title><rect x="29.8644%" y="533" width="0.0278%" height="15" fill="rgb(224,100,54)" fg:x="4296" fg:w="4"/><text x="30.1144%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (20 samples, 0.14%)</title><rect x="29.7880%" y="613" width="0.1390%" height="15" fill="rgb(229,200,27)" fg:x="4285" fg:w="20"/><text x="30.0380%" y="623.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (4 samples, 0.03%)</title><rect x="29.8992%" y="597" width="0.0278%" height="15" fill="rgb(217,118,10)" fg:x="4301" fg:w="4"/><text x="30.1492%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (4 samples, 0.03%)</title><rect x="29.8992%" y="581" width="0.0278%" height="15" fill="rgb(206,22,3)" fg:x="4301" fg:w="4"/><text x="30.1492%" y="591.50"></text></g><g><title>core::hash::Hasher::write_isize (4 samples, 0.03%)</title><rect x="29.8992%" y="565" width="0.0278%" height="15" fill="rgb(232,163,46)" fg:x="4301" fg:w="4"/><text x="30.1492%" y="575.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 0.03%)</title><rect x="29.8992%" y="549" width="0.0278%" height="15" fill="rgb(206,95,13)" fg:x="4301" fg:w="4"/><text x="30.1492%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="29.8992%" y="533" width="0.0278%" height="15" fill="rgb(253,154,18)" fg:x="4301" fg:w="4"/><text x="30.1492%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="29.8992%" y="517" width="0.0278%" height="15" fill="rgb(219,32,23)" fg:x="4301" fg:w="4"/><text x="30.1492%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.03%)</title><rect x="29.8992%" y="501" width="0.0278%" height="15" fill="rgb(230,191,45)" fg:x="4301" fg:w="4"/><text x="30.1492%" y="511.50"></text></g><g><title>y2021::d18::main::Snail::explode (129 samples, 0.90%)</title><rect x="29.1206%" y="693" width="0.8968%" height="15" fill="rgb(229,64,36)" fg:x="4189" fg:w="129"/><text x="29.3706%" y="703.50"></text></g><g><title>y2021::d18::main::Snail::has (35 samples, 0.24%)</title><rect x="29.7741%" y="677" width="0.2433%" height="15" fill="rgb(205,129,25)" fg:x="4283" fg:w="35"/><text x="30.0241%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (35 samples, 0.24%)</title><rect x="29.7741%" y="661" width="0.2433%" height="15" fill="rgb(254,112,7)" fg:x="4283" fg:w="35"/><text x="30.0241%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (35 samples, 0.24%)</title><rect x="29.7741%" y="645" width="0.2433%" height="15" fill="rgb(226,53,48)" fg:x="4283" fg:w="35"/><text x="30.0241%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (35 samples, 0.24%)</title><rect x="29.7741%" y="629" width="0.2433%" height="15" fill="rgb(214,153,38)" fg:x="4283" fg:w="35"/><text x="30.0241%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.09%)</title><rect x="29.9270%" y="613" width="0.0904%" height="15" fill="rgb(243,101,7)" fg:x="4305" fg:w="13"/><text x="30.1770%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.09%)</title><rect x="29.9270%" y="597" width="0.0904%" height="15" fill="rgb(240,140,22)" fg:x="4305" fg:w="13"/><text x="30.1770%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.03%)</title><rect x="29.9826%" y="581" width="0.0348%" height="15" fill="rgb(235,114,2)" fg:x="4313" fg:w="5"/><text x="30.2326%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.03%)</title><rect x="29.9826%" y="565" width="0.0348%" height="15" fill="rgb(242,59,12)" fg:x="4313" fg:w="5"/><text x="30.2326%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.03%)</title><rect x="29.9826%" y="549" width="0.0348%" height="15" fill="rgb(252,134,9)" fg:x="4313" fg:w="5"/><text x="30.2326%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.03%)</title><rect x="29.9896%" y="533" width="0.0278%" height="15" fill="rgb(236,4,44)" fg:x="4314" fg:w="4"/><text x="30.2396%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.03%)</title><rect x="29.9896%" y="517" width="0.0278%" height="15" fill="rgb(254,172,41)" fg:x="4314" fg:w="4"/><text x="30.2396%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.03%)</title><rect x="29.9896%" y="501" width="0.0278%" height="15" fill="rgb(244,63,20)" fg:x="4314" fg:w="4"/><text x="30.2396%" y="511.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4 samples, 0.03%)</title><rect x="29.9896%" y="485" width="0.0278%" height="15" fill="rgb(250,73,31)" fg:x="4314" fg:w="4"/><text x="30.2396%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.03%)</title><rect x="30.0174%" y="629" width="0.0278%" height="15" fill="rgb(241,38,36)" fg:x="4318" fg:w="4"/><text x="30.2674%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="30.0174%" y="613" width="0.0278%" height="15" fill="rgb(245,211,2)" fg:x="4318" fg:w="4"/><text x="30.2674%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="30.0174%" y="597" width="0.0278%" height="15" fill="rgb(206,120,28)" fg:x="4318" fg:w="4"/><text x="30.2674%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="30.0174%" y="581" width="0.0278%" height="15" fill="rgb(211,59,34)" fg:x="4318" fg:w="4"/><text x="30.2674%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="30.0313%" y="565" width="0.0139%" height="15" fill="rgb(233,168,5)" fg:x="4320" fg:w="2"/><text x="30.2813%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="30.0452%" y="597" width="0.0209%" height="15" fill="rgb(234,33,13)" fg:x="4322" fg:w="3"/><text x="30.2952%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="30.0452%" y="581" width="0.0209%" height="15" fill="rgb(231,150,26)" fg:x="4322" fg:w="3"/><text x="30.2952%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="30.0521%" y="565" width="0.0139%" height="15" fill="rgb(217,191,4)" fg:x="4323" fg:w="2"/><text x="30.3021%" y="575.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (8 samples, 0.06%)</title><rect x="30.0174%" y="693" width="0.0556%" height="15" fill="rgb(246,198,38)" fg:x="4318" fg:w="8"/><text x="30.2674%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (8 samples, 0.06%)</title><rect x="30.0174%" y="677" width="0.0556%" height="15" fill="rgb(245,64,37)" fg:x="4318" fg:w="8"/><text x="30.2674%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (8 samples, 0.06%)</title><rect x="30.0174%" y="661" width="0.0556%" height="15" fill="rgb(250,30,36)" fg:x="4318" fg:w="8"/><text x="30.2674%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (8 samples, 0.06%)</title><rect x="30.0174%" y="645" width="0.0556%" height="15" fill="rgb(217,86,53)" fg:x="4318" fg:w="8"/><text x="30.2674%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.03%)</title><rect x="30.0452%" y="629" width="0.0278%" height="15" fill="rgb(228,157,16)" fg:x="4322" fg:w="4"/><text x="30.2952%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.03%)</title><rect x="30.0452%" y="613" width="0.0278%" height="15" fill="rgb(217,59,31)" fg:x="4322" fg:w="4"/><text x="30.2952%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="30.0799%" y="565" width="0.0139%" height="15" fill="rgb(237,138,41)" fg:x="4327" fg:w="2"/><text x="30.3299%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="30.0799%" y="549" width="0.0139%" height="15" fill="rgb(227,91,49)" fg:x="4327" fg:w="2"/><text x="30.3299%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="30.0730%" y="613" width="0.0487%" height="15" fill="rgb(247,21,44)" fg:x="4326" fg:w="7"/><text x="30.3230%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="30.0730%" y="597" width="0.0487%" height="15" fill="rgb(219,210,51)" fg:x="4326" fg:w="7"/><text x="30.3230%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="30.0730%" y="581" width="0.0487%" height="15" fill="rgb(209,140,6)" fg:x="4326" fg:w="7"/><text x="30.3230%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.03%)</title><rect x="30.0938%" y="565" width="0.0278%" height="15" fill="rgb(221,188,24)" fg:x="4329" fg:w="4"/><text x="30.3438%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="30.1078%" y="549" width="0.0139%" height="15" fill="rgb(232,154,20)" fg:x="4331" fg:w="2"/><text x="30.3578%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.01%)</title><rect x="30.1217%" y="613" width="0.0139%" height="15" fill="rgb(244,137,50)" fg:x="4333" fg:w="2"/><text x="30.3717%" y="623.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.01%)</title><rect x="30.1217%" y="597" width="0.0139%" height="15" fill="rgb(225,185,43)" fg:x="4333" fg:w="2"/><text x="30.3717%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.01%)</title><rect x="30.1217%" y="581" width="0.0139%" height="15" fill="rgb(213,205,38)" fg:x="4333" fg:w="2"/><text x="30.3717%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.01%)</title><rect x="30.1217%" y="565" width="0.0139%" height="15" fill="rgb(236,73,12)" fg:x="4333" fg:w="2"/><text x="30.3717%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.07%)</title><rect x="30.0730%" y="629" width="0.0695%" height="15" fill="rgb(235,219,13)" fg:x="4326" fg:w="10"/><text x="30.3230%" y="639.50"></text></g><g><title>y2021::d18::main::Snail::explode (156 samples, 1.08%)</title><rect x="29.0998%" y="709" width="1.0845%" height="15" fill="rgb(218,59,36)" fg:x="4186" fg:w="156"/><text x="29.3498%" y="719.50"></text></g><g><title>y2021::d18::main::Snail::has (16 samples, 0.11%)</title><rect x="30.0730%" y="693" width="0.1112%" height="15" fill="rgb(205,110,39)" fg:x="4326" fg:w="16"/><text x="30.3230%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (16 samples, 0.11%)</title><rect x="30.0730%" y="677" width="0.1112%" height="15" fill="rgb(218,206,42)" fg:x="4326" fg:w="16"/><text x="30.3230%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (16 samples, 0.11%)</title><rect x="30.0730%" y="661" width="0.1112%" height="15" fill="rgb(248,125,24)" fg:x="4326" fg:w="16"/><text x="30.3230%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 0.11%)</title><rect x="30.0730%" y="645" width="0.1112%" height="15" fill="rgb(242,28,27)" fg:x="4326" fg:w="16"/><text x="30.3230%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.04%)</title><rect x="30.1425%" y="629" width="0.0417%" height="15" fill="rgb(216,228,15)" fg:x="4336" fg:w="6"/><text x="30.3925%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.04%)</title><rect x="30.1425%" y="613" width="0.0417%" height="15" fill="rgb(235,116,46)" fg:x="4336" fg:w="6"/><text x="30.3925%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.02%)</title><rect x="30.1634%" y="597" width="0.0209%" height="15" fill="rgb(224,18,32)" fg:x="4339" fg:w="3"/><text x="30.4134%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.02%)</title><rect x="30.1634%" y="581" width="0.0209%" height="15" fill="rgb(252,5,12)" fg:x="4339" fg:w="3"/><text x="30.4134%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.02%)</title><rect x="30.1634%" y="565" width="0.0209%" height="15" fill="rgb(251,36,5)" fg:x="4339" fg:w="3"/><text x="30.4134%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.02%)</title><rect x="30.1634%" y="549" width="0.0209%" height="15" fill="rgb(217,53,14)" fg:x="4339" fg:w="3"/><text x="30.4134%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.02%)</title><rect x="30.1634%" y="533" width="0.0209%" height="15" fill="rgb(215,86,45)" fg:x="4339" fg:w="3"/><text x="30.4134%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.02%)</title><rect x="30.1634%" y="517" width="0.0209%" height="15" fill="rgb(242,169,11)" fg:x="4339" fg:w="3"/><text x="30.4134%" y="527.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.02%)</title><rect x="30.1634%" y="501" width="0.0209%" height="15" fill="rgb(211,213,45)" fg:x="4339" fg:w="3"/><text x="30.4134%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="30.1842%" y="645" width="0.0139%" height="15" fill="rgb(205,88,11)" fg:x="4342" fg:w="2"/><text x="30.4342%" y="655.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (6 samples, 0.04%)</title><rect x="30.1842%" y="709" width="0.0417%" height="15" fill="rgb(252,69,26)" fg:x="4342" fg:w="6"/><text x="30.4342%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (6 samples, 0.04%)</title><rect x="30.1842%" y="693" width="0.0417%" height="15" fill="rgb(246,123,37)" fg:x="4342" fg:w="6"/><text x="30.4342%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (6 samples, 0.04%)</title><rect x="30.1842%" y="677" width="0.0417%" height="15" fill="rgb(212,205,5)" fg:x="4342" fg:w="6"/><text x="30.4342%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (6 samples, 0.04%)</title><rect x="30.1842%" y="661" width="0.0417%" height="15" fill="rgb(253,148,0)" fg:x="4342" fg:w="6"/><text x="30.4342%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.03%)</title><rect x="30.1981%" y="645" width="0.0278%" height="15" fill="rgb(239,22,4)" fg:x="4344" fg:w="4"/><text x="30.4481%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.03%)</title><rect x="30.1981%" y="629" width="0.0278%" height="15" fill="rgb(226,26,53)" fg:x="4344" fg:w="4"/><text x="30.4481%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.01%)</title><rect x="30.2120%" y="613" width="0.0139%" height="15" fill="rgb(225,229,45)" fg:x="4346" fg:w="2"/><text x="30.4620%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.01%)</title><rect x="30.2120%" y="597" width="0.0139%" height="15" fill="rgb(220,60,37)" fg:x="4346" fg:w="2"/><text x="30.4620%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.01%)</title><rect x="30.2120%" y="581" width="0.0139%" height="15" fill="rgb(217,180,35)" fg:x="4346" fg:w="2"/><text x="30.4620%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.01%)</title><rect x="30.2120%" y="565" width="0.0139%" height="15" fill="rgb(229,7,53)" fg:x="4346" fg:w="2"/><text x="30.4620%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.01%)</title><rect x="30.2120%" y="549" width="0.0139%" height="15" fill="rgb(254,137,3)" fg:x="4346" fg:w="2"/><text x="30.4620%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.01%)</title><rect x="30.2120%" y="533" width="0.0139%" height="15" fill="rgb(215,140,41)" fg:x="4346" fg:w="2"/><text x="30.4620%" y="543.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.01%)</title><rect x="30.2120%" y="517" width="0.0139%" height="15" fill="rgb(250,80,15)" fg:x="4346" fg:w="2"/><text x="30.4620%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="30.2259%" y="629" width="0.0139%" height="15" fill="rgb(252,191,6)" fg:x="4348" fg:w="2"/><text x="30.4759%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="30.2259%" y="613" width="0.0139%" height="15" fill="rgb(246,217,18)" fg:x="4348" fg:w="2"/><text x="30.4759%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="30.2259%" y="597" width="0.0139%" height="15" fill="rgb(223,93,7)" fg:x="4348" fg:w="2"/><text x="30.4759%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="30.2259%" y="581" width="0.0139%" height="15" fill="rgb(225,55,52)" fg:x="4348" fg:w="2"/><text x="30.4759%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="30.2259%" y="565" width="0.0139%" height="15" fill="rgb(240,31,24)" fg:x="4348" fg:w="2"/><text x="30.4759%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.03%)</title><rect x="30.2259%" y="645" width="0.0278%" height="15" fill="rgb(205,56,52)" fg:x="4348" fg:w="4"/><text x="30.4759%" y="655.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="30.2398%" y="629" width="0.0139%" height="15" fill="rgb(246,146,12)" fg:x="4350" fg:w="2"/><text x="30.4898%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.01%)</title><rect x="30.2398%" y="613" width="0.0139%" height="15" fill="rgb(239,84,36)" fg:x="4350" fg:w="2"/><text x="30.4898%" y="623.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.01%)</title><rect x="30.2398%" y="597" width="0.0139%" height="15" fill="rgb(207,41,40)" fg:x="4350" fg:w="2"/><text x="30.4898%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.01%)</title><rect x="30.2398%" y="581" width="0.0139%" height="15" fill="rgb(241,179,25)" fg:x="4350" fg:w="2"/><text x="30.4898%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="30.2398%" y="565" width="0.0139%" height="15" fill="rgb(210,0,34)" fg:x="4350" fg:w="2"/><text x="30.4898%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="30.2398%" y="549" width="0.0139%" height="15" fill="rgb(225,217,29)" fg:x="4350" fg:w="2"/><text x="30.4898%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="30.2398%" y="533" width="0.0139%" height="15" fill="rgb(216,191,38)" fg:x="4350" fg:w="2"/><text x="30.4898%" y="543.50"></text></g><g><title>y2021::d18::main::Snail::explode (170 samples, 1.18%)</title><rect x="29.0928%" y="725" width="1.1818%" height="15" fill="rgb(232,140,52)" fg:x="4185" fg:w="170"/><text x="29.3428%" y="735.50"></text></g><g><title>y2021::d18::main::Snail::has (7 samples, 0.05%)</title><rect x="30.2259%" y="709" width="0.0487%" height="15" fill="rgb(223,158,51)" fg:x="4348" fg:w="7"/><text x="30.4759%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (7 samples, 0.05%)</title><rect x="30.2259%" y="693" width="0.0487%" height="15" fill="rgb(235,29,51)" fg:x="4348" fg:w="7"/><text x="30.4759%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (7 samples, 0.05%)</title><rect x="30.2259%" y="677" width="0.0487%" height="15" fill="rgb(215,181,18)" fg:x="4348" fg:w="7"/><text x="30.4759%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.05%)</title><rect x="30.2259%" y="661" width="0.0487%" height="15" fill="rgb(227,125,34)" fg:x="4348" fg:w="7"/><text x="30.4759%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.02%)</title><rect x="30.2537%" y="645" width="0.0209%" height="15" fill="rgb(230,197,49)" fg:x="4352" fg:w="3"/><text x="30.5037%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="30.2537%" y="629" width="0.0209%" height="15" fill="rgb(239,141,16)" fg:x="4352" fg:w="3"/><text x="30.5037%" y="639.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (2 samples, 0.01%)</title><rect x="30.2746%" y="709" width="0.0139%" height="15" fill="rgb(225,105,43)" fg:x="4355" fg:w="2"/><text x="30.5246%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.01%)</title><rect x="30.2746%" y="693" width="0.0139%" height="15" fill="rgb(214,131,14)" fg:x="4355" fg:w="2"/><text x="30.5246%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2 samples, 0.01%)</title><rect x="30.2746%" y="677" width="0.0139%" height="15" fill="rgb(229,177,11)" fg:x="4355" fg:w="2"/><text x="30.5246%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (2 samples, 0.01%)</title><rect x="30.2746%" y="661" width="0.0139%" height="15" fill="rgb(231,180,14)" fg:x="4355" fg:w="2"/><text x="30.5246%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="30.2885%" y="629" width="0.0139%" height="15" fill="rgb(232,88,2)" fg:x="4357" fg:w="2"/><text x="30.5385%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="30.2885%" y="613" width="0.0139%" height="15" fill="rgb(205,220,8)" fg:x="4357" fg:w="2"/><text x="30.5385%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="30.2885%" y="597" width="0.0139%" height="15" fill="rgb(225,23,53)" fg:x="4357" fg:w="2"/><text x="30.5385%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.03%)</title><rect x="30.2885%" y="645" width="0.0348%" height="15" fill="rgb(213,62,29)" fg:x="4357" fg:w="5"/><text x="30.5385%" y="655.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="30.3024%" y="629" width="0.0209%" height="15" fill="rgb(227,75,7)" fg:x="4359" fg:w="3"/><text x="30.5524%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.01%)</title><rect x="30.3094%" y="613" width="0.0139%" height="15" fill="rgb(207,105,14)" fg:x="4360" fg:w="2"/><text x="30.5594%" y="623.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.01%)</title><rect x="30.3094%" y="597" width="0.0139%" height="15" fill="rgb(245,62,29)" fg:x="4360" fg:w="2"/><text x="30.5594%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.01%)</title><rect x="30.3094%" y="581" width="0.0139%" height="15" fill="rgb(236,202,4)" fg:x="4360" fg:w="2"/><text x="30.5594%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="30.3094%" y="565" width="0.0139%" height="15" fill="rgb(250,67,1)" fg:x="4360" fg:w="2"/><text x="30.5594%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="30.3094%" y="549" width="0.0139%" height="15" fill="rgb(253,115,44)" fg:x="4360" fg:w="2"/><text x="30.5594%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="30.3094%" y="533" width="0.0139%" height="15" fill="rgb(251,139,18)" fg:x="4360" fg:w="2"/><text x="30.5594%" y="543.50"></text></g><g><title>y2021::d18::main::Snail::has (6 samples, 0.04%)</title><rect x="30.2885%" y="709" width="0.0417%" height="15" fill="rgb(218,22,32)" fg:x="4357" fg:w="6"/><text x="30.5385%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (6 samples, 0.04%)</title><rect x="30.2885%" y="693" width="0.0417%" height="15" fill="rgb(243,53,5)" fg:x="4357" fg:w="6"/><text x="30.5385%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (6 samples, 0.04%)</title><rect x="30.2885%" y="677" width="0.0417%" height="15" fill="rgb(227,56,16)" fg:x="4357" fg:w="6"/><text x="30.5385%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.04%)</title><rect x="30.2885%" y="661" width="0.0417%" height="15" fill="rgb(245,53,0)" fg:x="4357" fg:w="6"/><text x="30.5385%" y="671.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (2 samples, 0.01%)</title><rect x="30.3302%" y="693" width="0.0139%" height="15" fill="rgb(216,170,35)" fg:x="4363" fg:w="2"/><text x="30.5802%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.01%)</title><rect x="30.3302%" y="677" width="0.0139%" height="15" fill="rgb(211,200,8)" fg:x="4363" fg:w="2"/><text x="30.5802%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2 samples, 0.01%)</title><rect x="30.3302%" y="661" width="0.0139%" height="15" fill="rgb(228,204,44)" fg:x="4363" fg:w="2"/><text x="30.5802%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (2 samples, 0.01%)</title><rect x="30.3302%" y="645" width="0.0139%" height="15" fill="rgb(214,121,17)" fg:x="4363" fg:w="2"/><text x="30.5802%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="30.3302%" y="629" width="0.0139%" height="15" fill="rgb(233,64,38)" fg:x="4363" fg:w="2"/><text x="30.5802%" y="639.50"></text></g><g><title>y2021::d18::main::Snail::has (4 samples, 0.03%)</title><rect x="30.3441%" y="693" width="0.0278%" height="15" fill="rgb(253,54,19)" fg:x="4365" fg:w="4"/><text x="30.5941%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (4 samples, 0.03%)</title><rect x="30.3441%" y="677" width="0.0278%" height="15" fill="rgb(253,94,18)" fg:x="4365" fg:w="4"/><text x="30.5941%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.03%)</title><rect x="30.3441%" y="661" width="0.0278%" height="15" fill="rgb(227,57,52)" fg:x="4365" fg:w="4"/><text x="30.5941%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.03%)</title><rect x="30.3441%" y="645" width="0.0278%" height="15" fill="rgb(230,228,50)" fg:x="4365" fg:w="4"/><text x="30.5941%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.02%)</title><rect x="30.3511%" y="629" width="0.0209%" height="15" fill="rgb(217,205,27)" fg:x="4366" fg:w="3"/><text x="30.6011%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="30.3511%" y="613" width="0.0209%" height="15" fill="rgb(252,71,50)" fg:x="4366" fg:w="3"/><text x="30.6011%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="30.3858%" y="613" width="0.0139%" height="15" fill="rgb(209,86,4)" fg:x="4371" fg:w="2"/><text x="30.6358%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="30.3858%" y="597" width="0.0139%" height="15" fill="rgb(229,94,0)" fg:x="4371" fg:w="2"/><text x="30.6358%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="30.3858%" y="581" width="0.0139%" height="15" fill="rgb(252,223,21)" fg:x="4371" fg:w="2"/><text x="30.6358%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="30.3858%" y="565" width="0.0139%" height="15" fill="rgb(230,210,4)" fg:x="4371" fg:w="2"/><text x="30.6358%" y="575.50"></text></g><g><title>y2021::d18::main::Snail::has (6 samples, 0.04%)</title><rect x="30.3789%" y="677" width="0.0417%" height="15" fill="rgb(240,149,38)" fg:x="4370" fg:w="6"/><text x="30.6289%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (6 samples, 0.04%)</title><rect x="30.3789%" y="661" width="0.0417%" height="15" fill="rgb(254,105,20)" fg:x="4370" fg:w="6"/><text x="30.6289%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (6 samples, 0.04%)</title><rect x="30.3789%" y="645" width="0.0417%" height="15" fill="rgb(253,87,46)" fg:x="4370" fg:w="6"/><text x="30.6289%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.04%)</title><rect x="30.3789%" y="629" width="0.0417%" height="15" fill="rgb(253,116,33)" fg:x="4370" fg:w="6"/><text x="30.6289%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.02%)</title><rect x="30.3997%" y="613" width="0.0209%" height="15" fill="rgb(229,198,5)" fg:x="4373" fg:w="3"/><text x="30.6497%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="30.3997%" y="597" width="0.0209%" height="15" fill="rgb(242,38,37)" fg:x="4373" fg:w="3"/><text x="30.6497%" y="607.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.02%)</title><rect x="30.4206%" y="629" width="0.0209%" height="15" fill="rgb(242,69,53)" fg:x="4376" fg:w="3"/><text x="30.6706%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.01%)</title><rect x="30.4275%" y="613" width="0.0139%" height="15" fill="rgb(249,80,16)" fg:x="4377" fg:w="2"/><text x="30.6775%" y="623.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.01%)</title><rect x="30.4275%" y="597" width="0.0139%" height="15" fill="rgb(206,128,11)" fg:x="4377" fg:w="2"/><text x="30.6775%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.01%)</title><rect x="30.4275%" y="581" width="0.0139%" height="15" fill="rgb(212,35,20)" fg:x="4377" fg:w="2"/><text x="30.6775%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.01%)</title><rect x="30.4275%" y="565" width="0.0139%" height="15" fill="rgb(236,79,13)" fg:x="4377" fg:w="2"/><text x="30.6775%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.03%)</title><rect x="30.4206%" y="661" width="0.0278%" height="15" fill="rgb(233,123,3)" fg:x="4376" fg:w="4"/><text x="30.6706%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.03%)</title><rect x="30.4206%" y="645" width="0.0278%" height="15" fill="rgb(214,93,52)" fg:x="4376" fg:w="4"/><text x="30.6706%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.02%)</title><rect x="30.4692%" y="517" width="0.0209%" height="15" fill="rgb(251,37,40)" fg:x="4383" fg:w="3"/><text x="30.7192%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.04%)</title><rect x="30.4553%" y="581" width="0.0417%" height="15" fill="rgb(227,80,54)" fg:x="4381" fg:w="6"/><text x="30.7053%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.04%)</title><rect x="30.4553%" y="565" width="0.0417%" height="15" fill="rgb(254,48,11)" fg:x="4381" fg:w="6"/><text x="30.7053%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.04%)</title><rect x="30.4553%" y="549" width="0.0417%" height="15" fill="rgb(235,193,26)" fg:x="4381" fg:w="6"/><text x="30.7053%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.03%)</title><rect x="30.4623%" y="533" width="0.0348%" height="15" fill="rgb(229,99,21)" fg:x="4382" fg:w="5"/><text x="30.7123%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.05%)</title><rect x="30.4553%" y="597" width="0.0487%" height="15" fill="rgb(211,140,41)" fg:x="4381" fg:w="7"/><text x="30.7053%" y="607.50"></text></g><g><title>y2021::d18::main::p01 (210 samples, 1.46%)</title><rect x="29.0511%" y="757" width="1.4599%" height="15" fill="rgb(240,227,30)" fg:x="4179" fg:w="210"/><text x="29.3011%" y="767.50"></text></g><g><title>y2021::d18::main::Snail::reduce (205 samples, 1.43%)</title><rect x="29.0859%" y="741" width="1.4251%" height="15" fill="rgb(215,224,45)" fg:x="4184" fg:w="205"/><text x="29.3359%" y="751.50"></text></g><g><title>y2021::d18::main::Snail::split (34 samples, 0.24%)</title><rect x="30.2746%" y="725" width="0.2364%" height="15" fill="rgb(206,123,31)" fg:x="4355" fg:w="34"/><text x="30.5246%" y="735.50"></text></g><g><title>y2021::d18::main::Snail::split (26 samples, 0.18%)</title><rect x="30.3302%" y="709" width="0.1807%" height="15" fill="rgb(210,138,16)" fg:x="4363" fg:w="26"/><text x="30.5802%" y="719.50"></text></g><g><title>y2021::d18::main::Snail::split (20 samples, 0.14%)</title><rect x="30.3719%" y="693" width="0.1390%" height="15" fill="rgb(228,57,28)" fg:x="4369" fg:w="20"/><text x="30.6219%" y="703.50"></text></g><g><title>y2021::d18::main::Snail::split (13 samples, 0.09%)</title><rect x="30.4206%" y="677" width="0.0904%" height="15" fill="rgb(242,170,10)" fg:x="4376" fg:w="13"/><text x="30.6706%" y="687.50"></text></g><g><title>y2021::d18::main::Snail::has (8 samples, 0.06%)</title><rect x="30.4553%" y="661" width="0.0556%" height="15" fill="rgb(228,214,39)" fg:x="4381" fg:w="8"/><text x="30.7053%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (8 samples, 0.06%)</title><rect x="30.4553%" y="645" width="0.0556%" height="15" fill="rgb(218,179,33)" fg:x="4381" fg:w="8"/><text x="30.7053%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (8 samples, 0.06%)</title><rect x="30.4553%" y="629" width="0.0556%" height="15" fill="rgb(235,193,39)" fg:x="4381" fg:w="8"/><text x="30.7053%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.06%)</title><rect x="30.4553%" y="613" width="0.0556%" height="15" fill="rgb(219,221,36)" fg:x="4381" fg:w="8"/><text x="30.7053%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (3 samples, 0.02%)</title><rect x="30.5179%" y="229" width="0.0209%" height="15" fill="rgb(248,218,19)" fg:x="4390" fg:w="3"/><text x="30.7679%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (3 samples, 0.02%)</title><rect x="30.5179%" y="213" width="0.0209%" height="15" fill="rgb(205,50,9)" fg:x="4390" fg:w="3"/><text x="30.7679%" y="223.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (2 samples, 0.01%)</title><rect x="30.5249%" y="197" width="0.0139%" height="15" fill="rgb(238,81,28)" fg:x="4391" fg:w="2"/><text x="30.7749%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.06%)</title><rect x="30.5109%" y="245" width="0.0556%" height="15" fill="rgb(235,110,19)" fg:x="4389" fg:w="8"/><text x="30.7609%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (4 samples, 0.03%)</title><rect x="30.5388%" y="229" width="0.0278%" height="15" fill="rgb(214,7,14)" fg:x="4393" fg:w="4"/><text x="30.7888%" y="239.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (9 samples, 0.06%)</title><rect x="30.5109%" y="357" width="0.0626%" height="15" fill="rgb(211,77,3)" fg:x="4389" fg:w="9"/><text x="30.7609%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (9 samples, 0.06%)</title><rect x="30.5109%" y="341" width="0.0626%" height="15" fill="rgb(229,5,9)" fg:x="4389" fg:w="9"/><text x="30.7609%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;(y2021::d18::main::Side,y2021::d18::main::Snail)&gt; (9 samples, 0.06%)</title><rect x="30.5109%" y="325" width="0.0626%" height="15" fill="rgb(225,90,11)" fg:x="4389" fg:w="9"/><text x="30.7609%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d18::main::Snail&gt; (9 samples, 0.06%)</title><rect x="30.5109%" y="309" width="0.0626%" height="15" fill="rgb(242,56,8)" fg:x="4389" fg:w="9"/><text x="30.7609%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail&gt;&gt; (9 samples, 0.06%)</title><rect x="30.5109%" y="293" width="0.0626%" height="15" fill="rgb(249,212,39)" fg:x="4389" fg:w="9"/><text x="30.7609%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail,std::collections::hash::map::RandomState&gt;&gt; (9 samples, 0.06%)</title><rect x="30.5109%" y="277" width="0.0626%" height="15" fill="rgb(236,90,9)" fg:x="4389" fg:w="9"/><text x="30.7609%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::d18::main::Side,y2021::d18::main::Snail)&gt;&gt; (9 samples, 0.06%)</title><rect x="30.5109%" y="261" width="0.0626%" height="15" fill="rgb(206,88,35)" fg:x="4389" fg:w="9"/><text x="30.7609%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.07%)</title><rect x="30.5109%" y="389" width="0.0695%" height="15" fill="rgb(205,126,30)" fg:x="4389" fg:w="10"/><text x="30.7609%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (10 samples, 0.07%)</title><rect x="30.5109%" y="373" width="0.0695%" height="15" fill="rgb(230,176,12)" fg:x="4389" fg:w="10"/><text x="30.7609%" y="383.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="30.5805%" y="389" width="0.0139%" height="15" fill="rgb(243,19,9)" fg:x="4399" fg:w="2"/><text x="30.8305%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (13 samples, 0.09%)</title><rect x="30.5109%" y="501" width="0.0904%" height="15" fill="rgb(245,171,17)" fg:x="4389" fg:w="13"/><text x="30.7609%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (13 samples, 0.09%)</title><rect x="30.5109%" y="485" width="0.0904%" height="15" fill="rgb(227,52,21)" fg:x="4389" fg:w="13"/><text x="30.7609%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(y2021::d18::main::Side,y2021::d18::main::Snail)&gt; (13 samples, 0.09%)</title><rect x="30.5109%" y="469" width="0.0904%" height="15" fill="rgb(238,69,14)" fg:x="4389" fg:w="13"/><text x="30.7609%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d18::main::Snail&gt; (13 samples, 0.09%)</title><rect x="30.5109%" y="453" width="0.0904%" height="15" fill="rgb(241,156,39)" fg:x="4389" fg:w="13"/><text x="30.7609%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail&gt;&gt; (13 samples, 0.09%)</title><rect x="30.5109%" y="437" width="0.0904%" height="15" fill="rgb(212,227,28)" fg:x="4389" fg:w="13"/><text x="30.7609%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail,std::collections::hash::map::RandomState&gt;&gt; (13 samples, 0.09%)</title><rect x="30.5109%" y="421" width="0.0904%" height="15" fill="rgb(209,118,27)" fg:x="4389" fg:w="13"/><text x="30.7609%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::d18::main::Side,y2021::d18::main::Snail)&gt;&gt; (13 samples, 0.09%)</title><rect x="30.5109%" y="405" width="0.0904%" height="15" fill="rgb(226,102,5)" fg:x="4389" fg:w="13"/><text x="30.7609%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.10%)</title><rect x="30.5109%" y="533" width="0.0973%" height="15" fill="rgb(223,34,3)" fg:x="4389" fg:w="14"/><text x="30.7609%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (14 samples, 0.10%)</title><rect x="30.5109%" y="517" width="0.0973%" height="15" fill="rgb(221,81,38)" fg:x="4389" fg:w="14"/><text x="30.7609%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.10%)</title><rect x="30.5109%" y="677" width="0.1043%" height="15" fill="rgb(236,219,28)" fg:x="4389" fg:w="15"/><text x="30.7609%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (15 samples, 0.10%)</title><rect x="30.5109%" y="661" width="0.1043%" height="15" fill="rgb(213,200,14)" fg:x="4389" fg:w="15"/><text x="30.7609%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (15 samples, 0.10%)</title><rect x="30.5109%" y="645" width="0.1043%" height="15" fill="rgb(240,33,19)" fg:x="4389" fg:w="15"/><text x="30.7609%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (15 samples, 0.10%)</title><rect x="30.5109%" y="629" width="0.1043%" height="15" fill="rgb(233,113,27)" fg:x="4389" fg:w="15"/><text x="30.7609%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(y2021::d18::main::Side,y2021::d18::main::Snail)&gt; (15 samples, 0.10%)</title><rect x="30.5109%" y="613" width="0.1043%" height="15" fill="rgb(220,221,18)" fg:x="4389" fg:w="15"/><text x="30.7609%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d18::main::Snail&gt; (15 samples, 0.10%)</title><rect x="30.5109%" y="597" width="0.1043%" height="15" fill="rgb(238,92,8)" fg:x="4389" fg:w="15"/><text x="30.7609%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail&gt;&gt; (15 samples, 0.10%)</title><rect x="30.5109%" y="581" width="0.1043%" height="15" fill="rgb(222,164,16)" fg:x="4389" fg:w="15"/><text x="30.7609%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail,std::collections::hash::map::RandomState&gt;&gt; (15 samples, 0.10%)</title><rect x="30.5109%" y="565" width="0.1043%" height="15" fill="rgb(241,119,3)" fg:x="4389" fg:w="15"/><text x="30.7609%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::d18::main::Side,y2021::d18::main::Snail)&gt;&gt; (15 samples, 0.10%)</title><rect x="30.5109%" y="549" width="0.1043%" height="15" fill="rgb(241,44,8)" fg:x="4389" fg:w="15"/><text x="30.7609%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d18::main::Snail&gt; (17 samples, 0.12%)</title><rect x="30.5109%" y="741" width="0.1182%" height="15" fill="rgb(230,36,40)" fg:x="4389" fg:w="17"/><text x="30.7609%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail&gt;&gt; (17 samples, 0.12%)</title><rect x="30.5109%" y="725" width="0.1182%" height="15" fill="rgb(243,16,36)" fg:x="4389" fg:w="17"/><text x="30.7609%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::d18::main::Side,y2021::d18::main::Snail,std::collections::hash::map::RandomState&gt;&gt; (17 samples, 0.12%)</title><rect x="30.5109%" y="709" width="0.1182%" height="15" fill="rgb(231,4,26)" fg:x="4389" fg:w="17"/><text x="30.7609%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::d18::main::Side,y2021::d18::main::Snail)&gt;&gt; (17 samples, 0.12%)</title><rect x="30.5109%" y="693" width="0.1182%" height="15" fill="rgb(240,9,31)" fg:x="4389" fg:w="17"/><text x="30.7609%" y="703.50"></text></g><g><title>&lt;y2021::d18::main::Snail as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="30.6986%" y="677" width="0.0209%" height="15" fill="rgb(207,173,15)" fg:x="4416" fg:w="3"/><text x="30.9486%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="30.7682%" y="629" width="0.0139%" height="15" fill="rgb(224,192,53)" fg:x="4426" fg:w="2"/><text x="31.0182%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="30.7682%" y="613" width="0.0139%" height="15" fill="rgb(223,67,28)" fg:x="4426" fg:w="2"/><text x="31.0182%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="30.7682%" y="597" width="0.0139%" height="15" fill="rgb(211,20,47)" fg:x="4426" fg:w="2"/><text x="31.0182%" y="607.50"></text></g><g><title>hashbrown::map::make_insert_hash (5 samples, 0.03%)</title><rect x="30.7682%" y="645" width="0.0348%" height="15" fill="rgb(240,228,2)" fg:x="4426" fg:w="5"/><text x="31.0182%" y="655.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="30.7821%" y="629" width="0.0209%" height="15" fill="rgb(248,151,12)" fg:x="4428" fg:w="3"/><text x="31.0321%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (3 samples, 0.02%)</title><rect x="30.7821%" y="613" width="0.0209%" height="15" fill="rgb(244,8,39)" fg:x="4428" fg:w="3"/><text x="31.0321%" y="623.50"></text></g><g><title>core::hash::Hasher::write_isize (3 samples, 0.02%)</title><rect x="30.7821%" y="597" width="0.0209%" height="15" fill="rgb(222,26,8)" fg:x="4428" fg:w="3"/><text x="31.0321%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.02%)</title><rect x="30.7821%" y="581" width="0.0209%" height="15" fill="rgb(213,106,44)" fg:x="4428" fg:w="3"/><text x="31.0321%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="30.7821%" y="565" width="0.0209%" height="15" fill="rgb(214,129,20)" fg:x="4428" fg:w="3"/><text x="31.0321%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="30.7821%" y="549" width="0.0209%" height="15" fill="rgb(212,32,13)" fg:x="4428" fg:w="3"/><text x="31.0321%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="30.7821%" y="533" width="0.0209%" height="15" fill="rgb(208,168,33)" fg:x="4428" fg:w="3"/><text x="31.0321%" y="543.50"></text></g><g><title>core::mem::swap (2 samples, 0.01%)</title><rect x="30.8168%" y="581" width="0.0139%" height="15" fill="rgb(231,207,8)" fg:x="4433" fg:w="2"/><text x="31.0668%" y="591.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.01%)</title><rect x="30.8168%" y="565" width="0.0139%" height="15" fill="rgb(235,219,23)" fg:x="4433" fg:w="2"/><text x="31.0668%" y="575.50"></text></g><g><title>core::ptr::swap_nonoverlapping (2 samples, 0.01%)</title><rect x="30.8168%" y="549" width="0.0139%" height="15" fill="rgb(226,216,26)" fg:x="4433" fg:w="2"/><text x="31.0668%" y="559.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (2 samples, 0.01%)</title><rect x="30.8168%" y="533" width="0.0139%" height="15" fill="rgb(239,137,16)" fg:x="4433" fg:w="2"/><text x="31.0668%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="30.8168%" y="517" width="0.0139%" height="15" fill="rgb(207,12,36)" fg:x="4433" fg:w="2"/><text x="31.0668%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (4 samples, 0.03%)</title><rect x="30.8307%" y="549" width="0.0278%" height="15" fill="rgb(210,214,24)" fg:x="4435" fg:w="4"/><text x="31.0807%" y="559.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (4 samples, 0.03%)</title><rect x="30.8307%" y="533" width="0.0278%" height="15" fill="rgb(206,56,30)" fg:x="4435" fg:w="4"/><text x="31.0807%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.03%)</title><rect x="30.8307%" y="517" width="0.0278%" height="15" fill="rgb(228,143,26)" fg:x="4435" fg:w="4"/><text x="31.0807%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.03%)</title><rect x="30.8307%" y="501" width="0.0278%" height="15" fill="rgb(216,218,46)" fg:x="4435" fg:w="4"/><text x="31.0807%" y="511.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.03%)</title><rect x="30.8307%" y="485" width="0.0278%" height="15" fill="rgb(206,6,19)" fg:x="4435" fg:w="4"/><text x="31.0807%" y="495.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.03%)</title><rect x="30.8307%" y="469" width="0.0278%" height="15" fill="rgb(239,177,51)" fg:x="4435" fg:w="4"/><text x="31.0807%" y="479.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="30.8377%" y="453" width="0.0209%" height="15" fill="rgb(216,55,25)" fg:x="4436" fg:w="3"/><text x="31.0877%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (7 samples, 0.05%)</title><rect x="30.8168%" y="629" width="0.0487%" height="15" fill="rgb(231,163,29)" fg:x="4433" fg:w="7"/><text x="31.0668%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.05%)</title><rect x="30.8168%" y="613" width="0.0487%" height="15" fill="rgb(232,149,50)" fg:x="4433" fg:w="7"/><text x="31.0668%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (7 samples, 0.05%)</title><rect x="30.8168%" y="597" width="0.0487%" height="15" fill="rgb(223,142,48)" fg:x="4433" fg:w="7"/><text x="31.0668%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (5 samples, 0.03%)</title><rect x="30.8307%" y="581" width="0.0348%" height="15" fill="rgb(245,83,23)" fg:x="4435" fg:w="5"/><text x="31.0807%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (5 samples, 0.03%)</title><rect x="30.8307%" y="565" width="0.0348%" height="15" fill="rgb(224,63,2)" fg:x="4435" fg:w="5"/><text x="31.0807%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.01%)</title><rect x="30.8724%" y="613" width="0.0139%" height="15" fill="rgb(218,65,53)" fg:x="4441" fg:w="2"/><text x="31.1224%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (5 samples, 0.03%)</title><rect x="30.8655%" y="629" width="0.0348%" height="15" fill="rgb(221,84,29)" fg:x="4440" fg:w="5"/><text x="31.1155%" y="639.50"></text></g><g><title>&lt;y2021::d18::main::Snail as core::clone::Clone&gt;::clone (33 samples, 0.23%)</title><rect x="30.6778%" y="693" width="0.2294%" height="15" fill="rgb(234,0,32)" fg:x="4413" fg:w="33"/><text x="30.9278%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (27 samples, 0.19%)</title><rect x="30.7195%" y="677" width="0.1877%" height="15" fill="rgb(206,20,16)" fg:x="4419" fg:w="27"/><text x="30.9695%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (21 samples, 0.15%)</title><rect x="30.7612%" y="661" width="0.1460%" height="15" fill="rgb(244,172,18)" fg:x="4425" fg:w="21"/><text x="31.0112%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (14 samples, 0.10%)</title><rect x="30.8099%" y="645" width="0.0973%" height="15" fill="rgb(254,133,1)" fg:x="4432" fg:w="14"/><text x="31.0599%" y="655.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.01%)</title><rect x="30.9489%" y="629" width="0.0139%" height="15" fill="rgb(222,206,41)" fg:x="4452" fg:w="2"/><text x="31.1989%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (4 samples, 0.03%)</title><rect x="30.9420%" y="645" width="0.0278%" height="15" fill="rgb(212,3,42)" fg:x="4451" fg:w="4"/><text x="31.1920%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.06%)</title><rect x="30.9141%" y="693" width="0.0626%" height="15" fill="rgb(241,11,4)" fg:x="4447" fg:w="9"/><text x="31.1641%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.06%)</title><rect x="30.9211%" y="677" width="0.0556%" height="15" fill="rgb(205,19,26)" fg:x="4448" fg:w="8"/><text x="31.1711%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.04%)</title><rect x="30.9350%" y="661" width="0.0417%" height="15" fill="rgb(210,179,32)" fg:x="4450" fg:w="6"/><text x="31.1850%" y="671.50"></text></g><g><title>&lt;y2021::d18::main::Snail as core::clone::Clone&gt;::clone (51 samples, 0.35%)</title><rect x="30.6500%" y="709" width="0.3545%" height="15" fill="rgb(227,116,49)" fg:x="4409" fg:w="51"/><text x="30.9000%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (4 samples, 0.03%)</title><rect x="30.9767%" y="693" width="0.0278%" height="15" fill="rgb(211,146,6)" fg:x="4456" fg:w="4"/><text x="31.2267%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (4 samples, 0.03%)</title><rect x="30.9767%" y="677" width="0.0278%" height="15" fill="rgb(219,44,39)" fg:x="4456" fg:w="4"/><text x="31.2267%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (4 samples, 0.03%)</title><rect x="30.9767%" y="661" width="0.0278%" height="15" fill="rgb(234,128,11)" fg:x="4456" fg:w="4"/><text x="31.2267%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (4 samples, 0.03%)</title><rect x="30.9767%" y="645" width="0.0278%" height="15" fill="rgb(220,183,53)" fg:x="4456" fg:w="4"/><text x="31.2267%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (4 samples, 0.03%)</title><rect x="30.9767%" y="629" width="0.0278%" height="15" fill="rgb(213,219,32)" fg:x="4456" fg:w="4"/><text x="31.2267%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (3 samples, 0.02%)</title><rect x="30.9837%" y="613" width="0.0209%" height="15" fill="rgb(232,156,16)" fg:x="4457" fg:w="3"/><text x="31.2337%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.02%)</title><rect x="30.9837%" y="597" width="0.0209%" height="15" fill="rgb(246,135,34)" fg:x="4457" fg:w="3"/><text x="31.2337%" y="607.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.02%)</title><rect x="31.0393%" y="677" width="0.0209%" height="15" fill="rgb(241,99,0)" fg:x="4465" fg:w="3"/><text x="31.2893%" y="687.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="31.0462%" y="661" width="0.0139%" height="15" fill="rgb(222,103,45)" fg:x="4466" fg:w="2"/><text x="31.2962%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.01%)</title><rect x="31.0462%" y="645" width="0.0139%" height="15" fill="rgb(212,57,4)" fg:x="4466" fg:w="2"/><text x="31.2962%" y="655.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.01%)</title><rect x="31.0462%" y="629" width="0.0139%" height="15" fill="rgb(215,68,47)" fg:x="4466" fg:w="2"/><text x="31.2962%" y="639.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.01%)</title><rect x="31.0462%" y="613" width="0.0139%" height="15" fill="rgb(230,84,2)" fg:x="4466" fg:w="2"/><text x="31.2962%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="31.0462%" y="597" width="0.0139%" height="15" fill="rgb(220,102,14)" fg:x="4466" fg:w="2"/><text x="31.2962%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="31.0462%" y="581" width="0.0139%" height="15" fill="rgb(240,10,32)" fg:x="4466" fg:w="2"/><text x="31.2962%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="31.0462%" y="565" width="0.0139%" height="15" fill="rgb(215,47,27)" fg:x="4466" fg:w="2"/><text x="31.2962%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.01%)</title><rect x="31.0601%" y="677" width="0.0139%" height="15" fill="rgb(233,188,43)" fg:x="4468" fg:w="2"/><text x="31.3101%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="31.0601%" y="661" width="0.0139%" height="15" fill="rgb(253,190,1)" fg:x="4468" fg:w="2"/><text x="31.3101%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.03%)</title><rect x="31.0810%" y="661" width="0.0348%" height="15" fill="rgb(206,114,52)" fg:x="4471" fg:w="5"/><text x="31.3310%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.03%)</title><rect x="31.0810%" y="645" width="0.0348%" height="15" fill="rgb(233,120,37)" fg:x="4471" fg:w="5"/><text x="31.3310%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (4 samples, 0.03%)</title><rect x="31.0879%" y="629" width="0.0278%" height="15" fill="rgb(214,52,39)" fg:x="4472" fg:w="4"/><text x="31.3379%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (3 samples, 0.02%)</title><rect x="31.0949%" y="613" width="0.0209%" height="15" fill="rgb(223,80,29)" fg:x="4473" fg:w="3"/><text x="31.3449%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (3 samples, 0.02%)</title><rect x="31.0949%" y="597" width="0.0209%" height="15" fill="rgb(230,101,40)" fg:x="4473" fg:w="3"/><text x="31.3449%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (3 samples, 0.02%)</title><rect x="31.0949%" y="581" width="0.0209%" height="15" fill="rgb(219,211,8)" fg:x="4473" fg:w="3"/><text x="31.3449%" y="591.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.02%)</title><rect x="31.0949%" y="565" width="0.0209%" height="15" fill="rgb(252,126,28)" fg:x="4473" fg:w="3"/><text x="31.3449%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="31.0949%" y="549" width="0.0209%" height="15" fill="rgb(215,56,38)" fg:x="4473" fg:w="3"/><text x="31.3449%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="31.0949%" y="533" width="0.0209%" height="15" fill="rgb(249,55,44)" fg:x="4473" fg:w="3"/><text x="31.3449%" y="543.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="31.0949%" y="517" width="0.0209%" height="15" fill="rgb(220,221,32)" fg:x="4473" fg:w="3"/><text x="31.3449%" y="527.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="31.0949%" y="501" width="0.0209%" height="15" fill="rgb(212,216,41)" fg:x="4473" fg:w="3"/><text x="31.3449%" y="511.50"></text></g><g><title>_int_malloc (3 samples, 0.02%)</title><rect x="31.0949%" y="485" width="0.0209%" height="15" fill="rgb(228,213,43)" fg:x="4473" fg:w="3"/><text x="31.3449%" y="495.50"></text></g><g><title>&lt;y2021::d18::main::Snail as core::clone::Clone&gt;::clone (71 samples, 0.49%)</title><rect x="30.6291%" y="725" width="0.4936%" height="15" fill="rgb(211,31,26)" fg:x="4406" fg:w="71"/><text x="30.8791%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (17 samples, 0.12%)</title><rect x="31.0045%" y="709" width="0.1182%" height="15" fill="rgb(229,202,19)" fg:x="4460" fg:w="17"/><text x="31.2545%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.10%)</title><rect x="31.0254%" y="693" width="0.0973%" height="15" fill="rgb(229,105,46)" fg:x="4463" fg:w="14"/><text x="31.2754%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.05%)</title><rect x="31.0740%" y="677" width="0.0487%" height="15" fill="rgb(235,108,1)" fg:x="4470" fg:w="7"/><text x="31.3240%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="31.1505%" y="677" width="0.0209%" height="15" fill="rgb(245,111,35)" fg:x="4481" fg:w="3"/><text x="31.4005%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.02%)</title><rect x="31.1505%" y="661" width="0.0209%" height="15" fill="rgb(219,185,31)" fg:x="4481" fg:w="3"/><text x="31.4005%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.02%)</title><rect x="31.1505%" y="645" width="0.0209%" height="15" fill="rgb(214,4,43)" fg:x="4481" fg:w="3"/><text x="31.4005%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.01%)</title><rect x="31.1575%" y="629" width="0.0139%" height="15" fill="rgb(235,227,40)" fg:x="4482" fg:w="2"/><text x="31.4075%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.01%)</title><rect x="31.1575%" y="613" width="0.0139%" height="15" fill="rgb(230,88,30)" fg:x="4482" fg:w="2"/><text x="31.4075%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (2 samples, 0.01%)</title><rect x="31.1575%" y="597" width="0.0139%" height="15" fill="rgb(216,217,1)" fg:x="4482" fg:w="2"/><text x="31.4075%" y="607.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.01%)</title><rect x="31.1575%" y="581" width="0.0139%" height="15" fill="rgb(248,139,50)" fg:x="4482" fg:w="2"/><text x="31.4075%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="31.1575%" y="565" width="0.0139%" height="15" fill="rgb(233,1,21)" fg:x="4482" fg:w="2"/><text x="31.4075%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="31.1575%" y="549" width="0.0139%" height="15" fill="rgb(215,183,12)" fg:x="4482" fg:w="2"/><text x="31.4075%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="31.1575%" y="533" width="0.0139%" height="15" fill="rgb(229,104,42)" fg:x="4482" fg:w="2"/><text x="31.4075%" y="543.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="31.1575%" y="517" width="0.0139%" height="15" fill="rgb(243,34,48)" fg:x="4482" fg:w="2"/><text x="31.4075%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (8 samples, 0.06%)</title><rect x="31.1296%" y="725" width="0.0556%" height="15" fill="rgb(239,11,44)" fg:x="4478" fg:w="8"/><text x="31.3796%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.06%)</title><rect x="31.1296%" y="709" width="0.0556%" height="15" fill="rgb(231,98,35)" fg:x="4478" fg:w="8"/><text x="31.3796%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.05%)</title><rect x="31.1366%" y="693" width="0.0487%" height="15" fill="rgb(233,28,25)" fg:x="4479" fg:w="7"/><text x="31.3866%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.01%)</title><rect x="31.1714%" y="677" width="0.0139%" height="15" fill="rgb(234,123,11)" fg:x="4484" fg:w="2"/><text x="31.4214%" y="687.50"></text></g><g><title>y2021::d18::main::Snail::combine (82 samples, 0.57%)</title><rect x="30.6291%" y="741" width="0.5700%" height="15" fill="rgb(220,69,3)" fg:x="4406" fg:w="82"/><text x="30.8791%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (2 samples, 0.01%)</title><rect x="31.1853%" y="725" width="0.0139%" height="15" fill="rgb(214,64,36)" fg:x="4486" fg:w="2"/><text x="31.4353%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="31.1853%" y="709" width="0.0139%" height="15" fill="rgb(211,138,32)" fg:x="4486" fg:w="2"/><text x="31.4353%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="31.1853%" y="693" width="0.0139%" height="15" fill="rgb(213,118,47)" fg:x="4486" fg:w="2"/><text x="31.4353%" y="703.50"></text></g><g><title>std::collections::hash::map::RandomState::new (2 samples, 0.01%)</title><rect x="31.1853%" y="677" width="0.0139%" height="15" fill="rgb(243,124,49)" fg:x="4486" fg:w="2"/><text x="31.4353%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.01%)</title><rect x="31.1853%" y="661" width="0.0139%" height="15" fill="rgb(221,30,28)" fg:x="4486" fg:w="2"/><text x="31.4353%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="31.1853%" y="645" width="0.0139%" height="15" fill="rgb(246,37,13)" fg:x="4486" fg:w="2"/><text x="31.4353%" y="655.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (2 samples, 0.01%)</title><rect x="31.1853%" y="629" width="0.0139%" height="15" fill="rgb(249,66,14)" fg:x="4486" fg:w="2"/><text x="31.4353%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="31.1853%" y="613" width="0.0139%" height="15" fill="rgb(213,166,5)" fg:x="4486" fg:w="2"/><text x="31.4353%" y="623.50"></text></g><g><title>y2021::d18::main::Snail::get (2 samples, 0.01%)</title><rect x="31.1992%" y="725" width="0.0139%" height="15" fill="rgb(221,66,24)" fg:x="4488" fg:w="2"/><text x="31.4492%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.01%)</title><rect x="31.1992%" y="709" width="0.0139%" height="15" fill="rgb(210,132,17)" fg:x="4488" fg:w="2"/><text x="31.4492%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.01%)</title><rect x="31.1992%" y="693" width="0.0139%" height="15" fill="rgb(243,202,5)" fg:x="4488" fg:w="2"/><text x="31.4492%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.01%)</title><rect x="31.1992%" y="677" width="0.0139%" height="15" fill="rgb(233,70,48)" fg:x="4488" fg:w="2"/><text x="31.4492%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="31.1992%" y="661" width="0.0139%" height="15" fill="rgb(238,41,26)" fg:x="4488" fg:w="2"/><text x="31.4492%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.1992%" y="645" width="0.0139%" height="15" fill="rgb(241,19,31)" fg:x="4488" fg:w="2"/><text x="31.4492%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.1992%" y="629" width="0.0139%" height="15" fill="rgb(214,76,10)" fg:x="4488" fg:w="2"/><text x="31.4492%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.1992%" y="613" width="0.0139%" height="15" fill="rgb(254,202,22)" fg:x="4488" fg:w="2"/><text x="31.4492%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="31.1992%" y="597" width="0.0139%" height="15" fill="rgb(214,72,24)" fg:x="4488" fg:w="2"/><text x="31.4492%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="31.1992%" y="581" width="0.0139%" height="15" fill="rgb(221,92,46)" fg:x="4488" fg:w="2"/><text x="31.4492%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="31.2270%" y="581" width="0.0139%" height="15" fill="rgb(246,13,50)" fg:x="4492" fg:w="2"/><text x="31.4770%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.02%)</title><rect x="31.2270%" y="661" width="0.0209%" height="15" fill="rgb(240,165,38)" fg:x="4492" fg:w="3"/><text x="31.4770%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="31.2270%" y="645" width="0.0209%" height="15" fill="rgb(241,24,51)" fg:x="4492" fg:w="3"/><text x="31.4770%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="31.2270%" y="629" width="0.0209%" height="15" fill="rgb(227,51,44)" fg:x="4492" fg:w="3"/><text x="31.4770%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="31.2270%" y="613" width="0.0209%" height="15" fill="rgb(231,121,3)" fg:x="4492" fg:w="3"/><text x="31.4770%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.02%)</title><rect x="31.2270%" y="597" width="0.0209%" height="15" fill="rgb(245,3,41)" fg:x="4492" fg:w="3"/><text x="31.4770%" y="607.50"></text></g><g><title>y2021::d18::main::Snail::has (7 samples, 0.05%)</title><rect x="31.2131%" y="725" width="0.0487%" height="15" fill="rgb(214,13,26)" fg:x="4490" fg:w="7"/><text x="31.4631%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (7 samples, 0.05%)</title><rect x="31.2131%" y="709" width="0.0487%" height="15" fill="rgb(252,75,11)" fg:x="4490" fg:w="7"/><text x="31.4631%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (7 samples, 0.05%)</title><rect x="31.2131%" y="693" width="0.0487%" height="15" fill="rgb(218,226,17)" fg:x="4490" fg:w="7"/><text x="31.4631%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.04%)</title><rect x="31.2200%" y="677" width="0.0417%" height="15" fill="rgb(248,89,38)" fg:x="4491" fg:w="6"/><text x="31.4700%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.01%)</title><rect x="31.2478%" y="661" width="0.0139%" height="15" fill="rgb(237,73,46)" fg:x="4495" fg:w="2"/><text x="31.4978%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="31.2478%" y="645" width="0.0139%" height="15" fill="rgb(242,78,33)" fg:x="4495" fg:w="2"/><text x="31.4978%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.2687%" y="629" width="0.0139%" height="15" fill="rgb(235,60,3)" fg:x="4498" fg:w="2"/><text x="31.5187%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.2687%" y="613" width="0.0139%" height="15" fill="rgb(216,172,19)" fg:x="4498" fg:w="2"/><text x="31.5187%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.2687%" y="597" width="0.0139%" height="15" fill="rgb(227,6,42)" fg:x="4498" fg:w="2"/><text x="31.5187%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="31.2687%" y="581" width="0.0139%" height="15" fill="rgb(223,207,42)" fg:x="4498" fg:w="2"/><text x="31.5187%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.02%)</title><rect x="31.2687%" y="645" width="0.0209%" height="15" fill="rgb(246,138,30)" fg:x="4498" fg:w="3"/><text x="31.5187%" y="655.50"></text></g><g><title>y2021::d18::main::Snail::get (6 samples, 0.04%)</title><rect x="31.2617%" y="709" width="0.0417%" height="15" fill="rgb(251,199,47)" fg:x="4497" fg:w="6"/><text x="31.5117%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.04%)</title><rect x="31.2617%" y="693" width="0.0417%" height="15" fill="rgb(228,218,44)" fg:x="4497" fg:w="6"/><text x="31.5117%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.04%)</title><rect x="31.2617%" y="677" width="0.0417%" height="15" fill="rgb(220,68,6)" fg:x="4497" fg:w="6"/><text x="31.5117%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.04%)</title><rect x="31.2617%" y="661" width="0.0417%" height="15" fill="rgb(240,60,26)" fg:x="4497" fg:w="6"/><text x="31.5117%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.01%)</title><rect x="31.2895%" y="645" width="0.0139%" height="15" fill="rgb(211,200,19)" fg:x="4501" fg:w="2"/><text x="31.5395%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="31.2895%" y="629" width="0.0139%" height="15" fill="rgb(242,145,30)" fg:x="4501" fg:w="2"/><text x="31.5395%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="31.3104%" y="581" width="0.0139%" height="15" fill="rgb(225,64,13)" fg:x="4504" fg:w="2"/><text x="31.5604%" y="591.50"></text></g><g><title>y2021::d18::main::Snail::has (5 samples, 0.03%)</title><rect x="31.3034%" y="709" width="0.0348%" height="15" fill="rgb(218,103,35)" fg:x="4503" fg:w="5"/><text x="31.5534%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (5 samples, 0.03%)</title><rect x="31.3034%" y="693" width="0.0348%" height="15" fill="rgb(216,93,46)" fg:x="4503" fg:w="5"/><text x="31.5534%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (5 samples, 0.03%)</title><rect x="31.3034%" y="677" width="0.0348%" height="15" fill="rgb(225,159,27)" fg:x="4503" fg:w="5"/><text x="31.5534%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.03%)</title><rect x="31.3034%" y="661" width="0.0348%" height="15" fill="rgb(225,204,11)" fg:x="4503" fg:w="5"/><text x="31.5534%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.03%)</title><rect x="31.3034%" y="645" width="0.0348%" height="15" fill="rgb(205,56,4)" fg:x="4503" fg:w="5"/><text x="31.5534%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.03%)</title><rect x="31.3034%" y="629" width="0.0348%" height="15" fill="rgb(206,6,35)" fg:x="4503" fg:w="5"/><text x="31.5534%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.03%)</title><rect x="31.3034%" y="613" width="0.0348%" height="15" fill="rgb(247,73,52)" fg:x="4503" fg:w="5"/><text x="31.5534%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.03%)</title><rect x="31.3034%" y="597" width="0.0348%" height="15" fill="rgb(246,97,4)" fg:x="4503" fg:w="5"/><text x="31.5534%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="31.3243%" y="581" width="0.0139%" height="15" fill="rgb(212,37,15)" fg:x="4506" fg:w="2"/><text x="31.5743%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="31.3243%" y="565" width="0.0139%" height="15" fill="rgb(208,130,40)" fg:x="4506" fg:w="2"/><text x="31.5743%" y="575.50"></text></g><g><title>y2021::d18::main::Snail::get (2 samples, 0.01%)</title><rect x="31.3382%" y="693" width="0.0139%" height="15" fill="rgb(236,55,29)" fg:x="4508" fg:w="2"/><text x="31.5882%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.01%)</title><rect x="31.3382%" y="677" width="0.0139%" height="15" fill="rgb(209,156,45)" fg:x="4508" fg:w="2"/><text x="31.5882%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.01%)</title><rect x="31.3382%" y="661" width="0.0139%" height="15" fill="rgb(249,107,4)" fg:x="4508" fg:w="2"/><text x="31.5882%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.01%)</title><rect x="31.3382%" y="645" width="0.0139%" height="15" fill="rgb(227,7,13)" fg:x="4508" fg:w="2"/><text x="31.5882%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.01%)</title><rect x="31.3382%" y="629" width="0.0139%" height="15" fill="rgb(250,129,14)" fg:x="4508" fg:w="2"/><text x="31.5882%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="31.3382%" y="613" width="0.0139%" height="15" fill="rgb(229,92,13)" fg:x="4508" fg:w="2"/><text x="31.5882%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="31.3521%" y="613" width="0.0209%" height="15" fill="rgb(245,98,39)" fg:x="4510" fg:w="3"/><text x="31.6021%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="31.3521%" y="597" width="0.0209%" height="15" fill="rgb(234,135,48)" fg:x="4510" fg:w="3"/><text x="31.6021%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="31.3521%" y="581" width="0.0209%" height="15" fill="rgb(230,98,28)" fg:x="4510" fg:w="3"/><text x="31.6021%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.02%)</title><rect x="31.3521%" y="565" width="0.0209%" height="15" fill="rgb(223,121,0)" fg:x="4510" fg:w="3"/><text x="31.6021%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="31.3591%" y="549" width="0.0139%" height="15" fill="rgb(234,173,33)" fg:x="4511" fg:w="2"/><text x="31.6091%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.03%)</title><rect x="31.3521%" y="629" width="0.0348%" height="15" fill="rgb(245,47,8)" fg:x="4510" fg:w="5"/><text x="31.6021%" y="639.50"></text></g><g><title>y2021::d18::main::Snail::has (10 samples, 0.07%)</title><rect x="31.3521%" y="693" width="0.0695%" height="15" fill="rgb(205,17,20)" fg:x="4510" fg:w="10"/><text x="31.6021%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (10 samples, 0.07%)</title><rect x="31.3521%" y="677" width="0.0695%" height="15" fill="rgb(232,151,16)" fg:x="4510" fg:w="10"/><text x="31.6021%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (10 samples, 0.07%)</title><rect x="31.3521%" y="661" width="0.0695%" height="15" fill="rgb(208,30,32)" fg:x="4510" fg:w="10"/><text x="31.6021%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.07%)</title><rect x="31.3521%" y="645" width="0.0695%" height="15" fill="rgb(254,26,3)" fg:x="4510" fg:w="10"/><text x="31.6021%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.03%)</title><rect x="31.3869%" y="629" width="0.0348%" height="15" fill="rgb(240,177,30)" fg:x="4515" fg:w="5"/><text x="31.6369%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.03%)</title><rect x="31.3869%" y="613" width="0.0348%" height="15" fill="rgb(248,76,44)" fg:x="4515" fg:w="5"/><text x="31.6369%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="31.4703%" y="533" width="0.0139%" height="15" fill="rgb(241,186,54)" fg:x="4527" fg:w="2"/><text x="31.7203%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.08%)</title><rect x="31.4425%" y="597" width="0.0765%" height="15" fill="rgb(249,171,29)" fg:x="4523" fg:w="11"/><text x="31.6925%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.08%)</title><rect x="31.4425%" y="581" width="0.0765%" height="15" fill="rgb(237,151,44)" fg:x="4523" fg:w="11"/><text x="31.6925%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.08%)</title><rect x="31.4425%" y="565" width="0.0765%" height="15" fill="rgb(228,174,30)" fg:x="4523" fg:w="11"/><text x="31.6925%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.06%)</title><rect x="31.4564%" y="549" width="0.0626%" height="15" fill="rgb(252,14,37)" fg:x="4525" fg:w="9"/><text x="31.7064%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.03%)</title><rect x="31.4842%" y="533" width="0.0348%" height="15" fill="rgb(207,111,40)" fg:x="4529" fg:w="5"/><text x="31.7342%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.10%)</title><rect x="31.4425%" y="613" width="0.0973%" height="15" fill="rgb(248,171,54)" fg:x="4523" fg:w="14"/><text x="31.6925%" y="623.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="31.5259%" y="597" width="0.0139%" height="15" fill="rgb(211,127,2)" fg:x="4535" fg:w="2"/><text x="31.7759%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.01%)</title><rect x="31.5259%" y="581" width="0.0139%" height="15" fill="rgb(236,87,47)" fg:x="4535" fg:w="2"/><text x="31.7759%" y="591.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.01%)</title><rect x="31.5259%" y="565" width="0.0139%" height="15" fill="rgb(223,190,45)" fg:x="4535" fg:w="2"/><text x="31.7759%" y="575.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.01%)</title><rect x="31.5259%" y="549" width="0.0139%" height="15" fill="rgb(215,5,16)" fg:x="4535" fg:w="2"/><text x="31.7759%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="31.5259%" y="533" width="0.0139%" height="15" fill="rgb(252,82,33)" fg:x="4535" fg:w="2"/><text x="31.7759%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="31.5259%" y="517" width="0.0139%" height="15" fill="rgb(247,213,44)" fg:x="4535" fg:w="2"/><text x="31.7759%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="31.5259%" y="501" width="0.0139%" height="15" fill="rgb(205,196,44)" fg:x="4535" fg:w="2"/><text x="31.7759%" y="511.50"></text></g><g><title>y2021::d18::main::Snail::magnitude (52 samples, 0.36%)</title><rect x="31.1992%" y="741" width="0.3615%" height="15" fill="rgb(237,96,54)" fg:x="4488" fg:w="52"/><text x="31.4492%" y="751.50"></text></g><g><title>y2021::d18::main::Snail::magnitude (43 samples, 0.30%)</title><rect x="31.2617%" y="725" width="0.2989%" height="15" fill="rgb(230,113,34)" fg:x="4497" fg:w="43"/><text x="31.5117%" y="735.50"></text></g><g><title>y2021::d18::main::Snail::magnitude (32 samples, 0.22%)</title><rect x="31.3382%" y="709" width="0.2225%" height="15" fill="rgb(221,224,12)" fg:x="4508" fg:w="32"/><text x="31.5882%" y="719.50"></text></g><g><title>y2021::d18::main::Snail::magnitude (20 samples, 0.14%)</title><rect x="31.4216%" y="693" width="0.1390%" height="15" fill="rgb(219,112,44)" fg:x="4520" fg:w="20"/><text x="31.6716%" y="703.50"></text></g><g><title>y2021::d18::main::Snail::has (19 samples, 0.13%)</title><rect x="31.4286%" y="677" width="0.1321%" height="15" fill="rgb(210,31,13)" fg:x="4521" fg:w="19"/><text x="31.6786%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (19 samples, 0.13%)</title><rect x="31.4286%" y="661" width="0.1321%" height="15" fill="rgb(230,25,16)" fg:x="4521" fg:w="19"/><text x="31.6786%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (19 samples, 0.13%)</title><rect x="31.4286%" y="645" width="0.1321%" height="15" fill="rgb(246,108,53)" fg:x="4521" fg:w="19"/><text x="31.6786%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (18 samples, 0.13%)</title><rect x="31.4355%" y="629" width="0.1251%" height="15" fill="rgb(241,172,50)" fg:x="4522" fg:w="18"/><text x="31.6855%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.02%)</title><rect x="31.5398%" y="613" width="0.0209%" height="15" fill="rgb(235,141,10)" fg:x="4537" fg:w="3"/><text x="31.7898%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="31.5398%" y="597" width="0.0209%" height="15" fill="rgb(220,174,43)" fg:x="4537" fg:w="3"/><text x="31.7898%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.01%)</title><rect x="31.5468%" y="581" width="0.0139%" height="15" fill="rgb(215,181,40)" fg:x="4538" fg:w="2"/><text x="31.7968%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.01%)</title><rect x="31.5468%" y="565" width="0.0139%" height="15" fill="rgb(230,97,2)" fg:x="4538" fg:w="2"/><text x="31.7968%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.01%)</title><rect x="31.5468%" y="549" width="0.0139%" height="15" fill="rgb(211,25,27)" fg:x="4538" fg:w="2"/><text x="31.7968%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.01%)</title><rect x="31.5468%" y="533" width="0.0139%" height="15" fill="rgb(230,87,26)" fg:x="4538" fg:w="2"/><text x="31.7968%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.01%)</title><rect x="31.5468%" y="517" width="0.0139%" height="15" fill="rgb(227,160,17)" fg:x="4538" fg:w="2"/><text x="31.7968%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.01%)</title><rect x="31.5468%" y="501" width="0.0139%" height="15" fill="rgb(244,85,34)" fg:x="4538" fg:w="2"/><text x="31.7968%" y="511.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.01%)</title><rect x="31.5468%" y="485" width="0.0139%" height="15" fill="rgb(207,70,0)" fg:x="4538" fg:w="2"/><text x="31.7968%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="31.6093%" y="709" width="0.0139%" height="15" fill="rgb(223,129,7)" fg:x="4547" fg:w="2"/><text x="31.8593%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.6441%" y="581" width="0.0139%" height="15" fill="rgb(246,105,7)" fg:x="4552" fg:w="2"/><text x="31.8941%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.6441%" y="565" width="0.0139%" height="15" fill="rgb(215,154,42)" fg:x="4552" fg:w="2"/><text x="31.8941%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.6441%" y="549" width="0.0139%" height="15" fill="rgb(220,215,30)" fg:x="4552" fg:w="2"/><text x="31.8941%" y="559.50"></text></g><g><title>y2021::d18::main::Snail::add (6 samples, 0.04%)</title><rect x="31.6302%" y="677" width="0.0417%" height="15" fill="rgb(228,81,51)" fg:x="4550" fg:w="6"/><text x="31.8802%" y="687.50"></text></g><g><title>y2021::d18::main::Snail::has (4 samples, 0.03%)</title><rect x="31.6441%" y="661" width="0.0278%" height="15" fill="rgb(247,71,54)" fg:x="4552" fg:w="4"/><text x="31.8941%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (4 samples, 0.03%)</title><rect x="31.6441%" y="645" width="0.0278%" height="15" fill="rgb(234,176,34)" fg:x="4552" fg:w="4"/><text x="31.8941%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.03%)</title><rect x="31.6441%" y="629" width="0.0278%" height="15" fill="rgb(241,103,54)" fg:x="4552" fg:w="4"/><text x="31.8941%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.03%)</title><rect x="31.6441%" y="613" width="0.0278%" height="15" fill="rgb(228,22,34)" fg:x="4552" fg:w="4"/><text x="31.8941%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.03%)</title><rect x="31.6441%" y="597" width="0.0278%" height="15" fill="rgb(241,179,48)" fg:x="4552" fg:w="4"/><text x="31.8941%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.02%)</title><rect x="31.6719%" y="613" width="0.0209%" height="15" fill="rgb(235,167,37)" fg:x="4556" fg:w="3"/><text x="31.9219%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.6788%" y="597" width="0.0139%" height="15" fill="rgb(213,109,30)" fg:x="4557" fg:w="2"/><text x="31.9288%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.6788%" y="581" width="0.0139%" height="15" fill="rgb(222,172,16)" fg:x="4557" fg:w="2"/><text x="31.9288%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.6788%" y="565" width="0.0139%" height="15" fill="rgb(233,192,5)" fg:x="4557" fg:w="2"/><text x="31.9288%" y="575.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (4 samples, 0.03%)</title><rect x="31.6719%" y="677" width="0.0278%" height="15" fill="rgb(247,189,41)" fg:x="4556" fg:w="4"/><text x="31.9219%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4 samples, 0.03%)</title><rect x="31.6719%" y="661" width="0.0278%" height="15" fill="rgb(218,134,47)" fg:x="4556" fg:w="4"/><text x="31.9219%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4 samples, 0.03%)</title><rect x="31.6719%" y="645" width="0.0278%" height="15" fill="rgb(216,29,3)" fg:x="4556" fg:w="4"/><text x="31.9219%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4 samples, 0.03%)</title><rect x="31.6719%" y="629" width="0.0278%" height="15" fill="rgb(246,140,12)" fg:x="4556" fg:w="4"/><text x="31.9219%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.6997%" y="597" width="0.0139%" height="15" fill="rgb(230,136,11)" fg:x="4560" fg:w="2"/><text x="31.9497%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.6997%" y="581" width="0.0139%" height="15" fill="rgb(247,22,47)" fg:x="4560" fg:w="2"/><text x="31.9497%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.6997%" y="565" width="0.0139%" height="15" fill="rgb(218,84,22)" fg:x="4560" fg:w="2"/><text x="31.9497%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="31.6997%" y="549" width="0.0139%" height="15" fill="rgb(216,87,39)" fg:x="4560" fg:w="2"/><text x="31.9497%" y="559.50"></text></g><g><title>y2021::d18::main::Snail::add (14 samples, 0.10%)</title><rect x="31.6302%" y="693" width="0.0973%" height="15" fill="rgb(221,178,8)" fg:x="4550" fg:w="14"/><text x="31.8802%" y="703.50"></text></g><g><title>y2021::d18::main::Snail::has (4 samples, 0.03%)</title><rect x="31.6997%" y="677" width="0.0278%" height="15" fill="rgb(230,42,11)" fg:x="4560" fg:w="4"/><text x="31.9497%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (4 samples, 0.03%)</title><rect x="31.6997%" y="661" width="0.0278%" height="15" fill="rgb(237,229,4)" fg:x="4560" fg:w="4"/><text x="31.9497%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.03%)</title><rect x="31.6997%" y="645" width="0.0278%" height="15" fill="rgb(222,31,33)" fg:x="4560" fg:w="4"/><text x="31.9497%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.03%)</title><rect x="31.6997%" y="629" width="0.0278%" height="15" fill="rgb(210,17,39)" fg:x="4560" fg:w="4"/><text x="31.9497%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.03%)</title><rect x="31.6997%" y="613" width="0.0278%" height="15" fill="rgb(244,93,20)" fg:x="4560" fg:w="4"/><text x="31.9497%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="31.7275%" y="613" width="0.0209%" height="15" fill="rgb(210,40,47)" fg:x="4564" fg:w="3"/><text x="31.9775%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="31.7275%" y="597" width="0.0209%" height="15" fill="rgb(239,211,47)" fg:x="4564" fg:w="3"/><text x="31.9775%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="31.7275%" y="581" width="0.0209%" height="15" fill="rgb(251,223,49)" fg:x="4564" fg:w="3"/><text x="31.9775%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="31.7344%" y="565" width="0.0139%" height="15" fill="rgb(221,149,5)" fg:x="4565" fg:w="2"/><text x="31.9844%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="31.7344%" y="549" width="0.0139%" height="15" fill="rgb(219,224,51)" fg:x="4565" fg:w="2"/><text x="31.9844%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.03%)</title><rect x="31.7275%" y="629" width="0.0278%" height="15" fill="rgb(223,7,8)" fg:x="4564" fg:w="4"/><text x="31.9775%" y="639.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (5 samples, 0.03%)</title><rect x="31.7275%" y="693" width="0.0348%" height="15" fill="rgb(241,217,22)" fg:x="4564" fg:w="5"/><text x="31.9775%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (5 samples, 0.03%)</title><rect x="31.7275%" y="677" width="0.0348%" height="15" fill="rgb(248,209,0)" fg:x="4564" fg:w="5"/><text x="31.9775%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (5 samples, 0.03%)</title><rect x="31.7275%" y="661" width="0.0348%" height="15" fill="rgb(217,205,4)" fg:x="4564" fg:w="5"/><text x="31.9775%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (5 samples, 0.03%)</title><rect x="31.7275%" y="645" width="0.0348%" height="15" fill="rgb(228,124,39)" fg:x="4564" fg:w="5"/><text x="31.9775%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="31.7623%" y="629" width="0.0139%" height="15" fill="rgb(250,116,42)" fg:x="4569" fg:w="2"/><text x="32.0123%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.7623%" y="613" width="0.0139%" height="15" fill="rgb(223,202,9)" fg:x="4569" fg:w="2"/><text x="32.0123%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.7623%" y="597" width="0.0139%" height="15" fill="rgb(242,222,40)" fg:x="4569" fg:w="2"/><text x="32.0123%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.7623%" y="581" width="0.0139%" height="15" fill="rgb(229,99,46)" fg:x="4569" fg:w="2"/><text x="32.0123%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="31.7623%" y="565" width="0.0139%" height="15" fill="rgb(225,56,46)" fg:x="4569" fg:w="2"/><text x="32.0123%" y="575.50"></text></g><g><title>y2021::d18::main::Snail::add (23 samples, 0.16%)</title><rect x="31.6232%" y="709" width="0.1599%" height="15" fill="rgb(227,94,5)" fg:x="4549" fg:w="23"/><text x="31.8732%" y="719.50"></text></g><g><title>y2021::d18::main::Snail::has (3 samples, 0.02%)</title><rect x="31.7623%" y="693" width="0.0209%" height="15" fill="rgb(205,112,38)" fg:x="4569" fg:w="3"/><text x="32.0123%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (3 samples, 0.02%)</title><rect x="31.7623%" y="677" width="0.0209%" height="15" fill="rgb(231,133,46)" fg:x="4569" fg:w="3"/><text x="32.0123%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.02%)</title><rect x="31.7623%" y="661" width="0.0209%" height="15" fill="rgb(217,16,9)" fg:x="4569" fg:w="3"/><text x="32.0123%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.02%)</title><rect x="31.7623%" y="645" width="0.0209%" height="15" fill="rgb(249,173,9)" fg:x="4569" fg:w="3"/><text x="32.0123%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.03%)</title><rect x="31.8318%" y="693" width="0.0278%" height="15" fill="rgb(205,163,53)" fg:x="4579" fg:w="4"/><text x="32.0818%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="31.8665%" y="581" width="0.0278%" height="15" fill="rgb(217,54,41)" fg:x="4584" fg:w="4"/><text x="32.1165%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="31.8665%" y="565" width="0.0278%" height="15" fill="rgb(228,216,12)" fg:x="4584" fg:w="4"/><text x="32.1165%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="31.8665%" y="549" width="0.0278%" height="15" fill="rgb(244,228,15)" fg:x="4584" fg:w="4"/><text x="32.1165%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="31.8804%" y="533" width="0.0139%" height="15" fill="rgb(221,176,53)" fg:x="4586" fg:w="2"/><text x="32.1304%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.04%)</title><rect x="31.8665%" y="597" width="0.0417%" height="15" fill="rgb(205,94,34)" fg:x="4584" fg:w="6"/><text x="32.1165%" y="607.50"></text></g><g><title>y2021::d18::main::Snail::add (8 samples, 0.06%)</title><rect x="31.8596%" y="677" width="0.0556%" height="15" fill="rgb(213,110,48)" fg:x="4583" fg:w="8"/><text x="32.1096%" y="687.50"></text></g><g><title>y2021::d18::main::Snail::has (7 samples, 0.05%)</title><rect x="31.8665%" y="661" width="0.0487%" height="15" fill="rgb(236,142,28)" fg:x="4584" fg:w="7"/><text x="32.1165%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (7 samples, 0.05%)</title><rect x="31.8665%" y="645" width="0.0487%" height="15" fill="rgb(225,135,29)" fg:x="4584" fg:w="7"/><text x="32.1165%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (7 samples, 0.05%)</title><rect x="31.8665%" y="629" width="0.0487%" height="15" fill="rgb(252,45,31)" fg:x="4584" fg:w="7"/><text x="32.1165%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.05%)</title><rect x="31.8665%" y="613" width="0.0487%" height="15" fill="rgb(211,187,50)" fg:x="4584" fg:w="7"/><text x="32.1165%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.9360%" y="597" width="0.0139%" height="15" fill="rgb(229,109,7)" fg:x="4594" fg:w="2"/><text x="32.1860%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.9360%" y="581" width="0.0139%" height="15" fill="rgb(251,131,51)" fg:x="4594" fg:w="2"/><text x="32.1860%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="31.9360%" y="565" width="0.0139%" height="15" fill="rgb(251,180,35)" fg:x="4594" fg:w="2"/><text x="32.1860%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="31.9360%" y="549" width="0.0139%" height="15" fill="rgb(211,46,32)" fg:x="4594" fg:w="2"/><text x="32.1860%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.03%)</title><rect x="31.9221%" y="613" width="0.0348%" height="15" fill="rgb(248,123,17)" fg:x="4592" fg:w="5"/><text x="32.1721%" y="623.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (8 samples, 0.06%)</title><rect x="31.9152%" y="677" width="0.0556%" height="15" fill="rgb(227,141,18)" fg:x="4591" fg:w="8"/><text x="32.1652%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (8 samples, 0.06%)</title><rect x="31.9152%" y="661" width="0.0556%" height="15" fill="rgb(216,102,9)" fg:x="4591" fg:w="8"/><text x="32.1652%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (7 samples, 0.05%)</title><rect x="31.9221%" y="645" width="0.0487%" height="15" fill="rgb(253,47,13)" fg:x="4592" fg:w="7"/><text x="32.1721%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (7 samples, 0.05%)</title><rect x="31.9221%" y="629" width="0.0487%" height="15" fill="rgb(226,93,23)" fg:x="4592" fg:w="7"/><text x="32.1721%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.01%)</title><rect x="31.9569%" y="613" width="0.0139%" height="15" fill="rgb(247,104,17)" fg:x="4597" fg:w="2"/><text x="32.2069%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="31.9569%" y="597" width="0.0139%" height="15" fill="rgb(233,203,26)" fg:x="4597" fg:w="2"/><text x="32.2069%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="31.9708%" y="597" width="0.0487%" height="15" fill="rgb(244,98,49)" fg:x="4599" fg:w="7"/><text x="32.2208%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="31.9708%" y="581" width="0.0487%" height="15" fill="rgb(235,134,22)" fg:x="4599" fg:w="7"/><text x="32.2208%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.05%)</title><rect x="31.9708%" y="565" width="0.0487%" height="15" fill="rgb(221,70,32)" fg:x="4599" fg:w="7"/><text x="32.2208%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.03%)</title><rect x="31.9917%" y="549" width="0.0278%" height="15" fill="rgb(238,15,50)" fg:x="4602" fg:w="4"/><text x="32.2417%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.02%)</title><rect x="31.9986%" y="533" width="0.0209%" height="15" fill="rgb(215,221,48)" fg:x="4603" fg:w="3"/><text x="32.2486%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.06%)</title><rect x="31.9708%" y="613" width="0.0556%" height="15" fill="rgb(236,73,3)" fg:x="4599" fg:w="8"/><text x="32.2208%" y="623.50"></text></g><g><title>y2021::d18::main::Snail::add (28 samples, 0.19%)</title><rect x="31.8596%" y="693" width="0.1946%" height="15" fill="rgb(250,107,11)" fg:x="4583" fg:w="28"/><text x="32.1096%" y="703.50"></text></g><g><title>y2021::d18::main::Snail::has (12 samples, 0.08%)</title><rect x="31.9708%" y="677" width="0.0834%" height="15" fill="rgb(242,39,14)" fg:x="4599" fg:w="12"/><text x="32.2208%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (12 samples, 0.08%)</title><rect x="31.9708%" y="661" width="0.0834%" height="15" fill="rgb(248,164,37)" fg:x="4599" fg:w="12"/><text x="32.2208%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (12 samples, 0.08%)</title><rect x="31.9708%" y="645" width="0.0834%" height="15" fill="rgb(217,60,12)" fg:x="4599" fg:w="12"/><text x="32.2208%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 0.08%)</title><rect x="31.9708%" y="629" width="0.0834%" height="15" fill="rgb(240,125,29)" fg:x="4599" fg:w="12"/><text x="32.2208%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.03%)</title><rect x="32.0264%" y="613" width="0.0278%" height="15" fill="rgb(208,207,28)" fg:x="4607" fg:w="4"/><text x="32.2764%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.03%)</title><rect x="32.0264%" y="597" width="0.0278%" height="15" fill="rgb(209,159,27)" fg:x="4607" fg:w="4"/><text x="32.2764%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.02%)</title><rect x="32.0334%" y="581" width="0.0209%" height="15" fill="rgb(251,176,53)" fg:x="4608" fg:w="3"/><text x="32.2834%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.02%)</title><rect x="32.0334%" y="565" width="0.0209%" height="15" fill="rgb(211,85,7)" fg:x="4608" fg:w="3"/><text x="32.2834%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.02%)</title><rect x="32.0334%" y="549" width="0.0209%" height="15" fill="rgb(216,64,54)" fg:x="4608" fg:w="3"/><text x="32.2834%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.02%)</title><rect x="32.0334%" y="533" width="0.0209%" height="15" fill="rgb(217,54,24)" fg:x="4608" fg:w="3"/><text x="32.2834%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.02%)</title><rect x="32.0334%" y="517" width="0.0209%" height="15" fill="rgb(208,206,53)" fg:x="4608" fg:w="3"/><text x="32.2834%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.02%)</title><rect x="32.0334%" y="501" width="0.0209%" height="15" fill="rgb(251,74,39)" fg:x="4608" fg:w="3"/><text x="32.2834%" y="511.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.02%)</title><rect x="32.0334%" y="485" width="0.0209%" height="15" fill="rgb(226,47,5)" fg:x="4608" fg:w="3"/><text x="32.2834%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.02%)</title><rect x="32.0890%" y="677" width="0.0209%" height="15" fill="rgb(234,111,33)" fg:x="4616" fg:w="3"/><text x="32.3390%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="32.1307%" y="517" width="0.0139%" height="15" fill="rgb(251,14,10)" fg:x="4622" fg:w="2"/><text x="32.3807%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.03%)</title><rect x="32.1237%" y="581" width="0.0348%" height="15" fill="rgb(232,43,0)" fg:x="4621" fg:w="5"/><text x="32.3737%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.03%)</title><rect x="32.1237%" y="565" width="0.0348%" height="15" fill="rgb(222,68,43)" fg:x="4621" fg:w="5"/><text x="32.3737%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.03%)</title><rect x="32.1237%" y="549" width="0.0348%" height="15" fill="rgb(217,24,23)" fg:x="4621" fg:w="5"/><text x="32.3737%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.03%)</title><rect x="32.1307%" y="533" width="0.0278%" height="15" fill="rgb(229,209,14)" fg:x="4622" fg:w="4"/><text x="32.3807%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="32.1446%" y="517" width="0.0139%" height="15" fill="rgb(250,149,48)" fg:x="4624" fg:w="2"/><text x="32.3946%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.02%)</title><rect x="32.1585%" y="581" width="0.0209%" height="15" fill="rgb(210,120,37)" fg:x="4626" fg:w="3"/><text x="32.4085%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.01%)</title><rect x="32.1655%" y="565" width="0.0139%" height="15" fill="rgb(210,21,8)" fg:x="4627" fg:w="2"/><text x="32.4155%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.01%)</title><rect x="32.1655%" y="549" width="0.0139%" height="15" fill="rgb(243,145,7)" fg:x="4627" fg:w="2"/><text x="32.4155%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.01%)</title><rect x="32.1655%" y="533" width="0.0139%" height="15" fill="rgb(238,178,32)" fg:x="4627" fg:w="2"/><text x="32.4155%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.07%)</title><rect x="32.1237%" y="597" width="0.0695%" height="15" fill="rgb(222,4,10)" fg:x="4621" fg:w="10"/><text x="32.3737%" y="607.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="32.1794%" y="581" width="0.0139%" height="15" fill="rgb(239,7,37)" fg:x="4629" fg:w="2"/><text x="32.4294%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.01%)</title><rect x="32.1794%" y="565" width="0.0139%" height="15" fill="rgb(215,31,37)" fg:x="4629" fg:w="2"/><text x="32.4294%" y="575.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.01%)</title><rect x="32.1794%" y="549" width="0.0139%" height="15" fill="rgb(224,83,33)" fg:x="4629" fg:w="2"/><text x="32.4294%" y="559.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.01%)</title><rect x="32.1794%" y="533" width="0.0139%" height="15" fill="rgb(239,55,3)" fg:x="4629" fg:w="2"/><text x="32.4294%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="32.1794%" y="517" width="0.0139%" height="15" fill="rgb(247,92,11)" fg:x="4629" fg:w="2"/><text x="32.4294%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="32.1794%" y="501" width="0.0139%" height="15" fill="rgb(239,200,7)" fg:x="4629" fg:w="2"/><text x="32.4294%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="32.1794%" y="485" width="0.0139%" height="15" fill="rgb(227,115,8)" fg:x="4629" fg:w="2"/><text x="32.4294%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="32.2002%" y="565" width="0.0139%" height="15" fill="rgb(215,189,27)" fg:x="4632" fg:w="2"/><text x="32.4502%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="32.2002%" y="549" width="0.0139%" height="15" fill="rgb(251,216,39)" fg:x="4632" fg:w="2"/><text x="32.4502%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="32.2002%" y="533" width="0.0139%" height="15" fill="rgb(207,29,47)" fg:x="4632" fg:w="2"/><text x="32.4502%" y="543.50"></text></g><g><title>y2021::d18::main::Snail::add (17 samples, 0.12%)</title><rect x="32.1098%" y="677" width="0.1182%" height="15" fill="rgb(210,71,34)" fg:x="4619" fg:w="17"/><text x="32.3598%" y="687.50"></text></g><g><title>y2021::d18::main::Snail::has (15 samples, 0.10%)</title><rect x="32.1237%" y="661" width="0.1043%" height="15" fill="rgb(253,217,51)" fg:x="4621" fg:w="15"/><text x="32.3737%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (15 samples, 0.10%)</title><rect x="32.1237%" y="645" width="0.1043%" height="15" fill="rgb(222,117,46)" fg:x="4621" fg:w="15"/><text x="32.3737%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (15 samples, 0.10%)</title><rect x="32.1237%" y="629" width="0.1043%" height="15" fill="rgb(226,132,6)" fg:x="4621" fg:w="15"/><text x="32.3737%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15 samples, 0.10%)</title><rect x="32.1237%" y="613" width="0.1043%" height="15" fill="rgb(254,145,51)" fg:x="4621" fg:w="15"/><text x="32.3737%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.03%)</title><rect x="32.1933%" y="597" width="0.0348%" height="15" fill="rgb(231,199,27)" fg:x="4631" fg:w="5"/><text x="32.4433%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.03%)</title><rect x="32.1933%" y="581" width="0.0348%" height="15" fill="rgb(245,158,14)" fg:x="4631" fg:w="5"/><text x="32.4433%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.01%)</title><rect x="32.2141%" y="565" width="0.0139%" height="15" fill="rgb(240,113,14)" fg:x="4634" fg:w="2"/><text x="32.4641%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.01%)</title><rect x="32.2141%" y="549" width="0.0139%" height="15" fill="rgb(210,20,13)" fg:x="4634" fg:w="2"/><text x="32.4641%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.01%)</title><rect x="32.2141%" y="533" width="0.0139%" height="15" fill="rgb(241,144,13)" fg:x="4634" fg:w="2"/><text x="32.4641%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.01%)</title><rect x="32.2141%" y="517" width="0.0139%" height="15" fill="rgb(235,43,34)" fg:x="4634" fg:w="2"/><text x="32.4641%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.01%)</title><rect x="32.2141%" y="501" width="0.0139%" height="15" fill="rgb(208,36,20)" fg:x="4634" fg:w="2"/><text x="32.4641%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.01%)</title><rect x="32.2141%" y="485" width="0.0139%" height="15" fill="rgb(239,204,10)" fg:x="4634" fg:w="2"/><text x="32.4641%" y="495.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.01%)</title><rect x="32.2141%" y="469" width="0.0139%" height="15" fill="rgb(217,84,43)" fg:x="4634" fg:w="2"/><text x="32.4641%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="32.4366%" y="501" width="0.0139%" height="15" fill="rgb(241,170,50)" fg:x="4666" fg:w="2"/><text x="32.6866%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.03%)</title><rect x="32.4296%" y="517" width="0.0278%" height="15" fill="rgb(226,205,29)" fg:x="4665" fg:w="4"/><text x="32.6796%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.04%)</title><rect x="32.4852%" y="501" width="0.0417%" height="15" fill="rgb(233,113,1)" fg:x="4673" fg:w="6"/><text x="32.7352%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.17%)</title><rect x="32.3879%" y="565" width="0.1738%" height="15" fill="rgb(253,98,13)" fg:x="4659" fg:w="25"/><text x="32.6379%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (25 samples, 0.17%)</title><rect x="32.3879%" y="549" width="0.1738%" height="15" fill="rgb(211,115,12)" fg:x="4659" fg:w="25"/><text x="32.6379%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (25 samples, 0.17%)</title><rect x="32.3879%" y="533" width="0.1738%" height="15" fill="rgb(208,12,16)" fg:x="4659" fg:w="25"/><text x="32.6379%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.10%)</title><rect x="32.4574%" y="517" width="0.1043%" height="15" fill="rgb(237,193,54)" fg:x="4669" fg:w="15"/><text x="32.7074%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.03%)</title><rect x="32.5269%" y="501" width="0.0348%" height="15" fill="rgb(243,22,42)" fg:x="4679" fg:w="5"/><text x="32.7769%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.01%)</title><rect x="32.5617%" y="565" width="0.0139%" height="15" fill="rgb(233,151,36)" fg:x="4684" fg:w="2"/><text x="32.8117%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.03%)</title><rect x="32.6104%" y="453" width="0.0278%" height="15" fill="rgb(237,57,45)" fg:x="4691" fg:w="4"/><text x="32.8604%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="32.6243%" y="437" width="0.0139%" height="15" fill="rgb(221,88,17)" fg:x="4693" fg:w="2"/><text x="32.8743%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (37 samples, 0.26%)</title><rect x="32.3879%" y="581" width="0.2572%" height="15" fill="rgb(230,79,15)" fg:x="4659" fg:w="37"/><text x="32.6379%" y="591.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (10 samples, 0.07%)</title><rect x="32.5756%" y="565" width="0.0695%" height="15" fill="rgb(213,57,13)" fg:x="4686" fg:w="10"/><text x="32.8256%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (10 samples, 0.07%)</title><rect x="32.5756%" y="549" width="0.0695%" height="15" fill="rgb(222,116,39)" fg:x="4686" fg:w="10"/><text x="32.8256%" y="559.50"></text></g><g><title>core::hash::Hasher::write_isize (10 samples, 0.07%)</title><rect x="32.5756%" y="533" width="0.0695%" height="15" fill="rgb(245,107,2)" fg:x="4686" fg:w="10"/><text x="32.8256%" y="543.50"></text></g><g><title>core::hash::Hasher::write_usize (10 samples, 0.07%)</title><rect x="32.5756%" y="517" width="0.0695%" height="15" fill="rgb(238,1,10)" fg:x="4686" fg:w="10"/><text x="32.8256%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.07%)</title><rect x="32.5756%" y="501" width="0.0695%" height="15" fill="rgb(249,4,48)" fg:x="4686" fg:w="10"/><text x="32.8256%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.07%)</title><rect x="32.5756%" y="485" width="0.0695%" height="15" fill="rgb(223,151,18)" fg:x="4686" fg:w="10"/><text x="32.8256%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.07%)</title><rect x="32.5756%" y="469" width="0.0695%" height="15" fill="rgb(227,65,43)" fg:x="4686" fg:w="10"/><text x="32.8256%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.01%)</title><rect x="32.6938%" y="501" width="0.0139%" height="15" fill="rgb(218,40,45)" fg:x="4703" fg:w="2"/><text x="32.9438%" y="511.50"></text></g><g><title>y2021::d18::main::Snail::explode (60 samples, 0.42%)</title><rect x="32.3601%" y="661" width="0.4171%" height="15" fill="rgb(252,121,31)" fg:x="4655" fg:w="60"/><text x="32.6101%" y="671.50"></text></g><g><title>y2021::d18::main::Snail::has (58 samples, 0.40%)</title><rect x="32.3740%" y="645" width="0.4032%" height="15" fill="rgb(219,158,43)" fg:x="4657" fg:w="58"/><text x="32.6240%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (58 samples, 0.40%)</title><rect x="32.3740%" y="629" width="0.4032%" height="15" fill="rgb(231,162,42)" fg:x="4657" fg:w="58"/><text x="32.6240%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (57 samples, 0.40%)</title><rect x="32.3810%" y="613" width="0.3962%" height="15" fill="rgb(217,179,25)" fg:x="4658" fg:w="57"/><text x="32.6310%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (57 samples, 0.40%)</title><rect x="32.3810%" y="597" width="0.3962%" height="15" fill="rgb(206,212,31)" fg:x="4658" fg:w="57"/><text x="32.6310%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (19 samples, 0.13%)</title><rect x="32.6451%" y="581" width="0.1321%" height="15" fill="rgb(235,144,12)" fg:x="4696" fg:w="19"/><text x="32.8951%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.13%)</title><rect x="32.6451%" y="565" width="0.1321%" height="15" fill="rgb(213,51,10)" fg:x="4696" fg:w="19"/><text x="32.8951%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (12 samples, 0.08%)</title><rect x="32.6938%" y="549" width="0.0834%" height="15" fill="rgb(231,145,14)" fg:x="4703" fg:w="12"/><text x="32.9438%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (12 samples, 0.08%)</title><rect x="32.6938%" y="533" width="0.0834%" height="15" fill="rgb(235,15,28)" fg:x="4703" fg:w="12"/><text x="32.9438%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (12 samples, 0.08%)</title><rect x="32.6938%" y="517" width="0.0834%" height="15" fill="rgb(237,206,10)" fg:x="4703" fg:w="12"/><text x="32.9438%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (9 samples, 0.06%)</title><rect x="32.7146%" y="501" width="0.0626%" height="15" fill="rgb(236,227,27)" fg:x="4706" fg:w="9"/><text x="32.9646%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (9 samples, 0.06%)</title><rect x="32.7146%" y="485" width="0.0626%" height="15" fill="rgb(246,83,35)" fg:x="4706" fg:w="9"/><text x="32.9646%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (9 samples, 0.06%)</title><rect x="32.7146%" y="469" width="0.0626%" height="15" fill="rgb(220,136,24)" fg:x="4706" fg:w="9"/><text x="32.9646%" y="479.50"></text></g><g><title>core::core_arch::simd::i8x16::new (9 samples, 0.06%)</title><rect x="32.7146%" y="453" width="0.0626%" height="15" fill="rgb(217,3,25)" fg:x="4706" fg:w="9"/><text x="32.9646%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.04%)</title><rect x="32.8259%" y="517" width="0.0417%" height="15" fill="rgb(239,24,14)" fg:x="4722" fg:w="6"/><text x="33.0759%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.08%)</title><rect x="32.7981%" y="581" width="0.0834%" height="15" fill="rgb(244,16,53)" fg:x="4718" fg:w="12"/><text x="33.0481%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.08%)</title><rect x="32.7981%" y="565" width="0.0834%" height="15" fill="rgb(208,175,44)" fg:x="4718" fg:w="12"/><text x="33.0481%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.08%)</title><rect x="32.7981%" y="549" width="0.0834%" height="15" fill="rgb(252,18,48)" fg:x="4718" fg:w="12"/><text x="33.0481%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.06%)</title><rect x="32.8189%" y="533" width="0.0626%" height="15" fill="rgb(234,199,32)" fg:x="4721" fg:w="9"/><text x="33.0689%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="32.8676%" y="517" width="0.0139%" height="15" fill="rgb(225,77,54)" fg:x="4728" fg:w="2"/><text x="33.1176%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (20 samples, 0.14%)</title><rect x="32.7911%" y="597" width="0.1390%" height="15" fill="rgb(225,42,25)" fg:x="4717" fg:w="20"/><text x="33.0411%" y="607.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (7 samples, 0.05%)</title><rect x="32.8815%" y="581" width="0.0487%" height="15" fill="rgb(242,227,46)" fg:x="4730" fg:w="7"/><text x="33.1315%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (7 samples, 0.05%)</title><rect x="32.8815%" y="565" width="0.0487%" height="15" fill="rgb(246,197,35)" fg:x="4730" fg:w="7"/><text x="33.1315%" y="575.50"></text></g><g><title>core::hash::Hasher::write_isize (7 samples, 0.05%)</title><rect x="32.8815%" y="549" width="0.0487%" height="15" fill="rgb(215,159,26)" fg:x="4730" fg:w="7"/><text x="33.1315%" y="559.50"></text></g><g><title>core::hash::Hasher::write_usize (7 samples, 0.05%)</title><rect x="32.8815%" y="533" width="0.0487%" height="15" fill="rgb(212,194,50)" fg:x="4730" fg:w="7"/><text x="33.1315%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.05%)</title><rect x="32.8815%" y="517" width="0.0487%" height="15" fill="rgb(246,132,1)" fg:x="4730" fg:w="7"/><text x="33.1315%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.05%)</title><rect x="32.8815%" y="501" width="0.0487%" height="15" fill="rgb(217,71,7)" fg:x="4730" fg:w="7"/><text x="33.1315%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.05%)</title><rect x="32.8815%" y="485" width="0.0487%" height="15" fill="rgb(252,59,32)" fg:x="4730" fg:w="7"/><text x="33.1315%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="32.9162%" y="469" width="0.0139%" height="15" fill="rgb(253,204,25)" fg:x="4735" fg:w="2"/><text x="33.1662%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="32.9510%" y="565" width="0.0139%" height="15" fill="rgb(232,21,16)" fg:x="4740" fg:w="2"/><text x="33.2010%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.01%)</title><rect x="32.9510%" y="549" width="0.0139%" height="15" fill="rgb(248,90,29)" fg:x="4740" fg:w="2"/><text x="33.2010%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.01%)</title><rect x="32.9510%" y="533" width="0.0139%" height="15" fill="rgb(249,223,7)" fg:x="4740" fg:w="2"/><text x="33.2010%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="32.9510%" y="517" width="0.0139%" height="15" fill="rgb(231,119,42)" fg:x="4740" fg:w="2"/><text x="33.2010%" y="527.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (31 samples, 0.22%)</title><rect x="32.7772%" y="661" width="0.2155%" height="15" fill="rgb(215,41,35)" fg:x="4715" fg:w="31"/><text x="33.0272%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (31 samples, 0.22%)</title><rect x="32.7772%" y="645" width="0.2155%" height="15" fill="rgb(220,44,45)" fg:x="4715" fg:w="31"/><text x="33.0272%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (30 samples, 0.21%)</title><rect x="32.7842%" y="629" width="0.2086%" height="15" fill="rgb(253,197,36)" fg:x="4716" fg:w="30"/><text x="33.0342%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (29 samples, 0.20%)</title><rect x="32.7911%" y="613" width="0.2016%" height="15" fill="rgb(245,225,54)" fg:x="4717" fg:w="29"/><text x="33.0411%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (9 samples, 0.06%)</title><rect x="32.9301%" y="597" width="0.0626%" height="15" fill="rgb(239,94,37)" fg:x="4737" fg:w="9"/><text x="33.1801%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.06%)</title><rect x="32.9301%" y="581" width="0.0626%" height="15" fill="rgb(242,217,10)" fg:x="4737" fg:w="9"/><text x="33.1801%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.03%)</title><rect x="32.9649%" y="565" width="0.0278%" height="15" fill="rgb(250,193,7)" fg:x="4742" fg:w="4"/><text x="33.2149%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.03%)</title><rect x="32.9649%" y="549" width="0.0278%" height="15" fill="rgb(230,104,19)" fg:x="4742" fg:w="4"/><text x="33.2149%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.03%)</title><rect x="32.9649%" y="533" width="0.0278%" height="15" fill="rgb(230,181,4)" fg:x="4742" fg:w="4"/><text x="33.2149%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.03%)</title><rect x="32.9649%" y="517" width="0.0278%" height="15" fill="rgb(216,219,49)" fg:x="4742" fg:w="4"/><text x="33.2149%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.03%)</title><rect x="32.9649%" y="501" width="0.0278%" height="15" fill="rgb(254,144,0)" fg:x="4742" fg:w="4"/><text x="33.2149%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.03%)</title><rect x="32.9649%" y="485" width="0.0278%" height="15" fill="rgb(205,209,38)" fg:x="4742" fg:w="4"/><text x="33.2149%" y="495.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4 samples, 0.03%)</title><rect x="32.9649%" y="469" width="0.0278%" height="15" fill="rgb(240,21,42)" fg:x="4742" fg:w="4"/><text x="33.2149%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (47 samples, 0.33%)</title><rect x="34.1884%" y="517" width="0.3267%" height="15" fill="rgb(241,132,3)" fg:x="4918" fg:w="47"/><text x="34.4384%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (76 samples, 0.53%)</title><rect x="34.1397%" y="533" width="0.5283%" height="15" fill="rgb(225,14,2)" fg:x="4911" fg:w="76"/><text x="34.3897%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (22 samples, 0.15%)</title><rect x="34.5151%" y="517" width="0.1529%" height="15" fill="rgb(210,141,35)" fg:x="4965" fg:w="22"/><text x="34.7651%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (128 samples, 0.89%)</title><rect x="34.9948%" y="517" width="0.8898%" height="15" fill="rgb(251,14,44)" fg:x="5034" fg:w="128"/><text x="35.2448%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (452 samples, 3.14%)</title><rect x="33.4168%" y="581" width="3.1422%" height="15" fill="rgb(247,48,18)" fg:x="4807" fg:w="452"/><text x="33.6668%" y="591.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (452 samples, 3.14%)</title><rect x="33.4168%" y="565" width="3.1422%" height="15" fill="rgb(225,0,40)" fg:x="4807" fg:w="452"/><text x="33.6668%" y="575.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (452 samples, 3.14%)</title><rect x="33.4168%" y="549" width="3.1422%" height="15" fill="rgb(221,31,33)" fg:x="4807" fg:w="452"/><text x="33.6668%" y="559.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (272 samples, 1.89%)</title><rect x="34.6681%" y="533" width="1.8909%" height="15" fill="rgb(237,42,40)" fg:x="4987" fg:w="272"/><text x="34.9181%" y="543.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (97 samples, 0.67%)</title><rect x="35.8846%" y="517" width="0.6743%" height="15" fill="rgb(233,51,29)" fg:x="5162" fg:w="97"/><text x="36.1346%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (76 samples, 0.53%)</title><rect x="36.5589%" y="581" width="0.5283%" height="15" fill="rgb(226,58,20)" fg:x="5259" fg:w="76"/><text x="36.8089%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (60 samples, 0.42%)</title><rect x="36.6701%" y="565" width="0.4171%" height="15" fill="rgb(208,98,7)" fg:x="5275" fg:w="60"/><text x="36.9201%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (59 samples, 0.41%)</title><rect x="36.6771%" y="549" width="0.4101%" height="15" fill="rgb(228,143,44)" fg:x="5276" fg:w="59"/><text x="36.9271%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (59 samples, 0.41%)</title><rect x="36.6771%" y="533" width="0.4101%" height="15" fill="rgb(246,55,38)" fg:x="5276" fg:w="59"/><text x="36.9271%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (28 samples, 0.19%)</title><rect x="37.6364%" y="453" width="0.1946%" height="15" fill="rgb(247,87,16)" fg:x="5414" fg:w="28"/><text x="37.8864%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (52 samples, 0.36%)</title><rect x="37.5461%" y="469" width="0.3615%" height="15" fill="rgb(234,129,42)" fg:x="5401" fg:w="52"/><text x="37.7961%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.08%)</title><rect x="37.8311%" y="453" width="0.0765%" height="15" fill="rgb(220,82,16)" fg:x="5442" fg:w="11"/><text x="38.0811%" y="463.50"></text></g><g><title>core::hash::sip::u8to64_le (18 samples, 0.13%)</title><rect x="37.9145%" y="469" width="0.1251%" height="15" fill="rgb(211,88,4)" fg:x="5454" fg:w="18"/><text x="38.1645%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (677 samples, 4.71%)</title><rect x="33.3403%" y="597" width="4.7063%" height="15" fill="rgb(248,151,21)" fg:x="4796" fg:w="677"/><text x="33.5903%" y="607.50">hashb..</text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (138 samples, 0.96%)</title><rect x="37.0872%" y="581" width="0.9593%" height="15" fill="rgb(238,163,6)" fg:x="5335" fg:w="138"/><text x="37.3372%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (131 samples, 0.91%)</title><rect x="37.1359%" y="565" width="0.9107%" height="15" fill="rgb(209,183,11)" fg:x="5342" fg:w="131"/><text x="37.3859%" y="575.50"></text></g><g><title>core::hash::Hasher::write_isize (131 samples, 0.91%)</title><rect x="37.1359%" y="549" width="0.9107%" height="15" fill="rgb(219,37,20)" fg:x="5342" fg:w="131"/><text x="37.3859%" y="559.50"></text></g><g><title>core::hash::Hasher::write_usize (131 samples, 0.91%)</title><rect x="37.1359%" y="533" width="0.9107%" height="15" fill="rgb(210,158,4)" fg:x="5342" fg:w="131"/><text x="37.3859%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (126 samples, 0.88%)</title><rect x="37.1707%" y="517" width="0.8759%" height="15" fill="rgb(221,167,53)" fg:x="5347" fg:w="126"/><text x="37.4207%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (126 samples, 0.88%)</title><rect x="37.1707%" y="501" width="0.8759%" height="15" fill="rgb(237,151,45)" fg:x="5347" fg:w="126"/><text x="37.4207%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (126 samples, 0.88%)</title><rect x="37.1707%" y="485" width="0.8759%" height="15" fill="rgb(231,39,3)" fg:x="5347" fg:w="126"/><text x="37.4207%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.24%)</title><rect x="38.5401%" y="533" width="0.2364%" height="15" fill="rgb(212,167,28)" fg:x="5544" fg:w="34"/><text x="38.7901%" y="543.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (13 samples, 0.09%)</title><rect x="38.6861%" y="517" width="0.0904%" height="15" fill="rgb(232,178,8)" fg:x="5565" fg:w="13"/><text x="38.9361%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.32%)</title><rect x="38.4637%" y="565" width="0.3198%" height="15" fill="rgb(225,151,20)" fg:x="5533" fg:w="46"/><text x="38.7137%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.32%)</title><rect x="38.4637%" y="549" width="0.3198%" height="15" fill="rgb(238,3,37)" fg:x="5533" fg:w="46"/><text x="38.7137%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (5 samples, 0.03%)</title><rect x="38.7835%" y="517" width="0.0348%" height="15" fill="rgb(251,147,42)" fg:x="5579" fg:w="5"/><text x="39.0335%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (9 samples, 0.06%)</title><rect x="38.8182%" y="517" width="0.0626%" height="15" fill="rgb(208,173,10)" fg:x="5584" fg:w="9"/><text x="39.0682%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (9 samples, 0.06%)</title><rect x="38.8182%" y="501" width="0.0626%" height="15" fill="rgb(246,225,4)" fg:x="5584" fg:w="9"/><text x="39.0682%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.06%)</title><rect x="38.8182%" y="485" width="0.0626%" height="15" fill="rgb(248,102,6)" fg:x="5584" fg:w="9"/><text x="39.0682%" y="495.50"></text></g><g><title>y2021::d18::main::Snail::has (950 samples, 6.60%)</title><rect x="32.9927%" y="661" width="6.6041%" height="15" fill="rgb(232,6,21)" fg:x="4746" fg:w="950"/><text x="33.2427%" y="671.50">y2021::d1..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (950 samples, 6.60%)</title><rect x="32.9927%" y="645" width="6.6041%" height="15" fill="rgb(221,179,22)" fg:x="4746" fg:w="950"/><text x="33.2427%" y="655.50">std::coll..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (943 samples, 6.56%)</title><rect x="33.0414%" y="629" width="6.5554%" height="15" fill="rgb(252,50,20)" fg:x="4753" fg:w="943"/><text x="33.2914%" y="639.50">hashbrown..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (926 samples, 6.44%)</title><rect x="33.1595%" y="613" width="6.4373%" height="15" fill="rgb(222,56,38)" fg:x="4770" fg:w="926"/><text x="33.4095%" y="623.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (223 samples, 1.55%)</title><rect x="38.0466%" y="597" width="1.5502%" height="15" fill="rgb(206,193,29)" fg:x="5473" fg:w="223"/><text x="38.2966%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (223 samples, 1.55%)</title><rect x="38.0466%" y="581" width="1.5502%" height="15" fill="rgb(239,192,45)" fg:x="5473" fg:w="223"/><text x="38.2966%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (117 samples, 0.81%)</title><rect x="38.7835%" y="565" width="0.8133%" height="15" fill="rgb(254,18,36)" fg:x="5579" fg:w="117"/><text x="39.0335%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (117 samples, 0.81%)</title><rect x="38.7835%" y="549" width="0.8133%" height="15" fill="rgb(221,127,11)" fg:x="5579" fg:w="117"/><text x="39.0335%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (117 samples, 0.81%)</title><rect x="38.7835%" y="533" width="0.8133%" height="15" fill="rgb(234,146,35)" fg:x="5579" fg:w="117"/><text x="39.0335%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (103 samples, 0.72%)</title><rect x="38.8808%" y="517" width="0.7160%" height="15" fill="rgb(254,201,37)" fg:x="5593" fg:w="103"/><text x="39.1308%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (103 samples, 0.72%)</title><rect x="38.8808%" y="501" width="0.7160%" height="15" fill="rgb(211,202,23)" fg:x="5593" fg:w="103"/><text x="39.1308%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (103 samples, 0.72%)</title><rect x="38.8808%" y="485" width="0.7160%" height="15" fill="rgb(237,91,2)" fg:x="5593" fg:w="103"/><text x="39.1308%" y="495.50"></text></g><g><title>core::core_arch::simd::i8x16::new (103 samples, 0.72%)</title><rect x="38.8808%" y="469" width="0.7160%" height="15" fill="rgb(226,228,36)" fg:x="5593" fg:w="103"/><text x="39.1308%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.07%)</title><rect x="39.5968%" y="645" width="0.0695%" height="15" fill="rgb(213,63,50)" fg:x="5696" fg:w="10"/><text x="39.8468%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="39.6872%" y="501" width="0.0139%" height="15" fill="rgb(235,194,19)" fg:x="5709" fg:w="2"/><text x="39.9372%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.04%)</title><rect x="39.6733%" y="565" width="0.0417%" height="15" fill="rgb(207,204,18)" fg:x="5707" fg:w="6"/><text x="39.9233%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.04%)</title><rect x="39.6733%" y="549" width="0.0417%" height="15" fill="rgb(248,8,7)" fg:x="5707" fg:w="6"/><text x="39.9233%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.04%)</title><rect x="39.6733%" y="533" width="0.0417%" height="15" fill="rgb(223,145,47)" fg:x="5707" fg:w="6"/><text x="39.9233%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.03%)</title><rect x="39.6802%" y="517" width="0.0348%" height="15" fill="rgb(228,84,11)" fg:x="5708" fg:w="5"/><text x="39.9302%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="39.7011%" y="501" width="0.0139%" height="15" fill="rgb(218,76,45)" fg:x="5711" fg:w="2"/><text x="39.9511%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.06%)</title><rect x="39.6733%" y="581" width="0.0556%" height="15" fill="rgb(223,80,15)" fg:x="5707" fg:w="8"/><text x="39.9233%" y="591.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="39.7150%" y="565" width="0.0139%" height="15" fill="rgb(219,218,33)" fg:x="5713" fg:w="2"/><text x="39.9650%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.01%)</title><rect x="39.7150%" y="549" width="0.0139%" height="15" fill="rgb(208,51,11)" fg:x="5713" fg:w="2"/><text x="39.9650%" y="559.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.01%)</title><rect x="39.7150%" y="533" width="0.0139%" height="15" fill="rgb(229,165,39)" fg:x="5713" fg:w="2"/><text x="39.9650%" y="543.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.01%)</title><rect x="39.7150%" y="517" width="0.0139%" height="15" fill="rgb(241,100,24)" fg:x="5713" fg:w="2"/><text x="39.9650%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="39.7150%" y="501" width="0.0139%" height="15" fill="rgb(228,14,23)" fg:x="5713" fg:w="2"/><text x="39.9650%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="39.7150%" y="485" width="0.0139%" height="15" fill="rgb(247,116,52)" fg:x="5713" fg:w="2"/><text x="39.9650%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="39.7150%" y="469" width="0.0139%" height="15" fill="rgb(216,149,33)" fg:x="5713" fg:w="2"/><text x="39.9650%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="39.7497%" y="549" width="0.0209%" height="15" fill="rgb(238,142,29)" fg:x="5718" fg:w="3"/><text x="39.9997%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="39.7497%" y="533" width="0.0209%" height="15" fill="rgb(224,83,40)" fg:x="5718" fg:w="3"/><text x="39.9997%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="39.7497%" y="517" width="0.0209%" height="15" fill="rgb(234,165,11)" fg:x="5718" fg:w="3"/><text x="39.9997%" y="527.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.02%)</title><rect x="39.7497%" y="501" width="0.0209%" height="15" fill="rgb(215,96,23)" fg:x="5718" fg:w="3"/><text x="39.9997%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="39.7706%" y="549" width="0.0139%" height="15" fill="rgb(233,179,26)" fg:x="5721" fg:w="2"/><text x="40.0206%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.01%)</title><rect x="39.7706%" y="533" width="0.0139%" height="15" fill="rgb(225,129,33)" fg:x="5721" fg:w="2"/><text x="40.0206%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.01%)</title><rect x="39.7706%" y="517" width="0.0139%" height="15" fill="rgb(237,49,13)" fg:x="5721" fg:w="2"/><text x="40.0206%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="39.7706%" y="501" width="0.0139%" height="15" fill="rgb(211,3,31)" fg:x="5721" fg:w="2"/><text x="40.0206%" y="511.50"></text></g><g><title>y2021::d18::main::Snail::get (21 samples, 0.15%)</title><rect x="39.6733%" y="645" width="0.1460%" height="15" fill="rgb(216,152,19)" fg:x="5707" fg:w="21"/><text x="39.9233%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (21 samples, 0.15%)</title><rect x="39.6733%" y="629" width="0.1460%" height="15" fill="rgb(251,121,35)" fg:x="5707" fg:w="21"/><text x="39.9233%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (21 samples, 0.15%)</title><rect x="39.6733%" y="613" width="0.1460%" height="15" fill="rgb(210,217,47)" fg:x="5707" fg:w="21"/><text x="39.9233%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (21 samples, 0.15%)</title><rect x="39.6733%" y="597" width="0.1460%" height="15" fill="rgb(244,116,22)" fg:x="5707" fg:w="21"/><text x="39.9233%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.09%)</title><rect x="39.7289%" y="581" width="0.0904%" height="15" fill="rgb(228,17,21)" fg:x="5715" fg:w="13"/><text x="39.9789%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.09%)</title><rect x="39.7289%" y="565" width="0.0904%" height="15" fill="rgb(240,149,34)" fg:x="5715" fg:w="13"/><text x="39.9789%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.03%)</title><rect x="39.7845%" y="549" width="0.0348%" height="15" fill="rgb(208,125,47)" fg:x="5723" fg:w="5"/><text x="40.0345%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.03%)</title><rect x="39.7845%" y="533" width="0.0348%" height="15" fill="rgb(249,186,39)" fg:x="5723" fg:w="5"/><text x="40.0345%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.03%)</title><rect x="39.7845%" y="517" width="0.0348%" height="15" fill="rgb(240,220,33)" fg:x="5723" fg:w="5"/><text x="40.0345%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.03%)</title><rect x="39.7845%" y="501" width="0.0348%" height="15" fill="rgb(243,110,23)" fg:x="5723" fg:w="5"/><text x="40.0345%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.03%)</title><rect x="39.7845%" y="485" width="0.0348%" height="15" fill="rgb(219,163,46)" fg:x="5723" fg:w="5"/><text x="40.0345%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.03%)</title><rect x="39.7845%" y="469" width="0.0348%" height="15" fill="rgb(216,126,30)" fg:x="5723" fg:w="5"/><text x="40.0345%" y="479.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.03%)</title><rect x="39.7845%" y="453" width="0.0348%" height="15" fill="rgb(208,139,11)" fg:x="5723" fg:w="5"/><text x="40.0345%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.02%)</title><rect x="39.8540%" y="517" width="0.0209%" height="15" fill="rgb(213,118,36)" fg:x="5733" fg:w="3"/><text x="40.1040%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="39.8610%" y="501" width="0.0139%" height="15" fill="rgb(226,43,17)" fg:x="5734" fg:w="2"/><text x="40.1110%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="39.8957%" y="501" width="0.0139%" height="15" fill="rgb(254,217,4)" fg:x="5739" fg:w="2"/><text x="40.1457%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (19 samples, 0.13%)</title><rect x="39.8332%" y="565" width="0.1321%" height="15" fill="rgb(210,134,47)" fg:x="5730" fg:w="19"/><text x="40.0832%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (19 samples, 0.13%)</title><rect x="39.8332%" y="549" width="0.1321%" height="15" fill="rgb(237,24,49)" fg:x="5730" fg:w="19"/><text x="40.0832%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (19 samples, 0.13%)</title><rect x="39.8332%" y="533" width="0.1321%" height="15" fill="rgb(251,39,46)" fg:x="5730" fg:w="19"/><text x="40.0832%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13 samples, 0.09%)</title><rect x="39.8749%" y="517" width="0.0904%" height="15" fill="rgb(251,220,3)" fg:x="5736" fg:w="13"/><text x="40.1249%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.06%)</title><rect x="39.9096%" y="501" width="0.0556%" height="15" fill="rgb(228,105,12)" fg:x="5741" fg:w="8"/><text x="40.1596%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.01%)</title><rect x="39.9652%" y="565" width="0.0139%" height="15" fill="rgb(215,196,1)" fg:x="5749" fg:w="2"/><text x="40.2152%" y="575.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.01%)</title><rect x="39.9652%" y="549" width="0.0139%" height="15" fill="rgb(214,33,39)" fg:x="5749" fg:w="2"/><text x="40.2152%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.01%)</title><rect x="39.9652%" y="533" width="0.0139%" height="15" fill="rgb(220,19,52)" fg:x="5749" fg:w="2"/><text x="40.2152%" y="543.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.01%)</title><rect x="39.9652%" y="517" width="0.0139%" height="15" fill="rgb(221,78,38)" fg:x="5749" fg:w="2"/><text x="40.2152%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (25 samples, 0.17%)</title><rect x="39.8332%" y="581" width="0.1738%" height="15" fill="rgb(253,30,16)" fg:x="5730" fg:w="25"/><text x="40.0832%" y="591.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (4 samples, 0.03%)</title><rect x="39.9791%" y="565" width="0.0278%" height="15" fill="rgb(242,65,0)" fg:x="5751" fg:w="4"/><text x="40.2291%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (3 samples, 0.02%)</title><rect x="39.9861%" y="549" width="0.0209%" height="15" fill="rgb(235,201,12)" fg:x="5752" fg:w="3"/><text x="40.2361%" y="559.50"></text></g><g><title>core::hash::Hasher::write_isize (3 samples, 0.02%)</title><rect x="39.9861%" y="533" width="0.0209%" height="15" fill="rgb(233,161,9)" fg:x="5752" fg:w="3"/><text x="40.2361%" y="543.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.02%)</title><rect x="39.9861%" y="517" width="0.0209%" height="15" fill="rgb(241,207,41)" fg:x="5752" fg:w="3"/><text x="40.2361%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="39.9930%" y="501" width="0.0139%" height="15" fill="rgb(212,69,46)" fg:x="5753" fg:w="2"/><text x="40.2430%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="39.9930%" y="485" width="0.0139%" height="15" fill="rgb(239,69,45)" fg:x="5753" fg:w="2"/><text x="40.2430%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="39.9930%" y="469" width="0.0139%" height="15" fill="rgb(242,117,48)" fg:x="5753" fg:w="2"/><text x="40.2430%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="40.0417%" y="549" width="0.0209%" height="15" fill="rgb(228,41,36)" fg:x="5760" fg:w="3"/><text x="40.2917%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="40.0417%" y="533" width="0.0209%" height="15" fill="rgb(212,3,32)" fg:x="5760" fg:w="3"/><text x="40.2917%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="40.0417%" y="517" width="0.0209%" height="15" fill="rgb(233,41,49)" fg:x="5760" fg:w="3"/><text x="40.2917%" y="527.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.01%)</title><rect x="40.0487%" y="501" width="0.0139%" height="15" fill="rgb(252,170,49)" fg:x="5761" fg:w="2"/><text x="40.2987%" y="511.50"></text></g><g><title>y2021::d18::main::Snail::has (37 samples, 0.26%)</title><rect x="39.8193%" y="645" width="0.2572%" height="15" fill="rgb(229,53,26)" fg:x="5728" fg:w="37"/><text x="40.0693%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (37 samples, 0.26%)</title><rect x="39.8193%" y="629" width="0.2572%" height="15" fill="rgb(217,157,12)" fg:x="5728" fg:w="37"/><text x="40.0693%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (37 samples, 0.26%)</title><rect x="39.8193%" y="613" width="0.2572%" height="15" fill="rgb(227,17,9)" fg:x="5728" fg:w="37"/><text x="40.0693%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (35 samples, 0.24%)</title><rect x="39.8332%" y="597" width="0.2433%" height="15" fill="rgb(218,84,12)" fg:x="5730" fg:w="35"/><text x="40.0832%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.07%)</title><rect x="40.0070%" y="581" width="0.0695%" height="15" fill="rgb(212,79,24)" fg:x="5755" fg:w="10"/><text x="40.2570%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.07%)</title><rect x="40.0070%" y="565" width="0.0695%" height="15" fill="rgb(217,222,37)" fg:x="5755" fg:w="10"/><text x="40.2570%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.01%)</title><rect x="40.0626%" y="549" width="0.0139%" height="15" fill="rgb(246,208,8)" fg:x="5763" fg:w="2"/><text x="40.3126%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.01%)</title><rect x="40.0626%" y="533" width="0.0139%" height="15" fill="rgb(244,133,10)" fg:x="5763" fg:w="2"/><text x="40.3126%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.01%)</title><rect x="40.0626%" y="517" width="0.0139%" height="15" fill="rgb(209,219,41)" fg:x="5763" fg:w="2"/><text x="40.3126%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.01%)</title><rect x="40.0626%" y="501" width="0.0139%" height="15" fill="rgb(253,175,45)" fg:x="5763" fg:w="2"/><text x="40.3126%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.01%)</title><rect x="40.0626%" y="485" width="0.0139%" height="15" fill="rgb(235,100,37)" fg:x="5763" fg:w="2"/><text x="40.3126%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.01%)</title><rect x="40.0626%" y="469" width="0.0139%" height="15" fill="rgb(225,87,19)" fg:x="5763" fg:w="2"/><text x="40.3126%" y="479.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.01%)</title><rect x="40.0626%" y="453" width="0.0139%" height="15" fill="rgb(217,152,17)" fg:x="5763" fg:w="2"/><text x="40.3126%" y="463.50"></text></g><g><title>y2021::d18::main::Snail::is_zero (2 samples, 0.01%)</title><rect x="40.0765%" y="645" width="0.0139%" height="15" fill="rgb(235,72,13)" fg:x="5765" fg:w="2"/><text x="40.3265%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.05%)</title><rect x="40.2433%" y="501" width="0.0487%" height="15" fill="rgb(233,140,18)" fg:x="5789" fg:w="7"/><text x="40.4933%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (14 samples, 0.10%)</title><rect x="40.2086%" y="565" width="0.0973%" height="15" fill="rgb(207,212,28)" fg:x="5784" fg:w="14"/><text x="40.4586%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (14 samples, 0.10%)</title><rect x="40.2086%" y="549" width="0.0973%" height="15" fill="rgb(220,130,25)" fg:x="5784" fg:w="14"/><text x="40.4586%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (14 samples, 0.10%)</title><rect x="40.2086%" y="533" width="0.0973%" height="15" fill="rgb(205,55,34)" fg:x="5784" fg:w="14"/><text x="40.4586%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.08%)</title><rect x="40.2294%" y="517" width="0.0765%" height="15" fill="rgb(237,54,35)" fg:x="5787" fg:w="11"/><text x="40.4794%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="40.2920%" y="501" width="0.0139%" height="15" fill="rgb(208,67,23)" fg:x="5796" fg:w="2"/><text x="40.5420%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.02%)</title><rect x="40.3059%" y="565" width="0.0209%" height="15" fill="rgb(206,207,50)" fg:x="5798" fg:w="3"/><text x="40.5559%" y="575.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.01%)</title><rect x="40.3128%" y="549" width="0.0139%" height="15" fill="rgb(213,211,42)" fg:x="5799" fg:w="2"/><text x="40.5628%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.01%)</title><rect x="40.3128%" y="533" width="0.0139%" height="15" fill="rgb(252,197,50)" fg:x="5799" fg:w="2"/><text x="40.5628%" y="543.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.01%)</title><rect x="40.3128%" y="517" width="0.0139%" height="15" fill="rgb(251,211,41)" fg:x="5799" fg:w="2"/><text x="40.5628%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.13%)</title><rect x="40.2086%" y="581" width="0.1251%" height="15" fill="rgb(229,211,5)" fg:x="5784" fg:w="18"/><text x="40.4586%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="40.3754%" y="549" width="0.0278%" height="15" fill="rgb(239,36,31)" fg:x="5808" fg:w="4"/><text x="40.6254%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="40.3754%" y="533" width="0.0278%" height="15" fill="rgb(248,67,31)" fg:x="5808" fg:w="4"/><text x="40.6254%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="40.3893%" y="517" width="0.0139%" height="15" fill="rgb(249,55,44)" fg:x="5810" fg:w="2"/><text x="40.6393%" y="527.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.01%)</title><rect x="40.3893%" y="501" width="0.0139%" height="15" fill="rgb(216,82,12)" fg:x="5810" fg:w="2"/><text x="40.6393%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.09%)</title><rect x="40.3337%" y="565" width="0.0904%" height="15" fill="rgb(242,174,1)" fg:x="5802" fg:w="13"/><text x="40.5837%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.02%)</title><rect x="40.4032%" y="549" width="0.0209%" height="15" fill="rgb(208,120,29)" fg:x="5812" fg:w="3"/><text x="40.6532%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.02%)</title><rect x="40.4032%" y="533" width="0.0209%" height="15" fill="rgb(221,105,43)" fg:x="5812" fg:w="3"/><text x="40.6532%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.02%)</title><rect x="40.4032%" y="517" width="0.0209%" height="15" fill="rgb(234,124,22)" fg:x="5812" fg:w="3"/><text x="40.6532%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::read (2 samples, 0.01%)</title><rect x="40.4241%" y="549" width="0.0139%" height="15" fill="rgb(212,23,30)" fg:x="5815" fg:w="2"/><text x="40.6741%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (2 samples, 0.01%)</title><rect x="40.4241%" y="533" width="0.0139%" height="15" fill="rgb(219,122,53)" fg:x="5815" fg:w="2"/><text x="40.6741%" y="543.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="40.4241%" y="517" width="0.0139%" height="15" fill="rgb(248,84,24)" fg:x="5815" fg:w="2"/><text x="40.6741%" y="527.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::leading_zeros (2 samples, 0.01%)</title><rect x="40.4449%" y="517" width="0.0139%" height="15" fill="rgb(245,115,18)" fg:x="5818" fg:w="2"/><text x="40.6949%" y="527.50"></text></g><g><title>core::num::&lt;impl u16&gt;::leading_zeros (2 samples, 0.01%)</title><rect x="40.4449%" y="501" width="0.0139%" height="15" fill="rgb(227,176,51)" fg:x="5818" fg:w="2"/><text x="40.6949%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (7 samples, 0.05%)</title><rect x="40.4727%" y="485" width="0.0487%" height="15" fill="rgb(229,63,42)" fg:x="5822" fg:w="7"/><text x="40.7227%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (65 samples, 0.45%)</title><rect x="40.0973%" y="613" width="0.4519%" height="15" fill="rgb(247,202,24)" fg:x="5768" fg:w="65"/><text x="40.3473%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (49 samples, 0.34%)</title><rect x="40.2086%" y="597" width="0.3406%" height="15" fill="rgb(244,173,20)" fg:x="5784" fg:w="49"/><text x="40.4586%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (31 samples, 0.22%)</title><rect x="40.3337%" y="581" width="0.2155%" height="15" fill="rgb(242,81,47)" fg:x="5802" fg:w="31"/><text x="40.5837%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (18 samples, 0.13%)</title><rect x="40.4241%" y="565" width="0.1251%" height="15" fill="rgb(231,185,54)" fg:x="5815" fg:w="18"/><text x="40.6741%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (16 samples, 0.11%)</title><rect x="40.4380%" y="549" width="0.1112%" height="15" fill="rgb(243,55,32)" fg:x="5817" fg:w="16"/><text x="40.6880%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::erase (16 samples, 0.11%)</title><rect x="40.4380%" y="533" width="0.1112%" height="15" fill="rgb(208,167,19)" fg:x="5817" fg:w="16"/><text x="40.6880%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (11 samples, 0.08%)</title><rect x="40.4727%" y="517" width="0.0765%" height="15" fill="rgb(231,72,35)" fg:x="5822" fg:w="11"/><text x="40.7227%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (11 samples, 0.08%)</title><rect x="40.4727%" y="501" width="0.0765%" height="15" fill="rgb(250,173,51)" fg:x="5822" fg:w="11"/><text x="40.7227%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.03%)</title><rect x="40.5214%" y="485" width="0.0278%" height="15" fill="rgb(209,5,22)" fg:x="5829" fg:w="4"/><text x="40.7714%" y="495.50"></text></g><g><title>y2021::d18::main::Snail::explode (1,198 samples, 8.33%)</title><rect x="32.2280%" y="677" width="8.3281%" height="15" fill="rgb(250,174,19)" fg:x="4636" fg:w="1198"/><text x="32.4780%" y="687.50">y2021::d18::..</text></g><g><title>y2021::d18::main::Snail::prune (138 samples, 0.96%)</title><rect x="39.5968%" y="661" width="0.9593%" height="15" fill="rgb(217,3,49)" fg:x="5696" fg:w="138"/><text x="39.8468%" y="671.50"></text></g><g><title>y2021::d18::main::Snail::remove (67 samples, 0.47%)</title><rect x="40.0904%" y="645" width="0.4658%" height="15" fill="rgb(218,225,5)" fg:x="5767" fg:w="67"/><text x="40.3404%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (67 samples, 0.47%)</title><rect x="40.0904%" y="629" width="0.4658%" height="15" fill="rgb(236,89,11)" fg:x="5767" fg:w="67"/><text x="40.3404%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.06%)</title><rect x="40.8829%" y="533" width="0.0556%" height="15" fill="rgb(206,33,28)" fg:x="5881" fg:w="8"/><text x="41.1329%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.08%)</title><rect x="40.8690%" y="549" width="0.0834%" height="15" fill="rgb(241,56,42)" fg:x="5879" fg:w="12"/><text x="41.1190%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="40.9385%" y="533" width="0.0139%" height="15" fill="rgb(222,44,11)" fg:x="5889" fg:w="2"/><text x="41.1885%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (36 samples, 0.25%)</title><rect x="41.0428%" y="533" width="0.2503%" height="15" fill="rgb(234,111,20)" fg:x="5904" fg:w="36"/><text x="41.2928%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (94 samples, 0.65%)</title><rect x="40.7577%" y="597" width="0.6535%" height="15" fill="rgb(237,77,6)" fg:x="5863" fg:w="94"/><text x="41.0077%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (94 samples, 0.65%)</title><rect x="40.7577%" y="581" width="0.6535%" height="15" fill="rgb(235,111,23)" fg:x="5863" fg:w="94"/><text x="41.0077%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (94 samples, 0.65%)</title><rect x="40.7577%" y="565" width="0.6535%" height="15" fill="rgb(251,135,29)" fg:x="5863" fg:w="94"/><text x="41.0077%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (66 samples, 0.46%)</title><rect x="40.9524%" y="549" width="0.4588%" height="15" fill="rgb(217,57,1)" fg:x="5891" fg:w="66"/><text x="41.2024%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (17 samples, 0.12%)</title><rect x="41.2930%" y="533" width="0.1182%" height="15" fill="rgb(249,119,31)" fg:x="5940" fg:w="17"/><text x="41.5430%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.02%)</title><rect x="41.4112%" y="597" width="0.0209%" height="15" fill="rgb(233,164,33)" fg:x="5957" fg:w="3"/><text x="41.6612%" y="607.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.02%)</title><rect x="41.4112%" y="581" width="0.0209%" height="15" fill="rgb(250,217,43)" fg:x="5957" fg:w="3"/><text x="41.6612%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.03%)</title><rect x="41.5502%" y="469" width="0.0348%" height="15" fill="rgb(232,154,50)" fg:x="5977" fg:w="5"/><text x="41.8002%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.04%)</title><rect x="41.5502%" y="485" width="0.0417%" height="15" fill="rgb(227,190,8)" fg:x="5977" fg:w="6"/><text x="41.8002%" y="495.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.05%)</title><rect x="41.5919%" y="485" width="0.0487%" height="15" fill="rgb(209,217,32)" fg:x="5983" fg:w="7"/><text x="41.8419%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (141 samples, 0.98%)</title><rect x="40.6882%" y="613" width="0.9802%" height="15" fill="rgb(243,203,50)" fg:x="5853" fg:w="141"/><text x="40.9382%" y="623.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (34 samples, 0.24%)</title><rect x="41.4320%" y="597" width="0.2364%" height="15" fill="rgb(232,152,27)" fg:x="5960" fg:w="34"/><text x="41.6820%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (34 samples, 0.24%)</title><rect x="41.4320%" y="581" width="0.2364%" height="15" fill="rgb(240,34,29)" fg:x="5960" fg:w="34"/><text x="41.6820%" y="591.50"></text></g><g><title>core::hash::Hasher::write_isize (34 samples, 0.24%)</title><rect x="41.4320%" y="565" width="0.2364%" height="15" fill="rgb(215,185,52)" fg:x="5960" fg:w="34"/><text x="41.6820%" y="575.50"></text></g><g><title>core::hash::Hasher::write_usize (34 samples, 0.24%)</title><rect x="41.4320%" y="549" width="0.2364%" height="15" fill="rgb(240,89,49)" fg:x="5960" fg:w="34"/><text x="41.6820%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (34 samples, 0.24%)</title><rect x="41.4320%" y="533" width="0.2364%" height="15" fill="rgb(225,12,52)" fg:x="5960" fg:w="34"/><text x="41.6820%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (34 samples, 0.24%)</title><rect x="41.4320%" y="517" width="0.2364%" height="15" fill="rgb(239,128,45)" fg:x="5960" fg:w="34"/><text x="41.6820%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (34 samples, 0.24%)</title><rect x="41.4320%" y="501" width="0.2364%" height="15" fill="rgb(211,78,47)" fg:x="5960" fg:w="34"/><text x="41.6820%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.03%)</title><rect x="41.6406%" y="485" width="0.0278%" height="15" fill="rgb(232,31,21)" fg:x="5990" fg:w="4"/><text x="41.8906%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.11%)</title><rect x="41.9812%" y="581" width="0.1112%" height="15" fill="rgb(222,168,14)" fg:x="6039" fg:w="16"/><text x="42.2312%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.11%)</title><rect x="41.9812%" y="565" width="0.1112%" height="15" fill="rgb(209,128,24)" fg:x="6039" fg:w="16"/><text x="42.2312%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.11%)</title><rect x="41.9812%" y="549" width="0.1112%" height="15" fill="rgb(249,35,13)" fg:x="6039" fg:w="16"/><text x="42.2312%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (11 samples, 0.08%)</title><rect x="42.0160%" y="533" width="0.0765%" height="15" fill="rgb(218,7,2)" fg:x="6044" fg:w="11"/><text x="42.2660%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (11 samples, 0.08%)</title><rect x="42.0925%" y="581" width="0.0765%" height="15" fill="rgb(238,107,27)" fg:x="6055" fg:w="11"/><text x="42.3425%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (11 samples, 0.08%)</title><rect x="42.0925%" y="565" width="0.0765%" height="15" fill="rgb(217,88,38)" fg:x="6055" fg:w="11"/><text x="42.3425%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (11 samples, 0.08%)</title><rect x="42.0925%" y="549" width="0.0765%" height="15" fill="rgb(230,207,0)" fg:x="6055" fg:w="11"/><text x="42.3425%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (11 samples, 0.08%)</title><rect x="42.0925%" y="533" width="0.0765%" height="15" fill="rgb(249,64,54)" fg:x="6055" fg:w="11"/><text x="42.3425%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (4 samples, 0.03%)</title><rect x="42.1689%" y="533" width="0.0278%" height="15" fill="rgb(231,7,11)" fg:x="6066" fg:w="4"/><text x="42.4189%" y="543.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (278 samples, 1.93%)</title><rect x="40.5561%" y="677" width="1.9326%" height="15" fill="rgb(205,149,21)" fg:x="5834" fg:w="278"/><text x="40.8061%" y="687.50">y..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (278 samples, 1.93%)</title><rect x="40.5561%" y="661" width="1.9326%" height="15" fill="rgb(215,126,34)" fg:x="5834" fg:w="278"/><text x="40.8061%" y="671.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (275 samples, 1.91%)</title><rect x="40.5770%" y="645" width="1.9117%" height="15" fill="rgb(241,132,45)" fg:x="5837" fg:w="275"/><text x="40.8270%" y="655.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (266 samples, 1.85%)</title><rect x="40.6396%" y="629" width="1.8491%" height="15" fill="rgb(252,69,32)" fg:x="5846" fg:w="266"/><text x="40.8896%" y="639.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (118 samples, 0.82%)</title><rect x="41.6684%" y="613" width="0.8203%" height="15" fill="rgb(232,204,19)" fg:x="5994" fg:w="118"/><text x="41.9184%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (118 samples, 0.82%)</title><rect x="41.6684%" y="597" width="0.8203%" height="15" fill="rgb(249,15,47)" fg:x="5994" fg:w="118"/><text x="41.9184%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (46 samples, 0.32%)</title><rect x="42.1689%" y="581" width="0.3198%" height="15" fill="rgb(209,227,23)" fg:x="6066" fg:w="46"/><text x="42.4189%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (46 samples, 0.32%)</title><rect x="42.1689%" y="565" width="0.3198%" height="15" fill="rgb(248,92,24)" fg:x="6066" fg:w="46"/><text x="42.4189%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (46 samples, 0.32%)</title><rect x="42.1689%" y="549" width="0.3198%" height="15" fill="rgb(247,59,2)" fg:x="6066" fg:w="46"/><text x="42.4189%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (42 samples, 0.29%)</title><rect x="42.1967%" y="533" width="0.2920%" height="15" fill="rgb(221,30,5)" fg:x="6070" fg:w="42"/><text x="42.4467%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (42 samples, 0.29%)</title><rect x="42.1967%" y="517" width="0.2920%" height="15" fill="rgb(208,108,53)" fg:x="6070" fg:w="42"/><text x="42.4467%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (42 samples, 0.29%)</title><rect x="42.1967%" y="501" width="0.2920%" height="15" fill="rgb(211,183,26)" fg:x="6070" fg:w="42"/><text x="42.4467%" y="511.50"></text></g><g><title>core::core_arch::simd::i8x16::new (42 samples, 0.29%)</title><rect x="42.1967%" y="485" width="0.2920%" height="15" fill="rgb(232,132,4)" fg:x="6070" fg:w="42"/><text x="42.4467%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (18 samples, 0.13%)</title><rect x="43.1561%" y="533" width="0.1251%" height="15" fill="rgb(253,128,37)" fg:x="6208" fg:w="18"/><text x="43.4061%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (35 samples, 0.24%)</title><rect x="43.1074%" y="549" width="0.2433%" height="15" fill="rgb(221,58,24)" fg:x="6201" fg:w="35"/><text x="43.3574%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (10 samples, 0.07%)</title><rect x="43.2812%" y="533" width="0.0695%" height="15" fill="rgb(230,54,45)" fg:x="6226" fg:w="10"/><text x="43.5312%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (72 samples, 0.50%)</title><rect x="43.5315%" y="533" width="0.5005%" height="15" fill="rgb(254,21,18)" fg:x="6262" fg:w="72"/><text x="43.7815%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (227 samples, 1.58%)</title><rect x="42.6973%" y="597" width="1.5780%" height="15" fill="rgb(221,108,0)" fg:x="6142" fg:w="227"/><text x="42.9473%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (227 samples, 1.58%)</title><rect x="42.6973%" y="581" width="1.5780%" height="15" fill="rgb(206,95,1)" fg:x="6142" fg:w="227"/><text x="42.9473%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (227 samples, 1.58%)</title><rect x="42.6973%" y="565" width="1.5780%" height="15" fill="rgb(237,52,5)" fg:x="6142" fg:w="227"/><text x="42.9473%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (133 samples, 0.92%)</title><rect x="43.3507%" y="549" width="0.9246%" height="15" fill="rgb(218,150,34)" fg:x="6236" fg:w="133"/><text x="43.6007%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (35 samples, 0.24%)</title><rect x="44.0320%" y="533" width="0.2433%" height="15" fill="rgb(235,194,28)" fg:x="6334" fg:w="35"/><text x="44.2820%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (33 samples, 0.23%)</title><rect x="44.2753%" y="597" width="0.2294%" height="15" fill="rgb(245,92,18)" fg:x="6369" fg:w="33"/><text x="44.5253%" y="607.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (26 samples, 0.18%)</title><rect x="44.3239%" y="581" width="0.1807%" height="15" fill="rgb(253,203,53)" fg:x="6376" fg:w="26"/><text x="44.5739%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (21 samples, 0.15%)</title><rect x="44.3587%" y="565" width="0.1460%" height="15" fill="rgb(249,185,47)" fg:x="6381" fg:w="21"/><text x="44.6087%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (21 samples, 0.15%)</title><rect x="44.3587%" y="549" width="0.1460%" height="15" fill="rgb(252,194,52)" fg:x="6381" fg:w="21"/><text x="44.6087%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.12%)</title><rect x="44.8106%" y="469" width="0.1182%" height="15" fill="rgb(210,53,36)" fg:x="6446" fg:w="17"/><text x="45.0606%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (33 samples, 0.23%)</title><rect x="44.7480%" y="485" width="0.2294%" height="15" fill="rgb(237,37,25)" fg:x="6437" fg:w="33"/><text x="44.9980%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.05%)</title><rect x="44.9287%" y="469" width="0.0487%" height="15" fill="rgb(242,116,27)" fg:x="6463" fg:w="7"/><text x="45.1787%" y="479.50"></text></g><g><title>core::hash::sip::u8to64_le (9 samples, 0.06%)</title><rect x="44.9774%" y="485" width="0.0626%" height="15" fill="rgb(213,185,26)" fg:x="6470" fg:w="9"/><text x="45.2274%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (348 samples, 2.42%)</title><rect x="42.6347%" y="613" width="2.4192%" height="15" fill="rgb(225,204,8)" fg:x="6133" fg:w="348"/><text x="42.8847%" y="623.50">ha..</text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (79 samples, 0.55%)</title><rect x="44.5047%" y="597" width="0.5492%" height="15" fill="rgb(254,111,37)" fg:x="6402" fg:w="79"/><text x="44.7547%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (75 samples, 0.52%)</title><rect x="44.5325%" y="581" width="0.5214%" height="15" fill="rgb(242,35,9)" fg:x="6406" fg:w="75"/><text x="44.7825%" y="591.50"></text></g><g><title>core::hash::Hasher::write_isize (75 samples, 0.52%)</title><rect x="44.5325%" y="565" width="0.5214%" height="15" fill="rgb(232,138,49)" fg:x="6406" fg:w="75"/><text x="44.7825%" y="575.50"></text></g><g><title>core::hash::Hasher::write_usize (75 samples, 0.52%)</title><rect x="44.5325%" y="549" width="0.5214%" height="15" fill="rgb(247,56,4)" fg:x="6406" fg:w="75"/><text x="44.7825%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (73 samples, 0.51%)</title><rect x="44.5464%" y="533" width="0.5075%" height="15" fill="rgb(226,179,17)" fg:x="6408" fg:w="73"/><text x="44.7964%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (73 samples, 0.51%)</title><rect x="44.5464%" y="517" width="0.5075%" height="15" fill="rgb(216,163,45)" fg:x="6408" fg:w="73"/><text x="44.7964%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 samples, 0.51%)</title><rect x="44.5464%" y="501" width="0.5075%" height="15" fill="rgb(211,157,3)" fg:x="6408" fg:w="73"/><text x="44.7964%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="45.0400%" y="485" width="0.0139%" height="15" fill="rgb(234,44,20)" fg:x="6479" fg:w="2"/><text x="45.2900%" y="495.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (19 samples, 0.13%)</title><rect x="46.0619%" y="533" width="0.1321%" height="15" fill="rgb(254,138,23)" fg:x="6626" fg:w="19"/><text x="46.3119%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.20%)</title><rect x="45.9993%" y="549" width="0.2016%" height="15" fill="rgb(206,119,39)" fg:x="6617" fg:w="29"/><text x="46.2493%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.25%)</title><rect x="45.9784%" y="581" width="0.2503%" height="15" fill="rgb(231,105,52)" fg:x="6614" fg:w="36"/><text x="46.2284%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.25%)</title><rect x="45.9784%" y="565" width="0.2503%" height="15" fill="rgb(250,20,5)" fg:x="6614" fg:w="36"/><text x="46.2284%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (4 samples, 0.03%)</title><rect x="46.2009%" y="549" width="0.0278%" height="15" fill="rgb(215,198,30)" fg:x="6646" fg:w="4"/><text x="46.4509%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.03%)</title><rect x="46.2009%" y="533" width="0.0278%" height="15" fill="rgb(246,142,8)" fg:x="6646" fg:w="4"/><text x="46.4509%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.03%)</title><rect x="46.2009%" y="517" width="0.0278%" height="15" fill="rgb(243,26,38)" fg:x="6646" fg:w="4"/><text x="46.4509%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (4 samples, 0.03%)</title><rect x="46.2357%" y="533" width="0.0278%" height="15" fill="rgb(205,133,28)" fg:x="6651" fg:w="4"/><text x="46.4857%" y="543.50"></text></g><g><title>y2021::d18::main::Snail::explode (2,104 samples, 14.63%)</title><rect x="32.0542%" y="693" width="14.6263%" height="15" fill="rgb(212,34,0)" fg:x="4611" fg:w="2104"/><text x="32.3042%" y="703.50">y2021::d18::main::Snai..</text></g><g><title>y2021::d18::main::Snail::has (603 samples, 4.19%)</title><rect x="42.4887%" y="677" width="4.1919%" height="15" fill="rgb(251,226,22)" fg:x="6112" fg:w="603"/><text x="42.7387%" y="687.50">y2021..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (603 samples, 4.19%)</title><rect x="42.4887%" y="661" width="4.1919%" height="15" fill="rgb(252,119,9)" fg:x="6112" fg:w="603"/><text x="42.7387%" y="671.50">std::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (598 samples, 4.16%)</title><rect x="42.5235%" y="645" width="4.1571%" height="15" fill="rgb(213,150,50)" fg:x="6117" fg:w="598"/><text x="42.7735%" y="655.50">hashb..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (595 samples, 4.14%)</title><rect x="42.5443%" y="629" width="4.1363%" height="15" fill="rgb(212,24,39)" fg:x="6120" fg:w="595"/><text x="42.7943%" y="639.50">hashb..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (234 samples, 1.63%)</title><rect x="45.0539%" y="613" width="1.6267%" height="15" fill="rgb(213,46,39)" fg:x="6481" fg:w="234"/><text x="45.3039%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (234 samples, 1.63%)</title><rect x="45.0539%" y="597" width="1.6267%" height="15" fill="rgb(239,106,12)" fg:x="6481" fg:w="234"/><text x="45.3039%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (64 samples, 0.44%)</title><rect x="46.2357%" y="581" width="0.4449%" height="15" fill="rgb(249,229,21)" fg:x="6651" fg:w="64"/><text x="46.4857%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (64 samples, 0.44%)</title><rect x="46.2357%" y="565" width="0.4449%" height="15" fill="rgb(212,158,3)" fg:x="6651" fg:w="64"/><text x="46.4857%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (64 samples, 0.44%)</title><rect x="46.2357%" y="549" width="0.4449%" height="15" fill="rgb(253,26,48)" fg:x="6651" fg:w="64"/><text x="46.4857%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (60 samples, 0.42%)</title><rect x="46.2635%" y="533" width="0.4171%" height="15" fill="rgb(238,178,20)" fg:x="6655" fg:w="60"/><text x="46.5135%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (60 samples, 0.42%)</title><rect x="46.2635%" y="517" width="0.4171%" height="15" fill="rgb(208,86,15)" fg:x="6655" fg:w="60"/><text x="46.5135%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (60 samples, 0.42%)</title><rect x="46.2635%" y="501" width="0.4171%" height="15" fill="rgb(239,42,53)" fg:x="6655" fg:w="60"/><text x="46.5135%" y="511.50"></text></g><g><title>core::core_arch::simd::i8x16::new (60 samples, 0.42%)</title><rect x="46.2635%" y="485" width="0.4171%" height="15" fill="rgb(245,226,8)" fg:x="6655" fg:w="60"/><text x="46.5135%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.03%)</title><rect x="46.8405%" y="565" width="0.0348%" height="15" fill="rgb(216,176,32)" fg:x="6738" fg:w="5"/><text x="47.0905%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.03%)</title><rect x="46.8474%" y="549" width="0.0278%" height="15" fill="rgb(231,186,21)" fg:x="6739" fg:w="4"/><text x="47.0974%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (20 samples, 0.14%)</title><rect x="46.9725%" y="549" width="0.1390%" height="15" fill="rgb(205,95,49)" fg:x="6757" fg:w="20"/><text x="47.2225%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (61 samples, 0.42%)</title><rect x="46.7570%" y="613" width="0.4241%" height="15" fill="rgb(217,145,8)" fg:x="6726" fg:w="61"/><text x="47.0070%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (61 samples, 0.42%)</title><rect x="46.7570%" y="597" width="0.4241%" height="15" fill="rgb(239,144,48)" fg:x="6726" fg:w="61"/><text x="47.0070%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (61 samples, 0.42%)</title><rect x="46.7570%" y="581" width="0.4241%" height="15" fill="rgb(214,189,23)" fg:x="6726" fg:w="61"/><text x="47.0070%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (44 samples, 0.31%)</title><rect x="46.8752%" y="565" width="0.3059%" height="15" fill="rgb(229,157,17)" fg:x="6743" fg:w="44"/><text x="47.1252%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (10 samples, 0.07%)</title><rect x="47.1116%" y="549" width="0.0695%" height="15" fill="rgb(230,5,48)" fg:x="6777" fg:w="10"/><text x="47.3616%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.03%)</title><rect x="47.2645%" y="485" width="0.0278%" height="15" fill="rgb(224,156,48)" fg:x="6799" fg:w="4"/><text x="47.5145%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.06%)</title><rect x="47.2645%" y="501" width="0.0626%" height="15" fill="rgb(223,14,29)" fg:x="6799" fg:w="9"/><text x="47.5145%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.03%)</title><rect x="47.2923%" y="485" width="0.0348%" height="15" fill="rgb(229,96,36)" fg:x="6803" fg:w="5"/><text x="47.5423%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (85 samples, 0.59%)</title><rect x="46.7431%" y="629" width="0.5909%" height="15" fill="rgb(231,102,53)" fg:x="6724" fg:w="85"/><text x="46.9931%" y="639.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (21 samples, 0.15%)</title><rect x="47.1880%" y="613" width="0.1460%" height="15" fill="rgb(210,77,38)" fg:x="6788" fg:w="21"/><text x="47.4380%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (21 samples, 0.15%)</title><rect x="47.1880%" y="597" width="0.1460%" height="15" fill="rgb(235,131,6)" fg:x="6788" fg:w="21"/><text x="47.4380%" y="607.50"></text></g><g><title>core::hash::Hasher::write_isize (21 samples, 0.15%)</title><rect x="47.1880%" y="581" width="0.1460%" height="15" fill="rgb(252,55,38)" fg:x="6788" fg:w="21"/><text x="47.4380%" y="591.50"></text></g><g><title>core::hash::Hasher::write_usize (21 samples, 0.15%)</title><rect x="47.1880%" y="565" width="0.1460%" height="15" fill="rgb(246,38,14)" fg:x="6788" fg:w="21"/><text x="47.4380%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.15%)</title><rect x="47.1880%" y="549" width="0.1460%" height="15" fill="rgb(242,27,5)" fg:x="6788" fg:w="21"/><text x="47.4380%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (21 samples, 0.15%)</title><rect x="47.1880%" y="533" width="0.1460%" height="15" fill="rgb(228,65,35)" fg:x="6788" fg:w="21"/><text x="47.4380%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 0.15%)</title><rect x="47.1880%" y="517" width="0.1460%" height="15" fill="rgb(245,93,11)" fg:x="6788" fg:w="21"/><text x="47.4380%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.08%)</title><rect x="47.4731%" y="597" width="0.0765%" height="15" fill="rgb(213,1,31)" fg:x="6829" fg:w="11"/><text x="47.7231%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.08%)</title><rect x="47.4731%" y="581" width="0.0765%" height="15" fill="rgb(237,205,14)" fg:x="6829" fg:w="11"/><text x="47.7231%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.07%)</title><rect x="47.4800%" y="565" width="0.0695%" height="15" fill="rgb(232,118,45)" fg:x="6830" fg:w="10"/><text x="47.7300%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.06%)</title><rect x="47.4939%" y="549" width="0.0556%" height="15" fill="rgb(218,5,6)" fg:x="6832" fg:w="8"/><text x="47.7439%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (14 samples, 0.10%)</title><rect x="47.5565%" y="597" width="0.0973%" height="15" fill="rgb(251,87,51)" fg:x="6841" fg:w="14"/><text x="47.8065%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (14 samples, 0.10%)</title><rect x="47.5565%" y="581" width="0.0973%" height="15" fill="rgb(207,225,20)" fg:x="6841" fg:w="14"/><text x="47.8065%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (14 samples, 0.10%)</title><rect x="47.5565%" y="565" width="0.0973%" height="15" fill="rgb(222,78,54)" fg:x="6841" fg:w="14"/><text x="47.8065%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (14 samples, 0.10%)</title><rect x="47.5565%" y="549" width="0.0973%" height="15" fill="rgb(232,85,16)" fg:x="6841" fg:w="14"/><text x="47.8065%" y="559.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (163 samples, 1.13%)</title><rect x="46.6806%" y="693" width="1.1331%" height="15" fill="rgb(244,25,33)" fg:x="6715" fg:w="163"/><text x="46.9306%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (163 samples, 1.13%)</title><rect x="46.6806%" y="677" width="1.1331%" height="15" fill="rgb(233,24,36)" fg:x="6715" fg:w="163"/><text x="46.9306%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (160 samples, 1.11%)</title><rect x="46.7014%" y="661" width="1.1123%" height="15" fill="rgb(253,49,54)" fg:x="6718" fg:w="160"/><text x="46.9514%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (155 samples, 1.08%)</title><rect x="46.7362%" y="645" width="1.0775%" height="15" fill="rgb(245,12,22)" fg:x="6723" fg:w="155"/><text x="46.9862%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (69 samples, 0.48%)</title><rect x="47.3340%" y="629" width="0.4797%" height="15" fill="rgb(253,141,28)" fg:x="6809" fg:w="69"/><text x="47.5840%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (69 samples, 0.48%)</title><rect x="47.3340%" y="613" width="0.4797%" height="15" fill="rgb(225,207,27)" fg:x="6809" fg:w="69"/><text x="47.5840%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (23 samples, 0.16%)</title><rect x="47.6538%" y="597" width="0.1599%" height="15" fill="rgb(220,84,2)" fg:x="6855" fg:w="23"/><text x="47.9038%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (23 samples, 0.16%)</title><rect x="47.6538%" y="581" width="0.1599%" height="15" fill="rgb(224,37,37)" fg:x="6855" fg:w="23"/><text x="47.9038%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (23 samples, 0.16%)</title><rect x="47.6538%" y="565" width="0.1599%" height="15" fill="rgb(220,143,18)" fg:x="6855" fg:w="23"/><text x="47.9038%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (21 samples, 0.15%)</title><rect x="47.6677%" y="549" width="0.1460%" height="15" fill="rgb(210,88,33)" fg:x="6857" fg:w="21"/><text x="47.9177%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (21 samples, 0.15%)</title><rect x="47.6677%" y="533" width="0.1460%" height="15" fill="rgb(219,87,51)" fg:x="6857" fg:w="21"/><text x="47.9177%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (21 samples, 0.15%)</title><rect x="47.6677%" y="517" width="0.1460%" height="15" fill="rgb(211,7,35)" fg:x="6857" fg:w="21"/><text x="47.9177%" y="527.50"></text></g><g><title>core::core_arch::simd::i8x16::new (21 samples, 0.15%)</title><rect x="47.6677%" y="501" width="0.1460%" height="15" fill="rgb(232,77,2)" fg:x="6857" fg:w="21"/><text x="47.9177%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.05%)</title><rect x="48.0918%" y="549" width="0.0487%" height="15" fill="rgb(249,94,25)" fg:x="6918" fg:w="7"/><text x="48.3418%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.08%)</title><rect x="48.0848%" y="565" width="0.0765%" height="15" fill="rgb(215,112,2)" fg:x="6917" fg:w="11"/><text x="48.3348%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.02%)</title><rect x="48.1404%" y="549" width="0.0209%" height="15" fill="rgb(226,115,48)" fg:x="6925" fg:w="3"/><text x="48.3904%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (27 samples, 0.19%)</title><rect x="48.2795%" y="549" width="0.1877%" height="15" fill="rgb(249,196,10)" fg:x="6945" fg:w="27"/><text x="48.5295%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (104 samples, 0.72%)</title><rect x="47.9180%" y="613" width="0.7230%" height="15" fill="rgb(237,109,14)" fg:x="6893" fg:w="104"/><text x="48.1680%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (104 samples, 0.72%)</title><rect x="47.9180%" y="597" width="0.7230%" height="15" fill="rgb(217,103,53)" fg:x="6893" fg:w="104"/><text x="48.1680%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (104 samples, 0.72%)</title><rect x="47.9180%" y="581" width="0.7230%" height="15" fill="rgb(244,137,9)" fg:x="6893" fg:w="104"/><text x="48.1680%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (69 samples, 0.48%)</title><rect x="48.1613%" y="565" width="0.4797%" height="15" fill="rgb(227,201,3)" fg:x="6928" fg:w="69"/><text x="48.4113%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (25 samples, 0.17%)</title><rect x="48.4672%" y="549" width="0.1738%" height="15" fill="rgb(243,94,6)" fg:x="6972" fg:w="25"/><text x="48.7172%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (17 samples, 0.12%)</title><rect x="48.6409%" y="613" width="0.1182%" height="15" fill="rgb(235,118,5)" fg:x="6997" fg:w="17"/><text x="48.8909%" y="623.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (15 samples, 0.10%)</title><rect x="48.6548%" y="597" width="0.1043%" height="15" fill="rgb(247,10,30)" fg:x="6999" fg:w="15"/><text x="48.9048%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (15 samples, 0.10%)</title><rect x="48.6548%" y="581" width="0.1043%" height="15" fill="rgb(205,26,28)" fg:x="6999" fg:w="15"/><text x="48.9048%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (15 samples, 0.10%)</title><rect x="48.6548%" y="565" width="0.1043%" height="15" fill="rgb(206,99,35)" fg:x="6999" fg:w="15"/><text x="48.9048%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.07%)</title><rect x="48.9329%" y="485" width="0.0695%" height="15" fill="rgb(238,130,40)" fg:x="7039" fg:w="10"/><text x="49.1829%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.10%)</title><rect x="48.9260%" y="501" width="0.0973%" height="15" fill="rgb(224,126,31)" fg:x="7038" fg:w="14"/><text x="49.1760%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.02%)</title><rect x="49.0024%" y="485" width="0.0209%" height="15" fill="rgb(254,105,17)" fg:x="7049" fg:w="3"/><text x="49.2524%" y="495.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.06%)</title><rect x="49.0233%" y="501" width="0.0556%" height="15" fill="rgb(216,87,36)" fg:x="7052" fg:w="8"/><text x="49.2733%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (172 samples, 1.20%)</title><rect x="47.9041%" y="629" width="1.1957%" height="15" fill="rgb(240,21,12)" fg:x="6891" fg:w="172"/><text x="48.1541%" y="639.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (49 samples, 0.34%)</title><rect x="48.7591%" y="613" width="0.3406%" height="15" fill="rgb(245,192,34)" fg:x="7014" fg:w="49"/><text x="49.0091%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (49 samples, 0.34%)</title><rect x="48.7591%" y="597" width="0.3406%" height="15" fill="rgb(226,100,49)" fg:x="7014" fg:w="49"/><text x="49.0091%" y="607.50"></text></g><g><title>core::hash::Hasher::write_isize (49 samples, 0.34%)</title><rect x="48.7591%" y="581" width="0.3406%" height="15" fill="rgb(245,188,27)" fg:x="7014" fg:w="49"/><text x="49.0091%" y="591.50"></text></g><g><title>core::hash::Hasher::write_usize (49 samples, 0.34%)</title><rect x="48.7591%" y="565" width="0.3406%" height="15" fill="rgb(212,170,8)" fg:x="7014" fg:w="49"/><text x="49.0091%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (48 samples, 0.33%)</title><rect x="48.7661%" y="549" width="0.3337%" height="15" fill="rgb(217,113,29)" fg:x="7015" fg:w="48"/><text x="49.0161%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (48 samples, 0.33%)</title><rect x="48.7661%" y="533" width="0.3337%" height="15" fill="rgb(237,30,3)" fg:x="7015" fg:w="48"/><text x="49.0161%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (48 samples, 0.33%)</title><rect x="48.7661%" y="517" width="0.3337%" height="15" fill="rgb(227,19,28)" fg:x="7015" fg:w="48"/><text x="49.0161%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="49.0789%" y="501" width="0.0209%" height="15" fill="rgb(239,172,45)" fg:x="7060" fg:w="3"/><text x="49.3289%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.07%)</title><rect x="49.5655%" y="597" width="0.0695%" height="15" fill="rgb(254,55,39)" fg:x="7130" fg:w="10"/><text x="49.8155%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.07%)</title><rect x="49.5655%" y="581" width="0.0695%" height="15" fill="rgb(249,208,12)" fg:x="7130" fg:w="10"/><text x="49.8155%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.07%)</title><rect x="49.5655%" y="565" width="0.0695%" height="15" fill="rgb(240,52,13)" fg:x="7130" fg:w="10"/><text x="49.8155%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.04%)</title><rect x="49.5933%" y="549" width="0.0417%" height="15" fill="rgb(252,149,13)" fg:x="7134" fg:w="6"/><text x="49.8433%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.01%)</title><rect x="49.6350%" y="549" width="0.0139%" height="15" fill="rgb(232,81,48)" fg:x="7140" fg:w="2"/><text x="49.8850%" y="559.50"></text></g><g><title>y2021::d18::main::Snail::explode (2,614 samples, 18.17%)</title><rect x="31.7831%" y="709" width="18.1717%" height="15" fill="rgb(222,144,2)" fg:x="4572" fg:w="2614"/><text x="32.0331%" y="719.50">y2021::d18::main::Snail::exp..</text></g><g><title>y2021::d18::main::Snail::has (308 samples, 2.14%)</title><rect x="47.8137%" y="693" width="2.1411%" height="15" fill="rgb(216,81,32)" fg:x="6878" fg:w="308"/><text x="48.0637%" y="703.50">y..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (308 samples, 2.14%)</title><rect x="47.8137%" y="677" width="2.1411%" height="15" fill="rgb(244,78,51)" fg:x="6878" fg:w="308"/><text x="48.0637%" y="687.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (304 samples, 2.11%)</title><rect x="47.8415%" y="661" width="2.1133%" height="15" fill="rgb(217,66,21)" fg:x="6882" fg:w="304"/><text x="48.0915%" y="671.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (302 samples, 2.10%)</title><rect x="47.8554%" y="645" width="2.0994%" height="15" fill="rgb(247,101,42)" fg:x="6884" fg:w="302"/><text x="48.1054%" y="655.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (123 samples, 0.86%)</title><rect x="49.0998%" y="629" width="0.8551%" height="15" fill="rgb(227,81,39)" fg:x="7063" fg:w="123"/><text x="49.3498%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (123 samples, 0.86%)</title><rect x="49.0998%" y="613" width="0.8551%" height="15" fill="rgb(220,223,44)" fg:x="7063" fg:w="123"/><text x="49.3498%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (46 samples, 0.32%)</title><rect x="49.6350%" y="597" width="0.3198%" height="15" fill="rgb(205,218,2)" fg:x="7140" fg:w="46"/><text x="49.8850%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (46 samples, 0.32%)</title><rect x="49.6350%" y="581" width="0.3198%" height="15" fill="rgb(212,207,28)" fg:x="7140" fg:w="46"/><text x="49.8850%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (46 samples, 0.32%)</title><rect x="49.6350%" y="565" width="0.3198%" height="15" fill="rgb(224,12,41)" fg:x="7140" fg:w="46"/><text x="49.8850%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (43 samples, 0.30%)</title><rect x="49.6559%" y="549" width="0.2989%" height="15" fill="rgb(216,118,12)" fg:x="7143" fg:w="43"/><text x="49.9059%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (43 samples, 0.30%)</title><rect x="49.6559%" y="533" width="0.2989%" height="15" fill="rgb(252,97,46)" fg:x="7143" fg:w="43"/><text x="49.9059%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (43 samples, 0.30%)</title><rect x="49.6559%" y="517" width="0.2989%" height="15" fill="rgb(244,206,19)" fg:x="7143" fg:w="43"/><text x="49.9059%" y="527.50"></text></g><g><title>core::core_arch::simd::i8x16::new (43 samples, 0.30%)</title><rect x="49.6559%" y="501" width="0.2989%" height="15" fill="rgb(231,84,31)" fg:x="7143" fg:w="43"/><text x="49.9059%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.02%)</title><rect x="50.0730%" y="565" width="0.0209%" height="15" fill="rgb(244,133,0)" fg:x="7203" fg:w="3"/><text x="50.3230%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.04%)</title><rect x="50.0660%" y="581" width="0.0417%" height="15" fill="rgb(223,15,50)" fg:x="7202" fg:w="6"/><text x="50.3160%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="50.0938%" y="565" width="0.0139%" height="15" fill="rgb(250,118,49)" fg:x="7206" fg:w="2"/><text x="50.3438%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.06%)</title><rect x="50.1425%" y="565" width="0.0556%" height="15" fill="rgb(248,25,38)" fg:x="7213" fg:w="8"/><text x="50.3925%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (34 samples, 0.24%)</title><rect x="50.0243%" y="629" width="0.2364%" height="15" fill="rgb(215,70,14)" fg:x="7196" fg:w="34"/><text x="50.2743%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (34 samples, 0.24%)</title><rect x="50.0243%" y="613" width="0.2364%" height="15" fill="rgb(215,28,15)" fg:x="7196" fg:w="34"/><text x="50.2743%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (34 samples, 0.24%)</title><rect x="50.0243%" y="597" width="0.2364%" height="15" fill="rgb(243,6,28)" fg:x="7196" fg:w="34"/><text x="50.2743%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (22 samples, 0.15%)</title><rect x="50.1078%" y="581" width="0.1529%" height="15" fill="rgb(222,130,1)" fg:x="7208" fg:w="22"/><text x="50.3578%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.06%)</title><rect x="50.1981%" y="565" width="0.0626%" height="15" fill="rgb(236,166,44)" fg:x="7221" fg:w="9"/><text x="50.4481%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.03%)</title><rect x="50.2607%" y="629" width="0.0278%" height="15" fill="rgb(221,108,14)" fg:x="7230" fg:w="4"/><text x="50.5107%" y="639.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.03%)</title><rect x="50.2607%" y="613" width="0.0278%" height="15" fill="rgb(252,3,45)" fg:x="7230" fg:w="4"/><text x="50.5107%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.01%)</title><rect x="50.2746%" y="597" width="0.0139%" height="15" fill="rgb(237,68,30)" fg:x="7232" fg:w="2"/><text x="50.5246%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.01%)</title><rect x="50.2746%" y="581" width="0.0139%" height="15" fill="rgb(211,79,22)" fg:x="7232" fg:w="2"/><text x="50.5246%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.02%)</title><rect x="50.3719%" y="517" width="0.0209%" height="15" fill="rgb(252,185,21)" fg:x="7246" fg:w="3"/><text x="50.6219%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.02%)</title><rect x="50.3719%" y="501" width="0.0209%" height="15" fill="rgb(225,189,26)" fg:x="7246" fg:w="3"/><text x="50.6219%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (56 samples, 0.39%)</title><rect x="50.0104%" y="645" width="0.3893%" height="15" fill="rgb(241,30,40)" fg:x="7194" fg:w="56"/><text x="50.2604%" y="655.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (16 samples, 0.11%)</title><rect x="50.2885%" y="629" width="0.1112%" height="15" fill="rgb(235,215,44)" fg:x="7234" fg:w="16"/><text x="50.5385%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (14 samples, 0.10%)</title><rect x="50.3024%" y="613" width="0.0973%" height="15" fill="rgb(205,8,29)" fg:x="7236" fg:w="14"/><text x="50.5524%" y="623.50"></text></g><g><title>core::hash::Hasher::write_isize (14 samples, 0.10%)</title><rect x="50.3024%" y="597" width="0.0973%" height="15" fill="rgb(241,137,42)" fg:x="7236" fg:w="14"/><text x="50.5524%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (14 samples, 0.10%)</title><rect x="50.3024%" y="581" width="0.0973%" height="15" fill="rgb(237,155,2)" fg:x="7236" fg:w="14"/><text x="50.5524%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.10%)</title><rect x="50.3024%" y="565" width="0.0973%" height="15" fill="rgb(245,29,42)" fg:x="7236" fg:w="14"/><text x="50.5524%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.10%)</title><rect x="50.3024%" y="549" width="0.0973%" height="15" fill="rgb(234,101,35)" fg:x="7236" fg:w="14"/><text x="50.5524%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.10%)</title><rect x="50.3024%" y="533" width="0.0973%" height="15" fill="rgb(228,64,37)" fg:x="7236" fg:w="14"/><text x="50.5524%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="50.5109%" y="613" width="0.0348%" height="15" fill="rgb(217,214,36)" fg:x="7266" fg:w="5"/><text x="50.7609%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="50.5109%" y="597" width="0.0348%" height="15" fill="rgb(243,70,3)" fg:x="7266" fg:w="5"/><text x="50.7609%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="50.5109%" y="581" width="0.0348%" height="15" fill="rgb(253,158,52)" fg:x="7266" fg:w="5"/><text x="50.7609%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.01%)</title><rect x="50.5318%" y="565" width="0.0139%" height="15" fill="rgb(234,111,54)" fg:x="7269" fg:w="2"/><text x="50.7818%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (8 samples, 0.06%)</title><rect x="50.5457%" y="613" width="0.0556%" height="15" fill="rgb(217,70,32)" fg:x="7271" fg:w="8"/><text x="50.7957%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (8 samples, 0.06%)</title><rect x="50.5457%" y="597" width="0.0556%" height="15" fill="rgb(234,18,33)" fg:x="7271" fg:w="8"/><text x="50.7957%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (8 samples, 0.06%)</title><rect x="50.5457%" y="581" width="0.0556%" height="15" fill="rgb(234,12,49)" fg:x="7271" fg:w="8"/><text x="50.7957%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.06%)</title><rect x="50.5457%" y="565" width="0.0556%" height="15" fill="rgb(236,10,21)" fg:x="7271" fg:w="8"/><text x="50.7957%" y="575.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (104 samples, 0.72%)</title><rect x="49.9548%" y="709" width="0.7230%" height="15" fill="rgb(248,182,45)" fg:x="7186" fg:w="104"/><text x="50.2048%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (104 samples, 0.72%)</title><rect x="49.9548%" y="693" width="0.7230%" height="15" fill="rgb(217,95,36)" fg:x="7186" fg:w="104"/><text x="50.2048%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (104 samples, 0.72%)</title><rect x="49.9548%" y="677" width="0.7230%" height="15" fill="rgb(212,110,31)" fg:x="7186" fg:w="104"/><text x="50.2048%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (101 samples, 0.70%)</title><rect x="49.9757%" y="661" width="0.7021%" height="15" fill="rgb(206,32,53)" fg:x="7189" fg:w="101"/><text x="50.2257%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (40 samples, 0.28%)</title><rect x="50.3997%" y="645" width="0.2781%" height="15" fill="rgb(246,141,37)" fg:x="7250" fg:w="40"/><text x="50.6497%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (40 samples, 0.28%)</title><rect x="50.3997%" y="629" width="0.2781%" height="15" fill="rgb(219,16,7)" fg:x="7250" fg:w="40"/><text x="50.6497%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (11 samples, 0.08%)</title><rect x="50.6013%" y="613" width="0.0765%" height="15" fill="rgb(230,205,45)" fg:x="7279" fg:w="11"/><text x="50.8513%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (11 samples, 0.08%)</title><rect x="50.6013%" y="597" width="0.0765%" height="15" fill="rgb(231,43,49)" fg:x="7279" fg:w="11"/><text x="50.8513%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (11 samples, 0.08%)</title><rect x="50.6013%" y="581" width="0.0765%" height="15" fill="rgb(212,106,34)" fg:x="7279" fg:w="11"/><text x="50.8513%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.07%)</title><rect x="50.6083%" y="565" width="0.0695%" height="15" fill="rgb(206,83,17)" fg:x="7280" fg:w="10"/><text x="50.8583%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (10 samples, 0.07%)</title><rect x="50.6083%" y="549" width="0.0695%" height="15" fill="rgb(244,154,49)" fg:x="7280" fg:w="10"/><text x="50.8583%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (10 samples, 0.07%)</title><rect x="50.6083%" y="533" width="0.0695%" height="15" fill="rgb(244,149,49)" fg:x="7280" fg:w="10"/><text x="50.8583%" y="543.50"></text></g><g><title>core::core_arch::simd::i8x16::new (10 samples, 0.07%)</title><rect x="50.6083%" y="517" width="0.0695%" height="15" fill="rgb(227,134,18)" fg:x="7280" fg:w="10"/><text x="50.8583%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.05%)</title><rect x="50.7821%" y="565" width="0.0487%" height="15" fill="rgb(237,116,36)" fg:x="7305" fg:w="7"/><text x="51.0321%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (14 samples, 0.10%)</title><rect x="50.7682%" y="581" width="0.0973%" height="15" fill="rgb(205,129,40)" fg:x="7303" fg:w="14"/><text x="51.0182%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.03%)</title><rect x="50.8307%" y="565" width="0.0348%" height="15" fill="rgb(236,178,4)" fg:x="7312" fg:w="5"/><text x="51.0807%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (21 samples, 0.15%)</title><rect x="50.9002%" y="565" width="0.1460%" height="15" fill="rgb(251,76,53)" fg:x="7322" fg:w="21"/><text x="51.1502%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (63 samples, 0.44%)</title><rect x="50.6986%" y="629" width="0.4380%" height="15" fill="rgb(242,92,40)" fg:x="7293" fg:w="63"/><text x="50.9486%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (63 samples, 0.44%)</title><rect x="50.6986%" y="613" width="0.4380%" height="15" fill="rgb(209,45,30)" fg:x="7293" fg:w="63"/><text x="50.9486%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (63 samples, 0.44%)</title><rect x="50.6986%" y="597" width="0.4380%" height="15" fill="rgb(218,157,36)" fg:x="7293" fg:w="63"/><text x="50.9486%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (39 samples, 0.27%)</title><rect x="50.8655%" y="581" width="0.2711%" height="15" fill="rgb(222,186,16)" fg:x="7317" fg:w="39"/><text x="51.1155%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (13 samples, 0.09%)</title><rect x="51.0462%" y="565" width="0.0904%" height="15" fill="rgb(254,72,35)" fg:x="7343" fg:w="13"/><text x="51.2962%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.01%)</title><rect x="51.1366%" y="629" width="0.0139%" height="15" fill="rgb(224,25,35)" fg:x="7356" fg:w="2"/><text x="51.3866%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.03%)</title><rect x="51.2617%" y="501" width="0.0348%" height="15" fill="rgb(206,135,52)" fg:x="7374" fg:w="5"/><text x="51.5117%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.06%)</title><rect x="51.2548%" y="517" width="0.0556%" height="15" fill="rgb(229,174,47)" fg:x="7373" fg:w="8"/><text x="51.5048%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="51.2965%" y="501" width="0.0139%" height="15" fill="rgb(242,184,21)" fg:x="7379" fg:w="2"/><text x="51.5465%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (91 samples, 0.63%)</title><rect x="50.6917%" y="645" width="0.6326%" height="15" fill="rgb(213,22,45)" fg:x="7292" fg:w="91"/><text x="50.9417%" y="655.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (25 samples, 0.17%)</title><rect x="51.1505%" y="629" width="0.1738%" height="15" fill="rgb(237,81,54)" fg:x="7358" fg:w="25"/><text x="51.4005%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (20 samples, 0.14%)</title><rect x="51.1853%" y="613" width="0.1390%" height="15" fill="rgb(248,177,18)" fg:x="7363" fg:w="20"/><text x="51.4353%" y="623.50"></text></g><g><title>core::hash::Hasher::write_isize (20 samples, 0.14%)</title><rect x="51.1853%" y="597" width="0.1390%" height="15" fill="rgb(254,31,16)" fg:x="7363" fg:w="20"/><text x="51.4353%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (20 samples, 0.14%)</title><rect x="51.1853%" y="581" width="0.1390%" height="15" fill="rgb(235,20,31)" fg:x="7363" fg:w="20"/><text x="51.4353%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.14%)</title><rect x="51.1853%" y="565" width="0.1390%" height="15" fill="rgb(240,56,43)" fg:x="7363" fg:w="20"/><text x="51.4353%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (20 samples, 0.14%)</title><rect x="51.1853%" y="549" width="0.1390%" height="15" fill="rgb(237,197,51)" fg:x="7363" fg:w="20"/><text x="51.4353%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (20 samples, 0.14%)</title><rect x="51.1853%" y="533" width="0.1390%" height="15" fill="rgb(241,162,44)" fg:x="7363" fg:w="20"/><text x="51.4353%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.01%)</title><rect x="51.3104%" y="517" width="0.0139%" height="15" fill="rgb(224,23,20)" fg:x="7381" fg:w="2"/><text x="51.5604%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.06%)</title><rect x="51.6163%" y="613" width="0.0626%" height="15" fill="rgb(250,109,34)" fg:x="7425" fg:w="9"/><text x="51.8663%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.06%)</title><rect x="51.6163%" y="597" width="0.0626%" height="15" fill="rgb(214,175,50)" fg:x="7425" fg:w="9"/><text x="51.8663%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.06%)</title><rect x="51.6232%" y="581" width="0.0556%" height="15" fill="rgb(213,182,5)" fg:x="7426" fg:w="8"/><text x="51.8732%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.04%)</title><rect x="51.6371%" y="565" width="0.0417%" height="15" fill="rgb(209,199,19)" fg:x="7428" fg:w="6"/><text x="51.8871%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.01%)</title><rect x="51.6788%" y="565" width="0.0139%" height="15" fill="rgb(236,224,42)" fg:x="7434" fg:w="2"/><text x="51.9288%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.01%)</title><rect x="51.6788%" y="549" width="0.0139%" height="15" fill="rgb(246,226,29)" fg:x="7434" fg:w="2"/><text x="51.9288%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="51.6788%" y="533" width="0.0139%" height="15" fill="rgb(227,223,11)" fg:x="7434" fg:w="2"/><text x="51.9288%" y="543.50"></text></g><g><title>y2021::d18::main::Snail::explode (2,912 samples, 20.24%)</title><rect x="31.5676%" y="725" width="20.2433%" height="15" fill="rgb(219,7,51)" fg:x="4541" fg:w="2912"/><text x="31.8176%" y="735.50">y2021::d18::main::Snail::explode</text></g><g><title>y2021::d18::main::Snail::has (163 samples, 1.13%)</title><rect x="50.6778%" y="709" width="1.1331%" height="15" fill="rgb(245,167,10)" fg:x="7290" fg:w="163"/><text x="50.9278%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (163 samples, 1.13%)</title><rect x="50.6778%" y="693" width="1.1331%" height="15" fill="rgb(237,224,16)" fg:x="7290" fg:w="163"/><text x="50.9278%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (162 samples, 1.13%)</title><rect x="50.6847%" y="677" width="1.1262%" height="15" fill="rgb(226,132,13)" fg:x="7291" fg:w="162"/><text x="50.9347%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (162 samples, 1.13%)</title><rect x="50.6847%" y="661" width="1.1262%" height="15" fill="rgb(214,140,3)" fg:x="7291" fg:w="162"/><text x="50.9347%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (70 samples, 0.49%)</title><rect x="51.3243%" y="645" width="0.4866%" height="15" fill="rgb(221,177,4)" fg:x="7383" fg:w="70"/><text x="51.5743%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (70 samples, 0.49%)</title><rect x="51.3243%" y="629" width="0.4866%" height="15" fill="rgb(238,139,3)" fg:x="7383" fg:w="70"/><text x="51.5743%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (19 samples, 0.13%)</title><rect x="51.6788%" y="613" width="0.1321%" height="15" fill="rgb(216,17,39)" fg:x="7434" fg:w="19"/><text x="51.9288%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (19 samples, 0.13%)</title><rect x="51.6788%" y="597" width="0.1321%" height="15" fill="rgb(238,120,9)" fg:x="7434" fg:w="19"/><text x="51.9288%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (19 samples, 0.13%)</title><rect x="51.6788%" y="581" width="0.1321%" height="15" fill="rgb(244,92,53)" fg:x="7434" fg:w="19"/><text x="51.9288%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (17 samples, 0.12%)</title><rect x="51.6927%" y="565" width="0.1182%" height="15" fill="rgb(224,148,33)" fg:x="7436" fg:w="17"/><text x="51.9427%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (17 samples, 0.12%)</title><rect x="51.6927%" y="549" width="0.1182%" height="15" fill="rgb(243,6,36)" fg:x="7436" fg:w="17"/><text x="51.9427%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (17 samples, 0.12%)</title><rect x="51.6927%" y="533" width="0.1182%" height="15" fill="rgb(230,102,11)" fg:x="7436" fg:w="17"/><text x="51.9427%" y="543.50"></text></g><g><title>core::core_arch::simd::i8x16::new (17 samples, 0.12%)</title><rect x="51.6927%" y="517" width="0.1182%" height="15" fill="rgb(234,148,36)" fg:x="7436" fg:w="17"/><text x="51.9427%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="51.8109%" y="709" width="0.0139%" height="15" fill="rgb(251,153,25)" fg:x="7453" fg:w="2"/><text x="52.0609%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="51.8387%" y="677" width="0.0139%" height="15" fill="rgb(215,129,8)" fg:x="7457" fg:w="2"/><text x="52.0887%" y="687.50"></text></g><g><title>y2021::d18::main::Snail::set_depth (7 samples, 0.05%)</title><rect x="51.8109%" y="725" width="0.0487%" height="15" fill="rgb(224,128,35)" fg:x="7453" fg:w="7"/><text x="52.0609%" y="735.50"></text></g><g><title>y2021::d18::main::Snail::set_depth (5 samples, 0.03%)</title><rect x="51.8248%" y="709" width="0.0348%" height="15" fill="rgb(237,56,52)" fg:x="7455" fg:w="5"/><text x="52.0748%" y="719.50"></text></g><g><title>y2021::d18::main::Snail::set_depth (3 samples, 0.02%)</title><rect x="51.8387%" y="693" width="0.0209%" height="15" fill="rgb(234,213,19)" fg:x="7457" fg:w="3"/><text x="52.0887%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.03%)</title><rect x="51.9360%" y="581" width="0.0348%" height="15" fill="rgb(252,82,23)" fg:x="7471" fg:w="5"/><text x="52.1860%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.03%)</title><rect x="51.9360%" y="565" width="0.0348%" height="15" fill="rgb(254,201,21)" fg:x="7471" fg:w="5"/><text x="52.1860%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.02%)</title><rect x="51.9847%" y="565" width="0.0209%" height="15" fill="rgb(250,186,11)" fg:x="7478" fg:w="3"/><text x="52.2347%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.11%)</title><rect x="51.9152%" y="629" width="0.1112%" height="15" fill="rgb(211,174,5)" fg:x="7468" fg:w="16"/><text x="52.1652%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.11%)</title><rect x="51.9152%" y="613" width="0.1112%" height="15" fill="rgb(214,121,10)" fg:x="7468" fg:w="16"/><text x="52.1652%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.11%)</title><rect x="51.9152%" y="597" width="0.1112%" height="15" fill="rgb(241,66,2)" fg:x="7468" fg:w="16"/><text x="52.1652%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.06%)</title><rect x="51.9708%" y="581" width="0.0556%" height="15" fill="rgb(220,167,19)" fg:x="7476" fg:w="8"/><text x="52.2208%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.02%)</title><rect x="52.0056%" y="565" width="0.0209%" height="15" fill="rgb(231,54,50)" fg:x="7481" fg:w="3"/><text x="52.2556%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (22 samples, 0.15%)</title><rect x="51.9082%" y="645" width="0.1529%" height="15" fill="rgb(239,217,53)" fg:x="7467" fg:w="22"/><text x="52.1582%" y="655.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (5 samples, 0.03%)</title><rect x="52.0264%" y="629" width="0.0348%" height="15" fill="rgb(248,8,0)" fg:x="7484" fg:w="5"/><text x="52.2764%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (5 samples, 0.03%)</title><rect x="52.0264%" y="613" width="0.0348%" height="15" fill="rgb(229,118,37)" fg:x="7484" fg:w="5"/><text x="52.2764%" y="623.50"></text></g><g><title>core::hash::Hasher::write_isize (5 samples, 0.03%)</title><rect x="52.0264%" y="597" width="0.0348%" height="15" fill="rgb(253,223,43)" fg:x="7484" fg:w="5"/><text x="52.2764%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (5 samples, 0.03%)</title><rect x="52.0264%" y="581" width="0.0348%" height="15" fill="rgb(211,77,36)" fg:x="7484" fg:w="5"/><text x="52.2764%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="52.0264%" y="565" width="0.0348%" height="15" fill="rgb(219,3,53)" fg:x="7484" fg:w="5"/><text x="52.2764%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="52.0264%" y="549" width="0.0348%" height="15" fill="rgb(244,45,42)" fg:x="7484" fg:w="5"/><text x="52.2764%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="52.0264%" y="533" width="0.0348%" height="15" fill="rgb(225,95,27)" fg:x="7484" fg:w="5"/><text x="52.2764%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.01%)</title><rect x="52.0473%" y="517" width="0.0139%" height="15" fill="rgb(207,74,8)" fg:x="7487" fg:w="2"/><text x="52.2973%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="52.0820%" y="613" width="0.0139%" height="15" fill="rgb(243,63,36)" fg:x="7492" fg:w="2"/><text x="52.3320%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="52.0820%" y="597" width="0.0139%" height="15" fill="rgb(211,180,12)" fg:x="7492" fg:w="2"/><text x="52.3320%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="52.0820%" y="581" width="0.0139%" height="15" fill="rgb(254,166,49)" fg:x="7492" fg:w="2"/><text x="52.3320%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.01%)</title><rect x="52.0820%" y="565" width="0.0139%" height="15" fill="rgb(205,19,0)" fg:x="7492" fg:w="2"/><text x="52.3320%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="52.0959%" y="613" width="0.0139%" height="15" fill="rgb(224,172,32)" fg:x="7494" fg:w="2"/><text x="52.3459%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.01%)</title><rect x="52.0959%" y="597" width="0.0139%" height="15" fill="rgb(254,136,30)" fg:x="7494" fg:w="2"/><text x="52.3459%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.01%)</title><rect x="52.0959%" y="581" width="0.0139%" height="15" fill="rgb(246,19,35)" fg:x="7494" fg:w="2"/><text x="52.3459%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.01%)</title><rect x="52.0959%" y="565" width="0.0139%" height="15" fill="rgb(219,24,36)" fg:x="7494" fg:w="2"/><text x="52.3459%" y="575.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (33 samples, 0.23%)</title><rect x="51.8874%" y="709" width="0.2294%" height="15" fill="rgb(251,55,1)" fg:x="7464" fg:w="33"/><text x="52.1374%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (33 samples, 0.23%)</title><rect x="51.8874%" y="693" width="0.2294%" height="15" fill="rgb(218,117,39)" fg:x="7464" fg:w="33"/><text x="52.1374%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (31 samples, 0.22%)</title><rect x="51.9013%" y="677" width="0.2155%" height="15" fill="rgb(248,169,11)" fg:x="7466" fg:w="31"/><text x="52.1513%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (30 samples, 0.21%)</title><rect x="51.9082%" y="661" width="0.2086%" height="15" fill="rgb(244,40,44)" fg:x="7467" fg:w="30"/><text x="52.1582%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (8 samples, 0.06%)</title><rect x="52.0612%" y="645" width="0.0556%" height="15" fill="rgb(234,62,37)" fg:x="7489" fg:w="8"/><text x="52.3112%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.06%)</title><rect x="52.0612%" y="629" width="0.0556%" height="15" fill="rgb(207,117,42)" fg:x="7489" fg:w="8"/><text x="52.3112%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.03%)</title><rect x="52.1446%" y="565" width="0.0278%" height="15" fill="rgb(213,43,2)" fg:x="7501" fg:w="4"/><text x="52.3946%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.04%)</title><rect x="52.1376%" y="581" width="0.0417%" height="15" fill="rgb(244,202,51)" fg:x="7500" fg:w="6"/><text x="52.3876%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (19 samples, 0.13%)</title><rect x="52.1237%" y="629" width="0.1321%" height="15" fill="rgb(253,174,46)" fg:x="7498" fg:w="19"/><text x="52.3737%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (19 samples, 0.13%)</title><rect x="52.1237%" y="613" width="0.1321%" height="15" fill="rgb(251,23,1)" fg:x="7498" fg:w="19"/><text x="52.3737%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (19 samples, 0.13%)</title><rect x="52.1237%" y="597" width="0.1321%" height="15" fill="rgb(253,26,1)" fg:x="7498" fg:w="19"/><text x="52.3737%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.08%)</title><rect x="52.1794%" y="581" width="0.0765%" height="15" fill="rgb(216,89,31)" fg:x="7506" fg:w="11"/><text x="52.4294%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.07%)</title><rect x="52.1863%" y="565" width="0.0695%" height="15" fill="rgb(209,109,5)" fg:x="7507" fg:w="10"/><text x="52.4363%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.01%)</title><rect x="52.2558%" y="629" width="0.0139%" height="15" fill="rgb(229,63,13)" fg:x="7517" fg:w="2"/><text x="52.5058%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="52.2975%" y="517" width="0.0139%" height="15" fill="rgb(238,137,54)" fg:x="7523" fg:w="2"/><text x="52.5475%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (30 samples, 0.21%)</title><rect x="52.1237%" y="645" width="0.2086%" height="15" fill="rgb(228,1,9)" fg:x="7498" fg:w="30"/><text x="52.3737%" y="655.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (9 samples, 0.06%)</title><rect x="52.2697%" y="629" width="0.0626%" height="15" fill="rgb(249,120,48)" fg:x="7519" fg:w="9"/><text x="52.5197%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (6 samples, 0.04%)</title><rect x="52.2906%" y="613" width="0.0417%" height="15" fill="rgb(209,72,36)" fg:x="7522" fg:w="6"/><text x="52.5406%" y="623.50"></text></g><g><title>core::hash::Hasher::write_isize (6 samples, 0.04%)</title><rect x="52.2906%" y="597" width="0.0417%" height="15" fill="rgb(247,98,49)" fg:x="7522" fg:w="6"/><text x="52.5406%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (6 samples, 0.04%)</title><rect x="52.2906%" y="581" width="0.0417%" height="15" fill="rgb(233,75,36)" fg:x="7522" fg:w="6"/><text x="52.5406%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="52.2975%" y="565" width="0.0348%" height="15" fill="rgb(225,14,24)" fg:x="7523" fg:w="5"/><text x="52.5475%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="52.2975%" y="549" width="0.0348%" height="15" fill="rgb(237,193,20)" fg:x="7523" fg:w="5"/><text x="52.5475%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="52.2975%" y="533" width="0.0348%" height="15" fill="rgb(239,122,19)" fg:x="7523" fg:w="5"/><text x="52.5475%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.02%)</title><rect x="52.3114%" y="517" width="0.0209%" height="15" fill="rgb(231,220,10)" fg:x="7525" fg:w="3"/><text x="52.5614%" y="527.50"></text></g><g><title>y2021::d18::main::Snail::has (45 samples, 0.31%)</title><rect x="52.1168%" y="709" width="0.3128%" height="15" fill="rgb(220,66,15)" fg:x="7497" fg:w="45"/><text x="52.3668%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (45 samples, 0.31%)</title><rect x="52.1168%" y="693" width="0.3128%" height="15" fill="rgb(215,171,52)" fg:x="7497" fg:w="45"/><text x="52.3668%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (45 samples, 0.31%)</title><rect x="52.1168%" y="677" width="0.3128%" height="15" fill="rgb(241,169,50)" fg:x="7497" fg:w="45"/><text x="52.3668%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (45 samples, 0.31%)</title><rect x="52.1168%" y="661" width="0.3128%" height="15" fill="rgb(236,189,0)" fg:x="7497" fg:w="45"/><text x="52.3668%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.10%)</title><rect x="52.3323%" y="645" width="0.0973%" height="15" fill="rgb(217,147,20)" fg:x="7528" fg:w="14"/><text x="52.5823%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.10%)</title><rect x="52.3323%" y="629" width="0.0973%" height="15" fill="rgb(206,188,39)" fg:x="7528" fg:w="14"/><text x="52.5823%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.03%)</title><rect x="52.4018%" y="613" width="0.0278%" height="15" fill="rgb(227,118,25)" fg:x="7538" fg:w="4"/><text x="52.6518%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.03%)</title><rect x="52.4018%" y="597" width="0.0278%" height="15" fill="rgb(248,171,40)" fg:x="7538" fg:w="4"/><text x="52.6518%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.03%)</title><rect x="52.4018%" y="581" width="0.0278%" height="15" fill="rgb(251,90,54)" fg:x="7538" fg:w="4"/><text x="52.6518%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.03%)</title><rect x="52.4018%" y="565" width="0.0278%" height="15" fill="rgb(234,11,46)" fg:x="7538" fg:w="4"/><text x="52.6518%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.03%)</title><rect x="52.4018%" y="549" width="0.0278%" height="15" fill="rgb(229,134,13)" fg:x="7538" fg:w="4"/><text x="52.6518%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.03%)</title><rect x="52.4018%" y="533" width="0.0278%" height="15" fill="rgb(223,129,3)" fg:x="7538" fg:w="4"/><text x="52.6518%" y="543.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4 samples, 0.03%)</title><rect x="52.4018%" y="517" width="0.0278%" height="15" fill="rgb(221,124,13)" fg:x="7538" fg:w="4"/><text x="52.6518%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.09%)</title><rect x="52.5200%" y="613" width="0.0904%" height="15" fill="rgb(234,3,18)" fg:x="7555" fg:w="13"/><text x="52.7700%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.09%)</title><rect x="52.5200%" y="597" width="0.0904%" height="15" fill="rgb(249,199,20)" fg:x="7555" fg:w="13"/><text x="52.7700%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.09%)</title><rect x="52.5200%" y="581" width="0.0904%" height="15" fill="rgb(224,134,6)" fg:x="7555" fg:w="13"/><text x="52.7700%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.08%)</title><rect x="52.5339%" y="565" width="0.0765%" height="15" fill="rgb(254,83,26)" fg:x="7557" fg:w="11"/><text x="52.7839%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.06%)</title><rect x="52.5547%" y="549" width="0.0556%" height="15" fill="rgb(217,88,9)" fg:x="7560" fg:w="8"/><text x="52.8047%" y="559.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.02%)</title><rect x="52.6729%" y="501" width="0.0209%" height="15" fill="rgb(225,73,2)" fg:x="7577" fg:w="3"/><text x="52.9229%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (31 samples, 0.22%)</title><rect x="52.4852%" y="629" width="0.2155%" height="15" fill="rgb(226,44,39)" fg:x="7550" fg:w="31"/><text x="52.7352%" y="639.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (12 samples, 0.08%)</title><rect x="52.6173%" y="613" width="0.0834%" height="15" fill="rgb(228,53,17)" fg:x="7569" fg:w="12"/><text x="52.8673%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (12 samples, 0.08%)</title><rect x="52.6173%" y="597" width="0.0834%" height="15" fill="rgb(212,27,27)" fg:x="7569" fg:w="12"/><text x="52.8673%" y="607.50"></text></g><g><title>core::hash::Hasher::write_isize (12 samples, 0.08%)</title><rect x="52.6173%" y="581" width="0.0834%" height="15" fill="rgb(241,50,6)" fg:x="7569" fg:w="12"/><text x="52.8673%" y="591.50"></text></g><g><title>core::hash::Hasher::write_usize (12 samples, 0.08%)</title><rect x="52.6173%" y="565" width="0.0834%" height="15" fill="rgb(225,28,51)" fg:x="7569" fg:w="12"/><text x="52.8673%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.08%)</title><rect x="52.6173%" y="549" width="0.0834%" height="15" fill="rgb(215,33,16)" fg:x="7569" fg:w="12"/><text x="52.8673%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.08%)</title><rect x="52.6173%" y="533" width="0.0834%" height="15" fill="rgb(243,40,39)" fg:x="7569" fg:w="12"/><text x="52.8673%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.08%)</title><rect x="52.6173%" y="517" width="0.0834%" height="15" fill="rgb(225,11,42)" fg:x="7569" fg:w="12"/><text x="52.8673%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="52.7216%" y="597" width="0.0278%" height="15" fill="rgb(241,220,38)" fg:x="7584" fg:w="4"/><text x="52.9716%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="52.7216%" y="581" width="0.0278%" height="15" fill="rgb(244,52,35)" fg:x="7584" fg:w="4"/><text x="52.9716%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="52.7216%" y="565" width="0.0278%" height="15" fill="rgb(246,42,46)" fg:x="7584" fg:w="4"/><text x="52.9716%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.02%)</title><rect x="52.7285%" y="549" width="0.0209%" height="15" fill="rgb(205,184,13)" fg:x="7585" fg:w="3"/><text x="52.9785%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (3 samples, 0.02%)</title><rect x="52.7494%" y="597" width="0.0209%" height="15" fill="rgb(209,48,36)" fg:x="7588" fg:w="3"/><text x="52.9994%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (3 samples, 0.02%)</title><rect x="52.7494%" y="581" width="0.0209%" height="15" fill="rgb(244,34,51)" fg:x="7588" fg:w="3"/><text x="52.9994%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3 samples, 0.02%)</title><rect x="52.7494%" y="565" width="0.0209%" height="15" fill="rgb(221,107,33)" fg:x="7588" fg:w="3"/><text x="52.9994%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.02%)</title><rect x="52.7494%" y="549" width="0.0209%" height="15" fill="rgb(224,203,12)" fg:x="7588" fg:w="3"/><text x="52.9994%" y="559.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (55 samples, 0.38%)</title><rect x="52.4435%" y="693" width="0.3823%" height="15" fill="rgb(230,215,18)" fg:x="7544" fg:w="55"/><text x="52.6935%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (55 samples, 0.38%)</title><rect x="52.4435%" y="677" width="0.3823%" height="15" fill="rgb(206,185,35)" fg:x="7544" fg:w="55"/><text x="52.6935%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (54 samples, 0.38%)</title><rect x="52.4505%" y="661" width="0.3754%" height="15" fill="rgb(228,140,34)" fg:x="7545" fg:w="54"/><text x="52.7005%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (53 samples, 0.37%)</title><rect x="52.4574%" y="645" width="0.3684%" height="15" fill="rgb(208,93,13)" fg:x="7546" fg:w="53"/><text x="52.7074%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (18 samples, 0.13%)</title><rect x="52.7007%" y="629" width="0.1251%" height="15" fill="rgb(221,193,39)" fg:x="7581" fg:w="18"/><text x="52.9507%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.13%)</title><rect x="52.7007%" y="613" width="0.1251%" height="15" fill="rgb(241,132,34)" fg:x="7581" fg:w="18"/><text x="52.9507%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (8 samples, 0.06%)</title><rect x="52.7702%" y="597" width="0.0556%" height="15" fill="rgb(221,141,10)" fg:x="7591" fg:w="8"/><text x="53.0202%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (8 samples, 0.06%)</title><rect x="52.7702%" y="581" width="0.0556%" height="15" fill="rgb(226,90,31)" fg:x="7591" fg:w="8"/><text x="53.0202%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (8 samples, 0.06%)</title><rect x="52.7702%" y="565" width="0.0556%" height="15" fill="rgb(243,75,5)" fg:x="7591" fg:w="8"/><text x="53.0202%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (8 samples, 0.06%)</title><rect x="52.7702%" y="549" width="0.0556%" height="15" fill="rgb(227,156,21)" fg:x="7591" fg:w="8"/><text x="53.0202%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (8 samples, 0.06%)</title><rect x="52.7702%" y="533" width="0.0556%" height="15" fill="rgb(250,195,8)" fg:x="7591" fg:w="8"/><text x="53.0202%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (8 samples, 0.06%)</title><rect x="52.7702%" y="517" width="0.0556%" height="15" fill="rgb(220,134,5)" fg:x="7591" fg:w="8"/><text x="53.0202%" y="527.50"></text></g><g><title>core::core_arch::simd::i8x16::new (8 samples, 0.06%)</title><rect x="52.7702%" y="501" width="0.0556%" height="15" fill="rgb(246,106,34)" fg:x="7591" fg:w="8"/><text x="53.0202%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.03%)</title><rect x="52.9301%" y="549" width="0.0348%" height="15" fill="rgb(205,1,4)" fg:x="7614" fg:w="5"/><text x="53.1801%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.04%)</title><rect x="52.9301%" y="565" width="0.0417%" height="15" fill="rgb(224,151,29)" fg:x="7614" fg:w="6"/><text x="53.1801%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.08%)</title><rect x="52.9927%" y="549" width="0.0765%" height="15" fill="rgb(251,196,0)" fg:x="7623" fg:w="11"/><text x="53.2427%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (31 samples, 0.22%)</title><rect x="52.8676%" y="613" width="0.2155%" height="15" fill="rgb(212,127,0)" fg:x="7605" fg:w="31"/><text x="53.1176%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (31 samples, 0.22%)</title><rect x="52.8676%" y="597" width="0.2155%" height="15" fill="rgb(236,71,53)" fg:x="7605" fg:w="31"/><text x="53.1176%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (31 samples, 0.22%)</title><rect x="52.8676%" y="581" width="0.2155%" height="15" fill="rgb(227,99,0)" fg:x="7605" fg:w="31"/><text x="53.1176%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (16 samples, 0.11%)</title><rect x="52.9718%" y="565" width="0.1112%" height="15" fill="rgb(239,89,21)" fg:x="7620" fg:w="16"/><text x="53.2218%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="53.0692%" y="549" width="0.0139%" height="15" fill="rgb(243,122,19)" fg:x="7634" fg:w="2"/><text x="53.3192%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.04%)</title><rect x="53.0831%" y="613" width="0.0417%" height="15" fill="rgb(229,192,45)" fg:x="7636" fg:w="6"/><text x="53.3331%" y="623.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.03%)</title><rect x="53.0970%" y="597" width="0.0278%" height="15" fill="rgb(235,165,35)" fg:x="7638" fg:w="4"/><text x="53.3470%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4 samples, 0.03%)</title><rect x="53.0970%" y="581" width="0.0278%" height="15" fill="rgb(253,202,0)" fg:x="7638" fg:w="4"/><text x="53.3470%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4 samples, 0.03%)</title><rect x="53.0970%" y="565" width="0.0278%" height="15" fill="rgb(235,51,20)" fg:x="7638" fg:w="4"/><text x="53.3470%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.03%)</title><rect x="53.1595%" y="485" width="0.0348%" height="15" fill="rgb(218,95,46)" fg:x="7647" fg:w="5"/><text x="53.4095%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.04%)</title><rect x="53.1595%" y="501" width="0.0417%" height="15" fill="rgb(212,81,10)" fg:x="7647" fg:w="6"/><text x="53.4095%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (50 samples, 0.35%)</title><rect x="52.8606%" y="629" width="0.3476%" height="15" fill="rgb(240,59,0)" fg:x="7604" fg:w="50"/><text x="53.1106%" y="639.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (12 samples, 0.08%)</title><rect x="53.1248%" y="613" width="0.0834%" height="15" fill="rgb(212,191,42)" fg:x="7642" fg:w="12"/><text x="53.3748%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (12 samples, 0.08%)</title><rect x="53.1248%" y="597" width="0.0834%" height="15" fill="rgb(233,140,3)" fg:x="7642" fg:w="12"/><text x="53.3748%" y="607.50"></text></g><g><title>core::hash::Hasher::write_isize (12 samples, 0.08%)</title><rect x="53.1248%" y="581" width="0.0834%" height="15" fill="rgb(215,69,23)" fg:x="7642" fg:w="12"/><text x="53.3748%" y="591.50"></text></g><g><title>core::hash::Hasher::write_usize (12 samples, 0.08%)</title><rect x="53.1248%" y="565" width="0.0834%" height="15" fill="rgb(240,202,20)" fg:x="7642" fg:w="12"/><text x="53.3748%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.08%)</title><rect x="53.1317%" y="549" width="0.0765%" height="15" fill="rgb(209,146,50)" fg:x="7643" fg:w="11"/><text x="53.3817%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.08%)</title><rect x="53.1317%" y="533" width="0.0765%" height="15" fill="rgb(253,102,54)" fg:x="7643" fg:w="11"/><text x="53.3817%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.08%)</title><rect x="53.1317%" y="517" width="0.0765%" height="15" fill="rgb(250,173,47)" fg:x="7643" fg:w="11"/><text x="53.3817%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="53.3403%" y="597" width="0.0417%" height="15" fill="rgb(232,142,7)" fg:x="7673" fg:w="6"/><text x="53.5903%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="53.3403%" y="581" width="0.0417%" height="15" fill="rgb(230,157,47)" fg:x="7673" fg:w="6"/><text x="53.5903%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="53.3472%" y="565" width="0.0348%" height="15" fill="rgb(214,177,35)" fg:x="7674" fg:w="5"/><text x="53.5972%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.03%)</title><rect x="53.3542%" y="549" width="0.0278%" height="15" fill="rgb(234,119,46)" fg:x="7675" fg:w="4"/><text x="53.6042%" y="559.50"></text></g><g><title>y2021::d18::main::Snail::has (85 samples, 0.59%)</title><rect x="52.8259%" y="693" width="0.5909%" height="15" fill="rgb(241,180,50)" fg:x="7599" fg:w="85"/><text x="53.0759%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (85 samples, 0.59%)</title><rect x="52.8259%" y="677" width="0.5909%" height="15" fill="rgb(221,54,25)" fg:x="7599" fg:w="85"/><text x="53.0759%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (85 samples, 0.59%)</title><rect x="52.8259%" y="661" width="0.5909%" height="15" fill="rgb(209,157,44)" fg:x="7599" fg:w="85"/><text x="53.0759%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (82 samples, 0.57%)</title><rect x="52.8467%" y="645" width="0.5700%" height="15" fill="rgb(246,115,41)" fg:x="7602" fg:w="82"/><text x="53.0967%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (30 samples, 0.21%)</title><rect x="53.2082%" y="629" width="0.2086%" height="15" fill="rgb(229,86,1)" fg:x="7654" fg:w="30"/><text x="53.4582%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (30 samples, 0.21%)</title><rect x="53.2082%" y="613" width="0.2086%" height="15" fill="rgb(240,108,53)" fg:x="7654" fg:w="30"/><text x="53.4582%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.03%)</title><rect x="53.3820%" y="597" width="0.0348%" height="15" fill="rgb(227,134,2)" fg:x="7679" fg:w="5"/><text x="53.6320%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.03%)</title><rect x="53.3820%" y="581" width="0.0348%" height="15" fill="rgb(213,129,25)" fg:x="7679" fg:w="5"/><text x="53.6320%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.03%)</title><rect x="53.3820%" y="565" width="0.0348%" height="15" fill="rgb(226,35,21)" fg:x="7679" fg:w="5"/><text x="53.6320%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.03%)</title><rect x="53.3820%" y="549" width="0.0348%" height="15" fill="rgb(208,129,26)" fg:x="7679" fg:w="5"/><text x="53.6320%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.03%)</title><rect x="53.3820%" y="533" width="0.0348%" height="15" fill="rgb(224,83,6)" fg:x="7679" fg:w="5"/><text x="53.6320%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.03%)</title><rect x="53.3820%" y="517" width="0.0348%" height="15" fill="rgb(227,52,39)" fg:x="7679" fg:w="5"/><text x="53.6320%" y="527.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.03%)</title><rect x="53.3820%" y="501" width="0.0348%" height="15" fill="rgb(241,30,17)" fg:x="7679" fg:w="5"/><text x="53.6320%" y="511.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.01%)</title><rect x="53.4793%" y="645" width="0.0139%" height="15" fill="rgb(246,186,42)" fg:x="7693" fg:w="2"/><text x="53.7293%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="53.4793%" y="629" width="0.0139%" height="15" fill="rgb(221,169,15)" fg:x="7693" fg:w="2"/><text x="53.7293%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="53.4793%" y="613" width="0.0139%" height="15" fill="rgb(235,108,21)" fg:x="7693" fg:w="2"/><text x="53.7293%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="53.4793%" y="597" width="0.0139%" height="15" fill="rgb(219,148,30)" fg:x="7693" fg:w="2"/><text x="53.7293%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (8 samples, 0.06%)</title><rect x="53.4585%" y="677" width="0.0556%" height="15" fill="rgb(220,109,5)" fg:x="7690" fg:w="8"/><text x="53.7085%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.03%)</title><rect x="53.4793%" y="661" width="0.0348%" height="15" fill="rgb(213,203,48)" fg:x="7693" fg:w="5"/><text x="53.7293%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.01%)</title><rect x="53.5002%" y="645" width="0.0139%" height="15" fill="rgb(244,71,33)" fg:x="7696" fg:w="2"/><text x="53.7502%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="53.5002%" y="629" width="0.0139%" height="15" fill="rgb(209,23,2)" fg:x="7696" fg:w="2"/><text x="53.7502%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.01%)</title><rect x="53.5002%" y="613" width="0.0139%" height="15" fill="rgb(219,97,7)" fg:x="7696" fg:w="2"/><text x="53.7502%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.01%)</title><rect x="53.5002%" y="597" width="0.0139%" height="15" fill="rgb(216,161,23)" fg:x="7696" fg:w="2"/><text x="53.7502%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.01%)</title><rect x="53.5002%" y="581" width="0.0139%" height="15" fill="rgb(207,45,42)" fg:x="7696" fg:w="2"/><text x="53.7502%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.01%)</title><rect x="53.5002%" y="565" width="0.0139%" height="15" fill="rgb(241,61,4)" fg:x="7696" fg:w="2"/><text x="53.7502%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (2 samples, 0.01%)</title><rect x="53.5002%" y="549" width="0.0139%" height="15" fill="rgb(236,170,1)" fg:x="7696" fg:w="2"/><text x="53.7502%" y="559.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.01%)</title><rect x="53.5002%" y="533" width="0.0139%" height="15" fill="rgb(239,72,5)" fg:x="7696" fg:w="2"/><text x="53.7502%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="53.5002%" y="517" width="0.0139%" height="15" fill="rgb(214,13,50)" fg:x="7696" fg:w="2"/><text x="53.7502%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="53.5002%" y="501" width="0.0139%" height="15" fill="rgb(224,88,9)" fg:x="7696" fg:w="2"/><text x="53.7502%" y="511.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="53.5002%" y="485" width="0.0139%" height="15" fill="rgb(238,192,34)" fg:x="7696" fg:w="2"/><text x="53.7502%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.02%)</title><rect x="53.6114%" y="549" width="0.0209%" height="15" fill="rgb(217,203,50)" fg:x="7712" fg:w="3"/><text x="53.8614%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.06%)</title><rect x="53.6531%" y="533" width="0.0626%" height="15" fill="rgb(241,123,32)" fg:x="7718" fg:w="9"/><text x="53.9031%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (23 samples, 0.16%)</title><rect x="53.5697%" y="597" width="0.1599%" height="15" fill="rgb(248,151,39)" fg:x="7706" fg:w="23"/><text x="53.8197%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (23 samples, 0.16%)</title><rect x="53.5697%" y="581" width="0.1599%" height="15" fill="rgb(208,89,6)" fg:x="7706" fg:w="23"/><text x="53.8197%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (23 samples, 0.16%)</title><rect x="53.5697%" y="565" width="0.1599%" height="15" fill="rgb(254,43,26)" fg:x="7706" fg:w="23"/><text x="53.8197%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.10%)</title><rect x="53.6323%" y="549" width="0.0973%" height="15" fill="rgb(216,158,13)" fg:x="7715" fg:w="14"/><text x="53.8823%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="53.7157%" y="533" width="0.0139%" height="15" fill="rgb(212,47,37)" fg:x="7727" fg:w="2"/><text x="53.9657%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.01%)</title><rect x="53.7296%" y="597" width="0.0139%" height="15" fill="rgb(254,16,10)" fg:x="7729" fg:w="2"/><text x="53.9796%" y="607.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.01%)</title><rect x="53.7296%" y="581" width="0.0139%" height="15" fill="rgb(223,228,16)" fg:x="7729" fg:w="2"/><text x="53.9796%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="53.7643%" y="469" width="0.0139%" height="15" fill="rgb(249,108,50)" fg:x="7734" fg:w="2"/><text x="54.0143%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.02%)</title><rect x="53.7643%" y="485" width="0.0209%" height="15" fill="rgb(208,220,5)" fg:x="7734" fg:w="3"/><text x="54.0143%" y="495.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.01%)</title><rect x="53.7852%" y="485" width="0.0139%" height="15" fill="rgb(217,89,48)" fg:x="7737" fg:w="2"/><text x="54.0352%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (35 samples, 0.24%)</title><rect x="53.5627%" y="613" width="0.2433%" height="15" fill="rgb(212,113,41)" fg:x="7705" fg:w="35"/><text x="53.8127%" y="623.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (9 samples, 0.06%)</title><rect x="53.7435%" y="597" width="0.0626%" height="15" fill="rgb(231,127,5)" fg:x="7731" fg:w="9"/><text x="53.9935%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (9 samples, 0.06%)</title><rect x="53.7435%" y="581" width="0.0626%" height="15" fill="rgb(217,141,17)" fg:x="7731" fg:w="9"/><text x="53.9935%" y="591.50"></text></g><g><title>core::hash::Hasher::write_isize (9 samples, 0.06%)</title><rect x="53.7435%" y="565" width="0.0626%" height="15" fill="rgb(245,125,54)" fg:x="7731" fg:w="9"/><text x="53.9935%" y="575.50"></text></g><g><title>core::hash::Hasher::write_usize (9 samples, 0.06%)</title><rect x="53.7435%" y="549" width="0.0626%" height="15" fill="rgb(248,125,3)" fg:x="7731" fg:w="9"/><text x="53.9935%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.06%)</title><rect x="53.7435%" y="533" width="0.0626%" height="15" fill="rgb(236,119,51)" fg:x="7731" fg:w="9"/><text x="53.9935%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.06%)</title><rect x="53.7435%" y="517" width="0.0626%" height="15" fill="rgb(239,99,8)" fg:x="7731" fg:w="9"/><text x="53.9935%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.06%)</title><rect x="53.7435%" y="501" width="0.0626%" height="15" fill="rgb(224,228,4)" fg:x="7731" fg:w="9"/><text x="53.9935%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.08%)</title><rect x="53.8825%" y="581" width="0.0765%" height="15" fill="rgb(220,131,45)" fg:x="7751" fg:w="11"/><text x="54.1325%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.08%)</title><rect x="53.8825%" y="565" width="0.0765%" height="15" fill="rgb(215,62,5)" fg:x="7751" fg:w="11"/><text x="54.1325%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.08%)</title><rect x="53.8825%" y="549" width="0.0765%" height="15" fill="rgb(253,12,24)" fg:x="7751" fg:w="11"/><text x="54.1325%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.06%)</title><rect x="53.9034%" y="533" width="0.0556%" height="15" fill="rgb(248,120,50)" fg:x="7754" fg:w="8"/><text x="54.1534%" y="543.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.01%)</title><rect x="53.9590%" y="581" width="0.0139%" height="15" fill="rgb(245,194,10)" fg:x="7762" fg:w="2"/><text x="54.2090%" y="591.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="53.9590%" y="565" width="0.0139%" height="15" fill="rgb(241,149,38)" fg:x="7762" fg:w="2"/><text x="54.2090%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (10 samples, 0.07%)</title><rect x="53.9729%" y="581" width="0.0695%" height="15" fill="rgb(219,215,7)" fg:x="7764" fg:w="10"/><text x="54.2229%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (10 samples, 0.07%)</title><rect x="53.9729%" y="565" width="0.0695%" height="15" fill="rgb(208,120,31)" fg:x="7764" fg:w="10"/><text x="54.2229%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (10 samples, 0.07%)</title><rect x="53.9729%" y="549" width="0.0695%" height="15" fill="rgb(244,30,8)" fg:x="7764" fg:w="10"/><text x="54.2229%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.07%)</title><rect x="53.9729%" y="533" width="0.0695%" height="15" fill="rgb(238,35,44)" fg:x="7764" fg:w="10"/><text x="54.2229%" y="543.50"></text></g><g><title>y2021::d18::main::Snail::get_mut (92 samples, 0.64%)</title><rect x="53.5141%" y="677" width="0.6396%" height="15" fill="rgb(243,218,37)" fg:x="7698" fg:w="92"/><text x="53.7641%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (92 samples, 0.64%)</title><rect x="53.5141%" y="661" width="0.6396%" height="15" fill="rgb(218,169,10)" fg:x="7698" fg:w="92"/><text x="53.7641%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (89 samples, 0.62%)</title><rect x="53.5349%" y="645" width="0.6187%" height="15" fill="rgb(221,144,10)" fg:x="7701" fg:w="89"/><text x="53.7849%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (87 samples, 0.60%)</title><rect x="53.5488%" y="629" width="0.6048%" height="15" fill="rgb(226,41,38)" fg:x="7703" fg:w="87"/><text x="53.7988%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (50 samples, 0.35%)</title><rect x="53.8060%" y="613" width="0.3476%" height="15" fill="rgb(228,3,1)" fg:x="7740" fg:w="50"/><text x="54.0560%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (50 samples, 0.35%)</title><rect x="53.8060%" y="597" width="0.3476%" height="15" fill="rgb(209,129,12)" fg:x="7740" fg:w="50"/><text x="54.0560%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (16 samples, 0.11%)</title><rect x="54.0424%" y="581" width="0.1112%" height="15" fill="rgb(213,136,33)" fg:x="7774" fg:w="16"/><text x="54.2924%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (16 samples, 0.11%)</title><rect x="54.0424%" y="565" width="0.1112%" height="15" fill="rgb(209,181,29)" fg:x="7774" fg:w="16"/><text x="54.2924%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (16 samples, 0.11%)</title><rect x="54.0424%" y="549" width="0.1112%" height="15" fill="rgb(234,173,18)" fg:x="7774" fg:w="16"/><text x="54.2924%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (14 samples, 0.10%)</title><rect x="54.0563%" y="533" width="0.0973%" height="15" fill="rgb(227,73,47)" fg:x="7776" fg:w="14"/><text x="54.3063%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (14 samples, 0.10%)</title><rect x="54.0563%" y="517" width="0.0973%" height="15" fill="rgb(234,9,34)" fg:x="7776" fg:w="14"/><text x="54.3063%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (14 samples, 0.10%)</title><rect x="54.0563%" y="501" width="0.0973%" height="15" fill="rgb(235,172,15)" fg:x="7776" fg:w="14"/><text x="54.3063%" y="511.50"></text></g><g><title>core::core_arch::simd::i8x16::new (14 samples, 0.10%)</title><rect x="54.0563%" y="485" width="0.0973%" height="15" fill="rgb(245,61,2)" fg:x="7776" fg:w="14"/><text x="54.3063%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.06%)</title><rect x="54.2788%" y="533" width="0.0626%" height="15" fill="rgb(238,39,47)" fg:x="7808" fg:w="9"/><text x="54.5288%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (18 samples, 0.13%)</title><rect x="54.2718%" y="549" width="0.1251%" height="15" fill="rgb(234,37,24)" fg:x="7807" fg:w="18"/><text x="54.5218%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.06%)</title><rect x="54.3413%" y="533" width="0.0556%" height="15" fill="rgb(248,223,24)" fg:x="7817" fg:w="8"/><text x="54.5913%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.08%)</title><rect x="54.4108%" y="533" width="0.0834%" height="15" fill="rgb(223,12,15)" fg:x="7827" fg:w="12"/><text x="54.6608%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (52 samples, 0.36%)</title><rect x="54.1814%" y="597" width="0.3615%" height="15" fill="rgb(249,6,3)" fg:x="7794" fg:w="52"/><text x="54.4314%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (52 samples, 0.36%)</title><rect x="54.1814%" y="581" width="0.3615%" height="15" fill="rgb(237,105,33)" fg:x="7794" fg:w="52"/><text x="54.4314%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (52 samples, 0.36%)</title><rect x="54.1814%" y="565" width="0.3615%" height="15" fill="rgb(252,208,35)" fg:x="7794" fg:w="52"/><text x="54.4314%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21 samples, 0.15%)</title><rect x="54.3969%" y="549" width="0.1460%" height="15" fill="rgb(215,181,35)" fg:x="7825" fg:w="21"/><text x="54.6469%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.05%)</title><rect x="54.4943%" y="533" width="0.0487%" height="15" fill="rgb(246,212,3)" fg:x="7839" fg:w="7"/><text x="54.7443%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (10 samples, 0.07%)</title><rect x="54.5429%" y="597" width="0.0695%" height="15" fill="rgb(247,156,24)" fg:x="7846" fg:w="10"/><text x="54.7929%" y="607.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (9 samples, 0.06%)</title><rect x="54.5499%" y="581" width="0.0626%" height="15" fill="rgb(248,9,31)" fg:x="7847" fg:w="9"/><text x="54.7999%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (8 samples, 0.06%)</title><rect x="54.5568%" y="565" width="0.0556%" height="15" fill="rgb(234,26,45)" fg:x="7848" fg:w="8"/><text x="54.8068%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (8 samples, 0.06%)</title><rect x="54.5568%" y="549" width="0.0556%" height="15" fill="rgb(249,11,32)" fg:x="7848" fg:w="8"/><text x="54.8068%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.06%)</title><rect x="54.7167%" y="469" width="0.0626%" height="15" fill="rgb(249,162,33)" fg:x="7871" fg:w="9"/><text x="54.9667%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.07%)</title><rect x="54.7167%" y="485" width="0.0695%" height="15" fill="rgb(232,4,32)" fg:x="7871" fg:w="10"/><text x="54.9667%" y="495.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.03%)</title><rect x="54.7862%" y="485" width="0.0278%" height="15" fill="rgb(212,5,45)" fg:x="7881" fg:w="4"/><text x="55.0362%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (92 samples, 0.64%)</title><rect x="54.1814%" y="613" width="0.6396%" height="15" fill="rgb(227,95,13)" fg:x="7794" fg:w="92"/><text x="54.4314%" y="623.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (30 samples, 0.21%)</title><rect x="54.6124%" y="597" width="0.2086%" height="15" fill="rgb(223,205,10)" fg:x="7856" fg:w="30"/><text x="54.8624%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (28 samples, 0.19%)</title><rect x="54.6263%" y="581" width="0.1946%" height="15" fill="rgb(222,178,8)" fg:x="7858" fg:w="28"/><text x="54.8763%" y="591.50"></text></g><g><title>core::hash::Hasher::write_isize (28 samples, 0.19%)</title><rect x="54.6263%" y="565" width="0.1946%" height="15" fill="rgb(216,13,22)" fg:x="7858" fg:w="28"/><text x="54.8763%" y="575.50"></text></g><g><title>core::hash::Hasher::write_usize (28 samples, 0.19%)</title><rect x="54.6263%" y="549" width="0.1946%" height="15" fill="rgb(240,167,12)" fg:x="7858" fg:w="28"/><text x="54.8763%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 0.19%)</title><rect x="54.6263%" y="533" width="0.1946%" height="15" fill="rgb(235,68,35)" fg:x="7858" fg:w="28"/><text x="54.8763%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (28 samples, 0.19%)</title><rect x="54.6263%" y="517" width="0.1946%" height="15" fill="rgb(253,40,27)" fg:x="7858" fg:w="28"/><text x="54.8763%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.19%)</title><rect x="54.6263%" y="501" width="0.1946%" height="15" fill="rgb(214,19,28)" fg:x="7858" fg:w="28"/><text x="54.8763%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="54.9670%" y="549" width="0.0348%" height="15" fill="rgb(210,167,45)" fg:x="7907" fg:w="5"/><text x="55.2170%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.02%)</title><rect x="54.9809%" y="533" width="0.0209%" height="15" fill="rgb(232,97,40)" fg:x="7909" fg:w="3"/><text x="55.2309%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.05%)</title><rect x="54.9670%" y="581" width="0.0487%" height="15" fill="rgb(250,35,23)" fg:x="7907" fg:w="7"/><text x="55.2170%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.05%)</title><rect x="54.9670%" y="565" width="0.0487%" height="15" fill="rgb(248,47,53)" fg:x="7907" fg:w="7"/><text x="55.2170%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2 samples, 0.01%)</title><rect x="55.0017%" y="549" width="0.0139%" height="15" fill="rgb(226,58,50)" fg:x="7912" fg:w="2"/><text x="55.2517%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.01%)</title><rect x="55.0017%" y="533" width="0.0139%" height="15" fill="rgb(217,105,26)" fg:x="7912" fg:w="2"/><text x="55.2517%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.01%)</title><rect x="55.0017%" y="517" width="0.0139%" height="15" fill="rgb(208,64,1)" fg:x="7912" fg:w="2"/><text x="55.2517%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.02%)</title><rect x="55.0156%" y="533" width="0.0209%" height="15" fill="rgb(214,80,1)" fg:x="7914" fg:w="3"/><text x="55.2656%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.02%)</title><rect x="55.0156%" y="517" width="0.0209%" height="15" fill="rgb(206,175,26)" fg:x="7914" fg:w="3"/><text x="55.2656%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="55.0156%" y="501" width="0.0209%" height="15" fill="rgb(235,156,37)" fg:x="7914" fg:w="3"/><text x="55.2656%" y="511.50"></text></g><g><title>y2021::d18::main::Snail::has (136 samples, 0.95%)</title><rect x="54.1536%" y="677" width="0.9454%" height="15" fill="rgb(213,100,9)" fg:x="7790" fg:w="136"/><text x="54.4036%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (136 samples, 0.95%)</title><rect x="54.1536%" y="661" width="0.9454%" height="15" fill="rgb(241,15,13)" fg:x="7790" fg:w="136"/><text x="54.4036%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (135 samples, 0.94%)</title><rect x="54.1606%" y="645" width="0.9385%" height="15" fill="rgb(205,97,43)" fg:x="7791" fg:w="135"/><text x="54.4106%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (135 samples, 0.94%)</title><rect x="54.1606%" y="629" width="0.9385%" height="15" fill="rgb(216,106,32)" fg:x="7791" fg:w="135"/><text x="54.4106%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (40 samples, 0.28%)</title><rect x="54.8210%" y="613" width="0.2781%" height="15" fill="rgb(226,200,8)" fg:x="7886" fg:w="40"/><text x="55.0710%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (40 samples, 0.28%)</title><rect x="54.8210%" y="597" width="0.2781%" height="15" fill="rgb(244,54,29)" fg:x="7886" fg:w="40"/><text x="55.0710%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (12 samples, 0.08%)</title><rect x="55.0156%" y="581" width="0.0834%" height="15" fill="rgb(252,169,12)" fg:x="7914" fg:w="12"/><text x="55.2656%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (12 samples, 0.08%)</title><rect x="55.0156%" y="565" width="0.0834%" height="15" fill="rgb(231,199,11)" fg:x="7914" fg:w="12"/><text x="55.2656%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (12 samples, 0.08%)</title><rect x="55.0156%" y="549" width="0.0834%" height="15" fill="rgb(233,191,18)" fg:x="7914" fg:w="12"/><text x="55.2656%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (9 samples, 0.06%)</title><rect x="55.0365%" y="533" width="0.0626%" height="15" fill="rgb(215,83,47)" fg:x="7917" fg:w="9"/><text x="55.2865%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (9 samples, 0.06%)</title><rect x="55.0365%" y="517" width="0.0626%" height="15" fill="rgb(251,67,19)" fg:x="7917" fg:w="9"/><text x="55.2865%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (9 samples, 0.06%)</title><rect x="55.0365%" y="501" width="0.0626%" height="15" fill="rgb(240,7,20)" fg:x="7917" fg:w="9"/><text x="55.2865%" y="511.50"></text></g><g><title>core::core_arch::simd::i8x16::new (9 samples, 0.06%)</title><rect x="55.0365%" y="485" width="0.0626%" height="15" fill="rgb(210,150,26)" fg:x="7917" fg:w="9"/><text x="55.2865%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.02%)</title><rect x="55.1825%" y="565" width="0.0209%" height="15" fill="rgb(228,75,42)" fg:x="7938" fg:w="3"/><text x="55.4325%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="55.1894%" y="549" width="0.0139%" height="15" fill="rgb(237,134,48)" fg:x="7939" fg:w="2"/><text x="55.4394%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (10 samples, 0.07%)</title><rect x="55.1686%" y="613" width="0.0695%" height="15" fill="rgb(205,80,50)" fg:x="7936" fg:w="10"/><text x="55.4186%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (10 samples, 0.07%)</title><rect x="55.1686%" y="597" width="0.0695%" height="15" fill="rgb(217,74,48)" fg:x="7936" fg:w="10"/><text x="55.4186%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (10 samples, 0.07%)</title><rect x="55.1686%" y="581" width="0.0695%" height="15" fill="rgb(205,82,50)" fg:x="7936" fg:w="10"/><text x="55.4186%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.03%)</title><rect x="55.2033%" y="565" width="0.0348%" height="15" fill="rgb(228,1,33)" fg:x="7941" fg:w="5"/><text x="55.4533%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.02%)</title><rect x="55.2172%" y="549" width="0.0209%" height="15" fill="rgb(214,50,23)" fg:x="7943" fg:w="3"/><text x="55.4672%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.03%)</title><rect x="55.2381%" y="613" width="0.0278%" height="15" fill="rgb(210,62,9)" fg:x="7946" fg:w="4"/><text x="55.4881%" y="623.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.02%)</title><rect x="55.2450%" y="597" width="0.0209%" height="15" fill="rgb(210,104,37)" fg:x="7947" fg:w="3"/><text x="55.4950%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.02%)</title><rect x="55.2450%" y="581" width="0.0209%" height="15" fill="rgb(232,104,43)" fg:x="7947" fg:w="3"/><text x="55.4950%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.02%)</title><rect x="55.2450%" y="565" width="0.0209%" height="15" fill="rgb(244,52,6)" fg:x="7947" fg:w="3"/><text x="55.4950%" y="575.50"></text></g><g><title>hashbrown::map::make_insert_hash (20 samples, 0.14%)</title><rect x="55.1686%" y="629" width="0.1390%" height="15" fill="rgb(211,174,52)" fg:x="7936" fg:w="20"/><text x="55.4186%" y="639.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (6 samples, 0.04%)</title><rect x="55.2659%" y="613" width="0.0417%" height="15" fill="rgb(229,48,4)" fg:x="7950" fg:w="6"/><text x="55.5159%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (6 samples, 0.04%)</title><rect x="55.2659%" y="597" width="0.0417%" height="15" fill="rgb(205,155,16)" fg:x="7950" fg:w="6"/><text x="55.5159%" y="607.50"></text></g><g><title>core::hash::Hasher::write_isize (6 samples, 0.04%)</title><rect x="55.2659%" y="581" width="0.0417%" height="15" fill="rgb(211,141,53)" fg:x="7950" fg:w="6"/><text x="55.5159%" y="591.50"></text></g><g><title>core::hash::Hasher::write_usize (6 samples, 0.04%)</title><rect x="55.2659%" y="565" width="0.0417%" height="15" fill="rgb(240,148,11)" fg:x="7950" fg:w="6"/><text x="55.5159%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.04%)</title><rect x="55.2659%" y="549" width="0.0417%" height="15" fill="rgb(214,45,23)" fg:x="7950" fg:w="6"/><text x="55.5159%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.04%)</title><rect x="55.2659%" y="533" width="0.0417%" height="15" fill="rgb(248,74,26)" fg:x="7950" fg:w="6"/><text x="55.5159%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.04%)</title><rect x="55.2659%" y="517" width="0.0417%" height="15" fill="rgb(218,121,16)" fg:x="7950" fg:w="6"/><text x="55.5159%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="55.2937%" y="501" width="0.0139%" height="15" fill="rgb(218,10,47)" fg:x="7954" fg:w="2"/><text x="55.5437%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.03%)</title><rect x="55.3076%" y="629" width="0.0278%" height="15" fill="rgb(227,99,14)" fg:x="7956" fg:w="4"/><text x="55.5576%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.03%)</title><rect x="55.3076%" y="613" width="0.0278%" height="15" fill="rgb(229,83,46)" fg:x="7956" fg:w="4"/><text x="55.5576%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="55.3146%" y="597" width="0.0209%" height="15" fill="rgb(228,25,1)" fg:x="7957" fg:w="3"/><text x="55.5646%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="55.3146%" y="581" width="0.0209%" height="15" fill="rgb(252,190,15)" fg:x="7957" fg:w="3"/><text x="55.5646%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="55.3215%" y="565" width="0.0139%" height="15" fill="rgb(213,103,51)" fg:x="7958" fg:w="2"/><text x="55.5715%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.01%)</title><rect x="55.3493%" y="613" width="0.0139%" height="15" fill="rgb(220,38,44)" fg:x="7962" fg:w="2"/><text x="55.5993%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.01%)</title><rect x="55.3493%" y="597" width="0.0139%" height="15" fill="rgb(210,45,26)" fg:x="7962" fg:w="2"/><text x="55.5993%" y="607.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="55.3493%" y="581" width="0.0139%" height="15" fill="rgb(205,95,48)" fg:x="7962" fg:w="2"/><text x="55.5993%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.01%)</title><rect x="55.3702%" y="597" width="0.0139%" height="15" fill="rgb(225,179,37)" fg:x="7965" fg:w="2"/><text x="55.6202%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (5 samples, 0.03%)</title><rect x="55.3702%" y="613" width="0.0348%" height="15" fill="rgb(230,209,3)" fg:x="7965" fg:w="5"/><text x="55.6202%" y="623.50"></text></g><g><title>hashbrown::raw::is_full (3 samples, 0.02%)</title><rect x="55.3841%" y="597" width="0.0209%" height="15" fill="rgb(248,12,46)" fg:x="7967" fg:w="3"/><text x="55.6341%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (40 samples, 0.28%)</title><rect x="55.1338%" y="661" width="0.2781%" height="15" fill="rgb(234,18,0)" fg:x="7931" fg:w="40"/><text x="55.3838%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (39 samples, 0.27%)</title><rect x="55.1408%" y="645" width="0.2711%" height="15" fill="rgb(238,197,14)" fg:x="7932" fg:w="39"/><text x="55.3908%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (11 samples, 0.08%)</title><rect x="55.3354%" y="629" width="0.0765%" height="15" fill="rgb(251,162,48)" fg:x="7960" fg:w="11"/><text x="55.5854%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (4 samples, 0.03%)</title><rect x="55.4119%" y="629" width="0.0278%" height="15" fill="rgb(237,73,42)" fg:x="7971" fg:w="4"/><text x="55.6619%" y="639.50"></text></g><g><title>std::collections::hash::map::RandomState::new (4 samples, 0.03%)</title><rect x="55.4119%" y="613" width="0.0278%" height="15" fill="rgb(211,108,8)" fg:x="7971" fg:w="4"/><text x="55.6619%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.03%)</title><rect x="55.4119%" y="597" width="0.0278%" height="15" fill="rgb(213,45,22)" fg:x="7971" fg:w="4"/><text x="55.6619%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.03%)</title><rect x="55.4119%" y="581" width="0.0278%" height="15" fill="rgb(252,154,5)" fg:x="7971" fg:w="4"/><text x="55.6619%" y="591.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (4 samples, 0.03%)</title><rect x="55.4119%" y="565" width="0.0278%" height="15" fill="rgb(221,79,52)" fg:x="7971" fg:w="4"/><text x="55.6619%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (6 samples, 0.04%)</title><rect x="55.4119%" y="661" width="0.0417%" height="15" fill="rgb(229,220,36)" fg:x="7971" fg:w="6"/><text x="55.6619%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (6 samples, 0.04%)</title><rect x="55.4119%" y="645" width="0.0417%" height="15" fill="rgb(211,17,16)" fg:x="7971" fg:w="6"/><text x="55.6619%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (2 samples, 0.01%)</title><rect x="55.4397%" y="629" width="0.0139%" height="15" fill="rgb(222,55,31)" fg:x="7975" fg:w="2"/><text x="55.6897%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (2 samples, 0.01%)</title><rect x="55.4397%" y="613" width="0.0139%" height="15" fill="rgb(221,221,31)" fg:x="7975" fg:w="2"/><text x="55.6897%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="55.4397%" y="597" width="0.0139%" height="15" fill="rgb(227,168,26)" fg:x="7975" fg:w="2"/><text x="55.6897%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_in (2 samples, 0.01%)</title><rect x="55.4397%" y="581" width="0.0139%" height="15" fill="rgb(224,139,9)" fg:x="7975" fg:w="2"/><text x="55.6897%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::static_empty (2 samples, 0.01%)</title><rect x="55.4397%" y="565" width="0.0139%" height="15" fill="rgb(254,172,0)" fg:x="7975" fg:w="2"/><text x="55.6897%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.04%)</title><rect x="55.7247%" y="517" width="0.0417%" height="15" fill="rgb(235,203,1)" fg:x="8016" fg:w="6"/><text x="55.9747%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.09%)</title><rect x="55.7108%" y="533" width="0.0904%" height="15" fill="rgb(216,205,24)" fg:x="8014" fg:w="13"/><text x="55.9608%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.03%)</title><rect x="55.7664%" y="517" width="0.0348%" height="15" fill="rgb(233,24,6)" fg:x="8022" fg:w="5"/><text x="56.0164%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (31 samples, 0.22%)</title><rect x="55.8498%" y="517" width="0.2155%" height="15" fill="rgb(244,110,9)" fg:x="8034" fg:w="31"/><text x="56.0998%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (93 samples, 0.65%)</title><rect x="55.5162%" y="581" width="0.6465%" height="15" fill="rgb(239,222,42)" fg:x="7986" fg:w="93"/><text x="55.7662%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (93 samples, 0.65%)</title><rect x="55.5162%" y="565" width="0.6465%" height="15" fill="rgb(218,145,13)" fg:x="7986" fg:w="93"/><text x="55.7662%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (93 samples, 0.65%)</title><rect x="55.5162%" y="549" width="0.6465%" height="15" fill="rgb(207,69,11)" fg:x="7986" fg:w="93"/><text x="55.7662%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (52 samples, 0.36%)</title><rect x="55.8012%" y="533" width="0.3615%" height="15" fill="rgb(220,223,22)" fg:x="8027" fg:w="52"/><text x="56.0512%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (14 samples, 0.10%)</title><rect x="56.0653%" y="517" width="0.0973%" height="15" fill="rgb(245,102,5)" fg:x="8065" fg:w="14"/><text x="56.3153%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (15 samples, 0.10%)</title><rect x="56.1627%" y="581" width="0.1043%" height="15" fill="rgb(211,148,2)" fg:x="8079" fg:w="15"/><text x="56.4127%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (10 samples, 0.07%)</title><rect x="56.1974%" y="565" width="0.0695%" height="15" fill="rgb(241,13,44)" fg:x="8084" fg:w="10"/><text x="56.4474%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (10 samples, 0.07%)</title><rect x="56.1974%" y="549" width="0.0695%" height="15" fill="rgb(219,137,21)" fg:x="8084" fg:w="10"/><text x="56.4474%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (10 samples, 0.07%)</title><rect x="56.1974%" y="533" width="0.0695%" height="15" fill="rgb(242,206,5)" fg:x="8084" fg:w="10"/><text x="56.4474%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.06%)</title><rect x="56.3643%" y="453" width="0.0626%" height="15" fill="rgb(217,114,22)" fg:x="8108" fg:w="9"/><text x="56.6143%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.08%)</title><rect x="56.3504%" y="469" width="0.0834%" height="15" fill="rgb(253,206,42)" fg:x="8106" fg:w="12"/><text x="56.6004%" y="479.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.02%)</title><rect x="56.4338%" y="469" width="0.0209%" height="15" fill="rgb(236,102,18)" fg:x="8118" fg:w="3"/><text x="56.6838%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (136 samples, 0.95%)</title><rect x="55.5162%" y="597" width="0.9454%" height="15" fill="rgb(208,59,49)" fg:x="7986" fg:w="136"/><text x="55.7662%" y="607.50"></text></g><g><title>&lt;y2021::d18::main::Side as core::hash::Hash&gt;::hash (28 samples, 0.19%)</title><rect x="56.2669%" y="581" width="0.1946%" height="15" fill="rgb(215,194,28)" fg:x="8094" fg:w="28"/><text x="56.5169%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (26 samples, 0.18%)</title><rect x="56.2808%" y="565" width="0.1807%" height="15" fill="rgb(243,207,11)" fg:x="8096" fg:w="26"/><text x="56.5308%" y="575.50"></text></g><g><title>core::hash::Hasher::write_isize (26 samples, 0.18%)</title><rect x="56.2808%" y="549" width="0.1807%" height="15" fill="rgb(254,179,35)" fg:x="8096" fg:w="26"/><text x="56.5308%" y="559.50"></text></g><g><title>core::hash::Hasher::write_usize (26 samples, 0.18%)</title><rect x="56.2808%" y="533" width="0.1807%" height="15" fill="rgb(235,97,3)" fg:x="8096" fg:w="26"/><text x="56.5308%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (25 samples, 0.17%)</title><rect x="56.2878%" y="517" width="0.1738%" height="15" fill="rgb(215,155,33)" fg:x="8097" fg:w="25"/><text x="56.5378%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (25 samples, 0.17%)</title><rect x="56.2878%" y="501" width="0.1738%" height="15" fill="rgb(223,128,12)" fg:x="8097" fg:w="25"/><text x="56.5378%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (25 samples, 0.17%)</title><rect x="56.2878%" y="485" width="0.1738%" height="15" fill="rgb(208,157,18)" fg:x="8097" fg:w="25"/><text x="56.5378%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="56.5311%" y="565" width="0.0417%" height="15" fill="rgb(249,70,54)" fg:x="8132" fg:w="6"/><text x="56.7811%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="56.5311%" y="549" width="0.0417%" height="15" fill="rgb(244,118,24)" fg:x="8132" fg:w="6"/><text x="56.7811%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="56.5520%" y="533" width="0.0209%" height="15" fill="rgb(211,54,0)" fg:x="8135" fg:w="3"/><text x="56.8020%" y="543.50"></text></g><g><title>y2021::d18::main::run (3,988 samples, 27.72%)</title><rect x="29.0372%" y="773" width="27.7233%" height="15" fill="rgb(245,137,45)" fg:x="4177" fg:w="3988"/><text x="29.2872%" y="783.50">y2021::d18::main::run</text></g><g><title>y2021::d18::main::p02 (3,776 samples, 26.25%)</title><rect x="30.5109%" y="757" width="26.2496%" height="15" fill="rgb(232,154,31)" fg:x="4389" fg:w="3776"/><text x="30.7609%" y="767.50">y2021::d18::main::p02</text></g><g><title>y2021::d18::main::Snail::reduce (3,625 samples, 25.20%)</title><rect x="31.5607%" y="741" width="25.1999%" height="15" fill="rgb(253,6,39)" fg:x="4540" fg:w="3625"/><text x="31.8107%" y="751.50">y2021::d18::main::Snail::reduce</text></g><g><title>y2021::d18::main::Snail::split (705 samples, 4.90%)</title><rect x="51.8596%" y="725" width="4.9009%" height="15" fill="rgb(234,183,24)" fg:x="7460" fg:w="705"/><text x="52.1096%" y="735.50">y2021:..</text></g><g><title>y2021::d18::main::Snail::split (623 samples, 4.33%)</title><rect x="52.4296%" y="709" width="4.3309%" height="15" fill="rgb(252,84,40)" fg:x="7542" fg:w="623"/><text x="52.6796%" y="719.50">y2021..</text></g><g><title>y2021::d18::main::Snail::split (481 samples, 3.34%)</title><rect x="53.4168%" y="693" width="3.3438%" height="15" fill="rgb(224,65,2)" fg:x="7684" fg:w="481"/><text x="53.6668%" y="703.50">y20..</text></g><g><title>y2021::d18::main::Snail::split (239 samples, 1.66%)</title><rect x="55.0991%" y="677" width="1.6615%" height="15" fill="rgb(229,38,24)" fg:x="7926" fg:w="239"/><text x="55.3491%" y="687.50"></text></g><g><title>y2021::d18::main::Snail::has (188 samples, 1.31%)</title><rect x="55.4536%" y="661" width="1.3069%" height="15" fill="rgb(218,131,50)" fg:x="7977" fg:w="188"/><text x="55.7036%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (188 samples, 1.31%)</title><rect x="55.4536%" y="645" width="1.3069%" height="15" fill="rgb(233,106,18)" fg:x="7977" fg:w="188"/><text x="55.7036%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (186 samples, 1.29%)</title><rect x="55.4675%" y="629" width="1.2930%" height="15" fill="rgb(220,216,11)" fg:x="7979" fg:w="186"/><text x="55.7175%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (185 samples, 1.29%)</title><rect x="55.4745%" y="613" width="1.2861%" height="15" fill="rgb(251,100,45)" fg:x="7980" fg:w="185"/><text x="55.7245%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (43 samples, 0.30%)</title><rect x="56.4616%" y="597" width="0.2989%" height="15" fill="rgb(235,143,32)" fg:x="8122" fg:w="43"/><text x="56.7116%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (43 samples, 0.30%)</title><rect x="56.4616%" y="581" width="0.2989%" height="15" fill="rgb(248,124,34)" fg:x="8122" fg:w="43"/><text x="56.7116%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (27 samples, 0.19%)</title><rect x="56.5728%" y="565" width="0.1877%" height="15" fill="rgb(225,221,4)" fg:x="8138" fg:w="27"/><text x="56.8228%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (27 samples, 0.19%)</title><rect x="56.5728%" y="549" width="0.1877%" height="15" fill="rgb(242,27,43)" fg:x="8138" fg:w="27"/><text x="56.8228%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (27 samples, 0.19%)</title><rect x="56.5728%" y="533" width="0.1877%" height="15" fill="rgb(227,54,8)" fg:x="8138" fg:w="27"/><text x="56.8228%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (27 samples, 0.19%)</title><rect x="56.5728%" y="517" width="0.1877%" height="15" fill="rgb(253,139,49)" fg:x="8138" fg:w="27"/><text x="56.8228%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (27 samples, 0.19%)</title><rect x="56.5728%" y="501" width="0.1877%" height="15" fill="rgb(231,26,43)" fg:x="8138" fg:w="27"/><text x="56.8228%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (27 samples, 0.19%)</title><rect x="56.5728%" y="485" width="0.1877%" height="15" fill="rgb(207,121,39)" fg:x="8138" fg:w="27"/><text x="56.8228%" y="495.50"></text></g><g><title>core::core_arch::simd::i8x16::new (27 samples, 0.19%)</title><rect x="56.5728%" y="469" width="0.1877%" height="15" fill="rgb(223,101,35)" fg:x="8138" fg:w="27"/><text x="56.8228%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="56.7744%" y="469" width="0.0278%" height="15" fill="rgb(232,87,23)" fg:x="8167" fg:w="4"/><text x="57.0244%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="56.7744%" y="453" width="0.0278%" height="15" fill="rgb(225,180,29)" fg:x="8167" fg:w="4"/><text x="57.0244%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="56.7744%" y="437" width="0.0278%" height="15" fill="rgb(225,25,17)" fg:x="8167" fg:w="4"/><text x="57.0244%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="56.7883%" y="421" width="0.0139%" height="15" fill="rgb(223,8,52)" fg:x="8169" fg:w="2"/><text x="57.0383%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="56.7883%" y="405" width="0.0139%" height="15" fill="rgb(246,42,21)" fg:x="8169" fg:w="2"/><text x="57.0383%" y="415.50"></text></g><g><title>hashbrown::map::make_insert_hash (5 samples, 0.03%)</title><rect x="56.7744%" y="485" width="0.0348%" height="15" fill="rgb(205,64,43)" fg:x="8167" fg:w="5"/><text x="57.0244%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.01%)</title><rect x="56.8092%" y="469" width="0.0139%" height="15" fill="rgb(221,160,13)" fg:x="8172" fg:w="2"/><text x="57.0592%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.01%)</title><rect x="56.8092%" y="453" width="0.0139%" height="15" fill="rgb(239,58,35)" fg:x="8172" fg:w="2"/><text x="57.0592%" y="463.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="56.8092%" y="437" width="0.0139%" height="15" fill="rgb(251,26,40)" fg:x="8172" fg:w="2"/><text x="57.0592%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="56.8509%" y="277" width="0.0139%" height="15" fill="rgb(247,0,4)" fg:x="8178" fg:w="2"/><text x="57.1009%" y="287.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (7 samples, 0.05%)</title><rect x="56.8231%" y="421" width="0.0487%" height="15" fill="rgb(218,130,10)" fg:x="8174" fg:w="7"/><text x="57.0731%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.05%)</title><rect x="56.8231%" y="405" width="0.0487%" height="15" fill="rgb(239,32,7)" fg:x="8174" fg:w="7"/><text x="57.0731%" y="415.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::hash::Hash&gt;::hash (6 samples, 0.04%)</title><rect x="56.8300%" y="389" width="0.0417%" height="15" fill="rgb(210,192,24)" fg:x="8175" fg:w="6"/><text x="57.0800%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (5 samples, 0.03%)</title><rect x="56.8370%" y="373" width="0.0348%" height="15" fill="rgb(226,212,17)" fg:x="8176" fg:w="5"/><text x="57.0870%" y="383.50"></text></g><g><title>core::hash::Hasher::write_i64 (5 samples, 0.03%)</title><rect x="56.8370%" y="357" width="0.0348%" height="15" fill="rgb(219,201,28)" fg:x="8176" fg:w="5"/><text x="57.0870%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u64 (5 samples, 0.03%)</title><rect x="56.8370%" y="341" width="0.0348%" height="15" fill="rgb(235,207,41)" fg:x="8176" fg:w="5"/><text x="57.0870%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="56.8370%" y="325" width="0.0348%" height="15" fill="rgb(241,95,54)" fg:x="8176" fg:w="5"/><text x="57.0870%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="56.8370%" y="309" width="0.0348%" height="15" fill="rgb(248,12,23)" fg:x="8176" fg:w="5"/><text x="57.0870%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="56.8370%" y="293" width="0.0348%" height="15" fill="rgb(228,173,4)" fg:x="8176" fg:w="5"/><text x="57.0870%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (8 samples, 0.06%)</title><rect x="56.8231%" y="469" width="0.0556%" height="15" fill="rgb(254,99,5)" fg:x="8174" fg:w="8"/><text x="57.0731%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.06%)</title><rect x="56.8231%" y="453" width="0.0556%" height="15" fill="rgb(212,184,17)" fg:x="8174" fg:w="8"/><text x="57.0731%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (8 samples, 0.06%)</title><rect x="56.8231%" y="437" width="0.0556%" height="15" fill="rgb(252,174,1)" fg:x="8174" fg:w="8"/><text x="57.0731%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (18 samples, 0.13%)</title><rect x="56.7605%" y="725" width="0.1251%" height="15" fill="rgb(241,118,51)" fg:x="8165" fg:w="18"/><text x="57.0105%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (18 samples, 0.13%)</title><rect x="56.7605%" y="709" width="0.1251%" height="15" fill="rgb(227,94,47)" fg:x="8165" fg:w="18"/><text x="57.0105%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (18 samples, 0.13%)</title><rect x="56.7605%" y="693" width="0.1251%" height="15" fill="rgb(229,104,2)" fg:x="8165" fg:w="18"/><text x="57.0105%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (18 samples, 0.13%)</title><rect x="56.7605%" y="677" width="0.1251%" height="15" fill="rgb(219,28,31)" fg:x="8165" fg:w="18"/><text x="57.0105%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.13%)</title><rect x="56.7605%" y="661" width="0.1251%" height="15" fill="rgb(233,109,36)" fg:x="8165" fg:w="18"/><text x="57.0105%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.13%)</title><rect x="56.7605%" y="645" width="0.1251%" height="15" fill="rgb(246,88,11)" fg:x="8165" fg:w="18"/><text x="57.0105%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.13%)</title><rect x="56.7605%" y="629" width="0.1251%" height="15" fill="rgb(209,212,17)" fg:x="8165" fg:w="18"/><text x="57.0105%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (18 samples, 0.13%)</title><rect x="56.7605%" y="613" width="0.1251%" height="15" fill="rgb(243,59,29)" fg:x="8165" fg:w="18"/><text x="57.0105%" y="623.50"></text></g><g><title>y2021::d19::main::p01::{{closure}} (18 samples, 0.13%)</title><rect x="56.7605%" y="597" width="0.1251%" height="15" fill="rgb(244,205,48)" fg:x="8165" fg:w="18"/><text x="57.0105%" y="607.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (18 samples, 0.13%)</title><rect x="56.7605%" y="581" width="0.1251%" height="15" fill="rgb(227,30,6)" fg:x="8165" fg:w="18"/><text x="57.0105%" y="591.50"></text></g><g><title>&lt;y2021::d19::scanner::Scanner as core::str::traits::FromStr&gt;::from_str (18 samples, 0.13%)</title><rect x="56.7605%" y="565" width="0.1251%" height="15" fill="rgb(220,205,48)" fg:x="8165" fg:w="18"/><text x="57.0105%" y="575.50"></text></g><g><title>y2021::d19::scanner::Scanner::new (17 samples, 0.12%)</title><rect x="56.7675%" y="549" width="0.1182%" height="15" fill="rgb(250,94,14)" fg:x="8166" fg:w="17"/><text x="57.0175%" y="559.50"></text></g><g><title>y2021::d19::scanner::Scanner::calculate_vectors (17 samples, 0.12%)</title><rect x="56.7675%" y="533" width="0.1182%" height="15" fill="rgb(216,119,42)" fg:x="8166" fg:w="17"/><text x="57.0175%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (17 samples, 0.12%)</title><rect x="56.7675%" y="517" width="0.1182%" height="15" fill="rgb(232,155,0)" fg:x="8166" fg:w="17"/><text x="57.0175%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.11%)</title><rect x="56.7744%" y="501" width="0.1112%" height="15" fill="rgb(212,24,32)" fg:x="8167" fg:w="16"/><text x="57.0244%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (11 samples, 0.08%)</title><rect x="56.8092%" y="485" width="0.0765%" height="15" fill="rgb(216,69,20)" fg:x="8172" fg:w="11"/><text x="57.0592%" y="495.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.01%)</title><rect x="56.8926%" y="517" width="0.0139%" height="15" fill="rgb(229,73,31)" fg:x="8184" fg:w="2"/><text x="57.1426%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="56.8926%" y="501" width="0.0139%" height="15" fill="rgb(224,219,20)" fg:x="8184" fg:w="2"/><text x="57.1426%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="56.8926%" y="485" width="0.0139%" height="15" fill="rgb(215,146,41)" fg:x="8184" fg:w="2"/><text x="57.1426%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="56.8926%" y="469" width="0.0139%" height="15" fill="rgb(244,71,31)" fg:x="8184" fg:w="2"/><text x="57.1426%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.01%)</title><rect x="56.8926%" y="453" width="0.0139%" height="15" fill="rgb(224,24,11)" fg:x="8184" fg:w="2"/><text x="57.1426%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (22 samples, 0.15%)</title><rect x="56.7605%" y="741" width="0.1529%" height="15" fill="rgb(229,76,15)" fg:x="8165" fg:w="22"/><text x="57.0105%" y="751.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="56.8856%" y="725" width="0.0278%" height="15" fill="rgb(209,93,2)" fg:x="8183" fg:w="4"/><text x="57.1356%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.03%)</title><rect x="56.8856%" y="709" width="0.0278%" height="15" fill="rgb(216,200,50)" fg:x="8183" fg:w="4"/><text x="57.1356%" y="719.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.03%)</title><rect x="56.8856%" y="693" width="0.0278%" height="15" fill="rgb(211,67,34)" fg:x="8183" fg:w="4"/><text x="57.1356%" y="703.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.03%)</title><rect x="56.8856%" y="677" width="0.0278%" height="15" fill="rgb(225,87,47)" fg:x="8183" fg:w="4"/><text x="57.1356%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.03%)</title><rect x="56.8856%" y="661" width="0.0278%" height="15" fill="rgb(217,185,16)" fg:x="8183" fg:w="4"/><text x="57.1356%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.03%)</title><rect x="56.8856%" y="645" width="0.0278%" height="15" fill="rgb(205,0,0)" fg:x="8183" fg:w="4"/><text x="57.1356%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.03%)</title><rect x="56.8856%" y="629" width="0.0278%" height="15" fill="rgb(207,116,45)" fg:x="8183" fg:w="4"/><text x="57.1356%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.03%)</title><rect x="56.8856%" y="613" width="0.0278%" height="15" fill="rgb(221,156,26)" fg:x="8183" fg:w="4"/><text x="57.1356%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.02%)</title><rect x="56.8926%" y="597" width="0.0209%" height="15" fill="rgb(213,140,4)" fg:x="8184" fg:w="3"/><text x="57.1426%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.02%)</title><rect x="56.8926%" y="581" width="0.0209%" height="15" fill="rgb(231,224,15)" fg:x="8184" fg:w="3"/><text x="57.1426%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.02%)</title><rect x="56.8926%" y="565" width="0.0209%" height="15" fill="rgb(244,76,20)" fg:x="8184" fg:w="3"/><text x="57.1426%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (3 samples, 0.02%)</title><rect x="56.8926%" y="549" width="0.0209%" height="15" fill="rgb(238,117,7)" fg:x="8184" fg:w="3"/><text x="57.1426%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="56.8926%" y="533" width="0.0209%" height="15" fill="rgb(235,1,10)" fg:x="8184" fg:w="3"/><text x="57.1426%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (7 samples, 0.05%)</title><rect x="57.1220%" y="437" width="0.0487%" height="15" fill="rgb(216,165,6)" fg:x="8217" fg:w="7"/><text x="57.3720%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (7 samples, 0.05%)</title><rect x="57.1220%" y="421" width="0.0487%" height="15" fill="rgb(246,91,35)" fg:x="8217" fg:w="7"/><text x="57.3720%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (24 samples, 0.17%)</title><rect x="57.1707%" y="437" width="0.1668%" height="15" fill="rgb(228,96,24)" fg:x="8224" fg:w="24"/><text x="57.4207%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (6 samples, 0.04%)</title><rect x="57.3375%" y="437" width="0.0417%" height="15" fill="rgb(254,217,53)" fg:x="8248" fg:w="6"/><text x="57.5875%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (4 samples, 0.03%)</title><rect x="57.3792%" y="421" width="0.0278%" height="15" fill="rgb(209,60,0)" fg:x="8254" fg:w="4"/><text x="57.6292%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.51%)</title><rect x="56.9204%" y="501" width="0.5144%" height="15" fill="rgb(250,93,26)" fg:x="8188" fg:w="74"/><text x="57.1704%" y="511.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.51%)</title><rect x="56.9204%" y="485" width="0.5144%" height="15" fill="rgb(211,9,40)" fg:x="8188" fg:w="74"/><text x="57.1704%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.51%)</title><rect x="56.9274%" y="469" width="0.5075%" height="15" fill="rgb(242,57,20)" fg:x="8189" fg:w="73"/><text x="57.1774%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.46%)</title><rect x="56.9760%" y="453" width="0.4588%" height="15" fill="rgb(248,85,48)" fg:x="8196" fg:w="66"/><text x="57.2260%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (8 samples, 0.06%)</title><rect x="57.3792%" y="437" width="0.0556%" height="15" fill="rgb(212,117,2)" fg:x="8254" fg:w="8"/><text x="57.6292%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.03%)</title><rect x="57.4070%" y="421" width="0.0278%" height="15" fill="rgb(243,19,3)" fg:x="8258" fg:w="4"/><text x="57.6570%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.03%)</title><rect x="57.4070%" y="405" width="0.0278%" height="15" fill="rgb(232,217,24)" fg:x="8258" fg:w="4"/><text x="57.6570%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.54%)</title><rect x="56.9204%" y="517" width="0.5422%" height="15" fill="rgb(224,175,40)" fg:x="8188" fg:w="78"/><text x="57.1704%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.03%)</title><rect x="57.4348%" y="501" width="0.0278%" height="15" fill="rgb(212,162,32)" fg:x="8262" fg:w="4"/><text x="57.6848%" y="511.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (4 samples, 0.03%)</title><rect x="57.5043%" y="357" width="0.0278%" height="15" fill="rgb(215,9,4)" fg:x="8272" fg:w="4"/><text x="57.7543%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.03%)</title><rect x="57.5043%" y="341" width="0.0278%" height="15" fill="rgb(242,42,7)" fg:x="8272" fg:w="4"/><text x="57.7543%" y="351.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="57.5113%" y="325" width="0.0209%" height="15" fill="rgb(242,184,45)" fg:x="8273" fg:w="3"/><text x="57.7613%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (3 samples, 0.02%)</title><rect x="57.5113%" y="309" width="0.0209%" height="15" fill="rgb(228,111,51)" fg:x="8273" fg:w="3"/><text x="57.7613%" y="319.50"></text></g><g><title>core::hash::Hasher::write_i64 (2 samples, 0.01%)</title><rect x="57.5182%" y="293" width="0.0139%" height="15" fill="rgb(236,147,17)" fg:x="8274" fg:w="2"/><text x="57.7682%" y="303.50"></text></g><g><title>core::hash::Hasher::write_u64 (2 samples, 0.01%)</title><rect x="57.5182%" y="277" width="0.0139%" height="15" fill="rgb(210,75,22)" fg:x="8274" fg:w="2"/><text x="57.7682%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="57.5182%" y="261" width="0.0139%" height="15" fill="rgb(217,159,45)" fg:x="8274" fg:w="2"/><text x="57.7682%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="57.5182%" y="245" width="0.0139%" height="15" fill="rgb(245,165,53)" fg:x="8274" fg:w="2"/><text x="57.7682%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="57.5182%" y="229" width="0.0139%" height="15" fill="rgb(251,190,50)" fg:x="8274" fg:w="2"/><text x="57.7682%" y="239.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.05%)</title><rect x="57.4904%" y="501" width="0.0487%" height="15" fill="rgb(208,203,29)" fg:x="8270" fg:w="7"/><text x="57.7404%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.05%)</title><rect x="57.4904%" y="485" width="0.0487%" height="15" fill="rgb(207,209,35)" fg:x="8270" fg:w="7"/><text x="57.7404%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7 samples, 0.05%)</title><rect x="57.4904%" y="469" width="0.0487%" height="15" fill="rgb(230,144,49)" fg:x="8270" fg:w="7"/><text x="57.7404%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (7 samples, 0.05%)</title><rect x="57.4904%" y="453" width="0.0487%" height="15" fill="rgb(229,31,6)" fg:x="8270" fg:w="7"/><text x="57.7404%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.05%)</title><rect x="57.4904%" y="437" width="0.0487%" height="15" fill="rgb(251,129,24)" fg:x="8270" fg:w="7"/><text x="57.7404%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.03%)</title><rect x="57.5043%" y="421" width="0.0348%" height="15" fill="rgb(235,105,15)" fg:x="8272" fg:w="5"/><text x="57.7543%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.03%)</title><rect x="57.5043%" y="405" width="0.0348%" height="15" fill="rgb(216,52,43)" fg:x="8272" fg:w="5"/><text x="57.7543%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.03%)</title><rect x="57.5043%" y="389" width="0.0348%" height="15" fill="rgb(238,144,41)" fg:x="8272" fg:w="5"/><text x="57.7543%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (5 samples, 0.03%)</title><rect x="57.5043%" y="373" width="0.0348%" height="15" fill="rgb(243,63,9)" fg:x="8272" fg:w="5"/><text x="57.7543%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (36 samples, 0.25%)</title><rect x="58.7209%" y="357" width="0.2503%" height="15" fill="rgb(246,208,1)" fg:x="8447" fg:w="36"/><text x="58.9709%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (69 samples, 0.48%)</title><rect x="58.6166%" y="373" width="0.4797%" height="15" fill="rgb(233,182,18)" fg:x="8432" fg:w="69"/><text x="58.8666%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (18 samples, 0.13%)</title><rect x="58.9712%" y="357" width="0.1251%" height="15" fill="rgb(242,224,8)" fg:x="8483" fg:w="18"/><text x="59.2212%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (117 samples, 0.81%)</title><rect x="59.3674%" y="357" width="0.8133%" height="15" fill="rgb(243,54,37)" fg:x="8540" fg:w="117"/><text x="59.6174%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (223 samples, 1.55%)</title><rect x="59.0963%" y="373" width="1.5502%" height="15" fill="rgb(233,192,12)" fg:x="8501" fg:w="223"/><text x="59.3463%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (67 samples, 0.47%)</title><rect x="60.1807%" y="357" width="0.4658%" height="15" fill="rgb(251,192,53)" fg:x="8657" fg:w="67"/><text x="60.4307%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (413 samples, 2.87%)</title><rect x="57.7824%" y="421" width="2.8710%" height="15" fill="rgb(246,141,26)" fg:x="8312" fg:w="413"/><text x="58.0324%" y="431.50">&lt;s..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (413 samples, 2.87%)</title><rect x="57.7824%" y="405" width="2.8710%" height="15" fill="rgb(239,195,19)" fg:x="8312" fg:w="413"/><text x="58.0324%" y="415.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (413 samples, 2.87%)</title><rect x="57.7824%" y="389" width="2.8710%" height="15" fill="rgb(241,16,39)" fg:x="8312" fg:w="413"/><text x="58.0324%" y="399.50">&lt;c..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (40 samples, 0.28%)</title><rect x="60.6535%" y="421" width="0.2781%" height="15" fill="rgb(223,13,53)" fg:x="8725" fg:w="40"/><text x="60.9035%" y="431.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (27 samples, 0.19%)</title><rect x="60.7438%" y="405" width="0.1877%" height="15" fill="rgb(214,227,0)" fg:x="8738" fg:w="27"/><text x="60.9938%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (21 samples, 0.15%)</title><rect x="60.7855%" y="389" width="0.1460%" height="15" fill="rgb(228,103,26)" fg:x="8744" fg:w="21"/><text x="61.0355%" y="399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (21 samples, 0.15%)</title><rect x="60.7855%" y="373" width="0.1460%" height="15" fill="rgb(254,177,53)" fg:x="8744" fg:w="21"/><text x="61.0355%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (126 samples, 0.88%)</title><rect x="63.3507%" y="293" width="0.8759%" height="15" fill="rgb(208,201,34)" fg:x="9113" fg:w="126"/><text x="63.6007%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (229 samples, 1.59%)</title><rect x="62.9962%" y="309" width="1.5919%" height="15" fill="rgb(212,39,5)" fg:x="9062" fg:w="229"/><text x="63.2462%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (52 samples, 0.36%)</title><rect x="64.2266%" y="293" width="0.3615%" height="15" fill="rgb(246,117,3)" fg:x="9239" fg:w="52"/><text x="64.4766%" y="303.50"></text></g><g><title>core::hash::sip::u8to64_le (34 samples, 0.24%)</title><rect x="64.5951%" y="309" width="0.2364%" height="15" fill="rgb(244,118,39)" fg:x="9292" fg:w="34"/><text x="64.8451%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (1,022 samples, 7.10%)</title><rect x="57.7477%" y="437" width="7.1046%" height="15" fill="rgb(241,64,10)" fg:x="8307" fg:w="1022"/><text x="57.9977%" y="447.50">hashbrown:..</text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::hash::Hash&gt;::hash (564 samples, 3.92%)</title><rect x="60.9315%" y="421" width="3.9208%" height="15" fill="rgb(229,39,44)" fg:x="8765" fg:w="564"/><text x="61.1815%" y="431.50">&lt;y20..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (538 samples, 3.74%)</title><rect x="61.1123%" y="405" width="3.7400%" height="15" fill="rgb(230,226,3)" fg:x="8791" fg:w="538"/><text x="61.3623%" y="415.50">core..</text></g><g><title>core::hash::Hasher::write_i64 (522 samples, 3.63%)</title><rect x="61.2235%" y="389" width="3.6288%" height="15" fill="rgb(222,13,42)" fg:x="8807" fg:w="522"/><text x="61.4735%" y="399.50">core..</text></g><g><title>core::hash::Hasher::write_u64 (522 samples, 3.63%)</title><rect x="61.2235%" y="373" width="3.6288%" height="15" fill="rgb(247,180,54)" fg:x="8807" fg:w="522"/><text x="61.4735%" y="383.50">core..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (513 samples, 3.57%)</title><rect x="61.2861%" y="357" width="3.5662%" height="15" fill="rgb(205,96,16)" fg:x="8816" fg:w="513"/><text x="61.5361%" y="367.50">&lt;std..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (513 samples, 3.57%)</title><rect x="61.2861%" y="341" width="3.5662%" height="15" fill="rgb(205,100,21)" fg:x="8816" fg:w="513"/><text x="61.5361%" y="351.50">&lt;cor..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (513 samples, 3.57%)</title><rect x="61.2861%" y="325" width="3.5662%" height="15" fill="rgb(248,51,4)" fg:x="8816" fg:w="513"/><text x="61.5361%" y="335.50">&lt;cor..</text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="64.8314%" y="309" width="0.0209%" height="15" fill="rgb(217,197,30)" fg:x="9326" fg:w="3"/><text x="65.0814%" y="319.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (28 samples, 0.19%)</title><rect x="65.4223%" y="357" width="0.1946%" height="15" fill="rgb(240,179,40)" fg:x="9411" fg:w="28"/><text x="65.6723%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.34%)</title><rect x="65.2833%" y="373" width="0.3406%" height="15" fill="rgb(212,185,35)" fg:x="9391" fg:w="49"/><text x="65.5333%" y="383.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (4 samples, 0.03%)</title><rect x="65.6309%" y="373" width="0.0278%" height="15" fill="rgb(251,222,31)" fg:x="9441" fg:w="4"/><text x="65.8809%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.51%)</title><rect x="65.1512%" y="405" width="0.5144%" height="15" fill="rgb(208,140,36)" fg:x="9372" fg:w="74"/><text x="65.4012%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.51%)</title><rect x="65.1512%" y="389" width="0.5144%" height="15" fill="rgb(220,148,1)" fg:x="9372" fg:w="74"/><text x="65.4012%" y="399.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (36 samples, 0.25%)</title><rect x="65.6656%" y="405" width="0.2503%" height="15" fill="rgb(254,4,28)" fg:x="9446" fg:w="36"/><text x="65.9156%" y="415.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::cmp::PartialEq&gt;::eq (36 samples, 0.25%)</title><rect x="65.6656%" y="389" width="0.2503%" height="15" fill="rgb(222,185,44)" fg:x="9446" fg:w="36"/><text x="65.9156%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (10 samples, 0.07%)</title><rect x="65.9159%" y="357" width="0.0695%" height="15" fill="rgb(215,74,39)" fg:x="9482" fg:w="10"/><text x="66.1659%" y="367.50"></text></g><g><title>hashbrown::raw::h2 (18 samples, 0.13%)</title><rect x="65.9854%" y="357" width="0.1251%" height="15" fill="rgb(247,86,4)" fg:x="9492" fg:w="18"/><text x="66.2354%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.02%)</title><rect x="66.1105%" y="357" width="0.0209%" height="15" fill="rgb(231,105,32)" fg:x="9510" fg:w="3"/><text x="66.3605%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.02%)</title><rect x="66.1105%" y="341" width="0.0209%" height="15" fill="rgb(222,65,35)" fg:x="9510" fg:w="3"/><text x="66.3605%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="66.1105%" y="325" width="0.0209%" height="15" fill="rgb(218,145,35)" fg:x="9510" fg:w="3"/><text x="66.3605%" y="335.50"></text></g><g><title>y2021::d19::scanner::Scanner::has_match (1,436 samples, 9.98%)</title><rect x="56.9135%" y="709" width="9.9826%" height="15" fill="rgb(208,7,15)" fg:x="8187" fg:w="1436"/><text x="57.1635%" y="719.50">y2021::d19::sc..</text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors (1,435 samples, 9.98%)</title><rect x="56.9204%" y="693" width="9.9757%" height="15" fill="rgb(209,83,13)" fg:x="8188" fg:w="1435"/><text x="57.1704%" y="703.50">y2021::d19::sc..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,435 samples, 9.98%)</title><rect x="56.9204%" y="677" width="9.9757%" height="15" fill="rgb(218,3,10)" fg:x="8188" fg:w="1435"/><text x="57.1704%" y="687.50">core::iter::tr..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,435 samples, 9.98%)</title><rect x="56.9204%" y="661" width="9.9757%" height="15" fill="rgb(211,219,4)" fg:x="8188" fg:w="1435"/><text x="57.1704%" y="671.50">&lt;std::collecti..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,435 samples, 9.98%)</title><rect x="56.9204%" y="645" width="9.9757%" height="15" fill="rgb(228,194,12)" fg:x="8188" fg:w="1435"/><text x="57.1704%" y="655.50">&lt;std::collecti..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,435 samples, 9.98%)</title><rect x="56.9204%" y="629" width="9.9757%" height="15" fill="rgb(210,175,7)" fg:x="8188" fg:w="1435"/><text x="57.1704%" y="639.50">&lt;hashbrown::se..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,435 samples, 9.98%)</title><rect x="56.9204%" y="613" width="9.9757%" height="15" fill="rgb(243,132,6)" fg:x="8188" fg:w="1435"/><text x="57.1704%" y="623.50">&lt;hashbrown::ma..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,435 samples, 9.98%)</title><rect x="56.9204%" y="597" width="9.9757%" height="15" fill="rgb(207,72,18)" fg:x="8188" fg:w="1435"/><text x="57.1704%" y="607.50">core::iter::tr..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,435 samples, 9.98%)</title><rect x="56.9204%" y="581" width="9.9757%" height="15" fill="rgb(236,1,18)" fg:x="8188" fg:w="1435"/><text x="57.1704%" y="591.50">&lt;core::iter::a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,435 samples, 9.98%)</title><rect x="56.9204%" y="565" width="9.9757%" height="15" fill="rgb(227,0,18)" fg:x="8188" fg:w="1435"/><text x="57.1704%" y="575.50">&lt;core::iter::a..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,435 samples, 9.98%)</title><rect x="56.9204%" y="549" width="9.9757%" height="15" fill="rgb(247,37,5)" fg:x="8188" fg:w="1435"/><text x="57.1704%" y="559.50">&lt;core::iter::a..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,435 samples, 9.98%)</title><rect x="56.9204%" y="533" width="9.9757%" height="15" fill="rgb(237,179,24)" fg:x="8188" fg:w="1435"/><text x="57.1704%" y="543.50">core::iter::tr..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1,357 samples, 9.43%)</title><rect x="57.4626%" y="517" width="9.4334%" height="15" fill="rgb(226,53,20)" fg:x="8266" fg:w="1357"/><text x="57.7126%" y="527.50">core::iter::a..</text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors::{{closure}} (1,346 samples, 9.36%)</title><rect x="57.5391%" y="501" width="9.3570%" height="15" fill="rgb(247,75,7)" fg:x="8277" fg:w="1346"/><text x="57.7891%" y="511.50">y2021::d19::s..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1,346 samples, 9.36%)</title><rect x="57.5391%" y="485" width="9.3570%" height="15" fill="rgb(233,96,12)" fg:x="8277" fg:w="1346"/><text x="57.7891%" y="495.50">std::collecti..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,346 samples, 9.36%)</title><rect x="57.5391%" y="469" width="9.3570%" height="15" fill="rgb(224,125,0)" fg:x="8277" fg:w="1346"/><text x="57.7891%" y="479.50">hashbrown::ma..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,316 samples, 9.15%)</title><rect x="57.7477%" y="453" width="9.1484%" height="15" fill="rgb(224,92,25)" fg:x="8307" fg:w="1316"/><text x="57.9977%" y="463.50">hashbrown::ma..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (294 samples, 2.04%)</title><rect x="64.8523%" y="437" width="2.0438%" height="15" fill="rgb(224,42,24)" fg:x="9329" fg:w="294"/><text x="65.1023%" y="447.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (294 samples, 2.04%)</title><rect x="64.8523%" y="421" width="2.0438%" height="15" fill="rgb(234,132,49)" fg:x="9329" fg:w="294"/><text x="65.1023%" y="431.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (141 samples, 0.98%)</title><rect x="65.9159%" y="405" width="0.9802%" height="15" fill="rgb(248,100,35)" fg:x="9482" fg:w="141"/><text x="66.1659%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (141 samples, 0.98%)</title><rect x="65.9159%" y="389" width="0.9802%" height="15" fill="rgb(239,94,40)" fg:x="9482" fg:w="141"/><text x="66.1659%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (141 samples, 0.98%)</title><rect x="65.9159%" y="373" width="0.9802%" height="15" fill="rgb(235,139,28)" fg:x="9482" fg:w="141"/><text x="66.1659%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (110 samples, 0.76%)</title><rect x="66.1314%" y="357" width="0.7647%" height="15" fill="rgb(217,144,7)" fg:x="9513" fg:w="110"/><text x="66.3814%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (110 samples, 0.76%)</title><rect x="66.1314%" y="341" width="0.7647%" height="15" fill="rgb(227,55,4)" fg:x="9513" fg:w="110"/><text x="66.3814%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (110 samples, 0.76%)</title><rect x="66.1314%" y="325" width="0.7647%" height="15" fill="rgb(252,82,54)" fg:x="9513" fg:w="110"/><text x="66.3814%" y="335.50"></text></g><g><title>core::core_arch::simd::i8x16::new (110 samples, 0.76%)</title><rect x="66.1314%" y="309" width="0.7647%" height="15" fill="rgb(245,172,4)" fg:x="9513" fg:w="110"/><text x="66.3814%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.03%)</title><rect x="67.0490%" y="677" width="0.0348%" height="15" fill="rgb(207,26,27)" fg:x="9645" fg:w="5"/><text x="67.2990%" y="687.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.03%)</title><rect x="67.0490%" y="661" width="0.0348%" height="15" fill="rgb(252,98,18)" fg:x="9645" fg:w="5"/><text x="67.2990%" y="671.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.03%)</title><rect x="67.0490%" y="645" width="0.0348%" height="15" fill="rgb(244,8,26)" fg:x="9645" fg:w="5"/><text x="67.2990%" y="655.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::ops::arith::Sub&gt;::sub (7 samples, 0.05%)</title><rect x="67.0838%" y="677" width="0.0487%" height="15" fill="rgb(237,173,45)" fg:x="9650" fg:w="7"/><text x="67.3338%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (14 samples, 0.10%)</title><rect x="67.1324%" y="677" width="0.0973%" height="15" fill="rgb(208,213,49)" fg:x="9657" fg:w="14"/><text x="67.3824%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (14 samples, 0.10%)</title><rect x="67.1324%" y="661" width="0.0973%" height="15" fill="rgb(212,122,37)" fg:x="9657" fg:w="14"/><text x="67.3824%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.02%)</title><rect x="67.2089%" y="645" width="0.0209%" height="15" fill="rgb(213,80,17)" fg:x="9668" fg:w="3"/><text x="67.4589%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (43 samples, 0.30%)</title><rect x="68.4393%" y="565" width="0.2989%" height="15" fill="rgb(206,210,43)" fg:x="9845" fg:w="43"/><text x="68.6893%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (63 samples, 0.44%)</title><rect x="68.3837%" y="581" width="0.4380%" height="15" fill="rgb(229,214,3)" fg:x="9837" fg:w="63"/><text x="68.6337%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (12 samples, 0.08%)</title><rect x="68.7383%" y="565" width="0.0834%" height="15" fill="rgb(235,213,29)" fg:x="9888" fg:w="12"/><text x="68.9883%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (105 samples, 0.73%)</title><rect x="69.1276%" y="565" width="0.7299%" height="15" fill="rgb(248,135,26)" fg:x="9944" fg:w="105"/><text x="69.3776%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (351 samples, 2.44%)</title><rect x="67.6816%" y="629" width="2.4400%" height="15" fill="rgb(242,188,12)" fg:x="9736" fg:w="351"/><text x="67.9316%" y="639.50">&lt;s..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (351 samples, 2.44%)</title><rect x="67.6816%" y="613" width="2.4400%" height="15" fill="rgb(245,38,12)" fg:x="9736" fg:w="351"/><text x="67.9316%" y="623.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (351 samples, 2.44%)</title><rect x="67.6816%" y="597" width="2.4400%" height="15" fill="rgb(218,42,13)" fg:x="9736" fg:w="351"/><text x="67.9316%" y="607.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (187 samples, 1.30%)</title><rect x="68.8217%" y="581" width="1.3000%" height="15" fill="rgb(238,132,49)" fg:x="9900" fg:w="187"/><text x="69.0717%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (38 samples, 0.26%)</title><rect x="69.8575%" y="565" width="0.2642%" height="15" fill="rgb(209,196,19)" fg:x="10049" fg:w="38"/><text x="70.1075%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (32 samples, 0.22%)</title><rect x="70.1217%" y="629" width="0.2225%" height="15" fill="rgb(244,131,22)" fg:x="10087" fg:w="32"/><text x="70.3717%" y="639.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (24 samples, 0.17%)</title><rect x="70.1773%" y="613" width="0.1668%" height="15" fill="rgb(223,18,34)" fg:x="10095" fg:w="24"/><text x="70.4273%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (20 samples, 0.14%)</title><rect x="70.2051%" y="597" width="0.1390%" height="15" fill="rgb(252,124,54)" fg:x="10099" fg:w="20"/><text x="70.4551%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (20 samples, 0.14%)</title><rect x="70.2051%" y="581" width="0.1390%" height="15" fill="rgb(229,106,42)" fg:x="10099" fg:w="20"/><text x="70.4551%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (98 samples, 0.68%)</title><rect x="72.4644%" y="501" width="0.6813%" height="15" fill="rgb(221,129,1)" fg:x="10424" fg:w="98"/><text x="72.7144%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (197 samples, 1.37%)</title><rect x="72.0681%" y="517" width="1.3695%" height="15" fill="rgb(229,74,15)" fg:x="10367" fg:w="197"/><text x="72.3181%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (42 samples, 0.29%)</title><rect x="73.1456%" y="501" width="0.2920%" height="15" fill="rgb(210,206,50)" fg:x="10522" fg:w="42"/><text x="73.3956%" y="511.50"></text></g><g><title>hashbrown::map::make_insert_hash (858 samples, 5.96%)</title><rect x="67.6816%" y="645" width="5.9645%" height="15" fill="rgb(251,114,31)" fg:x="9736" fg:w="858"/><text x="67.9316%" y="655.50">hashbrow..</text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::hash::Hash&gt;::hash (475 samples, 3.30%)</title><rect x="70.3441%" y="629" width="3.3021%" height="15" fill="rgb(215,225,28)" fg:x="10119" fg:w="475"/><text x="70.5941%" y="639.50">&lt;y2..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (453 samples, 3.15%)</title><rect x="70.4970%" y="613" width="3.1491%" height="15" fill="rgb(237,109,14)" fg:x="10141" fg:w="453"/><text x="70.7470%" y="623.50">cor..</text></g><g><title>core::hash::Hasher::write_i64 (434 samples, 3.02%)</title><rect x="70.6291%" y="597" width="3.0170%" height="15" fill="rgb(230,13,37)" fg:x="10160" fg:w="434"/><text x="70.8791%" y="607.50">cor..</text></g><g><title>core::hash::Hasher::write_u64 (434 samples, 3.02%)</title><rect x="70.6291%" y="581" width="3.0170%" height="15" fill="rgb(231,40,28)" fg:x="10160" fg:w="434"/><text x="70.8791%" y="591.50">cor..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (433 samples, 3.01%)</title><rect x="70.6361%" y="565" width="3.0101%" height="15" fill="rgb(231,202,18)" fg:x="10161" fg:w="433"/><text x="70.8861%" y="575.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (433 samples, 3.01%)</title><rect x="70.6361%" y="549" width="3.0101%" height="15" fill="rgb(225,33,18)" fg:x="10161" fg:w="433"/><text x="70.8861%" y="559.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (433 samples, 3.01%)</title><rect x="70.6361%" y="533" width="3.0101%" height="15" fill="rgb(223,64,47)" fg:x="10161" fg:w="433"/><text x="70.8861%" y="543.50">&lt;co..</text></g><g><title>core::hash::sip::u8to64_le (29 samples, 0.20%)</title><rect x="73.4446%" y="517" width="0.2016%" height="15" fill="rgb(234,114,13)" fg:x="10565" fg:w="29"/><text x="73.6946%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.17%)</title><rect x="74.1606%" y="581" width="0.1738%" height="15" fill="rgb(248,56,40)" fg:x="10668" fg:w="25"/><text x="74.4106%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.32%)</title><rect x="74.0216%" y="613" width="0.3198%" height="15" fill="rgb(221,194,21)" fg:x="10648" fg:w="46"/><text x="74.2716%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.32%)</title><rect x="74.0216%" y="597" width="0.3198%" height="15" fill="rgb(242,108,46)" fg:x="10648" fg:w="46"/><text x="74.2716%" y="607.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.04%)</title><rect x="74.3413%" y="613" width="0.0417%" height="15" fill="rgb(220,106,10)" fg:x="10694" fg:w="6"/><text x="74.5913%" y="623.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::cmp::PartialEq&gt;::eq (6 samples, 0.04%)</title><rect x="74.3413%" y="597" width="0.0417%" height="15" fill="rgb(211,88,4)" fg:x="10694" fg:w="6"/><text x="74.5913%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (12 samples, 0.08%)</title><rect x="74.3830%" y="565" width="0.0834%" height="15" fill="rgb(214,95,34)" fg:x="10700" fg:w="12"/><text x="74.6330%" y="575.50"></text></g><g><title>hashbrown::raw::h2 (26 samples, 0.18%)</title><rect x="74.4665%" y="565" width="0.1807%" height="15" fill="rgb(250,160,33)" fg:x="10712" fg:w="26"/><text x="74.7165%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.01%)</title><rect x="74.6472%" y="565" width="0.0139%" height="15" fill="rgb(225,29,10)" fg:x="10738" fg:w="2"/><text x="74.8972%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.01%)</title><rect x="74.6472%" y="549" width="0.0139%" height="15" fill="rgb(224,28,30)" fg:x="10738" fg:w="2"/><text x="74.8972%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="74.6472%" y="533" width="0.0139%" height="15" fill="rgb(231,77,4)" fg:x="10738" fg:w="2"/><text x="74.8972%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (225 samples, 1.56%)</title><rect x="73.6462%" y="645" width="1.5641%" height="15" fill="rgb(209,63,21)" fg:x="10594" fg:w="225"/><text x="73.8962%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (225 samples, 1.56%)</title><rect x="73.6462%" y="629" width="1.5641%" height="15" fill="rgb(226,22,11)" fg:x="10594" fg:w="225"/><text x="73.8962%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (119 samples, 0.83%)</title><rect x="74.3830%" y="613" width="0.8273%" height="15" fill="rgb(216,82,30)" fg:x="10700" fg:w="119"/><text x="74.6330%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (119 samples, 0.83%)</title><rect x="74.3830%" y="597" width="0.8273%" height="15" fill="rgb(246,227,38)" fg:x="10700" fg:w="119"/><text x="74.6330%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (119 samples, 0.83%)</title><rect x="74.3830%" y="581" width="0.8273%" height="15" fill="rgb(251,203,53)" fg:x="10700" fg:w="119"/><text x="74.6330%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (79 samples, 0.55%)</title><rect x="74.6611%" y="565" width="0.5492%" height="15" fill="rgb(254,101,1)" fg:x="10740" fg:w="79"/><text x="74.9111%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (79 samples, 0.55%)</title><rect x="74.6611%" y="549" width="0.5492%" height="15" fill="rgb(241,180,5)" fg:x="10740" fg:w="79"/><text x="74.9111%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (79 samples, 0.55%)</title><rect x="74.6611%" y="533" width="0.5492%" height="15" fill="rgb(218,168,4)" fg:x="10740" fg:w="79"/><text x="74.9111%" y="543.50"></text></g><g><title>core::core_arch::simd::i8x16::new (79 samples, 0.55%)</title><rect x="74.6611%" y="517" width="0.5492%" height="15" fill="rgb(224,223,32)" fg:x="10740" fg:w="79"/><text x="74.9111%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (130 samples, 0.90%)</title><rect x="75.3980%" y="629" width="0.9037%" height="15" fill="rgb(236,106,22)" fg:x="10846" fg:w="130"/><text x="75.6480%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (130 samples, 0.90%)</title><rect x="75.3980%" y="613" width="0.9037%" height="15" fill="rgb(206,121,5)" fg:x="10846" fg:w="130"/><text x="75.6480%" y="623.50"></text></g><g><title>core::ptr::write (130 samples, 0.90%)</title><rect x="75.3980%" y="597" width="0.9037%" height="15" fill="rgb(233,87,28)" fg:x="10846" fg:w="130"/><text x="75.6480%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (12 samples, 0.08%)</title><rect x="76.3017%" y="629" width="0.0834%" height="15" fill="rgb(236,137,17)" fg:x="10976" fg:w="12"/><text x="76.5517%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (12 samples, 0.08%)</title><rect x="76.3017%" y="613" width="0.0834%" height="15" fill="rgb(209,183,38)" fg:x="10976" fg:w="12"/><text x="76.5517%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (12 samples, 0.08%)</title><rect x="76.3017%" y="597" width="0.0834%" height="15" fill="rgb(206,162,44)" fg:x="10976" fg:w="12"/><text x="76.5517%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (17 samples, 0.12%)</title><rect x="76.5242%" y="613" width="0.1182%" height="15" fill="rgb(237,70,39)" fg:x="11008" fg:w="17"/><text x="76.7742%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (12 samples, 0.08%)</title><rect x="76.6423%" y="613" width="0.0834%" height="15" fill="rgb(212,176,5)" fg:x="11025" fg:w="12"/><text x="76.8923%" y="623.50"></text></g><g><title>hashbrown::raw::is_full (75 samples, 0.52%)</title><rect x="76.7258%" y="613" width="0.5214%" height="15" fill="rgb(232,95,16)" fg:x="11037" fg:w="75"/><text x="76.9758%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (125 samples, 0.87%)</title><rect x="76.3851%" y="629" width="0.8690%" height="15" fill="rgb(219,115,35)" fg:x="10988" fg:w="125"/><text x="76.6351%" y="639.50"></text></g><g><title>y2021::d19::scanner::Scanner::calculate_vectors (1,524 samples, 10.59%)</title><rect x="66.8961%" y="693" width="10.5944%" height="15" fill="rgb(251,67,27)" fg:x="9623" fg:w="1524"/><text x="67.1461%" y="703.50">y2021::d19::sca..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1,476 samples, 10.26%)</title><rect x="67.2298%" y="677" width="10.2607%" height="15" fill="rgb(222,95,40)" fg:x="9671" fg:w="1476"/><text x="67.4798%" y="687.50">std::collection..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,461 samples, 10.16%)</title><rect x="67.3340%" y="661" width="10.1564%" height="15" fill="rgb(250,35,16)" fg:x="9686" fg:w="1461"/><text x="67.5840%" y="671.50">hashbrown::map:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (328 samples, 2.28%)</title><rect x="75.2103%" y="645" width="2.2802%" height="15" fill="rgb(224,86,44)" fg:x="10819" fg:w="328"/><text x="75.4603%" y="655.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (34 samples, 0.24%)</title><rect x="77.2541%" y="629" width="0.2364%" height="15" fill="rgb(237,53,53)" fg:x="11113" fg:w="34"/><text x="77.5041%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (5 samples, 0.03%)</title><rect x="77.4557%" y="613" width="0.0348%" height="15" fill="rgb(208,171,33)" fg:x="11142" fg:w="5"/><text x="77.7057%" y="623.50"></text></g><g><title>hashbrown::raw::h2 (5 samples, 0.03%)</title><rect x="77.4557%" y="597" width="0.0348%" height="15" fill="rgb(222,64,27)" fg:x="11142" fg:w="5"/><text x="77.7057%" y="607.50"></text></g><g><title>y2021::d19::main::attempt_match (2,963 samples, 20.60%)</title><rect x="56.9135%" y="725" width="20.5978%" height="15" fill="rgb(221,121,35)" fg:x="8187" fg:w="2963"/><text x="57.1635%" y="735.50">y2021::d19::main::attempt_match</text></g><g><title>y2021::d19::scanner::Scanner::rotate (1,527 samples, 10.62%)</title><rect x="66.8961%" y="709" width="10.6152%" height="15" fill="rgb(228,137,42)" fg:x="9623" fg:w="1527"/><text x="67.1461%" y="719.50">y2021::d19::sca..</text></g><g><title>y2021::d19::scanner::Scanner::rotate_beacons (3 samples, 0.02%)</title><rect x="77.4904%" y="693" width="0.0209%" height="15" fill="rgb(227,54,21)" fg:x="11147" fg:w="3"/><text x="77.7404%" y="703.50"></text></g><g><title>y2021::d19::beacon::Beacon::rotate (2 samples, 0.01%)</title><rect x="77.4974%" y="677" width="0.0139%" height="15" fill="rgb(240,168,33)" fg:x="11148" fg:w="2"/><text x="77.7474%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="77.5182%" y="437" width="0.0209%" height="15" fill="rgb(243,159,6)" fg:x="11151" fg:w="3"/><text x="77.7682%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.02%)</title><rect x="77.5182%" y="421" width="0.0209%" height="15" fill="rgb(205,211,41)" fg:x="11151" fg:w="3"/><text x="77.7682%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.02%)</title><rect x="77.5182%" y="405" width="0.0209%" height="15" fill="rgb(253,30,1)" fg:x="11151" fg:w="3"/><text x="77.7682%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.01%)</title><rect x="77.5252%" y="389" width="0.0139%" height="15" fill="rgb(226,80,18)" fg:x="11152" fg:w="2"/><text x="77.7752%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.01%)</title><rect x="77.5252%" y="373" width="0.0139%" height="15" fill="rgb(253,156,46)" fg:x="11152" fg:w="2"/><text x="77.7752%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.01%)</title><rect x="77.5252%" y="357" width="0.0139%" height="15" fill="rgb(248,87,27)" fg:x="11152" fg:w="2"/><text x="77.7752%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.03%)</title><rect x="77.5113%" y="533" width="0.0348%" height="15" fill="rgb(227,122,2)" fg:x="11150" fg:w="5"/><text x="77.7613%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.03%)</title><rect x="77.5113%" y="517" width="0.0348%" height="15" fill="rgb(229,94,39)" fg:x="11150" fg:w="5"/><text x="77.7613%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.03%)</title><rect x="77.5113%" y="501" width="0.0348%" height="15" fill="rgb(225,173,31)" fg:x="11150" fg:w="5"/><text x="77.7613%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (5 samples, 0.03%)</title><rect x="77.5113%" y="485" width="0.0348%" height="15" fill="rgb(239,176,30)" fg:x="11150" fg:w="5"/><text x="77.7613%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.03%)</title><rect x="77.5113%" y="469" width="0.0348%" height="15" fill="rgb(212,104,21)" fg:x="11150" fg:w="5"/><text x="77.7613%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.03%)</title><rect x="77.5182%" y="453" width="0.0278%" height="15" fill="rgb(240,209,40)" fg:x="11151" fg:w="4"/><text x="77.7682%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="77.5461%" y="453" width="0.0139%" height="15" fill="rgb(234,195,5)" fg:x="11155" fg:w="2"/><text x="77.7961%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="77.5461%" y="437" width="0.0139%" height="15" fill="rgb(238,213,1)" fg:x="11155" fg:w="2"/><text x="77.7961%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="77.5461%" y="421" width="0.0139%" height="15" fill="rgb(235,182,54)" fg:x="11155" fg:w="2"/><text x="77.7961%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.03%)</title><rect x="77.5461%" y="469" width="0.0278%" height="15" fill="rgb(229,50,46)" fg:x="11155" fg:w="4"/><text x="77.7961%" y="479.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="77.5600%" y="453" width="0.0139%" height="15" fill="rgb(219,145,13)" fg:x="11157" fg:w="2"/><text x="77.8100%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (2 samples, 0.01%)</title><rect x="77.5600%" y="437" width="0.0139%" height="15" fill="rgb(220,226,10)" fg:x="11157" fg:w="2"/><text x="77.8100%" y="447.50"></text></g><g><title>core::hash::Hasher::write_i64 (2 samples, 0.01%)</title><rect x="77.5600%" y="421" width="0.0139%" height="15" fill="rgb(248,47,30)" fg:x="11157" fg:w="2"/><text x="77.8100%" y="431.50"></text></g><g><title>core::hash::Hasher::write_u64 (2 samples, 0.01%)</title><rect x="77.5600%" y="405" width="0.0139%" height="15" fill="rgb(231,209,44)" fg:x="11157" fg:w="2"/><text x="77.8100%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="77.5600%" y="389" width="0.0139%" height="15" fill="rgb(209,80,30)" fg:x="11157" fg:w="2"/><text x="77.8100%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="77.5600%" y="373" width="0.0139%" height="15" fill="rgb(232,9,14)" fg:x="11157" fg:w="2"/><text x="77.8100%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="77.5600%" y="357" width="0.0139%" height="15" fill="rgb(243,91,43)" fg:x="11157" fg:w="2"/><text x="77.8100%" y="367.50"></text></g><g><title>y2021::d19::main::p01 (2,996 samples, 20.83%)</title><rect x="56.7605%" y="757" width="20.8273%" height="15" fill="rgb(231,90,52)" fg:x="8165" fg:w="2996"/><text x="57.0105%" y="767.50">y2021::d19::main::p01</text></g><g><title>y2021::d19::main::build_chart (2,974 samples, 20.67%)</title><rect x="56.9135%" y="741" width="20.6743%" height="15" fill="rgb(253,192,44)" fg:x="8187" fg:w="2974"/><text x="57.1635%" y="751.50">y2021::d19::main::build_chart</text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors (11 samples, 0.08%)</title><rect x="77.5113%" y="725" width="0.0765%" height="15" fill="rgb(241,66,31)" fg:x="11150" fg:w="11"/><text x="77.7613%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.08%)</title><rect x="77.5113%" y="709" width="0.0765%" height="15" fill="rgb(235,81,37)" fg:x="11150" fg:w="11"/><text x="77.7613%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.08%)</title><rect x="77.5113%" y="693" width="0.0765%" height="15" fill="rgb(223,221,9)" fg:x="11150" fg:w="11"/><text x="77.7613%" y="703.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (11 samples, 0.08%)</title><rect x="77.5113%" y="677" width="0.0765%" height="15" fill="rgb(242,180,7)" fg:x="11150" fg:w="11"/><text x="77.7613%" y="687.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (11 samples, 0.08%)</title><rect x="77.5113%" y="661" width="0.0765%" height="15" fill="rgb(243,78,19)" fg:x="11150" fg:w="11"/><text x="77.7613%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (11 samples, 0.08%)</title><rect x="77.5113%" y="645" width="0.0765%" height="15" fill="rgb(233,23,17)" fg:x="11150" fg:w="11"/><text x="77.7613%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.08%)</title><rect x="77.5113%" y="629" width="0.0765%" height="15" fill="rgb(252,122,45)" fg:x="11150" fg:w="11"/><text x="77.7613%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.08%)</title><rect x="77.5113%" y="613" width="0.0765%" height="15" fill="rgb(247,108,20)" fg:x="11150" fg:w="11"/><text x="77.7613%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.08%)</title><rect x="77.5113%" y="597" width="0.0765%" height="15" fill="rgb(235,84,21)" fg:x="11150" fg:w="11"/><text x="77.7613%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.08%)</title><rect x="77.5113%" y="581" width="0.0765%" height="15" fill="rgb(247,129,10)" fg:x="11150" fg:w="11"/><text x="77.7613%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.08%)</title><rect x="77.5113%" y="565" width="0.0765%" height="15" fill="rgb(208,173,14)" fg:x="11150" fg:w="11"/><text x="77.7613%" y="575.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (11 samples, 0.08%)</title><rect x="77.5113%" y="549" width="0.0765%" height="15" fill="rgb(236,31,38)" fg:x="11150" fg:w="11"/><text x="77.7613%" y="559.50"></text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors::{{closure}} (6 samples, 0.04%)</title><rect x="77.5461%" y="533" width="0.0417%" height="15" fill="rgb(232,65,17)" fg:x="11155" fg:w="6"/><text x="77.7961%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (6 samples, 0.04%)</title><rect x="77.5461%" y="517" width="0.0417%" height="15" fill="rgb(224,45,49)" fg:x="11155" fg:w="6"/><text x="77.7961%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (6 samples, 0.04%)</title><rect x="77.5461%" y="501" width="0.0417%" height="15" fill="rgb(225,2,53)" fg:x="11155" fg:w="6"/><text x="77.7961%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.04%)</title><rect x="77.5461%" y="485" width="0.0417%" height="15" fill="rgb(248,210,53)" fg:x="11155" fg:w="6"/><text x="77.7961%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.01%)</title><rect x="77.5739%" y="469" width="0.0139%" height="15" fill="rgb(211,1,30)" fg:x="11159" fg:w="2"/><text x="77.8239%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="77.5739%" y="453" width="0.0139%" height="15" fill="rgb(224,96,15)" fg:x="11159" fg:w="2"/><text x="77.8239%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="77.5878%" y="549" width="0.0139%" height="15" fill="rgb(252,45,11)" fg:x="11161" fg:w="2"/><text x="77.8378%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="77.5878%" y="533" width="0.0139%" height="15" fill="rgb(220,125,38)" fg:x="11161" fg:w="2"/><text x="77.8378%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="77.5878%" y="517" width="0.0139%" height="15" fill="rgb(243,161,33)" fg:x="11161" fg:w="2"/><text x="77.8378%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="77.5878%" y="501" width="0.0139%" height="15" fill="rgb(248,197,34)" fg:x="11161" fg:w="2"/><text x="77.8378%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="77.5878%" y="485" width="0.0139%" height="15" fill="rgb(228,165,23)" fg:x="11161" fg:w="2"/><text x="77.8378%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.01%)</title><rect x="77.5878%" y="469" width="0.0139%" height="15" fill="rgb(236,94,38)" fg:x="11161" fg:w="2"/><text x="77.8378%" y="479.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.02%)</title><rect x="77.6156%" y="485" width="0.0209%" height="15" fill="rgb(220,13,23)" fg:x="11165" fg:w="3"/><text x="77.8656%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="77.6156%" y="469" width="0.0209%" height="15" fill="rgb(234,26,39)" fg:x="11165" fg:w="3"/><text x="77.8656%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="77.6156%" y="453" width="0.0209%" height="15" fill="rgb(205,117,44)" fg:x="11165" fg:w="3"/><text x="77.8656%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="77.6156%" y="437" width="0.0209%" height="15" fill="rgb(250,42,2)" fg:x="11165" fg:w="3"/><text x="77.8656%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="77.6434%" y="389" width="0.0139%" height="15" fill="rgb(223,83,14)" fg:x="11169" fg:w="2"/><text x="77.8934%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="77.6434%" y="373" width="0.0139%" height="15" fill="rgb(241,147,50)" fg:x="11169" fg:w="2"/><text x="77.8934%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.01%)</title><rect x="77.6434%" y="357" width="0.0139%" height="15" fill="rgb(218,90,6)" fg:x="11169" fg:w="2"/><text x="77.8934%" y="367.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (6 samples, 0.04%)</title><rect x="77.6434%" y="421" width="0.0417%" height="15" fill="rgb(210,191,5)" fg:x="11169" fg:w="6"/><text x="77.8934%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.04%)</title><rect x="77.6434%" y="405" width="0.0417%" height="15" fill="rgb(225,139,19)" fg:x="11169" fg:w="6"/><text x="77.8934%" y="415.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="77.6642%" y="389" width="0.0209%" height="15" fill="rgb(210,1,33)" fg:x="11172" fg:w="3"/><text x="77.9142%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (3 samples, 0.02%)</title><rect x="77.6642%" y="373" width="0.0209%" height="15" fill="rgb(213,50,3)" fg:x="11172" fg:w="3"/><text x="77.9142%" y="383.50"></text></g><g><title>core::hash::Hasher::write_i64 (3 samples, 0.02%)</title><rect x="77.6642%" y="357" width="0.0209%" height="15" fill="rgb(234,227,4)" fg:x="11172" fg:w="3"/><text x="77.9142%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u64 (3 samples, 0.02%)</title><rect x="77.6642%" y="341" width="0.0209%" height="15" fill="rgb(246,63,5)" fg:x="11172" fg:w="3"/><text x="77.9142%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="77.6642%" y="325" width="0.0209%" height="15" fill="rgb(245,136,27)" fg:x="11172" fg:w="3"/><text x="77.9142%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="77.6642%" y="309" width="0.0209%" height="15" fill="rgb(247,199,27)" fg:x="11172" fg:w="3"/><text x="77.9142%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="77.6642%" y="293" width="0.0209%" height="15" fill="rgb(252,158,49)" fg:x="11172" fg:w="3"/><text x="77.9142%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.01%)</title><rect x="77.6920%" y="421" width="0.0139%" height="15" fill="rgb(254,73,1)" fg:x="11176" fg:w="2"/><text x="77.9420%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.01%)</title><rect x="77.6920%" y="405" width="0.0139%" height="15" fill="rgb(248,93,19)" fg:x="11176" fg:w="2"/><text x="77.9420%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.01%)</title><rect x="77.6920%" y="389" width="0.0139%" height="15" fill="rgb(206,67,5)" fg:x="11176" fg:w="2"/><text x="77.9420%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.01%)</title><rect x="77.6920%" y="373" width="0.0139%" height="15" fill="rgb(209,210,4)" fg:x="11176" fg:w="2"/><text x="77.9420%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (18 samples, 0.13%)</title><rect x="77.5878%" y="725" width="0.1251%" height="15" fill="rgb(214,185,36)" fg:x="11161" fg:w="18"/><text x="77.8378%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (18 samples, 0.13%)</title><rect x="77.5878%" y="709" width="0.1251%" height="15" fill="rgb(233,191,26)" fg:x="11161" fg:w="18"/><text x="77.8378%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (18 samples, 0.13%)</title><rect x="77.5878%" y="693" width="0.1251%" height="15" fill="rgb(248,94,17)" fg:x="11161" fg:w="18"/><text x="77.8378%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (18 samples, 0.13%)</title><rect x="77.5878%" y="677" width="0.1251%" height="15" fill="rgb(250,64,4)" fg:x="11161" fg:w="18"/><text x="77.8378%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.13%)</title><rect x="77.5878%" y="661" width="0.1251%" height="15" fill="rgb(218,41,53)" fg:x="11161" fg:w="18"/><text x="77.8378%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.13%)</title><rect x="77.5878%" y="645" width="0.1251%" height="15" fill="rgb(251,176,28)" fg:x="11161" fg:w="18"/><text x="77.8378%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.13%)</title><rect x="77.5878%" y="629" width="0.1251%" height="15" fill="rgb(247,22,9)" fg:x="11161" fg:w="18"/><text x="77.8378%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (18 samples, 0.13%)</title><rect x="77.5878%" y="613" width="0.1251%" height="15" fill="rgb(218,201,14)" fg:x="11161" fg:w="18"/><text x="77.8378%" y="623.50"></text></g><g><title>y2021::d19::main::p02::{{closure}} (18 samples, 0.13%)</title><rect x="77.5878%" y="597" width="0.1251%" height="15" fill="rgb(218,94,10)" fg:x="11161" fg:w="18"/><text x="77.8378%" y="607.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (18 samples, 0.13%)</title><rect x="77.5878%" y="581" width="0.1251%" height="15" fill="rgb(222,183,52)" fg:x="11161" fg:w="18"/><text x="77.8378%" y="591.50"></text></g><g><title>&lt;y2021::d19::scanner::Scanner as core::str::traits::FromStr&gt;::from_str (18 samples, 0.13%)</title><rect x="77.5878%" y="565" width="0.1251%" height="15" fill="rgb(242,140,25)" fg:x="11161" fg:w="18"/><text x="77.8378%" y="575.50"></text></g><g><title>y2021::d19::scanner::Scanner::new (16 samples, 0.11%)</title><rect x="77.6017%" y="549" width="0.1112%" height="15" fill="rgb(235,197,38)" fg:x="11163" fg:w="16"/><text x="77.8517%" y="559.50"></text></g><g><title>y2021::d19::scanner::Scanner::calculate_vectors (16 samples, 0.11%)</title><rect x="77.6017%" y="533" width="0.1112%" height="15" fill="rgb(237,136,15)" fg:x="11163" fg:w="16"/><text x="77.8517%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (15 samples, 0.10%)</title><rect x="77.6086%" y="517" width="0.1043%" height="15" fill="rgb(223,44,49)" fg:x="11164" fg:w="15"/><text x="77.8586%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.10%)</title><rect x="77.6086%" y="501" width="0.1043%" height="15" fill="rgb(227,71,15)" fg:x="11164" fg:w="15"/><text x="77.8586%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (10 samples, 0.07%)</title><rect x="77.6434%" y="485" width="0.0695%" height="15" fill="rgb(225,153,20)" fg:x="11169" fg:w="10"/><text x="77.8934%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (10 samples, 0.07%)</title><rect x="77.6434%" y="469" width="0.0695%" height="15" fill="rgb(210,190,26)" fg:x="11169" fg:w="10"/><text x="77.8934%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.07%)</title><rect x="77.6434%" y="453" width="0.0695%" height="15" fill="rgb(223,147,5)" fg:x="11169" fg:w="10"/><text x="77.8934%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (10 samples, 0.07%)</title><rect x="77.6434%" y="437" width="0.0695%" height="15" fill="rgb(207,14,23)" fg:x="11169" fg:w="10"/><text x="77.8934%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (22 samples, 0.15%)</title><rect x="77.5878%" y="741" width="0.1529%" height="15" fill="rgb(211,195,53)" fg:x="11161" fg:w="22"/><text x="77.8378%" y="751.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.03%)</title><rect x="77.7129%" y="725" width="0.0278%" height="15" fill="rgb(237,75,46)" fg:x="11179" fg:w="4"/><text x="77.9629%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.03%)</title><rect x="77.7129%" y="709" width="0.0278%" height="15" fill="rgb(254,55,14)" fg:x="11179" fg:w="4"/><text x="77.9629%" y="719.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.03%)</title><rect x="77.7129%" y="693" width="0.0278%" height="15" fill="rgb(230,185,30)" fg:x="11179" fg:w="4"/><text x="77.9629%" y="703.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.03%)</title><rect x="77.7129%" y="677" width="0.0278%" height="15" fill="rgb(220,14,11)" fg:x="11179" fg:w="4"/><text x="77.9629%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.03%)</title><rect x="77.7129%" y="661" width="0.0278%" height="15" fill="rgb(215,169,44)" fg:x="11179" fg:w="4"/><text x="77.9629%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.03%)</title><rect x="77.7129%" y="645" width="0.0278%" height="15" fill="rgb(253,203,20)" fg:x="11179" fg:w="4"/><text x="77.9629%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.03%)</title><rect x="77.7129%" y="629" width="0.0278%" height="15" fill="rgb(229,225,17)" fg:x="11179" fg:w="4"/><text x="77.9629%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.03%)</title><rect x="77.7129%" y="613" width="0.0278%" height="15" fill="rgb(236,76,26)" fg:x="11179" fg:w="4"/><text x="77.9629%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.02%)</title><rect x="77.7198%" y="597" width="0.0209%" height="15" fill="rgb(234,15,30)" fg:x="11180" fg:w="3"/><text x="77.9698%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.02%)</title><rect x="77.7198%" y="581" width="0.0209%" height="15" fill="rgb(211,113,48)" fg:x="11180" fg:w="3"/><text x="77.9698%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.02%)</title><rect x="77.7198%" y="565" width="0.0209%" height="15" fill="rgb(221,31,36)" fg:x="11180" fg:w="3"/><text x="77.9698%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (3 samples, 0.02%)</title><rect x="77.7198%" y="549" width="0.0209%" height="15" fill="rgb(215,118,52)" fg:x="11180" fg:w="3"/><text x="77.9698%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.02%)</title><rect x="77.7198%" y="533" width="0.0209%" height="15" fill="rgb(241,151,27)" fg:x="11180" fg:w="3"/><text x="77.9698%" y="543.50"></text></g><g><title>y2021::d19::main::get_scanners (2 samples, 0.01%)</title><rect x="77.7755%" y="709" width="0.0139%" height="15" fill="rgb(253,51,3)" fg:x="11188" fg:w="2"/><text x="78.0255%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="77.7755%" y="693" width="0.0139%" height="15" fill="rgb(216,201,24)" fg:x="11188" fg:w="2"/><text x="78.0255%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.01%)</title><rect x="77.7755%" y="677" width="0.0139%" height="15" fill="rgb(231,107,4)" fg:x="11188" fg:w="2"/><text x="78.0255%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="77.7755%" y="661" width="0.0139%" height="15" fill="rgb(243,97,54)" fg:x="11188" fg:w="2"/><text x="78.0255%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.01%)</title><rect x="78.0396%" y="421" width="0.0139%" height="15" fill="rgb(221,32,51)" fg:x="11226" fg:w="2"/><text x="78.2896%" y="431.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (2 samples, 0.01%)</title><rect x="78.0396%" y="405" width="0.0139%" height="15" fill="rgb(218,171,35)" fg:x="11226" fg:w="2"/><text x="78.2896%" y="415.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (2 samples, 0.01%)</title><rect x="78.0396%" y="389" width="0.0139%" height="15" fill="rgb(214,20,53)" fg:x="11226" fg:w="2"/><text x="78.2896%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (12 samples, 0.08%)</title><rect x="78.0396%" y="437" width="0.0834%" height="15" fill="rgb(239,9,52)" fg:x="11226" fg:w="12"/><text x="78.2896%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (10 samples, 0.07%)</title><rect x="78.0535%" y="421" width="0.0695%" height="15" fill="rgb(215,114,45)" fg:x="11228" fg:w="10"/><text x="78.3035%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (17 samples, 0.12%)</title><rect x="78.1230%" y="437" width="0.1182%" height="15" fill="rgb(208,118,9)" fg:x="11238" fg:w="17"/><text x="78.3730%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (7 samples, 0.05%)</title><rect x="78.2412%" y="437" width="0.0487%" height="15" fill="rgb(235,7,39)" fg:x="11255" fg:w="7"/><text x="78.4912%" y="447.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="78.2760%" y="421" width="0.0139%" height="15" fill="rgb(243,225,15)" fg:x="11260" fg:w="2"/><text x="78.5260%" y="431.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="78.2760%" y="405" width="0.0139%" height="15" fill="rgb(225,216,18)" fg:x="11260" fg:w="2"/><text x="78.5260%" y="415.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="78.2760%" y="389" width="0.0139%" height="15" fill="rgb(233,36,38)" fg:x="11260" fg:w="2"/><text x="78.5260%" y="399.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="78.2760%" y="373" width="0.0139%" height="15" fill="rgb(239,88,23)" fg:x="11260" fg:w="2"/><text x="78.5260%" y="383.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="78.2760%" y="357" width="0.0139%" height="15" fill="rgb(219,181,35)" fg:x="11260" fg:w="2"/><text x="78.5260%" y="367.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="78.2760%" y="341" width="0.0139%" height="15" fill="rgb(215,18,46)" fg:x="11260" fg:w="2"/><text x="78.5260%" y="351.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="78.2760%" y="325" width="0.0139%" height="15" fill="rgb(241,38,11)" fg:x="11260" fg:w="2"/><text x="78.5260%" y="335.50"></text></g><g><title>rtl8169_poll (2 samples, 0.01%)</title><rect x="78.2760%" y="309" width="0.0139%" height="15" fill="rgb(248,169,45)" fg:x="11260" fg:w="2"/><text x="78.5260%" y="319.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="78.2760%" y="293" width="0.0139%" height="15" fill="rgb(239,50,49)" fg:x="11260" fg:w="2"/><text x="78.5260%" y="303.50"></text></g><g><title>gro_normal_list.part.0 (2 samples, 0.01%)</title><rect x="78.2760%" y="277" width="0.0139%" height="15" fill="rgb(231,96,31)" fg:x="11260" fg:w="2"/><text x="78.5260%" y="287.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="78.2760%" y="261" width="0.0139%" height="15" fill="rgb(224,193,37)" fg:x="11260" fg:w="2"/><text x="78.5260%" y="271.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="78.2760%" y="245" width="0.0139%" height="15" fill="rgb(227,153,50)" fg:x="11260" fg:w="2"/><text x="78.5260%" y="255.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="78.2760%" y="229" width="0.0139%" height="15" fill="rgb(249,228,3)" fg:x="11260" fg:w="2"/><text x="78.5260%" y="239.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="78.2760%" y="213" width="0.0139%" height="15" fill="rgb(219,164,43)" fg:x="11260" fg:w="2"/><text x="78.5260%" y="223.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (3 samples, 0.02%)</title><rect x="78.2899%" y="421" width="0.0209%" height="15" fill="rgb(216,45,41)" fg:x="11262" fg:w="3"/><text x="78.5399%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.54%)</title><rect x="77.8102%" y="469" width="0.5422%" height="15" fill="rgb(210,226,51)" fg:x="11193" fg:w="78"/><text x="78.0602%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.48%)</title><rect x="77.8728%" y="453" width="0.4797%" height="15" fill="rgb(209,117,49)" fg:x="11202" fg:w="69"/><text x="78.1228%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (9 samples, 0.06%)</title><rect x="78.2899%" y="437" width="0.0626%" height="15" fill="rgb(206,196,24)" fg:x="11262" fg:w="9"/><text x="78.5399%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (6 samples, 0.04%)</title><rect x="78.3107%" y="421" width="0.0417%" height="15" fill="rgb(253,218,3)" fg:x="11265" fg:w="6"/><text x="78.5607%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (6 samples, 0.04%)</title><rect x="78.3107%" y="405" width="0.0417%" height="15" fill="rgb(252,166,2)" fg:x="11265" fg:w="6"/><text x="78.5607%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.56%)</title><rect x="77.7963%" y="501" width="0.5631%" height="15" fill="rgb(236,218,26)" fg:x="11191" fg:w="81"/><text x="78.0463%" y="511.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.56%)</title><rect x="77.7963%" y="485" width="0.5631%" height="15" fill="rgb(254,84,19)" fg:x="11191" fg:w="81"/><text x="78.0463%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.59%)</title><rect x="77.7963%" y="517" width="0.5909%" height="15" fill="rgb(219,137,29)" fg:x="11191" fg:w="85"/><text x="78.0463%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.03%)</title><rect x="78.3594%" y="501" width="0.0278%" height="15" fill="rgb(227,47,52)" fg:x="11272" fg:w="4"/><text x="78.6094%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="78.4428%" y="501" width="0.0139%" height="15" fill="rgb(229,167,24)" fg:x="11284" fg:w="2"/><text x="78.6928%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="78.4428%" y="485" width="0.0139%" height="15" fill="rgb(233,164,1)" fg:x="11284" fg:w="2"/><text x="78.6928%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.01%)</title><rect x="78.4428%" y="469" width="0.0139%" height="15" fill="rgb(218,88,48)" fg:x="11284" fg:w="2"/><text x="78.6928%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (2 samples, 0.01%)</title><rect x="78.4428%" y="453" width="0.0139%" height="15" fill="rgb(226,214,24)" fg:x="11284" fg:w="2"/><text x="78.6928%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="78.4428%" y="437" width="0.0139%" height="15" fill="rgb(233,29,12)" fg:x="11284" fg:w="2"/><text x="78.6928%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (53 samples, 0.37%)</title><rect x="79.6594%" y="357" width="0.3684%" height="15" fill="rgb(219,120,34)" fg:x="11459" fg:w="53"/><text x="79.9094%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (83 samples, 0.58%)</title><rect x="79.6246%" y="373" width="0.5770%" height="15" fill="rgb(226,78,44)" fg:x="11454" fg:w="83"/><text x="79.8746%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (25 samples, 0.17%)</title><rect x="80.0278%" y="357" width="0.1738%" height="15" fill="rgb(240,15,48)" fg:x="11512" fg:w="25"/><text x="80.2778%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (119 samples, 0.83%)</title><rect x="80.6396%" y="357" width="0.8273%" height="15" fill="rgb(253,176,7)" fg:x="11600" fg:w="119"/><text x="80.8896%" y="367.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="81.4529%" y="341" width="0.0139%" height="15" fill="rgb(206,166,28)" fg:x="11717" fg:w="2"/><text x="81.7029%" y="351.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="81.4529%" y="325" width="0.0139%" height="15" fill="rgb(241,53,51)" fg:x="11717" fg:w="2"/><text x="81.7029%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (244 samples, 1.70%)</title><rect x="80.2016%" y="373" width="1.6962%" height="15" fill="rgb(249,112,30)" fg:x="11537" fg:w="244"/><text x="80.4516%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (62 samples, 0.43%)</title><rect x="81.4668%" y="357" width="0.4310%" height="15" fill="rgb(217,85,30)" fg:x="11719" fg:w="62"/><text x="81.7168%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (444 samples, 3.09%)</title><rect x="78.8252%" y="421" width="3.0865%" height="15" fill="rgb(233,49,7)" fg:x="11339" fg:w="444"/><text x="79.0752%" y="431.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (444 samples, 3.09%)</title><rect x="78.8252%" y="405" width="3.0865%" height="15" fill="rgb(234,109,9)" fg:x="11339" fg:w="444"/><text x="79.0752%" y="415.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (444 samples, 3.09%)</title><rect x="78.8252%" y="389" width="3.0865%" height="15" fill="rgb(253,95,22)" fg:x="11339" fg:w="444"/><text x="79.0752%" y="399.50">&lt;co..</text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="81.8978%" y="373" width="0.0139%" height="15" fill="rgb(233,176,25)" fg:x="11781" fg:w="2"/><text x="82.1478%" y="383.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="81.8978%" y="357" width="0.0139%" height="15" fill="rgb(236,33,39)" fg:x="11781" fg:w="2"/><text x="82.1478%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (36 samples, 0.25%)</title><rect x="81.9117%" y="421" width="0.2503%" height="15" fill="rgb(223,226,42)" fg:x="11783" fg:w="36"/><text x="82.1617%" y="431.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (30 samples, 0.21%)</title><rect x="81.9534%" y="405" width="0.2086%" height="15" fill="rgb(216,99,33)" fg:x="11789" fg:w="30"/><text x="82.2034%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (24 samples, 0.17%)</title><rect x="81.9951%" y="389" width="0.1668%" height="15" fill="rgb(235,84,23)" fg:x="11795" fg:w="24"/><text x="82.2451%" y="399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (24 samples, 0.17%)</title><rect x="81.9951%" y="373" width="0.1668%" height="15" fill="rgb(232,2,27)" fg:x="11795" fg:w="24"/><text x="82.2451%" y="383.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="82.4192%" y="405" width="0.0139%" height="15" fill="rgb(241,23,22)" fg:x="11856" fg:w="2"/><text x="82.6692%" y="415.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="82.4192%" y="389" width="0.0139%" height="15" fill="rgb(211,73,27)" fg:x="11856" fg:w="2"/><text x="82.6692%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (123 samples, 0.86%)</title><rect x="84.7619%" y="293" width="0.8551%" height="15" fill="rgb(235,109,49)" fg:x="12193" fg:w="123"/><text x="85.0119%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (236 samples, 1.64%)</title><rect x="84.4352%" y="309" width="1.6406%" height="15" fill="rgb(230,99,29)" fg:x="12146" fg:w="236"/><text x="84.6852%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (66 samples, 0.46%)</title><rect x="85.6170%" y="293" width="0.4588%" height="15" fill="rgb(245,199,7)" fg:x="12316" fg:w="66"/><text x="85.8670%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (1,102 samples, 7.66%)</title><rect x="78.7696%" y="437" width="7.6608%" height="15" fill="rgb(217,179,10)" fg:x="11331" fg:w="1102"/><text x="79.0196%" y="447.50">hashbrown:..</text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::hash::Hash&gt;::hash (614 samples, 4.27%)</title><rect x="82.1620%" y="421" width="4.2683%" height="15" fill="rgb(254,99,47)" fg:x="11819" fg:w="614"/><text x="82.4120%" y="431.50">&lt;y202..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (575 samples, 4.00%)</title><rect x="82.4331%" y="405" width="3.9972%" height="15" fill="rgb(251,121,7)" fg:x="11858" fg:w="575"/><text x="82.6831%" y="415.50">core..</text></g><g><title>core::hash::Hasher::write_i64 (550 samples, 3.82%)</title><rect x="82.6069%" y="389" width="3.8234%" height="15" fill="rgb(250,177,26)" fg:x="11883" fg:w="550"/><text x="82.8569%" y="399.50">core..</text></g><g><title>core::hash::Hasher::write_u64 (550 samples, 3.82%)</title><rect x="82.6069%" y="373" width="3.8234%" height="15" fill="rgb(232,88,15)" fg:x="11883" fg:w="550"/><text x="82.8569%" y="383.50">core..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (543 samples, 3.77%)</title><rect x="82.6555%" y="357" width="3.7748%" height="15" fill="rgb(251,54,54)" fg:x="11890" fg:w="543"/><text x="82.9055%" y="367.50">&lt;std..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (543 samples, 3.77%)</title><rect x="82.6555%" y="341" width="3.7748%" height="15" fill="rgb(208,177,15)" fg:x="11890" fg:w="543"/><text x="82.9055%" y="351.50">&lt;cor..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (543 samples, 3.77%)</title><rect x="82.6555%" y="325" width="3.7748%" height="15" fill="rgb(205,97,32)" fg:x="11890" fg:w="543"/><text x="82.9055%" y="335.50">&lt;cor..</text></g><g><title>core::hash::sip::u8to64_le (50 samples, 0.35%)</title><rect x="86.0827%" y="309" width="0.3476%" height="15" fill="rgb(217,192,13)" fg:x="12383" fg:w="50"/><text x="86.3327%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.41%)</title><rect x="86.8544%" y="373" width="0.4101%" height="15" fill="rgb(215,163,41)" fg:x="12494" fg:w="59"/><text x="87.1044%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (30 samples, 0.21%)</title><rect x="87.0560%" y="357" width="0.2086%" height="15" fill="rgb(246,83,29)" fg:x="12523" fg:w="30"/><text x="87.3060%" y="367.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (6 samples, 0.04%)</title><rect x="87.2645%" y="373" width="0.0417%" height="15" fill="rgb(219,2,45)" fg:x="12553" fg:w="6"/><text x="87.5145%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.56%)</title><rect x="86.7501%" y="405" width="0.5631%" height="15" fill="rgb(242,215,33)" fg:x="12479" fg:w="81"/><text x="87.0001%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.56%)</title><rect x="86.7501%" y="389" width="0.5631%" height="15" fill="rgb(217,1,6)" fg:x="12479" fg:w="81"/><text x="87.0001%" y="399.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="87.3132%" y="405" width="0.0139%" height="15" fill="rgb(207,85,52)" fg:x="12560" fg:w="2"/><text x="87.5632%" y="415.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="87.3132%" y="389" width="0.0139%" height="15" fill="rgb(231,171,19)" fg:x="12560" fg:w="2"/><text x="87.5632%" y="399.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (25 samples, 0.17%)</title><rect x="87.3271%" y="405" width="0.1738%" height="15" fill="rgb(207,128,4)" fg:x="12562" fg:w="25"/><text x="87.5771%" y="415.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::cmp::PartialEq&gt;::eq (25 samples, 0.17%)</title><rect x="87.3271%" y="389" width="0.1738%" height="15" fill="rgb(219,208,4)" fg:x="12562" fg:w="25"/><text x="87.5771%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (13 samples, 0.09%)</title><rect x="87.5009%" y="357" width="0.0904%" height="15" fill="rgb(235,161,42)" fg:x="12587" fg:w="13"/><text x="87.7509%" y="367.50"></text></g><g><title>hashbrown::raw::h2 (18 samples, 0.13%)</title><rect x="87.5912%" y="357" width="0.1251%" height="15" fill="rgb(247,218,18)" fg:x="12600" fg:w="18"/><text x="87.8412%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (4 samples, 0.03%)</title><rect x="87.7164%" y="357" width="0.0278%" height="15" fill="rgb(232,114,51)" fg:x="12618" fg:w="4"/><text x="87.9664%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.03%)</title><rect x="87.7164%" y="341" width="0.0278%" height="15" fill="rgb(222,95,3)" fg:x="12618" fg:w="4"/><text x="87.9664%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.03%)</title><rect x="87.7164%" y="325" width="0.0278%" height="15" fill="rgb(240,65,29)" fg:x="12618" fg:w="4"/><text x="87.9664%" y="335.50"></text></g><g><title>y2021::d19::scanner::Scanner::has_match (1,563 samples, 10.87%)</title><rect x="77.7894%" y="709" width="10.8655%" height="15" fill="rgb(249,209,20)" fg:x="11190" fg:w="1563"/><text x="78.0394%" y="719.50">y2021::d19::scan..</text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors (1,563 samples, 10.87%)</title><rect x="77.7894%" y="693" width="10.8655%" height="15" fill="rgb(241,48,37)" fg:x="11190" fg:w="1563"/><text x="78.0394%" y="703.50">y2021::d19::scan..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,562 samples, 10.86%)</title><rect x="77.7963%" y="677" width="10.8585%" height="15" fill="rgb(230,140,42)" fg:x="11191" fg:w="1562"/><text x="78.0463%" y="687.50">core::iter::trai..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,562 samples, 10.86%)</title><rect x="77.7963%" y="661" width="10.8585%" height="15" fill="rgb(230,176,45)" fg:x="11191" fg:w="1562"/><text x="78.0463%" y="671.50">&lt;std::collection..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,562 samples, 10.86%)</title><rect x="77.7963%" y="645" width="10.8585%" height="15" fill="rgb(245,112,21)" fg:x="11191" fg:w="1562"/><text x="78.0463%" y="655.50">&lt;std::collection..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,562 samples, 10.86%)</title><rect x="77.7963%" y="629" width="10.8585%" height="15" fill="rgb(207,183,35)" fg:x="11191" fg:w="1562"/><text x="78.0463%" y="639.50">&lt;hashbrown::set:..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,562 samples, 10.86%)</title><rect x="77.7963%" y="613" width="10.8585%" height="15" fill="rgb(227,44,33)" fg:x="11191" fg:w="1562"/><text x="78.0463%" y="623.50">&lt;hashbrown::map:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,562 samples, 10.86%)</title><rect x="77.7963%" y="597" width="10.8585%" height="15" fill="rgb(246,120,21)" fg:x="11191" fg:w="1562"/><text x="78.0463%" y="607.50">core::iter::trai..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,562 samples, 10.86%)</title><rect x="77.7963%" y="581" width="10.8585%" height="15" fill="rgb(235,57,52)" fg:x="11191" fg:w="1562"/><text x="78.0463%" y="591.50">&lt;core::iter::ada..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,562 samples, 10.86%)</title><rect x="77.7963%" y="565" width="10.8585%" height="15" fill="rgb(238,84,10)" fg:x="11191" fg:w="1562"/><text x="78.0463%" y="575.50">&lt;core::iter::ada..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,562 samples, 10.86%)</title><rect x="77.7963%" y="549" width="10.8585%" height="15" fill="rgb(251,200,32)" fg:x="11191" fg:w="1562"/><text x="78.0463%" y="559.50">&lt;core::iter::ada..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,562 samples, 10.86%)</title><rect x="77.7963%" y="533" width="10.8585%" height="15" fill="rgb(247,159,13)" fg:x="11191" fg:w="1562"/><text x="78.0463%" y="543.50">core::iter::trai..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1,477 samples, 10.27%)</title><rect x="78.3872%" y="517" width="10.2676%" height="15" fill="rgb(238,64,4)" fg:x="11276" fg:w="1477"/><text x="78.6372%" y="527.50">core::iter::ada..</text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors::{{closure}} (1,467 samples, 10.20%)</title><rect x="78.4567%" y="501" width="10.1981%" height="15" fill="rgb(221,131,51)" fg:x="11286" fg:w="1467"/><text x="78.7067%" y="511.50">y2021::d19::sca..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1,467 samples, 10.20%)</title><rect x="78.4567%" y="485" width="10.1981%" height="15" fill="rgb(242,5,29)" fg:x="11286" fg:w="1467"/><text x="78.7067%" y="495.50">std::collection..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,467 samples, 10.20%)</title><rect x="78.4567%" y="469" width="10.1981%" height="15" fill="rgb(214,130,32)" fg:x="11286" fg:w="1467"/><text x="78.7067%" y="479.50">hashbrown::map:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,422 samples, 9.89%)</title><rect x="78.7696%" y="453" width="9.8853%" height="15" fill="rgb(244,210,16)" fg:x="11331" fg:w="1422"/><text x="79.0196%" y="463.50">hashbrown::map..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (320 samples, 2.22%)</title><rect x="86.4303%" y="437" width="2.2245%" height="15" fill="rgb(234,48,26)" fg:x="12433" fg:w="320"/><text x="86.6803%" y="447.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (320 samples, 2.22%)</title><rect x="86.4303%" y="421" width="2.2245%" height="15" fill="rgb(231,82,38)" fg:x="12433" fg:w="320"/><text x="86.6803%" y="431.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (166 samples, 1.15%)</title><rect x="87.5009%" y="405" width="1.1540%" height="15" fill="rgb(254,128,41)" fg:x="12587" fg:w="166"/><text x="87.7509%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (166 samples, 1.15%)</title><rect x="87.5009%" y="389" width="1.1540%" height="15" fill="rgb(212,73,49)" fg:x="12587" fg:w="166"/><text x="87.7509%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (166 samples, 1.15%)</title><rect x="87.5009%" y="373" width="1.1540%" height="15" fill="rgb(205,62,54)" fg:x="12587" fg:w="166"/><text x="87.7509%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (131 samples, 0.91%)</title><rect x="87.7442%" y="357" width="0.9107%" height="15" fill="rgb(228,0,8)" fg:x="12622" fg:w="131"/><text x="87.9942%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (131 samples, 0.91%)</title><rect x="87.7442%" y="341" width="0.9107%" height="15" fill="rgb(251,28,17)" fg:x="12622" fg:w="131"/><text x="87.9942%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (131 samples, 0.91%)</title><rect x="87.7442%" y="325" width="0.9107%" height="15" fill="rgb(238,105,27)" fg:x="12622" fg:w="131"/><text x="87.9942%" y="335.50"></text></g><g><title>core::core_arch::simd::i8x16::new (131 samples, 0.91%)</title><rect x="87.7442%" y="309" width="0.9107%" height="15" fill="rgb(237,216,33)" fg:x="12622" fg:w="131"/><text x="87.9942%" y="319.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="88.6340%" y="293" width="0.0209%" height="15" fill="rgb(229,228,25)" fg:x="12750" fg:w="3"/><text x="88.8840%" y="303.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="88.6340%" y="277" width="0.0209%" height="15" fill="rgb(233,75,23)" fg:x="12750" fg:w="3"/><text x="88.8840%" y="287.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="88.6409%" y="261" width="0.0139%" height="15" fill="rgb(231,207,16)" fg:x="12751" fg:w="2"/><text x="88.8909%" y="271.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="88.6409%" y="245" width="0.0139%" height="15" fill="rgb(231,191,45)" fg:x="12751" fg:w="2"/><text x="88.8909%" y="255.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="88.6409%" y="229" width="0.0139%" height="15" fill="rgb(224,133,17)" fg:x="12751" fg:w="2"/><text x="88.8909%" y="239.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="88.6409%" y="213" width="0.0139%" height="15" fill="rgb(209,178,27)" fg:x="12751" fg:w="2"/><text x="88.8909%" y="223.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="88.6409%" y="197" width="0.0139%" height="15" fill="rgb(218,37,11)" fg:x="12751" fg:w="2"/><text x="88.8909%" y="207.50"></text></g><g><title>rtl8169_poll (2 samples, 0.01%)</title><rect x="88.6409%" y="181" width="0.0139%" height="15" fill="rgb(251,226,25)" fg:x="12751" fg:w="2"/><text x="88.8909%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (12 samples, 0.08%)</title><rect x="88.8078%" y="677" width="0.0834%" height="15" fill="rgb(209,222,27)" fg:x="12775" fg:w="12"/><text x="89.0578%" y="687.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.08%)</title><rect x="88.8078%" y="661" width="0.0834%" height="15" fill="rgb(238,22,21)" fg:x="12775" fg:w="12"/><text x="89.0578%" y="671.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (12 samples, 0.08%)</title><rect x="88.8078%" y="645" width="0.0834%" height="15" fill="rgb(233,161,25)" fg:x="12775" fg:w="12"/><text x="89.0578%" y="655.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::ops::arith::Sub&gt;::sub (11 samples, 0.08%)</title><rect x="88.8912%" y="677" width="0.0765%" height="15" fill="rgb(226,122,53)" fg:x="12787" fg:w="11"/><text x="89.1412%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11 samples, 0.08%)</title><rect x="88.9677%" y="677" width="0.0765%" height="15" fill="rgb(220,123,17)" fg:x="12798" fg:w="11"/><text x="89.2177%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (11 samples, 0.08%)</title><rect x="88.9677%" y="661" width="0.0765%" height="15" fill="rgb(230,224,35)" fg:x="12798" fg:w="11"/><text x="89.2177%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.01%)</title><rect x="89.0302%" y="645" width="0.0139%" height="15" fill="rgb(246,83,8)" fg:x="12807" fg:w="2"/><text x="89.2802%" y="655.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="89.6837%" y="645" width="0.0139%" height="15" fill="rgb(230,214,17)" fg:x="12901" fg:w="2"/><text x="89.9337%" y="655.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="89.6837%" y="629" width="0.0139%" height="15" fill="rgb(222,97,18)" fg:x="12901" fg:w="2"/><text x="89.9337%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (39 samples, 0.27%)</title><rect x="90.5040%" y="565" width="0.2711%" height="15" fill="rgb(206,79,1)" fg:x="13019" fg:w="39"/><text x="90.7540%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (65 samples, 0.45%)</title><rect x="90.4345%" y="581" width="0.4519%" height="15" fill="rgb(214,121,34)" fg:x="13009" fg:w="65"/><text x="90.6845%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (16 samples, 0.11%)</title><rect x="90.7751%" y="565" width="0.1112%" height="15" fill="rgb(249,199,46)" fg:x="13058" fg:w="16"/><text x="91.0251%" y="575.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="92.0681%" y="549" width="0.0209%" height="15" fill="rgb(214,222,46)" fg:x="13244" fg:w="3"/><text x="92.3181%" y="559.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="92.0681%" y="533" width="0.0209%" height="15" fill="rgb(248,168,30)" fg:x="13244" fg:w="3"/><text x="92.3181%" y="543.50"></text></g><g><title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="92.0681%" y="517" width="0.0209%" height="15" fill="rgb(226,14,28)" fg:x="13244" fg:w="3"/><text x="92.3181%" y="527.50"></text></g><g><title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="92.0681%" y="501" width="0.0209%" height="15" fill="rgb(253,123,1)" fg:x="13244" fg:w="3"/><text x="92.3181%" y="511.50"></text></g><g><title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="92.0681%" y="485" width="0.0209%" height="15" fill="rgb(225,24,42)" fg:x="13244" fg:w="3"/><text x="92.3181%" y="495.50"></text></g><g><title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="92.0681%" y="469" width="0.0209%" height="15" fill="rgb(216,161,37)" fg:x="13244" fg:w="3"/><text x="92.3181%" y="479.50"></text></g><g><title>net_rx_action (3 samples, 0.02%)</title><rect x="92.0681%" y="453" width="0.0209%" height="15" fill="rgb(251,164,26)" fg:x="13244" fg:w="3"/><text x="92.3181%" y="463.50"></text></g><g><title>rtl8169_poll (3 samples, 0.02%)</title><rect x="92.0681%" y="437" width="0.0209%" height="15" fill="rgb(219,177,3)" fg:x="13244" fg:w="3"/><text x="92.3181%" y="447.50"></text></g><g><title>napi_complete_done (2 samples, 0.01%)</title><rect x="92.0751%" y="421" width="0.0139%" height="15" fill="rgb(222,65,0)" fg:x="13245" fg:w="2"/><text x="92.3251%" y="431.50"></text></g><g><title>gro_normal_list.part.0 (2 samples, 0.01%)</title><rect x="92.0751%" y="405" width="0.0139%" height="15" fill="rgb(223,69,54)" fg:x="13245" fg:w="2"/><text x="92.3251%" y="415.50"></text></g><g><title>netif_receive_skb_list_internal (2 samples, 0.01%)</title><rect x="92.0751%" y="389" width="0.0139%" height="15" fill="rgb(235,30,27)" fg:x="13245" fg:w="2"/><text x="92.3251%" y="399.50"></text></g><g><title>__netif_receive_skb_list_core (2 samples, 0.01%)</title><rect x="92.0751%" y="373" width="0.0139%" height="15" fill="rgb(220,183,50)" fg:x="13245" fg:w="2"/><text x="92.3251%" y="383.50"></text></g><g><title>ip_list_rcv (2 samples, 0.01%)</title><rect x="92.0751%" y="357" width="0.0139%" height="15" fill="rgb(248,198,15)" fg:x="13245" fg:w="2"/><text x="92.3251%" y="367.50"></text></g><g><title>ip_sublist_rcv (2 samples, 0.01%)</title><rect x="92.0751%" y="341" width="0.0139%" height="15" fill="rgb(222,211,4)" fg:x="13245" fg:w="2"/><text x="92.3251%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (127 samples, 0.88%)</title><rect x="91.2131%" y="565" width="0.8829%" height="15" fill="rgb(214,102,34)" fg:x="13121" fg:w="127"/><text x="91.4631%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (223 samples, 1.55%)</title><rect x="90.8863%" y="581" width="1.5502%" height="15" fill="rgb(245,92,5)" fg:x="13074" fg:w="223"/><text x="91.1363%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (49 samples, 0.34%)</title><rect x="92.0959%" y="565" width="0.3406%" height="15" fill="rgb(252,72,51)" fg:x="13248" fg:w="49"/><text x="92.3459%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (395 samples, 2.75%)</title><rect x="89.6976%" y="629" width="2.7459%" height="15" fill="rgb(252,208,19)" fg:x="12903" fg:w="395"/><text x="89.9476%" y="639.50">&lt;s..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (395 samples, 2.75%)</title><rect x="89.6976%" y="613" width="2.7459%" height="15" fill="rgb(211,69,7)" fg:x="12903" fg:w="395"/><text x="89.9476%" y="623.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (395 samples, 2.75%)</title><rect x="89.6976%" y="597" width="2.7459%" height="15" fill="rgb(211,27,16)" fg:x="12903" fg:w="395"/><text x="89.9476%" y="607.50">&lt;c..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (35 samples, 0.24%)</title><rect x="92.4435%" y="629" width="0.2433%" height="15" fill="rgb(219,216,14)" fg:x="13298" fg:w="35"/><text x="92.6935%" y="639.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (23 samples, 0.16%)</title><rect x="92.5269%" y="613" width="0.1599%" height="15" fill="rgb(219,71,8)" fg:x="13310" fg:w="23"/><text x="92.7769%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (18 samples, 0.13%)</title><rect x="92.5617%" y="597" width="0.1251%" height="15" fill="rgb(223,170,53)" fg:x="13315" fg:w="18"/><text x="92.8117%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (18 samples, 0.13%)</title><rect x="92.5617%" y="581" width="0.1251%" height="15" fill="rgb(246,21,26)" fg:x="13315" fg:w="18"/><text x="92.8117%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (84 samples, 0.58%)</title><rect x="95.0574%" y="501" width="0.5839%" height="15" fill="rgb(248,20,46)" fg:x="13674" fg:w="84"/><text x="95.3074%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (204 samples, 1.42%)</title><rect x="94.5499%" y="517" width="1.4181%" height="15" fill="rgb(252,94,11)" fg:x="13601" fg:w="204"/><text x="94.7999%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (47 samples, 0.33%)</title><rect x="95.6413%" y="501" width="0.3267%" height="15" fill="rgb(236,163,8)" fg:x="13758" fg:w="47"/><text x="95.8913%" y="511.50"></text></g><g><title>handle_edge_irq (2 samples, 0.01%)</title><rect x="95.9680%" y="485" width="0.0139%" height="15" fill="rgb(217,221,45)" fg:x="13805" fg:w="2"/><text x="96.2180%" y="495.50"></text></g><g><title>handle_irq_event (2 samples, 0.01%)</title><rect x="95.9680%" y="469" width="0.0139%" height="15" fill="rgb(238,38,17)" fg:x="13805" fg:w="2"/><text x="96.2180%" y="479.50"></text></g><g><title>handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="95.9680%" y="453" width="0.0139%" height="15" fill="rgb(242,210,23)" fg:x="13805" fg:w="2"/><text x="96.2180%" y="463.50"></text></g><g><title>__handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="95.9680%" y="437" width="0.0139%" height="15" fill="rgb(250,86,53)" fg:x="13805" fg:w="2"/><text x="96.2180%" y="447.50"></text></g><g><title>rtl8169_interrupt (2 samples, 0.01%)</title><rect x="95.9680%" y="421" width="0.0139%" height="15" fill="rgb(223,168,25)" fg:x="13805" fg:w="2"/><text x="96.2180%" y="431.50"></text></g><g><title>asm_common_interrupt (3 samples, 0.02%)</title><rect x="95.9680%" y="517" width="0.0209%" height="15" fill="rgb(251,189,4)" fg:x="13805" fg:w="3"/><text x="96.2180%" y="527.50"></text></g><g><title>common_interrupt (3 samples, 0.02%)</title><rect x="95.9680%" y="501" width="0.0209%" height="15" fill="rgb(245,19,28)" fg:x="13805" fg:w="3"/><text x="96.2180%" y="511.50"></text></g><g><title>hashbrown::map::make_insert_hash (947 samples, 6.58%)</title><rect x="89.6976%" y="645" width="6.5832%" height="15" fill="rgb(207,10,34)" fg:x="12903" fg:w="947"/><text x="89.9476%" y="655.50">hashbrown..</text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::hash::Hash&gt;::hash (517 samples, 3.59%)</title><rect x="92.6868%" y="629" width="3.5940%" height="15" fill="rgb(235,153,31)" fg:x="13333" fg:w="517"/><text x="92.9368%" y="639.50">&lt;y20..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (490 samples, 3.41%)</title><rect x="92.8745%" y="613" width="3.4063%" height="15" fill="rgb(228,72,37)" fg:x="13360" fg:w="490"/><text x="93.1245%" y="623.50">cor..</text></g><g><title>core::hash::Hasher::write_i64 (462 samples, 3.21%)</title><rect x="93.0692%" y="597" width="3.2117%" height="15" fill="rgb(215,15,16)" fg:x="13388" fg:w="462"/><text x="93.3192%" y="607.50">cor..</text></g><g><title>core::hash::Hasher::write_u64 (462 samples, 3.21%)</title><rect x="93.0692%" y="581" width="3.2117%" height="15" fill="rgb(250,119,29)" fg:x="13388" fg:w="462"/><text x="93.3192%" y="591.50">cor..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (458 samples, 3.18%)</title><rect x="93.0970%" y="565" width="3.1839%" height="15" fill="rgb(214,59,1)" fg:x="13392" fg:w="458"/><text x="93.3470%" y="575.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (458 samples, 3.18%)</title><rect x="93.0970%" y="549" width="3.1839%" height="15" fill="rgb(223,109,25)" fg:x="13392" fg:w="458"/><text x="93.3470%" y="559.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (458 samples, 3.18%)</title><rect x="93.0970%" y="533" width="3.1839%" height="15" fill="rgb(230,198,22)" fg:x="13392" fg:w="458"/><text x="93.3470%" y="543.50">&lt;co..</text></g><g><title>core::hash::sip::u8to64_le (42 samples, 0.29%)</title><rect x="95.9889%" y="517" width="0.2920%" height="15" fill="rgb(245,184,46)" fg:x="13808" fg:w="42"/><text x="96.2389%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.19%)</title><rect x="96.7536%" y="581" width="0.1877%" height="15" fill="rgb(253,73,16)" fg:x="13918" fg:w="27"/><text x="97.0036%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.32%)</title><rect x="96.6354%" y="613" width="0.3198%" height="15" fill="rgb(206,94,45)" fg:x="13901" fg:w="46"/><text x="96.8854%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.32%)</title><rect x="96.6354%" y="597" width="0.3198%" height="15" fill="rgb(236,83,27)" fg:x="13901" fg:w="46"/><text x="96.8854%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2 samples, 0.01%)</title><rect x="96.9413%" y="581" width="0.0139%" height="15" fill="rgb(220,196,8)" fg:x="13945" fg:w="2"/><text x="97.1913%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.01%)</title><rect x="96.9413%" y="565" width="0.0139%" height="15" fill="rgb(254,185,14)" fg:x="13945" fg:w="2"/><text x="97.1913%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.01%)</title><rect x="96.9413%" y="549" width="0.0139%" height="15" fill="rgb(226,50,22)" fg:x="13945" fg:w="2"/><text x="97.1913%" y="559.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.02%)</title><rect x="96.9552%" y="613" width="0.0209%" height="15" fill="rgb(253,147,0)" fg:x="13947" fg:w="3"/><text x="97.2052%" y="623.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="96.9552%" y="597" width="0.0209%" height="15" fill="rgb(252,46,33)" fg:x="13947" fg:w="3"/><text x="97.2052%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (11 samples, 0.08%)</title><rect x="96.9760%" y="565" width="0.0765%" height="15" fill="rgb(242,22,54)" fg:x="13950" fg:w="11"/><text x="97.2260%" y="575.50"></text></g><g><title>hashbrown::raw::h2 (25 samples, 0.17%)</title><rect x="97.0525%" y="565" width="0.1738%" height="15" fill="rgb(223,178,32)" fg:x="13961" fg:w="25"/><text x="97.3025%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (215 samples, 1.49%)</title><rect x="96.2808%" y="645" width="1.4946%" height="15" fill="rgb(214,106,53)" fg:x="13850" fg:w="215"/><text x="96.5308%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (215 samples, 1.49%)</title><rect x="96.2808%" y="629" width="1.4946%" height="15" fill="rgb(232,65,50)" fg:x="13850" fg:w="215"/><text x="96.5308%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (115 samples, 0.80%)</title><rect x="96.9760%" y="613" width="0.7994%" height="15" fill="rgb(231,110,28)" fg:x="13950" fg:w="115"/><text x="97.2260%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (115 samples, 0.80%)</title><rect x="96.9760%" y="597" width="0.7994%" height="15" fill="rgb(216,71,40)" fg:x="13950" fg:w="115"/><text x="97.2260%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (115 samples, 0.80%)</title><rect x="96.9760%" y="581" width="0.7994%" height="15" fill="rgb(229,89,53)" fg:x="13950" fg:w="115"/><text x="97.2260%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (79 samples, 0.55%)</title><rect x="97.2263%" y="565" width="0.5492%" height="15" fill="rgb(210,124,14)" fg:x="13986" fg:w="79"/><text x="97.4763%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (79 samples, 0.55%)</title><rect x="97.2263%" y="549" width="0.5492%" height="15" fill="rgb(236,213,6)" fg:x="13986" fg:w="79"/><text x="97.4763%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (79 samples, 0.55%)</title><rect x="97.2263%" y="533" width="0.5492%" height="15" fill="rgb(228,41,5)" fg:x="13986" fg:w="79"/><text x="97.4763%" y="543.50"></text></g><g><title>core::core_arch::simd::i8x16::new (79 samples, 0.55%)</title><rect x="97.2263%" y="517" width="0.5492%" height="15" fill="rgb(221,167,25)" fg:x="13986" fg:w="79"/><text x="97.4763%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (118 samples, 0.82%)</title><rect x="97.9145%" y="629" width="0.8203%" height="15" fill="rgb(228,144,37)" fg:x="14085" fg:w="118"/><text x="98.1645%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (118 samples, 0.82%)</title><rect x="97.9145%" y="613" width="0.8203%" height="15" fill="rgb(227,189,38)" fg:x="14085" fg:w="118"/><text x="98.1645%" y="623.50"></text></g><g><title>core::ptr::write (118 samples, 0.82%)</title><rect x="97.9145%" y="597" width="0.8203%" height="15" fill="rgb(218,8,2)" fg:x="14085" fg:w="118"/><text x="98.1645%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (11 samples, 0.08%)</title><rect x="98.7348%" y="629" width="0.0765%" height="15" fill="rgb(209,61,28)" fg:x="14203" fg:w="11"/><text x="98.9848%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (11 samples, 0.08%)</title><rect x="98.7348%" y="613" width="0.0765%" height="15" fill="rgb(233,140,39)" fg:x="14203" fg:w="11"/><text x="98.9848%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (11 samples, 0.08%)</title><rect x="98.7348%" y="597" width="0.0765%" height="15" fill="rgb(251,66,48)" fg:x="14203" fg:w="11"/><text x="98.9848%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (9 samples, 0.06%)</title><rect x="98.9781%" y="613" width="0.0626%" height="15" fill="rgb(210,44,45)" fg:x="14238" fg:w="9"/><text x="99.2281%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (18 samples, 0.13%)</title><rect x="99.0407%" y="613" width="0.1251%" height="15" fill="rgb(214,136,46)" fg:x="14247" fg:w="18"/><text x="99.2907%" y="623.50"></text></g><g><title>hashbrown::raw::is_full (66 samples, 0.46%)</title><rect x="99.1658%" y="613" width="0.4588%" height="15" fill="rgb(207,130,50)" fg:x="14265" fg:w="66"/><text x="99.4158%" y="623.50"></text></g><g><title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="99.6107%" y="597" width="0.0139%" height="15" fill="rgb(228,102,49)" fg:x="14329" fg:w="2"/><text x="99.8607%" y="607.50"></text></g><g><title>common_interrupt (2 samples, 0.01%)</title><rect x="99.6107%" y="581" width="0.0139%" height="15" fill="rgb(253,55,1)" fg:x="14329" fg:w="2"/><text x="99.8607%" y="591.50"></text></g><g><title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="99.6107%" y="565" width="0.0139%" height="15" fill="rgb(238,222,9)" fg:x="14329" fg:w="2"/><text x="99.8607%" y="575.50"></text></g><g><title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="99.6107%" y="549" width="0.0139%" height="15" fill="rgb(246,99,6)" fg:x="14329" fg:w="2"/><text x="99.8607%" y="559.50"></text></g><g><title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="99.6107%" y="533" width="0.0139%" height="15" fill="rgb(219,110,26)" fg:x="14329" fg:w="2"/><text x="99.8607%" y="543.50"></text></g><g><title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="99.6107%" y="517" width="0.0139%" height="15" fill="rgb(239,160,33)" fg:x="14329" fg:w="2"/><text x="99.8607%" y="527.50"></text></g><g><title>net_rx_action (2 samples, 0.01%)</title><rect x="99.6107%" y="501" width="0.0139%" height="15" fill="rgb(220,202,23)" fg:x="14329" fg:w="2"/><text x="99.8607%" y="511.50"></text></g><g><title>rtl8169_poll (2 samples, 0.01%)</title><rect x="99.6107%" y="485" width="0.0139%" height="15" fill="rgb(208,80,26)" fg:x="14329" fg:w="2"/><text x="99.8607%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (118 samples, 0.82%)</title><rect x="98.8113%" y="629" width="0.8203%" height="15" fill="rgb(243,85,7)" fg:x="14214" fg:w="118"/><text x="99.0613%" y="639.50"></text></g><g><title>y2021::d19::scanner::Scanner::calculate_vectors (1,606 samples, 11.16%)</title><rect x="88.6548%" y="693" width="11.1644%" height="15" fill="rgb(228,77,47)" fg:x="12753" fg:w="1606"/><text x="88.9048%" y="703.50">y2021::d19::scan..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1,550 samples, 10.78%)</title><rect x="89.0441%" y="677" width="10.7751%" height="15" fill="rgb(212,226,8)" fg:x="12809" fg:w="1550"/><text x="89.2941%" y="687.50">std::collections..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,535 samples, 10.67%)</title><rect x="89.1484%" y="661" width="10.6708%" height="15" fill="rgb(241,120,54)" fg:x="12824" fg:w="1535"/><text x="89.3984%" y="671.50">hashbrown::map::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (294 samples, 2.04%)</title><rect x="97.7755%" y="645" width="2.0438%" height="15" fill="rgb(226,80,16)" fg:x="14065" fg:w="294"/><text x="98.0255%" y="655.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (27 samples, 0.19%)</title><rect x="99.6316%" y="629" width="0.1877%" height="15" fill="rgb(240,76,13)" fg:x="14332" fg:w="27"/><text x="99.8816%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (5 samples, 0.03%)</title><rect x="99.7845%" y="613" width="0.0348%" height="15" fill="rgb(252,74,8)" fg:x="14354" fg:w="5"/><text x="100.0345%" y="623.50"></text></g><g><title>hashbrown::raw::h2 (5 samples, 0.03%)</title><rect x="99.7845%" y="597" width="0.0348%" height="15" fill="rgb(244,155,2)" fg:x="14354" fg:w="5"/><text x="100.0345%" y="607.50"></text></g><g><title>y2021::d19::main::attempt_match (3,175 samples, 22.07%)</title><rect x="77.7685%" y="725" width="22.0716%" height="15" fill="rgb(215,81,35)" fg:x="11187" fg:w="3175"/><text x="78.0185%" y="735.50">y2021::d19::main::attempt_match</text></g><g><title>y2021::d19::scanner::Scanner::rotate (1,609 samples, 11.19%)</title><rect x="88.6548%" y="709" width="11.1853%" height="15" fill="rgb(206,55,2)" fg:x="12753" fg:w="1609"/><text x="88.9048%" y="719.50">y2021::d19::scan..</text></g><g><title>y2021::d19::scanner::Scanner::rotate_beacons (3 samples, 0.02%)</title><rect x="99.8193%" y="693" width="0.0209%" height="15" fill="rgb(231,2,34)" fg:x="14359" fg:w="3"/><text x="100.0693%" y="703.50"></text></g><g><title>y2021::d19::beacon::Beacon::rotate (3 samples, 0.02%)</title><rect x="99.8193%" y="677" width="0.0209%" height="15" fill="rgb(242,176,48)" fg:x="14359" fg:w="3"/><text x="100.0693%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="99.8471%" y="453" width="0.0209%" height="15" fill="rgb(249,31,36)" fg:x="14363" fg:w="3"/><text x="100.0971%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="99.8471%" y="437" width="0.0209%" height="15" fill="rgb(205,18,17)" fg:x="14363" fg:w="3"/><text x="100.0971%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.02%)</title><rect x="99.8471%" y="421" width="0.0209%" height="15" fill="rgb(254,130,5)" fg:x="14363" fg:w="3"/><text x="100.0971%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.03%)</title><rect x="99.8471%" y="469" width="0.0348%" height="15" fill="rgb(229,42,45)" fg:x="14363" fg:w="5"/><text x="100.0971%" y="479.50"></text></g><g><title>&lt;y2021::d19::beacon::Beacon as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="99.8679%" y="453" width="0.0139%" height="15" fill="rgb(245,95,25)" fg:x="14366" fg:w="2"/><text x="100.1179%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (2 samples, 0.01%)</title><rect x="99.8679%" y="437" width="0.0139%" height="15" fill="rgb(249,193,38)" fg:x="14366" fg:w="2"/><text x="100.1179%" y="447.50"></text></g><g><title>core::hash::Hasher::write_i64 (2 samples, 0.01%)</title><rect x="99.8679%" y="421" width="0.0139%" height="15" fill="rgb(241,140,43)" fg:x="14366" fg:w="2"/><text x="100.1179%" y="431.50"></text></g><g><title>core::hash::Hasher::write_u64 (2 samples, 0.01%)</title><rect x="99.8679%" y="405" width="0.0139%" height="15" fill="rgb(245,78,48)" fg:x="14366" fg:w="2"/><text x="100.1179%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="99.8679%" y="389" width="0.0139%" height="15" fill="rgb(214,92,39)" fg:x="14366" fg:w="2"/><text x="100.1179%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="99.8679%" y="373" width="0.0139%" height="15" fill="rgb(211,189,14)" fg:x="14366" fg:w="2"/><text x="100.1179%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="99.8679%" y="357" width="0.0139%" height="15" fill="rgb(218,7,24)" fg:x="14366" fg:w="2"/><text x="100.1179%" y="367.50"></text></g><g><title>std::panic::catch_unwind (13,911 samples, 96.70%)</title><rect x="3.1978%" y="901" width="96.7049%" height="15" fill="rgb(224,200,49)" fg:x="460" fg:w="13911"/><text x="3.4478%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (13,911 samples, 96.70%)</title><rect x="3.1978%" y="885" width="96.7049%" height="15" fill="rgb(218,210,14)" fg:x="460" fg:w="13911"/><text x="3.4478%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (13,911 samples, 96.70%)</title><rect x="3.1978%" y="869" width="96.7049%" height="15" fill="rgb(234,142,31)" fg:x="460" fg:w="13911"/><text x="3.4478%" y="879.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (13,911 samples, 96.70%)</title><rect x="3.1978%" y="853" width="96.7049%" height="15" fill="rgb(227,165,2)" fg:x="460" fg:w="13911"/><text x="3.4478%" y="863.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (13,911 samples, 96.70%)</title><rect x="3.1978%" y="837" width="96.7049%" height="15" fill="rgb(232,44,46)" fg:x="460" fg:w="13911"/><text x="3.4478%" y="847.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13,911 samples, 96.70%)</title><rect x="3.1978%" y="821" width="96.7049%" height="15" fill="rgb(236,149,47)" fg:x="460" fg:w="13911"/><text x="3.4478%" y="831.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (13,911 samples, 96.70%)</title><rect x="3.1978%" y="805" width="96.7049%" height="15" fill="rgb(227,45,31)" fg:x="460" fg:w="13911"/><text x="3.4478%" y="815.50">core::ops::function::FnOnce::call_once</text></g><g><title>y2021::main (13,911 samples, 96.70%)</title><rect x="3.1978%" y="789" width="96.7049%" height="15" fill="rgb(240,176,51)" fg:x="460" fg:w="13911"/><text x="3.4478%" y="799.50">y2021::main</text></g><g><title>y2021::d19::main::run (6,206 samples, 43.14%)</title><rect x="56.7605%" y="773" width="43.1422%" height="15" fill="rgb(249,146,41)" fg:x="8165" fg:w="6206"/><text x="57.0105%" y="783.50">y2021::d19::main::run</text></g><g><title>y2021::d19::main::p02 (3,210 samples, 22.31%)</title><rect x="77.5878%" y="757" width="22.3149%" height="15" fill="rgb(213,208,4)" fg:x="11161" fg:w="3210"/><text x="77.8378%" y="767.50">y2021::d19::main::p02</text></g><g><title>y2021::d19::main::build_chart (3,186 samples, 22.15%)</title><rect x="77.7546%" y="741" width="22.1481%" height="15" fill="rgb(245,84,36)" fg:x="11185" fg:w="3186"/><text x="78.0046%" y="751.50">y2021::d19::main::build_chart</text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors (9 samples, 0.06%)</title><rect x="99.8401%" y="725" width="0.0626%" height="15" fill="rgb(254,84,18)" fg:x="14362" fg:w="9"/><text x="100.0901%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.06%)</title><rect x="99.8401%" y="709" width="0.0626%" height="15" fill="rgb(225,38,54)" fg:x="14362" fg:w="9"/><text x="100.0901%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.06%)</title><rect x="99.8401%" y="693" width="0.0626%" height="15" fill="rgb(246,50,30)" fg:x="14362" fg:w="9"/><text x="100.0901%" y="703.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9 samples, 0.06%)</title><rect x="99.8401%" y="677" width="0.0626%" height="15" fill="rgb(246,148,9)" fg:x="14362" fg:w="9"/><text x="100.0901%" y="687.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9 samples, 0.06%)</title><rect x="99.8401%" y="661" width="0.0626%" height="15" fill="rgb(223,75,4)" fg:x="14362" fg:w="9"/><text x="100.0901%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 0.06%)</title><rect x="99.8401%" y="645" width="0.0626%" height="15" fill="rgb(239,148,41)" fg:x="14362" fg:w="9"/><text x="100.0901%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.06%)</title><rect x="99.8401%" y="629" width="0.0626%" height="15" fill="rgb(205,195,3)" fg:x="14362" fg:w="9"/><text x="100.0901%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.06%)</title><rect x="99.8401%" y="613" width="0.0626%" height="15" fill="rgb(254,161,1)" fg:x="14362" fg:w="9"/><text x="100.0901%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.06%)</title><rect x="99.8401%" y="597" width="0.0626%" height="15" fill="rgb(211,229,8)" fg:x="14362" fg:w="9"/><text x="100.0901%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.06%)</title><rect x="99.8401%" y="581" width="0.0626%" height="15" fill="rgb(220,97,9)" fg:x="14362" fg:w="9"/><text x="100.0901%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.06%)</title><rect x="99.8401%" y="565" width="0.0626%" height="15" fill="rgb(240,218,8)" fg:x="14362" fg:w="9"/><text x="100.0901%" y="575.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (9 samples, 0.06%)</title><rect x="99.8401%" y="549" width="0.0626%" height="15" fill="rgb(250,44,0)" fg:x="14362" fg:w="9"/><text x="100.0901%" y="559.50"></text></g><g><title>y2021::d19::scanner::Scanner::matching_vectors::{{closure}} (8 samples, 0.06%)</title><rect x="99.8471%" y="533" width="0.0556%" height="15" fill="rgb(236,41,53)" fg:x="14363" fg:w="8"/><text x="100.0971%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (8 samples, 0.06%)</title><rect x="99.8471%" y="517" width="0.0556%" height="15" fill="rgb(218,227,13)" fg:x="14363" fg:w="8"/><text x="100.0971%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (8 samples, 0.06%)</title><rect x="99.8471%" y="501" width="0.0556%" height="15" fill="rgb(217,94,32)" fg:x="14363" fg:w="8"/><text x="100.0971%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.06%)</title><rect x="99.8471%" y="485" width="0.0556%" height="15" fill="rgb(213,217,12)" fg:x="14363" fg:w="8"/><text x="100.0971%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.02%)</title><rect x="99.8818%" y="469" width="0.0209%" height="15" fill="rgb(229,13,46)" fg:x="14368" fg:w="3"/><text x="100.1318%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="99.8818%" y="453" width="0.0209%" height="15" fill="rgb(243,139,5)" fg:x="14368" fg:w="3"/><text x="100.1318%" y="463.50"></text></g><g><title>__libc_start_main (13,912 samples, 96.71%)</title><rect x="3.1978%" y="1013" width="96.7119%" height="15" fill="rgb(249,38,45)" fg:x="460" fg:w="13912"/><text x="3.4478%" y="1023.50">__libc_start_main</text></g><g><title>main (13,912 samples, 96.71%)</title><rect x="3.1978%" y="997" width="96.7119%" height="15" fill="rgb(216,70,11)" fg:x="460" fg:w="13912"/><text x="3.4478%" y="1007.50">main</text></g><g><title>std::rt::lang_start_internal (13,912 samples, 96.71%)</title><rect x="3.1978%" y="981" width="96.7119%" height="15" fill="rgb(253,101,25)" fg:x="460" fg:w="13912"/><text x="3.4478%" y="991.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (13,912 samples, 96.71%)</title><rect x="3.1978%" y="965" width="96.7119%" height="15" fill="rgb(207,197,30)" fg:x="460" fg:w="13912"/><text x="3.4478%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (13,912 samples, 96.71%)</title><rect x="3.1978%" y="949" width="96.7119%" height="15" fill="rgb(238,87,13)" fg:x="460" fg:w="13912"/><text x="3.4478%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (13,912 samples, 96.71%)</title><rect x="3.1978%" y="933" width="96.7119%" height="15" fill="rgb(215,155,8)" fg:x="460" fg:w="13912"/><text x="3.4478%" y="943.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (13,912 samples, 96.71%)</title><rect x="3.1978%" y="917" width="96.7119%" height="15" fill="rgb(239,166,38)" fg:x="460" fg:w="13912"/><text x="3.4478%" y="927.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>_dl_start_final (2 samples, 0.01%)</title><rect x="99.9096%" y="997" width="0.0139%" height="15" fill="rgb(240,194,35)" fg:x="14372" fg:w="2"/><text x="100.1596%" y="1007.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.01%)</title><rect x="99.9096%" y="981" width="0.0139%" height="15" fill="rgb(219,10,44)" fg:x="14372" fg:w="2"/><text x="100.1596%" y="991.50"></text></g><g><title>dl_main (2 samples, 0.01%)</title><rect x="99.9096%" y="965" width="0.0139%" height="15" fill="rgb(251,220,35)" fg:x="14372" fg:w="2"/><text x="100.1596%" y="975.50"></text></g><g><title>_start (13,915 samples, 96.73%)</title><rect x="3.1978%" y="1029" width="96.7327%" height="15" fill="rgb(218,117,13)" fg:x="460" fg:w="13915"/><text x="3.4478%" y="1039.50">_start</text></g><g><title>_dl_start (3 samples, 0.02%)</title><rect x="99.9096%" y="1013" width="0.0209%" height="15" fill="rgb(221,213,40)" fg:x="14372" fg:w="3"/><text x="100.1596%" y="1023.50"></text></g><g><title>tlb_finish_mmu (3 samples, 0.02%)</title><rect x="99.9374%" y="917" width="0.0209%" height="15" fill="rgb(251,224,35)" fg:x="14376" fg:w="3"/><text x="100.1874%" y="927.50"></text></g><g><title>tlb_flush_mmu (3 samples, 0.02%)</title><rect x="99.9374%" y="901" width="0.0209%" height="15" fill="rgb(241,33,39)" fg:x="14376" fg:w="3"/><text x="100.1874%" y="911.50"></text></g><g><title>free_pages_and_swap_cache (3 samples, 0.02%)</title><rect x="99.9374%" y="885" width="0.0209%" height="15" fill="rgb(222,74,17)" fg:x="14376" fg:w="3"/><text x="100.1874%" y="895.50"></text></g><g><title>release_pages (3 samples, 0.02%)</title><rect x="99.9374%" y="869" width="0.0209%" height="15" fill="rgb(225,103,0)" fg:x="14376" fg:w="3"/><text x="100.1874%" y="879.50"></text></g><g><title>unmap_page_range (4 samples, 0.03%)</title><rect x="99.9583%" y="885" width="0.0278%" height="15" fill="rgb(240,0,12)" fg:x="14379" fg:w="4"/><text x="100.2083%" y="895.50"></text></g><g><title>zap_pte_range.isra.0 (4 samples, 0.03%)</title><rect x="99.9583%" y="869" width="0.0278%" height="15" fill="rgb(233,213,37)" fg:x="14379" fg:w="4"/><text x="100.2083%" y="879.50"></text></g><g><title>mmput (8 samples, 0.06%)</title><rect x="99.9374%" y="949" width="0.0556%" height="15" fill="rgb(225,84,52)" fg:x="14376" fg:w="8"/><text x="100.1874%" y="959.50"></text></g><g><title>exit_mmap (8 samples, 0.06%)</title><rect x="99.9374%" y="933" width="0.0556%" height="15" fill="rgb(247,160,51)" fg:x="14376" fg:w="8"/><text x="100.1874%" y="943.50"></text></g><g><title>unmap_vmas (5 samples, 0.03%)</title><rect x="99.9583%" y="917" width="0.0348%" height="15" fill="rgb(244,60,51)" fg:x="14379" fg:w="5"/><text x="100.2083%" y="927.50"></text></g><g><title>unmap_single_vma (5 samples, 0.03%)</title><rect x="99.9583%" y="901" width="0.0348%" height="15" fill="rgb(233,114,7)" fg:x="14379" fg:w="5"/><text x="100.2083%" y="911.50"></text></g><g><title>all (14,385 samples, 100%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(246,136,16)" fg:x="0" fg:w="14385"/><text x="0.2500%" y="1071.50"></text></g><g><title>y2021 (14,377 samples, 99.94%)</title><rect x="0.0556%" y="1045" width="99.9444%" height="15" fill="rgb(243,114,45)" fg:x="8" fg:w="14377"/><text x="0.3056%" y="1055.50">y2021</text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.07%)</title><rect x="99.9305%" y="1029" width="0.0695%" height="15" fill="rgb(247,183,43)" fg:x="14375" fg:w="10"/><text x="100.1805%" y="1039.50"></text></g><g><title>do_syscall_64 (10 samples, 0.07%)</title><rect x="99.9305%" y="1013" width="0.0695%" height="15" fill="rgb(251,210,42)" fg:x="14375" fg:w="10"/><text x="100.1805%" y="1023.50"></text></g><g><title>__x64_sys_exit_group (9 samples, 0.06%)</title><rect x="99.9374%" y="997" width="0.0626%" height="15" fill="rgb(221,88,35)" fg:x="14376" fg:w="9"/><text x="100.1874%" y="1007.50"></text></g><g><title>do_group_exit (9 samples, 0.06%)</title><rect x="99.9374%" y="981" width="0.0626%" height="15" fill="rgb(242,21,20)" fg:x="14376" fg:w="9"/><text x="100.1874%" y="991.50"></text></g><g><title>do_exit (9 samples, 0.06%)</title><rect x="99.9374%" y="965" width="0.0626%" height="15" fill="rgb(233,226,36)" fg:x="14376" fg:w="9"/><text x="100.1874%" y="975.50"></text></g></svg></svg>