<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1558" onload="init(evt)" viewBox="0 0 1200 1558" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1558" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1541.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1541.00"> </text><svg id="frames" x="10" width="1180" total_samples="2310"><g><title>perf (8 samples, 0.35%)</title><rect x="0.0000%" y="1493" width="0.3463%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1503.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.35%)</title><rect x="0.0000%" y="1477" width="0.3463%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1487.50"></text></g><g><title>do_syscall_64 (8 samples, 0.35%)</title><rect x="0.0000%" y="1461" width="0.3463%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1471.50"></text></g><g><title>__x64_sys_execve (8 samples, 0.35%)</title><rect x="0.0000%" y="1445" width="0.3463%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1455.50"></text></g><g><title>do_execveat_common.isra.0 (8 samples, 0.35%)</title><rect x="0.0000%" y="1429" width="0.3463%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1439.50"></text></g><g><title>bprm_execve (8 samples, 0.35%)</title><rect x="0.0000%" y="1413" width="0.3463%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1423.50"></text></g><g><title>exec_binprm (8 samples, 0.35%)</title><rect x="0.0000%" y="1397" width="0.3463%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1407.50"></text></g><g><title>load_elf_binary (8 samples, 0.35%)</title><rect x="0.0000%" y="1381" width="0.3463%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1391.50"></text></g><g><title>begin_new_exec (8 samples, 0.35%)</title><rect x="0.0000%" y="1365" width="0.3463%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1375.50"></text></g><g><title>__set_task_comm (8 samples, 0.35%)</title><rect x="0.0000%" y="1349" width="0.3463%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1359.50"></text></g><g><title>perf_event_comm (8 samples, 0.35%)</title><rect x="0.0000%" y="1333" width="0.3463%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1343.50"></text></g><g><title>perf_iterate_sb (8 samples, 0.35%)</title><rect x="0.0000%" y="1317" width="0.3463%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1327.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.04%)</title><rect x="0.3463%" y="1445" width="0.0433%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="1"/><text x="0.5963%" y="1455.50"></text></g><g><title>[[stack]] (2 samples, 0.09%)</title><rect x="0.3463%" y="1477" width="0.0866%" height="15" fill="rgb(206,188,39)" fg:x="8" fg:w="2"/><text x="0.5963%" y="1487.50"></text></g><g><title>_int_malloc (2 samples, 0.09%)</title><rect x="0.3463%" y="1461" width="0.0866%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="2"/><text x="0.5963%" y="1471.50"></text></g><g><title>sync_regs (1 samples, 0.04%)</title><rect x="0.3896%" y="1445" width="0.0433%" height="15" fill="rgb(231,73,38)" fg:x="9" fg:w="1"/><text x="0.6396%" y="1455.50"></text></g><g><title>y2021::d09::main::run (1 samples, 0.04%)</title><rect x="0.4329%" y="1221" width="0.0433%" height="15" fill="rgb(225,20,46)" fg:x="10" fg:w="1"/><text x="0.6829%" y="1231.50"></text></g><g><title>y2021::d09::main::p02 (1 samples, 0.04%)</title><rect x="0.4329%" y="1205" width="0.0433%" height="15" fill="rgb(210,31,41)" fg:x="10" fg:w="1"/><text x="0.6829%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="0.4329%" y="1189" width="0.0433%" height="15" fill="rgb(221,200,47)" fg:x="10" fg:w="1"/><text x="0.6829%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="0.4329%" y="1173" width="0.0433%" height="15" fill="rgb(226,26,5)" fg:x="10" fg:w="1"/><text x="0.6829%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="0.4329%" y="1157" width="0.0433%" height="15" fill="rgb(249,33,26)" fg:x="10" fg:w="1"/><text x="0.6829%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="0.4329%" y="1141" width="0.0433%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="1"/><text x="0.6829%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="0.4329%" y="1125" width="0.0433%" height="15" fill="rgb(221,5,38)" fg:x="10" fg:w="1"/><text x="0.6829%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="0.4329%" y="1109" width="0.0433%" height="15" fill="rgb(247,18,42)" fg:x="10" fg:w="1"/><text x="0.6829%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="0.4329%" y="1093" width="0.0433%" height="15" fill="rgb(241,131,45)" fg:x="10" fg:w="1"/><text x="0.6829%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="0.4329%" y="1077" width="0.0433%" height="15" fill="rgb(249,31,29)" fg:x="10" fg:w="1"/><text x="0.6829%" y="1087.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="0.4329%" y="1061" width="0.0433%" height="15" fill="rgb(225,111,53)" fg:x="10" fg:w="1"/><text x="0.6829%" y="1071.50"></text></g><g><title>y2021::d09::main::p02::{{closure}} (1 samples, 0.04%)</title><rect x="0.4329%" y="1045" width="0.0433%" height="15" fill="rgb(238,160,17)" fg:x="10" fg:w="1"/><text x="0.6829%" y="1055.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="1029" width="0.0433%" height="15" fill="rgb(214,148,48)" fg:x="10" fg:w="1"/><text x="0.6829%" y="1039.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="1013" width="0.0433%" height="15" fill="rgb(232,36,49)" fg:x="10" fg:w="1"/><text x="0.6829%" y="1023.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="997" width="0.0433%" height="15" fill="rgb(209,103,24)" fg:x="10" fg:w="1"/><text x="0.6829%" y="1007.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="981" width="0.0433%" height="15" fill="rgb(229,88,8)" fg:x="10" fg:w="1"/><text x="0.6829%" y="991.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="965" width="0.0433%" height="15" fill="rgb(213,181,19)" fg:x="10" fg:w="1"/><text x="0.6829%" y="975.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="949" width="0.0433%" height="15" fill="rgb(254,191,54)" fg:x="10" fg:w="1"/><text x="0.6829%" y="959.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="933" width="0.0433%" height="15" fill="rgb(241,83,37)" fg:x="10" fg:w="1"/><text x="0.6829%" y="943.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="917" width="0.0433%" height="15" fill="rgb(233,36,39)" fg:x="10" fg:w="1"/><text x="0.6829%" y="927.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="901" width="0.0433%" height="15" fill="rgb(226,3,54)" fg:x="10" fg:w="1"/><text x="0.6829%" y="911.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="885" width="0.0433%" height="15" fill="rgb(245,192,40)" fg:x="10" fg:w="1"/><text x="0.6829%" y="895.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="869" width="0.0433%" height="15" fill="rgb(238,167,29)" fg:x="10" fg:w="1"/><text x="0.6829%" y="879.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="853" width="0.0433%" height="15" fill="rgb(232,182,51)" fg:x="10" fg:w="1"/><text x="0.6829%" y="863.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="837" width="0.0433%" height="15" fill="rgb(231,60,39)" fg:x="10" fg:w="1"/><text x="0.6829%" y="847.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="821" width="0.0433%" height="15" fill="rgb(208,69,12)" fg:x="10" fg:w="1"/><text x="0.6829%" y="831.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="805" width="0.0433%" height="15" fill="rgb(235,93,37)" fg:x="10" fg:w="1"/><text x="0.6829%" y="815.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="789" width="0.0433%" height="15" fill="rgb(213,116,39)" fg:x="10" fg:w="1"/><text x="0.6829%" y="799.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="773" width="0.0433%" height="15" fill="rgb(222,207,29)" fg:x="10" fg:w="1"/><text x="0.6829%" y="783.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="757" width="0.0433%" height="15" fill="rgb(206,96,30)" fg:x="10" fg:w="1"/><text x="0.6829%" y="767.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="741" width="0.0433%" height="15" fill="rgb(218,138,4)" fg:x="10" fg:w="1"/><text x="0.6829%" y="751.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="725" width="0.0433%" height="15" fill="rgb(250,191,14)" fg:x="10" fg:w="1"/><text x="0.6829%" y="735.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="709" width="0.0433%" height="15" fill="rgb(239,60,40)" fg:x="10" fg:w="1"/><text x="0.6829%" y="719.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="693" width="0.0433%" height="15" fill="rgb(206,27,48)" fg:x="10" fg:w="1"/><text x="0.6829%" y="703.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="677" width="0.0433%" height="15" fill="rgb(225,35,8)" fg:x="10" fg:w="1"/><text x="0.6829%" y="687.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="661" width="0.0433%" height="15" fill="rgb(250,213,24)" fg:x="10" fg:w="1"/><text x="0.6829%" y="671.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="645" width="0.0433%" height="15" fill="rgb(247,123,22)" fg:x="10" fg:w="1"/><text x="0.6829%" y="655.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="629" width="0.0433%" height="15" fill="rgb(231,138,38)" fg:x="10" fg:w="1"/><text x="0.6829%" y="639.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="613" width="0.0433%" height="15" fill="rgb(231,145,46)" fg:x="10" fg:w="1"/><text x="0.6829%" y="623.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="597" width="0.0433%" height="15" fill="rgb(251,118,11)" fg:x="10" fg:w="1"/><text x="0.6829%" y="607.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="581" width="0.0433%" height="15" fill="rgb(217,147,25)" fg:x="10" fg:w="1"/><text x="0.6829%" y="591.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="565" width="0.0433%" height="15" fill="rgb(247,81,37)" fg:x="10" fg:w="1"/><text x="0.6829%" y="575.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="549" width="0.0433%" height="15" fill="rgb(209,12,38)" fg:x="10" fg:w="1"/><text x="0.6829%" y="559.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="533" width="0.0433%" height="15" fill="rgb(227,1,9)" fg:x="10" fg:w="1"/><text x="0.6829%" y="543.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="517" width="0.0433%" height="15" fill="rgb(248,47,43)" fg:x="10" fg:w="1"/><text x="0.6829%" y="527.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="501" width="0.0433%" height="15" fill="rgb(221,10,30)" fg:x="10" fg:w="1"/><text x="0.6829%" y="511.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="485" width="0.0433%" height="15" fill="rgb(210,229,1)" fg:x="10" fg:w="1"/><text x="0.6829%" y="495.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="469" width="0.0433%" height="15" fill="rgb(222,148,37)" fg:x="10" fg:w="1"/><text x="0.6829%" y="479.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="453" width="0.0433%" height="15" fill="rgb(234,67,33)" fg:x="10" fg:w="1"/><text x="0.6829%" y="463.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="437" width="0.0433%" height="15" fill="rgb(247,98,35)" fg:x="10" fg:w="1"/><text x="0.6829%" y="447.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="421" width="0.0433%" height="15" fill="rgb(247,138,52)" fg:x="10" fg:w="1"/><text x="0.6829%" y="431.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="405" width="0.0433%" height="15" fill="rgb(213,79,30)" fg:x="10" fg:w="1"/><text x="0.6829%" y="415.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="389" width="0.0433%" height="15" fill="rgb(246,177,23)" fg:x="10" fg:w="1"/><text x="0.6829%" y="399.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="373" width="0.0433%" height="15" fill="rgb(230,62,27)" fg:x="10" fg:w="1"/><text x="0.6829%" y="383.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="357" width="0.0433%" height="15" fill="rgb(216,154,8)" fg:x="10" fg:w="1"/><text x="0.6829%" y="367.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="341" width="0.0433%" height="15" fill="rgb(244,35,45)" fg:x="10" fg:w="1"/><text x="0.6829%" y="351.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="325" width="0.0433%" height="15" fill="rgb(251,115,12)" fg:x="10" fg:w="1"/><text x="0.6829%" y="335.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="309" width="0.0433%" height="15" fill="rgb(240,54,50)" fg:x="10" fg:w="1"/><text x="0.6829%" y="319.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="293" width="0.0433%" height="15" fill="rgb(233,84,52)" fg:x="10" fg:w="1"/><text x="0.6829%" y="303.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="277" width="0.0433%" height="15" fill="rgb(207,117,47)" fg:x="10" fg:w="1"/><text x="0.6829%" y="287.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="261" width="0.0433%" height="15" fill="rgb(249,43,39)" fg:x="10" fg:w="1"/><text x="0.6829%" y="271.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="245" width="0.0433%" height="15" fill="rgb(209,38,44)" fg:x="10" fg:w="1"/><text x="0.6829%" y="255.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="229" width="0.0433%" height="15" fill="rgb(236,212,23)" fg:x="10" fg:w="1"/><text x="0.6829%" y="239.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="213" width="0.0433%" height="15" fill="rgb(242,79,21)" fg:x="10" fg:w="1"/><text x="0.6829%" y="223.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="0.4329%" y="197" width="0.0433%" height="15" fill="rgb(211,96,35)" fg:x="10" fg:w="1"/><text x="0.6829%" y="207.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.04%)</title><rect x="0.4329%" y="181" width="0.0433%" height="15" fill="rgb(253,215,40)" fg:x="10" fg:w="1"/><text x="0.6829%" y="191.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.04%)</title><rect x="0.4329%" y="165" width="0.0433%" height="15" fill="rgb(211,81,21)" fg:x="10" fg:w="1"/><text x="0.6829%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.04%)</title><rect x="0.4329%" y="149" width="0.0433%" height="15" fill="rgb(208,190,38)" fg:x="10" fg:w="1"/><text x="0.6829%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="0.4329%" y="133" width="0.0433%" height="15" fill="rgb(235,213,38)" fg:x="10" fg:w="1"/><text x="0.6829%" y="143.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="0.4329%" y="117" width="0.0433%" height="15" fill="rgb(237,122,38)" fg:x="10" fg:w="1"/><text x="0.6829%" y="127.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="0.4329%" y="101" width="0.0433%" height="15" fill="rgb(244,218,35)" fg:x="10" fg:w="1"/><text x="0.6829%" y="111.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="0.4329%" y="85" width="0.0433%" height="15" fill="rgb(240,68,47)" fg:x="10" fg:w="1"/><text x="0.6829%" y="95.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="0.4329%" y="69" width="0.0433%" height="15" fill="rgb(210,16,53)" fg:x="10" fg:w="1"/><text x="0.6829%" y="79.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="0.4329%" y="53" width="0.0433%" height="15" fill="rgb(235,124,12)" fg:x="10" fg:w="1"/><text x="0.6829%" y="63.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.04%)</title><rect x="0.4329%" y="37" width="0.0433%" height="15" fill="rgb(224,169,11)" fg:x="10" fg:w="1"/><text x="0.6829%" y="47.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="0.5628%" y="549" width="0.0433%" height="15" fill="rgb(250,166,2)" fg:x="13" fg:w="1"/><text x="0.8128%" y="559.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="0.5628%" y="533" width="0.0433%" height="15" fill="rgb(242,216,29)" fg:x="13" fg:w="1"/><text x="0.8128%" y="543.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="0.5628%" y="517" width="0.0433%" height="15" fill="rgb(230,116,27)" fg:x="13" fg:w="1"/><text x="0.8128%" y="527.50"></text></g><g><title>rmqueue (1 samples, 0.04%)</title><rect x="0.5628%" y="501" width="0.0433%" height="15" fill="rgb(228,99,48)" fg:x="13" fg:w="1"/><text x="0.8128%" y="511.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.09%)</title><rect x="0.5628%" y="645" width="0.0866%" height="15" fill="rgb(253,11,6)" fg:x="13" fg:w="2"/><text x="0.8128%" y="655.50"></text></g><g><title>exc_page_fault (2 samples, 0.09%)</title><rect x="0.5628%" y="629" width="0.0866%" height="15" fill="rgb(247,143,39)" fg:x="13" fg:w="2"/><text x="0.8128%" y="639.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.09%)</title><rect x="0.5628%" y="613" width="0.0866%" height="15" fill="rgb(236,97,10)" fg:x="13" fg:w="2"/><text x="0.8128%" y="623.50"></text></g><g><title>handle_mm_fault (2 samples, 0.09%)</title><rect x="0.5628%" y="597" width="0.0866%" height="15" fill="rgb(233,208,19)" fg:x="13" fg:w="2"/><text x="0.8128%" y="607.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.09%)</title><rect x="0.5628%" y="581" width="0.0866%" height="15" fill="rgb(216,164,2)" fg:x="13" fg:w="2"/><text x="0.8128%" y="591.50"></text></g><g><title>do_anonymous_page (2 samples, 0.09%)</title><rect x="0.5628%" y="565" width="0.0866%" height="15" fill="rgb(220,129,5)" fg:x="13" fg:w="2"/><text x="0.8128%" y="575.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.04%)</title><rect x="0.6061%" y="549" width="0.0433%" height="15" fill="rgb(242,17,10)" fg:x="14" fg:w="1"/><text x="0.8561%" y="559.50"></text></g><g><title>lru_cache_add (1 samples, 0.04%)</title><rect x="0.6061%" y="533" width="0.0433%" height="15" fill="rgb(242,107,0)" fg:x="14" fg:w="1"/><text x="0.8561%" y="543.50"></text></g><g><title>__pagevec_lru_add (1 samples, 0.04%)</title><rect x="0.6061%" y="517" width="0.0433%" height="15" fill="rgb(251,28,31)" fg:x="14" fg:w="1"/><text x="0.8561%" y="527.50"></text></g><g><title>alloc::fmt::format (5 samples, 0.22%)</title><rect x="0.4762%" y="965" width="0.2165%" height="15" fill="rgb(233,223,10)" fg:x="11" fg:w="5"/><text x="0.7262%" y="975.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.22%)</title><rect x="0.4762%" y="949" width="0.2165%" height="15" fill="rgb(215,21,27)" fg:x="11" fg:w="5"/><text x="0.7262%" y="959.50"></text></g><g><title>core::fmt::write (5 samples, 0.22%)</title><rect x="0.4762%" y="933" width="0.2165%" height="15" fill="rgb(232,23,21)" fg:x="11" fg:w="5"/><text x="0.7262%" y="943.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.22%)</title><rect x="0.4762%" y="917" width="0.2165%" height="15" fill="rgb(244,5,23)" fg:x="11" fg:w="5"/><text x="0.7262%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.22%)</title><rect x="0.4762%" y="901" width="0.2165%" height="15" fill="rgb(226,81,46)" fg:x="11" fg:w="5"/><text x="0.7262%" y="911.50"></text></g><g><title>alloc::string::String::push_str (5 samples, 0.22%)</title><rect x="0.4762%" y="885" width="0.2165%" height="15" fill="rgb(247,70,30)" fg:x="11" fg:w="5"/><text x="0.7262%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.22%)</title><rect x="0.4762%" y="869" width="0.2165%" height="15" fill="rgb(212,68,19)" fg:x="11" fg:w="5"/><text x="0.7262%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.22%)</title><rect x="0.4762%" y="853" width="0.2165%" height="15" fill="rgb(240,187,13)" fg:x="11" fg:w="5"/><text x="0.7262%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.22%)</title><rect x="0.4762%" y="837" width="0.2165%" height="15" fill="rgb(223,113,26)" fg:x="11" fg:w="5"/><text x="0.7262%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.22%)</title><rect x="0.4762%" y="821" width="0.2165%" height="15" fill="rgb(206,192,2)" fg:x="11" fg:w="5"/><text x="0.7262%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.22%)</title><rect x="0.4762%" y="805" width="0.2165%" height="15" fill="rgb(241,108,4)" fg:x="11" fg:w="5"/><text x="0.7262%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.22%)</title><rect x="0.4762%" y="789" width="0.2165%" height="15" fill="rgb(247,173,49)" fg:x="11" fg:w="5"/><text x="0.7262%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.22%)</title><rect x="0.4762%" y="773" width="0.2165%" height="15" fill="rgb(224,114,35)" fg:x="11" fg:w="5"/><text x="0.7262%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.22%)</title><rect x="0.4762%" y="757" width="0.2165%" height="15" fill="rgb(245,159,27)" fg:x="11" fg:w="5"/><text x="0.7262%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.22%)</title><rect x="0.4762%" y="741" width="0.2165%" height="15" fill="rgb(245,172,44)" fg:x="11" fg:w="5"/><text x="0.7262%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.22%)</title><rect x="0.4762%" y="725" width="0.2165%" height="15" fill="rgb(236,23,11)" fg:x="11" fg:w="5"/><text x="0.7262%" y="735.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.22%)</title><rect x="0.4762%" y="709" width="0.2165%" height="15" fill="rgb(205,117,38)" fg:x="11" fg:w="5"/><text x="0.7262%" y="719.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.22%)</title><rect x="0.4762%" y="693" width="0.2165%" height="15" fill="rgb(237,72,25)" fg:x="11" fg:w="5"/><text x="0.7262%" y="703.50"></text></g><g><title>_int_realloc (5 samples, 0.22%)</title><rect x="0.4762%" y="677" width="0.2165%" height="15" fill="rgb(244,70,9)" fg:x="11" fg:w="5"/><text x="0.7262%" y="687.50"></text></g><g><title>_int_malloc (5 samples, 0.22%)</title><rect x="0.4762%" y="661" width="0.2165%" height="15" fill="rgb(217,125,39)" fg:x="11" fg:w="5"/><text x="0.7262%" y="671.50"></text></g><g><title>sysmalloc (1 samples, 0.04%)</title><rect x="0.6494%" y="645" width="0.0433%" height="15" fill="rgb(235,36,10)" fg:x="15" fg:w="1"/><text x="0.8994%" y="655.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.04%)</title><rect x="0.6494%" y="629" width="0.0433%" height="15" fill="rgb(251,123,47)" fg:x="15" fg:w="1"/><text x="0.8994%" y="639.50"></text></g><g><title>exc_page_fault (1 samples, 0.04%)</title><rect x="0.6494%" y="613" width="0.0433%" height="15" fill="rgb(221,13,13)" fg:x="15" fg:w="1"/><text x="0.8994%" y="623.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="0.6494%" y="597" width="0.0433%" height="15" fill="rgb(238,131,9)" fg:x="15" fg:w="1"/><text x="0.8994%" y="607.50"></text></g><g><title>handle_mm_fault (1 samples, 0.04%)</title><rect x="0.6494%" y="581" width="0.0433%" height="15" fill="rgb(211,50,8)" fg:x="15" fg:w="1"/><text x="0.8994%" y="591.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="0.6494%" y="565" width="0.0433%" height="15" fill="rgb(245,182,24)" fg:x="15" fg:w="1"/><text x="0.8994%" y="575.50"></text></g><g><title>do_anonymous_page (1 samples, 0.04%)</title><rect x="0.6494%" y="549" width="0.0433%" height="15" fill="rgb(242,14,37)" fg:x="15" fg:w="1"/><text x="0.8994%" y="559.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="0.6494%" y="533" width="0.0433%" height="15" fill="rgb(246,228,12)" fg:x="15" fg:w="1"/><text x="0.8994%" y="543.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="0.6494%" y="517" width="0.0433%" height="15" fill="rgb(213,55,15)" fg:x="15" fg:w="1"/><text x="0.8994%" y="527.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="0.6494%" y="501" width="0.0433%" height="15" fill="rgb(209,9,3)" fg:x="15" fg:w="1"/><text x="0.8994%" y="511.50"></text></g><g><title>clear_page_rep (1 samples, 0.04%)</title><rect x="0.6494%" y="485" width="0.0433%" height="15" fill="rgb(230,59,30)" fg:x="15" fg:w="1"/><text x="0.8994%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="0.6926%" y="741" width="0.0433%" height="15" fill="rgb(209,121,21)" fg:x="16" fg:w="1"/><text x="0.9426%" y="751.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.09%)</title><rect x="0.6926%" y="949" width="0.0866%" height="15" fill="rgb(220,109,13)" fg:x="16" fg:w="2"/><text x="0.9426%" y="959.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.09%)</title><rect x="0.6926%" y="933" width="0.0866%" height="15" fill="rgb(232,18,1)" fg:x="16" fg:w="2"/><text x="0.9426%" y="943.50"></text></g><g><title>core::fmt::write (2 samples, 0.09%)</title><rect x="0.6926%" y="917" width="0.0866%" height="15" fill="rgb(215,41,42)" fg:x="16" fg:w="2"/><text x="0.9426%" y="927.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.09%)</title><rect x="0.6926%" y="901" width="0.0866%" height="15" fill="rgb(224,123,36)" fg:x="16" fg:w="2"/><text x="0.9426%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.09%)</title><rect x="0.6926%" y="885" width="0.0866%" height="15" fill="rgb(240,125,3)" fg:x="16" fg:w="2"/><text x="0.9426%" y="895.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.09%)</title><rect x="0.6926%" y="869" width="0.0866%" height="15" fill="rgb(205,98,50)" fg:x="16" fg:w="2"/><text x="0.9426%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.09%)</title><rect x="0.6926%" y="853" width="0.0866%" height="15" fill="rgb(205,185,37)" fg:x="16" fg:w="2"/><text x="0.9426%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.09%)</title><rect x="0.6926%" y="837" width="0.0866%" height="15" fill="rgb(238,207,15)" fg:x="16" fg:w="2"/><text x="0.9426%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.09%)</title><rect x="0.6926%" y="821" width="0.0866%" height="15" fill="rgb(213,199,42)" fg:x="16" fg:w="2"/><text x="0.9426%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.09%)</title><rect x="0.6926%" y="805" width="0.0866%" height="15" fill="rgb(235,201,11)" fg:x="16" fg:w="2"/><text x="0.9426%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.09%)</title><rect x="0.6926%" y="789" width="0.0866%" height="15" fill="rgb(207,46,11)" fg:x="16" fg:w="2"/><text x="0.9426%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.09%)</title><rect x="0.6926%" y="773" width="0.0866%" height="15" fill="rgb(241,35,35)" fg:x="16" fg:w="2"/><text x="0.9426%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.09%)</title><rect x="0.6926%" y="757" width="0.0866%" height="15" fill="rgb(243,32,47)" fg:x="16" fg:w="2"/><text x="0.9426%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="0.7359%" y="741" width="0.0433%" height="15" fill="rgb(247,202,23)" fg:x="17" fg:w="1"/><text x="0.9859%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="0.7359%" y="725" width="0.0433%" height="15" fill="rgb(219,102,11)" fg:x="17" fg:w="1"/><text x="0.9859%" y="735.50"></text></g><g><title>tcache_get (1 samples, 0.04%)</title><rect x="0.7359%" y="709" width="0.0433%" height="15" fill="rgb(243,110,44)" fg:x="17" fg:w="1"/><text x="0.9859%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.04%)</title><rect x="0.7792%" y="885" width="0.0433%" height="15" fill="rgb(222,74,54)" fg:x="18" fg:w="1"/><text x="1.0292%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.04%)</title><rect x="0.7792%" y="869" width="0.0433%" height="15" fill="rgb(216,99,12)" fg:x="18" fg:w="1"/><text x="1.0292%" y="879.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="0.7792%" y="853" width="0.0433%" height="15" fill="rgb(226,22,26)" fg:x="18" fg:w="1"/><text x="1.0292%" y="863.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.09%)</title><rect x="0.7792%" y="949" width="0.0866%" height="15" fill="rgb(217,163,10)" fg:x="18" fg:w="2"/><text x="1.0292%" y="959.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.09%)</title><rect x="0.7792%" y="933" width="0.0866%" height="15" fill="rgb(213,25,53)" fg:x="18" fg:w="2"/><text x="1.0292%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.09%)</title><rect x="0.7792%" y="917" width="0.0866%" height="15" fill="rgb(252,105,26)" fg:x="18" fg:w="2"/><text x="1.0292%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.09%)</title><rect x="0.7792%" y="901" width="0.0866%" height="15" fill="rgb(220,39,43)" fg:x="18" fg:w="2"/><text x="1.0292%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.04%)</title><rect x="0.8225%" y="885" width="0.0433%" height="15" fill="rgb(229,68,48)" fg:x="19" fg:w="1"/><text x="1.0725%" y="895.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.04%)</title><rect x="0.8225%" y="869" width="0.0433%" height="15" fill="rgb(252,8,32)" fg:x="19" fg:w="1"/><text x="1.0725%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="0.8658%" y="805" width="0.0433%" height="15" fill="rgb(223,20,43)" fg:x="20" fg:w="1"/><text x="1.1158%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="0.8658%" y="789" width="0.0433%" height="15" fill="rgb(229,81,49)" fg:x="20" fg:w="1"/><text x="1.1158%" y="799.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.04%)</title><rect x="0.8658%" y="773" width="0.0433%" height="15" fill="rgb(236,28,36)" fg:x="20" fg:w="1"/><text x="1.1158%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="0.8658%" y="757" width="0.0433%" height="15" fill="rgb(249,185,26)" fg:x="20" fg:w="1"/><text x="1.1158%" y="767.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="0.8658%" y="741" width="0.0433%" height="15" fill="rgb(249,174,33)" fg:x="20" fg:w="1"/><text x="1.1158%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="0.8658%" y="725" width="0.0433%" height="15" fill="rgb(233,201,37)" fg:x="20" fg:w="1"/><text x="1.1158%" y="735.50"></text></g><g><title>__libc_start_main (12 samples, 0.52%)</title><rect x="0.4329%" y="1461" width="0.5195%" height="15" fill="rgb(221,78,26)" fg:x="10" fg:w="12"/><text x="0.6829%" y="1471.50"></text></g><g><title>main (12 samples, 0.52%)</title><rect x="0.4329%" y="1445" width="0.5195%" height="15" fill="rgb(250,127,30)" fg:x="10" fg:w="12"/><text x="0.6829%" y="1455.50"></text></g><g><title>std::rt::lang_start_internal (12 samples, 0.52%)</title><rect x="0.4329%" y="1429" width="0.5195%" height="15" fill="rgb(230,49,44)" fg:x="10" fg:w="12"/><text x="0.6829%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.52%)</title><rect x="0.4329%" y="1413" width="0.5195%" height="15" fill="rgb(229,67,23)" fg:x="10" fg:w="12"/><text x="0.6829%" y="1423.50"></text></g><g><title>std::panicking::try (12 samples, 0.52%)</title><rect x="0.4329%" y="1397" width="0.5195%" height="15" fill="rgb(249,83,47)" fg:x="10" fg:w="12"/><text x="0.6829%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.52%)</title><rect x="0.4329%" y="1381" width="0.5195%" height="15" fill="rgb(215,43,3)" fg:x="10" fg:w="12"/><text x="0.6829%" y="1391.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (12 samples, 0.52%)</title><rect x="0.4329%" y="1365" width="0.5195%" height="15" fill="rgb(238,154,13)" fg:x="10" fg:w="12"/><text x="0.6829%" y="1375.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.52%)</title><rect x="0.4329%" y="1349" width="0.5195%" height="15" fill="rgb(219,56,2)" fg:x="10" fg:w="12"/><text x="0.6829%" y="1359.50"></text></g><g><title>std::panicking::try (12 samples, 0.52%)</title><rect x="0.4329%" y="1333" width="0.5195%" height="15" fill="rgb(233,0,4)" fg:x="10" fg:w="12"/><text x="0.6829%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.52%)</title><rect x="0.4329%" y="1317" width="0.5195%" height="15" fill="rgb(235,30,7)" fg:x="10" fg:w="12"/><text x="0.6829%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (12 samples, 0.52%)</title><rect x="0.4329%" y="1301" width="0.5195%" height="15" fill="rgb(250,79,13)" fg:x="10" fg:w="12"/><text x="0.6829%" y="1311.50"></text></g><g><title>std::rt::lang_start::{{closure}} (12 samples, 0.52%)</title><rect x="0.4329%" y="1285" width="0.5195%" height="15" fill="rgb(211,146,34)" fg:x="10" fg:w="12"/><text x="0.6829%" y="1295.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.52%)</title><rect x="0.4329%" y="1269" width="0.5195%" height="15" fill="rgb(228,22,38)" fg:x="10" fg:w="12"/><text x="0.6829%" y="1279.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.52%)</title><rect x="0.4329%" y="1253" width="0.5195%" height="15" fill="rgb(235,168,5)" fg:x="10" fg:w="12"/><text x="0.6829%" y="1263.50"></text></g><g><title>y2021::main (12 samples, 0.52%)</title><rect x="0.4329%" y="1237" width="0.5195%" height="15" fill="rgb(221,155,16)" fg:x="10" fg:w="12"/><text x="0.6829%" y="1247.50"></text></g><g><title>y2021::d12::main2::run (11 samples, 0.48%)</title><rect x="0.4762%" y="1221" width="0.4762%" height="15" fill="rgb(215,215,53)" fg:x="11" fg:w="11"/><text x="0.7262%" y="1231.50"></text></g><g><title>y2021::d12::main2::p02 (11 samples, 0.48%)</title><rect x="0.4762%" y="1205" width="0.4762%" height="15" fill="rgb(223,4,10)" fg:x="11" fg:w="11"/><text x="0.7262%" y="1215.50"></text></g><g><title>y2021::d12::main2::traverse (11 samples, 0.48%)</title><rect x="0.4762%" y="1189" width="0.4762%" height="15" fill="rgb(234,103,6)" fg:x="11" fg:w="11"/><text x="0.7262%" y="1199.50"></text></g><g><title>y2021::d12::main2::traverse (11 samples, 0.48%)</title><rect x="0.4762%" y="1173" width="0.4762%" height="15" fill="rgb(227,97,0)" fg:x="11" fg:w="11"/><text x="0.7262%" y="1183.50"></text></g><g><title>y2021::d12::main2::traverse (11 samples, 0.48%)</title><rect x="0.4762%" y="1157" width="0.4762%" height="15" fill="rgb(234,150,53)" fg:x="11" fg:w="11"/><text x="0.7262%" y="1167.50"></text></g><g><title>y2021::d12::main2::traverse (11 samples, 0.48%)</title><rect x="0.4762%" y="1141" width="0.4762%" height="15" fill="rgb(228,201,54)" fg:x="11" fg:w="11"/><text x="0.7262%" y="1151.50"></text></g><g><title>y2021::d12::main2::traverse (11 samples, 0.48%)</title><rect x="0.4762%" y="1125" width="0.4762%" height="15" fill="rgb(222,22,37)" fg:x="11" fg:w="11"/><text x="0.7262%" y="1135.50"></text></g><g><title>y2021::d12::main2::traverse (11 samples, 0.48%)</title><rect x="0.4762%" y="1109" width="0.4762%" height="15" fill="rgb(237,53,32)" fg:x="11" fg:w="11"/><text x="0.7262%" y="1119.50"></text></g><g><title>y2021::d12::main2::traverse (11 samples, 0.48%)</title><rect x="0.4762%" y="1093" width="0.4762%" height="15" fill="rgb(233,25,53)" fg:x="11" fg:w="11"/><text x="0.7262%" y="1103.50"></text></g><g><title>y2021::d12::main2::traverse (11 samples, 0.48%)</title><rect x="0.4762%" y="1077" width="0.4762%" height="15" fill="rgb(210,40,34)" fg:x="11" fg:w="11"/><text x="0.7262%" y="1087.50"></text></g><g><title>y2021::d12::main2::traverse (11 samples, 0.48%)</title><rect x="0.4762%" y="1061" width="0.4762%" height="15" fill="rgb(241,220,44)" fg:x="11" fg:w="11"/><text x="0.7262%" y="1071.50"></text></g><g><title>y2021::d12::main2::traverse (11 samples, 0.48%)</title><rect x="0.4762%" y="1045" width="0.4762%" height="15" fill="rgb(235,28,35)" fg:x="11" fg:w="11"/><text x="0.7262%" y="1055.50"></text></g><g><title>y2021::d12::main2::traverse (11 samples, 0.48%)</title><rect x="0.4762%" y="1029" width="0.4762%" height="15" fill="rgb(210,56,17)" fg:x="11" fg:w="11"/><text x="0.7262%" y="1039.50"></text></g><g><title>y2021::d12::main2::traverse (11 samples, 0.48%)</title><rect x="0.4762%" y="1013" width="0.4762%" height="15" fill="rgb(224,130,29)" fg:x="11" fg:w="11"/><text x="0.7262%" y="1023.50"></text></g><g><title>y2021::d12::main2::traverse (11 samples, 0.48%)</title><rect x="0.4762%" y="997" width="0.4762%" height="15" fill="rgb(235,212,8)" fg:x="11" fg:w="11"/><text x="0.7262%" y="1007.50"></text></g><g><title>y2021::d12::main2::traverse (11 samples, 0.48%)</title><rect x="0.4762%" y="981" width="0.4762%" height="15" fill="rgb(223,33,50)" fg:x="11" fg:w="11"/><text x="0.7262%" y="991.50"></text></g><g><title>y2021::d12::main2::traverse (6 samples, 0.26%)</title><rect x="0.6926%" y="965" width="0.2597%" height="15" fill="rgb(219,149,13)" fg:x="16" fg:w="6"/><text x="0.9426%" y="975.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="0.8658%" y="949" width="0.0866%" height="15" fill="rgb(250,156,29)" fg:x="20" fg:w="2"/><text x="1.1158%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="0.8658%" y="933" width="0.0866%" height="15" fill="rgb(216,193,19)" fg:x="20" fg:w="2"/><text x="1.1158%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.09%)</title><rect x="0.8658%" y="917" width="0.0866%" height="15" fill="rgb(216,135,14)" fg:x="20" fg:w="2"/><text x="1.1158%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.09%)</title><rect x="0.8658%" y="901" width="0.0866%" height="15" fill="rgb(241,47,5)" fg:x="20" fg:w="2"/><text x="1.1158%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.09%)</title><rect x="0.8658%" y="885" width="0.0866%" height="15" fill="rgb(233,42,35)" fg:x="20" fg:w="2"/><text x="1.1158%" y="895.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.09%)</title><rect x="0.8658%" y="869" width="0.0866%" height="15" fill="rgb(231,13,6)" fg:x="20" fg:w="2"/><text x="1.1158%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.09%)</title><rect x="0.8658%" y="853" width="0.0866%" height="15" fill="rgb(207,181,40)" fg:x="20" fg:w="2"/><text x="1.1158%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.09%)</title><rect x="0.8658%" y="837" width="0.0866%" height="15" fill="rgb(254,173,49)" fg:x="20" fg:w="2"/><text x="1.1158%" y="847.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.09%)</title><rect x="0.8658%" y="821" width="0.0866%" height="15" fill="rgb(221,1,38)" fg:x="20" fg:w="2"/><text x="1.1158%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.04%)</title><rect x="0.9091%" y="805" width="0.0433%" height="15" fill="rgb(206,124,46)" fg:x="21" fg:w="1"/><text x="1.1591%" y="815.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="0.9524%" y="1461" width="0.0433%" height="15" fill="rgb(249,21,11)" fg:x="22" fg:w="1"/><text x="1.2024%" y="1471.50"></text></g><g><title>error_entry (1 samples, 0.04%)</title><rect x="0.9524%" y="1445" width="0.0433%" height="15" fill="rgb(222,201,40)" fg:x="22" fg:w="1"/><text x="1.2024%" y="1455.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.09%)</title><rect x="1.1255%" y="565" width="0.0866%" height="15" fill="rgb(235,61,29)" fg:x="26" fg:w="2"/><text x="1.3755%" y="575.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.09%)</title><rect x="1.1255%" y="549" width="0.0866%" height="15" fill="rgb(219,207,3)" fg:x="26" fg:w="2"/><text x="1.3755%" y="559.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.09%)</title><rect x="1.1255%" y="533" width="0.0866%" height="15" fill="rgb(222,56,46)" fg:x="26" fg:w="2"/><text x="1.3755%" y="543.50"></text></g><g><title>clear_page_rep (2 samples, 0.09%)</title><rect x="1.1255%" y="517" width="0.0866%" height="15" fill="rgb(239,76,54)" fg:x="26" fg:w="2"/><text x="1.3755%" y="527.50"></text></g><g><title>alloc::fmt::format (6 samples, 0.26%)</title><rect x="0.9957%" y="981" width="0.2597%" height="15" fill="rgb(231,124,27)" fg:x="23" fg:w="6"/><text x="1.2457%" y="991.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.26%)</title><rect x="0.9957%" y="965" width="0.2597%" height="15" fill="rgb(249,195,6)" fg:x="23" fg:w="6"/><text x="1.2457%" y="975.50"></text></g><g><title>core::fmt::write (6 samples, 0.26%)</title><rect x="0.9957%" y="949" width="0.2597%" height="15" fill="rgb(237,174,47)" fg:x="23" fg:w="6"/><text x="1.2457%" y="959.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (6 samples, 0.26%)</title><rect x="0.9957%" y="933" width="0.2597%" height="15" fill="rgb(206,201,31)" fg:x="23" fg:w="6"/><text x="1.2457%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.26%)</title><rect x="0.9957%" y="917" width="0.2597%" height="15" fill="rgb(231,57,52)" fg:x="23" fg:w="6"/><text x="1.2457%" y="927.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.26%)</title><rect x="0.9957%" y="901" width="0.2597%" height="15" fill="rgb(248,177,22)" fg:x="23" fg:w="6"/><text x="1.2457%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.26%)</title><rect x="0.9957%" y="885" width="0.2597%" height="15" fill="rgb(215,211,37)" fg:x="23" fg:w="6"/><text x="1.2457%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.26%)</title><rect x="0.9957%" y="869" width="0.2597%" height="15" fill="rgb(241,128,51)" fg:x="23" fg:w="6"/><text x="1.2457%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.26%)</title><rect x="0.9957%" y="853" width="0.2597%" height="15" fill="rgb(227,165,31)" fg:x="23" fg:w="6"/><text x="1.2457%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.26%)</title><rect x="0.9957%" y="837" width="0.2597%" height="15" fill="rgb(228,167,24)" fg:x="23" fg:w="6"/><text x="1.2457%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.26%)</title><rect x="0.9957%" y="821" width="0.2597%" height="15" fill="rgb(228,143,12)" fg:x="23" fg:w="6"/><text x="1.2457%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.26%)</title><rect x="0.9957%" y="805" width="0.2597%" height="15" fill="rgb(249,149,8)" fg:x="23" fg:w="6"/><text x="1.2457%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.26%)</title><rect x="0.9957%" y="789" width="0.2597%" height="15" fill="rgb(243,35,44)" fg:x="23" fg:w="6"/><text x="1.2457%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.26%)</title><rect x="0.9957%" y="773" width="0.2597%" height="15" fill="rgb(246,89,9)" fg:x="23" fg:w="6"/><text x="1.2457%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.26%)</title><rect x="0.9957%" y="757" width="0.2597%" height="15" fill="rgb(233,213,13)" fg:x="23" fg:w="6"/><text x="1.2457%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.26%)</title><rect x="0.9957%" y="741" width="0.2597%" height="15" fill="rgb(233,141,41)" fg:x="23" fg:w="6"/><text x="1.2457%" y="751.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.26%)</title><rect x="0.9957%" y="725" width="0.2597%" height="15" fill="rgb(239,167,4)" fg:x="23" fg:w="6"/><text x="1.2457%" y="735.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.26%)</title><rect x="0.9957%" y="709" width="0.2597%" height="15" fill="rgb(209,217,16)" fg:x="23" fg:w="6"/><text x="1.2457%" y="719.50"></text></g><g><title>_int_realloc (6 samples, 0.26%)</title><rect x="0.9957%" y="693" width="0.2597%" height="15" fill="rgb(219,88,35)" fg:x="23" fg:w="6"/><text x="1.2457%" y="703.50"></text></g><g><title>_int_malloc (6 samples, 0.26%)</title><rect x="0.9957%" y="677" width="0.2597%" height="15" fill="rgb(220,193,23)" fg:x="23" fg:w="6"/><text x="1.2457%" y="687.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.13%)</title><rect x="1.1255%" y="661" width="0.1299%" height="15" fill="rgb(230,90,52)" fg:x="26" fg:w="3"/><text x="1.3755%" y="671.50"></text></g><g><title>exc_page_fault (3 samples, 0.13%)</title><rect x="1.1255%" y="645" width="0.1299%" height="15" fill="rgb(252,106,19)" fg:x="26" fg:w="3"/><text x="1.3755%" y="655.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.13%)</title><rect x="1.1255%" y="629" width="0.1299%" height="15" fill="rgb(206,74,20)" fg:x="26" fg:w="3"/><text x="1.3755%" y="639.50"></text></g><g><title>handle_mm_fault (3 samples, 0.13%)</title><rect x="1.1255%" y="613" width="0.1299%" height="15" fill="rgb(230,138,44)" fg:x="26" fg:w="3"/><text x="1.3755%" y="623.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.13%)</title><rect x="1.1255%" y="597" width="0.1299%" height="15" fill="rgb(235,182,43)" fg:x="26" fg:w="3"/><text x="1.3755%" y="607.50"></text></g><g><title>do_anonymous_page (3 samples, 0.13%)</title><rect x="1.1255%" y="581" width="0.1299%" height="15" fill="rgb(242,16,51)" fg:x="26" fg:w="3"/><text x="1.3755%" y="591.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.04%)</title><rect x="1.2121%" y="565" width="0.0433%" height="15" fill="rgb(248,9,4)" fg:x="28" fg:w="1"/><text x="1.4621%" y="575.50"></text></g><g><title>lru_cache_add (1 samples, 0.04%)</title><rect x="1.2121%" y="549" width="0.0433%" height="15" fill="rgb(210,31,22)" fg:x="28" fg:w="1"/><text x="1.4621%" y="559.50"></text></g><g><title>__pagevec_lru_add (1 samples, 0.04%)</title><rect x="1.2121%" y="533" width="0.0433%" height="15" fill="rgb(239,54,39)" fg:x="28" fg:w="1"/><text x="1.4621%" y="543.50"></text></g><g><title>lock_page_lruvec_irqsave (1 samples, 0.04%)</title><rect x="1.2121%" y="517" width="0.0433%" height="15" fill="rgb(230,99,41)" fg:x="28" fg:w="1"/><text x="1.4621%" y="527.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="1.2121%" y="501" width="0.0433%" height="15" fill="rgb(253,106,12)" fg:x="28" fg:w="1"/><text x="1.4621%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.09%)</title><rect x="1.5152%" y="741" width="0.0866%" height="15" fill="rgb(213,46,41)" fg:x="35" fg:w="2"/><text x="1.7652%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.09%)</title><rect x="1.5152%" y="725" width="0.0866%" height="15" fill="rgb(215,133,35)" fg:x="35" fg:w="2"/><text x="1.7652%" y="735.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.04%)</title><rect x="1.5584%" y="709" width="0.0433%" height="15" fill="rgb(213,28,5)" fg:x="36" fg:w="1"/><text x="1.8084%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.04%)</title><rect x="1.5584%" y="693" width="0.0433%" height="15" fill="rgb(215,77,49)" fg:x="36" fg:w="1"/><text x="1.8084%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.48%)</title><rect x="1.2554%" y="965" width="0.4762%" height="15" fill="rgb(248,100,22)" fg:x="29" fg:w="11"/><text x="1.5054%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (11 samples, 0.48%)</title><rect x="1.2554%" y="949" width="0.4762%" height="15" fill="rgb(208,67,9)" fg:x="29" fg:w="11"/><text x="1.5054%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.48%)</title><rect x="1.2554%" y="933" width="0.4762%" height="15" fill="rgb(219,133,21)" fg:x="29" fg:w="11"/><text x="1.5054%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.48%)</title><rect x="1.2554%" y="917" width="0.4762%" height="15" fill="rgb(246,46,29)" fg:x="29" fg:w="11"/><text x="1.5054%" y="927.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (11 samples, 0.48%)</title><rect x="1.2554%" y="901" width="0.4762%" height="15" fill="rgb(246,185,52)" fg:x="29" fg:w="11"/><text x="1.5054%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (11 samples, 0.48%)</title><rect x="1.2554%" y="885" width="0.4762%" height="15" fill="rgb(252,136,11)" fg:x="29" fg:w="11"/><text x="1.5054%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.48%)</title><rect x="1.2554%" y="869" width="0.4762%" height="15" fill="rgb(219,138,53)" fg:x="29" fg:w="11"/><text x="1.5054%" y="879.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (11 samples, 0.48%)</title><rect x="1.2554%" y="853" width="0.4762%" height="15" fill="rgb(211,51,23)" fg:x="29" fg:w="11"/><text x="1.5054%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (11 samples, 0.48%)</title><rect x="1.2554%" y="837" width="0.4762%" height="15" fill="rgb(247,221,28)" fg:x="29" fg:w="11"/><text x="1.5054%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.48%)</title><rect x="1.2554%" y="821" width="0.4762%" height="15" fill="rgb(251,222,45)" fg:x="29" fg:w="11"/><text x="1.5054%" y="831.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.48%)</title><rect x="1.2554%" y="805" width="0.4762%" height="15" fill="rgb(217,162,53)" fg:x="29" fg:w="11"/><text x="1.5054%" y="815.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (11 samples, 0.48%)</title><rect x="1.2554%" y="789" width="0.4762%" height="15" fill="rgb(229,93,14)" fg:x="29" fg:w="11"/><text x="1.5054%" y="799.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (11 samples, 0.48%)</title><rect x="1.2554%" y="773" width="0.4762%" height="15" fill="rgb(209,67,49)" fg:x="29" fg:w="11"/><text x="1.5054%" y="783.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (11 samples, 0.48%)</title><rect x="1.2554%" y="757" width="0.4762%" height="15" fill="rgb(213,87,29)" fg:x="29" fg:w="11"/><text x="1.5054%" y="767.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (3 samples, 0.13%)</title><rect x="1.6017%" y="741" width="0.1299%" height="15" fill="rgb(205,151,52)" fg:x="37" fg:w="3"/><text x="1.8517%" y="751.50"></text></g><g><title>std::rt::lang_start_internal (18 samples, 0.78%)</title><rect x="0.9957%" y="1461" width="0.7792%" height="15" fill="rgb(253,215,39)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1471.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.78%)</title><rect x="0.9957%" y="1445" width="0.7792%" height="15" fill="rgb(221,220,41)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1455.50"></text></g><g><title>std::panicking::try (18 samples, 0.78%)</title><rect x="0.9957%" y="1429" width="0.7792%" height="15" fill="rgb(218,133,21)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1439.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.78%)</title><rect x="0.9957%" y="1413" width="0.7792%" height="15" fill="rgb(221,193,43)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1423.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (18 samples, 0.78%)</title><rect x="0.9957%" y="1397" width="0.7792%" height="15" fill="rgb(240,128,52)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1407.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.78%)</title><rect x="0.9957%" y="1381" width="0.7792%" height="15" fill="rgb(253,114,12)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1391.50"></text></g><g><title>std::panicking::try (18 samples, 0.78%)</title><rect x="0.9957%" y="1365" width="0.7792%" height="15" fill="rgb(215,223,47)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1375.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.78%)</title><rect x="0.9957%" y="1349" width="0.7792%" height="15" fill="rgb(248,225,23)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1359.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (18 samples, 0.78%)</title><rect x="0.9957%" y="1333" width="0.7792%" height="15" fill="rgb(250,108,0)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1343.50"></text></g><g><title>std::rt::lang_start::{{closure}} (18 samples, 0.78%)</title><rect x="0.9957%" y="1317" width="0.7792%" height="15" fill="rgb(228,208,7)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1327.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 0.78%)</title><rect x="0.9957%" y="1301" width="0.7792%" height="15" fill="rgb(244,45,10)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1311.50"></text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 0.78%)</title><rect x="0.9957%" y="1285" width="0.7792%" height="15" fill="rgb(207,125,25)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1295.50"></text></g><g><title>y2021::main (18 samples, 0.78%)</title><rect x="0.9957%" y="1269" width="0.7792%" height="15" fill="rgb(210,195,18)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1279.50"></text></g><g><title>y2021::d12::main2::run (18 samples, 0.78%)</title><rect x="0.9957%" y="1253" width="0.7792%" height="15" fill="rgb(249,80,12)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1263.50"></text></g><g><title>y2021::d12::main2::p02 (18 samples, 0.78%)</title><rect x="0.9957%" y="1237" width="0.7792%" height="15" fill="rgb(221,65,9)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1247.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.78%)</title><rect x="0.9957%" y="1221" width="0.7792%" height="15" fill="rgb(235,49,36)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1231.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.78%)</title><rect x="0.9957%" y="1205" width="0.7792%" height="15" fill="rgb(225,32,20)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1215.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.78%)</title><rect x="0.9957%" y="1189" width="0.7792%" height="15" fill="rgb(215,141,46)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1199.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.78%)</title><rect x="0.9957%" y="1173" width="0.7792%" height="15" fill="rgb(250,160,47)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1183.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.78%)</title><rect x="0.9957%" y="1157" width="0.7792%" height="15" fill="rgb(216,222,40)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1167.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.78%)</title><rect x="0.9957%" y="1141" width="0.7792%" height="15" fill="rgb(234,217,39)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1151.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.78%)</title><rect x="0.9957%" y="1125" width="0.7792%" height="15" fill="rgb(207,178,40)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1135.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.78%)</title><rect x="0.9957%" y="1109" width="0.7792%" height="15" fill="rgb(221,136,13)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1119.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.78%)</title><rect x="0.9957%" y="1093" width="0.7792%" height="15" fill="rgb(249,199,10)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1103.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.78%)</title><rect x="0.9957%" y="1077" width="0.7792%" height="15" fill="rgb(249,222,13)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1087.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.78%)</title><rect x="0.9957%" y="1061" width="0.7792%" height="15" fill="rgb(244,185,38)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1071.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.78%)</title><rect x="0.9957%" y="1045" width="0.7792%" height="15" fill="rgb(236,202,9)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1055.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.78%)</title><rect x="0.9957%" y="1029" width="0.7792%" height="15" fill="rgb(250,229,37)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1039.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.78%)</title><rect x="0.9957%" y="1013" width="0.7792%" height="15" fill="rgb(206,174,23)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1023.50"></text></g><g><title>y2021::d12::main2::traverse (18 samples, 0.78%)</title><rect x="0.9957%" y="997" width="0.7792%" height="15" fill="rgb(211,33,43)" fg:x="23" fg:w="18"/><text x="1.2457%" y="1007.50"></text></g><g><title>y2021::d12::main2::traverse (12 samples, 0.52%)</title><rect x="1.2554%" y="981" width="0.5195%" height="15" fill="rgb(245,58,50)" fg:x="29" fg:w="12"/><text x="1.5054%" y="991.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.04%)</title><rect x="1.7316%" y="965" width="0.0433%" height="15" fill="rgb(244,68,36)" fg:x="40" fg:w="1"/><text x="1.9816%" y="975.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.04%)</title><rect x="1.7316%" y="949" width="0.0433%" height="15" fill="rgb(232,229,15)" fg:x="40" fg:w="1"/><text x="1.9816%" y="959.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="1.7316%" y="933" width="0.0433%" height="15" fill="rgb(254,30,23)" fg:x="40" fg:w="1"/><text x="1.9816%" y="943.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="1.7316%" y="917" width="0.0433%" height="15" fill="rgb(235,160,14)" fg:x="40" fg:w="1"/><text x="1.9816%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="1.7316%" y="901" width="0.0433%" height="15" fill="rgb(212,155,44)" fg:x="40" fg:w="1"/><text x="1.9816%" y="911.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="1.7316%" y="885" width="0.0433%" height="15" fill="rgb(226,2,50)" fg:x="40" fg:w="1"/><text x="1.9816%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="1.7316%" y="869" width="0.0433%" height="15" fill="rgb(234,177,6)" fg:x="40" fg:w="1"/><text x="1.9816%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="1.7316%" y="853" width="0.0433%" height="15" fill="rgb(217,24,9)" fg:x="40" fg:w="1"/><text x="1.9816%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="1.7316%" y="837" width="0.0433%" height="15" fill="rgb(220,13,46)" fg:x="40" fg:w="1"/><text x="1.9816%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="1.7316%" y="821" width="0.0433%" height="15" fill="rgb(239,221,27)" fg:x="40" fg:w="1"/><text x="1.9816%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.04%)</title><rect x="1.7316%" y="805" width="0.0433%" height="15" fill="rgb(222,198,25)" fg:x="40" fg:w="1"/><text x="1.9816%" y="815.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1461" width="0.0433%" height="15" fill="rgb(211,99,13)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1471.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1445" width="0.0433%" height="15" fill="rgb(232,111,31)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1455.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1429" width="0.0433%" height="15" fill="rgb(245,82,37)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1439.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1413" width="0.0433%" height="15" fill="rgb(227,149,46)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1423.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1397" width="0.0433%" height="15" fill="rgb(218,36,50)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1407.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1381" width="0.0433%" height="15" fill="rgb(226,80,48)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1391.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1365" width="0.0433%" height="15" fill="rgb(238,224,15)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1375.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1349" width="0.0433%" height="15" fill="rgb(241,136,10)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1359.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1333" width="0.0433%" height="15" fill="rgb(208,32,45)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1343.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1317" width="0.0433%" height="15" fill="rgb(207,135,9)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1327.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1301" width="0.0433%" height="15" fill="rgb(206,86,44)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1311.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1285" width="0.0433%" height="15" fill="rgb(245,177,15)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1295.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1269" width="0.0433%" height="15" fill="rgb(206,64,50)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1279.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1253" width="0.0433%" height="15" fill="rgb(234,36,40)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1263.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1237" width="0.0433%" height="15" fill="rgb(213,64,8)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1247.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1221" width="0.0433%" height="15" fill="rgb(210,75,36)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1231.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1205" width="0.0433%" height="15" fill="rgb(229,88,21)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1215.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1189" width="0.0433%" height="15" fill="rgb(252,204,47)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1199.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1173" width="0.0433%" height="15" fill="rgb(208,77,27)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1183.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1157" width="0.0433%" height="15" fill="rgb(221,76,26)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1167.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1141" width="0.0433%" height="15" fill="rgb(225,139,18)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1151.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1125" width="0.0433%" height="15" fill="rgb(230,137,11)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1135.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1109" width="0.0433%" height="15" fill="rgb(212,28,1)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1119.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1093" width="0.0433%" height="15" fill="rgb(248,164,17)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1103.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1077" width="0.0433%" height="15" fill="rgb(222,171,42)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1087.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1061" width="0.0433%" height="15" fill="rgb(243,84,45)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1071.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1045" width="0.0433%" height="15" fill="rgb(252,49,23)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1055.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1029" width="0.0433%" height="15" fill="rgb(215,19,7)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1039.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="1013" width="0.0433%" height="15" fill="rgb(238,81,41)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1023.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="997" width="0.0433%" height="15" fill="rgb(210,199,37)" fg:x="41" fg:w="1"/><text x="2.0249%" y="1007.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="981" width="0.0433%" height="15" fill="rgb(244,192,49)" fg:x="41" fg:w="1"/><text x="2.0249%" y="991.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="965" width="0.0433%" height="15" fill="rgb(226,211,11)" fg:x="41" fg:w="1"/><text x="2.0249%" y="975.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="949" width="0.0433%" height="15" fill="rgb(236,162,54)" fg:x="41" fg:w="1"/><text x="2.0249%" y="959.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="933" width="0.0433%" height="15" fill="rgb(220,229,9)" fg:x="41" fg:w="1"/><text x="2.0249%" y="943.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="917" width="0.0433%" height="15" fill="rgb(250,87,22)" fg:x="41" fg:w="1"/><text x="2.0249%" y="927.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="901" width="0.0433%" height="15" fill="rgb(239,43,17)" fg:x="41" fg:w="1"/><text x="2.0249%" y="911.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="885" width="0.0433%" height="15" fill="rgb(231,177,25)" fg:x="41" fg:w="1"/><text x="2.0249%" y="895.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="869" width="0.0433%" height="15" fill="rgb(219,179,1)" fg:x="41" fg:w="1"/><text x="2.0249%" y="879.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="853" width="0.0433%" height="15" fill="rgb(238,219,53)" fg:x="41" fg:w="1"/><text x="2.0249%" y="863.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="837" width="0.0433%" height="15" fill="rgb(232,167,36)" fg:x="41" fg:w="1"/><text x="2.0249%" y="847.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="821" width="0.0433%" height="15" fill="rgb(244,19,51)" fg:x="41" fg:w="1"/><text x="2.0249%" y="831.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="805" width="0.0433%" height="15" fill="rgb(224,6,22)" fg:x="41" fg:w="1"/><text x="2.0249%" y="815.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="789" width="0.0433%" height="15" fill="rgb(224,145,5)" fg:x="41" fg:w="1"/><text x="2.0249%" y="799.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="773" width="0.0433%" height="15" fill="rgb(234,130,49)" fg:x="41" fg:w="1"/><text x="2.0249%" y="783.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="757" width="0.0433%" height="15" fill="rgb(254,6,2)" fg:x="41" fg:w="1"/><text x="2.0249%" y="767.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="741" width="0.0433%" height="15" fill="rgb(208,96,46)" fg:x="41" fg:w="1"/><text x="2.0249%" y="751.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="725" width="0.0433%" height="15" fill="rgb(239,3,39)" fg:x="41" fg:w="1"/><text x="2.0249%" y="735.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="709" width="0.0433%" height="15" fill="rgb(233,210,1)" fg:x="41" fg:w="1"/><text x="2.0249%" y="719.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="693" width="0.0433%" height="15" fill="rgb(244,137,37)" fg:x="41" fg:w="1"/><text x="2.0249%" y="703.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="677" width="0.0433%" height="15" fill="rgb(240,136,2)" fg:x="41" fg:w="1"/><text x="2.0249%" y="687.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="661" width="0.0433%" height="15" fill="rgb(239,18,37)" fg:x="41" fg:w="1"/><text x="2.0249%" y="671.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="645" width="0.0433%" height="15" fill="rgb(218,185,22)" fg:x="41" fg:w="1"/><text x="2.0249%" y="655.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="629" width="0.0433%" height="15" fill="rgb(225,218,4)" fg:x="41" fg:w="1"/><text x="2.0249%" y="639.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="613" width="0.0433%" height="15" fill="rgb(230,182,32)" fg:x="41" fg:w="1"/><text x="2.0249%" y="623.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="597" width="0.0433%" height="15" fill="rgb(242,56,43)" fg:x="41" fg:w="1"/><text x="2.0249%" y="607.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="581" width="0.0433%" height="15" fill="rgb(233,99,24)" fg:x="41" fg:w="1"/><text x="2.0249%" y="591.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="565" width="0.0433%" height="15" fill="rgb(234,209,42)" fg:x="41" fg:w="1"/><text x="2.0249%" y="575.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="549" width="0.0433%" height="15" fill="rgb(227,7,12)" fg:x="41" fg:w="1"/><text x="2.0249%" y="559.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="533" width="0.0433%" height="15" fill="rgb(245,203,43)" fg:x="41" fg:w="1"/><text x="2.0249%" y="543.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="517" width="0.0433%" height="15" fill="rgb(238,205,33)" fg:x="41" fg:w="1"/><text x="2.0249%" y="527.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="501" width="0.0433%" height="15" fill="rgb(231,56,7)" fg:x="41" fg:w="1"/><text x="2.0249%" y="511.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="485" width="0.0433%" height="15" fill="rgb(244,186,29)" fg:x="41" fg:w="1"/><text x="2.0249%" y="495.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="1.7749%" y="469" width="0.0433%" height="15" fill="rgb(234,111,31)" fg:x="41" fg:w="1"/><text x="2.0249%" y="479.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.04%)</title><rect x="1.7749%" y="453" width="0.0433%" height="15" fill="rgb(241,149,10)" fg:x="41" fg:w="1"/><text x="2.0249%" y="463.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.04%)</title><rect x="1.7749%" y="437" width="0.0433%" height="15" fill="rgb(249,206,44)" fg:x="41" fg:w="1"/><text x="2.0249%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.04%)</title><rect x="1.7749%" y="421" width="0.0433%" height="15" fill="rgb(251,153,30)" fg:x="41" fg:w="1"/><text x="2.0249%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="1.7749%" y="405" width="0.0433%" height="15" fill="rgb(239,152,38)" fg:x="41" fg:w="1"/><text x="2.0249%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="1.7749%" y="389" width="0.0433%" height="15" fill="rgb(249,139,47)" fg:x="41" fg:w="1"/><text x="2.0249%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="1.7749%" y="373" width="0.0433%" height="15" fill="rgb(244,64,35)" fg:x="41" fg:w="1"/><text x="2.0249%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="1.7749%" y="357" width="0.0433%" height="15" fill="rgb(216,46,15)" fg:x="41" fg:w="1"/><text x="2.0249%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="1.7749%" y="341" width="0.0433%" height="15" fill="rgb(250,74,19)" fg:x="41" fg:w="1"/><text x="2.0249%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="1.7749%" y="325" width="0.0433%" height="15" fill="rgb(249,42,33)" fg:x="41" fg:w="1"/><text x="2.0249%" y="335.50"></text></g><g><title>[unknown] (34 samples, 1.47%)</title><rect x="0.4329%" y="1477" width="1.4719%" height="15" fill="rgb(242,149,17)" fg:x="10" fg:w="34"/><text x="0.6829%" y="1487.50"></text></g><g><title>y2021::d12::main2::run (2 samples, 0.09%)</title><rect x="1.8182%" y="1461" width="0.0866%" height="15" fill="rgb(244,29,21)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1471.50"></text></g><g><title>y2021::d12::main2::p02 (2 samples, 0.09%)</title><rect x="1.8182%" y="1445" width="0.0866%" height="15" fill="rgb(220,130,37)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1455.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1429" width="0.0866%" height="15" fill="rgb(211,67,2)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1439.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1413" width="0.0866%" height="15" fill="rgb(235,68,52)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1423.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1397" width="0.0866%" height="15" fill="rgb(246,142,3)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1407.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1381" width="0.0866%" height="15" fill="rgb(241,25,7)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1391.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1365" width="0.0866%" height="15" fill="rgb(242,119,39)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1375.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1349" width="0.0866%" height="15" fill="rgb(241,98,45)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1359.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1333" width="0.0866%" height="15" fill="rgb(254,28,30)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1343.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1317" width="0.0866%" height="15" fill="rgb(241,142,54)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1327.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1301" width="0.0866%" height="15" fill="rgb(222,85,15)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1311.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1285" width="0.0866%" height="15" fill="rgb(210,85,47)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1295.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1269" width="0.0866%" height="15" fill="rgb(224,206,25)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1279.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1253" width="0.0866%" height="15" fill="rgb(243,201,19)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1263.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1237" width="0.0866%" height="15" fill="rgb(236,59,4)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1247.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1221" width="0.0866%" height="15" fill="rgb(254,179,45)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1231.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1205" width="0.0866%" height="15" fill="rgb(226,14,10)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1215.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="1.8182%" y="1189" width="0.0866%" height="15" fill="rgb(244,27,41)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1199.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.09%)</title><rect x="1.8182%" y="1173" width="0.0866%" height="15" fill="rgb(235,35,32)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1183.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.09%)</title><rect x="1.8182%" y="1157" width="0.0866%" height="15" fill="rgb(218,68,31)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1167.50"></text></g><g><title>core::fmt::write (2 samples, 0.09%)</title><rect x="1.8182%" y="1141" width="0.0866%" height="15" fill="rgb(207,120,37)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1151.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.09%)</title><rect x="1.8182%" y="1125" width="0.0866%" height="15" fill="rgb(227,98,0)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.09%)</title><rect x="1.8182%" y="1109" width="0.0866%" height="15" fill="rgb(207,7,3)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1119.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.09%)</title><rect x="1.8182%" y="1093" width="0.0866%" height="15" fill="rgb(206,98,19)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.09%)</title><rect x="1.8182%" y="1077" width="0.0866%" height="15" fill="rgb(217,5,26)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.09%)</title><rect x="1.8182%" y="1061" width="0.0866%" height="15" fill="rgb(235,190,38)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.09%)</title><rect x="1.8182%" y="1045" width="0.0866%" height="15" fill="rgb(247,86,24)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.09%)</title><rect x="1.8182%" y="1029" width="0.0866%" height="15" fill="rgb(205,101,16)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.09%)</title><rect x="1.8182%" y="1013" width="0.0866%" height="15" fill="rgb(246,168,33)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.09%)</title><rect x="1.8182%" y="997" width="0.0866%" height="15" fill="rgb(231,114,1)" fg:x="42" fg:w="2"/><text x="2.0682%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.09%)</title><rect x="1.8182%" y="981" width="0.0866%" height="15" fill="rgb(207,184,53)" fg:x="42" fg:w="2"/><text x="2.0682%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.09%)</title><rect x="1.8182%" y="965" width="0.0866%" height="15" fill="rgb(224,95,51)" fg:x="42" fg:w="2"/><text x="2.0682%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.09%)</title><rect x="1.8182%" y="949" width="0.0866%" height="15" fill="rgb(212,188,45)" fg:x="42" fg:w="2"/><text x="2.0682%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.09%)</title><rect x="1.8182%" y="933" width="0.0866%" height="15" fill="rgb(223,154,38)" fg:x="42" fg:w="2"/><text x="2.0682%" y="943.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.09%)</title><rect x="1.8182%" y="917" width="0.0866%" height="15" fill="rgb(251,22,52)" fg:x="42" fg:w="2"/><text x="2.0682%" y="927.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.09%)</title><rect x="1.8182%" y="901" width="0.0866%" height="15" fill="rgb(229,209,22)" fg:x="42" fg:w="2"/><text x="2.0682%" y="911.50"></text></g><g><title>_int_realloc (2 samples, 0.09%)</title><rect x="1.8182%" y="885" width="0.0866%" height="15" fill="rgb(234,138,34)" fg:x="42" fg:w="2"/><text x="2.0682%" y="895.50"></text></g><g><title>_int_malloc (2 samples, 0.09%)</title><rect x="1.8182%" y="869" width="0.0866%" height="15" fill="rgb(212,95,11)" fg:x="42" fg:w="2"/><text x="2.0682%" y="879.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.04%)</title><rect x="1.8615%" y="853" width="0.0433%" height="15" fill="rgb(240,179,47)" fg:x="43" fg:w="1"/><text x="2.1115%" y="863.50"></text></g><g><title>exc_page_fault (1 samples, 0.04%)</title><rect x="1.8615%" y="837" width="0.0433%" height="15" fill="rgb(240,163,11)" fg:x="43" fg:w="1"/><text x="2.1115%" y="847.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="1.8615%" y="821" width="0.0433%" height="15" fill="rgb(236,37,12)" fg:x="43" fg:w="1"/><text x="2.1115%" y="831.50"></text></g><g><title>find_vma (1 samples, 0.04%)</title><rect x="1.8615%" y="805" width="0.0433%" height="15" fill="rgb(232,164,16)" fg:x="43" fg:w="1"/><text x="2.1115%" y="815.50"></text></g><g><title>vmacache_find (1 samples, 0.04%)</title><rect x="1.8615%" y="789" width="0.0433%" height="15" fill="rgb(244,205,15)" fg:x="43" fg:w="1"/><text x="2.1115%" y="799.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.04%)</title><rect x="1.9048%" y="1253" width="0.0433%" height="15" fill="rgb(223,117,47)" fg:x="44" fg:w="1"/><text x="2.1548%" y="1263.50"></text></g><g><title>exc_page_fault (1 samples, 0.04%)</title><rect x="1.9048%" y="1237" width="0.0433%" height="15" fill="rgb(244,107,35)" fg:x="44" fg:w="1"/><text x="2.1548%" y="1247.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="1.9048%" y="1221" width="0.0433%" height="15" fill="rgb(205,140,8)" fg:x="44" fg:w="1"/><text x="2.1548%" y="1231.50"></text></g><g><title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1.9048%" y="1205" width="0.0433%" height="15" fill="rgb(228,84,46)" fg:x="44" fg:w="1"/><text x="2.1548%" y="1215.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1.9048%" y="1189" width="0.0433%" height="15" fill="rgb(254,188,9)" fg:x="44" fg:w="1"/><text x="2.1548%" y="1199.50"></text></g><g><title>do_fault (1 samples, 0.04%)</title><rect x="1.9048%" y="1173" width="0.0433%" height="15" fill="rgb(206,112,54)" fg:x="44" fg:w="1"/><text x="2.1548%" y="1183.50"></text></g><g><title>filemap_map_pages (1 samples, 0.04%)</title><rect x="1.9048%" y="1157" width="0.0433%" height="15" fill="rgb(216,84,49)" fg:x="44" fg:w="1"/><text x="2.1548%" y="1167.50"></text></g><g><title>y2021::d01::main::part_1 (1 samples, 0.04%)</title><rect x="1.9481%" y="1205" width="0.0433%" height="15" fill="rgb(214,194,35)" fg:x="45" fg:w="1"/><text x="2.1981%" y="1215.50"></text></g><g><title>y2021::utils::file::line_as_usize (1 samples, 0.04%)</title><rect x="1.9481%" y="1189" width="0.0433%" height="15" fill="rgb(249,28,3)" fg:x="45" fg:w="1"/><text x="2.1981%" y="1199.50"></text></g><g><title>__GI___libc_free (1 samples, 0.04%)</title><rect x="1.9481%" y="1173" width="0.0433%" height="15" fill="rgb(222,56,52)" fg:x="45" fg:w="1"/><text x="2.1981%" y="1183.50"></text></g><g><title>y2021::d01::main::run (2 samples, 0.09%)</title><rect x="1.9481%" y="1221" width="0.0866%" height="15" fill="rgb(245,217,50)" fg:x="45" fg:w="2"/><text x="2.1981%" y="1231.50"></text></g><g><title>y2021::d01::main::part_2 (1 samples, 0.04%)</title><rect x="1.9913%" y="1205" width="0.0433%" height="15" fill="rgb(213,201,24)" fg:x="46" fg:w="1"/><text x="2.2413%" y="1215.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="1.9913%" y="1189" width="0.0433%" height="15" fill="rgb(248,116,28)" fg:x="46" fg:w="1"/><text x="2.2413%" y="1199.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.04%)</title><rect x="1.9913%" y="1173" width="0.0433%" height="15" fill="rgb(219,72,43)" fg:x="46" fg:w="1"/><text x="2.2413%" y="1183.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.04%)</title><rect x="1.9913%" y="1157" width="0.0433%" height="15" fill="rgb(209,138,14)" fg:x="46" fg:w="1"/><text x="2.2413%" y="1167.50"></text></g><g><title>y2021::d02::main::p01 (1 samples, 0.04%)</title><rect x="2.0346%" y="1205" width="0.0433%" height="15" fill="rgb(222,18,33)" fg:x="47" fg:w="1"/><text x="2.2846%" y="1215.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="2.0346%" y="1189" width="0.0433%" height="15" fill="rgb(213,199,7)" fg:x="47" fg:w="1"/><text x="2.2846%" y="1199.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.04%)</title><rect x="2.0346%" y="1173" width="0.0433%" height="15" fill="rgb(250,110,10)" fg:x="47" fg:w="1"/><text x="2.2846%" y="1183.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.04%)</title><rect x="2.0346%" y="1157" width="0.0433%" height="15" fill="rgb(248,123,6)" fg:x="47" fg:w="1"/><text x="2.2846%" y="1167.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.04%)</title><rect x="2.0346%" y="1141" width="0.0433%" height="15" fill="rgb(206,91,31)" fg:x="47" fg:w="1"/><text x="2.2846%" y="1151.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.04%)</title><rect x="2.0346%" y="1125" width="0.0433%" height="15" fill="rgb(211,154,13)" fg:x="47" fg:w="1"/><text x="2.2846%" y="1135.50"></text></g><g><title>y2021::d02::main::run (2 samples, 0.09%)</title><rect x="2.0346%" y="1221" width="0.0866%" height="15" fill="rgb(225,148,7)" fg:x="47" fg:w="2"/><text x="2.2846%" y="1231.50"></text></g><g><title>y2021::d02::main::p02 (1 samples, 0.04%)</title><rect x="2.0779%" y="1205" width="0.0433%" height="15" fill="rgb(220,160,43)" fg:x="48" fg:w="1"/><text x="2.3279%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="2.0779%" y="1189" width="0.0433%" height="15" fill="rgb(213,52,39)" fg:x="48" fg:w="1"/><text x="2.3279%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="2.0779%" y="1173" width="0.0433%" height="15" fill="rgb(243,137,7)" fg:x="48" fg:w="1"/><text x="2.3279%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="2.0779%" y="1157" width="0.0433%" height="15" fill="rgb(230,79,13)" fg:x="48" fg:w="1"/><text x="2.3279%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="2.0779%" y="1141" width="0.0433%" height="15" fill="rgb(247,105,23)" fg:x="48" fg:w="1"/><text x="2.3279%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="2.0779%" y="1125" width="0.0433%" height="15" fill="rgb(223,179,41)" fg:x="48" fg:w="1"/><text x="2.3279%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="2.0779%" y="1109" width="0.0433%" height="15" fill="rgb(218,9,34)" fg:x="48" fg:w="1"/><text x="2.3279%" y="1119.50"></text></g><g><title>__GI___libc_free (1 samples, 0.04%)</title><rect x="2.0779%" y="1093" width="0.0433%" height="15" fill="rgb(222,106,8)" fg:x="48" fg:w="1"/><text x="2.3279%" y="1103.50"></text></g><g><title>y2021::d03::main::p01 (2 samples, 0.09%)</title><rect x="2.1212%" y="1205" width="0.0866%" height="15" fill="rgb(211,220,0)" fg:x="49" fg:w="2"/><text x="2.3712%" y="1215.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d (2 samples, 0.09%)</title><rect x="2.1212%" y="1189" width="0.0866%" height="15" fill="rgb(229,52,16)" fg:x="49" fg:w="2"/><text x="2.3712%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.09%)</title><rect x="2.1212%" y="1173" width="0.0866%" height="15" fill="rgb(212,155,18)" fg:x="49" fg:w="2"/><text x="2.3712%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="2.1212%" y="1157" width="0.0866%" height="15" fill="rgb(242,21,14)" fg:x="49" fg:w="2"/><text x="2.3712%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="2.1212%" y="1141" width="0.0866%" height="15" fill="rgb(222,19,48)" fg:x="49" fg:w="2"/><text x="2.3712%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="2.1212%" y="1125" width="0.0866%" height="15" fill="rgb(232,45,27)" fg:x="49" fg:w="2"/><text x="2.3712%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.09%)</title><rect x="2.1212%" y="1109" width="0.0866%" height="15" fill="rgb(249,103,42)" fg:x="49" fg:w="2"/><text x="2.3712%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.09%)</title><rect x="2.1212%" y="1093" width="0.0866%" height="15" fill="rgb(246,81,33)" fg:x="49" fg:w="2"/><text x="2.3712%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="2.1212%" y="1077" width="0.0866%" height="15" fill="rgb(252,33,42)" fg:x="49" fg:w="2"/><text x="2.3712%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="2.1212%" y="1061" width="0.0866%" height="15" fill="rgb(209,212,41)" fg:x="49" fg:w="2"/><text x="2.3712%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="2.1212%" y="1045" width="0.0866%" height="15" fill="rgb(207,154,6)" fg:x="49" fg:w="2"/><text x="2.3712%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.09%)</title><rect x="2.1212%" y="1029" width="0.0866%" height="15" fill="rgb(223,64,47)" fg:x="49" fg:w="2"/><text x="2.3712%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="2.1212%" y="1013" width="0.0866%" height="15" fill="rgb(211,161,38)" fg:x="49" fg:w="2"/><text x="2.3712%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="2.1212%" y="997" width="0.0866%" height="15" fill="rgb(219,138,40)" fg:x="49" fg:w="2"/><text x="2.3712%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.09%)</title><rect x="2.1212%" y="981" width="0.0866%" height="15" fill="rgb(241,228,46)" fg:x="49" fg:w="2"/><text x="2.3712%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.09%)</title><rect x="2.1212%" y="965" width="0.0866%" height="15" fill="rgb(223,209,38)" fg:x="49" fg:w="2"/><text x="2.3712%" y="975.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d::{{closure}} (2 samples, 0.09%)</title><rect x="2.1212%" y="949" width="0.0866%" height="15" fill="rgb(236,164,45)" fg:x="49" fg:w="2"/><text x="2.3712%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.09%)</title><rect x="2.1212%" y="933" width="0.0866%" height="15" fill="rgb(231,15,5)" fg:x="49" fg:w="2"/><text x="2.3712%" y="943.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d::{{closure}}::{{closure}} (2 samples, 0.09%)</title><rect x="2.1212%" y="917" width="0.0866%" height="15" fill="rgb(252,35,15)" fg:x="49" fg:w="2"/><text x="2.3712%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.09%)</title><rect x="2.1212%" y="901" width="0.0866%" height="15" fill="rgb(248,181,18)" fg:x="49" fg:w="2"/><text x="2.3712%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="2.1212%" y="885" width="0.0866%" height="15" fill="rgb(233,39,42)" fg:x="49" fg:w="2"/><text x="2.3712%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="2.1212%" y="869" width="0.0866%" height="15" fill="rgb(238,110,33)" fg:x="49" fg:w="2"/><text x="2.3712%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="2.1212%" y="853" width="0.0866%" height="15" fill="rgb(233,195,10)" fg:x="49" fg:w="2"/><text x="2.3712%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.09%)</title><rect x="2.1212%" y="837" width="0.0866%" height="15" fill="rgb(254,105,3)" fg:x="49" fg:w="2"/><text x="2.3712%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.09%)</title><rect x="2.1212%" y="821" width="0.0866%" height="15" fill="rgb(221,225,9)" fg:x="49" fg:w="2"/><text x="2.3712%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.09%)</title><rect x="2.1212%" y="805" width="0.0866%" height="15" fill="rgb(224,227,45)" fg:x="49" fg:w="2"/><text x="2.3712%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.09%)</title><rect x="2.1212%" y="789" width="0.0866%" height="15" fill="rgb(229,198,43)" fg:x="49" fg:w="2"/><text x="2.3712%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.09%)</title><rect x="2.1212%" y="773" width="0.0866%" height="15" fill="rgb(206,209,35)" fg:x="49" fg:w="2"/><text x="2.3712%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.09%)</title><rect x="2.1212%" y="757" width="0.0866%" height="15" fill="rgb(245,195,53)" fg:x="49" fg:w="2"/><text x="2.3712%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.09%)</title><rect x="2.1212%" y="741" width="0.0866%" height="15" fill="rgb(240,92,26)" fg:x="49" fg:w="2"/><text x="2.3712%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.09%)</title><rect x="2.1212%" y="725" width="0.0866%" height="15" fill="rgb(207,40,23)" fg:x="49" fg:w="2"/><text x="2.3712%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.09%)</title><rect x="2.1212%" y="709" width="0.0866%" height="15" fill="rgb(223,111,35)" fg:x="49" fg:w="2"/><text x="2.3712%" y="719.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.09%)</title><rect x="2.1212%" y="693" width="0.0866%" height="15" fill="rgb(229,147,28)" fg:x="49" fg:w="2"/><text x="2.3712%" y="703.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.09%)</title><rect x="2.1212%" y="677" width="0.0866%" height="15" fill="rgb(211,29,28)" fg:x="49" fg:w="2"/><text x="2.3712%" y="687.50"></text></g><g><title>_int_realloc (1 samples, 0.04%)</title><rect x="2.1645%" y="661" width="0.0433%" height="15" fill="rgb(228,72,33)" fg:x="50" fg:w="1"/><text x="2.4145%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="2.1645%" y="645" width="0.0433%" height="15" fill="rgb(205,214,31)" fg:x="50" fg:w="1"/><text x="2.4145%" y="655.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.04%)</title><rect x="2.1645%" y="629" width="0.0433%" height="15" fill="rgb(224,111,15)" fg:x="50" fg:w="1"/><text x="2.4145%" y="639.50"></text></g><g><title>exc_page_fault (1 samples, 0.04%)</title><rect x="2.1645%" y="613" width="0.0433%" height="15" fill="rgb(253,21,26)" fg:x="50" fg:w="1"/><text x="2.4145%" y="623.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="2.1645%" y="597" width="0.0433%" height="15" fill="rgb(245,139,43)" fg:x="50" fg:w="1"/><text x="2.4145%" y="607.50"></text></g><g><title>handle_mm_fault (1 samples, 0.04%)</title><rect x="2.1645%" y="581" width="0.0433%" height="15" fill="rgb(252,170,7)" fg:x="50" fg:w="1"/><text x="2.4145%" y="591.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="2.1645%" y="565" width="0.0433%" height="15" fill="rgb(231,118,14)" fg:x="50" fg:w="1"/><text x="2.4145%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="2.2078%" y="981" width="0.0433%" height="15" fill="rgb(238,83,0)" fg:x="51" fg:w="1"/><text x="2.4578%" y="991.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="2.2078%" y="965" width="0.0433%" height="15" fill="rgb(221,39,39)" fg:x="51" fg:w="1"/><text x="2.4578%" y="975.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.04%)</title><rect x="2.2078%" y="949" width="0.0433%" height="15" fill="rgb(222,119,46)" fg:x="51" fg:w="1"/><text x="2.4578%" y="959.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.04%)</title><rect x="2.2078%" y="933" width="0.0433%" height="15" fill="rgb(222,165,49)" fg:x="51" fg:w="1"/><text x="2.4578%" y="943.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.04%)</title><rect x="2.2078%" y="917" width="0.0433%" height="15" fill="rgb(219,113,52)" fg:x="51" fg:w="1"/><text x="2.4578%" y="927.50"></text></g><g><title>y2021::d03::main::run (4 samples, 0.17%)</title><rect x="2.1212%" y="1221" width="0.1732%" height="15" fill="rgb(214,7,15)" fg:x="49" fg:w="4"/><text x="2.3712%" y="1231.50"></text></g><g><title>y2021::d03::main::p02 (2 samples, 0.09%)</title><rect x="2.2078%" y="1205" width="0.0866%" height="15" fill="rgb(235,32,4)" fg:x="51" fg:w="2"/><text x="2.4578%" y="1215.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d (2 samples, 0.09%)</title><rect x="2.2078%" y="1189" width="0.0866%" height="15" fill="rgb(238,90,54)" fg:x="51" fg:w="2"/><text x="2.4578%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.09%)</title><rect x="2.2078%" y="1173" width="0.0866%" height="15" fill="rgb(213,208,19)" fg:x="51" fg:w="2"/><text x="2.4578%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="2.2078%" y="1157" width="0.0866%" height="15" fill="rgb(233,156,4)" fg:x="51" fg:w="2"/><text x="2.4578%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="2.2078%" y="1141" width="0.0866%" height="15" fill="rgb(207,194,5)" fg:x="51" fg:w="2"/><text x="2.4578%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="2.2078%" y="1125" width="0.0866%" height="15" fill="rgb(206,111,30)" fg:x="51" fg:w="2"/><text x="2.4578%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.09%)</title><rect x="2.2078%" y="1109" width="0.0866%" height="15" fill="rgb(243,70,54)" fg:x="51" fg:w="2"/><text x="2.4578%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.09%)</title><rect x="2.2078%" y="1093" width="0.0866%" height="15" fill="rgb(242,28,8)" fg:x="51" fg:w="2"/><text x="2.4578%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="2.2078%" y="1077" width="0.0866%" height="15" fill="rgb(219,106,18)" fg:x="51" fg:w="2"/><text x="2.4578%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="2.2078%" y="1061" width="0.0866%" height="15" fill="rgb(244,222,10)" fg:x="51" fg:w="2"/><text x="2.4578%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="2.2078%" y="1045" width="0.0866%" height="15" fill="rgb(236,179,52)" fg:x="51" fg:w="2"/><text x="2.4578%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.09%)</title><rect x="2.2078%" y="1029" width="0.0866%" height="15" fill="rgb(213,23,39)" fg:x="51" fg:w="2"/><text x="2.4578%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="2.2078%" y="1013" width="0.0866%" height="15" fill="rgb(238,48,10)" fg:x="51" fg:w="2"/><text x="2.4578%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="2.2078%" y="997" width="0.0866%" height="15" fill="rgb(251,196,23)" fg:x="51" fg:w="2"/><text x="2.4578%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="2.2511%" y="981" width="0.0433%" height="15" fill="rgb(250,152,24)" fg:x="52" fg:w="1"/><text x="2.5011%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.04%)</title><rect x="2.2511%" y="965" width="0.0433%" height="15" fill="rgb(209,150,17)" fg:x="52" fg:w="1"/><text x="2.5011%" y="975.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d::{{closure}} (1 samples, 0.04%)</title><rect x="2.2511%" y="949" width="0.0433%" height="15" fill="rgb(234,202,34)" fg:x="52" fg:w="1"/><text x="2.5011%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.04%)</title><rect x="2.2511%" y="933" width="0.0433%" height="15" fill="rgb(253,148,53)" fg:x="52" fg:w="1"/><text x="2.5011%" y="943.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d::{{closure}}::{{closure}} (1 samples, 0.04%)</title><rect x="2.2511%" y="917" width="0.0433%" height="15" fill="rgb(218,129,16)" fg:x="52" fg:w="1"/><text x="2.5011%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="2.2511%" y="901" width="0.0433%" height="15" fill="rgb(216,85,19)" fg:x="52" fg:w="1"/><text x="2.5011%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="2.2511%" y="885" width="0.0433%" height="15" fill="rgb(235,228,7)" fg:x="52" fg:w="1"/><text x="2.5011%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="2.2511%" y="869" width="0.0433%" height="15" fill="rgb(245,175,0)" fg:x="52" fg:w="1"/><text x="2.5011%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="2.2511%" y="853" width="0.0433%" height="15" fill="rgb(208,168,36)" fg:x="52" fg:w="1"/><text x="2.5011%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="2.2511%" y="837" width="0.0433%" height="15" fill="rgb(246,171,24)" fg:x="52" fg:w="1"/><text x="2.5011%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.04%)</title><rect x="2.2511%" y="821" width="0.0433%" height="15" fill="rgb(215,142,24)" fg:x="52" fg:w="1"/><text x="2.5011%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="2.2511%" y="805" width="0.0433%" height="15" fill="rgb(250,187,7)" fg:x="52" fg:w="1"/><text x="2.5011%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="2.2511%" y="789" width="0.0433%" height="15" fill="rgb(228,66,33)" fg:x="52" fg:w="1"/><text x="2.5011%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="2.2511%" y="773" width="0.0433%" height="15" fill="rgb(234,215,21)" fg:x="52" fg:w="1"/><text x="2.5011%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="2.2511%" y="757" width="0.0433%" height="15" fill="rgb(222,191,20)" fg:x="52" fg:w="1"/><text x="2.5011%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="2.2511%" y="741" width="0.0433%" height="15" fill="rgb(245,79,54)" fg:x="52" fg:w="1"/><text x="2.5011%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="2.2511%" y="725" width="0.0433%" height="15" fill="rgb(240,10,37)" fg:x="52" fg:w="1"/><text x="2.5011%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="2.2511%" y="709" width="0.0433%" height="15" fill="rgb(214,192,32)" fg:x="52" fg:w="1"/><text x="2.5011%" y="719.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="2.2511%" y="693" width="0.0433%" height="15" fill="rgb(209,36,54)" fg:x="52" fg:w="1"/><text x="2.5011%" y="703.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.04%)</title><rect x="2.2511%" y="677" width="0.0433%" height="15" fill="rgb(220,10,11)" fg:x="52" fg:w="1"/><text x="2.5011%" y="687.50"></text></g><g><title>_int_realloc (1 samples, 0.04%)</title><rect x="2.2511%" y="661" width="0.0433%" height="15" fill="rgb(221,106,17)" fg:x="52" fg:w="1"/><text x="2.5011%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="2.2511%" y="645" width="0.0433%" height="15" fill="rgb(251,142,44)" fg:x="52" fg:w="1"/><text x="2.5011%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="2.2944%" y="1173" width="0.0433%" height="15" fill="rgb(238,13,15)" fg:x="53" fg:w="1"/><text x="2.5444%" y="1183.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="2.2944%" y="1157" width="0.0433%" height="15" fill="rgb(208,107,27)" fg:x="53" fg:w="1"/><text x="2.5444%" y="1167.50"></text></g><g><title>y2021::d04::main::p01 (2 samples, 0.09%)</title><rect x="2.2944%" y="1205" width="0.0866%" height="15" fill="rgb(205,136,37)" fg:x="53" fg:w="2"/><text x="2.5444%" y="1215.50"></text></g><g><title>y2021::d04::main::bingo_game_from_path (2 samples, 0.09%)</title><rect x="2.2944%" y="1189" width="0.0866%" height="15" fill="rgb(250,205,27)" fg:x="53" fg:w="2"/><text x="2.5444%" y="1199.50"></text></g><g><title>y2021::utils::file::line_as_str (1 samples, 0.04%)</title><rect x="2.3377%" y="1173" width="0.0433%" height="15" fill="rgb(210,80,43)" fg:x="54" fg:w="1"/><text x="2.5877%" y="1183.50"></text></g><g><title>&lt;alloc::string::String as alloc::string::ToString&gt;::to_string (1 samples, 0.04%)</title><rect x="2.3377%" y="1157" width="0.0433%" height="15" fill="rgb(247,160,36)" fg:x="54" fg:w="1"/><text x="2.5877%" y="1167.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.04%)</title><rect x="2.3377%" y="1141" width="0.0433%" height="15" fill="rgb(234,13,49)" fg:x="54" fg:w="1"/><text x="2.5877%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="2.3377%" y="1125" width="0.0433%" height="15" fill="rgb(234,122,0)" fg:x="54" fg:w="1"/><text x="2.5877%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="2.3377%" y="1109" width="0.0433%" height="15" fill="rgb(207,146,38)" fg:x="54" fg:w="1"/><text x="2.5877%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="2.3377%" y="1093" width="0.0433%" height="15" fill="rgb(207,177,25)" fg:x="54" fg:w="1"/><text x="2.5877%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="2.3377%" y="1077" width="0.0433%" height="15" fill="rgb(211,178,42)" fg:x="54" fg:w="1"/><text x="2.5877%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="2.3377%" y="1061" width="0.0433%" height="15" fill="rgb(230,69,54)" fg:x="54" fg:w="1"/><text x="2.5877%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="2.3377%" y="1045" width="0.0433%" height="15" fill="rgb(214,135,41)" fg:x="54" fg:w="1"/><text x="2.5877%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="2.3377%" y="1029" width="0.0433%" height="15" fill="rgb(237,67,25)" fg:x="54" fg:w="1"/><text x="2.5877%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="2.3377%" y="1013" width="0.0433%" height="15" fill="rgb(222,189,50)" fg:x="54" fg:w="1"/><text x="2.5877%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="2.3377%" y="997" width="0.0433%" height="15" fill="rgb(245,148,34)" fg:x="54" fg:w="1"/><text x="2.5877%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="2.3377%" y="981" width="0.0433%" height="15" fill="rgb(222,29,6)" fg:x="54" fg:w="1"/><text x="2.5877%" y="991.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="2.3377%" y="965" width="0.0433%" height="15" fill="rgb(221,189,43)" fg:x="54" fg:w="1"/><text x="2.5877%" y="975.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="2.3377%" y="949" width="0.0433%" height="15" fill="rgb(207,36,27)" fg:x="54" fg:w="1"/><text x="2.5877%" y="959.50"></text></g><g><title>y2021::d04::main::BingoPlayer::take (1 samples, 0.04%)</title><rect x="2.3810%" y="1189" width="0.0433%" height="15" fill="rgb(217,90,24)" fg:x="55" fg:w="1"/><text x="2.6310%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="2.4242%" y="1061" width="0.0433%" height="15" fill="rgb(224,66,35)" fg:x="56" fg:w="1"/><text x="2.6742%" y="1071.50"></text></g><g><title>&lt;core::str::iter::SplitAsciiWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="2.4242%" y="1045" width="0.0433%" height="15" fill="rgb(221,13,50)" fg:x="56" fg:w="1"/><text x="2.6742%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="2.4242%" y="1029" width="0.0433%" height="15" fill="rgb(236,68,49)" fg:x="56" fg:w="1"/><text x="2.6742%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="2.4242%" y="1013" width="0.0433%" height="15" fill="rgb(229,146,28)" fg:x="56" fg:w="1"/><text x="2.6742%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.04%)</title><rect x="2.4242%" y="997" width="0.0433%" height="15" fill="rgb(225,31,38)" fg:x="56" fg:w="1"/><text x="2.6742%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="2.4242%" y="981" width="0.0433%" height="15" fill="rgb(250,208,3)" fg:x="56" fg:w="1"/><text x="2.6742%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Split&lt;T,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="2.4242%" y="965" width="0.0433%" height="15" fill="rgb(246,54,23)" fg:x="56" fg:w="1"/><text x="2.6742%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.04%)</title><rect x="2.4242%" y="949" width="0.0433%" height="15" fill="rgb(243,76,11)" fg:x="56" fg:w="1"/><text x="2.6742%" y="959.50"></text></g><g><title>y2021::d04::main::run (5 samples, 0.22%)</title><rect x="2.2944%" y="1221" width="0.2165%" height="15" fill="rgb(245,21,50)" fg:x="53" fg:w="5"/><text x="2.5444%" y="1231.50"></text></g><g><title>y2021::d04::main::p02 (3 samples, 0.13%)</title><rect x="2.3810%" y="1205" width="0.1299%" height="15" fill="rgb(228,9,43)" fg:x="55" fg:w="3"/><text x="2.6310%" y="1215.50"></text></g><g><title>y2021::d04::main::bingo_game_from_path (2 samples, 0.09%)</title><rect x="2.4242%" y="1189" width="0.0866%" height="15" fill="rgb(208,100,47)" fg:x="56" fg:w="2"/><text x="2.6742%" y="1199.50"></text></g><g><title>y2021::d04::main::bingo_line_to_vec (2 samples, 0.09%)</title><rect x="2.4242%" y="1173" width="0.0866%" height="15" fill="rgb(232,26,8)" fg:x="56" fg:w="2"/><text x="2.6742%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.09%)</title><rect x="2.4242%" y="1157" width="0.0866%" height="15" fill="rgb(216,166,38)" fg:x="56" fg:w="2"/><text x="2.6742%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="2.4242%" y="1141" width="0.0866%" height="15" fill="rgb(251,202,51)" fg:x="56" fg:w="2"/><text x="2.6742%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="2.4242%" y="1125" width="0.0866%" height="15" fill="rgb(254,216,34)" fg:x="56" fg:w="2"/><text x="2.6742%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="2.4242%" y="1109" width="0.0866%" height="15" fill="rgb(251,32,27)" fg:x="56" fg:w="2"/><text x="2.6742%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.09%)</title><rect x="2.4242%" y="1093" width="0.0866%" height="15" fill="rgb(208,127,28)" fg:x="56" fg:w="2"/><text x="2.6742%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.09%)</title><rect x="2.4242%" y="1077" width="0.0866%" height="15" fill="rgb(224,137,22)" fg:x="56" fg:w="2"/><text x="2.6742%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="2.4675%" y="1061" width="0.0433%" height="15" fill="rgb(254,70,32)" fg:x="57" fg:w="1"/><text x="2.7175%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="2.4675%" y="1045" width="0.0433%" height="15" fill="rgb(229,75,37)" fg:x="57" fg:w="1"/><text x="2.7175%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="2.4675%" y="1029" width="0.0433%" height="15" fill="rgb(252,64,23)" fg:x="57" fg:w="1"/><text x="2.7175%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="2.4675%" y="1013" width="0.0433%" height="15" fill="rgb(232,162,48)" fg:x="57" fg:w="1"/><text x="2.7175%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="2.4675%" y="997" width="0.0433%" height="15" fill="rgb(246,160,12)" fg:x="57" fg:w="1"/><text x="2.7175%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="2.4675%" y="981" width="0.0433%" height="15" fill="rgb(247,166,0)" fg:x="57" fg:w="1"/><text x="2.7175%" y="991.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="2.4675%" y="965" width="0.0433%" height="15" fill="rgb(249,219,21)" fg:x="57" fg:w="1"/><text x="2.7175%" y="975.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="2.4675%" y="949" width="0.0433%" height="15" fill="rgb(205,209,3)" fg:x="57" fg:w="1"/><text x="2.7175%" y="959.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.04%)</title><rect x="2.4675%" y="933" width="0.0433%" height="15" fill="rgb(243,44,1)" fg:x="57" fg:w="1"/><text x="2.7175%" y="943.50"></text></g><g><title>_int_realloc (1 samples, 0.04%)</title><rect x="2.4675%" y="917" width="0.0433%" height="15" fill="rgb(206,159,16)" fg:x="57" fg:w="1"/><text x="2.7175%" y="927.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="2.4675%" y="901" width="0.0433%" height="15" fill="rgb(244,77,30)" fg:x="57" fg:w="1"/><text x="2.7175%" y="911.50"></text></g><g><title>std::io::stdio::_print (1 samples, 0.04%)</title><rect x="2.5108%" y="1205" width="0.0433%" height="15" fill="rgb(218,69,12)" fg:x="58" fg:w="1"/><text x="2.7608%" y="1215.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.04%)</title><rect x="2.5108%" y="1189" width="0.0433%" height="15" fill="rgb(212,87,7)" fg:x="58" fg:w="1"/><text x="2.7608%" y="1199.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.04%)</title><rect x="2.5108%" y="1173" width="0.0433%" height="15" fill="rgb(245,114,25)" fg:x="58" fg:w="1"/><text x="2.7608%" y="1183.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.04%)</title><rect x="2.5108%" y="1157" width="0.0433%" height="15" fill="rgb(210,61,42)" fg:x="58" fg:w="1"/><text x="2.7608%" y="1167.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.04%)</title><rect x="2.5108%" y="1141" width="0.0433%" height="15" fill="rgb(211,52,33)" fg:x="58" fg:w="1"/><text x="2.7608%" y="1151.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="2.5108%" y="1125" width="0.0433%" height="15" fill="rgb(234,58,33)" fg:x="58" fg:w="1"/><text x="2.7608%" y="1135.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="2.5108%" y="1109" width="0.0433%" height="15" fill="rgb(220,115,36)" fg:x="58" fg:w="1"/><text x="2.7608%" y="1119.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="2.5108%" y="1093" width="0.0433%" height="15" fill="rgb(243,153,54)" fg:x="58" fg:w="1"/><text x="2.7608%" y="1103.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="2.5108%" y="1077" width="0.0433%" height="15" fill="rgb(251,47,18)" fg:x="58" fg:w="1"/><text x="2.7608%" y="1087.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="2.5108%" y="1061" width="0.0433%" height="15" fill="rgb(242,102,42)" fg:x="58" fg:w="1"/><text x="2.7608%" y="1071.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.04%)</title><rect x="2.5108%" y="1045" width="0.0433%" height="15" fill="rgb(234,31,38)" fg:x="58" fg:w="1"/><text x="2.7608%" y="1055.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="2.5108%" y="1029" width="0.0433%" height="15" fill="rgb(221,117,51)" fg:x="58" fg:w="1"/><text x="2.7608%" y="1039.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="2.5108%" y="1013" width="0.0433%" height="15" fill="rgb(212,20,18)" fg:x="58" fg:w="1"/><text x="2.7608%" y="1023.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.04%)</title><rect x="2.5108%" y="997" width="0.0433%" height="15" fill="rgb(245,133,36)" fg:x="58" fg:w="1"/><text x="2.7608%" y="1007.50"></text></g><g><title>__libc_write (1 samples, 0.04%)</title><rect x="2.5108%" y="981" width="0.0433%" height="15" fill="rgb(212,6,19)" fg:x="58" fg:w="1"/><text x="2.7608%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="2.5108%" y="965" width="0.0433%" height="15" fill="rgb(218,1,36)" fg:x="58" fg:w="1"/><text x="2.7608%" y="975.50"></text></g><g><title>do_syscall_64 (1 samples, 0.04%)</title><rect x="2.5108%" y="949" width="0.0433%" height="15" fill="rgb(246,84,54)" fg:x="58" fg:w="1"/><text x="2.7608%" y="959.50"></text></g><g><title>__x64_sys_write (1 samples, 0.04%)</title><rect x="2.5108%" y="933" width="0.0433%" height="15" fill="rgb(242,110,6)" fg:x="58" fg:w="1"/><text x="2.7608%" y="943.50"></text></g><g><title>ksys_write (1 samples, 0.04%)</title><rect x="2.5108%" y="917" width="0.0433%" height="15" fill="rgb(214,47,5)" fg:x="58" fg:w="1"/><text x="2.7608%" y="927.50"></text></g><g><title>vfs_write (1 samples, 0.04%)</title><rect x="2.5108%" y="901" width="0.0433%" height="15" fill="rgb(218,159,25)" fg:x="58" fg:w="1"/><text x="2.7608%" y="911.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (7 samples, 0.30%)</title><rect x="3.2468%" y="869" width="0.3030%" height="15" fill="rgb(215,211,28)" fg:x="75" fg:w="7"/><text x="3.4968%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (7 samples, 0.30%)</title><rect x="3.2468%" y="853" width="0.3030%" height="15" fill="rgb(238,59,32)" fg:x="75" fg:w="7"/><text x="3.4968%" y="863.50"></text></g><g><title>core::ptr::write (7 samples, 0.30%)</title><rect x="3.2468%" y="837" width="0.3030%" height="15" fill="rgb(226,82,3)" fg:x="75" fg:w="7"/><text x="3.4968%" y="847.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="3.5498%" y="837" width="0.0433%" height="15" fill="rgb(240,164,32)" fg:x="82" fg:w="1"/><text x="3.7998%" y="847.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (11 samples, 0.48%)</title><rect x="3.2035%" y="933" width="0.4762%" height="15" fill="rgb(232,46,7)" fg:x="74" fg:w="11"/><text x="3.4535%" y="943.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (11 samples, 0.48%)</title><rect x="3.2035%" y="917" width="0.4762%" height="15" fill="rgb(229,129,53)" fg:x="74" fg:w="11"/><text x="3.4535%" y="927.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (11 samples, 0.48%)</title><rect x="3.2035%" y="901" width="0.4762%" height="15" fill="rgb(234,188,29)" fg:x="74" fg:w="11"/><text x="3.4535%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (11 samples, 0.48%)</title><rect x="3.2035%" y="885" width="0.4762%" height="15" fill="rgb(246,141,4)" fg:x="74" fg:w="11"/><text x="3.4535%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (3 samples, 0.13%)</title><rect x="3.5498%" y="869" width="0.1299%" height="15" fill="rgb(229,23,39)" fg:x="82" fg:w="3"/><text x="3.7998%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (3 samples, 0.13%)</title><rect x="3.5498%" y="853" width="0.1299%" height="15" fill="rgb(206,12,3)" fg:x="82" fg:w="3"/><text x="3.7998%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.09%)</title><rect x="3.5931%" y="837" width="0.0866%" height="15" fill="rgb(252,226,20)" fg:x="83" fg:w="2"/><text x="3.8431%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.09%)</title><rect x="3.5931%" y="821" width="0.0866%" height="15" fill="rgb(216,123,35)" fg:x="83" fg:w="2"/><text x="3.8431%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.09%)</title><rect x="3.5931%" y="805" width="0.0866%" height="15" fill="rgb(212,68,40)" fg:x="83" fg:w="2"/><text x="3.8431%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="3.7662%" y="837" width="0.0433%" height="15" fill="rgb(254,125,32)" fg:x="87" fg:w="1"/><text x="4.0162%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="3.7662%" y="821" width="0.0433%" height="15" fill="rgb(253,97,22)" fg:x="87" fg:w="1"/><text x="4.0162%" y="831.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="3.7662%" y="805" width="0.0433%" height="15" fill="rgb(241,101,14)" fg:x="87" fg:w="1"/><text x="4.0162%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.04%)</title><rect x="3.8095%" y="837" width="0.0433%" height="15" fill="rgb(238,103,29)" fg:x="88" fg:w="1"/><text x="4.0595%" y="847.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="3.8095%" y="821" width="0.0433%" height="15" fill="rgb(233,195,47)" fg:x="88" fg:w="1"/><text x="4.0595%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.04%)</title><rect x="3.8095%" y="805" width="0.0433%" height="15" fill="rgb(246,218,30)" fg:x="88" fg:w="1"/><text x="4.0595%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.04%)</title><rect x="3.8095%" y="789" width="0.0433%" height="15" fill="rgb(219,145,47)" fg:x="88" fg:w="1"/><text x="4.0595%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="3.8095%" y="773" width="0.0433%" height="15" fill="rgb(243,12,26)" fg:x="88" fg:w="1"/><text x="4.0595%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="3.8095%" y="757" width="0.0433%" height="15" fill="rgb(214,87,16)" fg:x="88" fg:w="1"/><text x="4.0595%" y="767.50"></text></g><g><title>__GI_munmap (1 samples, 0.04%)</title><rect x="3.8095%" y="741" width="0.0433%" height="15" fill="rgb(208,99,42)" fg:x="88" fg:w="1"/><text x="4.0595%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="3.8095%" y="725" width="0.0433%" height="15" fill="rgb(253,99,2)" fg:x="88" fg:w="1"/><text x="4.0595%" y="735.50"></text></g><g><title>do_syscall_64 (1 samples, 0.04%)</title><rect x="3.8095%" y="709" width="0.0433%" height="15" fill="rgb(220,168,23)" fg:x="88" fg:w="1"/><text x="4.0595%" y="719.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.04%)</title><rect x="3.8095%" y="693" width="0.0433%" height="15" fill="rgb(242,38,24)" fg:x="88" fg:w="1"/><text x="4.0595%" y="703.50"></text></g><g><title>__vm_munmap (1 samples, 0.04%)</title><rect x="3.8095%" y="677" width="0.0433%" height="15" fill="rgb(225,182,9)" fg:x="88" fg:w="1"/><text x="4.0595%" y="687.50"></text></g><g><title>__do_munmap (1 samples, 0.04%)</title><rect x="3.8095%" y="661" width="0.0433%" height="15" fill="rgb(243,178,37)" fg:x="88" fg:w="1"/><text x="4.0595%" y="671.50"></text></g><g><title>unmap_region (1 samples, 0.04%)</title><rect x="3.8095%" y="645" width="0.0433%" height="15" fill="rgb(232,139,19)" fg:x="88" fg:w="1"/><text x="4.0595%" y="655.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.04%)</title><rect x="3.8095%" y="629" width="0.0433%" height="15" fill="rgb(225,201,24)" fg:x="88" fg:w="1"/><text x="4.0595%" y="639.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.04%)</title><rect x="3.8095%" y="613" width="0.0433%" height="15" fill="rgb(221,47,46)" fg:x="88" fg:w="1"/><text x="4.0595%" y="623.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.04%)</title><rect x="3.8095%" y="597" width="0.0433%" height="15" fill="rgb(249,23,13)" fg:x="88" fg:w="1"/><text x="4.0595%" y="607.50"></text></g><g><title>release_pages (1 samples, 0.04%)</title><rect x="3.8095%" y="581" width="0.0433%" height="15" fill="rgb(219,9,5)" fg:x="88" fg:w="1"/><text x="4.0595%" y="591.50"></text></g><g><title>mem_cgroup_uncharge_list (1 samples, 0.04%)</title><rect x="3.8095%" y="565" width="0.0433%" height="15" fill="rgb(254,171,16)" fg:x="88" fg:w="1"/><text x="4.0595%" y="575.50"></text></g><g><title>uncharge_page (1 samples, 0.04%)</title><rect x="3.8095%" y="549" width="0.0433%" height="15" fill="rgb(230,171,20)" fg:x="88" fg:w="1"/><text x="4.0595%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.13%)</title><rect x="4.5887%" y="757" width="0.1299%" height="15" fill="rgb(210,71,41)" fg:x="106" fg:w="3"/><text x="4.8387%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.09%)</title><rect x="4.6320%" y="741" width="0.0866%" height="15" fill="rgb(206,173,20)" fg:x="107" fg:w="2"/><text x="4.8820%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.39%)</title><rect x="4.7186%" y="741" width="0.3896%" height="15" fill="rgb(233,88,34)" fg:x="109" fg:w="9"/><text x="4.9686%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (21 samples, 0.91%)</title><rect x="4.2424%" y="805" width="0.9091%" height="15" fill="rgb(223,209,46)" fg:x="98" fg:w="21"/><text x="4.4924%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21 samples, 0.91%)</title><rect x="4.2424%" y="789" width="0.9091%" height="15" fill="rgb(250,43,18)" fg:x="98" fg:w="21"/><text x="4.4924%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21 samples, 0.91%)</title><rect x="4.2424%" y="773" width="0.9091%" height="15" fill="rgb(208,13,10)" fg:x="98" fg:w="21"/><text x="4.4924%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.43%)</title><rect x="4.7186%" y="757" width="0.4329%" height="15" fill="rgb(212,200,36)" fg:x="109" fg:w="10"/><text x="4.9686%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="5.1082%" y="741" width="0.0433%" height="15" fill="rgb(225,90,30)" fg:x="118" fg:w="1"/><text x="5.3582%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.22%)</title><rect x="5.4545%" y="693" width="0.2165%" height="15" fill="rgb(236,182,39)" fg:x="126" fg:w="5"/><text x="5.7045%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.39%)</title><rect x="5.3247%" y="709" width="0.3896%" height="15" fill="rgb(212,144,35)" fg:x="123" fg:w="9"/><text x="5.5747%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="5.6710%" y="693" width="0.0433%" height="15" fill="rgb(228,63,44)" fg:x="131" fg:w="1"/><text x="5.9210%" y="703.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (44 samples, 1.90%)</title><rect x="3.8528%" y="837" width="1.9048%" height="15" fill="rgb(228,109,6)" fg:x="89" fg:w="44"/><text x="4.1028%" y="847.50">h..</text></g><g><title>hashbrown::map::make_hash (37 samples, 1.60%)</title><rect x="4.1558%" y="821" width="1.6017%" height="15" fill="rgb(238,117,24)" fg:x="96" fg:w="37"/><text x="4.4058%" y="831.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (14 samples, 0.61%)</title><rect x="5.1515%" y="805" width="0.6061%" height="15" fill="rgb(242,26,26)" fg:x="119" fg:w="14"/><text x="5.4015%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (14 samples, 0.61%)</title><rect x="5.1515%" y="789" width="0.6061%" height="15" fill="rgb(221,92,48)" fg:x="119" fg:w="14"/><text x="5.4015%" y="799.50"></text></g><g><title>core::hash::Hasher::write_usize (14 samples, 0.61%)</title><rect x="5.1515%" y="773" width="0.6061%" height="15" fill="rgb(209,209,32)" fg:x="119" fg:w="14"/><text x="5.4015%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.61%)</title><rect x="5.1515%" y="757" width="0.6061%" height="15" fill="rgb(221,70,22)" fg:x="119" fg:w="14"/><text x="5.4015%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.61%)</title><rect x="5.1515%" y="741" width="0.6061%" height="15" fill="rgb(248,145,5)" fg:x="119" fg:w="14"/><text x="5.4015%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.61%)</title><rect x="5.1515%" y="725" width="0.6061%" height="15" fill="rgb(226,116,26)" fg:x="119" fg:w="14"/><text x="5.4015%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="5.7143%" y="709" width="0.0433%" height="15" fill="rgb(244,5,17)" fg:x="132" fg:w="1"/><text x="5.9643%" y="719.50"></text></g><g><title>clear_page_rep (8 samples, 0.35%)</title><rect x="6.2338%" y="645" width="0.3463%" height="15" fill="rgb(252,159,33)" fg:x="144" fg:w="8"/><text x="6.4838%" y="655.50"></text></g><g><title>alloc_pages_vma (11 samples, 0.48%)</title><rect x="6.1905%" y="693" width="0.4762%" height="15" fill="rgb(206,71,0)" fg:x="143" fg:w="11"/><text x="6.4405%" y="703.50"></text></g><g><title>__alloc_pages_nodemask (11 samples, 0.48%)</title><rect x="6.1905%" y="677" width="0.4762%" height="15" fill="rgb(233,118,54)" fg:x="143" fg:w="11"/><text x="6.4405%" y="687.50"></text></g><g><title>get_page_from_freelist (10 samples, 0.43%)</title><rect x="6.2338%" y="661" width="0.4329%" height="15" fill="rgb(234,83,48)" fg:x="144" fg:w="10"/><text x="6.4838%" y="671.50"></text></g><g><title>rmqueue (2 samples, 0.09%)</title><rect x="6.5801%" y="645" width="0.0866%" height="15" fill="rgb(228,3,54)" fg:x="152" fg:w="2"/><text x="6.8301%" y="655.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="6.6667%" y="645" width="0.0433%" height="15" fill="rgb(226,155,13)" fg:x="154" fg:w="1"/><text x="6.9167%" y="655.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.04%)</title><rect x="6.6667%" y="629" width="0.0433%" height="15" fill="rgb(241,28,37)" fg:x="154" fg:w="1"/><text x="6.9167%" y="639.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (2 samples, 0.09%)</title><rect x="6.6667%" y="693" width="0.0866%" height="15" fill="rgb(233,93,10)" fg:x="154" fg:w="2"/><text x="6.9167%" y="703.50"></text></g><g><title>lru_cache_add (2 samples, 0.09%)</title><rect x="6.6667%" y="677" width="0.0866%" height="15" fill="rgb(225,113,19)" fg:x="154" fg:w="2"/><text x="6.9167%" y="687.50"></text></g><g><title>__pagevec_lru_add (2 samples, 0.09%)</title><rect x="6.6667%" y="661" width="0.0866%" height="15" fill="rgb(241,2,18)" fg:x="154" fg:w="2"/><text x="6.9167%" y="671.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.04%)</title><rect x="6.7100%" y="645" width="0.0433%" height="15" fill="rgb(228,207,21)" fg:x="155" fg:w="1"/><text x="6.9600%" y="655.50"></text></g><g><title>__handle_mm_fault (14 samples, 0.61%)</title><rect x="6.1905%" y="725" width="0.6061%" height="15" fill="rgb(213,211,35)" fg:x="143" fg:w="14"/><text x="6.4405%" y="735.50"></text></g><g><title>do_anonymous_page (14 samples, 0.61%)</title><rect x="6.1905%" y="709" width="0.6061%" height="15" fill="rgb(209,83,10)" fg:x="143" fg:w="14"/><text x="6.4405%" y="719.50"></text></g><g><title>mem_cgroup_charge (1 samples, 0.04%)</title><rect x="6.7532%" y="693" width="0.0433%" height="15" fill="rgb(209,164,1)" fg:x="156" fg:w="1"/><text x="7.0032%" y="703.50"></text></g><g><title>try_charge (1 samples, 0.04%)</title><rect x="6.7532%" y="677" width="0.0433%" height="15" fill="rgb(213,184,43)" fg:x="156" fg:w="1"/><text x="7.0032%" y="687.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.04%)</title><rect x="6.7532%" y="661" width="0.0433%" height="15" fill="rgb(231,61,34)" fg:x="156" fg:w="1"/><text x="7.0032%" y="671.50"></text></g><g><title>handle_mm_fault (15 samples, 0.65%)</title><rect x="6.1905%" y="741" width="0.6494%" height="15" fill="rgb(235,75,3)" fg:x="143" fg:w="15"/><text x="6.4405%" y="751.50"></text></g><g><title>sync_mm_rss (1 samples, 0.04%)</title><rect x="6.7965%" y="725" width="0.0433%" height="15" fill="rgb(220,106,47)" fg:x="157" fg:w="1"/><text x="7.0465%" y="735.50"></text></g><g><title>asm_exc_page_fault (21 samples, 0.91%)</title><rect x="5.9740%" y="789" width="0.9091%" height="15" fill="rgb(210,196,33)" fg:x="138" fg:w="21"/><text x="6.2240%" y="799.50"></text></g><g><title>exc_page_fault (17 samples, 0.74%)</title><rect x="6.1472%" y="773" width="0.7359%" height="15" fill="rgb(229,154,42)" fg:x="142" fg:w="17"/><text x="6.3972%" y="783.50"></text></g><g><title>do_user_addr_fault (16 samples, 0.69%)</title><rect x="6.1905%" y="757" width="0.6926%" height="15" fill="rgb(228,114,26)" fg:x="143" fg:w="16"/><text x="6.4405%" y="767.50"></text></g><g><title>mem_cgroup_from_task (1 samples, 0.04%)</title><rect x="6.8398%" y="741" width="0.0433%" height="15" fill="rgb(208,144,1)" fg:x="158" fg:w="1"/><text x="7.0898%" y="751.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (27 samples, 1.17%)</title><rect x="5.7576%" y="837" width="1.1688%" height="15" fill="rgb(239,112,37)" fg:x="133" fg:w="27"/><text x="6.0076%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (27 samples, 1.17%)</title><rect x="5.7576%" y="821" width="1.1688%" height="15" fill="rgb(210,96,50)" fg:x="133" fg:w="27"/><text x="6.0076%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 1.17%)</title><rect x="5.7576%" y="805" width="1.1688%" height="15" fill="rgb(222,178,2)" fg:x="133" fg:w="27"/><text x="6.0076%" y="815.50"></text></g><g><title>sync_regs (1 samples, 0.04%)</title><rect x="6.8831%" y="789" width="0.0433%" height="15" fill="rgb(226,74,18)" fg:x="159" fg:w="1"/><text x="7.1331%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.04%)</title><rect x="6.9264%" y="837" width="0.0433%" height="15" fill="rgb(225,67,54)" fg:x="160" fg:w="1"/><text x="7.1764%" y="847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.04%)</title><rect x="6.9264%" y="821" width="0.0433%" height="15" fill="rgb(251,92,32)" fg:x="160" fg:w="1"/><text x="7.1764%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.04%)</title><rect x="6.9264%" y="805" width="0.0433%" height="15" fill="rgb(228,149,22)" fg:x="160" fg:w="1"/><text x="7.1764%" y="815.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.04%)</title><rect x="6.9264%" y="789" width="0.0433%" height="15" fill="rgb(243,54,13)" fg:x="160" fg:w="1"/><text x="7.1764%" y="799.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.04%)</title><rect x="6.9264%" y="773" width="0.0433%" height="15" fill="rgb(243,180,28)" fg:x="160" fg:w="1"/><text x="7.1764%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.04%)</title><rect x="7.0563%" y="805" width="0.0433%" height="15" fill="rgb(208,167,24)" fg:x="163" fg:w="1"/><text x="7.3063%" y="815.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.13%)</title><rect x="7.0996%" y="805" width="0.1299%" height="15" fill="rgb(245,73,45)" fg:x="164" fg:w="3"/><text x="7.3496%" y="815.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.04%)</title><rect x="7.2294%" y="805" width="0.0433%" height="15" fill="rgb(237,203,48)" fg:x="167" fg:w="1"/><text x="7.4794%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (11 samples, 0.48%)</title><rect x="6.9697%" y="837" width="0.4762%" height="15" fill="rgb(211,197,16)" fg:x="161" fg:w="11"/><text x="7.2197%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (11 samples, 0.48%)</title><rect x="6.9697%" y="821" width="0.4762%" height="15" fill="rgb(243,99,51)" fg:x="161" fg:w="11"/><text x="7.2197%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.17%)</title><rect x="7.2727%" y="805" width="0.1732%" height="15" fill="rgb(215,123,29)" fg:x="168" fg:w="4"/><text x="7.5227%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.17%)</title><rect x="7.2727%" y="789" width="0.1732%" height="15" fill="rgb(239,186,37)" fg:x="168" fg:w="4"/><text x="7.5227%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (86 samples, 3.72%)</title><rect x="3.7662%" y="901" width="3.7229%" height="15" fill="rgb(252,136,39)" fg:x="87" fg:w="86"/><text x="4.0162%" y="911.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (86 samples, 3.72%)</title><rect x="3.7662%" y="885" width="3.7229%" height="15" fill="rgb(223,213,32)" fg:x="87" fg:w="86"/><text x="4.0162%" y="895.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (86 samples, 3.72%)</title><rect x="3.7662%" y="869" width="3.7229%" height="15" fill="rgb(233,115,5)" fg:x="87" fg:w="86"/><text x="4.0162%" y="879.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (86 samples, 3.72%)</title><rect x="3.7662%" y="853" width="3.7229%" height="15" fill="rgb(207,226,44)" fg:x="87" fg:w="86"/><text x="4.0162%" y="863.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.04%)</title><rect x="7.4459%" y="837" width="0.0433%" height="15" fill="rgb(208,126,0)" fg:x="172" fg:w="1"/><text x="7.6959%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.04%)</title><rect x="7.4459%" y="821" width="0.0433%" height="15" fill="rgb(244,66,21)" fg:x="172" fg:w="1"/><text x="7.6959%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.04%)</title><rect x="7.4459%" y="805" width="0.0433%" height="15" fill="rgb(222,97,12)" fg:x="172" fg:w="1"/><text x="7.6959%" y="815.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.04%)</title><rect x="7.4459%" y="789" width="0.0433%" height="15" fill="rgb(219,213,19)" fg:x="172" fg:w="1"/><text x="7.6959%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="7.4459%" y="773" width="0.0433%" height="15" fill="rgb(252,169,30)" fg:x="172" fg:w="1"/><text x="7.6959%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="7.4459%" y="757" width="0.0433%" height="15" fill="rgb(206,32,51)" fg:x="172" fg:w="1"/><text x="7.6959%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="7.4459%" y="741" width="0.0433%" height="15" fill="rgb(250,172,42)" fg:x="172" fg:w="1"/><text x="7.6959%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="7.4459%" y="725" width="0.0433%" height="15" fill="rgb(209,34,43)" fg:x="172" fg:w="1"/><text x="7.6959%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="7.4459%" y="709" width="0.0433%" height="15" fill="rgb(223,11,35)" fg:x="172" fg:w="1"/><text x="7.6959%" y="719.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.04%)</title><rect x="7.4459%" y="693" width="0.0433%" height="15" fill="rgb(251,219,26)" fg:x="172" fg:w="1"/><text x="7.6959%" y="703.50"></text></g><g><title>exc_page_fault (1 samples, 0.04%)</title><rect x="7.4459%" y="677" width="0.0433%" height="15" fill="rgb(231,119,3)" fg:x="172" fg:w="1"/><text x="7.6959%" y="687.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="7.4459%" y="661" width="0.0433%" height="15" fill="rgb(216,97,11)" fg:x="172" fg:w="1"/><text x="7.6959%" y="671.50"></text></g><g><title>handle_mm_fault (1 samples, 0.04%)</title><rect x="7.4459%" y="645" width="0.0433%" height="15" fill="rgb(223,59,9)" fg:x="172" fg:w="1"/><text x="7.6959%" y="655.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="7.4459%" y="629" width="0.0433%" height="15" fill="rgb(233,93,31)" fg:x="172" fg:w="1"/><text x="7.6959%" y="639.50"></text></g><g><title>do_anonymous_page (1 samples, 0.04%)</title><rect x="7.4459%" y="613" width="0.0433%" height="15" fill="rgb(239,81,33)" fg:x="172" fg:w="1"/><text x="7.6959%" y="623.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.04%)</title><rect x="7.4459%" y="597" width="0.0433%" height="15" fill="rgb(213,120,34)" fg:x="172" fg:w="1"/><text x="7.6959%" y="607.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.04%)</title><rect x="7.4459%" y="581" width="0.0433%" height="15" fill="rgb(243,49,53)" fg:x="172" fg:w="1"/><text x="7.6959%" y="591.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="7.4459%" y="565" width="0.0433%" height="15" fill="rgb(247,216,33)" fg:x="172" fg:w="1"/><text x="7.6959%" y="575.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.04%)</title><rect x="7.4459%" y="549" width="0.0433%" height="15" fill="rgb(226,26,14)" fg:x="172" fg:w="1"/><text x="7.6959%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="7.5325%" y="837" width="0.0433%" height="15" fill="rgb(215,49,53)" fg:x="174" fg:w="1"/><text x="7.7825%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="7.5325%" y="821" width="0.0433%" height="15" fill="rgb(245,162,40)" fg:x="174" fg:w="1"/><text x="7.7825%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="7.4892%" y="885" width="0.1299%" height="15" fill="rgb(229,68,17)" fg:x="173" fg:w="3"/><text x="7.7392%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="7.4892%" y="869" width="0.1299%" height="15" fill="rgb(213,182,10)" fg:x="173" fg:w="3"/><text x="7.7392%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="7.4892%" y="853" width="0.1299%" height="15" fill="rgb(245,125,30)" fg:x="173" fg:w="3"/><text x="7.7392%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="7.5758%" y="837" width="0.0433%" height="15" fill="rgb(232,202,2)" fg:x="175" fg:w="1"/><text x="7.8258%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="7.5758%" y="821" width="0.0433%" height="15" fill="rgb(237,140,51)" fg:x="175" fg:w="1"/><text x="7.8258%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.09%)</title><rect x="7.9221%" y="773" width="0.0866%" height="15" fill="rgb(236,157,25)" fg:x="183" fg:w="2"/><text x="8.1721%" y="783.50"></text></g><g><title>hashbrown::map::make_insert_hash (13 samples, 0.56%)</title><rect x="7.4892%" y="901" width="0.5628%" height="15" fill="rgb(219,209,0)" fg:x="173" fg:w="13"/><text x="7.7392%" y="911.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (10 samples, 0.43%)</title><rect x="7.6190%" y="885" width="0.4329%" height="15" fill="rgb(240,116,54)" fg:x="176" fg:w="10"/><text x="7.8690%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (9 samples, 0.39%)</title><rect x="7.6623%" y="869" width="0.3896%" height="15" fill="rgb(216,10,36)" fg:x="177" fg:w="9"/><text x="7.9123%" y="879.50"></text></g><g><title>core::hash::Hasher::write_usize (7 samples, 0.30%)</title><rect x="7.7489%" y="853" width="0.3030%" height="15" fill="rgb(222,72,44)" fg:x="179" fg:w="7"/><text x="7.9989%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.30%)</title><rect x="7.7489%" y="837" width="0.3030%" height="15" fill="rgb(232,159,9)" fg:x="179" fg:w="7"/><text x="7.9989%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.30%)</title><rect x="7.7489%" y="821" width="0.3030%" height="15" fill="rgb(210,39,32)" fg:x="179" fg:w="7"/><text x="7.9989%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.30%)</title><rect x="7.7489%" y="805" width="0.3030%" height="15" fill="rgb(216,194,45)" fg:x="179" fg:w="7"/><text x="7.9989%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.13%)</title><rect x="7.9221%" y="789" width="0.1299%" height="15" fill="rgb(218,18,35)" fg:x="183" fg:w="3"/><text x="8.1721%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="8.0087%" y="773" width="0.0433%" height="15" fill="rgb(207,83,51)" fg:x="185" fg:w="1"/><text x="8.2587%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.22%)</title><rect x="8.3117%" y="885" width="0.2165%" height="15" fill="rgb(225,63,43)" fg:x="192" fg:w="5"/><text x="8.5617%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.22%)</title><rect x="8.3117%" y="869" width="0.2165%" height="15" fill="rgb(207,57,36)" fg:x="192" fg:w="5"/><text x="8.5617%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="8.3550%" y="853" width="0.1732%" height="15" fill="rgb(216,99,33)" fg:x="193" fg:w="4"/><text x="8.6050%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.04%)</title><rect x="8.5281%" y="837" width="0.0433%" height="15" fill="rgb(225,42,16)" fg:x="197" fg:w="1"/><text x="8.7781%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.04%)</title><rect x="8.5281%" y="821" width="0.0433%" height="15" fill="rgb(220,201,45)" fg:x="197" fg:w="1"/><text x="8.7781%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="8.5281%" y="805" width="0.0433%" height="15" fill="rgb(225,33,4)" fg:x="197" fg:w="1"/><text x="8.7781%" y="815.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (117 samples, 5.06%)</title><rect x="3.6797%" y="917" width="5.0649%" height="15" fill="rgb(224,33,50)" fg:x="85" fg:w="117"/><text x="3.9297%" y="927.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.69%)</title><rect x="8.0519%" y="901" width="0.6926%" height="15" fill="rgb(246,198,51)" fg:x="186" fg:w="16"/><text x="8.3019%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.22%)</title><rect x="8.5281%" y="885" width="0.2165%" height="15" fill="rgb(205,22,4)" fg:x="197" fg:w="5"/><text x="8.7781%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.22%)</title><rect x="8.5281%" y="869" width="0.2165%" height="15" fill="rgb(206,3,8)" fg:x="197" fg:w="5"/><text x="8.7781%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.22%)</title><rect x="8.5281%" y="853" width="0.2165%" height="15" fill="rgb(251,23,15)" fg:x="197" fg:w="5"/><text x="8.7781%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.17%)</title><rect x="8.5714%" y="837" width="0.1732%" height="15" fill="rgb(252,88,28)" fg:x="198" fg:w="4"/><text x="8.8214%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.17%)</title><rect x="8.5714%" y="821" width="0.1732%" height="15" fill="rgb(212,127,14)" fg:x="198" fg:w="4"/><text x="8.8214%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.17%)</title><rect x="8.5714%" y="805" width="0.1732%" height="15" fill="rgb(247,145,37)" fg:x="198" fg:w="4"/><text x="8.8214%" y="815.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4 samples, 0.17%)</title><rect x="8.5714%" y="789" width="0.1732%" height="15" fill="rgb(209,117,53)" fg:x="198" fg:w="4"/><text x="8.8214%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (152 samples, 6.58%)</title><rect x="2.5974%" y="997" width="6.5801%" height="15" fill="rgb(212,90,42)" fg:x="60" fg:w="152"/><text x="2.8474%" y="1007.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (152 samples, 6.58%)</title><rect x="2.5974%" y="981" width="6.5801%" height="15" fill="rgb(218,164,37)" fg:x="60" fg:w="152"/><text x="2.8474%" y="991.50">core::ite..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (152 samples, 6.58%)</title><rect x="2.5974%" y="965" width="6.5801%" height="15" fill="rgb(246,65,34)" fg:x="60" fg:w="152"/><text x="2.8474%" y="975.50">core::ops..</text></g><g><title>y2021::d05::main::p01::{{closure}} (147 samples, 6.36%)</title><rect x="2.8139%" y="949" width="6.3636%" height="15" fill="rgb(231,100,33)" fg:x="65" fg:w="147"/><text x="3.0639%" y="959.50">y2021::d..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (127 samples, 5.50%)</title><rect x="3.6797%" y="933" width="5.4978%" height="15" fill="rgb(228,126,14)" fg:x="85" fg:w="127"/><text x="3.9297%" y="943.50">std::co..</text></g><g><title>std::collections::hash::map::map_entry (10 samples, 0.43%)</title><rect x="8.7446%" y="917" width="0.4329%" height="15" fill="rgb(215,173,21)" fg:x="202" fg:w="10"/><text x="8.9946%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.04%)</title><rect x="9.1775%" y="773" width="0.0433%" height="15" fill="rgb(210,6,40)" fg:x="212" fg:w="1"/><text x="9.4275%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.04%)</title><rect x="9.1775%" y="757" width="0.0433%" height="15" fill="rgb(212,48,18)" fg:x="212" fg:w="1"/><text x="9.4275%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="9.1775%" y="741" width="0.0433%" height="15" fill="rgb(230,214,11)" fg:x="212" fg:w="1"/><text x="9.4275%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.22%)</title><rect x="9.1775%" y="901" width="0.2165%" height="15" fill="rgb(254,105,39)" fg:x="212" fg:w="5"/><text x="9.4275%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.22%)</title><rect x="9.1775%" y="885" width="0.2165%" height="15" fill="rgb(245,158,5)" fg:x="212" fg:w="5"/><text x="9.4275%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.22%)</title><rect x="9.1775%" y="869" width="0.2165%" height="15" fill="rgb(249,208,11)" fg:x="212" fg:w="5"/><text x="9.4275%" y="879.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (5 samples, 0.22%)</title><rect x="9.1775%" y="853" width="0.2165%" height="15" fill="rgb(210,39,28)" fg:x="212" fg:w="5"/><text x="9.4275%" y="863.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (5 samples, 0.22%)</title><rect x="9.1775%" y="837" width="0.2165%" height="15" fill="rgb(211,56,53)" fg:x="212" fg:w="5"/><text x="9.4275%" y="847.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (5 samples, 0.22%)</title><rect x="9.1775%" y="821" width="0.2165%" height="15" fill="rgb(226,201,30)" fg:x="212" fg:w="5"/><text x="9.4275%" y="831.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (5 samples, 0.22%)</title><rect x="9.1775%" y="805" width="0.2165%" height="15" fill="rgb(239,101,34)" fg:x="212" fg:w="5"/><text x="9.4275%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.22%)</title><rect x="9.1775%" y="789" width="0.2165%" height="15" fill="rgb(226,209,5)" fg:x="212" fg:w="5"/><text x="9.4275%" y="799.50"></text></g><g><title>y2021::types::line::Line::points::{{closure}} (4 samples, 0.17%)</title><rect x="9.2208%" y="773" width="0.1732%" height="15" fill="rgb(250,105,47)" fg:x="213" fg:w="4"/><text x="9.4708%" y="783.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (159 samples, 6.88%)</title><rect x="2.5541%" y="1029" width="6.8831%" height="15" fill="rgb(230,72,3)" fg:x="59" fg:w="159"/><text x="2.8041%" y="1039.50">core::ite..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (159 samples, 6.88%)</title><rect x="2.5541%" y="1013" width="6.8831%" height="15" fill="rgb(232,218,39)" fg:x="59" fg:w="159"/><text x="2.8041%" y="1023.50">core::ite..</text></g><g><title>y2021::d05::main::p01::{{closure}} (6 samples, 0.26%)</title><rect x="9.1775%" y="997" width="0.2597%" height="15" fill="rgb(248,166,6)" fg:x="212" fg:w="6"/><text x="9.4275%" y="1007.50"></text></g><g><title>y2021::types::line::Line::points (6 samples, 0.26%)</title><rect x="9.1775%" y="981" width="0.2597%" height="15" fill="rgb(247,89,20)" fg:x="212" fg:w="6"/><text x="9.4275%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.26%)</title><rect x="9.1775%" y="965" width="0.2597%" height="15" fill="rgb(248,130,54)" fg:x="212" fg:w="6"/><text x="9.4275%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.26%)</title><rect x="9.1775%" y="949" width="0.2597%" height="15" fill="rgb(234,196,4)" fg:x="212" fg:w="6"/><text x="9.4275%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.26%)</title><rect x="9.1775%" y="933" width="0.2597%" height="15" fill="rgb(250,143,31)" fg:x="212" fg:w="6"/><text x="9.4275%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.26%)</title><rect x="9.1775%" y="917" width="0.2597%" height="15" fill="rgb(211,110,34)" fg:x="212" fg:w="6"/><text x="9.4275%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.04%)</title><rect x="9.3939%" y="901" width="0.0433%" height="15" fill="rgb(215,124,48)" fg:x="217" fg:w="1"/><text x="9.6439%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="9.3939%" y="885" width="0.0433%" height="15" fill="rgb(216,46,13)" fg:x="217" fg:w="1"/><text x="9.6439%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="9.3939%" y="869" width="0.0433%" height="15" fill="rgb(205,184,25)" fg:x="217" fg:w="1"/><text x="9.6439%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="9.3939%" y="853" width="0.0433%" height="15" fill="rgb(228,1,10)" fg:x="217" fg:w="1"/><text x="9.6439%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="9.3939%" y="837" width="0.0433%" height="15" fill="rgb(213,116,27)" fg:x="217" fg:w="1"/><text x="9.6439%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="9.3939%" y="821" width="0.0433%" height="15" fill="rgb(241,95,50)" fg:x="217" fg:w="1"/><text x="9.6439%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="9.3939%" y="805" width="0.0433%" height="15" fill="rgb(238,48,32)" fg:x="217" fg:w="1"/><text x="9.6439%" y="815.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="9.3939%" y="789" width="0.0433%" height="15" fill="rgb(235,113,49)" fg:x="217" fg:w="1"/><text x="9.6439%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="9.3939%" y="773" width="0.0433%" height="15" fill="rgb(205,127,43)" fg:x="217" fg:w="1"/><text x="9.6439%" y="783.50"></text></g><g><title>unlink_chunk (1 samples, 0.04%)</title><rect x="9.3939%" y="757" width="0.0433%" height="15" fill="rgb(250,162,2)" fg:x="217" fg:w="1"/><text x="9.6439%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="9.4372%" y="981" width="0.0433%" height="15" fill="rgb(220,13,41)" fg:x="218" fg:w="1"/><text x="9.6872%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="9.4372%" y="965" width="0.0433%" height="15" fill="rgb(249,221,25)" fg:x="218" fg:w="1"/><text x="9.6872%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="9.4372%" y="949" width="0.0433%" height="15" fill="rgb(215,208,19)" fg:x="218" fg:w="1"/><text x="9.6872%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="9.4372%" y="933" width="0.0433%" height="15" fill="rgb(236,175,2)" fg:x="218" fg:w="1"/><text x="9.6872%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="9.4372%" y="917" width="0.0433%" height="15" fill="rgb(241,52,2)" fg:x="218" fg:w="1"/><text x="9.6872%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.04%)</title><rect x="9.4372%" y="901" width="0.0433%" height="15" fill="rgb(248,140,14)" fg:x="218" fg:w="1"/><text x="9.6872%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="9.4372%" y="885" width="0.0433%" height="15" fill="rgb(253,22,42)" fg:x="218" fg:w="1"/><text x="9.6872%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="9.4372%" y="869" width="0.0433%" height="15" fill="rgb(234,61,47)" fg:x="218" fg:w="1"/><text x="9.6872%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="9.4372%" y="853" width="0.0433%" height="15" fill="rgb(208,226,15)" fg:x="218" fg:w="1"/><text x="9.6872%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="9.4372%" y="837" width="0.0433%" height="15" fill="rgb(217,221,4)" fg:x="218" fg:w="1"/><text x="9.6872%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="9.4372%" y="821" width="0.0433%" height="15" fill="rgb(212,174,34)" fg:x="218" fg:w="1"/><text x="9.6872%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="9.4372%" y="805" width="0.0433%" height="15" fill="rgb(253,83,4)" fg:x="218" fg:w="1"/><text x="9.6872%" y="815.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="9.4372%" y="789" width="0.0433%" height="15" fill="rgb(250,195,49)" fg:x="218" fg:w="1"/><text x="9.6872%" y="799.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="9.4372%" y="773" width="0.0433%" height="15" fill="rgb(241,192,25)" fg:x="218" fg:w="1"/><text x="9.6872%" y="783.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.04%)</title><rect x="9.4372%" y="757" width="0.0433%" height="15" fill="rgb(208,124,10)" fg:x="218" fg:w="1"/><text x="9.6872%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (161 samples, 6.97%)</title><rect x="2.5541%" y="1189" width="6.9697%" height="15" fill="rgb(222,33,0)" fg:x="59" fg:w="161"/><text x="2.8041%" y="1199.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (161 samples, 6.97%)</title><rect x="2.5541%" y="1173" width="6.9697%" height="15" fill="rgb(234,209,28)" fg:x="59" fg:w="161"/><text x="2.8041%" y="1183.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (161 samples, 6.97%)</title><rect x="2.5541%" y="1157" width="6.9697%" height="15" fill="rgb(224,11,23)" fg:x="59" fg:w="161"/><text x="2.8041%" y="1167.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (161 samples, 6.97%)</title><rect x="2.5541%" y="1141" width="6.9697%" height="15" fill="rgb(232,99,1)" fg:x="59" fg:w="161"/><text x="2.8041%" y="1151.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (161 samples, 6.97%)</title><rect x="2.5541%" y="1125" width="6.9697%" height="15" fill="rgb(237,95,45)" fg:x="59" fg:w="161"/><text x="2.8041%" y="1135.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (161 samples, 6.97%)</title><rect x="2.5541%" y="1109" width="6.9697%" height="15" fill="rgb(208,109,11)" fg:x="59" fg:w="161"/><text x="2.8041%" y="1119.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (161 samples, 6.97%)</title><rect x="2.5541%" y="1093" width="6.9697%" height="15" fill="rgb(216,190,48)" fg:x="59" fg:w="161"/><text x="2.8041%" y="1103.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (161 samples, 6.97%)</title><rect x="2.5541%" y="1077" width="6.9697%" height="15" fill="rgb(251,171,36)" fg:x="59" fg:w="161"/><text x="2.8041%" y="1087.50">core::ite..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (161 samples, 6.97%)</title><rect x="2.5541%" y="1061" width="6.9697%" height="15" fill="rgb(230,62,22)" fg:x="59" fg:w="161"/><text x="2.8041%" y="1071.50">core::ite..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (161 samples, 6.97%)</title><rect x="2.5541%" y="1045" width="6.9697%" height="15" fill="rgb(225,114,35)" fg:x="59" fg:w="161"/><text x="2.8041%" y="1055.50">core::ite..</text></g><g><title>y2021::d05::main::read_path_to_lines::{{closure}} (2 samples, 0.09%)</title><rect x="9.4372%" y="1029" width="0.0866%" height="15" fill="rgb(215,118,42)" fg:x="218" fg:w="2"/><text x="9.6872%" y="1039.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2 samples, 0.09%)</title><rect x="9.4372%" y="1013" width="0.0866%" height="15" fill="rgb(243,119,21)" fg:x="218" fg:w="2"/><text x="9.6872%" y="1023.50"></text></g><g><title>&lt;y2021::types::line::Line as core::str::traits::FromStr&gt;::from_str (2 samples, 0.09%)</title><rect x="9.4372%" y="997" width="0.0866%" height="15" fill="rgb(252,177,53)" fg:x="218" fg:w="2"/><text x="9.6872%" y="1007.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 0.04%)</title><rect x="9.4805%" y="981" width="0.0433%" height="15" fill="rgb(237,209,29)" fg:x="219" fg:w="1"/><text x="9.7305%" y="991.50"></text></g><g><title>&lt;y2021::types::point::Point as core::str::traits::FromStr&gt;::from_str (1 samples, 0.04%)</title><rect x="9.4805%" y="965" width="0.0433%" height="15" fill="rgb(212,65,23)" fg:x="219" fg:w="1"/><text x="9.7305%" y="975.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 0.04%)</title><rect x="9.4805%" y="949" width="0.0433%" height="15" fill="rgb(230,222,46)" fg:x="219" fg:w="1"/><text x="9.7305%" y="959.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u64&gt;::from_str (1 samples, 0.04%)</title><rect x="9.4805%" y="933" width="0.0433%" height="15" fill="rgb(215,135,32)" fg:x="219" fg:w="1"/><text x="9.7305%" y="943.50"></text></g><g><title>core::num::from_str_radix (1 samples, 0.04%)</title><rect x="9.4805%" y="917" width="0.0433%" height="15" fill="rgb(246,101,22)" fg:x="219" fg:w="1"/><text x="9.7305%" y="927.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.04%)</title><rect x="9.4805%" y="901" width="0.0433%" height="15" fill="rgb(206,107,13)" fg:x="219" fg:w="1"/><text x="9.7305%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.17%)</title><rect x="9.5238%" y="1189" width="0.1732%" height="15" fill="rgb(250,100,44)" fg:x="220" fg:w="4"/><text x="9.7738%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.17%)</title><rect x="9.5238%" y="1173" width="0.1732%" height="15" fill="rgb(231,147,38)" fg:x="220" fg:w="4"/><text x="9.7738%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.17%)</title><rect x="9.5238%" y="1157" width="0.1732%" height="15" fill="rgb(229,8,40)" fg:x="220" fg:w="4"/><text x="9.7738%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.17%)</title><rect x="9.5238%" y="1141" width="0.1732%" height="15" fill="rgb(221,135,30)" fg:x="220" fg:w="4"/><text x="9.7738%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.17%)</title><rect x="9.5238%" y="1125" width="0.1732%" height="15" fill="rgb(249,193,18)" fg:x="220" fg:w="4"/><text x="9.7738%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.17%)</title><rect x="9.5238%" y="1109" width="0.1732%" height="15" fill="rgb(209,133,39)" fg:x="220" fg:w="4"/><text x="9.7738%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="9.5238%" y="1093" width="0.1732%" height="15" fill="rgb(232,100,14)" fg:x="220" fg:w="4"/><text x="9.7738%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4 samples, 0.17%)</title><rect x="9.5238%" y="1077" width="0.1732%" height="15" fill="rgb(224,185,1)" fg:x="220" fg:w="4"/><text x="9.7738%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.17%)</title><rect x="9.5238%" y="1061" width="0.1732%" height="15" fill="rgb(223,139,8)" fg:x="220" fg:w="4"/><text x="9.7738%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="9.6104%" y="1045" width="0.0866%" height="15" fill="rgb(232,213,38)" fg:x="222" fg:w="2"/><text x="9.8604%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="9.6104%" y="1029" width="0.0866%" height="15" fill="rgb(207,94,22)" fg:x="222" fg:w="2"/><text x="9.8604%" y="1039.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="9.6104%" y="1013" width="0.0866%" height="15" fill="rgb(219,183,54)" fg:x="222" fg:w="2"/><text x="9.8604%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="9.6104%" y="997" width="0.0866%" height="15" fill="rgb(216,185,54)" fg:x="222" fg:w="2"/><text x="9.8604%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="9.6104%" y="981" width="0.0866%" height="15" fill="rgb(254,217,39)" fg:x="222" fg:w="2"/><text x="9.8604%" y="991.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.04%)</title><rect x="9.6537%" y="965" width="0.0433%" height="15" fill="rgb(240,178,23)" fg:x="223" fg:w="1"/><text x="9.9037%" y="975.50"></text></g><g><title>y2021::d05::main::p01 (166 samples, 7.19%)</title><rect x="2.5541%" y="1205" width="7.1861%" height="15" fill="rgb(218,11,47)" fg:x="59" fg:w="166"/><text x="2.8041%" y="1215.50">y2021::d05..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::types::point::Point,i32&gt;&gt; (1 samples, 0.04%)</title><rect x="9.6970%" y="1189" width="0.0433%" height="15" fill="rgb(218,51,51)" fg:x="224" fg:w="1"/><text x="9.9470%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::types::point::Point,i32,std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.04%)</title><rect x="9.6970%" y="1173" width="0.0433%" height="15" fill="rgb(238,126,27)" fg:x="224" fg:w="1"/><text x="9.9470%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::types::point::Point,i32)&gt;&gt; (1 samples, 0.04%)</title><rect x="9.6970%" y="1157" width="0.0433%" height="15" fill="rgb(249,202,22)" fg:x="224" fg:w="1"/><text x="9.9470%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="9.6970%" y="1141" width="0.0433%" height="15" fill="rgb(254,195,49)" fg:x="224" fg:w="1"/><text x="9.9470%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (1 samples, 0.04%)</title><rect x="9.6970%" y="1125" width="0.0433%" height="15" fill="rgb(208,123,14)" fg:x="224" fg:w="1"/><text x="9.9470%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.04%)</title><rect x="9.6970%" y="1109" width="0.0433%" height="15" fill="rgb(224,200,8)" fg:x="224" fg:w="1"/><text x="9.9470%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="9.6970%" y="1093" width="0.0433%" height="15" fill="rgb(217,61,36)" fg:x="224" fg:w="1"/><text x="9.9470%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="9.6970%" y="1077" width="0.0433%" height="15" fill="rgb(206,35,45)" fg:x="224" fg:w="1"/><text x="9.9470%" y="1087.50"></text></g><g><title>__GI_munmap (1 samples, 0.04%)</title><rect x="9.6970%" y="1061" width="0.0433%" height="15" fill="rgb(217,65,33)" fg:x="224" fg:w="1"/><text x="9.9470%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="9.6970%" y="1045" width="0.0433%" height="15" fill="rgb(222,158,48)" fg:x="224" fg:w="1"/><text x="9.9470%" y="1055.50"></text></g><g><title>do_syscall_64 (1 samples, 0.04%)</title><rect x="9.6970%" y="1029" width="0.0433%" height="15" fill="rgb(254,2,54)" fg:x="224" fg:w="1"/><text x="9.9470%" y="1039.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.04%)</title><rect x="9.6970%" y="1013" width="0.0433%" height="15" fill="rgb(250,143,38)" fg:x="224" fg:w="1"/><text x="9.9470%" y="1023.50"></text></g><g><title>__vm_munmap (1 samples, 0.04%)</title><rect x="9.6970%" y="997" width="0.0433%" height="15" fill="rgb(248,25,0)" fg:x="224" fg:w="1"/><text x="9.9470%" y="1007.50"></text></g><g><title>__do_munmap (1 samples, 0.04%)</title><rect x="9.6970%" y="981" width="0.0433%" height="15" fill="rgb(206,152,27)" fg:x="224" fg:w="1"/><text x="9.9470%" y="991.50"></text></g><g><title>unmap_region (1 samples, 0.04%)</title><rect x="9.6970%" y="965" width="0.0433%" height="15" fill="rgb(240,77,30)" fg:x="224" fg:w="1"/><text x="9.9470%" y="975.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.04%)</title><rect x="9.6970%" y="949" width="0.0433%" height="15" fill="rgb(231,5,3)" fg:x="224" fg:w="1"/><text x="9.9470%" y="959.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.04%)</title><rect x="9.6970%" y="933" width="0.0433%" height="15" fill="rgb(207,226,32)" fg:x="224" fg:w="1"/><text x="9.9470%" y="943.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.04%)</title><rect x="9.6970%" y="917" width="0.0433%" height="15" fill="rgb(222,207,47)" fg:x="224" fg:w="1"/><text x="9.9470%" y="927.50"></text></g><g><title>release_pages (1 samples, 0.04%)</title><rect x="9.6970%" y="901" width="0.0433%" height="15" fill="rgb(229,115,45)" fg:x="224" fg:w="1"/><text x="9.9470%" y="911.50"></text></g><g><title>free_unref_page_list (1 samples, 0.04%)</title><rect x="9.6970%" y="885" width="0.0433%" height="15" fill="rgb(224,191,6)" fg:x="224" fg:w="1"/><text x="9.9470%" y="895.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.04%)</title><rect x="9.6970%" y="869" width="0.0433%" height="15" fill="rgb(230,227,24)" fg:x="224" fg:w="1"/><text x="9.9470%" y="879.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.04%)</title><rect x="9.6970%" y="853" width="0.0433%" height="15" fill="rgb(228,80,19)" fg:x="224" fg:w="1"/><text x="9.9470%" y="863.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="9.7403%" y="1077" width="0.0866%" height="15" fill="rgb(247,229,0)" fg:x="225" fg:w="2"/><text x="9.9903%" y="1087.50"></text></g><g><title>std::io::BufRead::read_line (2 samples, 0.09%)</title><rect x="9.7403%" y="1061" width="0.0866%" height="15" fill="rgb(237,194,15)" fg:x="225" fg:w="2"/><text x="9.9903%" y="1071.50"></text></g><g><title>std::io::append_to_string (2 samples, 0.09%)</title><rect x="9.7403%" y="1045" width="0.0866%" height="15" fill="rgb(219,203,20)" fg:x="225" fg:w="2"/><text x="9.9903%" y="1055.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (2 samples, 0.09%)</title><rect x="9.7403%" y="1029" width="0.0866%" height="15" fill="rgb(234,128,8)" fg:x="225" fg:w="2"/><text x="9.9903%" y="1039.50"></text></g><g><title>std::io::read_until (2 samples, 0.09%)</title><rect x="9.7403%" y="1013" width="0.0866%" height="15" fill="rgb(248,202,8)" fg:x="225" fg:w="2"/><text x="9.9903%" y="1023.50"></text></g><g><title>std::sys_common::memchr::memchr (2 samples, 0.09%)</title><rect x="9.7403%" y="997" width="0.0866%" height="15" fill="rgb(206,104,37)" fg:x="225" fg:w="2"/><text x="9.9903%" y="1007.50"></text></g><g><title>std::sys::unix::memchr::memchr (2 samples, 0.09%)</title><rect x="9.7403%" y="981" width="0.0866%" height="15" fill="rgb(223,8,27)" fg:x="225" fg:w="2"/><text x="9.9903%" y="991.50"></text></g><g><title>__memchr_avx2 (2 samples, 0.09%)</title><rect x="9.7403%" y="965" width="0.0866%" height="15" fill="rgb(216,217,28)" fg:x="225" fg:w="2"/><text x="9.9903%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (10 samples, 0.43%)</title><rect x="12.4675%" y="901" width="0.4329%" height="15" fill="rgb(249,199,1)" fg:x="288" fg:w="10"/><text x="12.7175%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (10 samples, 0.43%)</title><rect x="12.4675%" y="885" width="0.4329%" height="15" fill="rgb(240,85,17)" fg:x="288" fg:w="10"/><text x="12.7175%" y="895.50"></text></g><g><title>core::ptr::write (10 samples, 0.43%)</title><rect x="12.4675%" y="869" width="0.4329%" height="15" fill="rgb(206,108,45)" fg:x="288" fg:w="10"/><text x="12.7175%" y="879.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="12.8571%" y="853" width="0.0433%" height="15" fill="rgb(245,210,41)" fg:x="297" fg:w="1"/><text x="13.1071%" y="863.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="12.8571%" y="837" width="0.0433%" height="15" fill="rgb(206,13,37)" fg:x="297" fg:w="1"/><text x="13.1071%" y="847.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.04%)</title><rect x="12.8571%" y="821" width="0.0433%" height="15" fill="rgb(250,61,18)" fg:x="297" fg:w="1"/><text x="13.1071%" y="831.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.04%)</title><rect x="12.8571%" y="805" width="0.0433%" height="15" fill="rgb(235,172,48)" fg:x="297" fg:w="1"/><text x="13.1071%" y="815.50"></text></g><g><title>asm_call_sysvec_on_stack (1 samples, 0.04%)</title><rect x="12.8571%" y="789" width="0.0433%" height="15" fill="rgb(249,201,17)" fg:x="297" fg:w="1"/><text x="13.1071%" y="799.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="12.8571%" y="773" width="0.0433%" height="15" fill="rgb(219,208,6)" fg:x="297" fg:w="1"/><text x="13.1071%" y="783.50"></text></g><g><title>run_timer_softirq (1 samples, 0.04%)</title><rect x="12.8571%" y="757" width="0.0433%" height="15" fill="rgb(248,31,23)" fg:x="297" fg:w="1"/><text x="13.1071%" y="767.50"></text></g><g><title>__run_timers.part.0 (1 samples, 0.04%)</title><rect x="12.8571%" y="741" width="0.0433%" height="15" fill="rgb(245,15,42)" fg:x="297" fg:w="1"/><text x="13.1071%" y="751.50"></text></g><g><title>call_timer_fn (1 samples, 0.04%)</title><rect x="12.8571%" y="725" width="0.0433%" height="15" fill="rgb(222,217,39)" fg:x="297" fg:w="1"/><text x="13.1071%" y="735.50"></text></g><g><title>process_timeout (1 samples, 0.04%)</title><rect x="12.8571%" y="709" width="0.0433%" height="15" fill="rgb(210,219,27)" fg:x="297" fg:w="1"/><text x="13.1071%" y="719.50"></text></g><g><title>wake_up_process (1 samples, 0.04%)</title><rect x="12.8571%" y="693" width="0.0433%" height="15" fill="rgb(252,166,36)" fg:x="297" fg:w="1"/><text x="13.1071%" y="703.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.04%)</title><rect x="12.8571%" y="677" width="0.0433%" height="15" fill="rgb(245,132,34)" fg:x="297" fg:w="1"/><text x="13.1071%" y="687.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="12.9004%" y="869" width="0.0433%" height="15" fill="rgb(236,54,3)" fg:x="298" fg:w="1"/><text x="13.1504%" y="879.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.04%)</title><rect x="12.9437%" y="869" width="0.0433%" height="15" fill="rgb(241,173,43)" fg:x="299" fg:w="1"/><text x="13.1937%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (3 samples, 0.13%)</title><rect x="12.9004%" y="885" width="0.1299%" height="15" fill="rgb(215,190,9)" fg:x="298" fg:w="3"/><text x="13.1504%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.04%)</title><rect x="12.9870%" y="869" width="0.0433%" height="15" fill="rgb(242,101,16)" fg:x="300" fg:w="1"/><text x="13.2370%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.04%)</title><rect x="12.9870%" y="853" width="0.0433%" height="15" fill="rgb(223,190,21)" fg:x="300" fg:w="1"/><text x="13.2370%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="12.9870%" y="837" width="0.0433%" height="15" fill="rgb(215,228,25)" fg:x="300" fg:w="1"/><text x="13.2370%" y="847.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (19 samples, 0.82%)</title><rect x="12.2511%" y="965" width="0.8225%" height="15" fill="rgb(225,36,22)" fg:x="283" fg:w="19"/><text x="12.5011%" y="975.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (19 samples, 0.82%)</title><rect x="12.2511%" y="949" width="0.8225%" height="15" fill="rgb(251,106,46)" fg:x="283" fg:w="19"/><text x="12.5011%" y="959.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (19 samples, 0.82%)</title><rect x="12.2511%" y="933" width="0.8225%" height="15" fill="rgb(208,90,1)" fg:x="283" fg:w="19"/><text x="12.5011%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (15 samples, 0.65%)</title><rect x="12.4242%" y="917" width="0.6494%" height="15" fill="rgb(243,10,4)" fg:x="287" fg:w="15"/><text x="12.6742%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (4 samples, 0.17%)</title><rect x="12.9004%" y="901" width="0.1732%" height="15" fill="rgb(212,137,27)" fg:x="298" fg:w="4"/><text x="13.1504%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.04%)</title><rect x="13.0303%" y="885" width="0.0433%" height="15" fill="rgb(231,220,49)" fg:x="301" fg:w="1"/><text x="13.2803%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.04%)</title><rect x="13.0303%" y="869" width="0.0433%" height="15" fill="rgb(237,96,20)" fg:x="301" fg:w="1"/><text x="13.2803%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="13.2468%" y="869" width="0.0433%" height="15" fill="rgb(239,229,30)" fg:x="306" fg:w="1"/><text x="13.4968%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="13.2468%" y="853" width="0.0433%" height="15" fill="rgb(219,65,33)" fg:x="306" fg:w="1"/><text x="13.4968%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.04%)</title><rect x="13.2468%" y="837" width="0.0433%" height="15" fill="rgb(243,134,7)" fg:x="306" fg:w="1"/><text x="13.4968%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="13.2468%" y="821" width="0.0433%" height="15" fill="rgb(216,177,54)" fg:x="306" fg:w="1"/><text x="13.4968%" y="831.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.04%)</title><rect x="13.2900%" y="597" width="0.0433%" height="15" fill="rgb(211,160,20)" fg:x="307" fg:w="1"/><text x="13.5400%" y="607.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.04%)</title><rect x="13.2900%" y="581" width="0.0433%" height="15" fill="rgb(239,85,39)" fg:x="307" fg:w="1"/><text x="13.5400%" y="591.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.04%)</title><rect x="13.2900%" y="565" width="0.0433%" height="15" fill="rgb(232,125,22)" fg:x="307" fg:w="1"/><text x="13.5400%" y="575.50"></text></g><g><title>release_pages (1 samples, 0.04%)</title><rect x="13.2900%" y="549" width="0.0433%" height="15" fill="rgb(244,57,34)" fg:x="307" fg:w="1"/><text x="13.5400%" y="559.50"></text></g><g><title>free_unref_page_list (1 samples, 0.04%)</title><rect x="13.2900%" y="533" width="0.0433%" height="15" fill="rgb(214,203,32)" fg:x="307" fg:w="1"/><text x="13.5400%" y="543.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.04%)</title><rect x="13.2900%" y="517" width="0.0433%" height="15" fill="rgb(207,58,43)" fg:x="307" fg:w="1"/><text x="13.5400%" y="527.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.04%)</title><rect x="13.2900%" y="501" width="0.0433%" height="15" fill="rgb(215,193,15)" fg:x="307" fg:w="1"/><text x="13.5400%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (3 samples, 0.13%)</title><rect x="13.2900%" y="869" width="0.1299%" height="15" fill="rgb(232,15,44)" fg:x="307" fg:w="3"/><text x="13.5400%" y="879.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="13.2900%" y="853" width="0.1299%" height="15" fill="rgb(212,3,48)" fg:x="307" fg:w="3"/><text x="13.5400%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (3 samples, 0.13%)</title><rect x="13.2900%" y="837" width="0.1299%" height="15" fill="rgb(218,128,7)" fg:x="307" fg:w="3"/><text x="13.5400%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (3 samples, 0.13%)</title><rect x="13.2900%" y="821" width="0.1299%" height="15" fill="rgb(226,216,39)" fg:x="307" fg:w="3"/><text x="13.5400%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.13%)</title><rect x="13.2900%" y="805" width="0.1299%" height="15" fill="rgb(243,47,51)" fg:x="307" fg:w="3"/><text x="13.5400%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.13%)</title><rect x="13.2900%" y="789" width="0.1299%" height="15" fill="rgb(241,183,40)" fg:x="307" fg:w="3"/><text x="13.5400%" y="799.50"></text></g><g><title>_int_free (3 samples, 0.13%)</title><rect x="13.2900%" y="773" width="0.1299%" height="15" fill="rgb(231,217,32)" fg:x="307" fg:w="3"/><text x="13.5400%" y="783.50"></text></g><g><title>systrim (3 samples, 0.13%)</title><rect x="13.2900%" y="757" width="0.1299%" height="15" fill="rgb(229,61,38)" fg:x="307" fg:w="3"/><text x="13.5400%" y="767.50"></text></g><g><title>__GI___default_morecore (3 samples, 0.13%)</title><rect x="13.2900%" y="741" width="0.1299%" height="15" fill="rgb(225,210,5)" fg:x="307" fg:w="3"/><text x="13.5400%" y="751.50"></text></g><g><title>__GI___sbrk (3 samples, 0.13%)</title><rect x="13.2900%" y="725" width="0.1299%" height="15" fill="rgb(231,79,45)" fg:x="307" fg:w="3"/><text x="13.5400%" y="735.50"></text></g><g><title>__GI___sbrk (3 samples, 0.13%)</title><rect x="13.2900%" y="709" width="0.1299%" height="15" fill="rgb(224,100,7)" fg:x="307" fg:w="3"/><text x="13.5400%" y="719.50"></text></g><g><title>__brk (3 samples, 0.13%)</title><rect x="13.2900%" y="693" width="0.1299%" height="15" fill="rgb(241,198,18)" fg:x="307" fg:w="3"/><text x="13.5400%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.13%)</title><rect x="13.2900%" y="677" width="0.1299%" height="15" fill="rgb(252,97,53)" fg:x="307" fg:w="3"/><text x="13.5400%" y="687.50"></text></g><g><title>do_syscall_64 (3 samples, 0.13%)</title><rect x="13.2900%" y="661" width="0.1299%" height="15" fill="rgb(220,88,7)" fg:x="307" fg:w="3"/><text x="13.5400%" y="671.50"></text></g><g><title>__x64_sys_brk (3 samples, 0.13%)</title><rect x="13.2900%" y="645" width="0.1299%" height="15" fill="rgb(213,176,14)" fg:x="307" fg:w="3"/><text x="13.5400%" y="655.50"></text></g><g><title>__do_munmap (3 samples, 0.13%)</title><rect x="13.2900%" y="629" width="0.1299%" height="15" fill="rgb(246,73,7)" fg:x="307" fg:w="3"/><text x="13.5400%" y="639.50"></text></g><g><title>unmap_region (3 samples, 0.13%)</title><rect x="13.2900%" y="613" width="0.1299%" height="15" fill="rgb(245,64,36)" fg:x="307" fg:w="3"/><text x="13.5400%" y="623.50"></text></g><g><title>unmap_vmas (2 samples, 0.09%)</title><rect x="13.3333%" y="597" width="0.0866%" height="15" fill="rgb(245,80,10)" fg:x="308" fg:w="2"/><text x="13.5833%" y="607.50"></text></g><g><title>unmap_single_vma (2 samples, 0.09%)</title><rect x="13.3333%" y="581" width="0.0866%" height="15" fill="rgb(232,107,50)" fg:x="308" fg:w="2"/><text x="13.5833%" y="591.50"></text></g><g><title>unmap_page_range (2 samples, 0.09%)</title><rect x="13.3333%" y="565" width="0.0866%" height="15" fill="rgb(253,3,0)" fg:x="308" fg:w="2"/><text x="13.5833%" y="575.50"></text></g><g><title>zap_pte_range.isra.0 (2 samples, 0.09%)</title><rect x="13.3333%" y="549" width="0.0866%" height="15" fill="rgb(212,99,53)" fg:x="308" fg:w="2"/><text x="13.5833%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="13.8528%" y="773" width="0.0433%" height="15" fill="rgb(249,111,54)" fg:x="320" fg:w="1"/><text x="14.1028%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.17%)</title><rect x="13.8528%" y="789" width="0.1732%" height="15" fill="rgb(249,55,30)" fg:x="320" fg:w="4"/><text x="14.1028%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.13%)</title><rect x="13.8961%" y="773" width="0.1299%" height="15" fill="rgb(237,47,42)" fg:x="321" fg:w="3"/><text x="14.1461%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.48%)</title><rect x="14.0693%" y="773" width="0.4762%" height="15" fill="rgb(211,20,18)" fg:x="325" fg:w="11"/><text x="14.3193%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 1.08%)</title><rect x="13.5498%" y="837" width="1.0823%" height="15" fill="rgb(231,203,46)" fg:x="313" fg:w="25"/><text x="13.7998%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (25 samples, 1.08%)</title><rect x="13.5498%" y="821" width="1.0823%" height="15" fill="rgb(237,142,3)" fg:x="313" fg:w="25"/><text x="13.7998%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (25 samples, 1.08%)</title><rect x="13.5498%" y="805" width="1.0823%" height="15" fill="rgb(241,107,1)" fg:x="313" fg:w="25"/><text x="13.7998%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.61%)</title><rect x="14.0260%" y="789" width="0.6061%" height="15" fill="rgb(229,83,13)" fg:x="324" fg:w="14"/><text x="14.2760%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.09%)</title><rect x="14.5455%" y="773" width="0.0866%" height="15" fill="rgb(241,91,40)" fg:x="336" fg:w="2"/><text x="14.7955%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="14.6320%" y="837" width="0.0433%" height="15" fill="rgb(225,3,45)" fg:x="338" fg:w="1"/><text x="14.8820%" y="847.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.04%)</title><rect x="14.6320%" y="821" width="0.0433%" height="15" fill="rgb(244,223,14)" fg:x="338" fg:w="1"/><text x="14.8820%" y="831.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.04%)</title><rect x="14.6320%" y="805" width="0.0433%" height="15" fill="rgb(224,124,37)" fg:x="338" fg:w="1"/><text x="14.8820%" y="815.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.04%)</title><rect x="14.6320%" y="789" width="0.0433%" height="15" fill="rgb(251,171,30)" fg:x="338" fg:w="1"/><text x="14.8820%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (13 samples, 0.56%)</title><rect x="15.6277%" y="725" width="0.5628%" height="15" fill="rgb(236,46,54)" fg:x="361" fg:w="13"/><text x="15.8777%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.74%)</title><rect x="15.5411%" y="741" width="0.7359%" height="15" fill="rgb(245,213,5)" fg:x="359" fg:w="17"/><text x="15.7911%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.09%)</title><rect x="16.1905%" y="725" width="0.0866%" height="15" fill="rgb(230,144,27)" fg:x="374" fg:w="2"/><text x="16.4405%" y="735.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.09%)</title><rect x="16.2771%" y="741" width="0.0866%" height="15" fill="rgb(220,86,6)" fg:x="376" fg:w="2"/><text x="16.5271%" y="751.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (69 samples, 2.99%)</title><rect x="13.4199%" y="869" width="2.9870%" height="15" fill="rgb(240,20,13)" fg:x="310" fg:w="69"/><text x="13.6699%" y="879.50">has..</text></g><g><title>hashbrown::map::make_hash (68 samples, 2.94%)</title><rect x="13.4632%" y="853" width="2.9437%" height="15" fill="rgb(217,89,34)" fg:x="311" fg:w="68"/><text x="13.7132%" y="863.50">ha..</text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (40 samples, 1.73%)</title><rect x="14.6753%" y="837" width="1.7316%" height="15" fill="rgb(229,13,5)" fg:x="339" fg:w="40"/><text x="14.9253%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (37 samples, 1.60%)</title><rect x="14.8052%" y="821" width="1.6017%" height="15" fill="rgb(244,67,35)" fg:x="342" fg:w="37"/><text x="15.0552%" y="831.50"></text></g><g><title>core::hash::Hasher::write_usize (34 samples, 1.47%)</title><rect x="14.9351%" y="805" width="1.4719%" height="15" fill="rgb(221,40,2)" fg:x="345" fg:w="34"/><text x="15.1851%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (34 samples, 1.47%)</title><rect x="14.9351%" y="789" width="1.4719%" height="15" fill="rgb(237,157,21)" fg:x="345" fg:w="34"/><text x="15.1851%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (34 samples, 1.47%)</title><rect x="14.9351%" y="773" width="1.4719%" height="15" fill="rgb(222,94,11)" fg:x="345" fg:w="34"/><text x="15.1851%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (34 samples, 1.47%)</title><rect x="14.9351%" y="757" width="1.4719%" height="15" fill="rgb(249,113,6)" fg:x="345" fg:w="34"/><text x="15.1851%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="16.3636%" y="741" width="0.0433%" height="15" fill="rgb(238,137,36)" fg:x="378" fg:w="1"/><text x="16.6136%" y="751.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.09%)</title><rect x="16.4069%" y="869" width="0.0866%" height="15" fill="rgb(210,102,26)" fg:x="379" fg:w="2"/><text x="16.6569%" y="879.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.09%)</title><rect x="16.4069%" y="853" width="0.0866%" height="15" fill="rgb(218,30,30)" fg:x="379" fg:w="2"/><text x="16.6569%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.09%)</title><rect x="16.4069%" y="837" width="0.0866%" height="15" fill="rgb(214,67,26)" fg:x="379" fg:w="2"/><text x="16.6569%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.09%)</title><rect x="16.4069%" y="821" width="0.0866%" height="15" fill="rgb(251,9,53)" fg:x="379" fg:w="2"/><text x="16.6569%" y="831.50"></text></g><g><title>clear_page_rep (7 samples, 0.30%)</title><rect x="17.4026%" y="677" width="0.3030%" height="15" fill="rgb(228,204,25)" fg:x="402" fg:w="7"/><text x="17.6526%" y="687.50"></text></g><g><title>alloc_pages_vma (11 samples, 0.48%)</title><rect x="17.4026%" y="725" width="0.4762%" height="15" fill="rgb(207,153,8)" fg:x="402" fg:w="11"/><text x="17.6526%" y="735.50"></text></g><g><title>__alloc_pages_nodemask (11 samples, 0.48%)</title><rect x="17.4026%" y="709" width="0.4762%" height="15" fill="rgb(242,9,16)" fg:x="402" fg:w="11"/><text x="17.6526%" y="719.50"></text></g><g><title>get_page_from_freelist (11 samples, 0.48%)</title><rect x="17.4026%" y="693" width="0.4762%" height="15" fill="rgb(217,211,10)" fg:x="402" fg:w="11"/><text x="17.6526%" y="703.50"></text></g><g><title>rmqueue (4 samples, 0.17%)</title><rect x="17.7056%" y="677" width="0.1732%" height="15" fill="rgb(219,228,52)" fg:x="409" fg:w="4"/><text x="17.9556%" y="687.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.04%)</title><rect x="17.8788%" y="725" width="0.0433%" height="15" fill="rgb(231,92,29)" fg:x="413" fg:w="1"/><text x="18.1288%" y="735.50"></text></g><g><title>lru_cache_add (1 samples, 0.04%)</title><rect x="17.8788%" y="709" width="0.0433%" height="15" fill="rgb(232,8,23)" fg:x="413" fg:w="1"/><text x="18.1288%" y="719.50"></text></g><g><title>__pagevec_lru_add (1 samples, 0.04%)</title><rect x="17.8788%" y="693" width="0.0433%" height="15" fill="rgb(216,211,34)" fg:x="413" fg:w="1"/><text x="18.1288%" y="703.50"></text></g><g><title>mem_cgroup_update_lru_size (1 samples, 0.04%)</title><rect x="17.8788%" y="677" width="0.0433%" height="15" fill="rgb(236,151,0)" fg:x="413" fg:w="1"/><text x="18.1288%" y="687.50"></text></g><g><title>__mod_lruvec_page_state (2 samples, 0.09%)</title><rect x="17.9221%" y="709" width="0.0866%" height="15" fill="rgb(209,168,3)" fg:x="414" fg:w="2"/><text x="18.1721%" y="719.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="17.9654%" y="693" width="0.0433%" height="15" fill="rgb(208,129,28)" fg:x="415" fg:w="1"/><text x="18.2154%" y="703.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.04%)</title><rect x="17.9654%" y="677" width="0.0433%" height="15" fill="rgb(229,78,22)" fg:x="415" fg:w="1"/><text x="18.2154%" y="687.50"></text></g><g><title>asm_exc_page_fault (23 samples, 1.00%)</title><rect x="17.0563%" y="821" width="0.9957%" height="15" fill="rgb(228,187,13)" fg:x="394" fg:w="23"/><text x="17.3063%" y="831.50"></text></g><g><title>exc_page_fault (17 samples, 0.74%)</title><rect x="17.3160%" y="805" width="0.7359%" height="15" fill="rgb(240,119,24)" fg:x="400" fg:w="17"/><text x="17.5660%" y="815.50"></text></g><g><title>do_user_addr_fault (17 samples, 0.74%)</title><rect x="17.3160%" y="789" width="0.7359%" height="15" fill="rgb(209,194,42)" fg:x="400" fg:w="17"/><text x="17.5660%" y="799.50"></text></g><g><title>handle_mm_fault (16 samples, 0.69%)</title><rect x="17.3593%" y="773" width="0.6926%" height="15" fill="rgb(247,200,46)" fg:x="401" fg:w="16"/><text x="17.6093%" y="783.50"></text></g><g><title>__handle_mm_fault (16 samples, 0.69%)</title><rect x="17.3593%" y="757" width="0.6926%" height="15" fill="rgb(218,76,16)" fg:x="401" fg:w="16"/><text x="17.6093%" y="767.50"></text></g><g><title>do_anonymous_page (16 samples, 0.69%)</title><rect x="17.3593%" y="741" width="0.6926%" height="15" fill="rgb(225,21,48)" fg:x="401" fg:w="16"/><text x="17.6093%" y="751.50"></text></g><g><title>page_add_new_anon_rmap (3 samples, 0.13%)</title><rect x="17.9221%" y="725" width="0.1299%" height="15" fill="rgb(239,223,50)" fg:x="414" fg:w="3"/><text x="18.1721%" y="735.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="18.0087%" y="709" width="0.0433%" height="15" fill="rgb(244,45,21)" fg:x="416" fg:w="1"/><text x="18.2587%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (37 samples, 1.60%)</title><rect x="16.4935%" y="869" width="1.6017%" height="15" fill="rgb(232,33,43)" fg:x="381" fg:w="37"/><text x="16.7435%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (37 samples, 1.60%)</title><rect x="16.4935%" y="853" width="1.6017%" height="15" fill="rgb(209,8,3)" fg:x="381" fg:w="37"/><text x="16.7435%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 1.60%)</title><rect x="16.4935%" y="837" width="1.6017%" height="15" fill="rgb(214,25,53)" fg:x="381" fg:w="37"/><text x="16.7435%" y="847.50"></text></g><g><title>error_entry (1 samples, 0.04%)</title><rect x="18.0519%" y="821" width="0.0433%" height="15" fill="rgb(254,186,54)" fg:x="417" fg:w="1"/><text x="18.3019%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.04%)</title><rect x="18.6580%" y="837" width="0.0433%" height="15" fill="rgb(208,174,49)" fg:x="431" fg:w="1"/><text x="18.9080%" y="847.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.13%)</title><rect x="18.7013%" y="837" width="0.1299%" height="15" fill="rgb(233,191,51)" fg:x="432" fg:w="3"/><text x="18.9513%" y="847.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.04%)</title><rect x="18.8312%" y="837" width="0.0433%" height="15" fill="rgb(222,134,10)" fg:x="435" fg:w="1"/><text x="19.0812%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (25 samples, 1.08%)</title><rect x="18.0952%" y="853" width="1.0823%" height="15" fill="rgb(230,226,20)" fg:x="418" fg:w="25"/><text x="18.3452%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (7 samples, 0.30%)</title><rect x="18.8745%" y="837" width="0.3030%" height="15" fill="rgb(251,111,25)" fg:x="436" fg:w="7"/><text x="19.1245%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.30%)</title><rect x="18.8745%" y="821" width="0.3030%" height="15" fill="rgb(224,40,46)" fg:x="436" fg:w="7"/><text x="19.1245%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (27 samples, 1.17%)</title><rect x="18.0952%" y="869" width="1.1688%" height="15" fill="rgb(236,108,47)" fg:x="418" fg:w="27"/><text x="18.3452%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (2 samples, 0.09%)</title><rect x="19.1775%" y="853" width="0.0866%" height="15" fill="rgb(234,93,0)" fg:x="443" fg:w="2"/><text x="19.4275%" y="863.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.09%)</title><rect x="19.1775%" y="837" width="0.0866%" height="15" fill="rgb(224,213,32)" fg:x="443" fg:w="2"/><text x="19.4275%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (142 samples, 6.15%)</title><rect x="13.2468%" y="933" width="6.1472%" height="15" fill="rgb(251,11,48)" fg:x="306" fg:w="142"/><text x="13.4968%" y="943.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (142 samples, 6.15%)</title><rect x="13.2468%" y="917" width="6.1472%" height="15" fill="rgb(236,173,5)" fg:x="306" fg:w="142"/><text x="13.4968%" y="927.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (142 samples, 6.15%)</title><rect x="13.2468%" y="901" width="6.1472%" height="15" fill="rgb(230,95,12)" fg:x="306" fg:w="142"/><text x="13.4968%" y="911.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (142 samples, 6.15%)</title><rect x="13.2468%" y="885" width="6.1472%" height="15" fill="rgb(232,209,1)" fg:x="306" fg:w="142"/><text x="13.4968%" y="895.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (3 samples, 0.13%)</title><rect x="19.2641%" y="869" width="0.1299%" height="15" fill="rgb(232,6,1)" fg:x="445" fg:w="3"/><text x="19.5141%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (3 samples, 0.13%)</title><rect x="19.2641%" y="853" width="0.1299%" height="15" fill="rgb(210,224,50)" fg:x="445" fg:w="3"/><text x="19.5141%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (3 samples, 0.13%)</title><rect x="19.2641%" y="837" width="0.1299%" height="15" fill="rgb(228,127,35)" fg:x="445" fg:w="3"/><text x="19.5141%" y="847.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.13%)</title><rect x="19.2641%" y="821" width="0.1299%" height="15" fill="rgb(245,102,45)" fg:x="445" fg:w="3"/><text x="19.5141%" y="831.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.13%)</title><rect x="19.2641%" y="805" width="0.1299%" height="15" fill="rgb(214,1,49)" fg:x="445" fg:w="3"/><text x="19.5141%" y="815.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.04%)</title><rect x="19.3506%" y="789" width="0.0433%" height="15" fill="rgb(226,163,40)" fg:x="447" fg:w="1"/><text x="19.6006%" y="799.50"></text></g><g><title>exc_page_fault (1 samples, 0.04%)</title><rect x="19.3506%" y="773" width="0.0433%" height="15" fill="rgb(239,212,28)" fg:x="447" fg:w="1"/><text x="19.6006%" y="783.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="19.3506%" y="757" width="0.0433%" height="15" fill="rgb(220,20,13)" fg:x="447" fg:w="1"/><text x="19.6006%" y="767.50"></text></g><g><title>handle_mm_fault (1 samples, 0.04%)</title><rect x="19.3506%" y="741" width="0.0433%" height="15" fill="rgb(210,164,35)" fg:x="447" fg:w="1"/><text x="19.6006%" y="751.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="19.3506%" y="725" width="0.0433%" height="15" fill="rgb(248,109,41)" fg:x="447" fg:w="1"/><text x="19.6006%" y="735.50"></text></g><g><title>do_anonymous_page (1 samples, 0.04%)</title><rect x="19.3506%" y="709" width="0.0433%" height="15" fill="rgb(238,23,50)" fg:x="447" fg:w="1"/><text x="19.6006%" y="719.50"></text></g><g><title>mem_cgroup_charge (1 samples, 0.04%)</title><rect x="19.3506%" y="693" width="0.0433%" height="15" fill="rgb(211,48,49)" fg:x="447" fg:w="1"/><text x="19.6006%" y="703.50"></text></g><g><title>mem_cgroup_charge_statistics.isra.0 (1 samples, 0.04%)</title><rect x="19.3506%" y="677" width="0.0433%" height="15" fill="rgb(223,36,21)" fg:x="447" fg:w="1"/><text x="19.6006%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="19.4372%" y="869" width="0.0433%" height="15" fill="rgb(207,123,46)" fg:x="449" fg:w="1"/><text x="19.6872%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="19.3939%" y="917" width="0.1299%" height="15" fill="rgb(240,218,32)" fg:x="448" fg:w="3"/><text x="19.6439%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="19.3939%" y="901" width="0.1299%" height="15" fill="rgb(252,5,43)" fg:x="448" fg:w="3"/><text x="19.6439%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="19.3939%" y="885" width="0.1299%" height="15" fill="rgb(252,84,19)" fg:x="448" fg:w="3"/><text x="19.6439%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="19.4805%" y="869" width="0.0433%" height="15" fill="rgb(243,152,39)" fg:x="450" fg:w="1"/><text x="19.7305%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="19.4805%" y="853" width="0.0433%" height="15" fill="rgb(234,160,15)" fg:x="450" fg:w="1"/><text x="19.7305%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="19.5238%" y="917" width="0.0433%" height="15" fill="rgb(237,34,20)" fg:x="451" fg:w="1"/><text x="19.7738%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.17%)</title><rect x="20.0866%" y="821" width="0.1732%" height="15" fill="rgb(229,97,13)" fg:x="464" fg:w="4"/><text x="20.3366%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="20.2165%" y="805" width="0.0433%" height="15" fill="rgb(234,71,50)" fg:x="467" fg:w="1"/><text x="20.4665%" y="815.50"></text></g><g><title>hashbrown::map::make_insert_hash (21 samples, 0.91%)</title><rect x="19.3939%" y="933" width="0.9091%" height="15" fill="rgb(253,155,4)" fg:x="448" fg:w="21"/><text x="19.6439%" y="943.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (17 samples, 0.74%)</title><rect x="19.5671%" y="917" width="0.7359%" height="15" fill="rgb(222,185,37)" fg:x="452" fg:w="17"/><text x="19.8171%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (17 samples, 0.74%)</title><rect x="19.5671%" y="901" width="0.7359%" height="15" fill="rgb(251,177,13)" fg:x="452" fg:w="17"/><text x="19.8171%" y="911.50"></text></g><g><title>core::hash::Hasher::write_usize (15 samples, 0.65%)</title><rect x="19.6537%" y="885" width="0.6494%" height="15" fill="rgb(250,179,40)" fg:x="454" fg:w="15"/><text x="19.9037%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.65%)</title><rect x="19.6537%" y="869" width="0.6494%" height="15" fill="rgb(242,44,2)" fg:x="454" fg:w="15"/><text x="19.9037%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.65%)</title><rect x="19.6537%" y="853" width="0.6494%" height="15" fill="rgb(216,177,13)" fg:x="454" fg:w="15"/><text x="19.9037%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.65%)</title><rect x="19.6537%" y="837" width="0.6494%" height="15" fill="rgb(216,106,43)" fg:x="454" fg:w="15"/><text x="19.9037%" y="847.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="20.2597%" y="821" width="0.0433%" height="15" fill="rgb(216,183,2)" fg:x="468" fg:w="1"/><text x="20.5097%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="21.3853%" y="885" width="0.0866%" height="15" fill="rgb(249,75,3)" fg:x="494" fg:w="2"/><text x="21.6353%" y="895.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="21.4286%" y="869" width="0.0433%" height="15" fill="rgb(219,67,39)" fg:x="495" fg:w="1"/><text x="21.6786%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="21.3420%" y="917" width="0.1732%" height="15" fill="rgb(253,228,2)" fg:x="493" fg:w="4"/><text x="21.5920%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="21.3420%" y="901" width="0.1732%" height="15" fill="rgb(235,138,27)" fg:x="493" fg:w="4"/><text x="21.5920%" y="911.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="21.4719%" y="885" width="0.0433%" height="15" fill="rgb(236,97,51)" fg:x="496" fg:w="1"/><text x="21.7219%" y="895.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="21.4719%" y="869" width="0.0433%" height="15" fill="rgb(240,80,30)" fg:x="496" fg:w="1"/><text x="21.7219%" y="879.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="21.4719%" y="853" width="0.0433%" height="15" fill="rgb(230,178,19)" fg:x="496" fg:w="1"/><text x="21.7219%" y="863.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.04%)</title><rect x="21.4719%" y="837" width="0.0433%" height="15" fill="rgb(210,190,27)" fg:x="496" fg:w="1"/><text x="21.7219%" y="847.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.04%)</title><rect x="21.4719%" y="821" width="0.0433%" height="15" fill="rgb(222,107,31)" fg:x="496" fg:w="1"/><text x="21.7219%" y="831.50"></text></g><g><title>hrtimer_wakeup (1 samples, 0.04%)</title><rect x="21.4719%" y="805" width="0.0433%" height="15" fill="rgb(216,127,34)" fg:x="496" fg:w="1"/><text x="21.7219%" y="815.50"></text></g><g><title>wake_up_process (1 samples, 0.04%)</title><rect x="21.4719%" y="789" width="0.0433%" height="15" fill="rgb(234,116,52)" fg:x="496" fg:w="1"/><text x="21.7219%" y="799.50"></text></g><g><title>try_to_wake_up (1 samples, 0.04%)</title><rect x="21.4719%" y="773" width="0.0433%" height="15" fill="rgb(222,124,15)" fg:x="496" fg:w="1"/><text x="21.7219%" y="783.50"></text></g><g><title>rcu_read_unlock_strict (1 samples, 0.04%)</title><rect x="21.4719%" y="757" width="0.0433%" height="15" fill="rgb(231,179,28)" fg:x="496" fg:w="1"/><text x="21.7219%" y="767.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (217 samples, 9.39%)</title><rect x="13.0736%" y="949" width="9.3939%" height="15" fill="rgb(226,93,45)" fg:x="302" fg:w="217"/><text x="13.3236%" y="959.50">hashbrown::ru..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (50 samples, 2.16%)</title><rect x="20.3030%" y="933" width="2.1645%" height="15" fill="rgb(215,8,51)" fg:x="469" fg:w="50"/><text x="20.5530%" y="943.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (22 samples, 0.95%)</title><rect x="21.5152%" y="917" width="0.9524%" height="15" fill="rgb(223,106,5)" fg:x="497" fg:w="22"/><text x="21.7652%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (22 samples, 0.95%)</title><rect x="21.5152%" y="901" width="0.9524%" height="15" fill="rgb(250,191,5)" fg:x="497" fg:w="22"/><text x="21.7652%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (22 samples, 0.95%)</title><rect x="21.5152%" y="885" width="0.9524%" height="15" fill="rgb(242,132,44)" fg:x="497" fg:w="22"/><text x="21.7652%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (22 samples, 0.95%)</title><rect x="21.5152%" y="869" width="0.9524%" height="15" fill="rgb(251,152,29)" fg:x="497" fg:w="22"/><text x="21.7652%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (22 samples, 0.95%)</title><rect x="21.5152%" y="853" width="0.9524%" height="15" fill="rgb(218,179,5)" fg:x="497" fg:w="22"/><text x="21.7652%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (22 samples, 0.95%)</title><rect x="21.5152%" y="837" width="0.9524%" height="15" fill="rgb(227,67,19)" fg:x="497" fg:w="22"/><text x="21.7652%" y="847.50"></text></g><g><title>core::core_arch::simd::i8x16::new (22 samples, 0.95%)</title><rect x="21.5152%" y="821" width="0.9524%" height="15" fill="rgb(233,119,31)" fg:x="497" fg:w="22"/><text x="21.7652%" y="831.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="22.4242%" y="805" width="0.0433%" height="15" fill="rgb(241,120,22)" fg:x="518" fg:w="1"/><text x="22.6742%" y="815.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="22.4242%" y="789" width="0.0433%" height="15" fill="rgb(224,102,30)" fg:x="518" fg:w="1"/><text x="22.6742%" y="799.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="22.4242%" y="773" width="0.0433%" height="15" fill="rgb(210,164,37)" fg:x="518" fg:w="1"/><text x="22.6742%" y="783.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.04%)</title><rect x="22.4242%" y="757" width="0.0433%" height="15" fill="rgb(226,191,16)" fg:x="518" fg:w="1"/><text x="22.6742%" y="767.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.04%)</title><rect x="22.4242%" y="741" width="0.0433%" height="15" fill="rgb(214,40,45)" fg:x="518" fg:w="1"/><text x="22.6742%" y="751.50"></text></g><g><title>tick_sched_timer (1 samples, 0.04%)</title><rect x="22.4242%" y="725" width="0.0433%" height="15" fill="rgb(244,29,26)" fg:x="518" fg:w="1"/><text x="22.6742%" y="735.50"></text></g><g><title>tick_sched_handle.isra.0 (1 samples, 0.04%)</title><rect x="22.4242%" y="709" width="0.0433%" height="15" fill="rgb(216,16,5)" fg:x="518" fg:w="1"/><text x="22.6742%" y="719.50"></text></g><g><title>update_process_times (1 samples, 0.04%)</title><rect x="22.4242%" y="693" width="0.0433%" height="15" fill="rgb(249,76,35)" fg:x="518" fg:w="1"/><text x="22.6742%" y="703.50"></text></g><g><title>scheduler_tick (1 samples, 0.04%)</title><rect x="22.4242%" y="677" width="0.0433%" height="15" fill="rgb(207,11,44)" fg:x="518" fg:w="1"/><text x="22.6742%" y="687.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.04%)</title><rect x="22.4242%" y="661" width="0.0433%" height="15" fill="rgb(228,190,49)" fg:x="518" fg:w="1"/><text x="22.6742%" y="671.50"></text></g><g><title>perf_pmu_disable.part.0 (1 samples, 0.04%)</title><rect x="22.4242%" y="645" width="0.0433%" height="15" fill="rgb(214,173,12)" fg:x="518" fg:w="1"/><text x="22.6742%" y="655.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.04%)</title><rect x="22.4242%" y="629" width="0.0433%" height="15" fill="rgb(218,26,35)" fg:x="518" fg:w="1"/><text x="22.6742%" y="639.50"></text></g><g><title>amd_pmu_disable_all (1 samples, 0.04%)</title><rect x="22.4242%" y="613" width="0.0433%" height="15" fill="rgb(220,200,19)" fg:x="518" fg:w="1"/><text x="22.6742%" y="623.50"></text></g><g><title>x86_pmu_disable_all (1 samples, 0.04%)</title><rect x="22.4242%" y="597" width="0.0433%" height="15" fill="rgb(239,95,49)" fg:x="518" fg:w="1"/><text x="22.6742%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (306 samples, 13.25%)</title><rect x="9.8268%" y="1029" width="13.2468%" height="15" fill="rgb(235,85,53)" fg:x="227" fg:w="306"/><text x="10.0768%" y="1039.50">&lt;core::iter::adapter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (306 samples, 13.25%)</title><rect x="9.8268%" y="1013" width="13.2468%" height="15" fill="rgb(233,133,31)" fg:x="227" fg:w="306"/><text x="10.0768%" y="1023.50">core::iter::traits::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (306 samples, 13.25%)</title><rect x="9.8268%" y="997" width="13.2468%" height="15" fill="rgb(218,25,20)" fg:x="227" fg:w="306"/><text x="10.0768%" y="1007.50">core::ops::function:..</text></g><g><title>y2021::d05::main::p02::{{closure}} (300 samples, 12.99%)</title><rect x="10.0866%" y="981" width="12.9870%" height="15" fill="rgb(252,210,38)" fg:x="233" fg:w="300"/><text x="10.3366%" y="991.50">y2021::d05::main::p0..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (231 samples, 10.00%)</title><rect x="13.0736%" y="965" width="10.0000%" height="15" fill="rgb(242,134,21)" fg:x="302" fg:w="231"/><text x="13.3236%" y="975.50">std::collectio..</text></g><g><title>std::collections::hash::map::map_entry (14 samples, 0.61%)</title><rect x="22.4675%" y="949" width="0.6061%" height="15" fill="rgb(213,28,48)" fg:x="519" fg:w="14"/><text x="22.7175%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (308 samples, 13.33%)</title><rect x="9.8268%" y="1045" width="13.3333%" height="15" fill="rgb(250,196,2)" fg:x="227" fg:w="308"/><text x="10.0768%" y="1055.50">core::iter::adapters..</text></g><g><title>y2021::d05::main::p02::{{closure}} (2 samples, 0.09%)</title><rect x="23.0736%" y="1029" width="0.0866%" height="15" fill="rgb(227,5,17)" fg:x="533" fg:w="2"/><text x="23.3236%" y="1039.50"></text></g><g><title>y2021::types::line::Line::points (2 samples, 0.09%)</title><rect x="23.0736%" y="1013" width="0.0866%" height="15" fill="rgb(221,226,24)" fg:x="533" fg:w="2"/><text x="23.3236%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.09%)</title><rect x="23.0736%" y="997" width="0.0866%" height="15" fill="rgb(211,5,48)" fg:x="533" fg:w="2"/><text x="23.3236%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="23.0736%" y="981" width="0.0866%" height="15" fill="rgb(219,150,6)" fg:x="533" fg:w="2"/><text x="23.3236%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="23.0736%" y="965" width="0.0866%" height="15" fill="rgb(251,46,16)" fg:x="533" fg:w="2"/><text x="23.3236%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="23.0736%" y="949" width="0.0866%" height="15" fill="rgb(220,204,40)" fg:x="533" fg:w="2"/><text x="23.3236%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.09%)</title><rect x="23.0736%" y="933" width="0.0866%" height="15" fill="rgb(211,85,2)" fg:x="533" fg:w="2"/><text x="23.3236%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.09%)</title><rect x="23.0736%" y="917" width="0.0866%" height="15" fill="rgb(229,17,7)" fg:x="533" fg:w="2"/><text x="23.3236%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.09%)</title><rect x="23.0736%" y="901" width="0.0866%" height="15" fill="rgb(239,72,28)" fg:x="533" fg:w="2"/><text x="23.3236%" y="911.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (2 samples, 0.09%)</title><rect x="23.0736%" y="885" width="0.0866%" height="15" fill="rgb(230,47,54)" fg:x="533" fg:w="2"/><text x="23.3236%" y="895.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (2 samples, 0.09%)</title><rect x="23.0736%" y="869" width="0.0866%" height="15" fill="rgb(214,50,8)" fg:x="533" fg:w="2"/><text x="23.3236%" y="879.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (2 samples, 0.09%)</title><rect x="23.0736%" y="853" width="0.0866%" height="15" fill="rgb(216,198,43)" fg:x="533" fg:w="2"/><text x="23.3236%" y="863.50"></text></g><g><title>&lt;i64 as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.09%)</title><rect x="23.0736%" y="837" width="0.0866%" height="15" fill="rgb(234,20,35)" fg:x="533" fg:w="2"/><text x="23.3236%" y="847.50"></text></g><g><title>core::num::&lt;impl i64&gt;::unchecked_add (2 samples, 0.09%)</title><rect x="23.0736%" y="821" width="0.0866%" height="15" fill="rgb(254,45,19)" fg:x="533" fg:w="2"/><text x="23.3236%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (311 samples, 13.46%)</title><rect x="9.7403%" y="1189" width="13.4632%" height="15" fill="rgb(219,14,44)" fg:x="225" fg:w="311"/><text x="9.9903%" y="1199.50">&lt;core::iter::adapter..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (311 samples, 13.46%)</title><rect x="9.7403%" y="1173" width="13.4632%" height="15" fill="rgb(217,220,26)" fg:x="225" fg:w="311"/><text x="9.9903%" y="1183.50">&lt;core::iter::adapter..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (311 samples, 13.46%)</title><rect x="9.7403%" y="1157" width="13.4632%" height="15" fill="rgb(213,158,28)" fg:x="225" fg:w="311"/><text x="9.9903%" y="1167.50">&lt;core::iter::adapter..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (311 samples, 13.46%)</title><rect x="9.7403%" y="1141" width="13.4632%" height="15" fill="rgb(252,51,52)" fg:x="225" fg:w="311"/><text x="9.9903%" y="1151.50">&lt;core::iter::adapter..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (311 samples, 13.46%)</title><rect x="9.7403%" y="1125" width="13.4632%" height="15" fill="rgb(246,89,16)" fg:x="225" fg:w="311"/><text x="9.9903%" y="1135.50">&lt;core::iter::adapter..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (311 samples, 13.46%)</title><rect x="9.7403%" y="1109" width="13.4632%" height="15" fill="rgb(216,158,49)" fg:x="225" fg:w="311"/><text x="9.9903%" y="1119.50">&lt;core::iter::adapter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (311 samples, 13.46%)</title><rect x="9.7403%" y="1093" width="13.4632%" height="15" fill="rgb(236,107,19)" fg:x="225" fg:w="311"/><text x="9.9903%" y="1103.50">core::iter::traits::..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (309 samples, 13.38%)</title><rect x="9.8268%" y="1077" width="13.3766%" height="15" fill="rgb(228,185,30)" fg:x="227" fg:w="309"/><text x="10.0768%" y="1087.50">core::iter::adapters..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (309 samples, 13.38%)</title><rect x="9.8268%" y="1061" width="13.3766%" height="15" fill="rgb(246,134,8)" fg:x="227" fg:w="309"/><text x="10.0768%" y="1071.50">core::iter::adapters..</text></g><g><title>y2021::d05::main::read_path_to_lines::{{closure}} (1 samples, 0.04%)</title><rect x="23.1602%" y="1045" width="0.0433%" height="15" fill="rgb(214,143,50)" fg:x="535" fg:w="1"/><text x="23.4102%" y="1055.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 0.04%)</title><rect x="23.1602%" y="1029" width="0.0433%" height="15" fill="rgb(228,75,8)" fg:x="535" fg:w="1"/><text x="23.4102%" y="1039.50"></text></g><g><title>&lt;y2021::types::line::Line as core::str::traits::FromStr&gt;::from_str (1 samples, 0.04%)</title><rect x="23.1602%" y="1013" width="0.0433%" height="15" fill="rgb(207,175,4)" fg:x="535" fg:w="1"/><text x="23.4102%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="23.1602%" y="997" width="0.0433%" height="15" fill="rgb(205,108,24)" fg:x="535" fg:w="1"/><text x="23.4102%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="23.1602%" y="981" width="0.0433%" height="15" fill="rgb(244,120,49)" fg:x="535" fg:w="1"/><text x="23.4102%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="23.1602%" y="965" width="0.0433%" height="15" fill="rgb(223,47,38)" fg:x="535" fg:w="1"/><text x="23.4102%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="23.1602%" y="949" width="0.0433%" height="15" fill="rgb(229,179,11)" fg:x="535" fg:w="1"/><text x="23.4102%" y="959.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="23.1602%" y="933" width="0.0433%" height="15" fill="rgb(231,122,1)" fg:x="535" fg:w="1"/><text x="23.4102%" y="943.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.04%)</title><rect x="23.1602%" y="917" width="0.0433%" height="15" fill="rgb(245,119,9)" fg:x="535" fg:w="1"/><text x="23.4102%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.35%)</title><rect x="23.2035%" y="1189" width="0.3463%" height="15" fill="rgb(241,163,25)" fg:x="536" fg:w="8"/><text x="23.4535%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.35%)</title><rect x="23.2035%" y="1173" width="0.3463%" height="15" fill="rgb(217,214,3)" fg:x="536" fg:w="8"/><text x="23.4535%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.35%)</title><rect x="23.2035%" y="1157" width="0.3463%" height="15" fill="rgb(240,86,28)" fg:x="536" fg:w="8"/><text x="23.4535%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.35%)</title><rect x="23.2035%" y="1141" width="0.3463%" height="15" fill="rgb(215,47,9)" fg:x="536" fg:w="8"/><text x="23.4535%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.35%)</title><rect x="23.2035%" y="1125" width="0.3463%" height="15" fill="rgb(252,25,45)" fg:x="536" fg:w="8"/><text x="23.4535%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (8 samples, 0.35%)</title><rect x="23.2035%" y="1109" width="0.3463%" height="15" fill="rgb(251,164,9)" fg:x="536" fg:w="8"/><text x="23.4535%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.30%)</title><rect x="23.2468%" y="1093" width="0.3030%" height="15" fill="rgb(233,194,0)" fg:x="537" fg:w="7"/><text x="23.4968%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (7 samples, 0.30%)</title><rect x="23.2468%" y="1077" width="0.3030%" height="15" fill="rgb(249,111,24)" fg:x="537" fg:w="7"/><text x="23.4968%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.30%)</title><rect x="23.2468%" y="1061" width="0.3030%" height="15" fill="rgb(250,223,3)" fg:x="537" fg:w="7"/><text x="23.4968%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="23.3766%" y="1045" width="0.1732%" height="15" fill="rgb(236,178,37)" fg:x="540" fg:w="4"/><text x="23.6266%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="23.3766%" y="1029" width="0.1732%" height="15" fill="rgb(241,158,50)" fg:x="540" fg:w="4"/><text x="23.6266%" y="1039.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="23.3766%" y="1013" width="0.1732%" height="15" fill="rgb(213,121,41)" fg:x="540" fg:w="4"/><text x="23.6266%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="23.3766%" y="997" width="0.1732%" height="15" fill="rgb(240,92,3)" fg:x="540" fg:w="4"/><text x="23.6266%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="23.3766%" y="981" width="0.1732%" height="15" fill="rgb(205,123,3)" fg:x="540" fg:w="4"/><text x="23.6266%" y="991.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.17%)</title><rect x="23.3766%" y="965" width="0.1732%" height="15" fill="rgb(205,97,47)" fg:x="540" fg:w="4"/><text x="23.6266%" y="975.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.04%)</title><rect x="23.5498%" y="949" width="0.0433%" height="15" fill="rgb(247,152,14)" fg:x="544" fg:w="1"/><text x="23.7998%" y="959.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.04%)</title><rect x="23.5498%" y="933" width="0.0433%" height="15" fill="rgb(248,195,53)" fg:x="544" fg:w="1"/><text x="23.7998%" y="943.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.04%)</title><rect x="23.5498%" y="917" width="0.0433%" height="15" fill="rgb(226,201,16)" fg:x="544" fg:w="1"/><text x="23.7998%" y="927.50"></text></g><g><title>release_pages (1 samples, 0.04%)</title><rect x="23.5498%" y="901" width="0.0433%" height="15" fill="rgb(205,98,0)" fg:x="544" fg:w="1"/><text x="23.7998%" y="911.50"></text></g><g><title>free_unref_page_list (1 samples, 0.04%)</title><rect x="23.5498%" y="885" width="0.0433%" height="15" fill="rgb(214,191,48)" fg:x="544" fg:w="1"/><text x="23.7998%" y="895.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.04%)</title><rect x="23.5498%" y="869" width="0.0433%" height="15" fill="rgb(237,112,39)" fg:x="544" fg:w="1"/><text x="23.7998%" y="879.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.04%)</title><rect x="23.5498%" y="853" width="0.0433%" height="15" fill="rgb(247,203,27)" fg:x="544" fg:w="1"/><text x="23.7998%" y="863.50"></text></g><g><title>__GI_munmap (3 samples, 0.13%)</title><rect x="23.5498%" y="1061" width="0.1299%" height="15" fill="rgb(235,124,28)" fg:x="544" fg:w="3"/><text x="23.7998%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.13%)</title><rect x="23.5498%" y="1045" width="0.1299%" height="15" fill="rgb(208,207,46)" fg:x="544" fg:w="3"/><text x="23.7998%" y="1055.50"></text></g><g><title>do_syscall_64 (3 samples, 0.13%)</title><rect x="23.5498%" y="1029" width="0.1299%" height="15" fill="rgb(234,176,4)" fg:x="544" fg:w="3"/><text x="23.7998%" y="1039.50"></text></g><g><title>__x64_sys_munmap (3 samples, 0.13%)</title><rect x="23.5498%" y="1013" width="0.1299%" height="15" fill="rgb(230,133,28)" fg:x="544" fg:w="3"/><text x="23.7998%" y="1023.50"></text></g><g><title>__vm_munmap (3 samples, 0.13%)</title><rect x="23.5498%" y="997" width="0.1299%" height="15" fill="rgb(211,137,40)" fg:x="544" fg:w="3"/><text x="23.7998%" y="1007.50"></text></g><g><title>__do_munmap (3 samples, 0.13%)</title><rect x="23.5498%" y="981" width="0.1299%" height="15" fill="rgb(254,35,13)" fg:x="544" fg:w="3"/><text x="23.7998%" y="991.50"></text></g><g><title>unmap_region (3 samples, 0.13%)</title><rect x="23.5498%" y="965" width="0.1299%" height="15" fill="rgb(225,49,51)" fg:x="544" fg:w="3"/><text x="23.7998%" y="975.50"></text></g><g><title>unmap_vmas (2 samples, 0.09%)</title><rect x="23.5931%" y="949" width="0.0866%" height="15" fill="rgb(251,10,15)" fg:x="545" fg:w="2"/><text x="23.8431%" y="959.50"></text></g><g><title>unmap_single_vma (2 samples, 0.09%)</title><rect x="23.5931%" y="933" width="0.0866%" height="15" fill="rgb(228,207,15)" fg:x="545" fg:w="2"/><text x="23.8431%" y="943.50"></text></g><g><title>unmap_page_range (2 samples, 0.09%)</title><rect x="23.5931%" y="917" width="0.0866%" height="15" fill="rgb(241,99,19)" fg:x="545" fg:w="2"/><text x="23.8431%" y="927.50"></text></g><g><title>zap_pte_range.isra.0 (2 samples, 0.09%)</title><rect x="23.5931%" y="901" width="0.0866%" height="15" fill="rgb(207,104,49)" fg:x="545" fg:w="2"/><text x="23.8431%" y="911.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="23.7229%" y="821" width="0.0433%" height="15" fill="rgb(234,99,18)" fg:x="548" fg:w="1"/><text x="23.9729%" y="831.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.04%)</title><rect x="23.7229%" y="805" width="0.0433%" height="15" fill="rgb(213,191,49)" fg:x="548" fg:w="1"/><text x="23.9729%" y="815.50"></text></g><g><title>tlb_finish_mmu (3 samples, 0.13%)</title><rect x="23.6797%" y="885" width="0.1299%" height="15" fill="rgb(210,226,19)" fg:x="547" fg:w="3"/><text x="23.9297%" y="895.50"></text></g><g><title>tlb_flush_mmu (3 samples, 0.13%)</title><rect x="23.6797%" y="869" width="0.1299%" height="15" fill="rgb(229,97,18)" fg:x="547" fg:w="3"/><text x="23.9297%" y="879.50"></text></g><g><title>free_pages_and_swap_cache (3 samples, 0.13%)</title><rect x="23.6797%" y="853" width="0.1299%" height="15" fill="rgb(211,167,15)" fg:x="547" fg:w="3"/><text x="23.9297%" y="863.50"></text></g><g><title>release_pages (3 samples, 0.13%)</title><rect x="23.6797%" y="837" width="0.1299%" height="15" fill="rgb(210,169,34)" fg:x="547" fg:w="3"/><text x="23.9297%" y="847.50"></text></g><g><title>free_unref_page_list (1 samples, 0.04%)</title><rect x="23.7662%" y="821" width="0.0433%" height="15" fill="rgb(241,121,31)" fg:x="549" fg:w="1"/><text x="24.0162%" y="831.50"></text></g><g><title>y2021::d05::main::run (495 samples, 21.43%)</title><rect x="2.5108%" y="1221" width="21.4286%" height="15" fill="rgb(232,40,11)" fg:x="58" fg:w="495"/><text x="2.7608%" y="1231.50">y2021::d05::main::run</text></g><g><title>y2021::d05::main::p02 (328 samples, 14.20%)</title><rect x="9.7403%" y="1205" width="14.1991%" height="15" fill="rgb(205,86,26)" fg:x="225" fg:w="328"/><text x="9.9903%" y="1215.50">y2021::d05::main::p02</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::types::point::Point,i32&gt;&gt; (9 samples, 0.39%)</title><rect x="23.5498%" y="1189" width="0.3896%" height="15" fill="rgb(231,126,28)" fg:x="544" fg:w="9"/><text x="23.7998%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::types::point::Point,i32,std::collections::hash::map::RandomState&gt;&gt; (9 samples, 0.39%)</title><rect x="23.5498%" y="1173" width="0.3896%" height="15" fill="rgb(219,221,18)" fg:x="544" fg:w="9"/><text x="23.7998%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::types::point::Point,i32)&gt;&gt; (9 samples, 0.39%)</title><rect x="23.5498%" y="1157" width="0.3896%" height="15" fill="rgb(211,40,0)" fg:x="544" fg:w="9"/><text x="23.7998%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.39%)</title><rect x="23.5498%" y="1141" width="0.3896%" height="15" fill="rgb(239,85,43)" fg:x="544" fg:w="9"/><text x="23.7998%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (9 samples, 0.39%)</title><rect x="23.5498%" y="1125" width="0.3896%" height="15" fill="rgb(231,55,21)" fg:x="544" fg:w="9"/><text x="23.7998%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (9 samples, 0.39%)</title><rect x="23.5498%" y="1109" width="0.3896%" height="15" fill="rgb(225,184,43)" fg:x="544" fg:w="9"/><text x="23.7998%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.39%)</title><rect x="23.5498%" y="1093" width="0.3896%" height="15" fill="rgb(251,158,41)" fg:x="544" fg:w="9"/><text x="23.7998%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.39%)</title><rect x="23.5498%" y="1077" width="0.3896%" height="15" fill="rgb(234,159,37)" fg:x="544" fg:w="9"/><text x="23.7998%" y="1087.50"></text></g><g><title>_int_free (6 samples, 0.26%)</title><rect x="23.6797%" y="1061" width="0.2597%" height="15" fill="rgb(216,204,22)" fg:x="547" fg:w="6"/><text x="23.9297%" y="1071.50"></text></g><g><title>systrim (6 samples, 0.26%)</title><rect x="23.6797%" y="1045" width="0.2597%" height="15" fill="rgb(214,17,3)" fg:x="547" fg:w="6"/><text x="23.9297%" y="1055.50"></text></g><g><title>__GI___default_morecore (6 samples, 0.26%)</title><rect x="23.6797%" y="1029" width="0.2597%" height="15" fill="rgb(212,111,17)" fg:x="547" fg:w="6"/><text x="23.9297%" y="1039.50"></text></g><g><title>__GI___sbrk (6 samples, 0.26%)</title><rect x="23.6797%" y="1013" width="0.2597%" height="15" fill="rgb(221,157,24)" fg:x="547" fg:w="6"/><text x="23.9297%" y="1023.50"></text></g><g><title>__GI___sbrk (6 samples, 0.26%)</title><rect x="23.6797%" y="997" width="0.2597%" height="15" fill="rgb(252,16,13)" fg:x="547" fg:w="6"/><text x="23.9297%" y="1007.50"></text></g><g><title>__brk (6 samples, 0.26%)</title><rect x="23.6797%" y="981" width="0.2597%" height="15" fill="rgb(221,62,2)" fg:x="547" fg:w="6"/><text x="23.9297%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.26%)</title><rect x="23.6797%" y="965" width="0.2597%" height="15" fill="rgb(247,87,22)" fg:x="547" fg:w="6"/><text x="23.9297%" y="975.50"></text></g><g><title>do_syscall_64 (6 samples, 0.26%)</title><rect x="23.6797%" y="949" width="0.2597%" height="15" fill="rgb(215,73,9)" fg:x="547" fg:w="6"/><text x="23.9297%" y="959.50"></text></g><g><title>__x64_sys_brk (6 samples, 0.26%)</title><rect x="23.6797%" y="933" width="0.2597%" height="15" fill="rgb(207,175,33)" fg:x="547" fg:w="6"/><text x="23.9297%" y="943.50"></text></g><g><title>__do_munmap (6 samples, 0.26%)</title><rect x="23.6797%" y="917" width="0.2597%" height="15" fill="rgb(243,129,54)" fg:x="547" fg:w="6"/><text x="23.9297%" y="927.50"></text></g><g><title>unmap_region (6 samples, 0.26%)</title><rect x="23.6797%" y="901" width="0.2597%" height="15" fill="rgb(227,119,45)" fg:x="547" fg:w="6"/><text x="23.9297%" y="911.50"></text></g><g><title>unmap_vmas (3 samples, 0.13%)</title><rect x="23.8095%" y="885" width="0.1299%" height="15" fill="rgb(205,109,36)" fg:x="550" fg:w="3"/><text x="24.0595%" y="895.50"></text></g><g><title>unmap_single_vma (3 samples, 0.13%)</title><rect x="23.8095%" y="869" width="0.1299%" height="15" fill="rgb(205,6,39)" fg:x="550" fg:w="3"/><text x="24.0595%" y="879.50"></text></g><g><title>unmap_page_range (3 samples, 0.13%)</title><rect x="23.8095%" y="853" width="0.1299%" height="15" fill="rgb(221,32,16)" fg:x="550" fg:w="3"/><text x="24.0595%" y="863.50"></text></g><g><title>zap_pte_range.isra.0 (3 samples, 0.13%)</title><rect x="23.8095%" y="837" width="0.1299%" height="15" fill="rgb(228,144,50)" fg:x="550" fg:w="3"/><text x="24.0595%" y="847.50"></text></g><g><title>page_remove_rmap (1 samples, 0.04%)</title><rect x="23.8961%" y="821" width="0.0433%" height="15" fill="rgb(229,201,53)" fg:x="552" fg:w="1"/><text x="24.1461%" y="831.50"></text></g><g><title>lock_page_memcg (1 samples, 0.04%)</title><rect x="23.8961%" y="805" width="0.0433%" height="15" fill="rgb(249,153,27)" fg:x="552" fg:w="1"/><text x="24.1461%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="23.9394%" y="917" width="0.0866%" height="15" fill="rgb(227,106,25)" fg:x="553" fg:w="2"/><text x="24.1894%" y="927.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="23.9827%" y="901" width="0.0433%" height="15" fill="rgb(230,65,29)" fg:x="554" fg:w="1"/><text x="24.2327%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="23.9827%" y="885" width="0.0433%" height="15" fill="rgb(221,57,46)" fg:x="554" fg:w="1"/><text x="24.2327%" y="895.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (3 samples, 0.13%)</title><rect x="24.0260%" y="901" width="0.1299%" height="15" fill="rgb(229,161,17)" fg:x="555" fg:w="3"/><text x="24.2760%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.39%)</title><rect x="23.9394%" y="1189" width="0.3896%" height="15" fill="rgb(222,213,11)" fg:x="553" fg:w="9"/><text x="24.1894%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.39%)</title><rect x="23.9394%" y="1173" width="0.3896%" height="15" fill="rgb(235,35,13)" fg:x="553" fg:w="9"/><text x="24.1894%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.39%)</title><rect x="23.9394%" y="1157" width="0.3896%" height="15" fill="rgb(233,158,34)" fg:x="553" fg:w="9"/><text x="24.1894%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.39%)</title><rect x="23.9394%" y="1141" width="0.3896%" height="15" fill="rgb(215,151,48)" fg:x="553" fg:w="9"/><text x="24.1894%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.39%)</title><rect x="23.9394%" y="1125" width="0.3896%" height="15" fill="rgb(229,84,14)" fg:x="553" fg:w="9"/><text x="24.1894%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.39%)</title><rect x="23.9394%" y="1109" width="0.3896%" height="15" fill="rgb(229,68,14)" fg:x="553" fg:w="9"/><text x="24.1894%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.39%)</title><rect x="23.9394%" y="1093" width="0.3896%" height="15" fill="rgb(243,106,26)" fg:x="553" fg:w="9"/><text x="24.1894%" y="1103.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (9 samples, 0.39%)</title><rect x="23.9394%" y="1077" width="0.3896%" height="15" fill="rgb(206,45,38)" fg:x="553" fg:w="9"/><text x="24.1894%" y="1087.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (9 samples, 0.39%)</title><rect x="23.9394%" y="1061" width="0.3896%" height="15" fill="rgb(226,6,15)" fg:x="553" fg:w="9"/><text x="24.1894%" y="1071.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (9 samples, 0.39%)</title><rect x="23.9394%" y="1045" width="0.3896%" height="15" fill="rgb(232,22,54)" fg:x="553" fg:w="9"/><text x="24.1894%" y="1055.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (9 samples, 0.39%)</title><rect x="23.9394%" y="1029" width="0.3896%" height="15" fill="rgb(229,222,32)" fg:x="553" fg:w="9"/><text x="24.1894%" y="1039.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9 samples, 0.39%)</title><rect x="23.9394%" y="1013" width="0.3896%" height="15" fill="rgb(228,62,29)" fg:x="553" fg:w="9"/><text x="24.1894%" y="1023.50"></text></g><g><title>y2021::d07::main::p01::{{closure}} (9 samples, 0.39%)</title><rect x="23.9394%" y="997" width="0.3896%" height="15" fill="rgb(251,103,34)" fg:x="553" fg:w="9"/><text x="24.1894%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (9 samples, 0.39%)</title><rect x="23.9394%" y="981" width="0.3896%" height="15" fill="rgb(233,12,30)" fg:x="553" fg:w="9"/><text x="24.1894%" y="991.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (9 samples, 0.39%)</title><rect x="23.9394%" y="965" width="0.3896%" height="15" fill="rgb(238,52,0)" fg:x="553" fg:w="9"/><text x="24.1894%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.39%)</title><rect x="23.9394%" y="949" width="0.3896%" height="15" fill="rgb(223,98,5)" fg:x="553" fg:w="9"/><text x="24.1894%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.39%)</title><rect x="23.9394%" y="933" width="0.3896%" height="15" fill="rgb(228,75,37)" fg:x="553" fg:w="9"/><text x="24.1894%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.30%)</title><rect x="24.0260%" y="917" width="0.3030%" height="15" fill="rgb(205,115,49)" fg:x="555" fg:w="7"/><text x="24.2760%" y="927.50"></text></g><g><title>y2021::d07::main::p01::{{closure}}::{{closure}} (4 samples, 0.17%)</title><rect x="24.1558%" y="901" width="0.1732%" height="15" fill="rgb(250,154,43)" fg:x="558" fg:w="4"/><text x="24.4058%" y="911.50"></text></g><g><title>y2021::utils::math::abs_diff (4 samples, 0.17%)</title><rect x="24.1558%" y="885" width="0.1732%" height="15" fill="rgb(226,43,29)" fg:x="558" fg:w="4"/><text x="24.4058%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (3 samples, 0.13%)</title><rect x="24.1991%" y="869" width="0.1299%" height="15" fill="rgb(249,228,39)" fg:x="559" fg:w="3"/><text x="24.4491%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::gt (3 samples, 0.13%)</title><rect x="24.1991%" y="853" width="0.1299%" height="15" fill="rgb(216,79,43)" fg:x="559" fg:w="3"/><text x="24.4491%" y="863.50"></text></g><g><title>y2021::d07::main::p01 (10 samples, 0.43%)</title><rect x="23.9394%" y="1205" width="0.4329%" height="15" fill="rgb(228,95,12)" fg:x="553" fg:w="10"/><text x="24.1894%" y="1215.50"></text></g><g><title>y2021::utils::file::csv_to_vec (1 samples, 0.04%)</title><rect x="24.3290%" y="1189" width="0.0433%" height="15" fill="rgb(249,221,15)" fg:x="562" fg:w="1"/><text x="24.5790%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="24.3290%" y="1173" width="0.0433%" height="15" fill="rgb(233,34,13)" fg:x="562" fg:w="1"/><text x="24.5790%" y="1183.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="24.3290%" y="1157" width="0.0433%" height="15" fill="rgb(214,103,39)" fg:x="562" fg:w="1"/><text x="24.5790%" y="1167.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.04%)</title><rect x="24.3290%" y="1141" width="0.0433%" height="15" fill="rgb(251,126,39)" fg:x="562" fg:w="1"/><text x="24.5790%" y="1151.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.04%)</title><rect x="24.3290%" y="1125" width="0.0433%" height="15" fill="rgb(214,216,36)" fg:x="562" fg:w="1"/><text x="24.5790%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="24.3290%" y="1109" width="0.0433%" height="15" fill="rgb(220,221,8)" fg:x="562" fg:w="1"/><text x="24.5790%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="24.3290%" y="1093" width="0.0433%" height="15" fill="rgb(240,216,3)" fg:x="562" fg:w="1"/><text x="24.5790%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="24.3290%" y="1077" width="0.0433%" height="15" fill="rgb(232,218,17)" fg:x="562" fg:w="1"/><text x="24.5790%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="24.3290%" y="1061" width="0.0433%" height="15" fill="rgb(229,163,45)" fg:x="562" fg:w="1"/><text x="24.5790%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="24.3290%" y="1045" width="0.0433%" height="15" fill="rgb(231,110,42)" fg:x="562" fg:w="1"/><text x="24.5790%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.04%)</title><rect x="24.3290%" y="1029" width="0.0433%" height="15" fill="rgb(208,170,48)" fg:x="562" fg:w="1"/><text x="24.5790%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="24.3290%" y="1013" width="0.0433%" height="15" fill="rgb(239,116,25)" fg:x="562" fg:w="1"/><text x="24.5790%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.04%)</title><rect x="24.3290%" y="997" width="0.0433%" height="15" fill="rgb(219,200,50)" fg:x="562" fg:w="1"/><text x="24.5790%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.04%)</title><rect x="24.3290%" y="981" width="0.0433%" height="15" fill="rgb(245,200,0)" fg:x="562" fg:w="1"/><text x="24.5790%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.04%)</title><rect x="24.3290%" y="965" width="0.0433%" height="15" fill="rgb(245,119,33)" fg:x="562" fg:w="1"/><text x="24.5790%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="24.3290%" y="949" width="0.0433%" height="15" fill="rgb(231,125,12)" fg:x="562" fg:w="1"/><text x="24.5790%" y="959.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="24.3290%" y="933" width="0.0433%" height="15" fill="rgb(216,96,41)" fg:x="562" fg:w="1"/><text x="24.5790%" y="943.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.04%)</title><rect x="24.3290%" y="917" width="0.0433%" height="15" fill="rgb(248,43,45)" fg:x="562" fg:w="1"/><text x="24.5790%" y="927.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.04%)</title><rect x="24.3290%" y="901" width="0.0433%" height="15" fill="rgb(217,222,7)" fg:x="562" fg:w="1"/><text x="24.5790%" y="911.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.04%)</title><rect x="24.3290%" y="885" width="0.0433%" height="15" fill="rgb(233,28,6)" fg:x="562" fg:w="1"/><text x="24.5790%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="24.3723%" y="901" width="0.1732%" height="15" fill="rgb(231,218,15)" fg:x="563" fg:w="4"/><text x="24.6223%" y="911.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.09%)</title><rect x="24.4589%" y="885" width="0.0866%" height="15" fill="rgb(226,171,48)" fg:x="565" fg:w="2"/><text x="24.7089%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.09%)</title><rect x="24.4589%" y="869" width="0.0866%" height="15" fill="rgb(235,201,9)" fg:x="565" fg:w="2"/><text x="24.7089%" y="879.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (3 samples, 0.13%)</title><rect x="24.5455%" y="869" width="0.1299%" height="15" fill="rgb(217,80,15)" fg:x="567" fg:w="3"/><text x="24.7955%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.26%)</title><rect x="24.5455%" y="885" width="0.2597%" height="15" fill="rgb(219,152,8)" fg:x="567" fg:w="6"/><text x="24.7955%" y="895.50"></text></g><g><title>y2021::d07::main::p02::{{closure}}::{{closure}} (3 samples, 0.13%)</title><rect x="24.6753%" y="869" width="0.1299%" height="15" fill="rgb(243,107,38)" fg:x="570" fg:w="3"/><text x="24.9253%" y="879.50"></text></g><g><title>y2021::d07::main::run (24 samples, 1.04%)</title><rect x="23.9394%" y="1221" width="1.0390%" height="15" fill="rgb(231,17,5)" fg:x="553" fg:w="24"/><text x="24.1894%" y="1231.50"></text></g><g><title>y2021::d07::main::p02 (14 samples, 0.61%)</title><rect x="24.3723%" y="1205" width="0.6061%" height="15" fill="rgb(209,25,54)" fg:x="563" fg:w="14"/><text x="24.6223%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.61%)</title><rect x="24.3723%" y="1189" width="0.6061%" height="15" fill="rgb(219,0,2)" fg:x="563" fg:w="14"/><text x="24.6223%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.61%)</title><rect x="24.3723%" y="1173" width="0.6061%" height="15" fill="rgb(246,9,5)" fg:x="563" fg:w="14"/><text x="24.6223%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.61%)</title><rect x="24.3723%" y="1157" width="0.6061%" height="15" fill="rgb(226,159,4)" fg:x="563" fg:w="14"/><text x="24.6223%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.61%)</title><rect x="24.3723%" y="1141" width="0.6061%" height="15" fill="rgb(219,175,34)" fg:x="563" fg:w="14"/><text x="24.6223%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 0.61%)</title><rect x="24.3723%" y="1125" width="0.6061%" height="15" fill="rgb(236,10,46)" fg:x="563" fg:w="14"/><text x="24.6223%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14 samples, 0.61%)</title><rect x="24.3723%" y="1109" width="0.6061%" height="15" fill="rgb(240,211,16)" fg:x="563" fg:w="14"/><text x="24.6223%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.61%)</title><rect x="24.3723%" y="1093" width="0.6061%" height="15" fill="rgb(205,3,43)" fg:x="563" fg:w="14"/><text x="24.6223%" y="1103.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (14 samples, 0.61%)</title><rect x="24.3723%" y="1077" width="0.6061%" height="15" fill="rgb(245,7,22)" fg:x="563" fg:w="14"/><text x="24.6223%" y="1087.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (14 samples, 0.61%)</title><rect x="24.3723%" y="1061" width="0.6061%" height="15" fill="rgb(239,132,32)" fg:x="563" fg:w="14"/><text x="24.6223%" y="1071.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (14 samples, 0.61%)</title><rect x="24.3723%" y="1045" width="0.6061%" height="15" fill="rgb(228,202,34)" fg:x="563" fg:w="14"/><text x="24.6223%" y="1055.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (14 samples, 0.61%)</title><rect x="24.3723%" y="1029" width="0.6061%" height="15" fill="rgb(254,200,22)" fg:x="563" fg:w="14"/><text x="24.6223%" y="1039.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (14 samples, 0.61%)</title><rect x="24.3723%" y="1013" width="0.6061%" height="15" fill="rgb(219,10,39)" fg:x="563" fg:w="14"/><text x="24.6223%" y="1023.50"></text></g><g><title>y2021::d07::main::p02::{{closure}} (14 samples, 0.61%)</title><rect x="24.3723%" y="997" width="0.6061%" height="15" fill="rgb(226,210,39)" fg:x="563" fg:w="14"/><text x="24.6223%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.61%)</title><rect x="24.3723%" y="981" width="0.6061%" height="15" fill="rgb(208,219,16)" fg:x="563" fg:w="14"/><text x="24.6223%" y="991.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (14 samples, 0.61%)</title><rect x="24.3723%" y="965" width="0.6061%" height="15" fill="rgb(216,158,51)" fg:x="563" fg:w="14"/><text x="24.6223%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.61%)</title><rect x="24.3723%" y="949" width="0.6061%" height="15" fill="rgb(233,14,44)" fg:x="563" fg:w="14"/><text x="24.6223%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.61%)</title><rect x="24.3723%" y="933" width="0.6061%" height="15" fill="rgb(237,97,39)" fg:x="563" fg:w="14"/><text x="24.6223%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.61%)</title><rect x="24.3723%" y="917" width="0.6061%" height="15" fill="rgb(218,198,43)" fg:x="563" fg:w="14"/><text x="24.6223%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (10 samples, 0.43%)</title><rect x="24.5455%" y="901" width="0.4329%" height="15" fill="rgb(231,104,20)" fg:x="567" fg:w="10"/><text x="24.7955%" y="911.50"></text></g><g><title>y2021::d07::main::p02::{{closure}}::{{closure}} (4 samples, 0.17%)</title><rect x="24.8052%" y="885" width="0.1732%" height="15" fill="rgb(254,36,13)" fg:x="573" fg:w="4"/><text x="25.0552%" y="895.50"></text></g><g><title>y2021::utils::math::abs_diff (4 samples, 0.17%)</title><rect x="24.8052%" y="869" width="0.1732%" height="15" fill="rgb(248,14,50)" fg:x="573" fg:w="4"/><text x="25.0552%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (1 samples, 0.04%)</title><rect x="24.9351%" y="853" width="0.0433%" height="15" fill="rgb(217,107,29)" fg:x="576" fg:w="1"/><text x="25.1851%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::gt (1 samples, 0.04%)</title><rect x="24.9351%" y="837" width="0.0433%" height="15" fill="rgb(251,169,33)" fg:x="576" fg:w="1"/><text x="25.1851%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="24.9784%" y="789" width="0.0433%" height="15" fill="rgb(217,108,32)" fg:x="577" fg:w="1"/><text x="25.2284%" y="799.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="24.9784%" y="773" width="0.0433%" height="15" fill="rgb(219,66,42)" fg:x="577" fg:w="1"/><text x="25.2284%" y="783.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.04%)</title><rect x="24.9784%" y="757" width="0.0433%" height="15" fill="rgb(206,180,7)" fg:x="577" fg:w="1"/><text x="25.2284%" y="767.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.04%)</title><rect x="24.9784%" y="741" width="0.0433%" height="15" fill="rgb(208,226,31)" fg:x="577" fg:w="1"/><text x="25.2284%" y="751.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.04%)</title><rect x="24.9784%" y="725" width="0.0433%" height="15" fill="rgb(218,26,49)" fg:x="577" fg:w="1"/><text x="25.2284%" y="735.50"></text></g><g><title>y2021::d08::main::p01 (2 samples, 0.09%)</title><rect x="24.9784%" y="1205" width="0.0866%" height="15" fill="rgb(233,197,48)" fg:x="577" fg:w="2"/><text x="25.2284%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.09%)</title><rect x="24.9784%" y="1189" width="0.0866%" height="15" fill="rgb(252,181,51)" fg:x="577" fg:w="2"/><text x="25.2284%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="24.9784%" y="1173" width="0.0866%" height="15" fill="rgb(253,90,19)" fg:x="577" fg:w="2"/><text x="25.2284%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="24.9784%" y="1157" width="0.0866%" height="15" fill="rgb(215,171,30)" fg:x="577" fg:w="2"/><text x="25.2284%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="24.9784%" y="1141" width="0.0866%" height="15" fill="rgb(214,222,9)" fg:x="577" fg:w="2"/><text x="25.2284%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.09%)</title><rect x="24.9784%" y="1125" width="0.0866%" height="15" fill="rgb(223,3,22)" fg:x="577" fg:w="2"/><text x="25.2284%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.09%)</title><rect x="24.9784%" y="1109" width="0.0866%" height="15" fill="rgb(225,196,46)" fg:x="577" fg:w="2"/><text x="25.2284%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="24.9784%" y="1093" width="0.0866%" height="15" fill="rgb(209,110,37)" fg:x="577" fg:w="2"/><text x="25.2284%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.09%)</title><rect x="24.9784%" y="1077" width="0.0866%" height="15" fill="rgb(249,89,12)" fg:x="577" fg:w="2"/><text x="25.2284%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.09%)</title><rect x="24.9784%" y="1061" width="0.0866%" height="15" fill="rgb(226,27,33)" fg:x="577" fg:w="2"/><text x="25.2284%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.09%)</title><rect x="24.9784%" y="1045" width="0.0866%" height="15" fill="rgb(213,82,22)" fg:x="577" fg:w="2"/><text x="25.2284%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.09%)</title><rect x="24.9784%" y="1029" width="0.0866%" height="15" fill="rgb(248,140,0)" fg:x="577" fg:w="2"/><text x="25.2284%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (2 samples, 0.09%)</title><rect x="24.9784%" y="1013" width="0.0866%" height="15" fill="rgb(228,106,3)" fg:x="577" fg:w="2"/><text x="25.2284%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.09%)</title><rect x="24.9784%" y="997" width="0.0866%" height="15" fill="rgb(209,23,37)" fg:x="577" fg:w="2"/><text x="25.2284%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.09%)</title><rect x="24.9784%" y="981" width="0.0866%" height="15" fill="rgb(241,93,50)" fg:x="577" fg:w="2"/><text x="25.2284%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.09%)</title><rect x="24.9784%" y="965" width="0.0866%" height="15" fill="rgb(253,46,43)" fg:x="577" fg:w="2"/><text x="25.2284%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.09%)</title><rect x="24.9784%" y="949" width="0.0866%" height="15" fill="rgb(226,206,43)" fg:x="577" fg:w="2"/><text x="25.2284%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.09%)</title><rect x="24.9784%" y="933" width="0.0866%" height="15" fill="rgb(217,54,7)" fg:x="577" fg:w="2"/><text x="25.2284%" y="943.50"></text></g><g><title>y2021::d08::main::p01::{{closure}} (2 samples, 0.09%)</title><rect x="24.9784%" y="917" width="0.0866%" height="15" fill="rgb(223,5,52)" fg:x="577" fg:w="2"/><text x="25.2284%" y="927.50"></text></g><g><title>y2021::d08::main::parse_line (2 samples, 0.09%)</title><rect x="24.9784%" y="901" width="0.0866%" height="15" fill="rgb(206,52,46)" fg:x="577" fg:w="2"/><text x="25.2284%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.09%)</title><rect x="24.9784%" y="885" width="0.0866%" height="15" fill="rgb(253,136,11)" fg:x="577" fg:w="2"/><text x="25.2284%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="24.9784%" y="869" width="0.0866%" height="15" fill="rgb(208,106,33)" fg:x="577" fg:w="2"/><text x="25.2284%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="24.9784%" y="853" width="0.0866%" height="15" fill="rgb(206,54,4)" fg:x="577" fg:w="2"/><text x="25.2284%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="24.9784%" y="837" width="0.0866%" height="15" fill="rgb(213,3,15)" fg:x="577" fg:w="2"/><text x="25.2284%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.09%)</title><rect x="24.9784%" y="821" width="0.0866%" height="15" fill="rgb(252,211,39)" fg:x="577" fg:w="2"/><text x="25.2284%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.09%)</title><rect x="24.9784%" y="805" width="0.0866%" height="15" fill="rgb(223,6,36)" fg:x="577" fg:w="2"/><text x="25.2284%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="25.0216%" y="789" width="0.0433%" height="15" fill="rgb(252,169,45)" fg:x="578" fg:w="1"/><text x="25.2716%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="25.0216%" y="773" width="0.0433%" height="15" fill="rgb(212,48,26)" fg:x="578" fg:w="1"/><text x="25.2716%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="25.0216%" y="757" width="0.0433%" height="15" fill="rgb(251,102,48)" fg:x="578" fg:w="1"/><text x="25.2716%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="25.0216%" y="741" width="0.0433%" height="15" fill="rgb(243,208,16)" fg:x="578" fg:w="1"/><text x="25.2716%" y="751.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="25.0649%" y="965" width="0.0433%" height="15" fill="rgb(219,96,24)" fg:x="579" fg:w="1"/><text x="25.3149%" y="975.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.04%)</title><rect x="25.0649%" y="949" width="0.0433%" height="15" fill="rgb(219,33,29)" fg:x="579" fg:w="1"/><text x="25.3149%" y="959.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.04%)</title><rect x="25.0649%" y="933" width="0.0433%" height="15" fill="rgb(223,176,5)" fg:x="579" fg:w="1"/><text x="25.3149%" y="943.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.04%)</title><rect x="25.0649%" y="917" width="0.0433%" height="15" fill="rgb(228,140,14)" fg:x="579" fg:w="1"/><text x="25.3149%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="25.1515%" y="645" width="0.0433%" height="15" fill="rgb(217,179,31)" fg:x="581" fg:w="1"/><text x="25.4015%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="25.1082%" y="901" width="0.1299%" height="15" fill="rgb(230,9,30)" fg:x="580" fg:w="3"/><text x="25.3582%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (3 samples, 0.13%)</title><rect x="25.1082%" y="885" width="0.1299%" height="15" fill="rgb(230,136,20)" fg:x="580" fg:w="3"/><text x="25.3582%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.13%)</title><rect x="25.1082%" y="869" width="0.1299%" height="15" fill="rgb(215,210,22)" fg:x="580" fg:w="3"/><text x="25.3582%" y="879.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (3 samples, 0.13%)</title><rect x="25.1082%" y="853" width="0.1299%" height="15" fill="rgb(218,43,5)" fg:x="580" fg:w="3"/><text x="25.3582%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (3 samples, 0.13%)</title><rect x="25.1082%" y="837" width="0.1299%" height="15" fill="rgb(216,11,5)" fg:x="580" fg:w="3"/><text x="25.3582%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.13%)</title><rect x="25.1082%" y="821" width="0.1299%" height="15" fill="rgb(209,82,29)" fg:x="580" fg:w="3"/><text x="25.3582%" y="831.50"></text></g><g><title>&lt;std::collections::hash::set::Difference&lt;T,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="25.1082%" y="805" width="0.1299%" height="15" fill="rgb(244,115,12)" fg:x="580" fg:w="3"/><text x="25.3582%" y="815.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (3 samples, 0.13%)</title><rect x="25.1082%" y="789" width="0.1299%" height="15" fill="rgb(222,82,18)" fg:x="580" fg:w="3"/><text x="25.3582%" y="799.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (3 samples, 0.13%)</title><rect x="25.1082%" y="773" width="0.1299%" height="15" fill="rgb(249,227,8)" fg:x="580" fg:w="3"/><text x="25.3582%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.13%)</title><rect x="25.1082%" y="757" width="0.1299%" height="15" fill="rgb(253,141,45)" fg:x="580" fg:w="3"/><text x="25.3582%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.13%)</title><rect x="25.1082%" y="741" width="0.1299%" height="15" fill="rgb(234,184,4)" fg:x="580" fg:w="3"/><text x="25.3582%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.13%)</title><rect x="25.1082%" y="725" width="0.1299%" height="15" fill="rgb(218,194,23)" fg:x="580" fg:w="3"/><text x="25.3582%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="25.1082%" y="709" width="0.1299%" height="15" fill="rgb(235,66,41)" fg:x="580" fg:w="3"/><text x="25.3582%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="25.1082%" y="693" width="0.1299%" height="15" fill="rgb(245,217,1)" fg:x="580" fg:w="3"/><text x="25.3582%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="25.1082%" y="677" width="0.1299%" height="15" fill="rgb(229,91,1)" fg:x="580" fg:w="3"/><text x="25.3582%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.09%)</title><rect x="25.1515%" y="661" width="0.0866%" height="15" fill="rgb(207,101,30)" fg:x="581" fg:w="2"/><text x="25.4015%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="25.1948%" y="645" width="0.0433%" height="15" fill="rgb(223,82,49)" fg:x="582" fg:w="1"/><text x="25.4448%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.04%)</title><rect x="25.2814%" y="677" width="0.0433%" height="15" fill="rgb(218,167,17)" fg:x="584" fg:w="1"/><text x="25.5314%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="25.2814%" y="661" width="0.0433%" height="15" fill="rgb(208,103,14)" fg:x="584" fg:w="1"/><text x="25.5314%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.13%)</title><rect x="25.2381%" y="901" width="0.1299%" height="15" fill="rgb(238,20,8)" fg:x="583" fg:w="3"/><text x="25.4881%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.13%)</title><rect x="25.2381%" y="885" width="0.1299%" height="15" fill="rgb(218,80,54)" fg:x="583" fg:w="3"/><text x="25.4881%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.13%)</title><rect x="25.2381%" y="869" width="0.1299%" height="15" fill="rgb(240,144,17)" fg:x="583" fg:w="3"/><text x="25.4881%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="25.2814%" y="853" width="0.0866%" height="15" fill="rgb(245,27,50)" fg:x="584" fg:w="2"/><text x="25.5314%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.09%)</title><rect x="25.2814%" y="837" width="0.0866%" height="15" fill="rgb(251,51,7)" fg:x="584" fg:w="2"/><text x="25.5314%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.09%)</title><rect x="25.2814%" y="821" width="0.0866%" height="15" fill="rgb(245,217,29)" fg:x="584" fg:w="2"/><text x="25.5314%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.09%)</title><rect x="25.2814%" y="805" width="0.0866%" height="15" fill="rgb(221,176,29)" fg:x="584" fg:w="2"/><text x="25.5314%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.09%)</title><rect x="25.2814%" y="789" width="0.0866%" height="15" fill="rgb(212,180,24)" fg:x="584" fg:w="2"/><text x="25.5314%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.09%)</title><rect x="25.2814%" y="773" width="0.0866%" height="15" fill="rgb(254,24,2)" fg:x="584" fg:w="2"/><text x="25.5314%" y="783.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (2 samples, 0.09%)</title><rect x="25.2814%" y="757" width="0.0866%" height="15" fill="rgb(230,100,2)" fg:x="584" fg:w="2"/><text x="25.5314%" y="767.50"></text></g><g><title>y2021::d08::main::set_from_iter (2 samples, 0.09%)</title><rect x="25.2814%" y="741" width="0.0866%" height="15" fill="rgb(219,142,25)" fg:x="584" fg:w="2"/><text x="25.5314%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.09%)</title><rect x="25.2814%" y="725" width="0.0866%" height="15" fill="rgb(240,73,43)" fg:x="584" fg:w="2"/><text x="25.5314%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.09%)</title><rect x="25.2814%" y="709" width="0.0866%" height="15" fill="rgb(214,114,15)" fg:x="584" fg:w="2"/><text x="25.5314%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.09%)</title><rect x="25.2814%" y="693" width="0.0866%" height="15" fill="rgb(207,130,4)" fg:x="584" fg:w="2"/><text x="25.5314%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.04%)</title><rect x="25.3247%" y="677" width="0.0433%" height="15" fill="rgb(221,25,40)" fg:x="585" fg:w="1"/><text x="25.5747%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="25.3247%" y="661" width="0.0433%" height="15" fill="rgb(241,184,7)" fg:x="585" fg:w="1"/><text x="25.5747%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.04%)</title><rect x="25.3247%" y="645" width="0.0433%" height="15" fill="rgb(235,159,4)" fg:x="585" fg:w="1"/><text x="25.5747%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.04%)</title><rect x="25.3247%" y="629" width="0.0433%" height="15" fill="rgb(214,87,48)" fg:x="585" fg:w="1"/><text x="25.5747%" y="639.50"></text></g><g><title>core::mem::swap (1 samples, 0.04%)</title><rect x="25.3247%" y="613" width="0.0433%" height="15" fill="rgb(246,198,24)" fg:x="585" fg:w="1"/><text x="25.5747%" y="623.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.04%)</title><rect x="25.3247%" y="597" width="0.0433%" height="15" fill="rgb(209,66,40)" fg:x="585" fg:w="1"/><text x="25.5747%" y="607.50"></text></g><g><title>core::ptr::swap_nonoverlapping (1 samples, 0.04%)</title><rect x="25.3247%" y="581" width="0.0433%" height="15" fill="rgb(233,147,39)" fg:x="585" fg:w="1"/><text x="25.5747%" y="591.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (1 samples, 0.04%)</title><rect x="25.3247%" y="565" width="0.0433%" height="15" fill="rgb(231,145,52)" fg:x="585" fg:w="1"/><text x="25.5747%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="25.3247%" y="549" width="0.0433%" height="15" fill="rgb(206,20,26)" fg:x="585" fg:w="1"/><text x="25.5747%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="25.3680%" y="901" width="0.0433%" height="15" fill="rgb(238,220,4)" fg:x="586" fg:w="1"/><text x="25.6180%" y="911.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (1 samples, 0.04%)</title><rect x="25.3680%" y="885" width="0.0433%" height="15" fill="rgb(252,195,42)" fg:x="586" fg:w="1"/><text x="25.6180%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="25.3680%" y="869" width="0.0433%" height="15" fill="rgb(209,10,6)" fg:x="586" fg:w="1"/><text x="25.6180%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="25.3680%" y="853" width="0.0433%" height="15" fill="rgb(229,3,52)" fg:x="586" fg:w="1"/><text x="25.6180%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="25.3680%" y="837" width="0.0433%" height="15" fill="rgb(253,49,37)" fg:x="586" fg:w="1"/><text x="25.6180%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="25.3680%" y="821" width="0.0433%" height="15" fill="rgb(240,103,49)" fg:x="586" fg:w="1"/><text x="25.6180%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="25.3680%" y="805" width="0.0433%" height="15" fill="rgb(250,182,30)" fg:x="586" fg:w="1"/><text x="25.6180%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="25.3680%" y="789" width="0.0433%" height="15" fill="rgb(248,8,30)" fg:x="586" fg:w="1"/><text x="25.6180%" y="799.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="25.3680%" y="773" width="0.0433%" height="15" fill="rgb(237,120,30)" fg:x="586" fg:w="1"/><text x="25.6180%" y="783.50"></text></g><g><title>tcache_get (1 samples, 0.04%)</title><rect x="25.3680%" y="757" width="0.0433%" height="15" fill="rgb(221,146,34)" fg:x="586" fg:w="1"/><text x="25.6180%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="25.4113%" y="773" width="0.0433%" height="15" fill="rgb(242,55,13)" fg:x="587" fg:w="1"/><text x="25.6613%" y="783.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (1 samples, 0.04%)</title><rect x="25.4113%" y="757" width="0.0433%" height="15" fill="rgb(242,112,31)" fg:x="587" fg:w="1"/><text x="25.6613%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.04%)</title><rect x="25.4113%" y="741" width="0.0433%" height="15" fill="rgb(249,192,27)" fg:x="587" fg:w="1"/><text x="25.6613%" y="751.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}}::{{closure}} (1 samples, 0.04%)</title><rect x="25.4113%" y="725" width="0.0433%" height="15" fill="rgb(208,204,44)" fg:x="587" fg:w="1"/><text x="25.6613%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="25.4113%" y="709" width="0.0433%" height="15" fill="rgb(208,93,54)" fg:x="587" fg:w="1"/><text x="25.6613%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.04%)</title><rect x="25.4113%" y="693" width="0.0433%" height="15" fill="rgb(242,1,31)" fg:x="587" fg:w="1"/><text x="25.6613%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="25.4113%" y="677" width="0.0433%" height="15" fill="rgb(241,83,25)" fg:x="587" fg:w="1"/><text x="25.6613%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1 samples, 0.04%)</title><rect x="25.4113%" y="661" width="0.0433%" height="15" fill="rgb(205,169,50)" fg:x="587" fg:w="1"/><text x="25.6613%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (1 samples, 0.04%)</title><rect x="25.4113%" y="645" width="0.0433%" height="15" fill="rgb(239,186,37)" fg:x="587" fg:w="1"/><text x="25.6613%" y="655.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.04%)</title><rect x="25.4113%" y="629" width="0.0433%" height="15" fill="rgb(205,221,10)" fg:x="587" fg:w="1"/><text x="25.6613%" y="639.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.04%)</title><rect x="25.4113%" y="613" width="0.0433%" height="15" fill="rgb(218,196,15)" fg:x="587" fg:w="1"/><text x="25.6613%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.04%)</title><rect x="25.4113%" y="597" width="0.0433%" height="15" fill="rgb(218,196,35)" fg:x="587" fg:w="1"/><text x="25.6613%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="25.4113%" y="581" width="0.0433%" height="15" fill="rgb(233,63,24)" fg:x="587" fg:w="1"/><text x="25.6613%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="25.4113%" y="565" width="0.0433%" height="15" fill="rgb(225,8,4)" fg:x="587" fg:w="1"/><text x="25.6613%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="25.4113%" y="549" width="0.0433%" height="15" fill="rgb(234,105,35)" fg:x="587" fg:w="1"/><text x="25.6613%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="25.4113%" y="533" width="0.0433%" height="15" fill="rgb(236,21,32)" fg:x="587" fg:w="1"/><text x="25.6613%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="25.4113%" y="517" width="0.0433%" height="15" fill="rgb(228,109,6)" fg:x="587" fg:w="1"/><text x="25.6613%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="25.4113%" y="501" width="0.0433%" height="15" fill="rgb(229,215,31)" fg:x="587" fg:w="1"/><text x="25.6613%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="25.4113%" y="485" width="0.0433%" height="15" fill="rgb(221,52,54)" fg:x="587" fg:w="1"/><text x="25.6613%" y="495.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.09%)</title><rect x="25.4978%" y="693" width="0.0866%" height="15" fill="rgb(252,129,43)" fg:x="589" fg:w="2"/><text x="25.7478%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (2 samples, 0.09%)</title><rect x="25.4978%" y="677" width="0.0866%" height="15" fill="rgb(248,183,27)" fg:x="589" fg:w="2"/><text x="25.7478%" y="687.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.09%)</title><rect x="25.4978%" y="661" width="0.0866%" height="15" fill="rgb(250,0,22)" fg:x="589" fg:w="2"/><text x="25.7478%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="25.4978%" y="645" width="0.0866%" height="15" fill="rgb(213,166,10)" fg:x="589" fg:w="2"/><text x="25.7478%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="25.5411%" y="629" width="0.0433%" height="15" fill="rgb(207,163,36)" fg:x="590" fg:w="1"/><text x="25.7911%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="25.5411%" y="613" width="0.0433%" height="15" fill="rgb(208,122,22)" fg:x="590" fg:w="1"/><text x="25.7911%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.04%)</title><rect x="25.5844%" y="629" width="0.0433%" height="15" fill="rgb(207,104,49)" fg:x="591" fg:w="1"/><text x="25.8344%" y="639.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="25.5844%" y="613" width="0.0433%" height="15" fill="rgb(248,211,50)" fg:x="591" fg:w="1"/><text x="25.8344%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.04%)</title><rect x="25.5844%" y="597" width="0.0433%" height="15" fill="rgb(217,13,45)" fg:x="591" fg:w="1"/><text x="25.8344%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.04%)</title><rect x="25.5844%" y="581" width="0.0433%" height="15" fill="rgb(211,216,49)" fg:x="591" fg:w="1"/><text x="25.8344%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="25.5844%" y="565" width="0.0433%" height="15" fill="rgb(221,58,53)" fg:x="591" fg:w="1"/><text x="25.8344%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="25.5844%" y="549" width="0.0433%" height="15" fill="rgb(220,112,41)" fg:x="591" fg:w="1"/><text x="25.8344%" y="559.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="25.5844%" y="533" width="0.0433%" height="15" fill="rgb(236,38,28)" fg:x="591" fg:w="1"/><text x="25.8344%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.61%)</title><rect x="25.0649%" y="1189" width="0.6061%" height="15" fill="rgb(227,195,22)" fg:x="579" fg:w="14"/><text x="25.3149%" y="1199.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::iter::traits::accum::Sum&lt;core::option::Option&lt;U&gt;&gt;&gt;::sum (14 samples, 0.61%)</title><rect x="25.0649%" y="1173" width="0.6061%" height="15" fill="rgb(214,55,33)" fg:x="579" fg:w="14"/><text x="25.3149%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.61%)</title><rect x="25.0649%" y="1157" width="0.6061%" height="15" fill="rgb(248,80,13)" fg:x="579" fg:w="14"/><text x="25.3149%" y="1167.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::accum::Sum&lt;core::result::Result&lt;U,E&gt;&gt;&gt;::sum (14 samples, 0.61%)</title><rect x="25.0649%" y="1141" width="0.6061%" height="15" fill="rgb(238,52,6)" fg:x="579" fg:w="14"/><text x="25.3149%" y="1151.50"></text></g><g><title>core::iter::adapters::process_results (14 samples, 0.61%)</title><rect x="25.0649%" y="1125" width="0.6061%" height="15" fill="rgb(224,198,47)" fg:x="579" fg:w="14"/><text x="25.3149%" y="1135.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::accum::Sum&lt;core::result::Result&lt;U,E&gt;&gt;&gt;::sum::{{closure}} (14 samples, 0.61%)</title><rect x="25.0649%" y="1109" width="0.6061%" height="15" fill="rgb(233,171,20)" fg:x="579" fg:w="14"/><text x="25.3149%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.61%)</title><rect x="25.0649%" y="1093" width="0.6061%" height="15" fill="rgb(241,30,25)" fg:x="579" fg:w="14"/><text x="25.3149%" y="1103.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (14 samples, 0.61%)</title><rect x="25.0649%" y="1077" width="0.6061%" height="15" fill="rgb(207,171,38)" fg:x="579" fg:w="14"/><text x="25.3149%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.61%)</title><rect x="25.0649%" y="1061" width="0.6061%" height="15" fill="rgb(234,70,1)" fg:x="579" fg:w="14"/><text x="25.3149%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.61%)</title><rect x="25.0649%" y="1045" width="0.6061%" height="15" fill="rgb(232,178,18)" fg:x="579" fg:w="14"/><text x="25.3149%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.61%)</title><rect x="25.0649%" y="1029" width="0.6061%" height="15" fill="rgb(241,78,40)" fg:x="579" fg:w="14"/><text x="25.3149%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.61%)</title><rect x="25.0649%" y="1013" width="0.6061%" height="15" fill="rgb(222,35,25)" fg:x="579" fg:w="14"/><text x="25.3149%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.61%)</title><rect x="25.0649%" y="997" width="0.6061%" height="15" fill="rgb(207,92,16)" fg:x="579" fg:w="14"/><text x="25.3149%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.61%)</title><rect x="25.0649%" y="981" width="0.6061%" height="15" fill="rgb(216,59,51)" fg:x="579" fg:w="14"/><text x="25.3149%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13 samples, 0.56%)</title><rect x="25.1082%" y="965" width="0.5628%" height="15" fill="rgb(213,80,28)" fg:x="580" fg:w="13"/><text x="25.3582%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13 samples, 0.56%)</title><rect x="25.1082%" y="949" width="0.5628%" height="15" fill="rgb(220,93,7)" fg:x="580" fg:w="13"/><text x="25.3582%" y="959.50"></text></g><g><title>y2021::d08::main::p02::{{closure}} (13 samples, 0.56%)</title><rect x="25.1082%" y="933" width="0.5628%" height="15" fill="rgb(225,24,44)" fg:x="580" fg:w="13"/><text x="25.3582%" y="943.50"></text></g><g><title>y2021::d08::main::signal_value (13 samples, 0.56%)</title><rect x="25.1082%" y="917" width="0.5628%" height="15" fill="rgb(243,74,40)" fg:x="580" fg:w="13"/><text x="25.3582%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (6 samples, 0.26%)</title><rect x="25.4113%" y="901" width="0.2597%" height="15" fill="rgb(228,39,7)" fg:x="587" fg:w="6"/><text x="25.6613%" y="911.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (6 samples, 0.26%)</title><rect x="25.4113%" y="885" width="0.2597%" height="15" fill="rgb(227,79,8)" fg:x="587" fg:w="6"/><text x="25.6613%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.26%)</title><rect x="25.4113%" y="869" width="0.2597%" height="15" fill="rgb(236,58,11)" fg:x="587" fg:w="6"/><text x="25.6613%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.26%)</title><rect x="25.4113%" y="853" width="0.2597%" height="15" fill="rgb(249,63,35)" fg:x="587" fg:w="6"/><text x="25.6613%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.26%)</title><rect x="25.4113%" y="837" width="0.2597%" height="15" fill="rgb(252,114,16)" fg:x="587" fg:w="6"/><text x="25.6613%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.26%)</title><rect x="25.4113%" y="821" width="0.2597%" height="15" fill="rgb(254,151,24)" fg:x="587" fg:w="6"/><text x="25.6613%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.26%)</title><rect x="25.4113%" y="805" width="0.2597%" height="15" fill="rgb(253,54,39)" fg:x="587" fg:w="6"/><text x="25.6613%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.26%)</title><rect x="25.4113%" y="789" width="0.2597%" height="15" fill="rgb(243,25,45)" fg:x="587" fg:w="6"/><text x="25.6613%" y="799.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (5 samples, 0.22%)</title><rect x="25.4545%" y="773" width="0.2165%" height="15" fill="rgb(234,134,9)" fg:x="588" fg:w="5"/><text x="25.7045%" y="783.50"></text></g><g><title>y2021::d08::main::set_from_iter (5 samples, 0.22%)</title><rect x="25.4545%" y="757" width="0.2165%" height="15" fill="rgb(227,166,31)" fg:x="588" fg:w="5"/><text x="25.7045%" y="767.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (5 samples, 0.22%)</title><rect x="25.4545%" y="741" width="0.2165%" height="15" fill="rgb(245,143,41)" fg:x="588" fg:w="5"/><text x="25.7045%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (5 samples, 0.22%)</title><rect x="25.4545%" y="725" width="0.2165%" height="15" fill="rgb(238,181,32)" fg:x="588" fg:w="5"/><text x="25.7045%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.22%)</title><rect x="25.4545%" y="709" width="0.2165%" height="15" fill="rgb(224,113,18)" fg:x="588" fg:w="5"/><text x="25.7045%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.09%)</title><rect x="25.5844%" y="693" width="0.0866%" height="15" fill="rgb(240,229,28)" fg:x="591" fg:w="2"/><text x="25.8344%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.09%)</title><rect x="25.5844%" y="677" width="0.0866%" height="15" fill="rgb(250,185,3)" fg:x="591" fg:w="2"/><text x="25.8344%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.09%)</title><rect x="25.5844%" y="661" width="0.0866%" height="15" fill="rgb(212,59,25)" fg:x="591" fg:w="2"/><text x="25.8344%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.09%)</title><rect x="25.5844%" y="645" width="0.0866%" height="15" fill="rgb(221,87,20)" fg:x="591" fg:w="2"/><text x="25.8344%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.04%)</title><rect x="25.6277%" y="629" width="0.0433%" height="15" fill="rgb(213,74,28)" fg:x="592" fg:w="1"/><text x="25.8777%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.04%)</title><rect x="25.6277%" y="613" width="0.0433%" height="15" fill="rgb(224,132,34)" fg:x="592" fg:w="1"/><text x="25.8777%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="25.6277%" y="597" width="0.0433%" height="15" fill="rgb(222,101,24)" fg:x="592" fg:w="1"/><text x="25.8777%" y="607.50"></text></g><g><title>y2021::d08::main::run (17 samples, 0.74%)</title><rect x="24.9784%" y="1221" width="0.7359%" height="15" fill="rgb(254,142,4)" fg:x="577" fg:w="17"/><text x="25.2284%" y="1231.50"></text></g><g><title>y2021::d08::main::p02 (15 samples, 0.65%)</title><rect x="25.0649%" y="1205" width="0.6494%" height="15" fill="rgb(230,229,49)" fg:x="579" fg:w="15"/><text x="25.3149%" y="1215.50"></text></g><g><title>y2021::utils::file::read_to_lines (1 samples, 0.04%)</title><rect x="25.6710%" y="1189" width="0.0433%" height="15" fill="rgb(238,70,47)" fg:x="593" fg:w="1"/><text x="25.9210%" y="1199.50"></text></g><g><title>std::io::buffered::bufreader::BufReader&lt;R&gt;::new (1 samples, 0.04%)</title><rect x="25.6710%" y="1173" width="0.0433%" height="15" fill="rgb(231,160,17)" fg:x="593" fg:w="1"/><text x="25.9210%" y="1183.50"></text></g><g><title>std::io::buffered::bufreader::BufReader&lt;R&gt;::with_capacity (1 samples, 0.04%)</title><rect x="25.6710%" y="1157" width="0.0433%" height="15" fill="rgb(218,68,53)" fg:x="593" fg:w="1"/><text x="25.9210%" y="1167.50"></text></g><g><title>alloc::boxed::Box&lt;[T]&gt;::new_uninit_slice (1 samples, 0.04%)</title><rect x="25.6710%" y="1141" width="0.0433%" height="15" fill="rgb(236,111,10)" fg:x="593" fg:w="1"/><text x="25.9210%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.04%)</title><rect x="25.6710%" y="1125" width="0.0433%" height="15" fill="rgb(224,34,41)" fg:x="593" fg:w="1"/><text x="25.9210%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="25.6710%" y="1109" width="0.0433%" height="15" fill="rgb(241,118,19)" fg:x="593" fg:w="1"/><text x="25.9210%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="25.6710%" y="1093" width="0.0433%" height="15" fill="rgb(238,129,25)" fg:x="593" fg:w="1"/><text x="25.9210%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="25.6710%" y="1077" width="0.0433%" height="15" fill="rgb(238,22,31)" fg:x="593" fg:w="1"/><text x="25.9210%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="25.6710%" y="1061" width="0.0433%" height="15" fill="rgb(222,174,48)" fg:x="593" fg:w="1"/><text x="25.9210%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="25.6710%" y="1045" width="0.0433%" height="15" fill="rgb(206,152,40)" fg:x="593" fg:w="1"/><text x="25.9210%" y="1055.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="25.6710%" y="1029" width="0.0433%" height="15" fill="rgb(218,99,54)" fg:x="593" fg:w="1"/><text x="25.9210%" y="1039.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="25.6710%" y="1013" width="0.0433%" height="15" fill="rgb(220,174,26)" fg:x="593" fg:w="1"/><text x="25.9210%" y="1023.50"></text></g><g><title>malloc_consolidate (1 samples, 0.04%)</title><rect x="25.6710%" y="997" width="0.0433%" height="15" fill="rgb(245,116,9)" fg:x="593" fg:w="1"/><text x="25.9210%" y="1007.50"></text></g><g><title>std::io::stdio::_print (1 samples, 0.04%)</title><rect x="25.7143%" y="1205" width="0.0433%" height="15" fill="rgb(209,72,35)" fg:x="594" fg:w="1"/><text x="25.9643%" y="1215.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.04%)</title><rect x="25.7143%" y="1189" width="0.0433%" height="15" fill="rgb(226,126,21)" fg:x="594" fg:w="1"/><text x="25.9643%" y="1199.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.04%)</title><rect x="25.7143%" y="1173" width="0.0433%" height="15" fill="rgb(227,192,1)" fg:x="594" fg:w="1"/><text x="25.9643%" y="1183.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.04%)</title><rect x="25.7143%" y="1157" width="0.0433%" height="15" fill="rgb(237,180,29)" fg:x="594" fg:w="1"/><text x="25.9643%" y="1167.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.04%)</title><rect x="25.7143%" y="1141" width="0.0433%" height="15" fill="rgb(230,197,35)" fg:x="594" fg:w="1"/><text x="25.9643%" y="1151.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="25.7143%" y="1125" width="0.0433%" height="15" fill="rgb(246,193,31)" fg:x="594" fg:w="1"/><text x="25.9643%" y="1135.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="25.7143%" y="1109" width="0.0433%" height="15" fill="rgb(241,36,4)" fg:x="594" fg:w="1"/><text x="25.9643%" y="1119.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="25.7143%" y="1093" width="0.0433%" height="15" fill="rgb(241,130,17)" fg:x="594" fg:w="1"/><text x="25.9643%" y="1103.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="25.7143%" y="1077" width="0.0433%" height="15" fill="rgb(206,137,32)" fg:x="594" fg:w="1"/><text x="25.9643%" y="1087.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="25.7143%" y="1061" width="0.0433%" height="15" fill="rgb(237,228,51)" fg:x="594" fg:w="1"/><text x="25.9643%" y="1071.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.04%)</title><rect x="25.7143%" y="1045" width="0.0433%" height="15" fill="rgb(243,6,42)" fg:x="594" fg:w="1"/><text x="25.9643%" y="1055.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="25.7143%" y="1029" width="0.0433%" height="15" fill="rgb(251,74,28)" fg:x="594" fg:w="1"/><text x="25.9643%" y="1039.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="25.7143%" y="1013" width="0.0433%" height="15" fill="rgb(218,20,49)" fg:x="594" fg:w="1"/><text x="25.9643%" y="1023.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.04%)</title><rect x="25.7143%" y="997" width="0.0433%" height="15" fill="rgb(238,28,14)" fg:x="594" fg:w="1"/><text x="25.9643%" y="1007.50"></text></g><g><title>__libc_write (1 samples, 0.04%)</title><rect x="25.7143%" y="981" width="0.0433%" height="15" fill="rgb(229,40,46)" fg:x="594" fg:w="1"/><text x="25.9643%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="25.7143%" y="965" width="0.0433%" height="15" fill="rgb(244,195,20)" fg:x="594" fg:w="1"/><text x="25.9643%" y="975.50"></text></g><g><title>do_syscall_64 (1 samples, 0.04%)</title><rect x="25.7143%" y="949" width="0.0433%" height="15" fill="rgb(253,56,35)" fg:x="594" fg:w="1"/><text x="25.9643%" y="959.50"></text></g><g><title>__x64_sys_write (1 samples, 0.04%)</title><rect x="25.7143%" y="933" width="0.0433%" height="15" fill="rgb(210,149,44)" fg:x="594" fg:w="1"/><text x="25.9643%" y="943.50"></text></g><g><title>ksys_write (1 samples, 0.04%)</title><rect x="25.7143%" y="917" width="0.0433%" height="15" fill="rgb(240,135,12)" fg:x="594" fg:w="1"/><text x="25.9643%" y="927.50"></text></g><g><title>vfs_write (1 samples, 0.04%)</title><rect x="25.7143%" y="901" width="0.0433%" height="15" fill="rgb(251,24,50)" fg:x="594" fg:w="1"/><text x="25.9643%" y="911.50"></text></g><g><title>new_sync_write (1 samples, 0.04%)</title><rect x="25.7143%" y="885" width="0.0433%" height="15" fill="rgb(243,200,47)" fg:x="594" fg:w="1"/><text x="25.9643%" y="895.50"></text></g><g><title>tty_write (1 samples, 0.04%)</title><rect x="25.7143%" y="869" width="0.0433%" height="15" fill="rgb(224,166,26)" fg:x="594" fg:w="1"/><text x="25.9643%" y="879.50"></text></g><g><title>file_tty_write.isra.0 (1 samples, 0.04%)</title><rect x="25.7143%" y="853" width="0.0433%" height="15" fill="rgb(233,0,47)" fg:x="594" fg:w="1"/><text x="25.9643%" y="863.50"></text></g><g><title>n_tty_write (1 samples, 0.04%)</title><rect x="25.7143%" y="837" width="0.0433%" height="15" fill="rgb(253,80,5)" fg:x="594" fg:w="1"/><text x="25.9643%" y="847.50"></text></g><g><title>y2021::d09::main::p01 (1 samples, 0.04%)</title><rect x="25.7576%" y="1205" width="0.0433%" height="15" fill="rgb(214,133,25)" fg:x="595" fg:w="1"/><text x="26.0076%" y="1215.50"></text></g><g><title>y2021::d09::main::lowest_surrounding (1 samples, 0.04%)</title><rect x="25.7576%" y="1189" width="0.0433%" height="15" fill="rgb(209,27,14)" fg:x="595" fg:w="1"/><text x="26.0076%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (1 samples, 0.04%)</title><rect x="25.7576%" y="1173" width="0.0433%" height="15" fill="rgb(219,102,51)" fg:x="595" fg:w="1"/><text x="26.0076%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (1 samples, 0.04%)</title><rect x="25.7576%" y="1157" width="0.0433%" height="15" fill="rgb(237,18,16)" fg:x="595" fg:w="1"/><text x="26.0076%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1 samples, 0.04%)</title><rect x="25.7576%" y="1141" width="0.0433%" height="15" fill="rgb(241,85,17)" fg:x="595" fg:w="1"/><text x="26.0076%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="25.7576%" y="1125" width="0.0433%" height="15" fill="rgb(236,90,42)" fg:x="595" fg:w="1"/><text x="26.0076%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="25.7576%" y="1109" width="0.0433%" height="15" fill="rgb(249,57,21)" fg:x="595" fg:w="1"/><text x="26.0076%" y="1119.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="25.7576%" y="1093" width="0.0433%" height="15" fill="rgb(243,12,36)" fg:x="595" fg:w="1"/><text x="26.0076%" y="1103.50"></text></g><g><title>y2021::d09::main::lowest_surrounding::{{closure}} (1 samples, 0.04%)</title><rect x="25.7576%" y="1077" width="0.0433%" height="15" fill="rgb(253,128,47)" fg:x="595" fg:w="1"/><text x="26.0076%" y="1087.50"></text></g><g><title>y2021::d09::main::value_in_chart (1 samples, 0.04%)</title><rect x="25.7576%" y="1061" width="0.0433%" height="15" fill="rgb(207,33,20)" fg:x="595" fg:w="1"/><text x="26.0076%" y="1071.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.04%)</title><rect x="25.8009%" y="965" width="0.0433%" height="15" fill="rgb(233,215,35)" fg:x="596" fg:w="1"/><text x="26.0509%" y="975.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.04%)</title><rect x="25.8009%" y="949" width="0.0433%" height="15" fill="rgb(249,188,52)" fg:x="596" fg:w="1"/><text x="26.0509%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.04%)</title><rect x="25.8009%" y="933" width="0.0433%" height="15" fill="rgb(225,12,32)" fg:x="596" fg:w="1"/><text x="26.0509%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="25.8009%" y="917" width="0.0433%" height="15" fill="rgb(247,98,14)" fg:x="596" fg:w="1"/><text x="26.0509%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="25.8009%" y="901" width="0.0433%" height="15" fill="rgb(247,219,48)" fg:x="596" fg:w="1"/><text x="26.0509%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="25.8009%" y="885" width="0.0433%" height="15" fill="rgb(253,60,48)" fg:x="596" fg:w="1"/><text x="26.0509%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="25.8009%" y="869" width="0.0433%" height="15" fill="rgb(245,15,52)" fg:x="596" fg:w="1"/><text x="26.0509%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="25.8009%" y="853" width="0.0433%" height="15" fill="rgb(220,133,28)" fg:x="596" fg:w="1"/><text x="26.0509%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="25.8009%" y="837" width="0.0433%" height="15" fill="rgb(217,180,4)" fg:x="596" fg:w="1"/><text x="26.0509%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="25.8009%" y="821" width="0.0433%" height="15" fill="rgb(251,24,1)" fg:x="596" fg:w="1"/><text x="26.0509%" y="831.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.04%)</title><rect x="25.8442%" y="885" width="0.0433%" height="15" fill="rgb(212,185,49)" fg:x="597" fg:w="1"/><text x="26.0942%" y="895.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="25.8442%" y="869" width="0.0433%" height="15" fill="rgb(215,175,22)" fg:x="597" fg:w="1"/><text x="26.0942%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.04%)</title><rect x="25.8442%" y="853" width="0.0433%" height="15" fill="rgb(250,205,14)" fg:x="597" fg:w="1"/><text x="26.0942%" y="863.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.04%)</title><rect x="25.8442%" y="837" width="0.0433%" height="15" fill="rgb(225,211,22)" fg:x="597" fg:w="1"/><text x="26.0942%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="25.8442%" y="821" width="0.0433%" height="15" fill="rgb(251,179,42)" fg:x="597" fg:w="1"/><text x="26.0942%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="25.8442%" y="805" width="0.0433%" height="15" fill="rgb(208,216,51)" fg:x="597" fg:w="1"/><text x="26.0942%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="25.8442%" y="789" width="0.0433%" height="15" fill="rgb(235,36,11)" fg:x="597" fg:w="1"/><text x="26.0942%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="25.8442%" y="773" width="0.0433%" height="15" fill="rgb(213,189,28)" fg:x="597" fg:w="1"/><text x="26.0942%" y="783.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.09%)</title><rect x="25.8442%" y="933" width="0.0866%" height="15" fill="rgb(227,203,42)" fg:x="597" fg:w="2"/><text x="26.0942%" y="943.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.09%)</title><rect x="25.8442%" y="917" width="0.0866%" height="15" fill="rgb(244,72,36)" fg:x="597" fg:w="2"/><text x="26.0942%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.09%)</title><rect x="25.8442%" y="901" width="0.0866%" height="15" fill="rgb(213,53,17)" fg:x="597" fg:w="2"/><text x="26.0942%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.04%)</title><rect x="25.8874%" y="885" width="0.0433%" height="15" fill="rgb(207,167,3)" fg:x="598" fg:w="1"/><text x="26.1374%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="25.8874%" y="869" width="0.0433%" height="15" fill="rgb(216,98,30)" fg:x="598" fg:w="1"/><text x="26.1374%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.04%)</title><rect x="25.8874%" y="853" width="0.0433%" height="15" fill="rgb(236,123,15)" fg:x="598" fg:w="1"/><text x="26.1374%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.04%)</title><rect x="25.8874%" y="837" width="0.0433%" height="15" fill="rgb(248,81,50)" fg:x="598" fg:w="1"/><text x="26.1374%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="25.8874%" y="821" width="0.0433%" height="15" fill="rgb(214,120,4)" fg:x="598" fg:w="1"/><text x="26.1374%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="25.8874%" y="805" width="0.0433%" height="15" fill="rgb(208,179,34)" fg:x="598" fg:w="1"/><text x="26.1374%" y="815.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="25.8874%" y="789" width="0.0433%" height="15" fill="rgb(227,140,7)" fg:x="598" fg:w="1"/><text x="26.1374%" y="799.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.04%)</title><rect x="25.9307%" y="853" width="0.0433%" height="15" fill="rgb(214,22,6)" fg:x="599" fg:w="1"/><text x="26.1807%" y="863.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="25.9307%" y="837" width="0.0433%" height="15" fill="rgb(207,137,27)" fg:x="599" fg:w="1"/><text x="26.1807%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.04%)</title><rect x="25.9307%" y="821" width="0.0433%" height="15" fill="rgb(210,8,46)" fg:x="599" fg:w="1"/><text x="26.1807%" y="831.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.04%)</title><rect x="25.9307%" y="805" width="0.0433%" height="15" fill="rgb(240,16,54)" fg:x="599" fg:w="1"/><text x="26.1807%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="25.9307%" y="789" width="0.0433%" height="15" fill="rgb(211,209,29)" fg:x="599" fg:w="1"/><text x="26.1807%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="25.9307%" y="773" width="0.0433%" height="15" fill="rgb(226,228,24)" fg:x="599" fg:w="1"/><text x="26.1807%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="25.9307%" y="757" width="0.0433%" height="15" fill="rgb(222,84,9)" fg:x="599" fg:w="1"/><text x="26.1807%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="25.9307%" y="741" width="0.0433%" height="15" fill="rgb(234,203,30)" fg:x="599" fg:w="1"/><text x="26.1807%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.09%)</title><rect x="25.9307%" y="901" width="0.0866%" height="15" fill="rgb(238,109,14)" fg:x="599" fg:w="2"/><text x="26.1807%" y="911.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.09%)</title><rect x="25.9307%" y="885" width="0.0866%" height="15" fill="rgb(233,206,34)" fg:x="599" fg:w="2"/><text x="26.1807%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.09%)</title><rect x="25.9307%" y="869" width="0.0866%" height="15" fill="rgb(220,167,47)" fg:x="599" fg:w="2"/><text x="26.1807%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.04%)</title><rect x="25.9740%" y="853" width="0.0433%" height="15" fill="rgb(238,105,10)" fg:x="600" fg:w="1"/><text x="26.2240%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="25.9740%" y="837" width="0.0433%" height="15" fill="rgb(213,227,17)" fg:x="600" fg:w="1"/><text x="26.2240%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.04%)</title><rect x="25.9740%" y="821" width="0.0433%" height="15" fill="rgb(217,132,38)" fg:x="600" fg:w="1"/><text x="26.2240%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.04%)</title><rect x="25.9740%" y="805" width="0.0433%" height="15" fill="rgb(242,146,4)" fg:x="600" fg:w="1"/><text x="26.2240%" y="815.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.04%)</title><rect x="25.9740%" y="789" width="0.0433%" height="15" fill="rgb(212,61,9)" fg:x="600" fg:w="1"/><text x="26.2240%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="25.9740%" y="773" width="0.0433%" height="15" fill="rgb(247,126,22)" fg:x="600" fg:w="1"/><text x="26.2240%" y="783.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="25.9740%" y="757" width="0.0433%" height="15" fill="rgb(220,196,2)" fg:x="600" fg:w="1"/><text x="26.2240%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.04%)</title><rect x="25.9740%" y="741" width="0.0433%" height="15" fill="rgb(208,46,4)" fg:x="600" fg:w="1"/><text x="26.2240%" y="751.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.04%)</title><rect x="25.9740%" y="725" width="0.0433%" height="15" fill="rgb(252,104,46)" fg:x="600" fg:w="1"/><text x="26.2240%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="25.9740%" y="709" width="0.0433%" height="15" fill="rgb(237,152,48)" fg:x="600" fg:w="1"/><text x="26.2240%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="25.9740%" y="693" width="0.0433%" height="15" fill="rgb(221,59,37)" fg:x="600" fg:w="1"/><text x="26.2240%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="25.9740%" y="677" width="0.0433%" height="15" fill="rgb(209,202,51)" fg:x="600" fg:w="1"/><text x="26.2240%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="25.9740%" y="661" width="0.0433%" height="15" fill="rgb(228,81,30)" fg:x="600" fg:w="1"/><text x="26.2240%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="25.9740%" y="645" width="0.0433%" height="15" fill="rgb(227,42,39)" fg:x="600" fg:w="1"/><text x="26.2240%" y="655.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.04%)</title><rect x="26.0173%" y="885" width="0.0433%" height="15" fill="rgb(221,26,2)" fg:x="601" fg:w="1"/><text x="26.2673%" y="895.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.04%)</title><rect x="26.0173%" y="869" width="0.0433%" height="15" fill="rgb(254,61,31)" fg:x="601" fg:w="1"/><text x="26.2673%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.04%)</title><rect x="26.0173%" y="853" width="0.0433%" height="15" fill="rgb(222,173,38)" fg:x="601" fg:w="1"/><text x="26.2673%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="26.0173%" y="837" width="0.0433%" height="15" fill="rgb(218,50,12)" fg:x="601" fg:w="1"/><text x="26.2673%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="26.0173%" y="821" width="0.0433%" height="15" fill="rgb(223,88,40)" fg:x="601" fg:w="1"/><text x="26.2673%" y="831.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="26.0173%" y="805" width="0.0433%" height="15" fill="rgb(237,54,19)" fg:x="601" fg:w="1"/><text x="26.2673%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.04%)</title><rect x="26.0173%" y="789" width="0.0433%" height="15" fill="rgb(251,129,25)" fg:x="601" fg:w="1"/><text x="26.2673%" y="799.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.04%)</title><rect x="26.0173%" y="773" width="0.0433%" height="15" fill="rgb(238,97,19)" fg:x="601" fg:w="1"/><text x="26.2673%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="26.0173%" y="757" width="0.0433%" height="15" fill="rgb(240,169,18)" fg:x="601" fg:w="1"/><text x="26.2673%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="26.0173%" y="741" width="0.0433%" height="15" fill="rgb(230,187,49)" fg:x="601" fg:w="1"/><text x="26.2673%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="26.0173%" y="725" width="0.0433%" height="15" fill="rgb(209,44,26)" fg:x="601" fg:w="1"/><text x="26.2673%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="26.0173%" y="709" width="0.0433%" height="15" fill="rgb(244,0,6)" fg:x="601" fg:w="1"/><text x="26.2673%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="26.0173%" y="693" width="0.0433%" height="15" fill="rgb(248,18,21)" fg:x="601" fg:w="1"/><text x="26.2673%" y="703.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.04%)</title><rect x="26.0606%" y="821" width="0.0433%" height="15" fill="rgb(245,180,19)" fg:x="602" fg:w="1"/><text x="26.3106%" y="831.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="26.0606%" y="805" width="0.0433%" height="15" fill="rgb(252,118,36)" fg:x="602" fg:w="1"/><text x="26.3106%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="26.0606%" y="789" width="0.0433%" height="15" fill="rgb(210,224,19)" fg:x="602" fg:w="1"/><text x="26.3106%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.04%)</title><rect x="26.0606%" y="773" width="0.0433%" height="15" fill="rgb(218,30,24)" fg:x="602" fg:w="1"/><text x="26.3106%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="26.0606%" y="757" width="0.0433%" height="15" fill="rgb(219,75,50)" fg:x="602" fg:w="1"/><text x="26.3106%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.04%)</title><rect x="26.0606%" y="741" width="0.0433%" height="15" fill="rgb(234,72,50)" fg:x="602" fg:w="1"/><text x="26.3106%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.04%)</title><rect x="26.0606%" y="725" width="0.0433%" height="15" fill="rgb(219,100,48)" fg:x="602" fg:w="1"/><text x="26.3106%" y="735.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.04%)</title><rect x="26.0606%" y="709" width="0.0433%" height="15" fill="rgb(253,5,41)" fg:x="602" fg:w="1"/><text x="26.3106%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="26.0606%" y="693" width="0.0433%" height="15" fill="rgb(247,181,11)" fg:x="602" fg:w="1"/><text x="26.3106%" y="703.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="26.0606%" y="677" width="0.0433%" height="15" fill="rgb(222,223,25)" fg:x="602" fg:w="1"/><text x="26.3106%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.04%)</title><rect x="26.0606%" y="661" width="0.0433%" height="15" fill="rgb(214,198,28)" fg:x="602" fg:w="1"/><text x="26.3106%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="26.1039%" y="677" width="0.0433%" height="15" fill="rgb(230,46,43)" fg:x="603" fg:w="1"/><text x="26.3539%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="26.1039%" y="661" width="0.0433%" height="15" fill="rgb(233,65,53)" fg:x="603" fg:w="1"/><text x="26.3539%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="26.1039%" y="645" width="0.0433%" height="15" fill="rgb(221,121,27)" fg:x="603" fg:w="1"/><text x="26.3539%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="26.1039%" y="629" width="0.0433%" height="15" fill="rgb(247,70,47)" fg:x="603" fg:w="1"/><text x="26.3539%" y="639.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.09%)</title><rect x="26.1039%" y="741" width="0.0866%" height="15" fill="rgb(228,85,35)" fg:x="603" fg:w="2"/><text x="26.3539%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.09%)</title><rect x="26.1039%" y="725" width="0.0866%" height="15" fill="rgb(209,50,18)" fg:x="603" fg:w="2"/><text x="26.3539%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.09%)</title><rect x="26.1039%" y="709" width="0.0866%" height="15" fill="rgb(250,19,35)" fg:x="603" fg:w="2"/><text x="26.3539%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.09%)</title><rect x="26.1039%" y="693" width="0.0866%" height="15" fill="rgb(253,107,29)" fg:x="603" fg:w="2"/><text x="26.3539%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="26.1472%" y="677" width="0.0433%" height="15" fill="rgb(252,179,29)" fg:x="604" fg:w="1"/><text x="26.3972%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="26.1472%" y="661" width="0.0433%" height="15" fill="rgb(238,194,6)" fg:x="604" fg:w="1"/><text x="26.3972%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="26.1472%" y="645" width="0.0433%" height="15" fill="rgb(238,164,29)" fg:x="604" fg:w="1"/><text x="26.3972%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="26.1472%" y="629" width="0.0433%" height="15" fill="rgb(224,25,9)" fg:x="604" fg:w="1"/><text x="26.3972%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="26.1472%" y="613" width="0.0433%" height="15" fill="rgb(244,153,23)" fg:x="604" fg:w="1"/><text x="26.3972%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="26.1472%" y="597" width="0.0433%" height="15" fill="rgb(212,203,14)" fg:x="604" fg:w="1"/><text x="26.3972%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.04%)</title><rect x="26.1472%" y="581" width="0.0433%" height="15" fill="rgb(220,164,20)" fg:x="604" fg:w="1"/><text x="26.3972%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.04%)</title><rect x="26.1472%" y="565" width="0.0433%" height="15" fill="rgb(222,203,48)" fg:x="604" fg:w="1"/><text x="26.3972%" y="575.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.04%)</title><rect x="26.1472%" y="549" width="0.0433%" height="15" fill="rgb(215,159,22)" fg:x="604" fg:w="1"/><text x="26.3972%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.43%)</title><rect x="25.8009%" y="1189" width="0.4329%" height="15" fill="rgb(216,183,47)" fg:x="596" fg:w="10"/><text x="26.0509%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.43%)</title><rect x="25.8009%" y="1173" width="0.4329%" height="15" fill="rgb(229,195,25)" fg:x="596" fg:w="10"/><text x="26.0509%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.43%)</title><rect x="25.8009%" y="1157" width="0.4329%" height="15" fill="rgb(224,132,51)" fg:x="596" fg:w="10"/><text x="26.0509%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.43%)</title><rect x="25.8009%" y="1141" width="0.4329%" height="15" fill="rgb(240,63,7)" fg:x="596" fg:w="10"/><text x="26.0509%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.43%)</title><rect x="25.8009%" y="1125" width="0.4329%" height="15" fill="rgb(249,182,41)" fg:x="596" fg:w="10"/><text x="26.0509%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 0.43%)</title><rect x="25.8009%" y="1109" width="0.4329%" height="15" fill="rgb(243,47,26)" fg:x="596" fg:w="10"/><text x="26.0509%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.43%)</title><rect x="25.8009%" y="1093" width="0.4329%" height="15" fill="rgb(233,48,2)" fg:x="596" fg:w="10"/><text x="26.0509%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.43%)</title><rect x="25.8009%" y="1077" width="0.4329%" height="15" fill="rgb(244,165,34)" fg:x="596" fg:w="10"/><text x="26.0509%" y="1087.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (10 samples, 0.43%)</title><rect x="25.8009%" y="1061" width="0.4329%" height="15" fill="rgb(207,89,7)" fg:x="596" fg:w="10"/><text x="26.0509%" y="1071.50"></text></g><g><title>y2021::d09::main::p02::{{closure}} (10 samples, 0.43%)</title><rect x="25.8009%" y="1045" width="0.4329%" height="15" fill="rgb(244,117,36)" fg:x="596" fg:w="10"/><text x="26.0509%" y="1055.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.43%)</title><rect x="25.8009%" y="1029" width="0.4329%" height="15" fill="rgb(226,144,34)" fg:x="596" fg:w="10"/><text x="26.0509%" y="1039.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.43%)</title><rect x="25.8009%" y="1013" width="0.4329%" height="15" fill="rgb(213,23,19)" fg:x="596" fg:w="10"/><text x="26.0509%" y="1023.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.43%)</title><rect x="25.8009%" y="997" width="0.4329%" height="15" fill="rgb(217,75,12)" fg:x="596" fg:w="10"/><text x="26.0509%" y="1007.50"></text></g><g><title>y2021::d09::main::get_basin_size (10 samples, 0.43%)</title><rect x="25.8009%" y="981" width="0.4329%" height="15" fill="rgb(224,159,17)" fg:x="596" fg:w="10"/><text x="26.0509%" y="991.50"></text></g><g><title>y2021::d09::main::get_basin_size (9 samples, 0.39%)</title><rect x="25.8442%" y="965" width="0.3896%" height="15" fill="rgb(217,118,1)" fg:x="597" fg:w="9"/><text x="26.0942%" y="975.50"></text></g><g><title>y2021::d09::main::get_basin_size (9 samples, 0.39%)</title><rect x="25.8442%" y="949" width="0.3896%" height="15" fill="rgb(232,180,48)" fg:x="597" fg:w="9"/><text x="26.0942%" y="959.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.30%)</title><rect x="25.9307%" y="933" width="0.3030%" height="15" fill="rgb(230,27,33)" fg:x="599" fg:w="7"/><text x="26.1807%" y="943.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.30%)</title><rect x="25.9307%" y="917" width="0.3030%" height="15" fill="rgb(205,31,21)" fg:x="599" fg:w="7"/><text x="26.1807%" y="927.50"></text></g><g><title>y2021::d09::main::get_basin_size (5 samples, 0.22%)</title><rect x="26.0173%" y="901" width="0.2165%" height="15" fill="rgb(253,59,4)" fg:x="601" fg:w="5"/><text x="26.2673%" y="911.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.17%)</title><rect x="26.0606%" y="885" width="0.1732%" height="15" fill="rgb(224,201,9)" fg:x="602" fg:w="4"/><text x="26.3106%" y="895.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.17%)</title><rect x="26.0606%" y="869" width="0.1732%" height="15" fill="rgb(229,206,30)" fg:x="602" fg:w="4"/><text x="26.3106%" y="879.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.17%)</title><rect x="26.0606%" y="853" width="0.1732%" height="15" fill="rgb(212,67,47)" fg:x="602" fg:w="4"/><text x="26.3106%" y="863.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.17%)</title><rect x="26.0606%" y="837" width="0.1732%" height="15" fill="rgb(211,96,50)" fg:x="602" fg:w="4"/><text x="26.3106%" y="847.50"></text></g><g><title>y2021::d09::main::get_basin_size (3 samples, 0.13%)</title><rect x="26.1039%" y="821" width="0.1299%" height="15" fill="rgb(252,114,18)" fg:x="603" fg:w="3"/><text x="26.3539%" y="831.50"></text></g><g><title>y2021::d09::main::get_basin_size (3 samples, 0.13%)</title><rect x="26.1039%" y="805" width="0.1299%" height="15" fill="rgb(223,58,37)" fg:x="603" fg:w="3"/><text x="26.3539%" y="815.50"></text></g><g><title>y2021::d09::main::get_basin_size (3 samples, 0.13%)</title><rect x="26.1039%" y="789" width="0.1299%" height="15" fill="rgb(237,70,4)" fg:x="603" fg:w="3"/><text x="26.3539%" y="799.50"></text></g><g><title>y2021::d09::main::get_basin_size (3 samples, 0.13%)</title><rect x="26.1039%" y="773" width="0.1299%" height="15" fill="rgb(244,85,46)" fg:x="603" fg:w="3"/><text x="26.3539%" y="783.50"></text></g><g><title>y2021::d09::main::get_basin_size (3 samples, 0.13%)</title><rect x="26.1039%" y="757" width="0.1299%" height="15" fill="rgb(223,39,52)" fg:x="603" fg:w="3"/><text x="26.3539%" y="767.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="26.1905%" y="741" width="0.0433%" height="15" fill="rgb(218,200,14)" fg:x="605" fg:w="1"/><text x="26.4405%" y="751.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="26.1905%" y="725" width="0.0433%" height="15" fill="rgb(208,171,16)" fg:x="605" fg:w="1"/><text x="26.4405%" y="735.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="26.1905%" y="709" width="0.0433%" height="15" fill="rgb(234,200,18)" fg:x="605" fg:w="1"/><text x="26.4405%" y="719.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="26.1905%" y="693" width="0.0433%" height="15" fill="rgb(228,45,11)" fg:x="605" fg:w="1"/><text x="26.4405%" y="703.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.04%)</title><rect x="26.1905%" y="677" width="0.0433%" height="15" fill="rgb(237,182,11)" fg:x="605" fg:w="1"/><text x="26.4405%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.04%)</title><rect x="26.1905%" y="661" width="0.0433%" height="15" fill="rgb(241,175,49)" fg:x="605" fg:w="1"/><text x="26.4405%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.04%)</title><rect x="26.1905%" y="645" width="0.0433%" height="15" fill="rgb(247,38,35)" fg:x="605" fg:w="1"/><text x="26.4405%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.04%)</title><rect x="26.1905%" y="629" width="0.0433%" height="15" fill="rgb(228,39,49)" fg:x="605" fg:w="1"/><text x="26.4405%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="26.1905%" y="613" width="0.0433%" height="15" fill="rgb(226,101,26)" fg:x="605" fg:w="1"/><text x="26.4405%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="26.1905%" y="597" width="0.0433%" height="15" fill="rgb(206,141,19)" fg:x="605" fg:w="1"/><text x="26.4405%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="26.1905%" y="581" width="0.0433%" height="15" fill="rgb(211,200,13)" fg:x="605" fg:w="1"/><text x="26.4405%" y="591.50"></text></g><g><title>y2021::d09::main::run (13 samples, 0.56%)</title><rect x="25.7143%" y="1221" width="0.5628%" height="15" fill="rgb(241,121,6)" fg:x="594" fg:w="13"/><text x="25.9643%" y="1231.50"></text></g><g><title>y2021::d09::main::p02 (11 samples, 0.48%)</title><rect x="25.8009%" y="1205" width="0.4762%" height="15" fill="rgb(234,221,29)" fg:x="596" fg:w="11"/><text x="26.0509%" y="1215.50"></text></g><g><title>y2021::d09::main::lowest_surrounding (1 samples, 0.04%)</title><rect x="26.2338%" y="1189" width="0.0433%" height="15" fill="rgb(229,136,5)" fg:x="606" fg:w="1"/><text x="26.4838%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (1 samples, 0.04%)</title><rect x="26.2338%" y="1173" width="0.0433%" height="15" fill="rgb(238,36,11)" fg:x="606" fg:w="1"/><text x="26.4838%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (1 samples, 0.04%)</title><rect x="26.2338%" y="1157" width="0.0433%" height="15" fill="rgb(251,55,41)" fg:x="606" fg:w="1"/><text x="26.4838%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1 samples, 0.04%)</title><rect x="26.2338%" y="1141" width="0.0433%" height="15" fill="rgb(242,34,40)" fg:x="606" fg:w="1"/><text x="26.4838%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="26.2338%" y="1125" width="0.0433%" height="15" fill="rgb(215,42,17)" fg:x="606" fg:w="1"/><text x="26.4838%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="26.2338%" y="1109" width="0.0433%" height="15" fill="rgb(207,44,46)" fg:x="606" fg:w="1"/><text x="26.4838%" y="1119.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="26.2338%" y="1093" width="0.0433%" height="15" fill="rgb(211,206,28)" fg:x="606" fg:w="1"/><text x="26.4838%" y="1103.50"></text></g><g><title>y2021::d09::main::lowest_surrounding::{{closure}} (1 samples, 0.04%)</title><rect x="26.2338%" y="1077" width="0.0433%" height="15" fill="rgb(237,167,16)" fg:x="606" fg:w="1"/><text x="26.4838%" y="1087.50"></text></g><g><title>y2021::d09::main::value_in_chart (1 samples, 0.04%)</title><rect x="26.2338%" y="1061" width="0.0433%" height="15" fill="rgb(233,66,6)" fg:x="606" fg:w="1"/><text x="26.4838%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="26.2338%" y="1045" width="0.0433%" height="15" fill="rgb(246,123,29)" fg:x="606" fg:w="1"/><text x="26.4838%" y="1055.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="26.2338%" y="1029" width="0.0433%" height="15" fill="rgb(209,62,40)" fg:x="606" fg:w="1"/><text x="26.4838%" y="1039.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="26.2338%" y="1013" width="0.0433%" height="15" fill="rgb(218,4,25)" fg:x="606" fg:w="1"/><text x="26.4838%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.04%)</title><rect x="26.2771%" y="1045" width="0.0433%" height="15" fill="rgb(253,91,49)" fg:x="607" fg:w="1"/><text x="26.5271%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.04%)</title><rect x="26.2771%" y="1029" width="0.0433%" height="15" fill="rgb(228,155,29)" fg:x="607" fg:w="1"/><text x="26.5271%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="26.2771%" y="1013" width="0.0433%" height="15" fill="rgb(243,57,37)" fg:x="607" fg:w="1"/><text x="26.5271%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="26.2771%" y="997" width="0.0433%" height="15" fill="rgb(244,167,17)" fg:x="607" fg:w="1"/><text x="26.5271%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="26.2771%" y="981" width="0.0433%" height="15" fill="rgb(207,181,38)" fg:x="607" fg:w="1"/><text x="26.5271%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="26.2771%" y="965" width="0.0433%" height="15" fill="rgb(211,8,23)" fg:x="607" fg:w="1"/><text x="26.5271%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="26.2771%" y="949" width="0.0433%" height="15" fill="rgb(235,11,44)" fg:x="607" fg:w="1"/><text x="26.5271%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="26.2771%" y="933" width="0.0433%" height="15" fill="rgb(248,18,52)" fg:x="607" fg:w="1"/><text x="26.5271%" y="943.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="26.2771%" y="917" width="0.0433%" height="15" fill="rgb(208,4,7)" fg:x="607" fg:w="1"/><text x="26.5271%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.04%)</title><rect x="26.2771%" y="901" width="0.0433%" height="15" fill="rgb(240,17,39)" fg:x="607" fg:w="1"/><text x="26.5271%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.04%)</title><rect x="26.2771%" y="885" width="0.0433%" height="15" fill="rgb(207,170,3)" fg:x="607" fg:w="1"/><text x="26.5271%" y="895.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.04%)</title><rect x="26.2771%" y="869" width="0.0433%" height="15" fill="rgb(236,100,52)" fg:x="607" fg:w="1"/><text x="26.5271%" y="879.50"></text></g><g><title>y2021::d10::main::p01 (2 samples, 0.09%)</title><rect x="26.2771%" y="1205" width="0.0866%" height="15" fill="rgb(246,78,51)" fg:x="607" fg:w="2"/><text x="26.5271%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.09%)</title><rect x="26.2771%" y="1189" width="0.0866%" height="15" fill="rgb(211,17,15)" fg:x="607" fg:w="2"/><text x="26.5271%" y="1199.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.09%)</title><rect x="26.2771%" y="1173" width="0.0866%" height="15" fill="rgb(209,59,46)" fg:x="607" fg:w="2"/><text x="26.5271%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.09%)</title><rect x="26.2771%" y="1157" width="0.0866%" height="15" fill="rgb(210,92,25)" fg:x="607" fg:w="2"/><text x="26.5271%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.09%)</title><rect x="26.2771%" y="1141" width="0.0866%" height="15" fill="rgb(238,174,52)" fg:x="607" fg:w="2"/><text x="26.5271%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.09%)</title><rect x="26.2771%" y="1125" width="0.0866%" height="15" fill="rgb(230,73,7)" fg:x="607" fg:w="2"/><text x="26.5271%" y="1135.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.09%)</title><rect x="26.2771%" y="1109" width="0.0866%" height="15" fill="rgb(243,124,40)" fg:x="607" fg:w="2"/><text x="26.5271%" y="1119.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.09%)</title><rect x="26.2771%" y="1093" width="0.0866%" height="15" fill="rgb(244,170,11)" fg:x="607" fg:w="2"/><text x="26.5271%" y="1103.50"></text></g><g><title>y2021::d10::main::p01::{{closure}} (2 samples, 0.09%)</title><rect x="26.2771%" y="1077" width="0.0866%" height="15" fill="rgb(207,114,54)" fg:x="607" fg:w="2"/><text x="26.5271%" y="1087.50"></text></g><g><title>y2021::d10::main::check_line (2 samples, 0.09%)</title><rect x="26.2771%" y="1061" width="0.0866%" height="15" fill="rgb(205,42,20)" fg:x="607" fg:w="2"/><text x="26.5271%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.04%)</title><rect x="26.3203%" y="1045" width="0.0433%" height="15" fill="rgb(230,30,28)" fg:x="608" fg:w="1"/><text x="26.5703%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="26.3203%" y="1029" width="0.0433%" height="15" fill="rgb(205,73,54)" fg:x="608" fg:w="1"/><text x="26.5703%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.04%)</title><rect x="26.3203%" y="1013" width="0.0433%" height="15" fill="rgb(254,227,23)" fg:x="608" fg:w="1"/><text x="26.5703%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.04%)</title><rect x="26.3203%" y="997" width="0.0433%" height="15" fill="rgb(228,202,34)" fg:x="608" fg:w="1"/><text x="26.5703%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.04%)</title><rect x="26.3203%" y="981" width="0.0433%" height="15" fill="rgb(222,225,37)" fg:x="608" fg:w="1"/><text x="26.5703%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.04%)</title><rect x="26.3203%" y="965" width="0.0433%" height="15" fill="rgb(221,14,54)" fg:x="608" fg:w="1"/><text x="26.5703%" y="975.50"></text></g><g><title>y2021::d10::main::run (4 samples, 0.17%)</title><rect x="26.2771%" y="1221" width="0.1732%" height="15" fill="rgb(254,102,2)" fg:x="607" fg:w="4"/><text x="26.5271%" y="1231.50"></text></g><g><title>y2021::d10::main::p02 (2 samples, 0.09%)</title><rect x="26.3636%" y="1205" width="0.0866%" height="15" fill="rgb(232,104,17)" fg:x="609" fg:w="2"/><text x="26.6136%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.09%)</title><rect x="26.3636%" y="1189" width="0.0866%" height="15" fill="rgb(250,220,14)" fg:x="609" fg:w="2"/><text x="26.6136%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="26.3636%" y="1173" width="0.0866%" height="15" fill="rgb(241,158,9)" fg:x="609" fg:w="2"/><text x="26.6136%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="26.3636%" y="1157" width="0.0866%" height="15" fill="rgb(246,9,43)" fg:x="609" fg:w="2"/><text x="26.6136%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.09%)</title><rect x="26.3636%" y="1141" width="0.0866%" height="15" fill="rgb(206,73,33)" fg:x="609" fg:w="2"/><text x="26.6136%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.09%)</title><rect x="26.3636%" y="1125" width="0.0866%" height="15" fill="rgb(222,79,8)" fg:x="609" fg:w="2"/><text x="26.6136%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.09%)</title><rect x="26.3636%" y="1109" width="0.0866%" height="15" fill="rgb(234,8,54)" fg:x="609" fg:w="2"/><text x="26.6136%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="26.3636%" y="1093" width="0.0866%" height="15" fill="rgb(209,134,38)" fg:x="609" fg:w="2"/><text x="26.6136%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.09%)</title><rect x="26.3636%" y="1077" width="0.0866%" height="15" fill="rgb(230,127,29)" fg:x="609" fg:w="2"/><text x="26.6136%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.09%)</title><rect x="26.3636%" y="1061" width="0.0866%" height="15" fill="rgb(242,44,41)" fg:x="609" fg:w="2"/><text x="26.6136%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.09%)</title><rect x="26.3636%" y="1045" width="0.0866%" height="15" fill="rgb(222,56,43)" fg:x="609" fg:w="2"/><text x="26.6136%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.09%)</title><rect x="26.3636%" y="1029" width="0.0866%" height="15" fill="rgb(238,39,47)" fg:x="609" fg:w="2"/><text x="26.6136%" y="1039.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.09%)</title><rect x="26.3636%" y="1013" width="0.0866%" height="15" fill="rgb(226,79,43)" fg:x="609" fg:w="2"/><text x="26.6136%" y="1023.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.09%)</title><rect x="26.3636%" y="997" width="0.0866%" height="15" fill="rgb(242,105,53)" fg:x="609" fg:w="2"/><text x="26.6136%" y="1007.50"></text></g><g><title>y2021::d10::main::p02::{{closure}} (2 samples, 0.09%)</title><rect x="26.3636%" y="981" width="0.0866%" height="15" fill="rgb(251,132,46)" fg:x="609" fg:w="2"/><text x="26.6136%" y="991.50"></text></g><g><title>y2021::d10::main::check_line (2 samples, 0.09%)</title><rect x="26.3636%" y="965" width="0.0866%" height="15" fill="rgb(231,77,14)" fg:x="609" fg:w="2"/><text x="26.6136%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.09%)</title><rect x="26.3636%" y="949" width="0.0866%" height="15" fill="rgb(240,135,9)" fg:x="609" fg:w="2"/><text x="26.6136%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.09%)</title><rect x="26.3636%" y="933" width="0.0866%" height="15" fill="rgb(248,109,14)" fg:x="609" fg:w="2"/><text x="26.6136%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.09%)</title><rect x="26.3636%" y="917" width="0.0866%" height="15" fill="rgb(227,146,52)" fg:x="609" fg:w="2"/><text x="26.6136%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.09%)</title><rect x="26.3636%" y="901" width="0.0866%" height="15" fill="rgb(232,54,3)" fg:x="609" fg:w="2"/><text x="26.6136%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.09%)</title><rect x="26.3636%" y="885" width="0.0866%" height="15" fill="rgb(229,201,43)" fg:x="609" fg:w="2"/><text x="26.6136%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="26.4069%" y="869" width="0.0433%" height="15" fill="rgb(252,161,33)" fg:x="610" fg:w="1"/><text x="26.6569%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="26.4069%" y="853" width="0.0433%" height="15" fill="rgb(226,146,40)" fg:x="610" fg:w="1"/><text x="26.6569%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.04%)</title><rect x="26.4069%" y="837" width="0.0433%" height="15" fill="rgb(219,47,25)" fg:x="610" fg:w="1"/><text x="26.6569%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="26.4069%" y="821" width="0.0433%" height="15" fill="rgb(250,135,13)" fg:x="610" fg:w="1"/><text x="26.6569%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.04%)</title><rect x="26.4069%" y="805" width="0.0433%" height="15" fill="rgb(219,229,18)" fg:x="610" fg:w="1"/><text x="26.6569%" y="815.50"></text></g><g><title>y2021::d11::chart::Chart::inc (1 samples, 0.04%)</title><rect x="26.4502%" y="1093" width="0.0433%" height="15" fill="rgb(217,152,27)" fg:x="611" fg:w="1"/><text x="26.7002%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="26.4502%" y="1077" width="0.0433%" height="15" fill="rgb(225,71,47)" fg:x="611" fg:w="1"/><text x="26.7002%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="26.4502%" y="1061" width="0.0433%" height="15" fill="rgb(220,139,14)" fg:x="611" fg:w="1"/><text x="26.7002%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="26.4935%" y="965" width="0.1299%" height="15" fill="rgb(247,54,32)" fg:x="612" fg:w="3"/><text x="26.7435%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.13%)</title><rect x="26.4935%" y="949" width="0.1299%" height="15" fill="rgb(252,131,39)" fg:x="612" fg:w="3"/><text x="26.7435%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.13%)</title><rect x="26.4935%" y="933" width="0.1299%" height="15" fill="rgb(210,108,39)" fg:x="612" fg:w="3"/><text x="26.7435%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.13%)</title><rect x="26.4935%" y="917" width="0.1299%" height="15" fill="rgb(205,23,29)" fg:x="612" fg:w="3"/><text x="26.7435%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.13%)</title><rect x="26.4935%" y="901" width="0.1299%" height="15" fill="rgb(246,139,46)" fg:x="612" fg:w="3"/><text x="26.7435%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (3 samples, 0.13%)</title><rect x="26.4935%" y="885" width="0.1299%" height="15" fill="rgb(250,81,26)" fg:x="612" fg:w="3"/><text x="26.7435%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.13%)</title><rect x="26.4935%" y="869" width="0.1299%" height="15" fill="rgb(214,104,7)" fg:x="612" fg:w="3"/><text x="26.7435%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.13%)</title><rect x="26.4935%" y="853" width="0.1299%" height="15" fill="rgb(233,189,8)" fg:x="612" fg:w="3"/><text x="26.7435%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.13%)</title><rect x="26.4935%" y="837" width="0.1299%" height="15" fill="rgb(228,141,17)" fg:x="612" fg:w="3"/><text x="26.7435%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.13%)</title><rect x="26.4935%" y="821" width="0.1299%" height="15" fill="rgb(247,157,1)" fg:x="612" fg:w="3"/><text x="26.7435%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.13%)</title><rect x="26.4935%" y="805" width="0.1299%" height="15" fill="rgb(249,225,5)" fg:x="612" fg:w="3"/><text x="26.7435%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (3 samples, 0.13%)</title><rect x="26.4935%" y="789" width="0.1299%" height="15" fill="rgb(242,55,13)" fg:x="612" fg:w="3"/><text x="26.7435%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.13%)</title><rect x="26.4935%" y="773" width="0.1299%" height="15" fill="rgb(230,49,50)" fg:x="612" fg:w="3"/><text x="26.7435%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.09%)</title><rect x="26.5368%" y="757" width="0.0866%" height="15" fill="rgb(241,111,38)" fg:x="613" fg:w="2"/><text x="26.7868%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.09%)</title><rect x="26.5368%" y="741" width="0.0866%" height="15" fill="rgb(252,155,4)" fg:x="613" fg:w="2"/><text x="26.7868%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.09%)</title><rect x="26.5368%" y="725" width="0.0866%" height="15" fill="rgb(212,69,32)" fg:x="613" fg:w="2"/><text x="26.7868%" y="735.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (2 samples, 0.09%)</title><rect x="26.5368%" y="709" width="0.0866%" height="15" fill="rgb(243,107,47)" fg:x="613" fg:w="2"/><text x="26.7868%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.09%)</title><rect x="26.5368%" y="693" width="0.0866%" height="15" fill="rgb(247,130,12)" fg:x="613" fg:w="2"/><text x="26.7868%" y="703.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.09%)</title><rect x="26.5368%" y="677" width="0.0866%" height="15" fill="rgb(233,74,16)" fg:x="613" fg:w="2"/><text x="26.7868%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2 samples, 0.09%)</title><rect x="26.5368%" y="661" width="0.0866%" height="15" fill="rgb(208,58,18)" fg:x="613" fg:w="2"/><text x="26.7868%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="26.5368%" y="645" width="0.0866%" height="15" fill="rgb(242,225,1)" fg:x="613" fg:w="2"/><text x="26.7868%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.17%)</title><rect x="26.4935%" y="1013" width="0.1732%" height="15" fill="rgb(249,39,40)" fg:x="612" fg:w="4"/><text x="26.7435%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.17%)</title><rect x="26.4935%" y="997" width="0.1732%" height="15" fill="rgb(207,72,44)" fg:x="612" fg:w="4"/><text x="26.7435%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="26.4935%" y="981" width="0.1732%" height="15" fill="rgb(215,193,12)" fg:x="612" fg:w="4"/><text x="26.7435%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="26.6234%" y="965" width="0.0433%" height="15" fill="rgb(248,41,39)" fg:x="615" fg:w="1"/><text x="26.8734%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.04%)</title><rect x="26.6234%" y="949" width="0.0433%" height="15" fill="rgb(253,85,4)" fg:x="615" fg:w="1"/><text x="26.8734%" y="959.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (1 samples, 0.04%)</title><rect x="26.6234%" y="933" width="0.0433%" height="15" fill="rgb(243,70,31)" fg:x="615" fg:w="1"/><text x="26.8734%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.13%)</title><rect x="26.6667%" y="837" width="0.1299%" height="15" fill="rgb(253,195,26)" fg:x="616" fg:w="3"/><text x="26.9167%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (3 samples, 0.13%)</title><rect x="26.6667%" y="821" width="0.1299%" height="15" fill="rgb(243,42,11)" fg:x="616" fg:w="3"/><text x="26.9167%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.13%)</title><rect x="26.6667%" y="805" width="0.1299%" height="15" fill="rgb(239,66,17)" fg:x="616" fg:w="3"/><text x="26.9167%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.13%)</title><rect x="26.6667%" y="789" width="0.1299%" height="15" fill="rgb(217,132,21)" fg:x="616" fg:w="3"/><text x="26.9167%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.13%)</title><rect x="26.6667%" y="773" width="0.1299%" height="15" fill="rgb(252,202,21)" fg:x="616" fg:w="3"/><text x="26.9167%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.13%)</title><rect x="26.6667%" y="757" width="0.1299%" height="15" fill="rgb(233,98,36)" fg:x="616" fg:w="3"/><text x="26.9167%" y="767.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (3 samples, 0.13%)</title><rect x="26.6667%" y="741" width="0.1299%" height="15" fill="rgb(216,153,54)" fg:x="616" fg:w="3"/><text x="26.9167%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (3 samples, 0.13%)</title><rect x="26.6667%" y="725" width="0.1299%" height="15" fill="rgb(250,99,7)" fg:x="616" fg:w="3"/><text x="26.9167%" y="735.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (3 samples, 0.13%)</title><rect x="26.6667%" y="709" width="0.1299%" height="15" fill="rgb(207,56,50)" fg:x="616" fg:w="3"/><text x="26.9167%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (3 samples, 0.13%)</title><rect x="26.6667%" y="693" width="0.1299%" height="15" fill="rgb(244,61,34)" fg:x="616" fg:w="3"/><text x="26.9167%" y="703.50"></text></g><g><title>y2021::d11::main::p01 (9 samples, 0.39%)</title><rect x="26.4502%" y="1205" width="0.3896%" height="15" fill="rgb(241,50,38)" fg:x="611" fg:w="9"/><text x="26.7002%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (9 samples, 0.39%)</title><rect x="26.4502%" y="1189" width="0.3896%" height="15" fill="rgb(212,166,30)" fg:x="611" fg:w="9"/><text x="26.7002%" y="1199.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (9 samples, 0.39%)</title><rect x="26.4502%" y="1173" width="0.3896%" height="15" fill="rgb(249,127,32)" fg:x="611" fg:w="9"/><text x="26.7002%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.39%)</title><rect x="26.4502%" y="1157" width="0.3896%" height="15" fill="rgb(209,103,0)" fg:x="611" fg:w="9"/><text x="26.7002%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.39%)</title><rect x="26.4502%" y="1141" width="0.3896%" height="15" fill="rgb(238,209,51)" fg:x="611" fg:w="9"/><text x="26.7002%" y="1151.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9 samples, 0.39%)</title><rect x="26.4502%" y="1125" width="0.3896%" height="15" fill="rgb(237,56,23)" fg:x="611" fg:w="9"/><text x="26.7002%" y="1135.50"></text></g><g><title>y2021::d11::main::p01::{{closure}} (9 samples, 0.39%)</title><rect x="26.4502%" y="1109" width="0.3896%" height="15" fill="rgb(215,153,46)" fg:x="611" fg:w="9"/><text x="26.7002%" y="1119.50"></text></g><g><title>y2021::d11::main::cycle_step (8 samples, 0.35%)</title><rect x="26.4935%" y="1093" width="0.3463%" height="15" fill="rgb(224,49,31)" fg:x="612" fg:w="8"/><text x="26.7435%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.35%)</title><rect x="26.4935%" y="1077" width="0.3463%" height="15" fill="rgb(250,18,42)" fg:x="612" fg:w="8"/><text x="26.7435%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.35%)</title><rect x="26.4935%" y="1061" width="0.3463%" height="15" fill="rgb(215,176,39)" fg:x="612" fg:w="8"/><text x="26.7435%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.35%)</title><rect x="26.4935%" y="1045" width="0.3463%" height="15" fill="rgb(223,77,29)" fg:x="612" fg:w="8"/><text x="26.7435%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.35%)</title><rect x="26.4935%" y="1029" width="0.3463%" height="15" fill="rgb(234,94,52)" fg:x="612" fg:w="8"/><text x="26.7435%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="26.6667%" y="1013" width="0.1732%" height="15" fill="rgb(220,154,50)" fg:x="616" fg:w="4"/><text x="26.9167%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="26.6667%" y="997" width="0.1732%" height="15" fill="rgb(212,11,10)" fg:x="616" fg:w="4"/><text x="26.9167%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4 samples, 0.17%)</title><rect x="26.6667%" y="981" width="0.1732%" height="15" fill="rgb(205,166,19)" fg:x="616" fg:w="4"/><text x="26.9167%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.17%)</title><rect x="26.6667%" y="965" width="0.1732%" height="15" fill="rgb(244,198,16)" fg:x="616" fg:w="4"/><text x="26.9167%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.17%)</title><rect x="26.6667%" y="949" width="0.1732%" height="15" fill="rgb(219,69,12)" fg:x="616" fg:w="4"/><text x="26.9167%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.17%)</title><rect x="26.6667%" y="933" width="0.1732%" height="15" fill="rgb(245,30,7)" fg:x="616" fg:w="4"/><text x="26.9167%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (4 samples, 0.17%)</title><rect x="26.6667%" y="917" width="0.1732%" height="15" fill="rgb(218,221,48)" fg:x="616" fg:w="4"/><text x="26.9167%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.17%)</title><rect x="26.6667%" y="901" width="0.1732%" height="15" fill="rgb(216,66,15)" fg:x="616" fg:w="4"/><text x="26.9167%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.17%)</title><rect x="26.6667%" y="885" width="0.1732%" height="15" fill="rgb(226,122,50)" fg:x="616" fg:w="4"/><text x="26.9167%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.17%)</title><rect x="26.6667%" y="869" width="0.1732%" height="15" fill="rgb(239,156,16)" fg:x="616" fg:w="4"/><text x="26.9167%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.17%)</title><rect x="26.6667%" y="853" width="0.1732%" height="15" fill="rgb(224,27,38)" fg:x="616" fg:w="4"/><text x="26.9167%" y="863.50"></text></g><g><title>y2021::d11::chart::Chart::iter::{{closure}} (1 samples, 0.04%)</title><rect x="26.7965%" y="837" width="0.0433%" height="15" fill="rgb(224,39,27)" fg:x="619" fg:w="1"/><text x="27.0465%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="26.7965%" y="821" width="0.0433%" height="15" fill="rgb(215,92,29)" fg:x="619" fg:w="1"/><text x="27.0465%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="26.8398%" y="853" width="0.0433%" height="15" fill="rgb(207,159,16)" fg:x="620" fg:w="1"/><text x="27.0898%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.43%)</title><rect x="26.8398%" y="997" width="0.4329%" height="15" fill="rgb(238,163,47)" fg:x="620" fg:w="10"/><text x="27.0898%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (10 samples, 0.43%)</title><rect x="26.8398%" y="981" width="0.4329%" height="15" fill="rgb(219,91,49)" fg:x="620" fg:w="10"/><text x="27.0898%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.43%)</title><rect x="26.8398%" y="965" width="0.4329%" height="15" fill="rgb(227,167,31)" fg:x="620" fg:w="10"/><text x="27.0898%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.43%)</title><rect x="26.8398%" y="949" width="0.4329%" height="15" fill="rgb(234,80,54)" fg:x="620" fg:w="10"/><text x="27.0898%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.43%)</title><rect x="26.8398%" y="933" width="0.4329%" height="15" fill="rgb(212,114,2)" fg:x="620" fg:w="10"/><text x="27.0898%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (10 samples, 0.43%)</title><rect x="26.8398%" y="917" width="0.4329%" height="15" fill="rgb(234,50,24)" fg:x="620" fg:w="10"/><text x="27.0898%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (10 samples, 0.43%)</title><rect x="26.8398%" y="901" width="0.4329%" height="15" fill="rgb(221,68,8)" fg:x="620" fg:w="10"/><text x="27.0898%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (10 samples, 0.43%)</title><rect x="26.8398%" y="885" width="0.4329%" height="15" fill="rgb(254,180,31)" fg:x="620" fg:w="10"/><text x="27.0898%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.43%)</title><rect x="26.8398%" y="869" width="0.4329%" height="15" fill="rgb(247,130,50)" fg:x="620" fg:w="10"/><text x="27.0898%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.39%)</title><rect x="26.8831%" y="853" width="0.3896%" height="15" fill="rgb(211,109,4)" fg:x="621" fg:w="9"/><text x="27.1331%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (9 samples, 0.39%)</title><rect x="26.8831%" y="837" width="0.3896%" height="15" fill="rgb(238,50,21)" fg:x="621" fg:w="9"/><text x="27.1331%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.39%)</title><rect x="26.8831%" y="821" width="0.3896%" height="15" fill="rgb(225,57,45)" fg:x="621" fg:w="9"/><text x="27.1331%" y="831.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (9 samples, 0.39%)</title><rect x="26.8831%" y="805" width="0.3896%" height="15" fill="rgb(209,196,50)" fg:x="621" fg:w="9"/><text x="27.1331%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (9 samples, 0.39%)</title><rect x="26.8831%" y="789" width="0.3896%" height="15" fill="rgb(242,140,13)" fg:x="621" fg:w="9"/><text x="27.1331%" y="799.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (9 samples, 0.39%)</title><rect x="26.8831%" y="773" width="0.3896%" height="15" fill="rgb(217,111,7)" fg:x="621" fg:w="9"/><text x="27.1331%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (9 samples, 0.39%)</title><rect x="26.8831%" y="757" width="0.3896%" height="15" fill="rgb(253,193,51)" fg:x="621" fg:w="9"/><text x="27.1331%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="27.1429%" y="741" width="0.1299%" height="15" fill="rgb(252,70,29)" fg:x="627" fg:w="3"/><text x="27.3929%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.65%)</title><rect x="26.8398%" y="1109" width="0.6494%" height="15" fill="rgb(232,127,12)" fg:x="620" fg:w="15"/><text x="27.0898%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (15 samples, 0.65%)</title><rect x="26.8398%" y="1093" width="0.6494%" height="15" fill="rgb(211,180,21)" fg:x="620" fg:w="15"/><text x="27.0898%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.65%)</title><rect x="26.8398%" y="1077" width="0.6494%" height="15" fill="rgb(229,72,13)" fg:x="620" fg:w="15"/><text x="27.0898%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.65%)</title><rect x="26.8398%" y="1061" width="0.6494%" height="15" fill="rgb(240,211,49)" fg:x="620" fg:w="15"/><text x="27.0898%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (15 samples, 0.65%)</title><rect x="26.8398%" y="1045" width="0.6494%" height="15" fill="rgb(219,149,40)" fg:x="620" fg:w="15"/><text x="27.0898%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.65%)</title><rect x="26.8398%" y="1029" width="0.6494%" height="15" fill="rgb(210,127,46)" fg:x="620" fg:w="15"/><text x="27.0898%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.65%)</title><rect x="26.8398%" y="1013" width="0.6494%" height="15" fill="rgb(220,106,7)" fg:x="620" fg:w="15"/><text x="27.0898%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.22%)</title><rect x="27.2727%" y="997" width="0.2165%" height="15" fill="rgb(249,31,22)" fg:x="630" fg:w="5"/><text x="27.5227%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.22%)</title><rect x="27.2727%" y="981" width="0.2165%" height="15" fill="rgb(253,1,49)" fg:x="630" fg:w="5"/><text x="27.5227%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (5 samples, 0.22%)</title><rect x="27.2727%" y="965" width="0.2165%" height="15" fill="rgb(227,144,33)" fg:x="630" fg:w="5"/><text x="27.5227%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.22%)</title><rect x="27.2727%" y="949" width="0.2165%" height="15" fill="rgb(249,163,44)" fg:x="630" fg:w="5"/><text x="27.5227%" y="959.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (5 samples, 0.22%)</title><rect x="27.2727%" y="933" width="0.2165%" height="15" fill="rgb(234,15,39)" fg:x="630" fg:w="5"/><text x="27.5227%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (5 samples, 0.22%)</title><rect x="27.2727%" y="917" width="0.2165%" height="15" fill="rgb(207,66,16)" fg:x="630" fg:w="5"/><text x="27.5227%" y="927.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (5 samples, 0.22%)</title><rect x="27.2727%" y="901" width="0.2165%" height="15" fill="rgb(233,112,24)" fg:x="630" fg:w="5"/><text x="27.5227%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (5 samples, 0.22%)</title><rect x="27.2727%" y="885" width="0.2165%" height="15" fill="rgb(230,90,22)" fg:x="630" fg:w="5"/><text x="27.5227%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="27.4459%" y="869" width="0.0433%" height="15" fill="rgb(229,61,13)" fg:x="634" fg:w="1"/><text x="27.6959%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 1.13%)</title><rect x="26.8398%" y="1173" width="1.1255%" height="15" fill="rgb(225,57,24)" fg:x="620" fg:w="26"/><text x="27.0898%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 1.13%)</title><rect x="26.8398%" y="1157" width="1.1255%" height="15" fill="rgb(208,169,48)" fg:x="620" fg:w="26"/><text x="27.0898%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 1.13%)</title><rect x="26.8398%" y="1141" width="1.1255%" height="15" fill="rgb(244,218,51)" fg:x="620" fg:w="26"/><text x="27.0898%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (26 samples, 1.13%)</title><rect x="26.8398%" y="1125" width="1.1255%" height="15" fill="rgb(214,148,10)" fg:x="620" fg:w="26"/><text x="27.0898%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.48%)</title><rect x="27.4892%" y="1109" width="0.4762%" height="15" fill="rgb(225,174,27)" fg:x="635" fg:w="11"/><text x="27.7392%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.43%)</title><rect x="27.5325%" y="1093" width="0.4329%" height="15" fill="rgb(230,96,26)" fg:x="636" fg:w="10"/><text x="27.7825%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (10 samples, 0.43%)</title><rect x="27.5325%" y="1077" width="0.4329%" height="15" fill="rgb(232,10,30)" fg:x="636" fg:w="10"/><text x="27.7825%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.43%)</title><rect x="27.5325%" y="1061" width="0.4329%" height="15" fill="rgb(222,8,50)" fg:x="636" fg:w="10"/><text x="27.7825%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.43%)</title><rect x="27.5325%" y="1045" width="0.4329%" height="15" fill="rgb(213,81,27)" fg:x="636" fg:w="10"/><text x="27.7825%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.43%)</title><rect x="27.5325%" y="1029" width="0.4329%" height="15" fill="rgb(245,50,10)" fg:x="636" fg:w="10"/><text x="27.7825%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (10 samples, 0.43%)</title><rect x="27.5325%" y="1013" width="0.4329%" height="15" fill="rgb(216,100,18)" fg:x="636" fg:w="10"/><text x="27.7825%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.43%)</title><rect x="27.5325%" y="997" width="0.4329%" height="15" fill="rgb(236,147,54)" fg:x="636" fg:w="10"/><text x="27.7825%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.43%)</title><rect x="27.5325%" y="981" width="0.4329%" height="15" fill="rgb(205,143,26)" fg:x="636" fg:w="10"/><text x="27.7825%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.43%)</title><rect x="27.5325%" y="965" width="0.4329%" height="15" fill="rgb(236,26,9)" fg:x="636" fg:w="10"/><text x="27.7825%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (10 samples, 0.43%)</title><rect x="27.5325%" y="949" width="0.4329%" height="15" fill="rgb(221,165,53)" fg:x="636" fg:w="10"/><text x="27.7825%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (10 samples, 0.43%)</title><rect x="27.5325%" y="933" width="0.4329%" height="15" fill="rgb(214,110,17)" fg:x="636" fg:w="10"/><text x="27.7825%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (10 samples, 0.43%)</title><rect x="27.5325%" y="917" width="0.4329%" height="15" fill="rgb(237,197,12)" fg:x="636" fg:w="10"/><text x="27.7825%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.43%)</title><rect x="27.5325%" y="901" width="0.4329%" height="15" fill="rgb(205,84,17)" fg:x="636" fg:w="10"/><text x="27.7825%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.39%)</title><rect x="27.5758%" y="885" width="0.3896%" height="15" fill="rgb(237,18,45)" fg:x="637" fg:w="9"/><text x="27.8258%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (9 samples, 0.39%)</title><rect x="27.5758%" y="869" width="0.3896%" height="15" fill="rgb(221,87,14)" fg:x="637" fg:w="9"/><text x="27.8258%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.39%)</title><rect x="27.5758%" y="853" width="0.3896%" height="15" fill="rgb(238,186,15)" fg:x="637" fg:w="9"/><text x="27.8258%" y="863.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (9 samples, 0.39%)</title><rect x="27.5758%" y="837" width="0.3896%" height="15" fill="rgb(208,115,11)" fg:x="637" fg:w="9"/><text x="27.8258%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (9 samples, 0.39%)</title><rect x="27.5758%" y="821" width="0.3896%" height="15" fill="rgb(254,175,0)" fg:x="637" fg:w="9"/><text x="27.8258%" y="831.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (9 samples, 0.39%)</title><rect x="27.5758%" y="805" width="0.3896%" height="15" fill="rgb(227,24,42)" fg:x="637" fg:w="9"/><text x="27.8258%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (9 samples, 0.39%)</title><rect x="27.5758%" y="789" width="0.3896%" height="15" fill="rgb(223,211,37)" fg:x="637" fg:w="9"/><text x="27.8258%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="27.9221%" y="773" width="0.0433%" height="15" fill="rgb(235,49,27)" fg:x="645" fg:w="1"/><text x="28.1721%" y="783.50"></text></g><g><title>y2021::d11::main::run (36 samples, 1.56%)</title><rect x="26.4502%" y="1221" width="1.5584%" height="15" fill="rgb(254,97,51)" fg:x="611" fg:w="36"/><text x="26.7002%" y="1231.50"></text></g><g><title>y2021::d11::main::p02 (27 samples, 1.17%)</title><rect x="26.8398%" y="1205" width="1.1688%" height="15" fill="rgb(249,51,40)" fg:x="620" fg:w="27"/><text x="27.0898%" y="1215.50"></text></g><g><title>y2021::d11::main::cycle_step (27 samples, 1.17%)</title><rect x="26.8398%" y="1189" width="1.1688%" height="15" fill="rgb(210,128,45)" fg:x="620" fg:w="27"/><text x="27.0898%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.04%)</title><rect x="27.9654%" y="1173" width="0.0433%" height="15" fill="rgb(224,137,50)" fg:x="646" fg:w="1"/><text x="28.2154%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="27.9654%" y="1157" width="0.0433%" height="15" fill="rgb(242,15,9)" fg:x="646" fg:w="1"/><text x="28.2154%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="27.9654%" y="1141" width="0.0433%" height="15" fill="rgb(233,187,41)" fg:x="646" fg:w="1"/><text x="28.2154%" y="1151.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="27.9654%" y="1125" width="0.0433%" height="15" fill="rgb(227,2,29)" fg:x="646" fg:w="1"/><text x="28.2154%" y="1135.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (1 samples, 0.04%)</title><rect x="27.9654%" y="1109" width="0.0433%" height="15" fill="rgb(222,70,3)" fg:x="646" fg:w="1"/><text x="28.2154%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="27.9654%" y="1093" width="0.0433%" height="15" fill="rgb(213,11,42)" fg:x="646" fg:w="1"/><text x="28.2154%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="27.9654%" y="1077" width="0.0433%" height="15" fill="rgb(225,150,9)" fg:x="646" fg:w="1"/><text x="28.2154%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="27.9654%" y="1061" width="0.0433%" height="15" fill="rgb(230,162,45)" fg:x="646" fg:w="1"/><text x="28.2154%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="27.9654%" y="1045" width="0.0433%" height="15" fill="rgb(222,14,52)" fg:x="646" fg:w="1"/><text x="28.2154%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="27.9654%" y="1029" width="0.0433%" height="15" fill="rgb(254,198,14)" fg:x="646" fg:w="1"/><text x="28.2154%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="27.9654%" y="1013" width="0.0433%" height="15" fill="rgb(220,217,30)" fg:x="646" fg:w="1"/><text x="28.2154%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="27.9654%" y="997" width="0.0433%" height="15" fill="rgb(215,146,41)" fg:x="646" fg:w="1"/><text x="28.2154%" y="1007.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="27.9654%" y="981" width="0.0433%" height="15" fill="rgb(217,27,36)" fg:x="646" fg:w="1"/><text x="28.2154%" y="991.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="27.9654%" y="965" width="0.0433%" height="15" fill="rgb(219,218,39)" fg:x="646" fg:w="1"/><text x="28.2154%" y="975.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.04%)</title><rect x="27.9654%" y="949" width="0.0433%" height="15" fill="rgb(219,4,42)" fg:x="646" fg:w="1"/><text x="28.2154%" y="959.50"></text></g><g><title>_int_realloc (1 samples, 0.04%)</title><rect x="27.9654%" y="933" width="0.0433%" height="15" fill="rgb(249,119,36)" fg:x="646" fg:w="1"/><text x="28.2154%" y="943.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="27.9654%" y="917" width="0.0433%" height="15" fill="rgb(209,23,33)" fg:x="646" fg:w="1"/><text x="28.2154%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1 samples, 0.04%)</title><rect x="28.0087%" y="1189" width="0.0433%" height="15" fill="rgb(211,10,0)" fg:x="647" fg:w="1"/><text x="28.2587%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.04%)</title><rect x="28.0087%" y="1173" width="0.0433%" height="15" fill="rgb(208,99,37)" fg:x="647" fg:w="1"/><text x="28.2587%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.04%)</title><rect x="28.0087%" y="1157" width="0.0433%" height="15" fill="rgb(213,132,31)" fg:x="647" fg:w="1"/><text x="28.2587%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1 samples, 0.04%)</title><rect x="28.0087%" y="1141" width="0.0433%" height="15" fill="rgb(243,129,40)" fg:x="647" fg:w="1"/><text x="28.2587%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="28.0087%" y="1125" width="0.0433%" height="15" fill="rgb(210,66,33)" fg:x="647" fg:w="1"/><text x="28.2587%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (1 samples, 0.04%)</title><rect x="28.0087%" y="1109" width="0.0433%" height="15" fill="rgb(209,189,4)" fg:x="647" fg:w="1"/><text x="28.2587%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.04%)</title><rect x="28.0087%" y="1093" width="0.0433%" height="15" fill="rgb(214,107,37)" fg:x="647" fg:w="1"/><text x="28.2587%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="28.0087%" y="1077" width="0.0433%" height="15" fill="rgb(245,88,54)" fg:x="647" fg:w="1"/><text x="28.2587%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="28.0087%" y="1061" width="0.0433%" height="15" fill="rgb(205,146,20)" fg:x="647" fg:w="1"/><text x="28.2587%" y="1071.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="28.0087%" y="1045" width="0.0433%" height="15" fill="rgb(220,161,25)" fg:x="647" fg:w="1"/><text x="28.2587%" y="1055.50"></text></g><g><title>malloc_consolidate (1 samples, 0.04%)</title><rect x="28.0087%" y="1029" width="0.0433%" height="15" fill="rgb(215,152,15)" fg:x="647" fg:w="1"/><text x="28.2587%" y="1039.50"></text></g><g><title>unlink_chunk (1 samples, 0.04%)</title><rect x="28.0087%" y="1013" width="0.0433%" height="15" fill="rgb(233,192,44)" fg:x="647" fg:w="1"/><text x="28.2587%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="28.0519%" y="1109" width="0.0433%" height="15" fill="rgb(240,170,46)" fg:x="648" fg:w="1"/><text x="28.3019%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.04%)</title><rect x="28.0519%" y="1093" width="0.0433%" height="15" fill="rgb(207,104,33)" fg:x="648" fg:w="1"/><text x="28.3019%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.04%)</title><rect x="28.0519%" y="1077" width="0.0433%" height="15" fill="rgb(219,21,39)" fg:x="648" fg:w="1"/><text x="28.3019%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="28.0519%" y="1061" width="0.0433%" height="15" fill="rgb(214,133,29)" fg:x="648" fg:w="1"/><text x="28.3019%" y="1071.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.04%)</title><rect x="28.0519%" y="1045" width="0.0433%" height="15" fill="rgb(226,93,6)" fg:x="648" fg:w="1"/><text x="28.3019%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.04%)</title><rect x="28.0519%" y="1029" width="0.0433%" height="15" fill="rgb(252,222,34)" fg:x="648" fg:w="1"/><text x="28.3019%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.04%)</title><rect x="28.0519%" y="1013" width="0.0433%" height="15" fill="rgb(252,92,48)" fg:x="648" fg:w="1"/><text x="28.3019%" y="1023.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.04%)</title><rect x="28.0519%" y="997" width="0.0433%" height="15" fill="rgb(245,223,24)" fg:x="648" fg:w="1"/><text x="28.3019%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.04%)</title><rect x="28.0519%" y="981" width="0.0433%" height="15" fill="rgb(205,176,3)" fg:x="648" fg:w="1"/><text x="28.3019%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.04%)</title><rect x="28.0952%" y="949" width="0.0433%" height="15" fill="rgb(235,151,15)" fg:x="649" fg:w="1"/><text x="28.3452%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="28.0952%" y="933" width="0.0433%" height="15" fill="rgb(237,209,11)" fg:x="649" fg:w="1"/><text x="28.3452%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="28.0952%" y="1077" width="0.0866%" height="15" fill="rgb(243,227,24)" fg:x="649" fg:w="2"/><text x="28.3452%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.09%)</title><rect x="28.0952%" y="1061" width="0.0866%" height="15" fill="rgb(239,193,16)" fg:x="649" fg:w="2"/><text x="28.3452%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.09%)</title><rect x="28.0952%" y="1045" width="0.0866%" height="15" fill="rgb(231,27,9)" fg:x="649" fg:w="2"/><text x="28.3452%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.09%)</title><rect x="28.0952%" y="1029" width="0.0866%" height="15" fill="rgb(219,169,10)" fg:x="649" fg:w="2"/><text x="28.3452%" y="1039.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.09%)</title><rect x="28.0952%" y="1013" width="0.0866%" height="15" fill="rgb(244,229,43)" fg:x="649" fg:w="2"/><text x="28.3452%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.09%)</title><rect x="28.0952%" y="997" width="0.0866%" height="15" fill="rgb(254,38,20)" fg:x="649" fg:w="2"/><text x="28.3452%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.09%)</title><rect x="28.0952%" y="981" width="0.0866%" height="15" fill="rgb(250,47,30)" fg:x="649" fg:w="2"/><text x="28.3452%" y="991.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.09%)</title><rect x="28.0952%" y="965" width="0.0866%" height="15" fill="rgb(224,124,36)" fg:x="649" fg:w="2"/><text x="28.3452%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.04%)</title><rect x="28.1385%" y="949" width="0.0433%" height="15" fill="rgb(246,68,51)" fg:x="650" fg:w="1"/><text x="28.3885%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="28.1385%" y="933" width="0.0433%" height="15" fill="rgb(253,43,49)" fg:x="650" fg:w="1"/><text x="28.3885%" y="943.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="28.1385%" y="917" width="0.0433%" height="15" fill="rgb(219,54,36)" fg:x="650" fg:w="1"/><text x="28.3885%" y="927.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.04%)</title><rect x="28.1385%" y="901" width="0.0433%" height="15" fill="rgb(227,133,34)" fg:x="650" fg:w="1"/><text x="28.3885%" y="911.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.04%)</title><rect x="28.1385%" y="885" width="0.0433%" height="15" fill="rgb(247,227,15)" fg:x="650" fg:w="1"/><text x="28.3885%" y="895.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.04%)</title><rect x="28.1385%" y="869" width="0.0433%" height="15" fill="rgb(229,96,14)" fg:x="650" fg:w="1"/><text x="28.3885%" y="879.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="28.1385%" y="853" width="0.0433%" height="15" fill="rgb(220,79,17)" fg:x="650" fg:w="1"/><text x="28.3885%" y="863.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="28.1385%" y="837" width="0.0433%" height="15" fill="rgb(205,131,53)" fg:x="650" fg:w="1"/><text x="28.3885%" y="847.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.04%)</title><rect x="28.1818%" y="1077" width="0.0433%" height="15" fill="rgb(209,50,29)" fg:x="651" fg:w="1"/><text x="28.4318%" y="1087.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.04%)</title><rect x="28.1818%" y="1061" width="0.0433%" height="15" fill="rgb(245,86,46)" fg:x="651" fg:w="1"/><text x="28.4318%" y="1071.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="28.1818%" y="1045" width="0.0433%" height="15" fill="rgb(235,66,46)" fg:x="651" fg:w="1"/><text x="28.4318%" y="1055.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="28.1818%" y="1029" width="0.0433%" height="15" fill="rgb(232,148,31)" fg:x="651" fg:w="1"/><text x="28.4318%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="28.1818%" y="1013" width="0.0433%" height="15" fill="rgb(217,149,8)" fg:x="651" fg:w="1"/><text x="28.4318%" y="1023.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="28.1818%" y="997" width="0.0433%" height="15" fill="rgb(209,183,11)" fg:x="651" fg:w="1"/><text x="28.4318%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="28.1818%" y="981" width="0.0433%" height="15" fill="rgb(208,55,20)" fg:x="651" fg:w="1"/><text x="28.4318%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="28.1818%" y="965" width="0.0433%" height="15" fill="rgb(218,39,14)" fg:x="651" fg:w="1"/><text x="28.4318%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="28.1818%" y="949" width="0.0433%" height="15" fill="rgb(216,169,33)" fg:x="651" fg:w="1"/><text x="28.4318%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="28.1818%" y="933" width="0.0433%" height="15" fill="rgb(233,80,24)" fg:x="651" fg:w="1"/><text x="28.4318%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="28.1818%" y="917" width="0.0433%" height="15" fill="rgb(213,179,31)" fg:x="651" fg:w="1"/><text x="28.4318%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="28.1818%" y="901" width="0.0433%" height="15" fill="rgb(209,19,5)" fg:x="651" fg:w="1"/><text x="28.4318%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="28.1818%" y="885" width="0.0433%" height="15" fill="rgb(219,18,35)" fg:x="651" fg:w="1"/><text x="28.4318%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="28.1818%" y="869" width="0.0433%" height="15" fill="rgb(209,169,16)" fg:x="651" fg:w="1"/><text x="28.4318%" y="879.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="28.1818%" y="853" width="0.0433%" height="15" fill="rgb(245,90,51)" fg:x="651" fg:w="1"/><text x="28.4318%" y="863.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="28.1818%" y="837" width="0.0433%" height="15" fill="rgb(220,99,45)" fg:x="651" fg:w="1"/><text x="28.4318%" y="847.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.04%)</title><rect x="28.2251%" y="1077" width="0.0433%" height="15" fill="rgb(249,89,25)" fg:x="652" fg:w="1"/><text x="28.4751%" y="1087.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="28.2251%" y="1061" width="0.0433%" height="15" fill="rgb(239,193,0)" fg:x="652" fg:w="1"/><text x="28.4751%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="28.2251%" y="1045" width="0.0433%" height="15" fill="rgb(231,126,1)" fg:x="652" fg:w="1"/><text x="28.4751%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.04%)</title><rect x="28.2251%" y="1029" width="0.0433%" height="15" fill="rgb(243,166,3)" fg:x="652" fg:w="1"/><text x="28.4751%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.04%)</title><rect x="28.2251%" y="1013" width="0.0433%" height="15" fill="rgb(223,22,34)" fg:x="652" fg:w="1"/><text x="28.4751%" y="1023.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.04%)</title><rect x="28.2251%" y="997" width="0.0433%" height="15" fill="rgb(251,52,51)" fg:x="652" fg:w="1"/><text x="28.4751%" y="1007.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="28.3117%" y="853" width="0.0433%" height="15" fill="rgb(221,165,28)" fg:x="654" fg:w="1"/><text x="28.5617%" y="863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="28.3117%" y="837" width="0.0433%" height="15" fill="rgb(218,121,47)" fg:x="654" fg:w="1"/><text x="28.5617%" y="847.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="28.3117%" y="821" width="0.0433%" height="15" fill="rgb(209,120,9)" fg:x="654" fg:w="1"/><text x="28.5617%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="28.2684%" y="1061" width="0.1299%" height="15" fill="rgb(236,68,12)" fg:x="653" fg:w="3"/><text x="28.5184%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.13%)</title><rect x="28.2684%" y="1045" width="0.1299%" height="15" fill="rgb(225,194,26)" fg:x="653" fg:w="3"/><text x="28.5184%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.13%)</title><rect x="28.2684%" y="1029" width="0.1299%" height="15" fill="rgb(231,84,39)" fg:x="653" fg:w="3"/><text x="28.5184%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.13%)</title><rect x="28.2684%" y="1013" width="0.1299%" height="15" fill="rgb(210,11,45)" fg:x="653" fg:w="3"/><text x="28.5184%" y="1023.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3 samples, 0.13%)</title><rect x="28.2684%" y="997" width="0.1299%" height="15" fill="rgb(224,54,52)" fg:x="653" fg:w="3"/><text x="28.5184%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.13%)</title><rect x="28.2684%" y="981" width="0.1299%" height="15" fill="rgb(238,102,14)" fg:x="653" fg:w="3"/><text x="28.5184%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.13%)</title><rect x="28.2684%" y="965" width="0.1299%" height="15" fill="rgb(243,160,52)" fg:x="653" fg:w="3"/><text x="28.5184%" y="975.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (3 samples, 0.13%)</title><rect x="28.2684%" y="949" width="0.1299%" height="15" fill="rgb(216,114,19)" fg:x="653" fg:w="3"/><text x="28.5184%" y="959.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (3 samples, 0.13%)</title><rect x="28.2684%" y="933" width="0.1299%" height="15" fill="rgb(244,166,37)" fg:x="653" fg:w="3"/><text x="28.5184%" y="943.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (3 samples, 0.13%)</title><rect x="28.2684%" y="917" width="0.1299%" height="15" fill="rgb(246,29,44)" fg:x="653" fg:w="3"/><text x="28.5184%" y="927.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (3 samples, 0.13%)</title><rect x="28.2684%" y="901" width="0.1299%" height="15" fill="rgb(215,56,53)" fg:x="653" fg:w="3"/><text x="28.5184%" y="911.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3 samples, 0.13%)</title><rect x="28.2684%" y="885" width="0.1299%" height="15" fill="rgb(217,60,2)" fg:x="653" fg:w="3"/><text x="28.5184%" y="895.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2 samples, 0.09%)</title><rect x="28.3117%" y="869" width="0.0866%" height="15" fill="rgb(207,26,24)" fg:x="654" fg:w="2"/><text x="28.5617%" y="879.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.04%)</title><rect x="28.3550%" y="853" width="0.0433%" height="15" fill="rgb(252,210,15)" fg:x="655" fg:w="1"/><text x="28.6050%" y="863.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.04%)</title><rect x="28.3983%" y="1061" width="0.0433%" height="15" fill="rgb(253,209,26)" fg:x="656" fg:w="1"/><text x="28.6483%" y="1071.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.04%)</title><rect x="28.3983%" y="1045" width="0.0433%" height="15" fill="rgb(238,170,14)" fg:x="656" fg:w="1"/><text x="28.6483%" y="1055.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="28.3983%" y="1029" width="0.0433%" height="15" fill="rgb(216,178,15)" fg:x="656" fg:w="1"/><text x="28.6483%" y="1039.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="28.3983%" y="1013" width="0.0433%" height="15" fill="rgb(250,197,2)" fg:x="656" fg:w="1"/><text x="28.6483%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="28.3983%" y="997" width="0.0433%" height="15" fill="rgb(212,70,42)" fg:x="656" fg:w="1"/><text x="28.6483%" y="1007.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="28.3983%" y="981" width="0.0433%" height="15" fill="rgb(227,213,9)" fg:x="656" fg:w="1"/><text x="28.6483%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="28.3983%" y="965" width="0.0433%" height="15" fill="rgb(245,99,25)" fg:x="656" fg:w="1"/><text x="28.6483%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="28.3983%" y="949" width="0.0433%" height="15" fill="rgb(250,82,29)" fg:x="656" fg:w="1"/><text x="28.6483%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="28.3983%" y="933" width="0.0433%" height="15" fill="rgb(241,226,54)" fg:x="656" fg:w="1"/><text x="28.6483%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="28.3983%" y="917" width="0.0433%" height="15" fill="rgb(221,99,41)" fg:x="656" fg:w="1"/><text x="28.6483%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="28.3983%" y="901" width="0.0433%" height="15" fill="rgb(213,90,21)" fg:x="656" fg:w="1"/><text x="28.6483%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="28.4416%" y="981" width="0.0433%" height="15" fill="rgb(205,208,24)" fg:x="657" fg:w="1"/><text x="28.6916%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="28.4416%" y="965" width="0.0433%" height="15" fill="rgb(246,31,12)" fg:x="657" fg:w="1"/><text x="28.6916%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="28.4416%" y="949" width="0.0433%" height="15" fill="rgb(213,154,6)" fg:x="657" fg:w="1"/><text x="28.6916%" y="959.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="28.4416%" y="933" width="0.0433%" height="15" fill="rgb(222,163,29)" fg:x="657" fg:w="1"/><text x="28.6916%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.09%)</title><rect x="28.4416%" y="1061" width="0.0866%" height="15" fill="rgb(227,201,8)" fg:x="657" fg:w="2"/><text x="28.6916%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.09%)</title><rect x="28.4416%" y="1045" width="0.0866%" height="15" fill="rgb(233,9,32)" fg:x="657" fg:w="2"/><text x="28.6916%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.09%)</title><rect x="28.4416%" y="1029" width="0.0866%" height="15" fill="rgb(217,54,24)" fg:x="657" fg:w="2"/><text x="28.6916%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.09%)</title><rect x="28.4416%" y="1013" width="0.0866%" height="15" fill="rgb(235,192,0)" fg:x="657" fg:w="2"/><text x="28.6916%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.09%)</title><rect x="28.4416%" y="997" width="0.0866%" height="15" fill="rgb(235,45,9)" fg:x="657" fg:w="2"/><text x="28.6916%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="28.4848%" y="981" width="0.0433%" height="15" fill="rgb(246,42,40)" fg:x="658" fg:w="1"/><text x="28.7348%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="28.4848%" y="965" width="0.0433%" height="15" fill="rgb(248,111,24)" fg:x="658" fg:w="1"/><text x="28.7348%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="28.4848%" y="949" width="0.0433%" height="15" fill="rgb(249,65,22)" fg:x="658" fg:w="1"/><text x="28.7348%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.04%)</title><rect x="28.4848%" y="933" width="0.0433%" height="15" fill="rgb(238,111,51)" fg:x="658" fg:w="1"/><text x="28.7348%" y="943.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.04%)</title><rect x="28.5281%" y="1061" width="0.0433%" height="15" fill="rgb(250,118,22)" fg:x="659" fg:w="1"/><text x="28.7781%" y="1071.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.04%)</title><rect x="28.5281%" y="1045" width="0.0433%" height="15" fill="rgb(234,84,26)" fg:x="659" fg:w="1"/><text x="28.7781%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.04%)</title><rect x="28.5281%" y="1029" width="0.0433%" height="15" fill="rgb(243,172,12)" fg:x="659" fg:w="1"/><text x="28.7781%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="28.5281%" y="1013" width="0.0433%" height="15" fill="rgb(236,150,49)" fg:x="659" fg:w="1"/><text x="28.7781%" y="1023.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="28.5281%" y="997" width="0.0433%" height="15" fill="rgb(225,197,26)" fg:x="659" fg:w="1"/><text x="28.7781%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="28.5281%" y="981" width="0.0433%" height="15" fill="rgb(214,17,42)" fg:x="659" fg:w="1"/><text x="28.7781%" y="991.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.04%)</title><rect x="28.5714%" y="1061" width="0.0433%" height="15" fill="rgb(224,165,40)" fg:x="660" fg:w="1"/><text x="28.8214%" y="1071.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="28.5714%" y="1045" width="0.0433%" height="15" fill="rgb(246,100,4)" fg:x="660" fg:w="1"/><text x="28.8214%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="28.5714%" y="1029" width="0.0433%" height="15" fill="rgb(222,103,0)" fg:x="660" fg:w="1"/><text x="28.8214%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.04%)</title><rect x="28.5714%" y="1013" width="0.0433%" height="15" fill="rgb(227,189,26)" fg:x="660" fg:w="1"/><text x="28.8214%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="28.6580%" y="1045" width="0.0433%" height="15" fill="rgb(214,202,17)" fg:x="662" fg:w="1"/><text x="28.9080%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.04%)</title><rect x="28.6580%" y="1029" width="0.0433%" height="15" fill="rgb(229,111,3)" fg:x="662" fg:w="1"/><text x="28.9080%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.04%)</title><rect x="28.6580%" y="1013" width="0.0433%" height="15" fill="rgb(229,172,15)" fg:x="662" fg:w="1"/><text x="28.9080%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="28.6580%" y="997" width="0.0433%" height="15" fill="rgb(230,224,35)" fg:x="662" fg:w="1"/><text x="28.9080%" y="1007.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.04%)</title><rect x="28.6580%" y="981" width="0.0433%" height="15" fill="rgb(251,141,6)" fg:x="662" fg:w="1"/><text x="28.9080%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.04%)</title><rect x="28.6580%" y="965" width="0.0433%" height="15" fill="rgb(225,208,6)" fg:x="662" fg:w="1"/><text x="28.9080%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.04%)</title><rect x="28.6580%" y="949" width="0.0433%" height="15" fill="rgb(246,181,16)" fg:x="662" fg:w="1"/><text x="28.9080%" y="959.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.04%)</title><rect x="28.6580%" y="933" width="0.0433%" height="15" fill="rgb(227,129,36)" fg:x="662" fg:w="1"/><text x="28.9080%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (1 samples, 0.04%)</title><rect x="28.6580%" y="917" width="0.0433%" height="15" fill="rgb(248,117,24)" fg:x="662" fg:w="1"/><text x="28.9080%" y="927.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.04%)</title><rect x="28.6580%" y="901" width="0.0433%" height="15" fill="rgb(214,185,35)" fg:x="662" fg:w="1"/><text x="28.9080%" y="911.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.04%)</title><rect x="28.6580%" y="885" width="0.0433%" height="15" fill="rgb(236,150,34)" fg:x="662" fg:w="1"/><text x="28.9080%" y="895.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.04%)</title><rect x="28.6580%" y="869" width="0.0433%" height="15" fill="rgb(243,228,27)" fg:x="662" fg:w="1"/><text x="28.9080%" y="879.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.04%)</title><rect x="28.6580%" y="853" width="0.0433%" height="15" fill="rgb(245,77,44)" fg:x="662" fg:w="1"/><text x="28.9080%" y="863.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.04%)</title><rect x="28.6580%" y="837" width="0.0433%" height="15" fill="rgb(235,214,42)" fg:x="662" fg:w="1"/><text x="28.9080%" y="847.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.04%)</title><rect x="28.7013%" y="1045" width="0.0433%" height="15" fill="rgb(221,74,3)" fg:x="663" fg:w="1"/><text x="28.9513%" y="1055.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.04%)</title><rect x="28.7013%" y="1029" width="0.0433%" height="15" fill="rgb(206,121,29)" fg:x="663" fg:w="1"/><text x="28.9513%" y="1039.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="28.7013%" y="1013" width="0.0433%" height="15" fill="rgb(249,131,53)" fg:x="663" fg:w="1"/><text x="28.9513%" y="1023.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="28.7013%" y="997" width="0.0433%" height="15" fill="rgb(236,170,29)" fg:x="663" fg:w="1"/><text x="28.9513%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="28.7013%" y="981" width="0.0433%" height="15" fill="rgb(247,96,15)" fg:x="663" fg:w="1"/><text x="28.9513%" y="991.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="28.7013%" y="965" width="0.0433%" height="15" fill="rgb(211,210,7)" fg:x="663" fg:w="1"/><text x="28.9513%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="28.7013%" y="949" width="0.0433%" height="15" fill="rgb(240,88,50)" fg:x="663" fg:w="1"/><text x="28.9513%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="28.7013%" y="933" width="0.0433%" height="15" fill="rgb(209,229,26)" fg:x="663" fg:w="1"/><text x="28.9513%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="28.7013%" y="917" width="0.0433%" height="15" fill="rgb(210,68,23)" fg:x="663" fg:w="1"/><text x="28.9513%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="28.7013%" y="901" width="0.0433%" height="15" fill="rgb(229,180,13)" fg:x="663" fg:w="1"/><text x="28.9513%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="28.7013%" y="885" width="0.0433%" height="15" fill="rgb(236,53,44)" fg:x="663" fg:w="1"/><text x="28.9513%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="28.7013%" y="869" width="0.0433%" height="15" fill="rgb(244,214,29)" fg:x="663" fg:w="1"/><text x="28.9513%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="28.7013%" y="853" width="0.0433%" height="15" fill="rgb(220,75,29)" fg:x="663" fg:w="1"/><text x="28.9513%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="28.7013%" y="837" width="0.0433%" height="15" fill="rgb(214,183,37)" fg:x="663" fg:w="1"/><text x="28.9513%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="28.7013%" y="821" width="0.0433%" height="15" fill="rgb(239,117,29)" fg:x="663" fg:w="1"/><text x="28.9513%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="28.7013%" y="805" width="0.0433%" height="15" fill="rgb(237,171,35)" fg:x="663" fg:w="1"/><text x="28.9513%" y="815.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="28.7013%" y="789" width="0.0433%" height="15" fill="rgb(229,178,53)" fg:x="663" fg:w="1"/><text x="28.9513%" y="799.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.04%)</title><rect x="28.7013%" y="773" width="0.0433%" height="15" fill="rgb(210,102,19)" fg:x="663" fg:w="1"/><text x="28.9513%" y="783.50"></text></g><g><title>_int_realloc (1 samples, 0.04%)</title><rect x="28.7013%" y="757" width="0.0433%" height="15" fill="rgb(235,127,22)" fg:x="663" fg:w="1"/><text x="28.9513%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="28.7013%" y="741" width="0.0433%" height="15" fill="rgb(244,31,31)" fg:x="663" fg:w="1"/><text x="28.9513%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.04%)</title><rect x="28.7446%" y="1045" width="0.0433%" height="15" fill="rgb(231,43,21)" fg:x="664" fg:w="1"/><text x="28.9946%" y="1055.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.04%)</title><rect x="28.7446%" y="1029" width="0.0433%" height="15" fill="rgb(217,131,35)" fg:x="664" fg:w="1"/><text x="28.9946%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.04%)</title><rect x="28.7446%" y="1013" width="0.0433%" height="15" fill="rgb(221,149,4)" fg:x="664" fg:w="1"/><text x="28.9946%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="28.7446%" y="997" width="0.0433%" height="15" fill="rgb(232,170,28)" fg:x="664" fg:w="1"/><text x="28.9946%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="28.7446%" y="981" width="0.0433%" height="15" fill="rgb(238,56,10)" fg:x="664" fg:w="1"/><text x="28.9946%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="28.7446%" y="965" width="0.0433%" height="15" fill="rgb(235,196,14)" fg:x="664" fg:w="1"/><text x="28.9946%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="28.7446%" y="949" width="0.0433%" height="15" fill="rgb(216,45,48)" fg:x="664" fg:w="1"/><text x="28.9946%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="28.7446%" y="933" width="0.0433%" height="15" fill="rgb(238,213,17)" fg:x="664" fg:w="1"/><text x="28.9946%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="28.7446%" y="917" width="0.0433%" height="15" fill="rgb(212,13,2)" fg:x="664" fg:w="1"/><text x="28.9946%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="28.7446%" y="901" width="0.0433%" height="15" fill="rgb(240,114,20)" fg:x="664" fg:w="1"/><text x="28.9946%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.04%)</title><rect x="28.7879%" y="949" width="0.0433%" height="15" fill="rgb(228,41,40)" fg:x="665" fg:w="1"/><text x="29.0379%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.04%)</title><rect x="28.7879%" y="933" width="0.0433%" height="15" fill="rgb(244,132,35)" fg:x="665" fg:w="1"/><text x="29.0379%" y="943.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.04%)</title><rect x="28.7879%" y="917" width="0.0433%" height="15" fill="rgb(253,189,4)" fg:x="665" fg:w="1"/><text x="29.0379%" y="927.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (1 samples, 0.04%)</title><rect x="28.7879%" y="901" width="0.0433%" height="15" fill="rgb(224,37,19)" fg:x="665" fg:w="1"/><text x="29.0379%" y="911.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.04%)</title><rect x="28.7879%" y="885" width="0.0433%" height="15" fill="rgb(235,223,18)" fg:x="665" fg:w="1"/><text x="29.0379%" y="895.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.04%)</title><rect x="28.7879%" y="869" width="0.0433%" height="15" fill="rgb(235,163,25)" fg:x="665" fg:w="1"/><text x="29.0379%" y="879.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.04%)</title><rect x="28.7879%" y="853" width="0.0433%" height="15" fill="rgb(217,145,28)" fg:x="665" fg:w="1"/><text x="29.0379%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="28.7879%" y="1029" width="0.0866%" height="15" fill="rgb(223,223,32)" fg:x="665" fg:w="2"/><text x="29.0379%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.09%)</title><rect x="28.7879%" y="1013" width="0.0866%" height="15" fill="rgb(227,189,39)" fg:x="665" fg:w="2"/><text x="29.0379%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.09%)</title><rect x="28.7879%" y="997" width="0.0866%" height="15" fill="rgb(248,10,22)" fg:x="665" fg:w="2"/><text x="29.0379%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.09%)</title><rect x="28.7879%" y="981" width="0.0866%" height="15" fill="rgb(248,46,39)" fg:x="665" fg:w="2"/><text x="29.0379%" y="991.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.09%)</title><rect x="28.7879%" y="965" width="0.0866%" height="15" fill="rgb(248,113,48)" fg:x="665" fg:w="2"/><text x="29.0379%" y="975.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.04%)</title><rect x="28.8312%" y="949" width="0.0433%" height="15" fill="rgb(245,16,25)" fg:x="666" fg:w="1"/><text x="29.0812%" y="959.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.04%)</title><rect x="28.8745%" y="1029" width="0.0433%" height="15" fill="rgb(249,152,16)" fg:x="667" fg:w="1"/><text x="29.1245%" y="1039.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.04%)</title><rect x="28.8745%" y="1013" width="0.0433%" height="15" fill="rgb(250,16,1)" fg:x="667" fg:w="1"/><text x="29.1245%" y="1023.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="28.8745%" y="997" width="0.0433%" height="15" fill="rgb(249,138,3)" fg:x="667" fg:w="1"/><text x="29.1245%" y="1007.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="28.8745%" y="981" width="0.0433%" height="15" fill="rgb(227,71,41)" fg:x="667" fg:w="1"/><text x="29.1245%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="28.8745%" y="965" width="0.0433%" height="15" fill="rgb(209,184,23)" fg:x="667" fg:w="1"/><text x="29.1245%" y="975.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="28.8745%" y="949" width="0.0433%" height="15" fill="rgb(223,215,31)" fg:x="667" fg:w="1"/><text x="29.1245%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="28.8745%" y="933" width="0.0433%" height="15" fill="rgb(210,146,28)" fg:x="667" fg:w="1"/><text x="29.1245%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="28.8745%" y="917" width="0.0433%" height="15" fill="rgb(209,183,41)" fg:x="667" fg:w="1"/><text x="29.1245%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="28.8745%" y="901" width="0.0433%" height="15" fill="rgb(209,224,45)" fg:x="667" fg:w="1"/><text x="29.1245%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="28.8745%" y="885" width="0.0433%" height="15" fill="rgb(224,209,51)" fg:x="667" fg:w="1"/><text x="29.1245%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="28.8745%" y="869" width="0.0433%" height="15" fill="rgb(223,17,39)" fg:x="667" fg:w="1"/><text x="29.1245%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="28.8745%" y="853" width="0.0433%" height="15" fill="rgb(234,204,37)" fg:x="667" fg:w="1"/><text x="29.1245%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="28.8745%" y="837" width="0.0433%" height="15" fill="rgb(236,120,5)" fg:x="667" fg:w="1"/><text x="29.1245%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.04%)</title><rect x="28.8745%" y="821" width="0.0433%" height="15" fill="rgb(248,97,27)" fg:x="667" fg:w="1"/><text x="29.1245%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="28.9177%" y="965" width="0.0433%" height="15" fill="rgb(240,66,17)" fg:x="668" fg:w="1"/><text x="29.1677%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="28.9177%" y="949" width="0.0433%" height="15" fill="rgb(210,79,3)" fg:x="668" fg:w="1"/><text x="29.1677%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.04%)</title><rect x="28.9177%" y="933" width="0.0433%" height="15" fill="rgb(214,176,27)" fg:x="668" fg:w="1"/><text x="29.1677%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="28.9177%" y="917" width="0.0433%" height="15" fill="rgb(235,185,3)" fg:x="668" fg:w="1"/><text x="29.1677%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="28.9177%" y="901" width="0.0433%" height="15" fill="rgb(227,24,12)" fg:x="668" fg:w="1"/><text x="29.1677%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="28.9177%" y="885" width="0.0433%" height="15" fill="rgb(252,169,48)" fg:x="668" fg:w="1"/><text x="29.1677%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="28.9177%" y="869" width="0.0433%" height="15" fill="rgb(212,65,1)" fg:x="668" fg:w="1"/><text x="29.1677%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="28.9177%" y="853" width="0.0433%" height="15" fill="rgb(242,39,24)" fg:x="668" fg:w="1"/><text x="29.1677%" y="863.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.09%)</title><rect x="28.9177%" y="1029" width="0.0866%" height="15" fill="rgb(249,32,23)" fg:x="668" fg:w="2"/><text x="29.1677%" y="1039.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.09%)</title><rect x="28.9177%" y="1013" width="0.0866%" height="15" fill="rgb(251,195,23)" fg:x="668" fg:w="2"/><text x="29.1677%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.09%)</title><rect x="28.9177%" y="997" width="0.0866%" height="15" fill="rgb(236,174,8)" fg:x="668" fg:w="2"/><text x="29.1677%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.09%)</title><rect x="28.9177%" y="981" width="0.0866%" height="15" fill="rgb(220,197,8)" fg:x="668" fg:w="2"/><text x="29.1677%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="28.9610%" y="965" width="0.0433%" height="15" fill="rgb(240,108,37)" fg:x="669" fg:w="1"/><text x="29.2110%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="28.9610%" y="949" width="0.0433%" height="15" fill="rgb(232,176,24)" fg:x="669" fg:w="1"/><text x="29.2110%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="28.9610%" y="933" width="0.0433%" height="15" fill="rgb(243,35,29)" fg:x="669" fg:w="1"/><text x="29.2110%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="28.9610%" y="917" width="0.0433%" height="15" fill="rgb(210,37,18)" fg:x="669" fg:w="1"/><text x="29.2110%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.04%)</title><rect x="28.9610%" y="901" width="0.0433%" height="15" fill="rgb(224,184,40)" fg:x="669" fg:w="1"/><text x="29.2110%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="28.9610%" y="885" width="0.0433%" height="15" fill="rgb(236,39,29)" fg:x="669" fg:w="1"/><text x="29.2110%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.04%)</title><rect x="28.9610%" y="869" width="0.0433%" height="15" fill="rgb(232,48,39)" fg:x="669" fg:w="1"/><text x="29.2110%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (5 samples, 0.22%)</title><rect x="29.0043%" y="885" width="0.2165%" height="15" fill="rgb(236,34,42)" fg:x="670" fg:w="5"/><text x="29.2543%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.09%)</title><rect x="29.1342%" y="869" width="0.0866%" height="15" fill="rgb(243,106,37)" fg:x="673" fg:w="2"/><text x="29.3842%" y="879.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="29.1342%" y="853" width="0.0866%" height="15" fill="rgb(218,96,6)" fg:x="673" fg:w="2"/><text x="29.3842%" y="863.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (2 samples, 0.09%)</title><rect x="29.1342%" y="837" width="0.0866%" height="15" fill="rgb(235,130,12)" fg:x="673" fg:w="2"/><text x="29.3842%" y="847.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.09%)</title><rect x="29.1342%" y="821" width="0.0866%" height="15" fill="rgb(231,95,0)" fg:x="673" fg:w="2"/><text x="29.3842%" y="831.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.09%)</title><rect x="29.1342%" y="805" width="0.0866%" height="15" fill="rgb(228,12,23)" fg:x="673" fg:w="2"/><text x="29.3842%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.26%)</title><rect x="29.0043%" y="1013" width="0.2597%" height="15" fill="rgb(216,12,1)" fg:x="670" fg:w="6"/><text x="29.2543%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (6 samples, 0.26%)</title><rect x="29.0043%" y="997" width="0.2597%" height="15" fill="rgb(219,59,3)" fg:x="670" fg:w="6"/><text x="29.2543%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.26%)</title><rect x="29.0043%" y="981" width="0.2597%" height="15" fill="rgb(215,208,46)" fg:x="670" fg:w="6"/><text x="29.2543%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.26%)</title><rect x="29.0043%" y="965" width="0.2597%" height="15" fill="rgb(254,224,29)" fg:x="670" fg:w="6"/><text x="29.2543%" y="975.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (6 samples, 0.26%)</title><rect x="29.0043%" y="949" width="0.2597%" height="15" fill="rgb(232,14,29)" fg:x="670" fg:w="6"/><text x="29.2543%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (6 samples, 0.26%)</title><rect x="29.0043%" y="933" width="0.2597%" height="15" fill="rgb(208,45,52)" fg:x="670" fg:w="6"/><text x="29.2543%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.26%)</title><rect x="29.0043%" y="917" width="0.2597%" height="15" fill="rgb(234,191,28)" fg:x="670" fg:w="6"/><text x="29.2543%" y="927.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (6 samples, 0.26%)</title><rect x="29.0043%" y="901" width="0.2597%" height="15" fill="rgb(244,67,43)" fg:x="670" fg:w="6"/><text x="29.2543%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (1 samples, 0.04%)</title><rect x="29.2208%" y="885" width="0.0433%" height="15" fill="rgb(236,189,24)" fg:x="675" fg:w="1"/><text x="29.4708%" y="895.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.04%)</title><rect x="29.2208%" y="869" width="0.0433%" height="15" fill="rgb(239,214,33)" fg:x="675" fg:w="1"/><text x="29.4708%" y="879.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.04%)</title><rect x="29.2208%" y="853" width="0.0433%" height="15" fill="rgb(226,176,41)" fg:x="675" fg:w="1"/><text x="29.4708%" y="863.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.04%)</title><rect x="29.2208%" y="837" width="0.0433%" height="15" fill="rgb(248,47,8)" fg:x="675" fg:w="1"/><text x="29.4708%" y="847.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.04%)</title><rect x="29.2208%" y="821" width="0.0433%" height="15" fill="rgb(218,81,44)" fg:x="675" fg:w="1"/><text x="29.4708%" y="831.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="29.2208%" y="805" width="0.0433%" height="15" fill="rgb(213,98,6)" fg:x="675" fg:w="1"/><text x="29.4708%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="29.2208%" y="789" width="0.0433%" height="15" fill="rgb(222,85,22)" fg:x="675" fg:w="1"/><text x="29.4708%" y="799.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="29.2208%" y="773" width="0.0433%" height="15" fill="rgb(239,46,39)" fg:x="675" fg:w="1"/><text x="29.4708%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="29.2641%" y="949" width="0.0433%" height="15" fill="rgb(237,12,29)" fg:x="676" fg:w="1"/><text x="29.5141%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="29.2641%" y="933" width="0.0433%" height="15" fill="rgb(214,77,8)" fg:x="676" fg:w="1"/><text x="29.5141%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="29.2641%" y="917" width="0.0433%" height="15" fill="rgb(217,168,37)" fg:x="676" fg:w="1"/><text x="29.5141%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.09%)</title><rect x="29.2641%" y="965" width="0.0866%" height="15" fill="rgb(221,217,23)" fg:x="676" fg:w="2"/><text x="29.5141%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.04%)</title><rect x="29.3074%" y="949" width="0.0433%" height="15" fill="rgb(243,229,36)" fg:x="677" fg:w="1"/><text x="29.5574%" y="959.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.04%)</title><rect x="29.3074%" y="933" width="0.0433%" height="15" fill="rgb(251,163,40)" fg:x="677" fg:w="1"/><text x="29.5574%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="29.3074%" y="917" width="0.0433%" height="15" fill="rgb(237,222,12)" fg:x="677" fg:w="1"/><text x="29.5574%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.13%)</title><rect x="29.2641%" y="1013" width="0.1299%" height="15" fill="rgb(248,132,6)" fg:x="676" fg:w="3"/><text x="29.5141%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.13%)</title><rect x="29.2641%" y="997" width="0.1299%" height="15" fill="rgb(227,167,50)" fg:x="676" fg:w="3"/><text x="29.5141%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.13%)</title><rect x="29.2641%" y="981" width="0.1299%" height="15" fill="rgb(242,84,37)" fg:x="676" fg:w="3"/><text x="29.5141%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="29.3506%" y="965" width="0.0433%" height="15" fill="rgb(212,4,50)" fg:x="678" fg:w="1"/><text x="29.6006%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="29.3506%" y="949" width="0.0433%" height="15" fill="rgb(230,228,32)" fg:x="678" fg:w="1"/><text x="29.6006%" y="959.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.04%)</title><rect x="29.3506%" y="933" width="0.0433%" height="15" fill="rgb(248,217,23)" fg:x="678" fg:w="1"/><text x="29.6006%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.04%)</title><rect x="29.3506%" y="917" width="0.0433%" height="15" fill="rgb(238,197,32)" fg:x="678" fg:w="1"/><text x="29.6006%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="29.3506%" y="901" width="0.0433%" height="15" fill="rgb(236,106,1)" fg:x="678" fg:w="1"/><text x="29.6006%" y="911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="29.3506%" y="885" width="0.0433%" height="15" fill="rgb(219,228,13)" fg:x="678" fg:w="1"/><text x="29.6006%" y="895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="29.3506%" y="869" width="0.0433%" height="15" fill="rgb(238,30,35)" fg:x="678" fg:w="1"/><text x="29.6006%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="29.3939%" y="949" width="0.0433%" height="15" fill="rgb(236,70,23)" fg:x="679" fg:w="1"/><text x="29.6439%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="29.3939%" y="933" width="0.0433%" height="15" fill="rgb(249,104,48)" fg:x="679" fg:w="1"/><text x="29.6439%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="29.3939%" y="917" width="0.0433%" height="15" fill="rgb(254,117,50)" fg:x="679" fg:w="1"/><text x="29.6439%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="29.3939%" y="901" width="0.0433%" height="15" fill="rgb(223,152,4)" fg:x="679" fg:w="1"/><text x="29.6439%" y="911.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.09%)</title><rect x="29.3939%" y="1013" width="0.0866%" height="15" fill="rgb(245,6,2)" fg:x="679" fg:w="2"/><text x="29.6439%" y="1023.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.09%)</title><rect x="29.3939%" y="997" width="0.0866%" height="15" fill="rgb(249,150,24)" fg:x="679" fg:w="2"/><text x="29.6439%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.09%)</title><rect x="29.3939%" y="981" width="0.0866%" height="15" fill="rgb(228,185,42)" fg:x="679" fg:w="2"/><text x="29.6439%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.09%)</title><rect x="29.3939%" y="965" width="0.0866%" height="15" fill="rgb(226,39,33)" fg:x="679" fg:w="2"/><text x="29.6439%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="29.4372%" y="949" width="0.0433%" height="15" fill="rgb(221,166,19)" fg:x="680" fg:w="1"/><text x="29.6872%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="29.4372%" y="933" width="0.0433%" height="15" fill="rgb(209,109,2)" fg:x="680" fg:w="1"/><text x="29.6872%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="29.4372%" y="917" width="0.0433%" height="15" fill="rgb(252,216,26)" fg:x="680" fg:w="1"/><text x="29.6872%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="29.4372%" y="901" width="0.0433%" height="15" fill="rgb(227,173,36)" fg:x="680" fg:w="1"/><text x="29.6872%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="29.4372%" y="885" width="0.0433%" height="15" fill="rgb(209,90,7)" fg:x="680" fg:w="1"/><text x="29.6872%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="29.4372%" y="869" width="0.0433%" height="15" fill="rgb(250,194,11)" fg:x="680" fg:w="1"/><text x="29.6872%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.04%)</title><rect x="29.4372%" y="853" width="0.0433%" height="15" fill="rgb(220,72,50)" fg:x="680" fg:w="1"/><text x="29.6872%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.04%)</title><rect x="29.4372%" y="837" width="0.0433%" height="15" fill="rgb(222,106,48)" fg:x="680" fg:w="1"/><text x="29.6872%" y="847.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.04%)</title><rect x="29.4372%" y="821" width="0.0433%" height="15" fill="rgb(216,220,45)" fg:x="680" fg:w="1"/><text x="29.6872%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.04%)</title><rect x="29.5238%" y="901" width="0.0433%" height="15" fill="rgb(234,112,18)" fg:x="682" fg:w="1"/><text x="29.7738%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.04%)</title><rect x="29.5238%" y="885" width="0.0433%" height="15" fill="rgb(206,179,9)" fg:x="682" fg:w="1"/><text x="29.7738%" y="895.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="29.5238%" y="869" width="0.0433%" height="15" fill="rgb(215,115,40)" fg:x="682" fg:w="1"/><text x="29.7738%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.09%)</title><rect x="29.5238%" y="949" width="0.0866%" height="15" fill="rgb(222,69,34)" fg:x="682" fg:w="2"/><text x="29.7738%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.09%)</title><rect x="29.5238%" y="933" width="0.0866%" height="15" fill="rgb(209,161,10)" fg:x="682" fg:w="2"/><text x="29.7738%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.09%)</title><rect x="29.5238%" y="917" width="0.0866%" height="15" fill="rgb(217,6,38)" fg:x="682" fg:w="2"/><text x="29.7738%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.04%)</title><rect x="29.5671%" y="901" width="0.0433%" height="15" fill="rgb(229,229,48)" fg:x="683" fg:w="1"/><text x="29.8171%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.04%)</title><rect x="29.5671%" y="885" width="0.0433%" height="15" fill="rgb(225,21,28)" fg:x="683" fg:w="1"/><text x="29.8171%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.04%)</title><rect x="29.5671%" y="869" width="0.0433%" height="15" fill="rgb(206,33,13)" fg:x="683" fg:w="1"/><text x="29.8171%" y="879.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.04%)</title><rect x="29.5671%" y="853" width="0.0433%" height="15" fill="rgb(242,178,17)" fg:x="683" fg:w="1"/><text x="29.8171%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="29.5671%" y="837" width="0.0433%" height="15" fill="rgb(220,162,5)" fg:x="683" fg:w="1"/><text x="29.8171%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="29.5671%" y="821" width="0.0433%" height="15" fill="rgb(210,33,43)" fg:x="683" fg:w="1"/><text x="29.8171%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="29.5671%" y="805" width="0.0433%" height="15" fill="rgb(216,116,54)" fg:x="683" fg:w="1"/><text x="29.8171%" y="815.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="29.5671%" y="789" width="0.0433%" height="15" fill="rgb(249,92,24)" fg:x="683" fg:w="1"/><text x="29.8171%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="29.5671%" y="773" width="0.0433%" height="15" fill="rgb(231,189,14)" fg:x="683" fg:w="1"/><text x="29.8171%" y="783.50"></text></g><g><title>sysmalloc (1 samples, 0.04%)</title><rect x="29.5671%" y="757" width="0.0433%" height="15" fill="rgb(230,8,41)" fg:x="683" fg:w="1"/><text x="29.8171%" y="767.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (4 samples, 0.17%)</title><rect x="29.4805%" y="1013" width="0.1732%" height="15" fill="rgb(249,7,27)" fg:x="681" fg:w="4"/><text x="29.7305%" y="1023.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (4 samples, 0.17%)</title><rect x="29.4805%" y="997" width="0.1732%" height="15" fill="rgb(232,86,5)" fg:x="681" fg:w="4"/><text x="29.7305%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.17%)</title><rect x="29.4805%" y="981" width="0.1732%" height="15" fill="rgb(224,175,18)" fg:x="681" fg:w="4"/><text x="29.7305%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.13%)</title><rect x="29.5238%" y="965" width="0.1299%" height="15" fill="rgb(220,129,12)" fg:x="682" fg:w="3"/><text x="29.7738%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.04%)</title><rect x="29.6104%" y="949" width="0.0433%" height="15" fill="rgb(210,19,36)" fg:x="684" fg:w="1"/><text x="29.8604%" y="959.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.04%)</title><rect x="29.6104%" y="933" width="0.0433%" height="15" fill="rgb(219,96,14)" fg:x="684" fg:w="1"/><text x="29.8604%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="29.6537%" y="997" width="0.1299%" height="15" fill="rgb(249,106,1)" fg:x="685" fg:w="3"/><text x="29.9037%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.13%)</title><rect x="29.6537%" y="981" width="0.1299%" height="15" fill="rgb(249,155,20)" fg:x="685" fg:w="3"/><text x="29.9037%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.13%)</title><rect x="29.6537%" y="965" width="0.1299%" height="15" fill="rgb(244,168,9)" fg:x="685" fg:w="3"/><text x="29.9037%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.13%)</title><rect x="29.6537%" y="949" width="0.1299%" height="15" fill="rgb(216,23,50)" fg:x="685" fg:w="3"/><text x="29.9037%" y="959.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3 samples, 0.13%)</title><rect x="29.6537%" y="933" width="0.1299%" height="15" fill="rgb(224,219,20)" fg:x="685" fg:w="3"/><text x="29.9037%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.13%)</title><rect x="29.6537%" y="917" width="0.1299%" height="15" fill="rgb(222,156,15)" fg:x="685" fg:w="3"/><text x="29.9037%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.13%)</title><rect x="29.6537%" y="901" width="0.1299%" height="15" fill="rgb(231,97,17)" fg:x="685" fg:w="3"/><text x="29.9037%" y="911.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (3 samples, 0.13%)</title><rect x="29.6537%" y="885" width="0.1299%" height="15" fill="rgb(218,70,48)" fg:x="685" fg:w="3"/><text x="29.9037%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (3 samples, 0.13%)</title><rect x="29.6537%" y="869" width="0.1299%" height="15" fill="rgb(212,196,52)" fg:x="685" fg:w="3"/><text x="29.9037%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="29.7403%" y="853" width="0.0433%" height="15" fill="rgb(243,203,18)" fg:x="687" fg:w="1"/><text x="29.9903%" y="863.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="29.7403%" y="837" width="0.0433%" height="15" fill="rgb(252,125,41)" fg:x="687" fg:w="1"/><text x="29.9903%" y="847.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.04%)</title><rect x="29.7403%" y="821" width="0.0433%" height="15" fill="rgb(223,180,33)" fg:x="687" fg:w="1"/><text x="29.9903%" y="831.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.04%)</title><rect x="29.7403%" y="805" width="0.0433%" height="15" fill="rgb(254,159,46)" fg:x="687" fg:w="1"/><text x="29.9903%" y="815.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.04%)</title><rect x="29.7403%" y="789" width="0.0433%" height="15" fill="rgb(254,38,10)" fg:x="687" fg:w="1"/><text x="29.9903%" y="799.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.04%)</title><rect x="29.7835%" y="997" width="0.0433%" height="15" fill="rgb(208,217,32)" fg:x="688" fg:w="1"/><text x="30.0335%" y="1007.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.04%)</title><rect x="29.7835%" y="981" width="0.0433%" height="15" fill="rgb(221,120,13)" fg:x="688" fg:w="1"/><text x="30.0335%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.04%)</title><rect x="29.7835%" y="965" width="0.0433%" height="15" fill="rgb(246,54,52)" fg:x="688" fg:w="1"/><text x="30.0335%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="29.7835%" y="949" width="0.0433%" height="15" fill="rgb(242,34,25)" fg:x="688" fg:w="1"/><text x="30.0335%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="29.7835%" y="933" width="0.0433%" height="15" fill="rgb(247,209,9)" fg:x="688" fg:w="1"/><text x="30.0335%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="29.7835%" y="917" width="0.0433%" height="15" fill="rgb(228,71,26)" fg:x="688" fg:w="1"/><text x="30.0335%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.04%)</title><rect x="29.7835%" y="901" width="0.0433%" height="15" fill="rgb(222,145,49)" fg:x="688" fg:w="1"/><text x="30.0335%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="29.7835%" y="885" width="0.0433%" height="15" fill="rgb(218,121,17)" fg:x="688" fg:w="1"/><text x="30.0335%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="29.7835%" y="869" width="0.0433%" height="15" fill="rgb(244,50,7)" fg:x="688" fg:w="1"/><text x="30.0335%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="29.7835%" y="853" width="0.0433%" height="15" fill="rgb(246,229,37)" fg:x="688" fg:w="1"/><text x="30.0335%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="29.7835%" y="837" width="0.0433%" height="15" fill="rgb(225,18,5)" fg:x="688" fg:w="1"/><text x="30.0335%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="29.7835%" y="821" width="0.0433%" height="15" fill="rgb(213,204,8)" fg:x="688" fg:w="1"/><text x="30.0335%" y="831.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.04%)</title><rect x="29.8268%" y="885" width="0.0433%" height="15" fill="rgb(238,103,6)" fg:x="689" fg:w="1"/><text x="30.0768%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="29.8268%" y="869" width="0.0433%" height="15" fill="rgb(222,25,35)" fg:x="689" fg:w="1"/><text x="30.0768%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="29.8268%" y="853" width="0.0433%" height="15" fill="rgb(213,203,35)" fg:x="689" fg:w="1"/><text x="30.0768%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="29.8268%" y="837" width="0.0433%" height="15" fill="rgb(221,79,53)" fg:x="689" fg:w="1"/><text x="30.0768%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="29.8268%" y="821" width="0.0433%" height="15" fill="rgb(243,200,35)" fg:x="689" fg:w="1"/><text x="30.0768%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="29.8268%" y="805" width="0.0433%" height="15" fill="rgb(248,60,25)" fg:x="689" fg:w="1"/><text x="30.0768%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="29.8268%" y="789" width="0.0433%" height="15" fill="rgb(227,53,46)" fg:x="689" fg:w="1"/><text x="30.0768%" y="799.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.09%)</title><rect x="29.8268%" y="997" width="0.0866%" height="15" fill="rgb(216,120,32)" fg:x="689" fg:w="2"/><text x="30.0768%" y="1007.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.09%)</title><rect x="29.8268%" y="981" width="0.0866%" height="15" fill="rgb(220,134,1)" fg:x="689" fg:w="2"/><text x="30.0768%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.09%)</title><rect x="29.8268%" y="965" width="0.0866%" height="15" fill="rgb(237,168,5)" fg:x="689" fg:w="2"/><text x="30.0768%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.09%)</title><rect x="29.8268%" y="949" width="0.0866%" height="15" fill="rgb(231,100,33)" fg:x="689" fg:w="2"/><text x="30.0768%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.09%)</title><rect x="29.8268%" y="933" width="0.0866%" height="15" fill="rgb(236,177,47)" fg:x="689" fg:w="2"/><text x="30.0768%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.09%)</title><rect x="29.8268%" y="917" width="0.0866%" height="15" fill="rgb(235,7,49)" fg:x="689" fg:w="2"/><text x="30.0768%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.09%)</title><rect x="29.8268%" y="901" width="0.0866%" height="15" fill="rgb(232,119,22)" fg:x="689" fg:w="2"/><text x="30.0768%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.04%)</title><rect x="29.8701%" y="885" width="0.0433%" height="15" fill="rgb(254,73,53)" fg:x="690" fg:w="1"/><text x="30.1201%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.04%)</title><rect x="29.8701%" y="869" width="0.0433%" height="15" fill="rgb(251,35,20)" fg:x="690" fg:w="1"/><text x="30.1201%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.04%)</title><rect x="29.8701%" y="853" width="0.0433%" height="15" fill="rgb(241,119,20)" fg:x="690" fg:w="1"/><text x="30.1201%" y="863.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.04%)</title><rect x="29.8701%" y="837" width="0.0433%" height="15" fill="rgb(207,102,14)" fg:x="690" fg:w="1"/><text x="30.1201%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="29.8701%" y="821" width="0.0433%" height="15" fill="rgb(248,201,50)" fg:x="690" fg:w="1"/><text x="30.1201%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="29.8701%" y="805" width="0.0433%" height="15" fill="rgb(222,185,44)" fg:x="690" fg:w="1"/><text x="30.1201%" y="815.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="29.8701%" y="789" width="0.0433%" height="15" fill="rgb(218,107,18)" fg:x="690" fg:w="1"/><text x="30.1201%" y="799.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="29.8701%" y="773" width="0.0433%" height="15" fill="rgb(237,177,39)" fg:x="690" fg:w="1"/><text x="30.1201%" y="783.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="29.8701%" y="757" width="0.0433%" height="15" fill="rgb(246,69,6)" fg:x="690" fg:w="1"/><text x="30.1201%" y="767.50"></text></g><g><title>sysmalloc (1 samples, 0.04%)</title><rect x="29.8701%" y="741" width="0.0433%" height="15" fill="rgb(234,208,37)" fg:x="690" fg:w="1"/><text x="30.1201%" y="751.50"></text></g><g><title>__GI___default_morecore (1 samples, 0.04%)</title><rect x="29.8701%" y="725" width="0.0433%" height="15" fill="rgb(225,4,6)" fg:x="690" fg:w="1"/><text x="30.1201%" y="735.50"></text></g><g><title>__GI___sbrk (1 samples, 0.04%)</title><rect x="29.8701%" y="709" width="0.0433%" height="15" fill="rgb(233,45,0)" fg:x="690" fg:w="1"/><text x="30.1201%" y="719.50"></text></g><g><title>__GI___sbrk (1 samples, 0.04%)</title><rect x="29.8701%" y="693" width="0.0433%" height="15" fill="rgb(226,136,5)" fg:x="690" fg:w="1"/><text x="30.1201%" y="703.50"></text></g><g><title>__brk (1 samples, 0.04%)</title><rect x="29.8701%" y="677" width="0.0433%" height="15" fill="rgb(211,91,47)" fg:x="690" fg:w="1"/><text x="30.1201%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="29.8701%" y="661" width="0.0433%" height="15" fill="rgb(242,88,51)" fg:x="690" fg:w="1"/><text x="30.1201%" y="671.50"></text></g><g><title>do_syscall_64 (1 samples, 0.04%)</title><rect x="29.8701%" y="645" width="0.0433%" height="15" fill="rgb(230,91,28)" fg:x="690" fg:w="1"/><text x="30.1201%" y="655.50"></text></g><g><title>__x64_sys_brk (1 samples, 0.04%)</title><rect x="29.8701%" y="629" width="0.0433%" height="15" fill="rgb(254,186,29)" fg:x="690" fg:w="1"/><text x="30.1201%" y="639.50"></text></g><g><title>do_brk_flags (1 samples, 0.04%)</title><rect x="29.8701%" y="613" width="0.0433%" height="15" fill="rgb(238,6,4)" fg:x="690" fg:w="1"/><text x="30.1201%" y="623.50"></text></g><g><title>vma_merge (1 samples, 0.04%)</title><rect x="29.8701%" y="597" width="0.0433%" height="15" fill="rgb(221,151,16)" fg:x="690" fg:w="1"/><text x="30.1201%" y="607.50"></text></g><g><title>__vma_adjust (1 samples, 0.04%)</title><rect x="29.8701%" y="581" width="0.0433%" height="15" fill="rgb(251,143,52)" fg:x="690" fg:w="1"/><text x="30.1201%" y="591.50"></text></g><g><title>__rb_insert_augmented (1 samples, 0.04%)</title><rect x="29.8701%" y="565" width="0.0433%" height="15" fill="rgb(206,90,15)" fg:x="690" fg:w="1"/><text x="30.1201%" y="575.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.04%)</title><rect x="29.9134%" y="981" width="0.0433%" height="15" fill="rgb(218,35,8)" fg:x="691" fg:w="1"/><text x="30.1634%" y="991.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.04%)</title><rect x="29.9134%" y="965" width="0.0433%" height="15" fill="rgb(239,215,6)" fg:x="691" fg:w="1"/><text x="30.1634%" y="975.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="29.9134%" y="949" width="0.0433%" height="15" fill="rgb(245,116,39)" fg:x="691" fg:w="1"/><text x="30.1634%" y="959.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="29.9134%" y="933" width="0.0433%" height="15" fill="rgb(242,65,28)" fg:x="691" fg:w="1"/><text x="30.1634%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="29.9134%" y="917" width="0.0433%" height="15" fill="rgb(252,132,53)" fg:x="691" fg:w="1"/><text x="30.1634%" y="927.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="29.9134%" y="901" width="0.0433%" height="15" fill="rgb(224,159,50)" fg:x="691" fg:w="1"/><text x="30.1634%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="29.9134%" y="885" width="0.0433%" height="15" fill="rgb(224,93,4)" fg:x="691" fg:w="1"/><text x="30.1634%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="29.9134%" y="869" width="0.0433%" height="15" fill="rgb(208,81,34)" fg:x="691" fg:w="1"/><text x="30.1634%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="29.9134%" y="853" width="0.0433%" height="15" fill="rgb(233,92,54)" fg:x="691" fg:w="1"/><text x="30.1634%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="29.9134%" y="837" width="0.0433%" height="15" fill="rgb(237,21,14)" fg:x="691" fg:w="1"/><text x="30.1634%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="29.9134%" y="821" width="0.0433%" height="15" fill="rgb(249,128,51)" fg:x="691" fg:w="1"/><text x="30.1634%" y="831.50"></text></g><g><title>y2021::d12::main2::p01 (46 samples, 1.99%)</title><rect x="28.0087%" y="1205" width="1.9913%" height="15" fill="rgb(223,129,24)" fg:x="647" fg:w="46"/><text x="28.2587%" y="1215.50">y..</text></g><g><title>y2021::d12::main2::traverse (45 samples, 1.95%)</title><rect x="28.0519%" y="1189" width="1.9481%" height="15" fill="rgb(231,168,25)" fg:x="648" fg:w="45"/><text x="28.3019%" y="1199.50">y..</text></g><g><title>y2021::d12::main2::traverse (45 samples, 1.95%)</title><rect x="28.0519%" y="1173" width="1.9481%" height="15" fill="rgb(224,39,20)" fg:x="648" fg:w="45"/><text x="28.3019%" y="1183.50">y..</text></g><g><title>y2021::d12::main2::traverse (45 samples, 1.95%)</title><rect x="28.0519%" y="1157" width="1.9481%" height="15" fill="rgb(225,152,53)" fg:x="648" fg:w="45"/><text x="28.3019%" y="1167.50">y..</text></g><g><title>y2021::d12::main2::traverse (45 samples, 1.95%)</title><rect x="28.0519%" y="1141" width="1.9481%" height="15" fill="rgb(252,17,24)" fg:x="648" fg:w="45"/><text x="28.3019%" y="1151.50">y..</text></g><g><title>y2021::d12::main2::traverse (45 samples, 1.95%)</title><rect x="28.0519%" y="1125" width="1.9481%" height="15" fill="rgb(250,114,30)" fg:x="648" fg:w="45"/><text x="28.3019%" y="1135.50">y..</text></g><g><title>y2021::d12::main2::traverse (44 samples, 1.90%)</title><rect x="28.0952%" y="1109" width="1.9048%" height="15" fill="rgb(229,5,4)" fg:x="649" fg:w="44"/><text x="28.3452%" y="1119.50">y..</text></g><g><title>y2021::d12::main2::traverse (44 samples, 1.90%)</title><rect x="28.0952%" y="1093" width="1.9048%" height="15" fill="rgb(225,176,49)" fg:x="649" fg:w="44"/><text x="28.3452%" y="1103.50">y..</text></g><g><title>y2021::d12::main2::traverse (40 samples, 1.73%)</title><rect x="28.2684%" y="1077" width="1.7316%" height="15" fill="rgb(224,221,49)" fg:x="653" fg:w="40"/><text x="28.5184%" y="1087.50"></text></g><g><title>y2021::d12::main2::traverse (32 samples, 1.39%)</title><rect x="28.6147%" y="1061" width="1.3853%" height="15" fill="rgb(253,169,27)" fg:x="661" fg:w="32"/><text x="28.8647%" y="1071.50"></text></g><g><title>y2021::d12::main2::traverse (28 samples, 1.21%)</title><rect x="28.7879%" y="1045" width="1.2121%" height="15" fill="rgb(211,206,16)" fg:x="665" fg:w="28"/><text x="29.0379%" y="1055.50"></text></g><g><title>y2021::d12::main2::traverse (23 samples, 1.00%)</title><rect x="29.0043%" y="1029" width="0.9957%" height="15" fill="rgb(244,87,35)" fg:x="670" fg:w="23"/><text x="29.2543%" y="1039.50"></text></g><g><title>y2021::d12::main2::traverse (8 samples, 0.35%)</title><rect x="29.6537%" y="1013" width="0.3463%" height="15" fill="rgb(246,28,10)" fg:x="685" fg:w="8"/><text x="29.9037%" y="1023.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.09%)</title><rect x="29.9134%" y="997" width="0.0866%" height="15" fill="rgb(229,12,44)" fg:x="691" fg:w="2"/><text x="30.1634%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="29.9567%" y="981" width="0.0433%" height="15" fill="rgb(210,145,37)" fg:x="692" fg:w="1"/><text x="30.2067%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="29.9567%" y="965" width="0.0433%" height="15" fill="rgb(227,112,52)" fg:x="692" fg:w="1"/><text x="30.2067%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="29.9567%" y="949" width="0.0433%" height="15" fill="rgb(238,155,34)" fg:x="692" fg:w="1"/><text x="30.2067%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="29.9567%" y="933" width="0.0433%" height="15" fill="rgb(239,226,36)" fg:x="692" fg:w="1"/><text x="30.2067%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="29.9567%" y="917" width="0.0433%" height="15" fill="rgb(230,16,23)" fg:x="692" fg:w="1"/><text x="30.2067%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="29.9567%" y="901" width="0.0433%" height="15" fill="rgb(236,171,36)" fg:x="692" fg:w="1"/><text x="30.2067%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="29.9567%" y="885" width="0.0433%" height="15" fill="rgb(221,22,14)" fg:x="692" fg:w="1"/><text x="30.2067%" y="895.50"></text></g><g><title>__GI___libc_free (46 samples, 1.99%)</title><rect x="30.0000%" y="949" width="1.9913%" height="15" fill="rgb(242,43,11)" fg:x="693" fg:w="46"/><text x="30.2500%" y="959.50">_..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (56 samples, 2.42%)</title><rect x="30.0000%" y="981" width="2.4242%" height="15" fill="rgb(232,69,23)" fg:x="693" fg:w="56"/><text x="30.2500%" y="991.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (56 samples, 2.42%)</title><rect x="30.0000%" y="965" width="2.4242%" height="15" fill="rgb(216,180,54)" fg:x="693" fg:w="56"/><text x="30.2500%" y="975.50">al..</text></g><g><title>_int_free (10 samples, 0.43%)</title><rect x="31.9913%" y="949" width="0.4329%" height="15" fill="rgb(216,5,24)" fg:x="739" fg:w="10"/><text x="32.2413%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (57 samples, 2.47%)</title><rect x="30.0000%" y="1109" width="2.4675%" height="15" fill="rgb(225,89,9)" fg:x="693" fg:w="57"/><text x="30.2500%" y="1119.50">ha..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (57 samples, 2.47%)</title><rect x="30.0000%" y="1093" width="2.4675%" height="15" fill="rgb(243,75,33)" fg:x="693" fg:w="57"/><text x="30.2500%" y="1103.50">ha..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (57 samples, 2.47%)</title><rect x="30.0000%" y="1077" width="2.4675%" height="15" fill="rgb(247,141,45)" fg:x="693" fg:w="57"/><text x="30.2500%" y="1087.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (57 samples, 2.47%)</title><rect x="30.0000%" y="1061" width="2.4675%" height="15" fill="rgb(232,177,36)" fg:x="693" fg:w="57"/><text x="30.2500%" y="1071.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (57 samples, 2.47%)</title><rect x="30.0000%" y="1045" width="2.4675%" height="15" fill="rgb(219,125,36)" fg:x="693" fg:w="57"/><text x="30.2500%" y="1055.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (57 samples, 2.47%)</title><rect x="30.0000%" y="1029" width="2.4675%" height="15" fill="rgb(227,94,9)" fg:x="693" fg:w="57"/><text x="30.2500%" y="1039.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (57 samples, 2.47%)</title><rect x="30.0000%" y="1013" width="2.4675%" height="15" fill="rgb(240,34,52)" fg:x="693" fg:w="57"/><text x="30.2500%" y="1023.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 2.47%)</title><rect x="30.0000%" y="997" width="2.4675%" height="15" fill="rgb(216,45,12)" fg:x="693" fg:w="57"/><text x="30.2500%" y="1007.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="32.4242%" y="981" width="0.0433%" height="15" fill="rgb(246,21,19)" fg:x="749" fg:w="1"/><text x="32.6742%" y="991.50"></text></g><g><title>malloc_consolidate (24 samples, 1.04%)</title><rect x="32.4675%" y="1029" width="1.0390%" height="15" fill="rgb(213,98,42)" fg:x="750" fg:w="24"/><text x="32.7175%" y="1039.50"></text></g><g><title>unlink_chunk (10 samples, 0.43%)</title><rect x="33.0736%" y="1013" width="0.4329%" height="15" fill="rgb(250,136,47)" fg:x="764" fg:w="10"/><text x="33.3236%" y="1023.50"></text></g><g><title>tlb_finish_mmu (3 samples, 0.13%)</title><rect x="33.5065%" y="869" width="0.1299%" height="15" fill="rgb(251,124,27)" fg:x="774" fg:w="3"/><text x="33.7565%" y="879.50"></text></g><g><title>tlb_flush_mmu (3 samples, 0.13%)</title><rect x="33.5065%" y="853" width="0.1299%" height="15" fill="rgb(229,180,14)" fg:x="774" fg:w="3"/><text x="33.7565%" y="863.50"></text></g><g><title>free_pages_and_swap_cache (3 samples, 0.13%)</title><rect x="33.5065%" y="837" width="0.1299%" height="15" fill="rgb(245,216,25)" fg:x="774" fg:w="3"/><text x="33.7565%" y="847.50"></text></g><g><title>release_pages (3 samples, 0.13%)</title><rect x="33.5065%" y="821" width="0.1299%" height="15" fill="rgb(251,43,5)" fg:x="774" fg:w="3"/><text x="33.7565%" y="831.50"></text></g><g><title>free_unref_page_list (3 samples, 0.13%)</title><rect x="33.5065%" y="805" width="0.1299%" height="15" fill="rgb(250,128,24)" fg:x="774" fg:w="3"/><text x="33.7565%" y="815.50"></text></g><g><title>free_unref_page_commit (3 samples, 0.13%)</title><rect x="33.5065%" y="789" width="0.1299%" height="15" fill="rgb(217,117,27)" fg:x="774" fg:w="3"/><text x="33.7565%" y="799.50"></text></g><g><title>free_pcppages_bulk (2 samples, 0.09%)</title><rect x="33.5498%" y="773" width="0.0866%" height="15" fill="rgb(245,147,4)" fg:x="775" fg:w="2"/><text x="33.7998%" y="783.50"></text></g><g><title>__tlb_remove_page_size (1 samples, 0.04%)</title><rect x="33.7662%" y="805" width="0.0433%" height="15" fill="rgb(242,201,35)" fg:x="780" fg:w="1"/><text x="34.0162%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (89 samples, 3.85%)</title><rect x="30.0000%" y="1189" width="3.8528%" height="15" fill="rgb(218,181,1)" fg:x="693" fg:w="89"/><text x="30.2500%" y="1199.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (89 samples, 3.85%)</title><rect x="30.0000%" y="1173" width="3.8528%" height="15" fill="rgb(222,6,29)" fg:x="693" fg:w="89"/><text x="30.2500%" y="1183.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (89 samples, 3.85%)</title><rect x="30.0000%" y="1157" width="3.8528%" height="15" fill="rgb(208,186,3)" fg:x="693" fg:w="89"/><text x="30.2500%" y="1167.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (89 samples, 3.85%)</title><rect x="30.0000%" y="1141" width="3.8528%" height="15" fill="rgb(216,36,26)" fg:x="693" fg:w="89"/><text x="30.2500%" y="1151.50">core..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 3.85%)</title><rect x="30.0000%" y="1125" width="3.8528%" height="15" fill="rgb(248,201,23)" fg:x="693" fg:w="89"/><text x="30.2500%" y="1135.50">&lt;has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (32 samples, 1.39%)</title><rect x="32.4675%" y="1109" width="1.3853%" height="15" fill="rgb(251,170,31)" fg:x="750" fg:w="32"/><text x="32.7175%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (32 samples, 1.39%)</title><rect x="32.4675%" y="1093" width="1.3853%" height="15" fill="rgb(207,110,25)" fg:x="750" fg:w="32"/><text x="32.7175%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (32 samples, 1.39%)</title><rect x="32.4675%" y="1077" width="1.3853%" height="15" fill="rgb(250,54,15)" fg:x="750" fg:w="32"/><text x="32.7175%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (32 samples, 1.39%)</title><rect x="32.4675%" y="1061" width="1.3853%" height="15" fill="rgb(227,68,33)" fg:x="750" fg:w="32"/><text x="32.7175%" y="1071.50"></text></g><g><title>_int_free (32 samples, 1.39%)</title><rect x="32.4675%" y="1045" width="1.3853%" height="15" fill="rgb(238,34,41)" fg:x="750" fg:w="32"/><text x="32.7175%" y="1055.50"></text></g><g><title>systrim (8 samples, 0.35%)</title><rect x="33.5065%" y="1029" width="0.3463%" height="15" fill="rgb(220,11,15)" fg:x="774" fg:w="8"/><text x="33.7565%" y="1039.50"></text></g><g><title>__GI___default_morecore (8 samples, 0.35%)</title><rect x="33.5065%" y="1013" width="0.3463%" height="15" fill="rgb(246,111,35)" fg:x="774" fg:w="8"/><text x="33.7565%" y="1023.50"></text></g><g><title>__GI___sbrk (8 samples, 0.35%)</title><rect x="33.5065%" y="997" width="0.3463%" height="15" fill="rgb(209,88,53)" fg:x="774" fg:w="8"/><text x="33.7565%" y="1007.50"></text></g><g><title>__GI___sbrk (8 samples, 0.35%)</title><rect x="33.5065%" y="981" width="0.3463%" height="15" fill="rgb(231,185,47)" fg:x="774" fg:w="8"/><text x="33.7565%" y="991.50"></text></g><g><title>__brk (8 samples, 0.35%)</title><rect x="33.5065%" y="965" width="0.3463%" height="15" fill="rgb(233,154,1)" fg:x="774" fg:w="8"/><text x="33.7565%" y="975.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.35%)</title><rect x="33.5065%" y="949" width="0.3463%" height="15" fill="rgb(225,15,46)" fg:x="774" fg:w="8"/><text x="33.7565%" y="959.50"></text></g><g><title>do_syscall_64 (8 samples, 0.35%)</title><rect x="33.5065%" y="933" width="0.3463%" height="15" fill="rgb(211,135,41)" fg:x="774" fg:w="8"/><text x="33.7565%" y="943.50"></text></g><g><title>__x64_sys_brk (8 samples, 0.35%)</title><rect x="33.5065%" y="917" width="0.3463%" height="15" fill="rgb(208,54,0)" fg:x="774" fg:w="8"/><text x="33.7565%" y="927.50"></text></g><g><title>__do_munmap (8 samples, 0.35%)</title><rect x="33.5065%" y="901" width="0.3463%" height="15" fill="rgb(244,136,14)" fg:x="774" fg:w="8"/><text x="33.7565%" y="911.50"></text></g><g><title>unmap_region (8 samples, 0.35%)</title><rect x="33.5065%" y="885" width="0.3463%" height="15" fill="rgb(241,56,14)" fg:x="774" fg:w="8"/><text x="33.7565%" y="895.50"></text></g><g><title>unmap_vmas (5 samples, 0.22%)</title><rect x="33.6364%" y="869" width="0.2165%" height="15" fill="rgb(205,80,24)" fg:x="777" fg:w="5"/><text x="33.8864%" y="879.50"></text></g><g><title>unmap_single_vma (5 samples, 0.22%)</title><rect x="33.6364%" y="853" width="0.2165%" height="15" fill="rgb(220,57,4)" fg:x="777" fg:w="5"/><text x="33.8864%" y="863.50"></text></g><g><title>unmap_page_range (5 samples, 0.22%)</title><rect x="33.6364%" y="837" width="0.2165%" height="15" fill="rgb(226,193,50)" fg:x="777" fg:w="5"/><text x="33.8864%" y="847.50"></text></g><g><title>zap_pte_range.isra.0 (5 samples, 0.22%)</title><rect x="33.6364%" y="821" width="0.2165%" height="15" fill="rgb(231,168,22)" fg:x="777" fg:w="5"/><text x="33.8864%" y="831.50"></text></g><g><title>page_remove_rmap (1 samples, 0.04%)</title><rect x="33.8095%" y="805" width="0.0433%" height="15" fill="rgb(254,215,14)" fg:x="781" fg:w="1"/><text x="34.0595%" y="815.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.04%)</title><rect x="33.8095%" y="789" width="0.0433%" height="15" fill="rgb(211,115,16)" fg:x="781" fg:w="1"/><text x="34.0595%" y="799.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.04%)</title><rect x="33.8095%" y="773" width="0.0433%" height="15" fill="rgb(236,210,16)" fg:x="781" fg:w="1"/><text x="34.0595%" y="783.50"></text></g><g><title>__mod_memcg_state (1 samples, 0.04%)</title><rect x="33.8095%" y="757" width="0.0433%" height="15" fill="rgb(221,94,12)" fg:x="781" fg:w="1"/><text x="34.0595%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="33.8528%" y="1125" width="0.0433%" height="15" fill="rgb(235,218,49)" fg:x="782" fg:w="1"/><text x="34.1028%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.04%)</title><rect x="33.8528%" y="1109" width="0.0433%" height="15" fill="rgb(217,114,14)" fg:x="782" fg:w="1"/><text x="34.1028%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.04%)</title><rect x="33.8528%" y="1093" width="0.0433%" height="15" fill="rgb(216,145,22)" fg:x="782" fg:w="1"/><text x="34.1028%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="33.8528%" y="1077" width="0.0433%" height="15" fill="rgb(217,112,39)" fg:x="782" fg:w="1"/><text x="34.1028%" y="1087.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.04%)</title><rect x="33.8528%" y="1061" width="0.0433%" height="15" fill="rgb(225,85,32)" fg:x="782" fg:w="1"/><text x="34.1028%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.04%)</title><rect x="33.8528%" y="1045" width="0.0433%" height="15" fill="rgb(245,209,47)" fg:x="782" fg:w="1"/><text x="34.1028%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.04%)</title><rect x="33.8528%" y="1029" width="0.0433%" height="15" fill="rgb(218,220,15)" fg:x="782" fg:w="1"/><text x="34.1028%" y="1039.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.04%)</title><rect x="33.8528%" y="1013" width="0.0433%" height="15" fill="rgb(222,202,31)" fg:x="782" fg:w="1"/><text x="34.1028%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.04%)</title><rect x="33.8528%" y="997" width="0.0433%" height="15" fill="rgb(243,203,4)" fg:x="782" fg:w="1"/><text x="34.1028%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="33.8528%" y="981" width="0.0433%" height="15" fill="rgb(237,92,17)" fg:x="782" fg:w="1"/><text x="34.1028%" y="991.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="33.8528%" y="965" width="0.0433%" height="15" fill="rgb(231,119,7)" fg:x="782" fg:w="1"/><text x="34.1028%" y="975.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.04%)</title><rect x="33.8528%" y="949" width="0.0433%" height="15" fill="rgb(237,82,41)" fg:x="782" fg:w="1"/><text x="34.1028%" y="959.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.04%)</title><rect x="33.8528%" y="933" width="0.0433%" height="15" fill="rgb(226,81,48)" fg:x="782" fg:w="1"/><text x="34.1028%" y="943.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.04%)</title><rect x="33.8528%" y="917" width="0.0433%" height="15" fill="rgb(234,70,51)" fg:x="782" fg:w="1"/><text x="34.1028%" y="927.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.04%)</title><rect x="33.8961%" y="1125" width="0.0433%" height="15" fill="rgb(251,86,4)" fg:x="783" fg:w="1"/><text x="34.1461%" y="1135.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.04%)</title><rect x="33.8961%" y="1109" width="0.0433%" height="15" fill="rgb(244,144,28)" fg:x="783" fg:w="1"/><text x="34.1461%" y="1119.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="33.8961%" y="1093" width="0.0433%" height="15" fill="rgb(232,161,39)" fg:x="783" fg:w="1"/><text x="34.1461%" y="1103.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="33.8961%" y="1077" width="0.0433%" height="15" fill="rgb(247,34,51)" fg:x="783" fg:w="1"/><text x="34.1461%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="33.8961%" y="1061" width="0.0433%" height="15" fill="rgb(225,132,2)" fg:x="783" fg:w="1"/><text x="34.1461%" y="1071.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="33.8961%" y="1045" width="0.0433%" height="15" fill="rgb(209,159,44)" fg:x="783" fg:w="1"/><text x="34.1461%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="33.8961%" y="1029" width="0.0433%" height="15" fill="rgb(251,214,1)" fg:x="783" fg:w="1"/><text x="34.1461%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="33.8961%" y="1013" width="0.0433%" height="15" fill="rgb(247,84,47)" fg:x="783" fg:w="1"/><text x="34.1461%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="33.8961%" y="997" width="0.0433%" height="15" fill="rgb(240,111,43)" fg:x="783" fg:w="1"/><text x="34.1461%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="33.8961%" y="981" width="0.0433%" height="15" fill="rgb(215,214,35)" fg:x="783" fg:w="1"/><text x="34.1461%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="33.8961%" y="965" width="0.0433%" height="15" fill="rgb(248,207,23)" fg:x="783" fg:w="1"/><text x="34.1461%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="33.8961%" y="949" width="0.0433%" height="15" fill="rgb(214,186,4)" fg:x="783" fg:w="1"/><text x="34.1461%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="33.8961%" y="933" width="0.0433%" height="15" fill="rgb(220,133,22)" fg:x="783" fg:w="1"/><text x="34.1461%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="33.8961%" y="917" width="0.0433%" height="15" fill="rgb(239,134,19)" fg:x="783" fg:w="1"/><text x="34.1461%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="33.8961%" y="901" width="0.0433%" height="15" fill="rgb(250,140,9)" fg:x="783" fg:w="1"/><text x="34.1461%" y="911.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="33.8961%" y="885" width="0.0433%" height="15" fill="rgb(225,59,14)" fg:x="783" fg:w="1"/><text x="34.1461%" y="895.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="33.8961%" y="869" width="0.0433%" height="15" fill="rgb(214,152,51)" fg:x="783" fg:w="1"/><text x="34.1461%" y="879.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.04%)</title><rect x="33.8961%" y="853" width="0.0433%" height="15" fill="rgb(251,227,43)" fg:x="783" fg:w="1"/><text x="34.1461%" y="863.50"></text></g><g><title>_int_realloc (1 samples, 0.04%)</title><rect x="33.8961%" y="837" width="0.0433%" height="15" fill="rgb(241,96,17)" fg:x="783" fg:w="1"/><text x="34.1461%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="33.9394%" y="1109" width="0.0433%" height="15" fill="rgb(234,198,43)" fg:x="784" fg:w="1"/><text x="34.1894%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.04%)</title><rect x="33.9394%" y="1093" width="0.0433%" height="15" fill="rgb(220,108,29)" fg:x="784" fg:w="1"/><text x="34.1894%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.04%)</title><rect x="33.9394%" y="1077" width="0.0433%" height="15" fill="rgb(226,163,33)" fg:x="784" fg:w="1"/><text x="34.1894%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="33.9394%" y="1061" width="0.0433%" height="15" fill="rgb(205,194,45)" fg:x="784" fg:w="1"/><text x="34.1894%" y="1071.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.04%)</title><rect x="33.9394%" y="1045" width="0.0433%" height="15" fill="rgb(206,143,44)" fg:x="784" fg:w="1"/><text x="34.1894%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.04%)</title><rect x="33.9394%" y="1029" width="0.0433%" height="15" fill="rgb(236,136,36)" fg:x="784" fg:w="1"/><text x="34.1894%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.04%)</title><rect x="33.9394%" y="1013" width="0.0433%" height="15" fill="rgb(249,172,42)" fg:x="784" fg:w="1"/><text x="34.1894%" y="1023.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.04%)</title><rect x="33.9394%" y="997" width="0.0433%" height="15" fill="rgb(216,139,23)" fg:x="784" fg:w="1"/><text x="34.1894%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.04%)</title><rect x="33.9394%" y="981" width="0.0433%" height="15" fill="rgb(207,166,20)" fg:x="784" fg:w="1"/><text x="34.1894%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.04%)</title><rect x="33.9827%" y="901" width="0.0433%" height="15" fill="rgb(210,209,22)" fg:x="785" fg:w="1"/><text x="34.2327%" y="911.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.09%)</title><rect x="33.9827%" y="1109" width="0.0866%" height="15" fill="rgb(232,118,20)" fg:x="785" fg:w="2"/><text x="34.2327%" y="1119.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.09%)</title><rect x="33.9827%" y="1093" width="0.0866%" height="15" fill="rgb(238,113,42)" fg:x="785" fg:w="2"/><text x="34.2327%" y="1103.50"></text></g><g><title>core::fmt::write (2 samples, 0.09%)</title><rect x="33.9827%" y="1077" width="0.0866%" height="15" fill="rgb(231,42,5)" fg:x="785" fg:w="2"/><text x="34.2327%" y="1087.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.09%)</title><rect x="33.9827%" y="1061" width="0.0866%" height="15" fill="rgb(243,166,24)" fg:x="785" fg:w="2"/><text x="34.2327%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.09%)</title><rect x="33.9827%" y="1045" width="0.0866%" height="15" fill="rgb(237,226,12)" fg:x="785" fg:w="2"/><text x="34.2327%" y="1055.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.09%)</title><rect x="33.9827%" y="1029" width="0.0866%" height="15" fill="rgb(229,133,24)" fg:x="785" fg:w="2"/><text x="34.2327%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.09%)</title><rect x="33.9827%" y="1013" width="0.0866%" height="15" fill="rgb(238,33,43)" fg:x="785" fg:w="2"/><text x="34.2327%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.09%)</title><rect x="33.9827%" y="997" width="0.0866%" height="15" fill="rgb(227,59,38)" fg:x="785" fg:w="2"/><text x="34.2327%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.09%)</title><rect x="33.9827%" y="981" width="0.0866%" height="15" fill="rgb(230,97,0)" fg:x="785" fg:w="2"/><text x="34.2327%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.09%)</title><rect x="33.9827%" y="965" width="0.0866%" height="15" fill="rgb(250,173,50)" fg:x="785" fg:w="2"/><text x="34.2327%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.09%)</title><rect x="33.9827%" y="949" width="0.0866%" height="15" fill="rgb(240,15,50)" fg:x="785" fg:w="2"/><text x="34.2327%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.09%)</title><rect x="33.9827%" y="933" width="0.0866%" height="15" fill="rgb(221,93,22)" fg:x="785" fg:w="2"/><text x="34.2327%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.09%)</title><rect x="33.9827%" y="917" width="0.0866%" height="15" fill="rgb(245,180,53)" fg:x="785" fg:w="2"/><text x="34.2327%" y="927.50"></text></g><g><title>core::cmp::max (1 samples, 0.04%)</title><rect x="34.0260%" y="901" width="0.0433%" height="15" fill="rgb(231,88,51)" fg:x="786" fg:w="1"/><text x="34.2760%" y="911.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="34.0260%" y="885" width="0.0433%" height="15" fill="rgb(240,58,21)" fg:x="786" fg:w="1"/><text x="34.2760%" y="895.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.04%)</title><rect x="34.0260%" y="869" width="0.0433%" height="15" fill="rgb(237,21,10)" fg:x="786" fg:w="1"/><text x="34.2760%" y="879.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.04%)</title><rect x="34.0693%" y="1109" width="0.0433%" height="15" fill="rgb(218,43,11)" fg:x="787" fg:w="1"/><text x="34.3193%" y="1119.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.04%)</title><rect x="34.0693%" y="1093" width="0.0433%" height="15" fill="rgb(218,221,29)" fg:x="787" fg:w="1"/><text x="34.3193%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.04%)</title><rect x="34.0693%" y="1077" width="0.0433%" height="15" fill="rgb(214,118,42)" fg:x="787" fg:w="1"/><text x="34.3193%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="34.0693%" y="1061" width="0.0433%" height="15" fill="rgb(251,200,26)" fg:x="787" fg:w="1"/><text x="34.3193%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="34.0693%" y="1045" width="0.0433%" height="15" fill="rgb(237,101,39)" fg:x="787" fg:w="1"/><text x="34.3193%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="34.0693%" y="1029" width="0.0433%" height="15" fill="rgb(251,117,11)" fg:x="787" fg:w="1"/><text x="34.3193%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="34.0693%" y="1013" width="0.0433%" height="15" fill="rgb(216,223,23)" fg:x="787" fg:w="1"/><text x="34.3193%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="34.0693%" y="997" width="0.0433%" height="15" fill="rgb(251,54,12)" fg:x="787" fg:w="1"/><text x="34.3193%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="34.0693%" y="981" width="0.0433%" height="15" fill="rgb(254,176,54)" fg:x="787" fg:w="1"/><text x="34.3193%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="34.0693%" y="965" width="0.0433%" height="15" fill="rgb(210,32,8)" fg:x="787" fg:w="1"/><text x="34.3193%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.04%)</title><rect x="34.0693%" y="949" width="0.0433%" height="15" fill="rgb(235,52,38)" fg:x="787" fg:w="1"/><text x="34.3193%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.04%)</title><rect x="34.0693%" y="933" width="0.0433%" height="15" fill="rgb(231,4,44)" fg:x="787" fg:w="1"/><text x="34.3193%" y="943.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.04%)</title><rect x="34.0693%" y="917" width="0.0433%" height="15" fill="rgb(249,2,32)" fg:x="787" fg:w="1"/><text x="34.3193%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="34.1126%" y="1093" width="0.0866%" height="15" fill="rgb(224,65,26)" fg:x="788" fg:w="2"/><text x="34.3626%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.09%)</title><rect x="34.1126%" y="1077" width="0.0866%" height="15" fill="rgb(250,73,40)" fg:x="788" fg:w="2"/><text x="34.3626%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.09%)</title><rect x="34.1126%" y="1061" width="0.0866%" height="15" fill="rgb(253,177,16)" fg:x="788" fg:w="2"/><text x="34.3626%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.09%)</title><rect x="34.1126%" y="1045" width="0.0866%" height="15" fill="rgb(217,32,34)" fg:x="788" fg:w="2"/><text x="34.3626%" y="1055.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.09%)</title><rect x="34.1126%" y="1029" width="0.0866%" height="15" fill="rgb(212,7,10)" fg:x="788" fg:w="2"/><text x="34.3626%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.09%)</title><rect x="34.1126%" y="1013" width="0.0866%" height="15" fill="rgb(245,89,8)" fg:x="788" fg:w="2"/><text x="34.3626%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.09%)</title><rect x="34.1126%" y="997" width="0.0866%" height="15" fill="rgb(237,16,53)" fg:x="788" fg:w="2"/><text x="34.3626%" y="1007.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.09%)</title><rect x="34.1126%" y="981" width="0.0866%" height="15" fill="rgb(250,204,30)" fg:x="788" fg:w="2"/><text x="34.3626%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.09%)</title><rect x="34.1126%" y="965" width="0.0866%" height="15" fill="rgb(208,77,27)" fg:x="788" fg:w="2"/><text x="34.3626%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="34.1558%" y="949" width="0.0433%" height="15" fill="rgb(250,204,28)" fg:x="789" fg:w="1"/><text x="34.4058%" y="959.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="34.1558%" y="933" width="0.0433%" height="15" fill="rgb(244,63,21)" fg:x="789" fg:w="1"/><text x="34.4058%" y="943.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.04%)</title><rect x="34.1558%" y="917" width="0.0433%" height="15" fill="rgb(236,85,44)" fg:x="789" fg:w="1"/><text x="34.4058%" y="927.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.04%)</title><rect x="34.1558%" y="901" width="0.0433%" height="15" fill="rgb(215,98,4)" fg:x="789" fg:w="1"/><text x="34.4058%" y="911.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.04%)</title><rect x="34.1558%" y="885" width="0.0433%" height="15" fill="rgb(235,38,11)" fg:x="789" fg:w="1"/><text x="34.4058%" y="895.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.04%)</title><rect x="34.1558%" y="869" width="0.0433%" height="15" fill="rgb(254,186,25)" fg:x="789" fg:w="1"/><text x="34.4058%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="34.1991%" y="885" width="0.0433%" height="15" fill="rgb(225,55,31)" fg:x="790" fg:w="1"/><text x="34.4491%" y="895.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="34.2424%" y="789" width="0.0433%" height="15" fill="rgb(211,15,21)" fg:x="791" fg:w="1"/><text x="34.4924%" y="799.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.09%)</title><rect x="34.2424%" y="821" width="0.0866%" height="15" fill="rgb(215,187,41)" fg:x="791" fg:w="2"/><text x="34.4924%" y="831.50"></text></g><g><title>_int_realloc (2 samples, 0.09%)</title><rect x="34.2424%" y="805" width="0.0866%" height="15" fill="rgb(248,69,32)" fg:x="791" fg:w="2"/><text x="34.4924%" y="815.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="34.2857%" y="789" width="0.0433%" height="15" fill="rgb(252,102,52)" fg:x="792" fg:w="1"/><text x="34.5357%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.22%)</title><rect x="34.2424%" y="869" width="0.2165%" height="15" fill="rgb(253,140,32)" fg:x="791" fg:w="5"/><text x="34.4924%" y="879.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.22%)</title><rect x="34.2424%" y="853" width="0.2165%" height="15" fill="rgb(216,56,42)" fg:x="791" fg:w="5"/><text x="34.4924%" y="863.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.22%)</title><rect x="34.2424%" y="837" width="0.2165%" height="15" fill="rgb(216,184,14)" fg:x="791" fg:w="5"/><text x="34.4924%" y="847.50"></text></g><g><title>__rust_realloc (3 samples, 0.13%)</title><rect x="34.3290%" y="821" width="0.1299%" height="15" fill="rgb(237,187,27)" fg:x="793" fg:w="3"/><text x="34.5790%" y="831.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.30%)</title><rect x="34.1991%" y="1045" width="0.3030%" height="15" fill="rgb(219,65,3)" fg:x="790" fg:w="7"/><text x="34.4491%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.30%)</title><rect x="34.1991%" y="1029" width="0.3030%" height="15" fill="rgb(245,83,25)" fg:x="790" fg:w="7"/><text x="34.4491%" y="1039.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.30%)</title><rect x="34.1991%" y="1013" width="0.3030%" height="15" fill="rgb(214,205,45)" fg:x="790" fg:w="7"/><text x="34.4491%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.30%)</title><rect x="34.1991%" y="997" width="0.3030%" height="15" fill="rgb(241,20,18)" fg:x="790" fg:w="7"/><text x="34.4491%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.30%)</title><rect x="34.1991%" y="981" width="0.3030%" height="15" fill="rgb(232,163,23)" fg:x="790" fg:w="7"/><text x="34.4491%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.30%)</title><rect x="34.1991%" y="965" width="0.3030%" height="15" fill="rgb(214,5,46)" fg:x="790" fg:w="7"/><text x="34.4491%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.30%)</title><rect x="34.1991%" y="949" width="0.3030%" height="15" fill="rgb(229,78,17)" fg:x="790" fg:w="7"/><text x="34.4491%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.30%)</title><rect x="34.1991%" y="933" width="0.3030%" height="15" fill="rgb(248,89,10)" fg:x="790" fg:w="7"/><text x="34.4491%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.30%)</title><rect x="34.1991%" y="917" width="0.3030%" height="15" fill="rgb(248,54,15)" fg:x="790" fg:w="7"/><text x="34.4491%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.30%)</title><rect x="34.1991%" y="901" width="0.3030%" height="15" fill="rgb(223,116,6)" fg:x="790" fg:w="7"/><text x="34.4491%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.26%)</title><rect x="34.2424%" y="885" width="0.2597%" height="15" fill="rgb(205,125,38)" fg:x="791" fg:w="6"/><text x="34.4924%" y="895.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="34.4589%" y="869" width="0.0433%" height="15" fill="rgb(251,78,38)" fg:x="796" fg:w="1"/><text x="34.7089%" y="879.50"></text></g><g><title>tcache_get (1 samples, 0.04%)</title><rect x="34.4589%" y="853" width="0.0433%" height="15" fill="rgb(253,78,28)" fg:x="796" fg:w="1"/><text x="34.7089%" y="863.50"></text></g><g><title>alloc::fmt::format (8 samples, 0.35%)</title><rect x="34.1991%" y="1093" width="0.3463%" height="15" fill="rgb(209,120,3)" fg:x="790" fg:w="8"/><text x="34.4491%" y="1103.50"></text></g><g><title>core::fmt::Write::write_fmt (8 samples, 0.35%)</title><rect x="34.1991%" y="1077" width="0.3463%" height="15" fill="rgb(238,229,9)" fg:x="790" fg:w="8"/><text x="34.4491%" y="1087.50"></text></g><g><title>core::fmt::write (8 samples, 0.35%)</title><rect x="34.1991%" y="1061" width="0.3463%" height="15" fill="rgb(253,159,18)" fg:x="790" fg:w="8"/><text x="34.4491%" y="1071.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.04%)</title><rect x="34.5022%" y="1045" width="0.0433%" height="15" fill="rgb(244,42,34)" fg:x="797" fg:w="1"/><text x="34.7522%" y="1055.50"></text></g><g><title>__GI___libc_free (1 samples, 0.04%)</title><rect x="34.5455%" y="997" width="0.0433%" height="15" fill="rgb(224,8,7)" fg:x="798" fg:w="1"/><text x="34.7955%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.09%)</title><rect x="34.5455%" y="1093" width="0.0866%" height="15" fill="rgb(210,201,45)" fg:x="798" fg:w="2"/><text x="34.7955%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.09%)</title><rect x="34.5455%" y="1077" width="0.0866%" height="15" fill="rgb(252,185,21)" fg:x="798" fg:w="2"/><text x="34.7955%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.09%)</title><rect x="34.5455%" y="1061" width="0.0866%" height="15" fill="rgb(223,131,1)" fg:x="798" fg:w="2"/><text x="34.7955%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="34.5455%" y="1045" width="0.0866%" height="15" fill="rgb(245,141,16)" fg:x="798" fg:w="2"/><text x="34.7955%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="34.5455%" y="1029" width="0.0866%" height="15" fill="rgb(229,55,45)" fg:x="798" fg:w="2"/><text x="34.7955%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.09%)</title><rect x="34.5455%" y="1013" width="0.0866%" height="15" fill="rgb(208,92,15)" fg:x="798" fg:w="2"/><text x="34.7955%" y="1023.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="34.5887%" y="997" width="0.0433%" height="15" fill="rgb(234,185,47)" fg:x="799" fg:w="1"/><text x="34.8387%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="34.6320%" y="1029" width="0.0433%" height="15" fill="rgb(253,104,50)" fg:x="800" fg:w="1"/><text x="34.8820%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="34.6320%" y="1013" width="0.0433%" height="15" fill="rgb(205,70,7)" fg:x="800" fg:w="1"/><text x="34.8820%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="34.6320%" y="997" width="0.0433%" height="15" fill="rgb(240,178,43)" fg:x="800" fg:w="1"/><text x="34.8820%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="34.6320%" y="981" width="0.0433%" height="15" fill="rgb(214,112,2)" fg:x="800" fg:w="1"/><text x="34.8820%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="34.6320%" y="965" width="0.0433%" height="15" fill="rgb(206,46,17)" fg:x="800" fg:w="1"/><text x="34.8820%" y="975.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.09%)</title><rect x="34.6320%" y="1093" width="0.0866%" height="15" fill="rgb(225,220,16)" fg:x="800" fg:w="2"/><text x="34.8820%" y="1103.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.09%)</title><rect x="34.6320%" y="1077" width="0.0866%" height="15" fill="rgb(238,65,40)" fg:x="800" fg:w="2"/><text x="34.8820%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.09%)</title><rect x="34.6320%" y="1061" width="0.0866%" height="15" fill="rgb(230,151,21)" fg:x="800" fg:w="2"/><text x="34.8820%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.09%)</title><rect x="34.6320%" y="1045" width="0.0866%" height="15" fill="rgb(218,58,49)" fg:x="800" fg:w="2"/><text x="34.8820%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="34.6753%" y="1029" width="0.0433%" height="15" fill="rgb(219,179,14)" fg:x="801" fg:w="1"/><text x="34.9253%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="34.6753%" y="1013" width="0.0433%" height="15" fill="rgb(223,72,1)" fg:x="801" fg:w="1"/><text x="34.9253%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="34.6753%" y="997" width="0.0433%" height="15" fill="rgb(238,126,10)" fg:x="801" fg:w="1"/><text x="34.9253%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="34.6753%" y="981" width="0.0433%" height="15" fill="rgb(224,206,38)" fg:x="801" fg:w="1"/><text x="34.9253%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="34.6753%" y="965" width="0.0433%" height="15" fill="rgb(212,201,54)" fg:x="801" fg:w="1"/><text x="34.9253%" y="975.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="34.6753%" y="949" width="0.0433%" height="15" fill="rgb(218,154,48)" fg:x="801" fg:w="1"/><text x="34.9253%" y="959.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="34.9784%" y="853" width="0.0433%" height="15" fill="rgb(232,93,24)" fg:x="808" fg:w="1"/><text x="35.2284%" y="863.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="34.9784%" y="837" width="0.0433%" height="15" fill="rgb(245,30,21)" fg:x="808" fg:w="1"/><text x="35.2284%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (8 samples, 0.35%)</title><rect x="34.7186%" y="949" width="0.3463%" height="15" fill="rgb(242,148,29)" fg:x="802" fg:w="8"/><text x="34.9686%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.30%)</title><rect x="34.7619%" y="933" width="0.3030%" height="15" fill="rgb(244,153,54)" fg:x="803" fg:w="7"/><text x="35.0119%" y="943.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.26%)</title><rect x="34.8052%" y="917" width="0.2597%" height="15" fill="rgb(252,87,22)" fg:x="804" fg:w="6"/><text x="35.0552%" y="927.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (6 samples, 0.26%)</title><rect x="34.8052%" y="901" width="0.2597%" height="15" fill="rgb(210,51,29)" fg:x="804" fg:w="6"/><text x="35.0552%" y="911.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (6 samples, 0.26%)</title><rect x="34.8052%" y="885" width="0.2597%" height="15" fill="rgb(242,136,47)" fg:x="804" fg:w="6"/><text x="35.0552%" y="895.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (5 samples, 0.22%)</title><rect x="34.8485%" y="869" width="0.2165%" height="15" fill="rgb(238,68,4)" fg:x="805" fg:w="5"/><text x="35.0985%" y="879.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.04%)</title><rect x="35.0216%" y="853" width="0.0433%" height="15" fill="rgb(242,161,30)" fg:x="809" fg:w="1"/><text x="35.2716%" y="863.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="35.1515%" y="869" width="0.0433%" height="15" fill="rgb(218,58,44)" fg:x="812" fg:w="1"/><text x="35.4015%" y="879.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="35.1515%" y="853" width="0.0433%" height="15" fill="rgb(252,125,32)" fg:x="812" fg:w="1"/><text x="35.4015%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.56%)</title><rect x="34.7186%" y="1077" width="0.5628%" height="15" fill="rgb(219,178,0)" fg:x="802" fg:w="13"/><text x="34.9686%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (13 samples, 0.56%)</title><rect x="34.7186%" y="1061" width="0.5628%" height="15" fill="rgb(213,152,7)" fg:x="802" fg:w="13"/><text x="34.9686%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.56%)</title><rect x="34.7186%" y="1045" width="0.5628%" height="15" fill="rgb(249,109,34)" fg:x="802" fg:w="13"/><text x="34.9686%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.56%)</title><rect x="34.7186%" y="1029" width="0.5628%" height="15" fill="rgb(232,96,21)" fg:x="802" fg:w="13"/><text x="34.9686%" y="1039.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (13 samples, 0.56%)</title><rect x="34.7186%" y="1013" width="0.5628%" height="15" fill="rgb(228,27,39)" fg:x="802" fg:w="13"/><text x="34.9686%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (13 samples, 0.56%)</title><rect x="34.7186%" y="997" width="0.5628%" height="15" fill="rgb(211,182,52)" fg:x="802" fg:w="13"/><text x="34.9686%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.56%)</title><rect x="34.7186%" y="981" width="0.5628%" height="15" fill="rgb(234,178,38)" fg:x="802" fg:w="13"/><text x="34.9686%" y="991.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (13 samples, 0.56%)</title><rect x="34.7186%" y="965" width="0.5628%" height="15" fill="rgb(221,111,3)" fg:x="802" fg:w="13"/><text x="34.9686%" y="975.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (5 samples, 0.22%)</title><rect x="35.0649%" y="949" width="0.2165%" height="15" fill="rgb(228,175,21)" fg:x="810" fg:w="5"/><text x="35.3149%" y="959.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (5 samples, 0.22%)</title><rect x="35.0649%" y="933" width="0.2165%" height="15" fill="rgb(228,174,43)" fg:x="810" fg:w="5"/><text x="35.3149%" y="943.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (5 samples, 0.22%)</title><rect x="35.0649%" y="917" width="0.2165%" height="15" fill="rgb(211,191,0)" fg:x="810" fg:w="5"/><text x="35.3149%" y="927.50"></text></g><g><title>core::str::pattern::StrSearcher::new (5 samples, 0.22%)</title><rect x="35.0649%" y="901" width="0.2165%" height="15" fill="rgb(253,117,3)" fg:x="810" fg:w="5"/><text x="35.3149%" y="911.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (3 samples, 0.13%)</title><rect x="35.1515%" y="885" width="0.1299%" height="15" fill="rgb(241,127,19)" fg:x="812" fg:w="3"/><text x="35.4015%" y="895.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (2 samples, 0.09%)</title><rect x="35.1948%" y="869" width="0.0866%" height="15" fill="rgb(218,103,12)" fg:x="813" fg:w="2"/><text x="35.4448%" y="879.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.09%)</title><rect x="35.3247%" y="1029" width="0.0866%" height="15" fill="rgb(236,214,43)" fg:x="816" fg:w="2"/><text x="35.5747%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="35.4113%" y="869" width="0.0433%" height="15" fill="rgb(244,144,19)" fg:x="818" fg:w="1"/><text x="35.6613%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (4 samples, 0.17%)</title><rect x="35.4545%" y="869" width="0.1732%" height="15" fill="rgb(246,188,10)" fg:x="819" fg:w="4"/><text x="35.7045%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="35.7576%" y="773" width="0.0433%" height="15" fill="rgb(212,193,33)" fg:x="826" fg:w="1"/><text x="36.0076%" y="783.50"></text></g><g><title>_int_free (2 samples, 0.09%)</title><rect x="35.8009%" y="773" width="0.0866%" height="15" fill="rgb(241,51,29)" fg:x="827" fg:w="2"/><text x="36.0509%" y="783.50"></text></g><g><title>_int_realloc (5 samples, 0.22%)</title><rect x="35.7143%" y="789" width="0.2165%" height="15" fill="rgb(211,58,19)" fg:x="825" fg:w="5"/><text x="35.9643%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="35.8874%" y="773" width="0.0433%" height="15" fill="rgb(229,111,26)" fg:x="829" fg:w="1"/><text x="36.1374%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.30%)</title><rect x="35.6710%" y="853" width="0.3030%" height="15" fill="rgb(213,115,40)" fg:x="824" fg:w="7"/><text x="35.9210%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.30%)</title><rect x="35.6710%" y="837" width="0.3030%" height="15" fill="rgb(209,56,44)" fg:x="824" fg:w="7"/><text x="35.9210%" y="847.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.30%)</title><rect x="35.6710%" y="821" width="0.3030%" height="15" fill="rgb(230,108,32)" fg:x="824" fg:w="7"/><text x="35.9210%" y="831.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.30%)</title><rect x="35.6710%" y="805" width="0.3030%" height="15" fill="rgb(216,165,31)" fg:x="824" fg:w="7"/><text x="35.9210%" y="815.50"></text></g><g><title>checked_request2size (1 samples, 0.04%)</title><rect x="35.9307%" y="789" width="0.0433%" height="15" fill="rgb(218,122,21)" fg:x="830" fg:w="1"/><text x="36.1807%" y="799.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="35.9740%" y="853" width="0.0433%" height="15" fill="rgb(223,224,47)" fg:x="831" fg:w="1"/><text x="36.2240%" y="863.50"></text></g><g><title>tcache_get (1 samples, 0.04%)</title><rect x="35.9740%" y="837" width="0.0433%" height="15" fill="rgb(238,102,44)" fg:x="831" fg:w="1"/><text x="36.2240%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (15 samples, 0.65%)</title><rect x="35.4113%" y="1029" width="0.6494%" height="15" fill="rgb(236,46,40)" fg:x="818" fg:w="15"/><text x="35.6613%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15 samples, 0.65%)</title><rect x="35.4113%" y="1013" width="0.6494%" height="15" fill="rgb(247,202,50)" fg:x="818" fg:w="15"/><text x="35.6613%" y="1023.50"></text></g><g><title>alloc::string::String::push_str (15 samples, 0.65%)</title><rect x="35.4113%" y="997" width="0.6494%" height="15" fill="rgb(209,99,20)" fg:x="818" fg:w="15"/><text x="35.6613%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.65%)</title><rect x="35.4113%" y="981" width="0.6494%" height="15" fill="rgb(252,27,34)" fg:x="818" fg:w="15"/><text x="35.6613%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.65%)</title><rect x="35.4113%" y="965" width="0.6494%" height="15" fill="rgb(215,206,23)" fg:x="818" fg:w="15"/><text x="35.6613%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.65%)</title><rect x="35.4113%" y="949" width="0.6494%" height="15" fill="rgb(212,135,36)" fg:x="818" fg:w="15"/><text x="35.6613%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (15 samples, 0.65%)</title><rect x="35.4113%" y="933" width="0.6494%" height="15" fill="rgb(240,189,1)" fg:x="818" fg:w="15"/><text x="35.6613%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.65%)</title><rect x="35.4113%" y="917" width="0.6494%" height="15" fill="rgb(242,56,20)" fg:x="818" fg:w="15"/><text x="35.6613%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.65%)</title><rect x="35.4113%" y="901" width="0.6494%" height="15" fill="rgb(247,132,33)" fg:x="818" fg:w="15"/><text x="35.6613%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (15 samples, 0.65%)</title><rect x="35.4113%" y="885" width="0.6494%" height="15" fill="rgb(208,149,11)" fg:x="818" fg:w="15"/><text x="35.6613%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.43%)</title><rect x="35.6277%" y="869" width="0.4329%" height="15" fill="rgb(211,33,11)" fg:x="823" fg:w="10"/><text x="35.8777%" y="879.50"></text></g><g><title>__rdl_alloc (1 samples, 0.04%)</title><rect x="36.0173%" y="853" width="0.0433%" height="15" fill="rgb(221,29,38)" fg:x="832" fg:w="1"/><text x="36.2673%" y="863.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="36.0173%" y="837" width="0.0433%" height="15" fill="rgb(206,182,49)" fg:x="832" fg:w="1"/><text x="36.2673%" y="847.50"></text></g><g><title>alloc::fmt::format (19 samples, 0.82%)</title><rect x="35.2814%" y="1077" width="0.8225%" height="15" fill="rgb(216,140,1)" fg:x="815" fg:w="19"/><text x="35.5314%" y="1087.50"></text></g><g><title>core::fmt::Write::write_fmt (19 samples, 0.82%)</title><rect x="35.2814%" y="1061" width="0.8225%" height="15" fill="rgb(232,57,40)" fg:x="815" fg:w="19"/><text x="35.5314%" y="1071.50"></text></g><g><title>core::fmt::write (19 samples, 0.82%)</title><rect x="35.2814%" y="1045" width="0.8225%" height="15" fill="rgb(224,186,18)" fg:x="815" fg:w="19"/><text x="35.5314%" y="1055.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="36.0606%" y="1029" width="0.0433%" height="15" fill="rgb(215,121,11)" fg:x="833" fg:w="1"/><text x="36.3106%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="36.1039%" y="1077" width="0.0433%" height="15" fill="rgb(245,147,10)" fg:x="834" fg:w="1"/><text x="36.3539%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="36.1039%" y="1061" width="0.0433%" height="15" fill="rgb(238,153,13)" fg:x="834" fg:w="1"/><text x="36.3539%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="36.1039%" y="1045" width="0.0433%" height="15" fill="rgb(233,108,0)" fg:x="834" fg:w="1"/><text x="36.3539%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="36.1039%" y="1029" width="0.0433%" height="15" fill="rgb(212,157,17)" fg:x="834" fg:w="1"/><text x="36.3539%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="36.1039%" y="1013" width="0.0433%" height="15" fill="rgb(225,213,38)" fg:x="834" fg:w="1"/><text x="36.3539%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="36.1039%" y="997" width="0.0433%" height="15" fill="rgb(248,16,11)" fg:x="834" fg:w="1"/><text x="36.3539%" y="1007.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="36.1039%" y="981" width="0.0433%" height="15" fill="rgb(241,33,4)" fg:x="834" fg:w="1"/><text x="36.3539%" y="991.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="36.1472%" y="1029" width="0.0433%" height="15" fill="rgb(222,26,43)" fg:x="835" fg:w="1"/><text x="36.3972%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="36.1472%" y="1013" width="0.0433%" height="15" fill="rgb(243,29,36)" fg:x="835" fg:w="1"/><text x="36.3972%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="36.1472%" y="997" width="0.0433%" height="15" fill="rgb(241,9,27)" fg:x="835" fg:w="1"/><text x="36.3972%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="36.1472%" y="981" width="0.0433%" height="15" fill="rgb(205,117,26)" fg:x="835" fg:w="1"/><text x="36.3972%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="36.1472%" y="965" width="0.0433%" height="15" fill="rgb(209,80,39)" fg:x="835" fg:w="1"/><text x="36.3972%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="36.1472%" y="949" width="0.0433%" height="15" fill="rgb(239,155,6)" fg:x="835" fg:w="1"/><text x="36.3972%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.13%)</title><rect x="36.1472%" y="1077" width="0.1299%" height="15" fill="rgb(212,104,12)" fg:x="835" fg:w="3"/><text x="36.3972%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.13%)</title><rect x="36.1472%" y="1061" width="0.1299%" height="15" fill="rgb(234,204,3)" fg:x="835" fg:w="3"/><text x="36.3972%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.13%)</title><rect x="36.1472%" y="1045" width="0.1299%" height="15" fill="rgb(251,218,7)" fg:x="835" fg:w="3"/><text x="36.3972%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.09%)</title><rect x="36.1905%" y="1029" width="0.0866%" height="15" fill="rgb(221,81,32)" fg:x="836" fg:w="2"/><text x="36.4405%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.09%)</title><rect x="36.1905%" y="1013" width="0.0866%" height="15" fill="rgb(214,152,26)" fg:x="836" fg:w="2"/><text x="36.4405%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="36.2771%" y="981" width="0.0433%" height="15" fill="rgb(223,22,3)" fg:x="838" fg:w="1"/><text x="36.5271%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="36.2771%" y="965" width="0.0433%" height="15" fill="rgb(207,174,7)" fg:x="838" fg:w="1"/><text x="36.5271%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="36.2771%" y="949" width="0.0433%" height="15" fill="rgb(224,19,52)" fg:x="838" fg:w="1"/><text x="36.5271%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.09%)</title><rect x="36.2771%" y="997" width="0.0866%" height="15" fill="rgb(228,24,14)" fg:x="838" fg:w="2"/><text x="36.5271%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.04%)</title><rect x="36.3203%" y="981" width="0.0433%" height="15" fill="rgb(230,153,43)" fg:x="839" fg:w="1"/><text x="36.5703%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="36.3203%" y="965" width="0.0433%" height="15" fill="rgb(231,106,12)" fg:x="839" fg:w="1"/><text x="36.5703%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="36.3636%" y="933" width="0.0433%" height="15" fill="rgb(215,92,2)" fg:x="840" fg:w="1"/><text x="36.6136%" y="943.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.22%)</title><rect x="36.2771%" y="1013" width="0.2165%" height="15" fill="rgb(249,143,25)" fg:x="838" fg:w="5"/><text x="36.5271%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="36.3636%" y="997" width="0.1299%" height="15" fill="rgb(252,7,35)" fg:x="840" fg:w="3"/><text x="36.6136%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="36.3636%" y="981" width="0.1299%" height="15" fill="rgb(216,69,40)" fg:x="840" fg:w="3"/><text x="36.6136%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="36.3636%" y="965" width="0.1299%" height="15" fill="rgb(240,36,33)" fg:x="840" fg:w="3"/><text x="36.6136%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.13%)</title><rect x="36.3636%" y="949" width="0.1299%" height="15" fill="rgb(231,128,14)" fg:x="840" fg:w="3"/><text x="36.6136%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.09%)</title><rect x="36.4069%" y="933" width="0.0866%" height="15" fill="rgb(245,143,14)" fg:x="841" fg:w="2"/><text x="36.6569%" y="943.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (7 samples, 0.30%)</title><rect x="36.2771%" y="1077" width="0.3030%" height="15" fill="rgb(222,130,28)" fg:x="838" fg:w="7"/><text x="36.5271%" y="1087.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (7 samples, 0.30%)</title><rect x="36.2771%" y="1061" width="0.3030%" height="15" fill="rgb(212,10,48)" fg:x="838" fg:w="7"/><text x="36.5271%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (7 samples, 0.30%)</title><rect x="36.2771%" y="1045" width="0.3030%" height="15" fill="rgb(254,118,45)" fg:x="838" fg:w="7"/><text x="36.5271%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.30%)</title><rect x="36.2771%" y="1029" width="0.3030%" height="15" fill="rgb(228,6,45)" fg:x="838" fg:w="7"/><text x="36.5271%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.09%)</title><rect x="36.4935%" y="1013" width="0.0866%" height="15" fill="rgb(241,18,35)" fg:x="843" fg:w="2"/><text x="36.7435%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.09%)</title><rect x="36.4935%" y="997" width="0.0866%" height="15" fill="rgb(227,214,53)" fg:x="843" fg:w="2"/><text x="36.7435%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="36.4935%" y="981" width="0.0866%" height="15" fill="rgb(224,107,51)" fg:x="843" fg:w="2"/><text x="36.7435%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="36.5368%" y="965" width="0.0433%" height="15" fill="rgb(248,60,28)" fg:x="844" fg:w="1"/><text x="36.7868%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="36.5368%" y="949" width="0.0433%" height="15" fill="rgb(249,101,23)" fg:x="844" fg:w="1"/><text x="36.7868%" y="959.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="36.5368%" y="933" width="0.0433%" height="15" fill="rgb(228,51,19)" fg:x="844" fg:w="1"/><text x="36.7868%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.22%)</title><rect x="36.7532%" y="933" width="0.2165%" height="15" fill="rgb(213,20,6)" fg:x="849" fg:w="5"/><text x="37.0032%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.22%)</title><rect x="36.7532%" y="917" width="0.2165%" height="15" fill="rgb(212,124,10)" fg:x="849" fg:w="5"/><text x="37.0032%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.22%)</title><rect x="36.7532%" y="901" width="0.2165%" height="15" fill="rgb(248,3,40)" fg:x="849" fg:w="5"/><text x="37.0032%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.22%)</title><rect x="36.7532%" y="885" width="0.2165%" height="15" fill="rgb(223,178,23)" fg:x="849" fg:w="5"/><text x="37.0032%" y="895.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.22%)</title><rect x="36.7532%" y="869" width="0.2165%" height="15" fill="rgb(240,132,45)" fg:x="849" fg:w="5"/><text x="37.0032%" y="879.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.22%)</title><rect x="36.7532%" y="853" width="0.2165%" height="15" fill="rgb(245,164,36)" fg:x="849" fg:w="5"/><text x="37.0032%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.17%)</title><rect x="36.7965%" y="837" width="0.1732%" height="15" fill="rgb(231,188,53)" fg:x="850" fg:w="4"/><text x="37.0465%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.04%)</title><rect x="36.9697%" y="933" width="0.0433%" height="15" fill="rgb(237,198,39)" fg:x="854" fg:w="1"/><text x="37.2197%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="36.9697%" y="917" width="0.0433%" height="15" fill="rgb(223,120,35)" fg:x="854" fg:w="1"/><text x="37.2197%" y="927.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="36.9697%" y="901" width="0.0433%" height="15" fill="rgb(253,107,49)" fg:x="854" fg:w="1"/><text x="37.2197%" y="911.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.04%)</title><rect x="36.9697%" y="885" width="0.0433%" height="15" fill="rgb(216,44,31)" fg:x="854" fg:w="1"/><text x="37.2197%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="36.9697%" y="869" width="0.0433%" height="15" fill="rgb(253,87,21)" fg:x="854" fg:w="1"/><text x="37.2197%" y="879.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="36.9697%" y="853" width="0.0433%" height="15" fill="rgb(226,18,2)" fg:x="854" fg:w="1"/><text x="37.2197%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="36.9697%" y="837" width="0.0433%" height="15" fill="rgb(216,8,46)" fg:x="854" fg:w="1"/><text x="37.2197%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="37.5325%" y="837" width="0.0433%" height="15" fill="rgb(226,140,39)" fg:x="867" fg:w="1"/><text x="37.7825%" y="847.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.04%)</title><rect x="37.5325%" y="821" width="0.0433%" height="15" fill="rgb(221,194,54)" fg:x="867" fg:w="1"/><text x="37.7825%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.04%)</title><rect x="37.5325%" y="805" width="0.0433%" height="15" fill="rgb(213,92,11)" fg:x="867" fg:w="1"/><text x="37.7825%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="37.5758%" y="837" width="0.0433%" height="15" fill="rgb(229,162,46)" fg:x="868" fg:w="1"/><text x="37.8258%" y="847.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="37.5758%" y="821" width="0.0433%" height="15" fill="rgb(214,111,36)" fg:x="868" fg:w="1"/><text x="37.8258%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (16 samples, 0.69%)</title><rect x="37.0130%" y="933" width="0.6926%" height="15" fill="rgb(207,6,21)" fg:x="855" fg:w="16"/><text x="37.2630%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.52%)</title><rect x="37.1861%" y="917" width="0.5195%" height="15" fill="rgb(213,127,38)" fg:x="859" fg:w="12"/><text x="37.4361%" y="927.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.52%)</title><rect x="37.1861%" y="901" width="0.5195%" height="15" fill="rgb(238,118,32)" fg:x="859" fg:w="12"/><text x="37.4361%" y="911.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (12 samples, 0.52%)</title><rect x="37.1861%" y="885" width="0.5195%" height="15" fill="rgb(240,139,39)" fg:x="859" fg:w="12"/><text x="37.4361%" y="895.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (12 samples, 0.52%)</title><rect x="37.1861%" y="869" width="0.5195%" height="15" fill="rgb(235,10,37)" fg:x="859" fg:w="12"/><text x="37.4361%" y="879.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (12 samples, 0.52%)</title><rect x="37.1861%" y="853" width="0.5195%" height="15" fill="rgb(249,171,38)" fg:x="859" fg:w="12"/><text x="37.4361%" y="863.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (2 samples, 0.09%)</title><rect x="37.6190%" y="837" width="0.0866%" height="15" fill="rgb(242,144,32)" fg:x="869" fg:w="2"/><text x="37.8690%" y="847.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="37.7922%" y="853" width="0.0433%" height="15" fill="rgb(217,117,21)" fg:x="873" fg:w="1"/><text x="38.0422%" y="863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="37.7922%" y="837" width="0.0433%" height="15" fill="rgb(249,87,1)" fg:x="873" fg:w="1"/><text x="38.0422%" y="847.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="37.7922%" y="821" width="0.0433%" height="15" fill="rgb(248,196,48)" fg:x="873" fg:w="1"/><text x="38.0422%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 1.13%)</title><rect x="36.7532%" y="1061" width="1.1255%" height="15" fill="rgb(251,206,33)" fg:x="849" fg:w="26"/><text x="37.0032%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (26 samples, 1.13%)</title><rect x="36.7532%" y="1045" width="1.1255%" height="15" fill="rgb(232,141,28)" fg:x="849" fg:w="26"/><text x="37.0032%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 1.13%)</title><rect x="36.7532%" y="1029" width="1.1255%" height="15" fill="rgb(209,167,14)" fg:x="849" fg:w="26"/><text x="37.0032%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 1.13%)</title><rect x="36.7532%" y="1013" width="1.1255%" height="15" fill="rgb(225,11,50)" fg:x="849" fg:w="26"/><text x="37.0032%" y="1023.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (26 samples, 1.13%)</title><rect x="36.7532%" y="997" width="1.1255%" height="15" fill="rgb(209,50,20)" fg:x="849" fg:w="26"/><text x="37.0032%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (26 samples, 1.13%)</title><rect x="36.7532%" y="981" width="1.1255%" height="15" fill="rgb(212,17,46)" fg:x="849" fg:w="26"/><text x="37.0032%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (26 samples, 1.13%)</title><rect x="36.7532%" y="965" width="1.1255%" height="15" fill="rgb(216,101,39)" fg:x="849" fg:w="26"/><text x="37.0032%" y="975.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (26 samples, 1.13%)</title><rect x="36.7532%" y="949" width="1.1255%" height="15" fill="rgb(212,228,48)" fg:x="849" fg:w="26"/><text x="37.0032%" y="959.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (4 samples, 0.17%)</title><rect x="37.7056%" y="933" width="0.1732%" height="15" fill="rgb(250,6,50)" fg:x="871" fg:w="4"/><text x="37.9556%" y="943.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (4 samples, 0.17%)</title><rect x="37.7056%" y="917" width="0.1732%" height="15" fill="rgb(250,160,48)" fg:x="871" fg:w="4"/><text x="37.9556%" y="927.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (4 samples, 0.17%)</title><rect x="37.7056%" y="901" width="0.1732%" height="15" fill="rgb(244,216,33)" fg:x="871" fg:w="4"/><text x="37.9556%" y="911.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3 samples, 0.13%)</title><rect x="37.7489%" y="885" width="0.1299%" height="15" fill="rgb(207,157,5)" fg:x="872" fg:w="3"/><text x="37.9989%" y="895.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2 samples, 0.09%)</title><rect x="37.7922%" y="869" width="0.0866%" height="15" fill="rgb(228,199,8)" fg:x="873" fg:w="2"/><text x="38.0422%" y="879.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.04%)</title><rect x="37.8355%" y="853" width="0.0433%" height="15" fill="rgb(227,80,20)" fg:x="874" fg:w="1"/><text x="38.0855%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="38.0519%" y="853" width="0.0433%" height="15" fill="rgb(222,9,33)" fg:x="879" fg:w="1"/><text x="38.3019%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (3 samples, 0.13%)</title><rect x="38.0952%" y="853" width="0.1299%" height="15" fill="rgb(239,44,28)" fg:x="880" fg:w="3"/><text x="38.3452%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="38.4416%" y="757" width="0.0433%" height="15" fill="rgb(249,187,43)" fg:x="888" fg:w="1"/><text x="38.6916%" y="767.50"></text></g><g><title>_int_free (2 samples, 0.09%)</title><rect x="38.4848%" y="757" width="0.0866%" height="15" fill="rgb(216,141,28)" fg:x="889" fg:w="2"/><text x="38.7348%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.35%)</title><rect x="38.2684%" y="837" width="0.3463%" height="15" fill="rgb(230,154,53)" fg:x="884" fg:w="8"/><text x="38.5184%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.35%)</title><rect x="38.2684%" y="821" width="0.3463%" height="15" fill="rgb(227,82,4)" fg:x="884" fg:w="8"/><text x="38.5184%" y="831.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.35%)</title><rect x="38.2684%" y="805" width="0.3463%" height="15" fill="rgb(220,107,16)" fg:x="884" fg:w="8"/><text x="38.5184%" y="815.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.35%)</title><rect x="38.2684%" y="789" width="0.3463%" height="15" fill="rgb(207,187,2)" fg:x="884" fg:w="8"/><text x="38.5184%" y="799.50"></text></g><g><title>_int_realloc (7 samples, 0.30%)</title><rect x="38.3117%" y="773" width="0.3030%" height="15" fill="rgb(210,162,52)" fg:x="885" fg:w="7"/><text x="38.5617%" y="783.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="38.5714%" y="757" width="0.0433%" height="15" fill="rgb(217,216,49)" fg:x="891" fg:w="1"/><text x="38.8214%" y="767.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.13%)</title><rect x="38.6147%" y="837" width="0.1299%" height="15" fill="rgb(218,146,49)" fg:x="892" fg:w="3"/><text x="38.8647%" y="847.50"></text></g><g><title>tcache_get (1 samples, 0.04%)</title><rect x="38.7013%" y="821" width="0.0433%" height="15" fill="rgb(216,55,40)" fg:x="894" fg:w="1"/><text x="38.9513%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.78%)</title><rect x="38.0087%" y="917" width="0.7792%" height="15" fill="rgb(208,196,21)" fg:x="878" fg:w="18"/><text x="38.2587%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.78%)</title><rect x="38.0087%" y="901" width="0.7792%" height="15" fill="rgb(242,117,42)" fg:x="878" fg:w="18"/><text x="38.2587%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.78%)</title><rect x="38.0087%" y="885" width="0.7792%" height="15" fill="rgb(210,11,23)" fg:x="878" fg:w="18"/><text x="38.2587%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.74%)</title><rect x="38.0519%" y="869" width="0.7359%" height="15" fill="rgb(217,110,2)" fg:x="879" fg:w="17"/><text x="38.3019%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.56%)</title><rect x="38.2251%" y="853" width="0.5628%" height="15" fill="rgb(229,77,54)" fg:x="883" fg:w="13"/><text x="38.4751%" y="863.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.04%)</title><rect x="38.7446%" y="837" width="0.0433%" height="15" fill="rgb(218,53,16)" fg:x="895" fg:w="1"/><text x="38.9946%" y="847.50"></text></g><g><title>alloc::fmt::format (22 samples, 0.95%)</title><rect x="37.8788%" y="1061" width="0.9524%" height="15" fill="rgb(215,38,13)" fg:x="875" fg:w="22"/><text x="38.1288%" y="1071.50"></text></g><g><title>core::fmt::Write::write_fmt (21 samples, 0.91%)</title><rect x="37.9221%" y="1045" width="0.9091%" height="15" fill="rgb(235,42,18)" fg:x="876" fg:w="21"/><text x="38.1721%" y="1055.50"></text></g><g><title>core::fmt::write (21 samples, 0.91%)</title><rect x="37.9221%" y="1029" width="0.9091%" height="15" fill="rgb(219,66,54)" fg:x="876" fg:w="21"/><text x="38.1721%" y="1039.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (21 samples, 0.91%)</title><rect x="37.9221%" y="1013" width="0.9091%" height="15" fill="rgb(222,205,4)" fg:x="876" fg:w="21"/><text x="38.1721%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (20 samples, 0.87%)</title><rect x="37.9654%" y="997" width="0.8658%" height="15" fill="rgb(227,213,46)" fg:x="877" fg:w="20"/><text x="38.2154%" y="1007.50"></text></g><g><title>alloc::string::String::push_str (20 samples, 0.87%)</title><rect x="37.9654%" y="981" width="0.8658%" height="15" fill="rgb(250,145,42)" fg:x="877" fg:w="20"/><text x="38.2154%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20 samples, 0.87%)</title><rect x="37.9654%" y="965" width="0.8658%" height="15" fill="rgb(219,15,2)" fg:x="877" fg:w="20"/><text x="38.2154%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.87%)</title><rect x="37.9654%" y="949" width="0.8658%" height="15" fill="rgb(231,181,52)" fg:x="877" fg:w="20"/><text x="38.2154%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.87%)</title><rect x="37.9654%" y="933" width="0.8658%" height="15" fill="rgb(235,1,42)" fg:x="877" fg:w="20"/><text x="38.2154%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="38.7879%" y="917" width="0.0433%" height="15" fill="rgb(249,88,27)" fg:x="896" fg:w="1"/><text x="39.0379%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.04%)</title><rect x="38.7879%" y="901" width="0.0433%" height="15" fill="rgb(235,145,16)" fg:x="896" fg:w="1"/><text x="39.0379%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.13%)</title><rect x="38.8312%" y="1061" width="0.1299%" height="15" fill="rgb(237,114,19)" fg:x="897" fg:w="3"/><text x="39.0812%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.13%)</title><rect x="38.8312%" y="1045" width="0.1299%" height="15" fill="rgb(238,51,50)" fg:x="897" fg:w="3"/><text x="39.0812%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.13%)</title><rect x="38.8312%" y="1029" width="0.1299%" height="15" fill="rgb(205,194,25)" fg:x="897" fg:w="3"/><text x="39.0812%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="38.8312%" y="1013" width="0.1299%" height="15" fill="rgb(215,203,17)" fg:x="897" fg:w="3"/><text x="39.0812%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="38.8745%" y="997" width="0.0866%" height="15" fill="rgb(233,112,49)" fg:x="898" fg:w="2"/><text x="39.1245%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.09%)</title><rect x="38.8745%" y="981" width="0.0866%" height="15" fill="rgb(241,130,26)" fg:x="898" fg:w="2"/><text x="39.1245%" y="991.50"></text></g><g><title>__GI___libc_free (2 samples, 0.09%)</title><rect x="38.8745%" y="965" width="0.0866%" height="15" fill="rgb(252,223,19)" fg:x="898" fg:w="2"/><text x="39.1245%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.04%)</title><rect x="38.9610%" y="1061" width="0.0433%" height="15" fill="rgb(211,95,25)" fg:x="900" fg:w="1"/><text x="39.2110%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.04%)</title><rect x="38.9610%" y="1045" width="0.0433%" height="15" fill="rgb(251,182,27)" fg:x="900" fg:w="1"/><text x="39.2110%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="38.9610%" y="1029" width="0.0433%" height="15" fill="rgb(238,24,4)" fg:x="900" fg:w="1"/><text x="39.2110%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.04%)</title><rect x="38.9610%" y="1013" width="0.0433%" height="15" fill="rgb(224,220,25)" fg:x="900" fg:w="1"/><text x="39.2110%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="38.9610%" y="997" width="0.0433%" height="15" fill="rgb(239,133,26)" fg:x="900" fg:w="1"/><text x="39.2110%" y="1007.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.04%)</title><rect x="38.9610%" y="981" width="0.0433%" height="15" fill="rgb(211,94,48)" fg:x="900" fg:w="1"/><text x="39.2110%" y="991.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.04%)</title><rect x="38.9610%" y="965" width="0.0433%" height="15" fill="rgb(239,87,6)" fg:x="900" fg:w="1"/><text x="39.2110%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="38.9610%" y="949" width="0.0433%" height="15" fill="rgb(227,62,0)" fg:x="900" fg:w="1"/><text x="39.2110%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="38.9610%" y="933" width="0.0433%" height="15" fill="rgb(211,226,4)" fg:x="900" fg:w="1"/><text x="39.2110%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="38.9610%" y="917" width="0.0433%" height="15" fill="rgb(253,38,52)" fg:x="900" fg:w="1"/><text x="39.2110%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="39.0909%" y="901" width="0.0433%" height="15" fill="rgb(229,126,40)" fg:x="903" fg:w="1"/><text x="39.3409%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="39.0909%" y="885" width="0.0433%" height="15" fill="rgb(229,165,44)" fg:x="903" fg:w="1"/><text x="39.3409%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="39.0476%" y="949" width="0.1299%" height="15" fill="rgb(247,95,47)" fg:x="902" fg:w="3"/><text x="39.2976%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="39.0476%" y="933" width="0.1299%" height="15" fill="rgb(216,140,30)" fg:x="902" fg:w="3"/><text x="39.2976%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="39.0476%" y="917" width="0.1299%" height="15" fill="rgb(246,214,8)" fg:x="902" fg:w="3"/><text x="39.2976%" y="927.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="39.1342%" y="901" width="0.0433%" height="15" fill="rgb(227,224,15)" fg:x="904" fg:w="1"/><text x="39.3842%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4 samples, 0.17%)</title><rect x="39.0476%" y="981" width="0.1732%" height="15" fill="rgb(233,175,4)" fg:x="902" fg:w="4"/><text x="39.2976%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.17%)</title><rect x="39.0476%" y="965" width="0.1732%" height="15" fill="rgb(221,66,45)" fg:x="902" fg:w="4"/><text x="39.2976%" y="975.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.04%)</title><rect x="39.1775%" y="949" width="0.0433%" height="15" fill="rgb(221,178,18)" fg:x="905" fg:w="1"/><text x="39.4275%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="39.1775%" y="933" width="0.0433%" height="15" fill="rgb(213,81,29)" fg:x="905" fg:w="1"/><text x="39.4275%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="39.1775%" y="917" width="0.0433%" height="15" fill="rgb(220,89,49)" fg:x="905" fg:w="1"/><text x="39.4275%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="39.1775%" y="901" width="0.0433%" height="15" fill="rgb(227,60,33)" fg:x="905" fg:w="1"/><text x="39.4275%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="39.2208%" y="981" width="0.1299%" height="15" fill="rgb(205,113,12)" fg:x="906" fg:w="3"/><text x="39.4708%" y="991.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="39.2208%" y="965" width="0.1299%" height="15" fill="rgb(211,32,1)" fg:x="906" fg:w="3"/><text x="39.4708%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="39.2208%" y="949" width="0.1299%" height="15" fill="rgb(246,2,12)" fg:x="906" fg:w="3"/><text x="39.4708%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.09%)</title><rect x="39.2641%" y="933" width="0.0866%" height="15" fill="rgb(243,37,27)" fg:x="907" fg:w="2"/><text x="39.5141%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.09%)</title><rect x="39.2641%" y="917" width="0.0866%" height="15" fill="rgb(248,211,31)" fg:x="907" fg:w="2"/><text x="39.5141%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.48%)</title><rect x="39.0043%" y="997" width="0.4762%" height="15" fill="rgb(242,146,47)" fg:x="901" fg:w="11"/><text x="39.2543%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.13%)</title><rect x="39.3506%" y="981" width="0.1299%" height="15" fill="rgb(206,70,20)" fg:x="909" fg:w="3"/><text x="39.6006%" y="991.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.13%)</title><rect x="39.3506%" y="965" width="0.1299%" height="15" fill="rgb(215,10,51)" fg:x="909" fg:w="3"/><text x="39.6006%" y="975.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.09%)</title><rect x="39.3939%" y="949" width="0.0866%" height="15" fill="rgb(243,178,53)" fg:x="910" fg:w="2"/><text x="39.6439%" y="959.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.09%)</title><rect x="39.3939%" y="933" width="0.0866%" height="15" fill="rgb(233,221,20)" fg:x="910" fg:w="2"/><text x="39.6439%" y="943.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.09%)</title><rect x="39.5238%" y="965" width="0.0866%" height="15" fill="rgb(218,95,35)" fg:x="913" fg:w="2"/><text x="39.7738%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.09%)</title><rect x="39.5238%" y="949" width="0.0866%" height="15" fill="rgb(229,13,5)" fg:x="913" fg:w="2"/><text x="39.7738%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.09%)</title><rect x="39.5238%" y="933" width="0.0866%" height="15" fill="rgb(252,164,30)" fg:x="913" fg:w="2"/><text x="39.7738%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.09%)</title><rect x="39.5238%" y="917" width="0.0866%" height="15" fill="rgb(232,68,36)" fg:x="913" fg:w="2"/><text x="39.7738%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.09%)</title><rect x="39.5238%" y="901" width="0.0866%" height="15" fill="rgb(219,59,54)" fg:x="913" fg:w="2"/><text x="39.7738%" y="911.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.09%)</title><rect x="39.5238%" y="885" width="0.0866%" height="15" fill="rgb(250,92,33)" fg:x="913" fg:w="2"/><text x="39.7738%" y="895.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (15 samples, 0.65%)</title><rect x="39.0043%" y="1061" width="0.6494%" height="15" fill="rgb(229,162,54)" fg:x="901" fg:w="15"/><text x="39.2543%" y="1071.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (15 samples, 0.65%)</title><rect x="39.0043%" y="1045" width="0.6494%" height="15" fill="rgb(244,114,52)" fg:x="901" fg:w="15"/><text x="39.2543%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (15 samples, 0.65%)</title><rect x="39.0043%" y="1029" width="0.6494%" height="15" fill="rgb(212,211,43)" fg:x="901" fg:w="15"/><text x="39.2543%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15 samples, 0.65%)</title><rect x="39.0043%" y="1013" width="0.6494%" height="15" fill="rgb(226,147,8)" fg:x="901" fg:w="15"/><text x="39.2543%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.17%)</title><rect x="39.4805%" y="997" width="0.1732%" height="15" fill="rgb(226,23,13)" fg:x="912" fg:w="4"/><text x="39.7305%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.17%)</title><rect x="39.4805%" y="981" width="0.1732%" height="15" fill="rgb(240,63,4)" fg:x="912" fg:w="4"/><text x="39.7305%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="39.6104%" y="965" width="0.0433%" height="15" fill="rgb(221,1,32)" fg:x="915" fg:w="1"/><text x="39.8604%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="39.6104%" y="949" width="0.0433%" height="15" fill="rgb(242,117,10)" fg:x="915" fg:w="1"/><text x="39.8604%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="39.6104%" y="933" width="0.0433%" height="15" fill="rgb(249,172,44)" fg:x="915" fg:w="1"/><text x="39.8604%" y="943.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="39.6104%" y="917" width="0.0433%" height="15" fill="rgb(244,46,45)" fg:x="915" fg:w="1"/><text x="39.8604%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.04%)</title><rect x="39.6104%" y="901" width="0.0433%" height="15" fill="rgb(206,43,17)" fg:x="915" fg:w="1"/><text x="39.8604%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.04%)</title><rect x="39.6104%" y="885" width="0.0433%" height="15" fill="rgb(239,218,39)" fg:x="915" fg:w="1"/><text x="39.8604%" y="895.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.04%)</title><rect x="39.6104%" y="869" width="0.0433%" height="15" fill="rgb(208,169,54)" fg:x="915" fg:w="1"/><text x="39.8604%" y="879.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.04%)</title><rect x="39.6537%" y="1013" width="0.0433%" height="15" fill="rgb(247,25,42)" fg:x="916" fg:w="1"/><text x="39.9037%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="39.6537%" y="997" width="0.0433%" height="15" fill="rgb(226,23,31)" fg:x="916" fg:w="1"/><text x="39.9037%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.04%)</title><rect x="39.6537%" y="981" width="0.0433%" height="15" fill="rgb(247,16,28)" fg:x="916" fg:w="1"/><text x="39.9037%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="39.6537%" y="965" width="0.0433%" height="15" fill="rgb(231,147,38)" fg:x="916" fg:w="1"/><text x="39.9037%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="39.6537%" y="949" width="0.0433%" height="15" fill="rgb(253,81,48)" fg:x="916" fg:w="1"/><text x="39.9037%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="39.6537%" y="933" width="0.0433%" height="15" fill="rgb(249,222,43)" fg:x="916" fg:w="1"/><text x="39.9037%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="39.6970%" y="917" width="0.0433%" height="15" fill="rgb(221,3,27)" fg:x="917" fg:w="1"/><text x="39.9470%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.04%)</title><rect x="39.6970%" y="901" width="0.0433%" height="15" fill="rgb(228,180,5)" fg:x="917" fg:w="1"/><text x="39.9470%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="39.6970%" y="885" width="0.0433%" height="15" fill="rgb(227,131,42)" fg:x="917" fg:w="1"/><text x="39.9470%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="39.6970%" y="869" width="0.0433%" height="15" fill="rgb(212,3,39)" fg:x="917" fg:w="1"/><text x="39.9470%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="39.6970%" y="853" width="0.0433%" height="15" fill="rgb(226,45,5)" fg:x="917" fg:w="1"/><text x="39.9470%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="39.6970%" y="837" width="0.0433%" height="15" fill="rgb(215,167,45)" fg:x="917" fg:w="1"/><text x="39.9470%" y="847.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (3 samples, 0.13%)</title><rect x="39.6970%" y="949" width="0.1299%" height="15" fill="rgb(250,218,53)" fg:x="917" fg:w="3"/><text x="39.9470%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.13%)</title><rect x="39.6970%" y="933" width="0.1299%" height="15" fill="rgb(207,140,0)" fg:x="917" fg:w="3"/><text x="39.9470%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="39.7403%" y="917" width="0.0866%" height="15" fill="rgb(238,133,51)" fg:x="918" fg:w="2"/><text x="39.9903%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="39.7403%" y="901" width="0.0866%" height="15" fill="rgb(218,203,53)" fg:x="918" fg:w="2"/><text x="39.9903%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="39.7403%" y="885" width="0.0866%" height="15" fill="rgb(226,184,25)" fg:x="918" fg:w="2"/><text x="39.9903%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="39.7835%" y="869" width="0.0433%" height="15" fill="rgb(231,121,21)" fg:x="919" fg:w="1"/><text x="40.0335%" y="879.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (2 samples, 0.09%)</title><rect x="39.8268%" y="949" width="0.0866%" height="15" fill="rgb(251,14,34)" fg:x="920" fg:w="2"/><text x="40.0768%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (2 samples, 0.09%)</title><rect x="39.8268%" y="933" width="0.0866%" height="15" fill="rgb(249,193,11)" fg:x="920" fg:w="2"/><text x="40.0768%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.09%)</title><rect x="39.8268%" y="917" width="0.0866%" height="15" fill="rgb(220,172,37)" fg:x="920" fg:w="2"/><text x="40.0768%" y="927.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.09%)</title><rect x="39.8268%" y="901" width="0.0866%" height="15" fill="rgb(231,229,43)" fg:x="920" fg:w="2"/><text x="40.0768%" y="911.50"></text></g><g><title>exc_page_fault (2 samples, 0.09%)</title><rect x="39.8268%" y="885" width="0.0866%" height="15" fill="rgb(250,161,5)" fg:x="920" fg:w="2"/><text x="40.0768%" y="895.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.09%)</title><rect x="39.8268%" y="869" width="0.0866%" height="15" fill="rgb(218,225,18)" fg:x="920" fg:w="2"/><text x="40.0768%" y="879.50"></text></g><g><title>handle_mm_fault (2 samples, 0.09%)</title><rect x="39.8268%" y="853" width="0.0866%" height="15" fill="rgb(245,45,42)" fg:x="920" fg:w="2"/><text x="40.0768%" y="863.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="39.8701%" y="837" width="0.0433%" height="15" fill="rgb(211,115,1)" fg:x="921" fg:w="1"/><text x="40.1201%" y="847.50"></text></g><g><title>do_anonymous_page (1 samples, 0.04%)</title><rect x="39.8701%" y="821" width="0.0433%" height="15" fill="rgb(248,133,52)" fg:x="921" fg:w="1"/><text x="40.1201%" y="831.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="39.8701%" y="805" width="0.0433%" height="15" fill="rgb(238,100,21)" fg:x="921" fg:w="1"/><text x="40.1201%" y="815.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="39.8701%" y="789" width="0.0433%" height="15" fill="rgb(247,144,11)" fg:x="921" fg:w="1"/><text x="40.1201%" y="799.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="39.8701%" y="773" width="0.0433%" height="15" fill="rgb(206,164,16)" fg:x="921" fg:w="1"/><text x="40.1201%" y="783.50"></text></g><g><title>rmqueue (1 samples, 0.04%)</title><rect x="39.8701%" y="757" width="0.0433%" height="15" fill="rgb(222,34,3)" fg:x="921" fg:w="1"/><text x="40.1201%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (6 samples, 0.26%)</title><rect x="39.6970%" y="997" width="0.2597%" height="15" fill="rgb(248,82,4)" fg:x="917" fg:w="6"/><text x="39.9470%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.26%)</title><rect x="39.6970%" y="981" width="0.2597%" height="15" fill="rgb(228,81,46)" fg:x="917" fg:w="6"/><text x="39.9470%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (6 samples, 0.26%)</title><rect x="39.6970%" y="965" width="0.2597%" height="15" fill="rgb(227,67,47)" fg:x="917" fg:w="6"/><text x="39.9470%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.04%)</title><rect x="39.9134%" y="949" width="0.0433%" height="15" fill="rgb(215,93,53)" fg:x="922" fg:w="1"/><text x="40.1634%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.04%)</title><rect x="39.9134%" y="933" width="0.0433%" height="15" fill="rgb(248,194,39)" fg:x="922" fg:w="1"/><text x="40.1634%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="39.9134%" y="917" width="0.0433%" height="15" fill="rgb(215,5,19)" fg:x="922" fg:w="1"/><text x="40.1634%" y="927.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (8 samples, 0.35%)</title><rect x="39.6537%" y="1061" width="0.3463%" height="15" fill="rgb(226,215,51)" fg:x="916" fg:w="8"/><text x="39.9037%" y="1071.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (8 samples, 0.35%)</title><rect x="39.6537%" y="1045" width="0.3463%" height="15" fill="rgb(225,56,26)" fg:x="916" fg:w="8"/><text x="39.9037%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.35%)</title><rect x="39.6537%" y="1029" width="0.3463%" height="15" fill="rgb(222,75,29)" fg:x="916" fg:w="8"/><text x="39.9037%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.30%)</title><rect x="39.6970%" y="1013" width="0.3030%" height="15" fill="rgb(236,139,6)" fg:x="917" fg:w="7"/><text x="39.9470%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.04%)</title><rect x="39.9567%" y="997" width="0.0433%" height="15" fill="rgb(223,137,36)" fg:x="923" fg:w="1"/><text x="40.2067%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="40.3030%" y="981" width="0.0433%" height="15" fill="rgb(226,99,2)" fg:x="931" fg:w="1"/><text x="40.5530%" y="991.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="40.3030%" y="965" width="0.0433%" height="15" fill="rgb(206,133,23)" fg:x="931" fg:w="1"/><text x="40.5530%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="40.3030%" y="949" width="0.0433%" height="15" fill="rgb(243,173,15)" fg:x="931" fg:w="1"/><text x="40.5530%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="40.3463%" y="917" width="0.0433%" height="15" fill="rgb(228,69,28)" fg:x="932" fg:w="1"/><text x="40.5963%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="40.3463%" y="901" width="0.0433%" height="15" fill="rgb(212,51,22)" fg:x="932" fg:w="1"/><text x="40.5963%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.04%)</title><rect x="40.3463%" y="885" width="0.0433%" height="15" fill="rgb(227,113,0)" fg:x="932" fg:w="1"/><text x="40.5963%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="40.3463%" y="869" width="0.0433%" height="15" fill="rgb(252,84,27)" fg:x="932" fg:w="1"/><text x="40.5963%" y="879.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="40.3463%" y="853" width="0.0433%" height="15" fill="rgb(223,145,39)" fg:x="932" fg:w="1"/><text x="40.5963%" y="863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="40.3463%" y="837" width="0.0433%" height="15" fill="rgb(239,219,30)" fg:x="932" fg:w="1"/><text x="40.5963%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.09%)</title><rect x="40.3896%" y="917" width="0.0866%" height="15" fill="rgb(224,196,39)" fg:x="933" fg:w="2"/><text x="40.6396%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.09%)</title><rect x="40.3896%" y="901" width="0.0866%" height="15" fill="rgb(205,35,43)" fg:x="933" fg:w="2"/><text x="40.6396%" y="911.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="40.3896%" y="885" width="0.0866%" height="15" fill="rgb(228,201,21)" fg:x="933" fg:w="2"/><text x="40.6396%" y="895.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.09%)</title><rect x="40.3896%" y="869" width="0.0866%" height="15" fill="rgb(237,118,16)" fg:x="933" fg:w="2"/><text x="40.6396%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="40.4329%" y="853" width="0.0433%" height="15" fill="rgb(241,17,19)" fg:x="934" fg:w="1"/><text x="40.6829%" y="863.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.09%)</title><rect x="41.5152%" y="821" width="0.0866%" height="15" fill="rgb(214,10,25)" fg:x="959" fg:w="2"/><text x="41.7652%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.09%)</title><rect x="41.5152%" y="805" width="0.0866%" height="15" fill="rgb(238,37,29)" fg:x="959" fg:w="2"/><text x="41.7652%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (31 samples, 1.34%)</title><rect x="40.4762%" y="917" width="1.3420%" height="15" fill="rgb(253,83,25)" fg:x="935" fg:w="31"/><text x="40.7262%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (23 samples, 1.00%)</title><rect x="40.8225%" y="901" width="0.9957%" height="15" fill="rgb(234,192,12)" fg:x="943" fg:w="23"/><text x="41.0725%" y="911.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 1.00%)</title><rect x="40.8225%" y="885" width="0.9957%" height="15" fill="rgb(241,216,45)" fg:x="943" fg:w="23"/><text x="41.0725%" y="895.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (23 samples, 1.00%)</title><rect x="40.8225%" y="869" width="0.9957%" height="15" fill="rgb(242,22,33)" fg:x="943" fg:w="23"/><text x="41.0725%" y="879.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (23 samples, 1.00%)</title><rect x="40.8225%" y="853" width="0.9957%" height="15" fill="rgb(231,105,49)" fg:x="943" fg:w="23"/><text x="41.0725%" y="863.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (21 samples, 0.91%)</title><rect x="40.9091%" y="837" width="0.9091%" height="15" fill="rgb(218,204,15)" fg:x="945" fg:w="21"/><text x="41.1591%" y="847.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (5 samples, 0.22%)</title><rect x="41.6017%" y="821" width="0.2165%" height="15" fill="rgb(235,138,41)" fg:x="961" fg:w="5"/><text x="41.8517%" y="831.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="42.0779%" y="837" width="0.0433%" height="15" fill="rgb(246,0,9)" fg:x="972" fg:w="1"/><text x="42.3279%" y="847.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="42.0779%" y="821" width="0.0433%" height="15" fill="rgb(210,74,4)" fg:x="972" fg:w="1"/><text x="42.3279%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="42.0779%" y="805" width="0.0433%" height="15" fill="rgb(250,60,41)" fg:x="972" fg:w="1"/><text x="42.3279%" y="815.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1 samples, 0.04%)</title><rect x="42.1212%" y="837" width="0.0433%" height="15" fill="rgb(220,115,12)" fg:x="973" fg:w="1"/><text x="42.3712%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="42.1212%" y="821" width="0.0433%" height="15" fill="rgb(237,100,13)" fg:x="973" fg:w="1"/><text x="42.3712%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="42.1212%" y="805" width="0.0433%" height="15" fill="rgb(213,55,26)" fg:x="973" fg:w="1"/><text x="42.3712%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 1.95%)</title><rect x="40.3030%" y="1045" width="1.9481%" height="15" fill="rgb(216,17,4)" fg:x="931" fg:w="45"/><text x="40.5530%" y="1055.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (45 samples, 1.95%)</title><rect x="40.3030%" y="1029" width="1.9481%" height="15" fill="rgb(220,153,47)" fg:x="931" fg:w="45"/><text x="40.5530%" y="1039.50">c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (45 samples, 1.95%)</title><rect x="40.3030%" y="1013" width="1.9481%" height="15" fill="rgb(215,131,9)" fg:x="931" fg:w="45"/><text x="40.5530%" y="1023.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (45 samples, 1.95%)</title><rect x="40.3030%" y="997" width="1.9481%" height="15" fill="rgb(233,46,42)" fg:x="931" fg:w="45"/><text x="40.5530%" y="1007.50">c..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (44 samples, 1.90%)</title><rect x="40.3463%" y="981" width="1.9048%" height="15" fill="rgb(226,86,7)" fg:x="932" fg:w="44"/><text x="40.5963%" y="991.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (44 samples, 1.90%)</title><rect x="40.3463%" y="965" width="1.9048%" height="15" fill="rgb(239,226,21)" fg:x="932" fg:w="44"/><text x="40.5963%" y="975.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (44 samples, 1.90%)</title><rect x="40.3463%" y="949" width="1.9048%" height="15" fill="rgb(244,137,22)" fg:x="932" fg:w="44"/><text x="40.5963%" y="959.50">c..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (44 samples, 1.90%)</title><rect x="40.3463%" y="933" width="1.9048%" height="15" fill="rgb(211,139,35)" fg:x="932" fg:w="44"/><text x="40.5963%" y="943.50">y..</text></g><g><title>core::str::&lt;impl str&gt;::matches (10 samples, 0.43%)</title><rect x="41.8182%" y="917" width="0.4329%" height="15" fill="rgb(214,62,50)" fg:x="966" fg:w="10"/><text x="42.0682%" y="927.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (10 samples, 0.43%)</title><rect x="41.8182%" y="901" width="0.4329%" height="15" fill="rgb(212,113,44)" fg:x="966" fg:w="10"/><text x="42.0682%" y="911.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (10 samples, 0.43%)</title><rect x="41.8182%" y="885" width="0.4329%" height="15" fill="rgb(226,150,43)" fg:x="966" fg:w="10"/><text x="42.0682%" y="895.50"></text></g><g><title>core::str::pattern::StrSearcher::new (9 samples, 0.39%)</title><rect x="41.8615%" y="869" width="0.3896%" height="15" fill="rgb(250,71,37)" fg:x="967" fg:w="9"/><text x="42.1115%" y="879.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (5 samples, 0.22%)</title><rect x="42.0346%" y="853" width="0.2165%" height="15" fill="rgb(219,76,19)" fg:x="971" fg:w="5"/><text x="42.2846%" y="863.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (2 samples, 0.09%)</title><rect x="42.1645%" y="837" width="0.0866%" height="15" fill="rgb(250,39,11)" fg:x="974" fg:w="2"/><text x="42.4145%" y="847.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (2 samples, 0.09%)</title><rect x="42.2944%" y="1029" width="0.0866%" height="15" fill="rgb(230,64,31)" fg:x="977" fg:w="2"/><text x="42.5444%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.09%)</title><rect x="42.2944%" y="1013" width="0.0866%" height="15" fill="rgb(208,222,23)" fg:x="977" fg:w="2"/><text x="42.5444%" y="1023.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.09%)</title><rect x="42.2944%" y="997" width="0.0866%" height="15" fill="rgb(227,125,18)" fg:x="977" fg:w="2"/><text x="42.5444%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.09%)</title><rect x="42.2944%" y="981" width="0.0866%" height="15" fill="rgb(234,210,9)" fg:x="977" fg:w="2"/><text x="42.5444%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.09%)</title><rect x="42.2944%" y="965" width="0.0866%" height="15" fill="rgb(217,127,24)" fg:x="977" fg:w="2"/><text x="42.5444%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="42.2944%" y="949" width="0.0866%" height="15" fill="rgb(239,141,48)" fg:x="977" fg:w="2"/><text x="42.5444%" y="959.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="42.4242%" y="997" width="0.0433%" height="15" fill="rgb(227,109,8)" fg:x="980" fg:w="1"/><text x="42.6742%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (4 samples, 0.17%)</title><rect x="42.4675%" y="837" width="0.1732%" height="15" fill="rgb(235,184,23)" fg:x="981" fg:w="4"/><text x="42.7175%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="42.8571%" y="741" width="0.0433%" height="15" fill="rgb(227,226,48)" fg:x="990" fg:w="1"/><text x="43.1071%" y="751.50"></text></g><g><title>_int_free (3 samples, 0.13%)</title><rect x="42.9004%" y="741" width="0.1299%" height="15" fill="rgb(206,150,11)" fg:x="991" fg:w="3"/><text x="43.1504%" y="751.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.56%)</title><rect x="42.6840%" y="773" width="0.5628%" height="15" fill="rgb(254,2,33)" fg:x="986" fg:w="13"/><text x="42.9340%" y="783.50"></text></g><g><title>_int_realloc (11 samples, 0.48%)</title><rect x="42.7706%" y="757" width="0.4762%" height="15" fill="rgb(243,160,20)" fg:x="988" fg:w="11"/><text x="43.0206%" y="767.50"></text></g><g><title>_int_malloc (5 samples, 0.22%)</title><rect x="43.0303%" y="741" width="0.2165%" height="15" fill="rgb(218,208,30)" fg:x="994" fg:w="5"/><text x="43.2803%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.61%)</title><rect x="42.6840%" y="821" width="0.6061%" height="15" fill="rgb(224,120,49)" fg:x="986" fg:w="14"/><text x="42.9340%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.61%)</title><rect x="42.6840%" y="805" width="0.6061%" height="15" fill="rgb(246,12,2)" fg:x="986" fg:w="14"/><text x="42.9340%" y="815.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.61%)</title><rect x="42.6840%" y="789" width="0.6061%" height="15" fill="rgb(236,117,3)" fg:x="986" fg:w="14"/><text x="42.9340%" y="799.50"></text></g><g><title>__rust_realloc (1 samples, 0.04%)</title><rect x="43.2468%" y="773" width="0.0433%" height="15" fill="rgb(216,128,52)" fg:x="999" fg:w="1"/><text x="43.4968%" y="783.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.09%)</title><rect x="43.2900%" y="821" width="0.0866%" height="15" fill="rgb(246,145,19)" fg:x="1000" fg:w="2"/><text x="43.5400%" y="831.50"></text></g><g><title>tcache_get (1 samples, 0.04%)</title><rect x="43.3333%" y="805" width="0.0433%" height="15" fill="rgb(222,11,46)" fg:x="1001" fg:w="1"/><text x="43.5833%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.87%)</title><rect x="42.6407%" y="837" width="0.8658%" height="15" fill="rgb(245,82,36)" fg:x="985" fg:w="20"/><text x="42.8907%" y="847.50"></text></g><g><title>__rdl_alloc (3 samples, 0.13%)</title><rect x="43.3766%" y="821" width="0.1299%" height="15" fill="rgb(250,73,51)" fg:x="1002" fg:w="3"/><text x="43.6266%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.09%)</title><rect x="43.4199%" y="805" width="0.0866%" height="15" fill="rgb(221,189,23)" fg:x="1003" fg:w="2"/><text x="43.6699%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (25 samples, 1.08%)</title><rect x="42.4675%" y="901" width="1.0823%" height="15" fill="rgb(210,33,7)" fg:x="981" fg:w="25"/><text x="42.7175%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (25 samples, 1.08%)</title><rect x="42.4675%" y="885" width="1.0823%" height="15" fill="rgb(210,107,22)" fg:x="981" fg:w="25"/><text x="42.7175%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 1.08%)</title><rect x="42.4675%" y="869" width="1.0823%" height="15" fill="rgb(222,116,37)" fg:x="981" fg:w="25"/><text x="42.7175%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 1.08%)</title><rect x="42.4675%" y="853" width="1.0823%" height="15" fill="rgb(254,17,48)" fg:x="981" fg:w="25"/><text x="42.7175%" y="863.50"></text></g><g><title>core::cmp::max (1 samples, 0.04%)</title><rect x="43.5065%" y="837" width="0.0433%" height="15" fill="rgb(224,36,32)" fg:x="1005" fg:w="1"/><text x="43.7565%" y="847.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="43.5065%" y="821" width="0.0433%" height="15" fill="rgb(232,90,46)" fg:x="1005" fg:w="1"/><text x="43.7565%" y="831.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.04%)</title><rect x="43.5065%" y="805" width="0.0433%" height="15" fill="rgb(241,66,40)" fg:x="1005" fg:w="1"/><text x="43.7565%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="43.5498%" y="901" width="0.0433%" height="15" fill="rgb(249,184,29)" fg:x="1006" fg:w="1"/><text x="43.7998%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.04%)</title><rect x="43.5498%" y="885" width="0.0433%" height="15" fill="rgb(231,181,1)" fg:x="1006" fg:w="1"/><text x="43.7998%" y="895.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (29 samples, 1.26%)</title><rect x="42.4675%" y="997" width="1.2554%" height="15" fill="rgb(224,94,2)" fg:x="981" fg:w="29"/><text x="42.7175%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (29 samples, 1.26%)</title><rect x="42.4675%" y="981" width="1.2554%" height="15" fill="rgb(229,170,15)" fg:x="981" fg:w="29"/><text x="42.7175%" y="991.50"></text></g><g><title>alloc::string::String::push_str (29 samples, 1.26%)</title><rect x="42.4675%" y="965" width="1.2554%" height="15" fill="rgb(240,127,35)" fg:x="981" fg:w="29"/><text x="42.7175%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (29 samples, 1.26%)</title><rect x="42.4675%" y="949" width="1.2554%" height="15" fill="rgb(248,196,34)" fg:x="981" fg:w="29"/><text x="42.7175%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (29 samples, 1.26%)</title><rect x="42.4675%" y="933" width="1.2554%" height="15" fill="rgb(236,137,7)" fg:x="981" fg:w="29"/><text x="42.7175%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (29 samples, 1.26%)</title><rect x="42.4675%" y="917" width="1.2554%" height="15" fill="rgb(235,127,16)" fg:x="981" fg:w="29"/><text x="42.7175%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.13%)</title><rect x="43.5931%" y="901" width="0.1299%" height="15" fill="rgb(250,192,54)" fg:x="1007" fg:w="3"/><text x="43.8431%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.13%)</title><rect x="43.5931%" y="885" width="0.1299%" height="15" fill="rgb(218,98,20)" fg:x="1007" fg:w="3"/><text x="43.8431%" y="895.50"></text></g><g><title>alloc::fmt::format (37 samples, 1.60%)</title><rect x="42.2511%" y="1045" width="1.6017%" height="15" fill="rgb(230,176,47)" fg:x="976" fg:w="37"/><text x="42.5011%" y="1055.50"></text></g><g><title>core::fmt::Write::write_fmt (34 samples, 1.47%)</title><rect x="42.3810%" y="1029" width="1.4719%" height="15" fill="rgb(244,2,33)" fg:x="979" fg:w="34"/><text x="42.6310%" y="1039.50"></text></g><g><title>core::fmt::write (33 samples, 1.43%)</title><rect x="42.4242%" y="1013" width="1.4286%" height="15" fill="rgb(231,100,17)" fg:x="980" fg:w="33"/><text x="42.6742%" y="1023.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.13%)</title><rect x="43.7229%" y="997" width="0.1299%" height="15" fill="rgb(245,23,12)" fg:x="1010" fg:w="3"/><text x="43.9729%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="43.8528%" y="1045" width="0.0433%" height="15" fill="rgb(249,55,22)" fg:x="1013" fg:w="1"/><text x="44.1028%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="43.8528%" y="1029" width="0.0433%" height="15" fill="rgb(207,134,9)" fg:x="1013" fg:w="1"/><text x="44.1028%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="43.8528%" y="1013" width="0.0433%" height="15" fill="rgb(218,134,0)" fg:x="1013" fg:w="1"/><text x="44.1028%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="43.8528%" y="997" width="0.0433%" height="15" fill="rgb(213,212,33)" fg:x="1013" fg:w="1"/><text x="44.1028%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="43.8528%" y="981" width="0.0433%" height="15" fill="rgb(252,106,18)" fg:x="1013" fg:w="1"/><text x="44.1028%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="43.8528%" y="965" width="0.0433%" height="15" fill="rgb(208,126,42)" fg:x="1013" fg:w="1"/><text x="44.1028%" y="975.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="43.8528%" y="949" width="0.0433%" height="15" fill="rgb(246,175,29)" fg:x="1013" fg:w="1"/><text x="44.1028%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="43.8961%" y="981" width="0.0866%" height="15" fill="rgb(215,13,50)" fg:x="1014" fg:w="2"/><text x="44.1461%" y="991.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="43.8961%" y="965" width="0.0866%" height="15" fill="rgb(216,172,15)" fg:x="1014" fg:w="2"/><text x="44.1461%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="43.8961%" y="949" width="0.0866%" height="15" fill="rgb(212,103,13)" fg:x="1014" fg:w="2"/><text x="44.1461%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="43.9394%" y="933" width="0.0433%" height="15" fill="rgb(231,171,36)" fg:x="1015" fg:w="1"/><text x="44.1894%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="43.9394%" y="917" width="0.0433%" height="15" fill="rgb(250,123,20)" fg:x="1015" fg:w="1"/><text x="44.1894%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.13%)</title><rect x="43.8961%" y="997" width="0.1299%" height="15" fill="rgb(212,53,50)" fg:x="1014" fg:w="3"/><text x="44.1461%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.04%)</title><rect x="43.9827%" y="981" width="0.0433%" height="15" fill="rgb(243,54,12)" fg:x="1016" fg:w="1"/><text x="44.2327%" y="991.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.04%)</title><rect x="43.9827%" y="965" width="0.0433%" height="15" fill="rgb(234,101,34)" fg:x="1016" fg:w="1"/><text x="44.2327%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="43.9827%" y="949" width="0.0433%" height="15" fill="rgb(254,67,22)" fg:x="1016" fg:w="1"/><text x="44.2327%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="43.9827%" y="933" width="0.0433%" height="15" fill="rgb(250,35,47)" fg:x="1016" fg:w="1"/><text x="44.2327%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="43.9827%" y="917" width="0.0433%" height="15" fill="rgb(226,126,38)" fg:x="1016" fg:w="1"/><text x="44.2327%" y="927.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="43.9827%" y="901" width="0.0433%" height="15" fill="rgb(216,138,53)" fg:x="1016" fg:w="1"/><text x="44.2327%" y="911.50"></text></g><g><title>&lt;&amp;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (1 samples, 0.04%)</title><rect x="44.0260%" y="949" width="0.0433%" height="15" fill="rgb(246,199,43)" fg:x="1017" fg:w="1"/><text x="44.2760%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.35%)</title><rect x="43.8961%" y="1045" width="0.3463%" height="15" fill="rgb(232,125,11)" fg:x="1014" fg:w="8"/><text x="44.1461%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.35%)</title><rect x="43.8961%" y="1029" width="0.3463%" height="15" fill="rgb(218,219,45)" fg:x="1014" fg:w="8"/><text x="44.1461%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.35%)</title><rect x="43.8961%" y="1013" width="0.3463%" height="15" fill="rgb(216,102,54)" fg:x="1014" fg:w="8"/><text x="44.1461%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.22%)</title><rect x="44.0260%" y="997" width="0.2165%" height="15" fill="rgb(250,228,7)" fg:x="1017" fg:w="5"/><text x="44.2760%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.22%)</title><rect x="44.0260%" y="981" width="0.2165%" height="15" fill="rgb(226,125,25)" fg:x="1017" fg:w="5"/><text x="44.2760%" y="991.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.22%)</title><rect x="44.0260%" y="965" width="0.2165%" height="15" fill="rgb(224,165,27)" fg:x="1017" fg:w="5"/><text x="44.2760%" y="975.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.17%)</title><rect x="44.0693%" y="949" width="0.1732%" height="15" fill="rgb(233,86,3)" fg:x="1018" fg:w="4"/><text x="44.3193%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.17%)</title><rect x="44.0693%" y="933" width="0.1732%" height="15" fill="rgb(228,116,20)" fg:x="1018" fg:w="4"/><text x="44.3193%" y="943.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.17%)</title><rect x="44.0693%" y="917" width="0.1732%" height="15" fill="rgb(209,192,17)" fg:x="1018" fg:w="4"/><text x="44.3193%" y="927.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.17%)</title><rect x="44.0693%" y="901" width="0.1732%" height="15" fill="rgb(224,88,34)" fg:x="1018" fg:w="4"/><text x="44.3193%" y="911.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.09%)</title><rect x="44.1558%" y="885" width="0.0866%" height="15" fill="rgb(233,38,6)" fg:x="1020" fg:w="2"/><text x="44.4058%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.13%)</title><rect x="44.4589%" y="885" width="0.1299%" height="15" fill="rgb(212,59,30)" fg:x="1027" fg:w="3"/><text x="44.7089%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.09%)</title><rect x="44.5022%" y="869" width="0.0866%" height="15" fill="rgb(213,80,3)" fg:x="1028" fg:w="2"/><text x="44.7522%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.43%)</title><rect x="44.2424%" y="933" width="0.4329%" height="15" fill="rgb(251,178,7)" fg:x="1022" fg:w="10"/><text x="44.4924%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.39%)</title><rect x="44.2857%" y="917" width="0.3896%" height="15" fill="rgb(213,154,26)" fg:x="1023" fg:w="9"/><text x="44.5357%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.39%)</title><rect x="44.2857%" y="901" width="0.3896%" height="15" fill="rgb(238,165,49)" fg:x="1023" fg:w="9"/><text x="44.5357%" y="911.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.09%)</title><rect x="44.5887%" y="885" width="0.0866%" height="15" fill="rgb(248,91,46)" fg:x="1030" fg:w="2"/><text x="44.8387%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="44.7186%" y="869" width="0.0433%" height="15" fill="rgb(244,21,52)" fg:x="1033" fg:w="1"/><text x="44.9686%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="44.7186%" y="853" width="0.0433%" height="15" fill="rgb(247,122,20)" fg:x="1033" fg:w="1"/><text x="44.9686%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (13 samples, 0.56%)</title><rect x="44.2424%" y="965" width="0.5628%" height="15" fill="rgb(218,27,9)" fg:x="1022" fg:w="13"/><text x="44.4924%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (13 samples, 0.56%)</title><rect x="44.2424%" y="949" width="0.5628%" height="15" fill="rgb(246,7,6)" fg:x="1022" fg:w="13"/><text x="44.4924%" y="959.50"></text></g><g><title>core::hash::Hasher::write_u8 (3 samples, 0.13%)</title><rect x="44.6753%" y="933" width="0.1299%" height="15" fill="rgb(227,135,54)" fg:x="1032" fg:w="3"/><text x="44.9253%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="44.6753%" y="917" width="0.1299%" height="15" fill="rgb(247,14,11)" fg:x="1032" fg:w="3"/><text x="44.9253%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="44.6753%" y="901" width="0.1299%" height="15" fill="rgb(206,149,34)" fg:x="1032" fg:w="3"/><text x="44.9253%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="44.6753%" y="885" width="0.1299%" height="15" fill="rgb(227,228,4)" fg:x="1032" fg:w="3"/><text x="44.9253%" y="895.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="44.7619%" y="869" width="0.0433%" height="15" fill="rgb(238,218,28)" fg:x="1034" fg:w="1"/><text x="45.0119%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="44.8052%" y="917" width="0.0433%" height="15" fill="rgb(252,86,40)" fg:x="1035" fg:w="1"/><text x="45.0552%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.65%)</title><rect x="44.2424%" y="981" width="0.6494%" height="15" fill="rgb(251,225,11)" fg:x="1022" fg:w="15"/><text x="44.4924%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="44.8052%" y="965" width="0.0866%" height="15" fill="rgb(206,46,49)" fg:x="1035" fg:w="2"/><text x="45.0552%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="44.8052%" y="949" width="0.0866%" height="15" fill="rgb(245,128,24)" fg:x="1035" fg:w="2"/><text x="45.0552%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="44.8052%" y="933" width="0.0866%" height="15" fill="rgb(219,177,34)" fg:x="1035" fg:w="2"/><text x="45.0552%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="44.8485%" y="917" width="0.0433%" height="15" fill="rgb(218,60,48)" fg:x="1036" fg:w="1"/><text x="45.0985%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="44.8485%" y="901" width="0.0433%" height="15" fill="rgb(221,11,5)" fg:x="1036" fg:w="1"/><text x="45.0985%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="44.8918%" y="917" width="0.1299%" height="15" fill="rgb(220,148,13)" fg:x="1037" fg:w="3"/><text x="45.1418%" y="927.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.13%)</title><rect x="44.8918%" y="901" width="0.1299%" height="15" fill="rgb(210,16,3)" fg:x="1037" fg:w="3"/><text x="45.1418%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="44.8918%" y="949" width="0.1732%" height="15" fill="rgb(236,80,2)" fg:x="1037" fg:w="4"/><text x="45.1418%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="44.8918%" y="933" width="0.1732%" height="15" fill="rgb(239,129,19)" fg:x="1037" fg:w="4"/><text x="45.1418%" y="943.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="45.0216%" y="917" width="0.0433%" height="15" fill="rgb(220,106,35)" fg:x="1040" fg:w="1"/><text x="45.2716%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.04%)</title><rect x="45.0216%" y="901" width="0.0433%" height="15" fill="rgb(252,139,45)" fg:x="1040" fg:w="1"/><text x="45.2716%" y="911.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.09%)</title><rect x="45.0649%" y="949" width="0.0866%" height="15" fill="rgb(229,8,36)" fg:x="1041" fg:w="2"/><text x="45.3149%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.09%)</title><rect x="45.0649%" y="933" width="0.0866%" height="15" fill="rgb(230,126,33)" fg:x="1041" fg:w="2"/><text x="45.3149%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.09%)</title><rect x="45.0649%" y="917" width="0.0866%" height="15" fill="rgb(239,140,21)" fg:x="1041" fg:w="2"/><text x="45.3149%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.09%)</title><rect x="45.0649%" y="901" width="0.0866%" height="15" fill="rgb(254,104,9)" fg:x="1041" fg:w="2"/><text x="45.3149%" y="911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.09%)</title><rect x="45.0649%" y="885" width="0.0866%" height="15" fill="rgb(239,52,14)" fg:x="1041" fg:w="2"/><text x="45.3149%" y="895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.09%)</title><rect x="45.0649%" y="869" width="0.0866%" height="15" fill="rgb(208,227,44)" fg:x="1041" fg:w="2"/><text x="45.3149%" y="879.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (24 samples, 1.04%)</title><rect x="44.2424%" y="1045" width="1.0390%" height="15" fill="rgb(246,18,19)" fg:x="1022" fg:w="24"/><text x="44.4924%" y="1055.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (24 samples, 1.04%)</title><rect x="44.2424%" y="1029" width="1.0390%" height="15" fill="rgb(235,228,25)" fg:x="1022" fg:w="24"/><text x="44.4924%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (24 samples, 1.04%)</title><rect x="44.2424%" y="1013" width="1.0390%" height="15" fill="rgb(240,156,20)" fg:x="1022" fg:w="24"/><text x="44.4924%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (24 samples, 1.04%)</title><rect x="44.2424%" y="997" width="1.0390%" height="15" fill="rgb(224,8,20)" fg:x="1022" fg:w="24"/><text x="44.4924%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.39%)</title><rect x="44.8918%" y="981" width="0.3896%" height="15" fill="rgb(214,12,52)" fg:x="1037" fg:w="9"/><text x="45.1418%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.39%)</title><rect x="44.8918%" y="965" width="0.3896%" height="15" fill="rgb(211,220,47)" fg:x="1037" fg:w="9"/><text x="45.1418%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.13%)</title><rect x="45.1515%" y="949" width="0.1299%" height="15" fill="rgb(250,173,5)" fg:x="1043" fg:w="3"/><text x="45.4015%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.13%)</title><rect x="45.1515%" y="933" width="0.1299%" height="15" fill="rgb(250,125,52)" fg:x="1043" fg:w="3"/><text x="45.4015%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.13%)</title><rect x="45.1515%" y="917" width="0.1299%" height="15" fill="rgb(209,133,18)" fg:x="1043" fg:w="3"/><text x="45.4015%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.13%)</title><rect x="45.1515%" y="901" width="0.1299%" height="15" fill="rgb(216,173,22)" fg:x="1043" fg:w="3"/><text x="45.4015%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.13%)</title><rect x="45.1515%" y="885" width="0.1299%" height="15" fill="rgb(205,3,22)" fg:x="1043" fg:w="3"/><text x="45.4015%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.13%)</title><rect x="45.1515%" y="869" width="0.1299%" height="15" fill="rgb(248,22,20)" fg:x="1043" fg:w="3"/><text x="45.4015%" y="879.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.13%)</title><rect x="45.1515%" y="853" width="0.1299%" height="15" fill="rgb(233,6,29)" fg:x="1043" fg:w="3"/><text x="45.4015%" y="863.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.04%)</title><rect x="45.3247%" y="997" width="0.0433%" height="15" fill="rgb(240,22,54)" fg:x="1047" fg:w="1"/><text x="45.5747%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="45.3247%" y="981" width="0.0433%" height="15" fill="rgb(231,133,32)" fg:x="1047" fg:w="1"/><text x="45.5747%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.04%)</title><rect x="45.3247%" y="965" width="0.0433%" height="15" fill="rgb(248,193,4)" fg:x="1047" fg:w="1"/><text x="45.5747%" y="975.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.04%)</title><rect x="45.3247%" y="949" width="0.0433%" height="15" fill="rgb(211,178,46)" fg:x="1047" fg:w="1"/><text x="45.5747%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="45.3247%" y="933" width="0.0433%" height="15" fill="rgb(224,5,42)" fg:x="1047" fg:w="1"/><text x="45.5747%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="45.3247%" y="917" width="0.0433%" height="15" fill="rgb(239,176,25)" fg:x="1047" fg:w="1"/><text x="45.5747%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="45.3247%" y="901" width="0.0433%" height="15" fill="rgb(245,187,50)" fg:x="1047" fg:w="1"/><text x="45.5747%" y="911.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="45.3247%" y="885" width="0.0433%" height="15" fill="rgb(248,24,15)" fg:x="1047" fg:w="1"/><text x="45.5747%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="45.4545%" y="885" width="0.0433%" height="15" fill="rgb(205,166,13)" fg:x="1050" fg:w="1"/><text x="45.7045%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="45.4545%" y="869" width="0.0433%" height="15" fill="rgb(208,114,23)" fg:x="1050" fg:w="1"/><text x="45.7045%" y="879.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="49.0909%" y="805" width="0.0433%" height="15" fill="rgb(239,127,18)" fg:x="1134" fg:w="1"/><text x="49.3409%" y="815.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="49.0909%" y="789" width="0.0433%" height="15" fill="rgb(219,154,28)" fg:x="1134" fg:w="1"/><text x="49.3409%" y="799.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="49.0909%" y="773" width="0.0433%" height="15" fill="rgb(225,157,23)" fg:x="1134" fg:w="1"/><text x="49.3409%" y="783.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.04%)</title><rect x="49.0909%" y="757" width="0.0433%" height="15" fill="rgb(219,8,6)" fg:x="1134" fg:w="1"/><text x="49.3409%" y="767.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.04%)</title><rect x="49.0909%" y="741" width="0.0433%" height="15" fill="rgb(212,47,6)" fg:x="1134" fg:w="1"/><text x="49.3409%" y="751.50"></text></g><g><title>tick_sched_timer (1 samples, 0.04%)</title><rect x="49.0909%" y="725" width="0.0433%" height="15" fill="rgb(224,190,4)" fg:x="1134" fg:w="1"/><text x="49.3409%" y="735.50"></text></g><g><title>tick_sched_handle.isra.0 (1 samples, 0.04%)</title><rect x="49.0909%" y="709" width="0.0433%" height="15" fill="rgb(239,183,29)" fg:x="1134" fg:w="1"/><text x="49.3409%" y="719.50"></text></g><g><title>update_process_times (1 samples, 0.04%)</title><rect x="49.0909%" y="693" width="0.0433%" height="15" fill="rgb(213,57,7)" fg:x="1134" fg:w="1"/><text x="49.3409%" y="703.50"></text></g><g><title>calc_global_load_tick (1 samples, 0.04%)</title><rect x="49.0909%" y="677" width="0.0433%" height="15" fill="rgb(216,148,1)" fg:x="1134" fg:w="1"/><text x="49.3409%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.22%)</title><rect x="49.1342%" y="805" width="0.2165%" height="15" fill="rgb(236,182,29)" fg:x="1135" fg:w="5"/><text x="49.3842%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (91 samples, 3.94%)</title><rect x="45.4978%" y="821" width="3.9394%" height="15" fill="rgb(244,120,48)" fg:x="1051" fg:w="91"/><text x="45.7478%" y="831.50">&lt;cor..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.09%)</title><rect x="49.3506%" y="805" width="0.0866%" height="15" fill="rgb(206,71,34)" fg:x="1140" fg:w="2"/><text x="49.6006%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (95 samples, 4.11%)</title><rect x="45.4978%" y="869" width="4.1126%" height="15" fill="rgb(242,32,6)" fg:x="1051" fg:w="95"/><text x="45.7478%" y="879.50">&lt;std..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (95 samples, 4.11%)</title><rect x="45.4978%" y="853" width="4.1126%" height="15" fill="rgb(241,35,3)" fg:x="1051" fg:w="95"/><text x="45.7478%" y="863.50">&lt;cor..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (95 samples, 4.11%)</title><rect x="45.4978%" y="837" width="4.1126%" height="15" fill="rgb(222,62,19)" fg:x="1051" fg:w="95"/><text x="45.7478%" y="847.50">&lt;cor..</text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.17%)</title><rect x="49.4372%" y="821" width="0.1732%" height="15" fill="rgb(223,110,41)" fg:x="1142" fg:w="4"/><text x="49.6872%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.09%)</title><rect x="49.5238%" y="805" width="0.0866%" height="15" fill="rgb(208,224,4)" fg:x="1144" fg:w="2"/><text x="49.7738%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (98 samples, 4.24%)</title><rect x="45.4545%" y="901" width="4.2424%" height="15" fill="rgb(241,137,19)" fg:x="1050" fg:w="98"/><text x="45.7045%" y="911.50">&lt;allo..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (97 samples, 4.20%)</title><rect x="45.4978%" y="885" width="4.1991%" height="15" fill="rgb(244,24,17)" fg:x="1051" fg:w="97"/><text x="45.7478%" y="895.50">core:..</text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.09%)</title><rect x="49.6104%" y="869" width="0.0866%" height="15" fill="rgb(245,178,49)" fg:x="1146" fg:w="2"/><text x="49.8604%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="49.6104%" y="853" width="0.0866%" height="15" fill="rgb(219,160,38)" fg:x="1146" fg:w="2"/><text x="49.8604%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="49.6104%" y="837" width="0.0866%" height="15" fill="rgb(228,137,14)" fg:x="1146" fg:w="2"/><text x="49.8604%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="49.6104%" y="821" width="0.0866%" height="15" fill="rgb(237,134,11)" fg:x="1146" fg:w="2"/><text x="49.8604%" y="831.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.09%)</title><rect x="49.6104%" y="805" width="0.0866%" height="15" fill="rgb(211,126,44)" fg:x="1146" fg:w="2"/><text x="49.8604%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.17%)</title><rect x="49.8701%" y="837" width="0.1732%" height="15" fill="rgb(226,171,33)" fg:x="1152" fg:w="4"/><text x="50.1201%" y="847.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (110 samples, 4.76%)</title><rect x="45.4113%" y="933" width="4.7619%" height="15" fill="rgb(253,99,13)" fg:x="1049" fg:w="110"/><text x="45.6613%" y="943.50">hashbr..</text></g><g><title>hashbrown::map::make_hash (110 samples, 4.76%)</title><rect x="45.4113%" y="917" width="4.7619%" height="15" fill="rgb(244,48,7)" fg:x="1049" fg:w="110"/><text x="45.6613%" y="927.50">hashbr..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.48%)</title><rect x="49.6970%" y="901" width="0.4762%" height="15" fill="rgb(244,217,54)" fg:x="1148" fg:w="11"/><text x="49.9470%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.48%)</title><rect x="49.6970%" y="885" width="0.4762%" height="15" fill="rgb(224,15,18)" fg:x="1148" fg:w="11"/><text x="49.9470%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.48%)</title><rect x="49.6970%" y="869" width="0.4762%" height="15" fill="rgb(244,99,12)" fg:x="1148" fg:w="11"/><text x="49.9470%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.39%)</title><rect x="49.7835%" y="853" width="0.3896%" height="15" fill="rgb(233,226,8)" fg:x="1150" fg:w="9"/><text x="50.0335%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.13%)</title><rect x="50.0433%" y="837" width="0.1299%" height="15" fill="rgb(229,211,3)" fg:x="1156" fg:w="3"/><text x="50.2933%" y="847.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="50.3896%" y="789" width="0.0433%" height="15" fill="rgb(216,140,21)" fg:x="1164" fg:w="1"/><text x="50.6396%" y="799.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="50.3896%" y="773" width="0.0433%" height="15" fill="rgb(234,122,30)" fg:x="1164" fg:w="1"/><text x="50.6396%" y="783.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="50.3896%" y="757" width="0.0433%" height="15" fill="rgb(236,25,46)" fg:x="1164" fg:w="1"/><text x="50.6396%" y="767.50"></text></g><g><title>clear_page_rep (1 samples, 0.04%)</title><rect x="50.3896%" y="741" width="0.0433%" height="15" fill="rgb(217,52,54)" fg:x="1164" fg:w="1"/><text x="50.6396%" y="751.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.04%)</title><rect x="50.4329%" y="789" width="0.0433%" height="15" fill="rgb(222,29,26)" fg:x="1165" fg:w="1"/><text x="50.6829%" y="799.50"></text></g><g><title>lru_cache_add (1 samples, 0.04%)</title><rect x="50.4329%" y="773" width="0.0433%" height="15" fill="rgb(216,177,29)" fg:x="1165" fg:w="1"/><text x="50.6829%" y="783.50"></text></g><g><title>__pagevec_lru_add (1 samples, 0.04%)</title><rect x="50.4329%" y="757" width="0.0433%" height="15" fill="rgb(247,136,51)" fg:x="1165" fg:w="1"/><text x="50.6829%" y="767.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.04%)</title><rect x="50.4329%" y="741" width="0.0433%" height="15" fill="rgb(231,47,47)" fg:x="1165" fg:w="1"/><text x="50.6829%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (8 samples, 0.35%)</title><rect x="50.1732%" y="917" width="0.3463%" height="15" fill="rgb(211,192,36)" fg:x="1159" fg:w="8"/><text x="50.4232%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.35%)</title><rect x="50.1732%" y="901" width="0.3463%" height="15" fill="rgb(229,156,32)" fg:x="1159" fg:w="8"/><text x="50.4232%" y="911.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.22%)</title><rect x="50.3030%" y="885" width="0.2165%" height="15" fill="rgb(248,213,20)" fg:x="1162" fg:w="5"/><text x="50.5530%" y="895.50"></text></g><g><title>exc_page_fault (4 samples, 0.17%)</title><rect x="50.3463%" y="869" width="0.1732%" height="15" fill="rgb(217,64,7)" fg:x="1163" fg:w="4"/><text x="50.5963%" y="879.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.13%)</title><rect x="50.3896%" y="853" width="0.1299%" height="15" fill="rgb(232,142,8)" fg:x="1164" fg:w="3"/><text x="50.6396%" y="863.50"></text></g><g><title>handle_mm_fault (3 samples, 0.13%)</title><rect x="50.3896%" y="837" width="0.1299%" height="15" fill="rgb(224,92,44)" fg:x="1164" fg:w="3"/><text x="50.6396%" y="847.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.13%)</title><rect x="50.3896%" y="821" width="0.1299%" height="15" fill="rgb(214,169,17)" fg:x="1164" fg:w="3"/><text x="50.6396%" y="831.50"></text></g><g><title>do_anonymous_page (3 samples, 0.13%)</title><rect x="50.3896%" y="805" width="0.1299%" height="15" fill="rgb(210,59,37)" fg:x="1164" fg:w="3"/><text x="50.6396%" y="815.50"></text></g><g><title>mem_cgroup_charge (1 samples, 0.04%)</title><rect x="50.4762%" y="789" width="0.0433%" height="15" fill="rgb(214,116,48)" fg:x="1166" fg:w="1"/><text x="50.7262%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (9 samples, 0.39%)</title><rect x="50.1732%" y="933" width="0.3896%" height="15" fill="rgb(244,191,6)" fg:x="1159" fg:w="9"/><text x="50.4232%" y="943.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="50.5195%" y="917" width="0.0433%" height="15" fill="rgb(241,50,52)" fg:x="1167" fg:w="1"/><text x="50.7695%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.04%)</title><rect x="50.5195%" y="901" width="0.0433%" height="15" fill="rgb(236,75,39)" fg:x="1167" fg:w="1"/><text x="50.7695%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="50.5195%" y="885" width="0.0433%" height="15" fill="rgb(236,99,0)" fg:x="1167" fg:w="1"/><text x="50.7695%" y="895.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="50.6061%" y="901" width="0.0433%" height="15" fill="rgb(207,202,15)" fg:x="1169" fg:w="1"/><text x="50.8561%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (6 samples, 0.26%)</title><rect x="50.5628%" y="933" width="0.2597%" height="15" fill="rgb(233,207,14)" fg:x="1168" fg:w="6"/><text x="50.8128%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (6 samples, 0.26%)</title><rect x="50.5628%" y="917" width="0.2597%" height="15" fill="rgb(226,27,51)" fg:x="1168" fg:w="6"/><text x="50.8128%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.17%)</title><rect x="50.6494%" y="901" width="0.1732%" height="15" fill="rgb(206,104,42)" fg:x="1170" fg:w="4"/><text x="50.8994%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.17%)</title><rect x="50.6494%" y="885" width="0.1732%" height="15" fill="rgb(212,225,4)" fg:x="1170" fg:w="4"/><text x="50.8994%" y="895.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (129 samples, 5.58%)</title><rect x="45.2814%" y="1045" width="5.5844%" height="15" fill="rgb(233,96,42)" fg:x="1046" fg:w="129"/><text x="45.5314%" y="1055.50">std::co..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (129 samples, 5.58%)</title><rect x="45.2814%" y="1029" width="5.5844%" height="15" fill="rgb(229,21,32)" fg:x="1046" fg:w="129"/><text x="45.5314%" y="1039.50">hashbro..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (129 samples, 5.58%)</title><rect x="45.2814%" y="1013" width="5.5844%" height="15" fill="rgb(226,216,24)" fg:x="1046" fg:w="129"/><text x="45.5314%" y="1023.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (127 samples, 5.50%)</title><rect x="45.3680%" y="997" width="5.4978%" height="15" fill="rgb(221,163,17)" fg:x="1048" fg:w="127"/><text x="45.6180%" y="1007.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (126 samples, 5.45%)</title><rect x="45.4113%" y="981" width="5.4545%" height="15" fill="rgb(216,216,42)" fg:x="1049" fg:w="126"/><text x="45.6613%" y="991.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (126 samples, 5.45%)</title><rect x="45.4113%" y="965" width="5.4545%" height="15" fill="rgb(240,118,7)" fg:x="1049" fg:w="126"/><text x="45.6613%" y="975.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (126 samples, 5.45%)</title><rect x="45.4113%" y="949" width="5.4545%" height="15" fill="rgb(221,67,37)" fg:x="1049" fg:w="126"/><text x="45.6613%" y="959.50">hashbro..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.04%)</title><rect x="50.8225%" y="933" width="0.0433%" height="15" fill="rgb(241,32,44)" fg:x="1174" fg:w="1"/><text x="51.0725%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.04%)</title><rect x="50.8225%" y="917" width="0.0433%" height="15" fill="rgb(235,204,43)" fg:x="1174" fg:w="1"/><text x="51.0725%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.04%)</title><rect x="50.8225%" y="901" width="0.0433%" height="15" fill="rgb(213,116,10)" fg:x="1174" fg:w="1"/><text x="51.0725%" y="911.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.04%)</title><rect x="50.8225%" y="885" width="0.0433%" height="15" fill="rgb(239,15,48)" fg:x="1174" fg:w="1"/><text x="51.0725%" y="895.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.04%)</title><rect x="50.8225%" y="869" width="0.0433%" height="15" fill="rgb(207,123,36)" fg:x="1174" fg:w="1"/><text x="51.0725%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.13%)</title><rect x="50.9957%" y="901" width="0.1299%" height="15" fill="rgb(209,103,30)" fg:x="1178" fg:w="3"/><text x="51.2457%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.13%)</title><rect x="50.9957%" y="885" width="0.1299%" height="15" fill="rgb(238,100,19)" fg:x="1178" fg:w="3"/><text x="51.2457%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.13%)</title><rect x="50.9957%" y="869" width="0.1299%" height="15" fill="rgb(244,30,14)" fg:x="1178" fg:w="3"/><text x="51.2457%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.13%)</title><rect x="50.9957%" y="853" width="0.1299%" height="15" fill="rgb(249,174,6)" fg:x="1178" fg:w="3"/><text x="51.2457%" y="863.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.13%)</title><rect x="50.9957%" y="837" width="0.1299%" height="15" fill="rgb(235,213,41)" fg:x="1178" fg:w="3"/><text x="51.2457%" y="847.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.13%)</title><rect x="50.9957%" y="821" width="0.1299%" height="15" fill="rgb(213,118,6)" fg:x="1178" fg:w="3"/><text x="51.2457%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.13%)</title><rect x="50.9957%" y="805" width="0.1299%" height="15" fill="rgb(235,44,51)" fg:x="1178" fg:w="3"/><text x="51.2457%" y="815.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="51.2121%" y="869" width="0.1299%" height="15" fill="rgb(217,9,53)" fg:x="1183" fg:w="3"/><text x="51.4621%" y="879.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.13%)</title><rect x="51.2121%" y="853" width="0.1299%" height="15" fill="rgb(237,172,34)" fg:x="1183" fg:w="3"/><text x="51.4621%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (6 samples, 0.26%)</title><rect x="51.1255%" y="901" width="0.2597%" height="15" fill="rgb(206,206,11)" fg:x="1181" fg:w="6"/><text x="51.3755%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.26%)</title><rect x="51.1255%" y="885" width="0.2597%" height="15" fill="rgb(214,149,29)" fg:x="1181" fg:w="6"/><text x="51.3755%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1 samples, 0.04%)</title><rect x="51.3420%" y="869" width="0.0433%" height="15" fill="rgb(208,123,3)" fg:x="1186" fg:w="1"/><text x="51.5920%" y="879.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}}::{{closure}} (1 samples, 0.04%)</title><rect x="51.3420%" y="853" width="0.0433%" height="15" fill="rgb(229,126,4)" fg:x="1186" fg:w="1"/><text x="51.5920%" y="863.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_lowercase (1 samples, 0.04%)</title><rect x="51.3420%" y="837" width="0.0433%" height="15" fill="rgb(222,92,36)" fg:x="1186" fg:w="1"/><text x="51.5920%" y="847.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.22%)</title><rect x="52.6407%" y="805" width="0.2165%" height="15" fill="rgb(216,39,41)" fg:x="1216" fg:w="5"/><text x="52.8907%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.22%)</title><rect x="52.6407%" y="789" width="0.2165%" height="15" fill="rgb(253,127,28)" fg:x="1216" fg:w="5"/><text x="52.8907%" y="799.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.04%)</title><rect x="52.8139%" y="773" width="0.0433%" height="15" fill="rgb(249,152,51)" fg:x="1220" fg:w="1"/><text x="53.0639%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.04%)</title><rect x="52.8139%" y="757" width="0.0433%" height="15" fill="rgb(209,123,42)" fg:x="1220" fg:w="1"/><text x="53.0639%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (40 samples, 1.73%)</title><rect x="51.3853%" y="901" width="1.7316%" height="15" fill="rgb(241,118,22)" fg:x="1187" fg:w="40"/><text x="51.6353%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (30 samples, 1.30%)</title><rect x="51.8182%" y="885" width="1.2987%" height="15" fill="rgb(208,25,7)" fg:x="1197" fg:w="30"/><text x="52.0682%" y="895.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 1.21%)</title><rect x="51.9048%" y="869" width="1.2121%" height="15" fill="rgb(243,144,39)" fg:x="1199" fg:w="28"/><text x="52.1548%" y="879.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (28 samples, 1.21%)</title><rect x="51.9048%" y="853" width="1.2121%" height="15" fill="rgb(250,50,5)" fg:x="1199" fg:w="28"/><text x="52.1548%" y="863.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (28 samples, 1.21%)</title><rect x="51.9048%" y="837" width="1.2121%" height="15" fill="rgb(207,67,11)" fg:x="1199" fg:w="28"/><text x="52.1548%" y="847.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (24 samples, 1.04%)</title><rect x="52.0779%" y="821" width="1.0390%" height="15" fill="rgb(245,204,40)" fg:x="1203" fg:w="24"/><text x="52.3279%" y="831.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (6 samples, 0.26%)</title><rect x="52.8571%" y="805" width="0.2597%" height="15" fill="rgb(238,228,24)" fg:x="1221" fg:w="6"/><text x="53.1071%" y="815.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.17%)</title><rect x="53.2900%" y="821" width="0.1732%" height="15" fill="rgb(217,116,22)" fg:x="1231" fg:w="4"/><text x="53.5400%" y="831.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.17%)</title><rect x="53.2900%" y="805" width="0.1732%" height="15" fill="rgb(234,98,12)" fg:x="1231" fg:w="4"/><text x="53.5400%" y="815.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.13%)</title><rect x="53.3333%" y="789" width="0.1299%" height="15" fill="rgb(242,170,50)" fg:x="1232" fg:w="3"/><text x="53.5833%" y="799.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1 samples, 0.04%)</title><rect x="53.4632%" y="821" width="0.0433%" height="15" fill="rgb(235,7,5)" fg:x="1235" fg:w="1"/><text x="53.7132%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="53.4632%" y="805" width="0.0433%" height="15" fill="rgb(241,114,28)" fg:x="1235" fg:w="1"/><text x="53.7132%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="53.4632%" y="789" width="0.0433%" height="15" fill="rgb(246,112,42)" fg:x="1235" fg:w="1"/><text x="53.7132%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (61 samples, 2.64%)</title><rect x="50.9524%" y="949" width="2.6407%" height="15" fill="rgb(248,228,14)" fg:x="1177" fg:w="61"/><text x="51.2024%" y="959.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (61 samples, 2.64%)</title><rect x="50.9524%" y="933" width="2.6407%" height="15" fill="rgb(208,133,18)" fg:x="1177" fg:w="61"/><text x="51.2024%" y="943.50">co..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (61 samples, 2.64%)</title><rect x="50.9524%" y="917" width="2.6407%" height="15" fill="rgb(207,35,49)" fg:x="1177" fg:w="61"/><text x="51.2024%" y="927.50">y2..</text></g><g><title>core::str::&lt;impl str&gt;::matches (11 samples, 0.48%)</title><rect x="53.1169%" y="901" width="0.4762%" height="15" fill="rgb(205,68,36)" fg:x="1227" fg:w="11"/><text x="53.3669%" y="911.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (11 samples, 0.48%)</title><rect x="53.1169%" y="885" width="0.4762%" height="15" fill="rgb(245,62,40)" fg:x="1227" fg:w="11"/><text x="53.3669%" y="895.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (11 samples, 0.48%)</title><rect x="53.1169%" y="869" width="0.4762%" height="15" fill="rgb(228,27,24)" fg:x="1227" fg:w="11"/><text x="53.3669%" y="879.50"></text></g><g><title>core::str::pattern::StrSearcher::new (10 samples, 0.43%)</title><rect x="53.1602%" y="853" width="0.4329%" height="15" fill="rgb(253,19,12)" fg:x="1228" fg:w="10"/><text x="53.4102%" y="863.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (8 samples, 0.35%)</title><rect x="53.2468%" y="837" width="0.3463%" height="15" fill="rgb(232,28,20)" fg:x="1230" fg:w="8"/><text x="53.4968%" y="847.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (2 samples, 0.09%)</title><rect x="53.5065%" y="821" width="0.0866%" height="15" fill="rgb(218,35,51)" fg:x="1236" fg:w="2"/><text x="53.7565%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 2.68%)</title><rect x="50.9524%" y="1029" width="2.6840%" height="15" fill="rgb(212,90,40)" fg:x="1177" fg:w="62"/><text x="51.2024%" y="1039.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find (62 samples, 2.68%)</title><rect x="50.9524%" y="1013" width="2.6840%" height="15" fill="rgb(220,172,12)" fg:x="1177" fg:w="62"/><text x="51.2024%" y="1023.50">co..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (62 samples, 2.68%)</title><rect x="50.9524%" y="997" width="2.6840%" height="15" fill="rgb(226,159,20)" fg:x="1177" fg:w="62"/><text x="51.2024%" y="1007.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (62 samples, 2.68%)</title><rect x="50.9524%" y="981" width="2.6840%" height="15" fill="rgb(234,205,16)" fg:x="1177" fg:w="62"/><text x="51.2024%" y="991.50">co..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (62 samples, 2.68%)</title><rect x="50.9524%" y="965" width="2.6840%" height="15" fill="rgb(207,9,39)" fg:x="1177" fg:w="62"/><text x="51.2024%" y="975.50">co..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.04%)</title><rect x="53.5931%" y="949" width="0.0433%" height="15" fill="rgb(249,143,15)" fg:x="1238" fg:w="1"/><text x="53.8431%" y="959.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.04%)</title><rect x="53.6797%" y="1013" width="0.0433%" height="15" fill="rgb(253,133,29)" fg:x="1240" fg:w="1"/><text x="53.9297%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.04%)</title><rect x="53.6797%" y="997" width="0.0433%" height="15" fill="rgb(221,187,0)" fg:x="1240" fg:w="1"/><text x="53.9297%" y="1007.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.04%)</title><rect x="53.6797%" y="981" width="0.0433%" height="15" fill="rgb(205,204,26)" fg:x="1240" fg:w="1"/><text x="53.9297%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="53.6797%" y="965" width="0.0433%" height="15" fill="rgb(224,68,54)" fg:x="1240" fg:w="1"/><text x="53.9297%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="53.6797%" y="949" width="0.0433%" height="15" fill="rgb(209,67,4)" fg:x="1240" fg:w="1"/><text x="53.9297%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="53.6797%" y="933" width="0.0433%" height="15" fill="rgb(228,229,18)" fg:x="1240" fg:w="1"/><text x="53.9297%" y="943.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.09%)</title><rect x="53.9394%" y="981" width="0.0866%" height="15" fill="rgb(231,89,13)" fg:x="1246" fg:w="2"/><text x="54.1894%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (3 samples, 0.13%)</title><rect x="54.0260%" y="821" width="0.1299%" height="15" fill="rgb(210,182,18)" fg:x="1248" fg:w="3"/><text x="54.2760%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="54.5455%" y="725" width="0.0433%" height="15" fill="rgb(240,105,2)" fg:x="1260" fg:w="1"/><text x="54.7955%" y="735.50"></text></g><g><title>__GI___libc_realloc (16 samples, 0.69%)</title><rect x="54.1991%" y="757" width="0.6926%" height="15" fill="rgb(207,170,50)" fg:x="1252" fg:w="16"/><text x="54.4491%" y="767.50"></text></g><g><title>_int_realloc (11 samples, 0.48%)</title><rect x="54.4156%" y="741" width="0.4762%" height="15" fill="rgb(232,133,24)" fg:x="1257" fg:w="11"/><text x="54.6656%" y="751.50"></text></g><g><title>_int_malloc (7 samples, 0.30%)</title><rect x="54.5887%" y="725" width="0.3030%" height="15" fill="rgb(235,166,27)" fg:x="1261" fg:w="7"/><text x="54.8387%" y="735.50"></text></g><g><title>checked_request2size (1 samples, 0.04%)</title><rect x="54.8485%" y="709" width="0.0433%" height="15" fill="rgb(209,19,13)" fg:x="1267" fg:w="1"/><text x="55.0985%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 0.74%)</title><rect x="54.1991%" y="805" width="0.7359%" height="15" fill="rgb(226,79,39)" fg:x="1252" fg:w="17"/><text x="54.4491%" y="815.50"></text></g><g><title>alloc::alloc::Global::grow_impl (17 samples, 0.74%)</title><rect x="54.1991%" y="789" width="0.7359%" height="15" fill="rgb(222,163,10)" fg:x="1252" fg:w="17"/><text x="54.4491%" y="799.50"></text></g><g><title>alloc::alloc::realloc (17 samples, 0.74%)</title><rect x="54.1991%" y="773" width="0.7359%" height="15" fill="rgb(214,44,19)" fg:x="1252" fg:w="17"/><text x="54.4491%" y="783.50"></text></g><g><title>__rust_realloc (1 samples, 0.04%)</title><rect x="54.8918%" y="757" width="0.0433%" height="15" fill="rgb(210,217,13)" fg:x="1268" fg:w="1"/><text x="55.1418%" y="767.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.09%)</title><rect x="54.9351%" y="805" width="0.0866%" height="15" fill="rgb(237,61,54)" fg:x="1269" fg:w="2"/><text x="55.1851%" y="815.50"></text></g><g><title>checked_request2size (1 samples, 0.04%)</title><rect x="54.9784%" y="789" width="0.0433%" height="15" fill="rgb(226,184,24)" fg:x="1270" fg:w="1"/><text x="55.2284%" y="799.50"></text></g><g><title>__rdl_alloc (2 samples, 0.09%)</title><rect x="55.0216%" y="805" width="0.0866%" height="15" fill="rgb(223,226,4)" fg:x="1271" fg:w="2"/><text x="55.2716%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.09%)</title><rect x="55.0216%" y="789" width="0.0866%" height="15" fill="rgb(210,26,41)" fg:x="1271" fg:w="2"/><text x="55.2716%" y="799.50"></text></g><g><title>__rust_alloc (1 samples, 0.04%)</title><rect x="55.1082%" y="805" width="0.0433%" height="15" fill="rgb(220,221,6)" fg:x="1273" fg:w="1"/><text x="55.3582%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 1.08%)</title><rect x="54.1558%" y="821" width="1.0823%" height="15" fill="rgb(225,89,49)" fg:x="1251" fg:w="25"/><text x="54.4058%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.09%)</title><rect x="55.1515%" y="805" width="0.0866%" height="15" fill="rgb(218,70,45)" fg:x="1274" fg:w="2"/><text x="55.4015%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (29 samples, 1.26%)</title><rect x="54.0260%" y="885" width="1.2554%" height="15" fill="rgb(238,166,21)" fg:x="1248" fg:w="29"/><text x="54.2760%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (29 samples, 1.26%)</title><rect x="54.0260%" y="869" width="1.2554%" height="15" fill="rgb(224,141,44)" fg:x="1248" fg:w="29"/><text x="54.2760%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 1.26%)</title><rect x="54.0260%" y="853" width="1.2554%" height="15" fill="rgb(230,12,49)" fg:x="1248" fg:w="29"/><text x="54.2760%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 1.26%)</title><rect x="54.0260%" y="837" width="1.2554%" height="15" fill="rgb(212,174,12)" fg:x="1248" fg:w="29"/><text x="54.2760%" y="847.50"></text></g><g><title>core::cmp::max (1 samples, 0.04%)</title><rect x="55.2381%" y="821" width="0.0433%" height="15" fill="rgb(246,67,9)" fg:x="1276" fg:w="1"/><text x="55.4881%" y="831.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="55.2381%" y="805" width="0.0433%" height="15" fill="rgb(239,35,23)" fg:x="1276" fg:w="1"/><text x="55.4881%" y="815.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.04%)</title><rect x="55.2381%" y="789" width="0.0433%" height="15" fill="rgb(211,167,0)" fg:x="1276" fg:w="1"/><text x="55.4881%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="55.2814%" y="885" width="0.0433%" height="15" fill="rgb(225,119,45)" fg:x="1277" fg:w="1"/><text x="55.5314%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="55.2814%" y="869" width="0.0433%" height="15" fill="rgb(210,162,6)" fg:x="1277" fg:w="1"/><text x="55.5314%" y="879.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (34 samples, 1.47%)</title><rect x="54.0260%" y="981" width="1.4719%" height="15" fill="rgb(208,118,35)" fg:x="1248" fg:w="34"/><text x="54.2760%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (34 samples, 1.47%)</title><rect x="54.0260%" y="965" width="1.4719%" height="15" fill="rgb(239,4,53)" fg:x="1248" fg:w="34"/><text x="54.2760%" y="975.50"></text></g><g><title>alloc::string::String::push_str (34 samples, 1.47%)</title><rect x="54.0260%" y="949" width="1.4719%" height="15" fill="rgb(213,130,21)" fg:x="1248" fg:w="34"/><text x="54.2760%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (34 samples, 1.47%)</title><rect x="54.0260%" y="933" width="1.4719%" height="15" fill="rgb(235,148,0)" fg:x="1248" fg:w="34"/><text x="54.2760%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 1.47%)</title><rect x="54.0260%" y="917" width="1.4719%" height="15" fill="rgb(244,224,18)" fg:x="1248" fg:w="34"/><text x="54.2760%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (34 samples, 1.47%)</title><rect x="54.0260%" y="901" width="1.4719%" height="15" fill="rgb(211,214,4)" fg:x="1248" fg:w="34"/><text x="54.2760%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.17%)</title><rect x="55.3247%" y="885" width="0.1732%" height="15" fill="rgb(206,119,25)" fg:x="1278" fg:w="4"/><text x="55.5747%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.17%)</title><rect x="55.3247%" y="869" width="0.1732%" height="15" fill="rgb(243,93,47)" fg:x="1278" fg:w="4"/><text x="55.5747%" y="879.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.04%)</title><rect x="55.4978%" y="981" width="0.0433%" height="15" fill="rgb(224,194,6)" fg:x="1282" fg:w="1"/><text x="55.7478%" y="991.50"></text></g><g><title>alloc::fmt::format (48 samples, 2.08%)</title><rect x="53.6364%" y="1029" width="2.0779%" height="15" fill="rgb(243,229,6)" fg:x="1239" fg:w="48"/><text x="53.8864%" y="1039.50">a..</text></g><g><title>core::fmt::Write::write_fmt (46 samples, 1.99%)</title><rect x="53.7229%" y="1013" width="1.9913%" height="15" fill="rgb(207,23,50)" fg:x="1241" fg:w="46"/><text x="53.9729%" y="1023.50">c..</text></g><g><title>core::fmt::write (43 samples, 1.86%)</title><rect x="53.8528%" y="997" width="1.8615%" height="15" fill="rgb(253,192,32)" fg:x="1244" fg:w="43"/><text x="54.1028%" y="1007.50">c..</text></g><g><title>core::fmt::Formatter::pad (4 samples, 0.17%)</title><rect x="55.5411%" y="981" width="0.1732%" height="15" fill="rgb(213,21,6)" fg:x="1283" fg:w="4"/><text x="55.7911%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.17%)</title><rect x="55.7143%" y="1029" width="0.1732%" height="15" fill="rgb(243,151,13)" fg:x="1287" fg:w="4"/><text x="55.9643%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.17%)</title><rect x="55.7143%" y="1013" width="0.1732%" height="15" fill="rgb(233,165,41)" fg:x="1287" fg:w="4"/><text x="55.9643%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.17%)</title><rect x="55.7143%" y="997" width="0.1732%" height="15" fill="rgb(246,176,45)" fg:x="1287" fg:w="4"/><text x="55.9643%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.17%)</title><rect x="55.7143%" y="981" width="0.1732%" height="15" fill="rgb(217,170,52)" fg:x="1287" fg:w="4"/><text x="55.9643%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.17%)</title><rect x="55.7143%" y="965" width="0.1732%" height="15" fill="rgb(214,203,54)" fg:x="1287" fg:w="4"/><text x="55.9643%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.17%)</title><rect x="55.7143%" y="949" width="0.1732%" height="15" fill="rgb(248,215,49)" fg:x="1287" fg:w="4"/><text x="55.9643%" y="959.50"></text></g><g><title>_int_free (4 samples, 0.17%)</title><rect x="55.7143%" y="933" width="0.1732%" height="15" fill="rgb(208,46,10)" fg:x="1287" fg:w="4"/><text x="55.9643%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.17%)</title><rect x="55.8874%" y="965" width="0.1732%" height="15" fill="rgb(254,5,31)" fg:x="1291" fg:w="4"/><text x="56.1374%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.17%)</title><rect x="55.8874%" y="949" width="0.1732%" height="15" fill="rgb(222,104,33)" fg:x="1291" fg:w="4"/><text x="56.1374%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.17%)</title><rect x="55.8874%" y="933" width="0.1732%" height="15" fill="rgb(248,49,16)" fg:x="1291" fg:w="4"/><text x="56.1374%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.17%)</title><rect x="55.8874%" y="917" width="0.1732%" height="15" fill="rgb(232,198,41)" fg:x="1291" fg:w="4"/><text x="56.1374%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.17%)</title><rect x="55.8874%" y="901" width="0.1732%" height="15" fill="rgb(214,125,3)" fg:x="1291" fg:w="4"/><text x="56.1374%" y="911.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="56.0173%" y="885" width="0.0433%" height="15" fill="rgb(229,220,28)" fg:x="1294" fg:w="1"/><text x="56.2673%" y="895.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="56.0173%" y="869" width="0.0433%" height="15" fill="rgb(222,64,37)" fg:x="1294" fg:w="1"/><text x="56.2673%" y="879.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.04%)</title><rect x="56.0173%" y="853" width="0.0433%" height="15" fill="rgb(249,184,13)" fg:x="1294" fg:w="1"/><text x="56.2673%" y="863.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.04%)</title><rect x="56.0173%" y="837" width="0.0433%" height="15" fill="rgb(252,176,6)" fg:x="1294" fg:w="1"/><text x="56.2673%" y="847.50"></text></g><g><title>asm_call_sysvec_on_stack (1 samples, 0.04%)</title><rect x="56.0173%" y="821" width="0.0433%" height="15" fill="rgb(228,153,7)" fg:x="1294" fg:w="1"/><text x="56.2673%" y="831.50"></text></g><g><title>asm_sysvec_irq_work (1 samples, 0.04%)</title><rect x="56.0173%" y="805" width="0.0433%" height="15" fill="rgb(242,193,5)" fg:x="1294" fg:w="1"/><text x="56.2673%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="56.0606%" y="965" width="0.0433%" height="15" fill="rgb(232,140,9)" fg:x="1295" fg:w="1"/><text x="56.3106%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="56.1039%" y="949" width="0.0866%" height="15" fill="rgb(213,222,16)" fg:x="1296" fg:w="2"/><text x="56.3539%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="56.1039%" y="933" width="0.0866%" height="15" fill="rgb(222,75,50)" fg:x="1296" fg:w="2"/><text x="56.3539%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="56.1039%" y="917" width="0.0866%" height="15" fill="rgb(205,180,2)" fg:x="1296" fg:w="2"/><text x="56.3539%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.43%)</title><rect x="55.8874%" y="981" width="0.4329%" height="15" fill="rgb(216,34,7)" fg:x="1291" fg:w="10"/><text x="56.1374%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (5 samples, 0.22%)</title><rect x="56.1039%" y="965" width="0.2165%" height="15" fill="rgb(253,16,32)" fg:x="1296" fg:w="5"/><text x="56.3539%" y="975.50"></text></g><g><title>core::hash::Hasher::write_u8 (3 samples, 0.13%)</title><rect x="56.1905%" y="949" width="0.1299%" height="15" fill="rgb(208,97,28)" fg:x="1298" fg:w="3"/><text x="56.4405%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="56.1905%" y="933" width="0.1299%" height="15" fill="rgb(225,92,11)" fg:x="1298" fg:w="3"/><text x="56.4405%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="56.1905%" y="917" width="0.1299%" height="15" fill="rgb(243,38,12)" fg:x="1298" fg:w="3"/><text x="56.4405%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="56.1905%" y="901" width="0.1299%" height="15" fill="rgb(208,139,16)" fg:x="1298" fg:w="3"/><text x="56.4405%" y="911.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.09%)</title><rect x="56.2338%" y="885" width="0.0866%" height="15" fill="rgb(227,24,9)" fg:x="1299" fg:w="2"/><text x="56.4838%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (14 samples, 0.61%)</title><rect x="55.8874%" y="1029" width="0.6061%" height="15" fill="rgb(206,62,11)" fg:x="1291" fg:w="14"/><text x="56.1374%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (14 samples, 0.61%)</title><rect x="55.8874%" y="1013" width="0.6061%" height="15" fill="rgb(228,134,27)" fg:x="1291" fg:w="14"/><text x="56.1374%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.61%)</title><rect x="55.8874%" y="997" width="0.6061%" height="15" fill="rgb(205,55,33)" fg:x="1291" fg:w="14"/><text x="56.1374%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.17%)</title><rect x="56.3203%" y="981" width="0.1732%" height="15" fill="rgb(243,75,43)" fg:x="1301" fg:w="4"/><text x="56.5703%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.17%)</title><rect x="56.3203%" y="965" width="0.1732%" height="15" fill="rgb(223,27,42)" fg:x="1301" fg:w="4"/><text x="56.5703%" y="975.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.04%)</title><rect x="56.4502%" y="949" width="0.0433%" height="15" fill="rgb(232,189,33)" fg:x="1304" fg:w="1"/><text x="56.7002%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.04%)</title><rect x="56.4502%" y="933" width="0.0433%" height="15" fill="rgb(210,9,39)" fg:x="1304" fg:w="1"/><text x="56.7002%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="56.4502%" y="917" width="0.0433%" height="15" fill="rgb(242,85,26)" fg:x="1304" fg:w="1"/><text x="56.7002%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="56.4502%" y="901" width="0.0433%" height="15" fill="rgb(248,44,4)" fg:x="1304" fg:w="1"/><text x="56.7002%" y="911.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="56.4502%" y="885" width="0.0433%" height="15" fill="rgb(250,96,46)" fg:x="1304" fg:w="1"/><text x="56.7002%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="56.7532%" y="853" width="0.0433%" height="15" fill="rgb(229,116,26)" fg:x="1311" fg:w="1"/><text x="57.0032%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.09%)</title><rect x="56.7532%" y="869" width="0.0866%" height="15" fill="rgb(246,94,34)" fg:x="1311" fg:w="2"/><text x="57.0032%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="56.7965%" y="853" width="0.0433%" height="15" fill="rgb(251,73,21)" fg:x="1312" fg:w="1"/><text x="57.0465%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.13%)</title><rect x="56.8398%" y="869" width="0.1299%" height="15" fill="rgb(254,121,25)" fg:x="1313" fg:w="3"/><text x="57.0898%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="56.9264%" y="853" width="0.0433%" height="15" fill="rgb(215,161,49)" fg:x="1315" fg:w="1"/><text x="57.1764%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.48%)</title><rect x="56.5368%" y="917" width="0.4762%" height="15" fill="rgb(221,43,13)" fg:x="1306" fg:w="11"/><text x="56.7868%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.48%)</title><rect x="56.5368%" y="901" width="0.4762%" height="15" fill="rgb(249,5,37)" fg:x="1306" fg:w="11"/><text x="56.7868%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.48%)</title><rect x="56.5368%" y="885" width="0.4762%" height="15" fill="rgb(226,25,44)" fg:x="1306" fg:w="11"/><text x="56.7868%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="56.9697%" y="869" width="0.0433%" height="15" fill="rgb(238,189,16)" fg:x="1316" fg:w="1"/><text x="57.2197%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (13 samples, 0.56%)</title><rect x="56.5368%" y="949" width="0.5628%" height="15" fill="rgb(251,186,8)" fg:x="1306" fg:w="13"/><text x="56.7868%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (13 samples, 0.56%)</title><rect x="56.5368%" y="933" width="0.5628%" height="15" fill="rgb(254,34,31)" fg:x="1306" fg:w="13"/><text x="56.7868%" y="943.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.09%)</title><rect x="57.0130%" y="917" width="0.0866%" height="15" fill="rgb(225,215,27)" fg:x="1317" fg:w="2"/><text x="57.2630%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="57.0130%" y="901" width="0.0866%" height="15" fill="rgb(221,192,48)" fg:x="1317" fg:w="2"/><text x="57.2630%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="57.0130%" y="885" width="0.0866%" height="15" fill="rgb(219,137,20)" fg:x="1317" fg:w="2"/><text x="57.2630%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="57.0130%" y="869" width="0.0866%" height="15" fill="rgb(219,84,11)" fg:x="1317" fg:w="2"/><text x="57.2630%" y="879.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="57.0563%" y="853" width="0.0433%" height="15" fill="rgb(224,10,23)" fg:x="1318" fg:w="1"/><text x="57.3063%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="57.0996%" y="949" width="0.0866%" height="15" fill="rgb(248,22,39)" fg:x="1319" fg:w="2"/><text x="57.3496%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="57.0996%" y="933" width="0.0866%" height="15" fill="rgb(212,154,20)" fg:x="1319" fg:w="2"/><text x="57.3496%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="57.0996%" y="917" width="0.0866%" height="15" fill="rgb(236,199,50)" fg:x="1319" fg:w="2"/><text x="57.3496%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="57.1429%" y="901" width="0.0433%" height="15" fill="rgb(211,9,17)" fg:x="1320" fg:w="1"/><text x="57.3929%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.74%)</title><rect x="56.4935%" y="965" width="0.7359%" height="15" fill="rgb(243,216,36)" fg:x="1305" fg:w="17"/><text x="56.7435%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="57.1861%" y="949" width="0.0433%" height="15" fill="rgb(250,2,10)" fg:x="1321" fg:w="1"/><text x="57.4361%" y="959.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.04%)</title><rect x="57.1861%" y="933" width="0.0433%" height="15" fill="rgb(226,50,48)" fg:x="1321" fg:w="1"/><text x="57.4361%" y="943.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.04%)</title><rect x="57.1861%" y="917" width="0.0433%" height="15" fill="rgb(243,81,16)" fg:x="1321" fg:w="1"/><text x="57.4361%" y="927.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.04%)</title><rect x="57.1861%" y="901" width="0.0433%" height="15" fill="rgb(250,14,2)" fg:x="1321" fg:w="1"/><text x="57.4361%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="57.3593%" y="933" width="0.1299%" height="15" fill="rgb(233,135,29)" fg:x="1325" fg:w="3"/><text x="57.6093%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="57.3593%" y="917" width="0.1299%" height="15" fill="rgb(224,64,43)" fg:x="1325" fg:w="3"/><text x="57.6093%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="57.3593%" y="901" width="0.1299%" height="15" fill="rgb(238,84,13)" fg:x="1325" fg:w="3"/><text x="57.6093%" y="911.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.09%)</title><rect x="57.4026%" y="885" width="0.0866%" height="15" fill="rgb(253,48,26)" fg:x="1326" fg:w="2"/><text x="57.6526%" y="895.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.17%)</title><rect x="57.4892%" y="933" width="0.1732%" height="15" fill="rgb(205,223,31)" fg:x="1328" fg:w="4"/><text x="57.7392%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (4 samples, 0.17%)</title><rect x="57.4892%" y="917" width="0.1732%" height="15" fill="rgb(221,41,32)" fg:x="1328" fg:w="4"/><text x="57.7392%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.17%)</title><rect x="57.4892%" y="901" width="0.1732%" height="15" fill="rgb(213,158,31)" fg:x="1328" fg:w="4"/><text x="57.7392%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.17%)</title><rect x="57.4892%" y="885" width="0.1732%" height="15" fill="rgb(245,126,43)" fg:x="1328" fg:w="4"/><text x="57.7392%" y="895.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.17%)</title><rect x="57.4892%" y="869" width="0.1732%" height="15" fill="rgb(227,7,22)" fg:x="1328" fg:w="4"/><text x="57.7392%" y="879.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.17%)</title><rect x="57.4892%" y="853" width="0.1732%" height="15" fill="rgb(252,90,44)" fg:x="1328" fg:w="4"/><text x="57.7392%" y="863.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (32 samples, 1.39%)</title><rect x="56.4935%" y="1029" width="1.3853%" height="15" fill="rgb(253,91,0)" fg:x="1305" fg:w="32"/><text x="56.7435%" y="1039.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (32 samples, 1.39%)</title><rect x="56.4935%" y="1013" width="1.3853%" height="15" fill="rgb(252,175,49)" fg:x="1305" fg:w="32"/><text x="56.7435%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (32 samples, 1.39%)</title><rect x="56.4935%" y="997" width="1.3853%" height="15" fill="rgb(246,150,1)" fg:x="1305" fg:w="32"/><text x="56.7435%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (32 samples, 1.39%)</title><rect x="56.4935%" y="981" width="1.3853%" height="15" fill="rgb(241,192,25)" fg:x="1305" fg:w="32"/><text x="56.7435%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.65%)</title><rect x="57.2294%" y="965" width="0.6494%" height="15" fill="rgb(239,187,11)" fg:x="1322" fg:w="15"/><text x="57.4794%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.65%)</title><rect x="57.2294%" y="949" width="0.6494%" height="15" fill="rgb(218,202,51)" fg:x="1322" fg:w="15"/><text x="57.4794%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.22%)</title><rect x="57.6623%" y="933" width="0.2165%" height="15" fill="rgb(225,176,8)" fg:x="1332" fg:w="5"/><text x="57.9123%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.22%)</title><rect x="57.6623%" y="917" width="0.2165%" height="15" fill="rgb(219,122,41)" fg:x="1332" fg:w="5"/><text x="57.9123%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.22%)</title><rect x="57.6623%" y="901" width="0.2165%" height="15" fill="rgb(248,140,20)" fg:x="1332" fg:w="5"/><text x="57.9123%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.22%)</title><rect x="57.6623%" y="885" width="0.2165%" height="15" fill="rgb(245,41,37)" fg:x="1332" fg:w="5"/><text x="57.9123%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.22%)</title><rect x="57.6623%" y="869" width="0.2165%" height="15" fill="rgb(235,82,39)" fg:x="1332" fg:w="5"/><text x="57.9123%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.22%)</title><rect x="57.6623%" y="853" width="0.2165%" height="15" fill="rgb(230,108,42)" fg:x="1332" fg:w="5"/><text x="57.9123%" y="863.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.22%)</title><rect x="57.6623%" y="837" width="0.2165%" height="15" fill="rgb(215,150,50)" fg:x="1332" fg:w="5"/><text x="57.9123%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.09%)</title><rect x="57.8788%" y="965" width="0.0866%" height="15" fill="rgb(233,212,5)" fg:x="1337" fg:w="2"/><text x="58.1288%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.09%)</title><rect x="57.8788%" y="949" width="0.0866%" height="15" fill="rgb(245,80,22)" fg:x="1337" fg:w="2"/><text x="58.1288%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="57.9221%" y="933" width="0.0433%" height="15" fill="rgb(238,129,16)" fg:x="1338" fg:w="1"/><text x="58.1721%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="57.9221%" y="917" width="0.0433%" height="15" fill="rgb(240,19,0)" fg:x="1338" fg:w="1"/><text x="58.1721%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="57.9221%" y="901" width="0.0433%" height="15" fill="rgb(232,42,35)" fg:x="1338" fg:w="1"/><text x="58.1721%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="57.9221%" y="885" width="0.0433%" height="15" fill="rgb(223,130,24)" fg:x="1338" fg:w="1"/><text x="58.1721%" y="895.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.13%)</title><rect x="57.8788%" y="981" width="0.1299%" height="15" fill="rgb(237,16,22)" fg:x="1337" fg:w="3"/><text x="58.1288%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="57.9654%" y="965" width="0.0433%" height="15" fill="rgb(248,192,20)" fg:x="1339" fg:w="1"/><text x="58.2154%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="57.9654%" y="949" width="0.0433%" height="15" fill="rgb(233,167,2)" fg:x="1339" fg:w="1"/><text x="58.2154%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="57.9654%" y="933" width="0.0433%" height="15" fill="rgb(252,71,44)" fg:x="1339" fg:w="1"/><text x="58.2154%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="57.9654%" y="917" width="0.0433%" height="15" fill="rgb(238,37,47)" fg:x="1339" fg:w="1"/><text x="58.2154%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="57.9654%" y="901" width="0.0433%" height="15" fill="rgb(214,202,54)" fg:x="1339" fg:w="1"/><text x="58.2154%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.04%)</title><rect x="58.0087%" y="917" width="0.0433%" height="15" fill="rgb(254,165,40)" fg:x="1340" fg:w="1"/><text x="58.2587%" y="927.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="58.0087%" y="901" width="0.0433%" height="15" fill="rgb(246,173,38)" fg:x="1340" fg:w="1"/><text x="58.2587%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.04%)</title><rect x="58.0087%" y="885" width="0.0433%" height="15" fill="rgb(215,3,27)" fg:x="1340" fg:w="1"/><text x="58.2587%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.04%)</title><rect x="58.0087%" y="869" width="0.0433%" height="15" fill="rgb(239,169,51)" fg:x="1340" fg:w="1"/><text x="58.2587%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="58.0087%" y="853" width="0.0433%" height="15" fill="rgb(212,5,25)" fg:x="1340" fg:w="1"/><text x="58.2587%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="58.0087%" y="837" width="0.0433%" height="15" fill="rgb(243,45,17)" fg:x="1340" fg:w="1"/><text x="58.2587%" y="847.50"></text></g><g><title>__GI___libc_free (1 samples, 0.04%)</title><rect x="58.0087%" y="821" width="0.0433%" height="15" fill="rgb(242,97,9)" fg:x="1340" fg:w="1"/><text x="58.2587%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (28 samples, 1.21%)</title><rect x="58.1385%" y="805" width="1.2121%" height="15" fill="rgb(228,71,31)" fg:x="1343" fg:w="28"/><text x="58.3885%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="59.3074%" y="789" width="0.0433%" height="15" fill="rgb(252,184,16)" fg:x="1370" fg:w="1"/><text x="59.5574%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 1.30%)</title><rect x="58.0952%" y="853" width="1.2987%" height="15" fill="rgb(236,169,46)" fg:x="1342" fg:w="30"/><text x="58.3452%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (30 samples, 1.30%)</title><rect x="58.0952%" y="837" width="1.2987%" height="15" fill="rgb(207,17,47)" fg:x="1342" fg:w="30"/><text x="58.3452%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 1.30%)</title><rect x="58.0952%" y="821" width="1.2987%" height="15" fill="rgb(206,201,28)" fg:x="1342" fg:w="30"/><text x="58.3452%" y="831.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="59.3506%" y="805" width="0.0433%" height="15" fill="rgb(224,184,23)" fg:x="1371" fg:w="1"/><text x="59.6006%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (32 samples, 1.39%)</title><rect x="58.0952%" y="885" width="1.3853%" height="15" fill="rgb(208,139,48)" fg:x="1342" fg:w="32"/><text x="58.3452%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (32 samples, 1.39%)</title><rect x="58.0952%" y="869" width="1.3853%" height="15" fill="rgb(208,130,10)" fg:x="1342" fg:w="32"/><text x="58.3452%" y="879.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.09%)</title><rect x="59.3939%" y="853" width="0.0866%" height="15" fill="rgb(211,213,45)" fg:x="1372" fg:w="2"/><text x="59.6439%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="59.3939%" y="837" width="0.0866%" height="15" fill="rgb(235,100,30)" fg:x="1372" fg:w="2"/><text x="59.6439%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="59.3939%" y="821" width="0.0866%" height="15" fill="rgb(206,144,31)" fg:x="1372" fg:w="2"/><text x="59.6439%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="59.3939%" y="805" width="0.0866%" height="15" fill="rgb(224,200,26)" fg:x="1372" fg:w="2"/><text x="59.6439%" y="815.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="59.4372%" y="789" width="0.0433%" height="15" fill="rgb(247,104,53)" fg:x="1373" fg:w="1"/><text x="59.6872%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="59.4805%" y="885" width="0.0866%" height="15" fill="rgb(220,14,17)" fg:x="1374" fg:w="2"/><text x="59.7305%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="59.4805%" y="869" width="0.0866%" height="15" fill="rgb(230,140,40)" fg:x="1374" fg:w="2"/><text x="59.7305%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="59.4805%" y="853" width="0.0866%" height="15" fill="rgb(229,2,41)" fg:x="1374" fg:w="2"/><text x="59.7305%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="59.5238%" y="837" width="0.0433%" height="15" fill="rgb(232,89,16)" fg:x="1375" fg:w="1"/><text x="59.7738%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="59.5238%" y="821" width="0.0433%" height="15" fill="rgb(247,59,52)" fg:x="1375" fg:w="1"/><text x="59.7738%" y="831.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (36 samples, 1.56%)</title><rect x="58.0519%" y="917" width="1.5584%" height="15" fill="rgb(226,110,21)" fg:x="1341" fg:w="36"/><text x="58.3019%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (36 samples, 1.56%)</title><rect x="58.0519%" y="901" width="1.5584%" height="15" fill="rgb(224,176,43)" fg:x="1341" fg:w="36"/><text x="58.3019%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="59.5671%" y="885" width="0.0433%" height="15" fill="rgb(221,73,6)" fg:x="1376" fg:w="1"/><text x="59.8171%" y="895.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.04%)</title><rect x="59.5671%" y="869" width="0.0433%" height="15" fill="rgb(232,78,19)" fg:x="1376" fg:w="1"/><text x="59.8171%" y="879.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.04%)</title><rect x="59.5671%" y="853" width="0.0433%" height="15" fill="rgb(233,112,48)" fg:x="1376" fg:w="1"/><text x="59.8171%" y="863.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.04%)</title><rect x="59.5671%" y="837" width="0.0433%" height="15" fill="rgb(243,131,47)" fg:x="1376" fg:w="1"/><text x="59.8171%" y="847.50"></text></g><g><title>handle_mm_fault (4 samples, 0.17%)</title><rect x="59.7835%" y="821" width="0.1732%" height="15" fill="rgb(226,51,1)" fg:x="1381" fg:w="4"/><text x="60.0335%" y="831.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.13%)</title><rect x="59.8268%" y="805" width="0.1299%" height="15" fill="rgb(247,58,7)" fg:x="1382" fg:w="3"/><text x="60.0768%" y="815.50"></text></g><g><title>do_anonymous_page (3 samples, 0.13%)</title><rect x="59.8268%" y="789" width="0.1299%" height="15" fill="rgb(209,7,32)" fg:x="1382" fg:w="3"/><text x="60.0768%" y="799.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.13%)</title><rect x="59.8268%" y="773" width="0.1299%" height="15" fill="rgb(209,39,41)" fg:x="1382" fg:w="3"/><text x="60.0768%" y="783.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.13%)</title><rect x="59.8268%" y="757" width="0.1299%" height="15" fill="rgb(226,182,46)" fg:x="1382" fg:w="3"/><text x="60.0768%" y="767.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.13%)</title><rect x="59.8268%" y="741" width="0.1299%" height="15" fill="rgb(230,219,10)" fg:x="1382" fg:w="3"/><text x="60.0768%" y="751.50"></text></g><g><title>clear_page_rep (3 samples, 0.13%)</title><rect x="59.8268%" y="725" width="0.1299%" height="15" fill="rgb(227,175,30)" fg:x="1382" fg:w="3"/><text x="60.0768%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (9 samples, 0.39%)</title><rect x="59.6104%" y="917" width="0.3896%" height="15" fill="rgb(217,2,50)" fg:x="1377" fg:w="9"/><text x="59.8604%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (9 samples, 0.39%)</title><rect x="59.6104%" y="901" width="0.3896%" height="15" fill="rgb(229,160,0)" fg:x="1377" fg:w="9"/><text x="59.8604%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.39%)</title><rect x="59.6104%" y="885" width="0.3896%" height="15" fill="rgb(207,78,37)" fg:x="1377" fg:w="9"/><text x="59.8604%" y="895.50"></text></g><g><title>asm_exc_page_fault (8 samples, 0.35%)</title><rect x="59.6537%" y="869" width="0.3463%" height="15" fill="rgb(225,57,0)" fg:x="1378" fg:w="8"/><text x="59.9037%" y="879.50"></text></g><g><title>exc_page_fault (5 samples, 0.22%)</title><rect x="59.7835%" y="853" width="0.2165%" height="15" fill="rgb(232,154,2)" fg:x="1381" fg:w="5"/><text x="60.0335%" y="863.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.22%)</title><rect x="59.7835%" y="837" width="0.2165%" height="15" fill="rgb(241,212,25)" fg:x="1381" fg:w="5"/><text x="60.0335%" y="847.50"></text></g><g><title>mem_cgroup_from_task (1 samples, 0.04%)</title><rect x="59.9567%" y="821" width="0.0433%" height="15" fill="rgb(226,69,20)" fg:x="1385" fg:w="1"/><text x="60.2067%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (4 samples, 0.17%)</title><rect x="60.0000%" y="917" width="0.1732%" height="15" fill="rgb(247,184,54)" fg:x="1386" fg:w="4"/><text x="60.2500%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (4 samples, 0.17%)</title><rect x="60.0000%" y="901" width="0.1732%" height="15" fill="rgb(210,145,0)" fg:x="1386" fg:w="4"/><text x="60.2500%" y="911.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="60.1299%" y="885" width="0.0433%" height="15" fill="rgb(253,82,12)" fg:x="1389" fg:w="1"/><text x="60.3799%" y="895.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (54 samples, 2.34%)</title><rect x="57.8788%" y="1029" width="2.3377%" height="15" fill="rgb(245,42,11)" fg:x="1337" fg:w="54"/><text x="58.1288%" y="1039.50">s..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (54 samples, 2.34%)</title><rect x="57.8788%" y="1013" width="2.3377%" height="15" fill="rgb(219,147,32)" fg:x="1337" fg:w="54"/><text x="58.1288%" y="1023.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (54 samples, 2.34%)</title><rect x="57.8788%" y="997" width="2.3377%" height="15" fill="rgb(246,12,7)" fg:x="1337" fg:w="54"/><text x="58.1288%" y="1007.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (51 samples, 2.21%)</title><rect x="58.0087%" y="981" width="2.2078%" height="15" fill="rgb(243,50,9)" fg:x="1340" fg:w="51"/><text x="58.2587%" y="991.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (51 samples, 2.21%)</title><rect x="58.0087%" y="965" width="2.2078%" height="15" fill="rgb(219,149,6)" fg:x="1340" fg:w="51"/><text x="58.2587%" y="975.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (51 samples, 2.21%)</title><rect x="58.0087%" y="949" width="2.2078%" height="15" fill="rgb(241,51,42)" fg:x="1340" fg:w="51"/><text x="58.2587%" y="959.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (51 samples, 2.21%)</title><rect x="58.0087%" y="933" width="2.2078%" height="15" fill="rgb(226,128,27)" fg:x="1340" fg:w="51"/><text x="58.2587%" y="943.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.04%)</title><rect x="60.1732%" y="917" width="0.0433%" height="15" fill="rgb(244,144,4)" fg:x="1390" fg:w="1"/><text x="60.4232%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.04%)</title><rect x="60.1732%" y="901" width="0.0433%" height="15" fill="rgb(221,4,13)" fg:x="1390" fg:w="1"/><text x="60.4232%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.04%)</title><rect x="60.1732%" y="885" width="0.0433%" height="15" fill="rgb(208,170,28)" fg:x="1390" fg:w="1"/><text x="60.4232%" y="895.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.04%)</title><rect x="60.1732%" y="869" width="0.0433%" height="15" fill="rgb(226,131,13)" fg:x="1390" fg:w="1"/><text x="60.4232%" y="879.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.04%)</title><rect x="60.1732%" y="853" width="0.0433%" height="15" fill="rgb(215,72,41)" fg:x="1390" fg:w="1"/><text x="60.4232%" y="863.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.04%)</title><rect x="60.1732%" y="837" width="0.0433%" height="15" fill="rgb(243,108,20)" fg:x="1390" fg:w="1"/><text x="60.4232%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="60.6494%" y="949" width="0.0433%" height="15" fill="rgb(230,189,17)" fg:x="1401" fg:w="1"/><text x="60.8994%" y="959.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="60.6494%" y="933" width="0.0433%" height="15" fill="rgb(220,50,17)" fg:x="1401" fg:w="1"/><text x="60.8994%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="60.6494%" y="917" width="0.0433%" height="15" fill="rgb(248,152,48)" fg:x="1401" fg:w="1"/><text x="60.8994%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.13%)</title><rect x="60.7792%" y="885" width="0.1299%" height="15" fill="rgb(244,91,11)" fg:x="1404" fg:w="3"/><text x="61.0292%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.13%)</title><rect x="60.7792%" y="869" width="0.1299%" height="15" fill="rgb(220,157,5)" fg:x="1404" fg:w="3"/><text x="61.0292%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.13%)</title><rect x="60.7792%" y="853" width="0.1299%" height="15" fill="rgb(253,137,8)" fg:x="1404" fg:w="3"/><text x="61.0292%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.13%)</title><rect x="60.7792%" y="837" width="0.1299%" height="15" fill="rgb(217,137,51)" fg:x="1404" fg:w="3"/><text x="61.0292%" y="847.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.13%)</title><rect x="60.7792%" y="821" width="0.1299%" height="15" fill="rgb(218,209,53)" fg:x="1404" fg:w="3"/><text x="61.0292%" y="831.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.13%)</title><rect x="60.7792%" y="805" width="0.1299%" height="15" fill="rgb(249,137,25)" fg:x="1404" fg:w="3"/><text x="61.0292%" y="815.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="60.9524%" y="853" width="0.0866%" height="15" fill="rgb(239,155,26)" fg:x="1408" fg:w="2"/><text x="61.2024%" y="863.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.09%)</title><rect x="60.9524%" y="837" width="0.0866%" height="15" fill="rgb(227,85,46)" fg:x="1408" fg:w="2"/><text x="61.2024%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="60.9957%" y="821" width="0.0433%" height="15" fill="rgb(251,107,43)" fg:x="1409" fg:w="1"/><text x="61.2457%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.17%)</title><rect x="60.9091%" y="885" width="0.1732%" height="15" fill="rgb(234,170,33)" fg:x="1407" fg:w="4"/><text x="61.1591%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.17%)</title><rect x="60.9091%" y="869" width="0.1732%" height="15" fill="rgb(206,29,35)" fg:x="1407" fg:w="4"/><text x="61.1591%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1 samples, 0.04%)</title><rect x="61.0390%" y="853" width="0.0433%" height="15" fill="rgb(227,138,25)" fg:x="1410" fg:w="1"/><text x="61.2890%" y="863.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}}::{{closure}} (1 samples, 0.04%)</title><rect x="61.0390%" y="837" width="0.0433%" height="15" fill="rgb(249,131,35)" fg:x="1410" fg:w="1"/><text x="61.2890%" y="847.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_lowercase (1 samples, 0.04%)</title><rect x="61.0390%" y="821" width="0.0433%" height="15" fill="rgb(239,6,40)" fg:x="1410" fg:w="1"/><text x="61.2890%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="62.7273%" y="789" width="0.0866%" height="15" fill="rgb(246,136,47)" fg:x="1449" fg:w="2"/><text x="62.9773%" y="799.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (2 samples, 0.09%)</title><rect x="62.7273%" y="773" width="0.0866%" height="15" fill="rgb(253,58,26)" fg:x="1449" fg:w="2"/><text x="62.9773%" y="783.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (2 samples, 0.09%)</title><rect x="62.7273%" y="757" width="0.0866%" height="15" fill="rgb(237,141,10)" fg:x="1449" fg:w="2"/><text x="62.9773%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.04%)</title><rect x="62.7706%" y="741" width="0.0433%" height="15" fill="rgb(234,156,12)" fg:x="1450" fg:w="1"/><text x="63.0206%" y="751.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.09%)</title><rect x="62.8139%" y="789" width="0.0866%" height="15" fill="rgb(243,224,36)" fg:x="1451" fg:w="2"/><text x="63.0639%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.09%)</title><rect x="62.8139%" y="773" width="0.0866%" height="15" fill="rgb(205,229,51)" fg:x="1451" fg:w="2"/><text x="63.0639%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.04%)</title><rect x="62.8571%" y="757" width="0.0433%" height="15" fill="rgb(223,189,4)" fg:x="1452" fg:w="1"/><text x="63.1071%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (55 samples, 2.38%)</title><rect x="61.0823%" y="885" width="2.3810%" height="15" fill="rgb(249,167,54)" fg:x="1411" fg:w="55"/><text x="61.3323%" y="895.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (44 samples, 1.90%)</title><rect x="61.5584%" y="869" width="1.9048%" height="15" fill="rgb(218,34,28)" fg:x="1422" fg:w="44"/><text x="61.8084%" y="879.50">c..</text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 1.86%)</title><rect x="61.6017%" y="853" width="1.8615%" height="15" fill="rgb(232,109,42)" fg:x="1423" fg:w="43"/><text x="61.8517%" y="863.50">&lt;..</text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (43 samples, 1.86%)</title><rect x="61.6017%" y="837" width="1.8615%" height="15" fill="rgb(248,214,46)" fg:x="1423" fg:w="43"/><text x="61.8517%" y="847.50">c..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (42 samples, 1.82%)</title><rect x="61.6450%" y="821" width="1.8182%" height="15" fill="rgb(244,216,40)" fg:x="1424" fg:w="42"/><text x="61.8950%" y="831.50">&lt;..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (37 samples, 1.60%)</title><rect x="61.8615%" y="805" width="1.6017%" height="15" fill="rgb(231,226,31)" fg:x="1429" fg:w="37"/><text x="62.1115%" y="815.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (13 samples, 0.56%)</title><rect x="62.9004%" y="789" width="0.5628%" height="15" fill="rgb(238,38,43)" fg:x="1453" fg:w="13"/><text x="63.1504%" y="799.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.30%)</title><rect x="63.8095%" y="805" width="0.3030%" height="15" fill="rgb(208,88,43)" fg:x="1474" fg:w="7"/><text x="64.0595%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.30%)</title><rect x="63.8095%" y="789" width="0.3030%" height="15" fill="rgb(205,136,37)" fg:x="1474" fg:w="7"/><text x="64.0595%" y="799.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.26%)</title><rect x="63.8528%" y="773" width="0.2597%" height="15" fill="rgb(237,34,14)" fg:x="1475" fg:w="6"/><text x="64.1028%" y="783.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="64.1126%" y="805" width="0.0433%" height="15" fill="rgb(236,193,44)" fg:x="1481" fg:w="1"/><text x="64.3626%" y="815.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="64.1126%" y="789" width="0.0433%" height="15" fill="rgb(231,48,10)" fg:x="1481" fg:w="1"/><text x="64.3626%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="64.1126%" y="773" width="0.0433%" height="15" fill="rgb(213,141,34)" fg:x="1481" fg:w="1"/><text x="64.3626%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (84 samples, 3.64%)</title><rect x="60.6926%" y="933" width="3.6364%" height="15" fill="rgb(249,130,34)" fg:x="1402" fg:w="84"/><text x="60.9426%" y="943.50">core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (83 samples, 3.59%)</title><rect x="60.7359%" y="917" width="3.5931%" height="15" fill="rgb(219,42,41)" fg:x="1403" fg:w="83"/><text x="60.9859%" y="927.50">core..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (83 samples, 3.59%)</title><rect x="60.7359%" y="901" width="3.5931%" height="15" fill="rgb(224,100,54)" fg:x="1403" fg:w="83"/><text x="60.9859%" y="911.50">y202..</text></g><g><title>core::str::&lt;impl str&gt;::matches (20 samples, 0.87%)</title><rect x="63.4632%" y="885" width="0.8658%" height="15" fill="rgb(229,200,27)" fg:x="1466" fg:w="20"/><text x="63.7132%" y="895.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (20 samples, 0.87%)</title><rect x="63.4632%" y="869" width="0.8658%" height="15" fill="rgb(217,118,10)" fg:x="1466" fg:w="20"/><text x="63.7132%" y="879.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (20 samples, 0.87%)</title><rect x="63.4632%" y="853" width="0.8658%" height="15" fill="rgb(206,22,3)" fg:x="1466" fg:w="20"/><text x="63.7132%" y="863.50"></text></g><g><title>core::str::pattern::StrSearcher::new (19 samples, 0.82%)</title><rect x="63.5065%" y="837" width="0.8225%" height="15" fill="rgb(232,163,46)" fg:x="1467" fg:w="19"/><text x="63.7565%" y="847.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (12 samples, 0.52%)</title><rect x="63.8095%" y="821" width="0.5195%" height="15" fill="rgb(206,95,13)" fg:x="1474" fg:w="12"/><text x="64.0595%" y="831.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (4 samples, 0.17%)</title><rect x="64.1558%" y="805" width="0.1732%" height="15" fill="rgb(253,154,18)" fg:x="1482" fg:w="4"/><text x="64.4058%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (87 samples, 3.77%)</title><rect x="60.6494%" y="1013" width="3.7662%" height="15" fill="rgb(219,32,23)" fg:x="1401" fg:w="87"/><text x="60.8994%" y="1023.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find (87 samples, 3.77%)</title><rect x="60.6494%" y="997" width="3.7662%" height="15" fill="rgb(230,191,45)" fg:x="1401" fg:w="87"/><text x="60.8994%" y="1007.50">core..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (87 samples, 3.77%)</title><rect x="60.6494%" y="981" width="3.7662%" height="15" fill="rgb(229,64,36)" fg:x="1401" fg:w="87"/><text x="60.8994%" y="991.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (87 samples, 3.77%)</title><rect x="60.6494%" y="965" width="3.7662%" height="15" fill="rgb(205,129,25)" fg:x="1401" fg:w="87"/><text x="60.8994%" y="975.50">core..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (86 samples, 3.72%)</title><rect x="60.6926%" y="949" width="3.7229%" height="15" fill="rgb(254,112,7)" fg:x="1402" fg:w="86"/><text x="60.9426%" y="959.50">core..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.09%)</title><rect x="64.3290%" y="933" width="0.0866%" height="15" fill="rgb(226,53,48)" fg:x="1486" fg:w="2"/><text x="64.5790%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.04%)</title><rect x="64.3723%" y="917" width="0.0433%" height="15" fill="rgb(214,153,38)" fg:x="1487" fg:w="1"/><text x="64.6223%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.04%)</title><rect x="64.3723%" y="901" width="0.0433%" height="15" fill="rgb(243,101,7)" fg:x="1487" fg:w="1"/><text x="64.6223%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::ne (1 samples, 0.04%)</title><rect x="64.3723%" y="885" width="0.0433%" height="15" fill="rgb(240,140,22)" fg:x="1487" fg:w="1"/><text x="64.6223%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.04%)</title><rect x="64.3723%" y="869" width="0.0433%" height="15" fill="rgb(235,114,2)" fg:x="1487" fg:w="1"/><text x="64.6223%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="64.3723%" y="853" width="0.0433%" height="15" fill="rgb(242,59,12)" fg:x="1487" fg:w="1"/><text x="64.6223%" y="863.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="64.3723%" y="837" width="0.0433%" height="15" fill="rgb(252,134,9)" fg:x="1487" fg:w="1"/><text x="64.6223%" y="847.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="64.3723%" y="821" width="0.0433%" height="15" fill="rgb(236,4,44)" fg:x="1487" fg:w="1"/><text x="64.6223%" y="831.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.04%)</title><rect x="64.5455%" y="997" width="0.0433%" height="15" fill="rgb(254,172,41)" fg:x="1491" fg:w="1"/><text x="64.7955%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="64.5455%" y="981" width="0.0433%" height="15" fill="rgb(244,63,20)" fg:x="1491" fg:w="1"/><text x="64.7955%" y="991.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="64.5455%" y="965" width="0.0433%" height="15" fill="rgb(250,73,31)" fg:x="1491" fg:w="1"/><text x="64.7955%" y="975.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="64.5455%" y="949" width="0.0433%" height="15" fill="rgb(241,38,36)" fg:x="1491" fg:w="1"/><text x="64.7955%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="64.5455%" y="933" width="0.0433%" height="15" fill="rgb(245,211,2)" fg:x="1491" fg:w="1"/><text x="64.7955%" y="943.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="64.8485%" y="965" width="0.0433%" height="15" fill="rgb(206,120,28)" fg:x="1498" fg:w="1"/><text x="65.0985%" y="975.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="65.0649%" y="805" width="0.0433%" height="15" fill="rgb(211,59,34)" fg:x="1503" fg:w="1"/><text x="65.3149%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (10 samples, 0.43%)</title><rect x="65.1082%" y="805" width="0.4329%" height="15" fill="rgb(233,168,5)" fg:x="1504" fg:w="10"/><text x="65.3582%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.04%)</title><rect x="65.9307%" y="709" width="0.0433%" height="15" fill="rgb(234,33,13)" fg:x="1523" fg:w="1"/><text x="66.1807%" y="719.50"></text></g><g><title>_int_free (4 samples, 0.17%)</title><rect x="65.9740%" y="709" width="0.1732%" height="15" fill="rgb(231,150,26)" fg:x="1524" fg:w="4"/><text x="66.2240%" y="719.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="66.1039%" y="693" width="0.0433%" height="15" fill="rgb(217,191,4)" fg:x="1527" fg:w="1"/><text x="66.3539%" y="703.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="66.1039%" y="677" width="0.0433%" height="15" fill="rgb(246,198,38)" fg:x="1527" fg:w="1"/><text x="66.3539%" y="687.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="66.1039%" y="661" width="0.0433%" height="15" fill="rgb(245,64,37)" fg:x="1527" fg:w="1"/><text x="66.3539%" y="671.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.04%)</title><rect x="66.1039%" y="645" width="0.0433%" height="15" fill="rgb(250,30,36)" fg:x="1527" fg:w="1"/><text x="66.3539%" y="655.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.04%)</title><rect x="66.1039%" y="629" width="0.0433%" height="15" fill="rgb(217,86,53)" fg:x="1527" fg:w="1"/><text x="66.3539%" y="639.50"></text></g><g><title>tick_sched_timer (1 samples, 0.04%)</title><rect x="66.1039%" y="613" width="0.0433%" height="15" fill="rgb(228,157,16)" fg:x="1527" fg:w="1"/><text x="66.3539%" y="623.50"></text></g><g><title>tick_sched_handle.isra.0 (1 samples, 0.04%)</title><rect x="66.1039%" y="597" width="0.0433%" height="15" fill="rgb(217,59,31)" fg:x="1527" fg:w="1"/><text x="66.3539%" y="607.50"></text></g><g><title>update_process_times (1 samples, 0.04%)</title><rect x="66.1039%" y="581" width="0.0433%" height="15" fill="rgb(237,138,41)" fg:x="1527" fg:w="1"/><text x="66.3539%" y="591.50"></text></g><g><title>scheduler_tick (1 samples, 0.04%)</title><rect x="66.1039%" y="565" width="0.0433%" height="15" fill="rgb(227,91,49)" fg:x="1527" fg:w="1"/><text x="66.3539%" y="575.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.04%)</title><rect x="66.1039%" y="549" width="0.0433%" height="15" fill="rgb(247,21,44)" fg:x="1527" fg:w="1"/><text x="66.3539%" y="559.50"></text></g><g><title>perf_pmu_disable.part.0 (1 samples, 0.04%)</title><rect x="66.1039%" y="533" width="0.0433%" height="15" fill="rgb(219,210,51)" fg:x="1527" fg:w="1"/><text x="66.3539%" y="543.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.04%)</title><rect x="66.1039%" y="517" width="0.0433%" height="15" fill="rgb(209,140,6)" fg:x="1527" fg:w="1"/><text x="66.3539%" y="527.50"></text></g><g><title>amd_pmu_disable_all (1 samples, 0.04%)</title><rect x="66.1039%" y="501" width="0.0433%" height="15" fill="rgb(221,188,24)" fg:x="1527" fg:w="1"/><text x="66.3539%" y="511.50"></text></g><g><title>native_write_msr (1 samples, 0.04%)</title><rect x="66.1039%" y="485" width="0.0433%" height="15" fill="rgb(232,154,20)" fg:x="1527" fg:w="1"/><text x="66.3539%" y="495.50"></text></g><g><title>clear_page_rep (1 samples, 0.04%)</title><rect x="66.4069%" y="549" width="0.0433%" height="15" fill="rgb(244,137,50)" fg:x="1534" fg:w="1"/><text x="66.6569%" y="559.50"></text></g><g><title>__GI___libc_realloc (21 samples, 0.91%)</title><rect x="65.5844%" y="741" width="0.9091%" height="15" fill="rgb(225,185,43)" fg:x="1515" fg:w="21"/><text x="65.8344%" y="751.50"></text></g><g><title>_int_realloc (19 samples, 0.82%)</title><rect x="65.6710%" y="725" width="0.8225%" height="15" fill="rgb(213,205,38)" fg:x="1517" fg:w="19"/><text x="65.9210%" y="735.50"></text></g><g><title>_int_malloc (8 samples, 0.35%)</title><rect x="66.1472%" y="709" width="0.3463%" height="15" fill="rgb(236,73,12)" fg:x="1528" fg:w="8"/><text x="66.3972%" y="719.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.09%)</title><rect x="66.4069%" y="693" width="0.0866%" height="15" fill="rgb(235,219,13)" fg:x="1534" fg:w="2"/><text x="66.6569%" y="703.50"></text></g><g><title>exc_page_fault (2 samples, 0.09%)</title><rect x="66.4069%" y="677" width="0.0866%" height="15" fill="rgb(218,59,36)" fg:x="1534" fg:w="2"/><text x="66.6569%" y="687.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.09%)</title><rect x="66.4069%" y="661" width="0.0866%" height="15" fill="rgb(205,110,39)" fg:x="1534" fg:w="2"/><text x="66.6569%" y="671.50"></text></g><g><title>handle_mm_fault (2 samples, 0.09%)</title><rect x="66.4069%" y="645" width="0.0866%" height="15" fill="rgb(218,206,42)" fg:x="1534" fg:w="2"/><text x="66.6569%" y="655.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.09%)</title><rect x="66.4069%" y="629" width="0.0866%" height="15" fill="rgb(248,125,24)" fg:x="1534" fg:w="2"/><text x="66.6569%" y="639.50"></text></g><g><title>do_anonymous_page (2 samples, 0.09%)</title><rect x="66.4069%" y="613" width="0.0866%" height="15" fill="rgb(242,28,27)" fg:x="1534" fg:w="2"/><text x="66.6569%" y="623.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.09%)</title><rect x="66.4069%" y="597" width="0.0866%" height="15" fill="rgb(216,228,15)" fg:x="1534" fg:w="2"/><text x="66.6569%" y="607.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.09%)</title><rect x="66.4069%" y="581" width="0.0866%" height="15" fill="rgb(235,116,46)" fg:x="1534" fg:w="2"/><text x="66.6569%" y="591.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.09%)</title><rect x="66.4069%" y="565" width="0.0866%" height="15" fill="rgb(224,18,32)" fg:x="1534" fg:w="2"/><text x="66.6569%" y="575.50"></text></g><g><title>rmqueue (1 samples, 0.04%)</title><rect x="66.4502%" y="549" width="0.0433%" height="15" fill="rgb(252,5,12)" fg:x="1535" fg:w="1"/><text x="66.7002%" y="559.50"></text></g><g><title>__rdl_realloc (1 samples, 0.04%)</title><rect x="66.4935%" y="741" width="0.0433%" height="15" fill="rgb(251,36,5)" fg:x="1536" fg:w="1"/><text x="66.7435%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.04%)</title><rect x="66.4935%" y="725" width="0.0433%" height="15" fill="rgb(217,53,14)" fg:x="1536" fg:w="1"/><text x="66.7435%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (23 samples, 1.00%)</title><rect x="65.5844%" y="789" width="0.9957%" height="15" fill="rgb(215,86,45)" fg:x="1515" fg:w="23"/><text x="65.8344%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (23 samples, 1.00%)</title><rect x="65.5844%" y="773" width="0.9957%" height="15" fill="rgb(242,169,11)" fg:x="1515" fg:w="23"/><text x="65.8344%" y="783.50"></text></g><g><title>alloc::alloc::realloc (23 samples, 1.00%)</title><rect x="65.5844%" y="757" width="0.9957%" height="15" fill="rgb(211,213,45)" fg:x="1515" fg:w="23"/><text x="65.8344%" y="767.50"></text></g><g><title>__rust_realloc (1 samples, 0.04%)</title><rect x="66.5368%" y="741" width="0.0433%" height="15" fill="rgb(205,88,11)" fg:x="1537" fg:w="1"/><text x="66.7868%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="66.5801%" y="789" width="0.0433%" height="15" fill="rgb(252,69,26)" fg:x="1538" fg:w="1"/><text x="66.8301%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (27 samples, 1.17%)</title><rect x="65.5411%" y="805" width="1.1688%" height="15" fill="rgb(246,123,37)" fg:x="1514" fg:w="27"/><text x="65.7911%" y="815.50"></text></g><g><title>__rust_alloc (2 samples, 0.09%)</title><rect x="66.6234%" y="789" width="0.0866%" height="15" fill="rgb(212,205,5)" fg:x="1539" fg:w="2"/><text x="66.8734%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (41 samples, 1.77%)</title><rect x="64.9784%" y="869" width="1.7749%" height="15" fill="rgb(253,148,0)" fg:x="1501" fg:w="41"/><text x="65.2284%" y="879.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (41 samples, 1.77%)</title><rect x="64.9784%" y="853" width="1.7749%" height="15" fill="rgb(239,22,4)" fg:x="1501" fg:w="41"/><text x="65.2284%" y="863.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (39 samples, 1.69%)</title><rect x="65.0649%" y="837" width="1.6883%" height="15" fill="rgb(226,26,53)" fg:x="1503" fg:w="39"/><text x="65.3149%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (39 samples, 1.69%)</title><rect x="65.0649%" y="821" width="1.6883%" height="15" fill="rgb(225,229,45)" fg:x="1503" fg:w="39"/><text x="65.3149%" y="831.50"></text></g><g><title>core::cmp::max (1 samples, 0.04%)</title><rect x="66.7100%" y="805" width="0.0433%" height="15" fill="rgb(220,60,37)" fg:x="1541" fg:w="1"/><text x="66.9600%" y="815.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="66.7100%" y="789" width="0.0433%" height="15" fill="rgb(217,180,35)" fg:x="1541" fg:w="1"/><text x="66.9600%" y="799.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.04%)</title><rect x="66.7100%" y="773" width="0.0433%" height="15" fill="rgb(229,7,53)" fg:x="1541" fg:w="1"/><text x="66.9600%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.09%)</title><rect x="66.7532%" y="853" width="0.0866%" height="15" fill="rgb(254,137,3)" fg:x="1542" fg:w="2"/><text x="67.0032%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.13%)</title><rect x="66.7532%" y="869" width="0.1299%" height="15" fill="rgb(215,140,41)" fg:x="1542" fg:w="3"/><text x="67.0032%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="66.8398%" y="853" width="0.0433%" height="15" fill="rgb(250,80,15)" fg:x="1544" fg:w="1"/><text x="67.0898%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (47 samples, 2.03%)</title><rect x="64.8918%" y="965" width="2.0346%" height="15" fill="rgb(252,191,6)" fg:x="1499" fg:w="47"/><text x="65.1418%" y="975.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (45 samples, 1.95%)</title><rect x="64.9784%" y="949" width="1.9481%" height="15" fill="rgb(246,217,18)" fg:x="1501" fg:w="45"/><text x="65.2284%" y="959.50">&lt;..</text></g><g><title>alloc::string::String::push_str (45 samples, 1.95%)</title><rect x="64.9784%" y="933" width="1.9481%" height="15" fill="rgb(223,93,7)" fg:x="1501" fg:w="45"/><text x="65.2284%" y="943.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (45 samples, 1.95%)</title><rect x="64.9784%" y="917" width="1.9481%" height="15" fill="rgb(225,55,52)" fg:x="1501" fg:w="45"/><text x="65.2284%" y="927.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (45 samples, 1.95%)</title><rect x="64.9784%" y="901" width="1.9481%" height="15" fill="rgb(240,31,24)" fg:x="1501" fg:w="45"/><text x="65.2284%" y="911.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (45 samples, 1.95%)</title><rect x="64.9784%" y="885" width="1.9481%" height="15" fill="rgb(205,56,52)" fg:x="1501" fg:w="45"/><text x="65.2284%" y="895.50">a..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="66.8831%" y="869" width="0.0433%" height="15" fill="rgb(246,146,12)" fg:x="1545" fg:w="1"/><text x="67.1331%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="66.8831%" y="853" width="0.0433%" height="15" fill="rgb(239,84,36)" fg:x="1545" fg:w="1"/><text x="67.1331%" y="863.50"></text></g><g><title>alloc::fmt::format (64 samples, 2.77%)</title><rect x="64.4156%" y="1013" width="2.7706%" height="15" fill="rgb(207,41,40)" fg:x="1488" fg:w="64"/><text x="64.6656%" y="1023.50">al..</text></g><g><title>core::fmt::Write::write_fmt (60 samples, 2.60%)</title><rect x="64.5887%" y="997" width="2.5974%" height="15" fill="rgb(241,179,25)" fg:x="1492" fg:w="60"/><text x="64.8387%" y="1007.50">co..</text></g><g><title>core::fmt::write (56 samples, 2.42%)</title><rect x="64.7619%" y="981" width="2.4242%" height="15" fill="rgb(210,0,34)" fg:x="1496" fg:w="56"/><text x="65.0119%" y="991.50">co..</text></g><g><title>core::fmt::Formatter::pad (6 samples, 0.26%)</title><rect x="66.9264%" y="965" width="0.2597%" height="15" fill="rgb(225,217,29)" fg:x="1546" fg:w="6"/><text x="67.1764%" y="975.50"></text></g><g><title>__GI___libc_free (1 samples, 0.04%)</title><rect x="67.2294%" y="917" width="0.0433%" height="15" fill="rgb(216,191,38)" fg:x="1553" fg:w="1"/><text x="67.4794%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.30%)</title><rect x="67.1861%" y="1013" width="0.3030%" height="15" fill="rgb(232,140,52)" fg:x="1552" fg:w="7"/><text x="67.4361%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.30%)</title><rect x="67.1861%" y="997" width="0.3030%" height="15" fill="rgb(223,158,51)" fg:x="1552" fg:w="7"/><text x="67.4361%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.30%)</title><rect x="67.1861%" y="981" width="0.3030%" height="15" fill="rgb(235,29,51)" fg:x="1552" fg:w="7"/><text x="67.4361%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.30%)</title><rect x="67.1861%" y="965" width="0.3030%" height="15" fill="rgb(215,181,18)" fg:x="1552" fg:w="7"/><text x="67.4361%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.26%)</title><rect x="67.2294%" y="949" width="0.2597%" height="15" fill="rgb(227,125,34)" fg:x="1553" fg:w="6"/><text x="67.4794%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.26%)</title><rect x="67.2294%" y="933" width="0.2597%" height="15" fill="rgb(230,197,49)" fg:x="1553" fg:w="6"/><text x="67.4794%" y="943.50"></text></g><g><title>_int_free (5 samples, 0.22%)</title><rect x="67.2727%" y="917" width="0.2165%" height="15" fill="rgb(239,141,16)" fg:x="1554" fg:w="5"/><text x="67.5227%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.09%)</title><rect x="67.4892%" y="901" width="0.0866%" height="15" fill="rgb(225,105,43)" fg:x="1559" fg:w="2"/><text x="67.7392%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="67.4892%" y="949" width="0.1299%" height="15" fill="rgb(214,131,14)" fg:x="1559" fg:w="3"/><text x="67.7392%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="67.4892%" y="933" width="0.1299%" height="15" fill="rgb(229,177,11)" fg:x="1559" fg:w="3"/><text x="67.7392%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="67.4892%" y="917" width="0.1299%" height="15" fill="rgb(231,180,14)" fg:x="1559" fg:w="3"/><text x="67.7392%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="67.5758%" y="901" width="0.0433%" height="15" fill="rgb(232,88,2)" fg:x="1561" fg:w="1"/><text x="67.8258%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="67.6190%" y="949" width="0.0433%" height="15" fill="rgb(205,220,8)" fg:x="1562" fg:w="1"/><text x="67.8690%" y="959.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.04%)</title><rect x="67.6190%" y="933" width="0.0433%" height="15" fill="rgb(225,23,53)" fg:x="1562" fg:w="1"/><text x="67.8690%" y="943.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.04%)</title><rect x="67.6190%" y="917" width="0.0433%" height="15" fill="rgb(213,62,29)" fg:x="1562" fg:w="1"/><text x="67.8690%" y="927.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.04%)</title><rect x="67.6190%" y="901" width="0.0433%" height="15" fill="rgb(227,75,7)" fg:x="1562" fg:w="1"/><text x="67.8690%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="67.6623%" y="933" width="0.0433%" height="15" fill="rgb(207,105,14)" fg:x="1563" fg:w="1"/><text x="67.9123%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="67.6623%" y="917" width="0.0433%" height="15" fill="rgb(245,62,29)" fg:x="1563" fg:w="1"/><text x="67.9123%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="67.6623%" y="901" width="0.0433%" height="15" fill="rgb(236,202,4)" fg:x="1563" fg:w="1"/><text x="67.9123%" y="911.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="67.6623%" y="885" width="0.0433%" height="15" fill="rgb(250,67,1)" fg:x="1563" fg:w="1"/><text x="67.9123%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.26%)</title><rect x="67.4892%" y="965" width="0.2597%" height="15" fill="rgb(253,115,44)" fg:x="1559" fg:w="6"/><text x="67.7392%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.09%)</title><rect x="67.6623%" y="949" width="0.0866%" height="15" fill="rgb(251,139,18)" fg:x="1563" fg:w="2"/><text x="67.9123%" y="959.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.04%)</title><rect x="67.7056%" y="933" width="0.0433%" height="15" fill="rgb(218,22,32)" fg:x="1564" fg:w="1"/><text x="67.9556%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="67.7056%" y="917" width="0.0433%" height="15" fill="rgb(243,53,5)" fg:x="1564" fg:w="1"/><text x="67.9556%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="67.7056%" y="901" width="0.0433%" height="15" fill="rgb(227,56,16)" fg:x="1564" fg:w="1"/><text x="67.9556%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="67.7056%" y="885" width="0.0433%" height="15" fill="rgb(245,53,0)" fg:x="1564" fg:w="1"/><text x="67.9556%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.35%)</title><rect x="67.4892%" y="1013" width="0.3463%" height="15" fill="rgb(216,170,35)" fg:x="1559" fg:w="8"/><text x="67.7392%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.35%)</title><rect x="67.4892%" y="997" width="0.3463%" height="15" fill="rgb(211,200,8)" fg:x="1559" fg:w="8"/><text x="67.7392%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.35%)</title><rect x="67.4892%" y="981" width="0.3463%" height="15" fill="rgb(228,204,44)" fg:x="1559" fg:w="8"/><text x="67.7392%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.09%)</title><rect x="67.7489%" y="965" width="0.0866%" height="15" fill="rgb(214,121,17)" fg:x="1565" fg:w="2"/><text x="67.9989%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.09%)</title><rect x="67.7489%" y="949" width="0.0866%" height="15" fill="rgb(233,64,38)" fg:x="1565" fg:w="2"/><text x="67.9989%" y="959.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.09%)</title><rect x="67.7489%" y="933" width="0.0866%" height="15" fill="rgb(253,54,19)" fg:x="1565" fg:w="2"/><text x="67.9989%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.09%)</title><rect x="67.7489%" y="917" width="0.0866%" height="15" fill="rgb(253,94,18)" fg:x="1565" fg:w="2"/><text x="67.9989%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.09%)</title><rect x="67.7489%" y="901" width="0.0866%" height="15" fill="rgb(227,57,52)" fg:x="1565" fg:w="2"/><text x="67.9989%" y="911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.09%)</title><rect x="67.7489%" y="885" width="0.0866%" height="15" fill="rgb(230,228,50)" fg:x="1565" fg:w="2"/><text x="67.9989%" y="895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.09%)</title><rect x="67.7489%" y="869" width="0.0866%" height="15" fill="rgb(217,205,27)" fg:x="1565" fg:w="2"/><text x="67.9989%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.13%)</title><rect x="67.9654%" y="853" width="0.1299%" height="15" fill="rgb(252,71,50)" fg:x="1570" fg:w="3"/><text x="68.2154%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.09%)</title><rect x="68.0087%" y="837" width="0.0866%" height="15" fill="rgb(209,86,4)" fg:x="1571" fg:w="2"/><text x="68.2587%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.39%)</title><rect x="67.8788%" y="901" width="0.3896%" height="15" fill="rgb(229,94,0)" fg:x="1568" fg:w="9"/><text x="68.1288%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.39%)</title><rect x="67.8788%" y="885" width="0.3896%" height="15" fill="rgb(252,223,21)" fg:x="1568" fg:w="9"/><text x="68.1288%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.39%)</title><rect x="67.8788%" y="869" width="0.3896%" height="15" fill="rgb(230,210,4)" fg:x="1568" fg:w="9"/><text x="68.1288%" y="879.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.17%)</title><rect x="68.0952%" y="853" width="0.1732%" height="15" fill="rgb(240,149,38)" fg:x="1573" fg:w="4"/><text x="68.3452%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (12 samples, 0.52%)</title><rect x="67.8788%" y="933" width="0.5195%" height="15" fill="rgb(254,105,20)" fg:x="1568" fg:w="12"/><text x="68.1288%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (12 samples, 0.52%)</title><rect x="67.8788%" y="917" width="0.5195%" height="15" fill="rgb(253,87,46)" fg:x="1568" fg:w="12"/><text x="68.1288%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u8 (3 samples, 0.13%)</title><rect x="68.2684%" y="901" width="0.1299%" height="15" fill="rgb(253,116,33)" fg:x="1577" fg:w="3"/><text x="68.5184%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="68.2684%" y="885" width="0.1299%" height="15" fill="rgb(229,198,5)" fg:x="1577" fg:w="3"/><text x="68.5184%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="68.2684%" y="869" width="0.1299%" height="15" fill="rgb(242,38,37)" fg:x="1577" fg:w="3"/><text x="68.5184%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="68.2684%" y="853" width="0.1299%" height="15" fill="rgb(242,69,53)" fg:x="1577" fg:w="3"/><text x="68.5184%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="68.3550%" y="837" width="0.0433%" height="15" fill="rgb(249,80,16)" fg:x="1579" fg:w="1"/><text x="68.6050%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.17%)</title><rect x="68.5714%" y="869" width="0.1732%" height="15" fill="rgb(206,128,11)" fg:x="1584" fg:w="4"/><text x="68.8214%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.39%)</title><rect x="68.3983%" y="933" width="0.3896%" height="15" fill="rgb(212,35,20)" fg:x="1580" fg:w="9"/><text x="68.6483%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.39%)</title><rect x="68.3983%" y="917" width="0.3896%" height="15" fill="rgb(236,79,13)" fg:x="1580" fg:w="9"/><text x="68.6483%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.39%)</title><rect x="68.3983%" y="901" width="0.3896%" height="15" fill="rgb(233,123,3)" fg:x="1580" fg:w="9"/><text x="68.6483%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.22%)</title><rect x="68.5714%" y="885" width="0.2165%" height="15" fill="rgb(214,93,52)" fg:x="1584" fg:w="5"/><text x="68.8214%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="68.7446%" y="869" width="0.0433%" height="15" fill="rgb(251,37,40)" fg:x="1588" fg:w="1"/><text x="68.9946%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (26 samples, 1.13%)</title><rect x="67.8355%" y="949" width="1.1255%" height="15" fill="rgb(227,80,54)" fg:x="1567" fg:w="26"/><text x="68.0855%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.17%)</title><rect x="68.7879%" y="933" width="0.1732%" height="15" fill="rgb(254,48,11)" fg:x="1589" fg:w="4"/><text x="69.0379%" y="943.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.17%)</title><rect x="68.7879%" y="917" width="0.1732%" height="15" fill="rgb(235,193,26)" fg:x="1589" fg:w="4"/><text x="69.0379%" y="927.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4 samples, 0.17%)</title><rect x="68.7879%" y="901" width="0.1732%" height="15" fill="rgb(229,99,21)" fg:x="1589" fg:w="4"/><text x="69.0379%" y="911.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4 samples, 0.17%)</title><rect x="68.7879%" y="885" width="0.1732%" height="15" fill="rgb(211,140,41)" fg:x="1589" fg:w="4"/><text x="69.0379%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="68.9610%" y="917" width="0.0866%" height="15" fill="rgb(240,227,30)" fg:x="1593" fg:w="2"/><text x="69.2110%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="69.0043%" y="901" width="0.0433%" height="15" fill="rgb(215,224,45)" fg:x="1594" fg:w="1"/><text x="69.2543%" y="911.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (1 samples, 0.04%)</title><rect x="69.0043%" y="885" width="0.0433%" height="15" fill="rgb(206,123,31)" fg:x="1594" fg:w="1"/><text x="69.2543%" y="895.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.30%)</title><rect x="69.0476%" y="917" width="0.3030%" height="15" fill="rgb(210,138,16)" fg:x="1595" fg:w="7"/><text x="69.2976%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (7 samples, 0.30%)</title><rect x="69.0476%" y="901" width="0.3030%" height="15" fill="rgb(228,57,28)" fg:x="1595" fg:w="7"/><text x="69.2976%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (7 samples, 0.30%)</title><rect x="69.0476%" y="885" width="0.3030%" height="15" fill="rgb(242,170,10)" fg:x="1595" fg:w="7"/><text x="69.2976%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.30%)</title><rect x="69.0476%" y="869" width="0.3030%" height="15" fill="rgb(228,214,39)" fg:x="1595" fg:w="7"/><text x="69.2976%" y="879.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.30%)</title><rect x="69.0476%" y="853" width="0.3030%" height="15" fill="rgb(218,179,33)" fg:x="1595" fg:w="7"/><text x="69.2976%" y="863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.30%)</title><rect x="69.0476%" y="837" width="0.3030%" height="15" fill="rgb(235,193,39)" fg:x="1595" fg:w="7"/><text x="69.2976%" y="847.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.04%)</title><rect x="69.3506%" y="869" width="0.0433%" height="15" fill="rgb(219,221,36)" fg:x="1602" fg:w="1"/><text x="69.6006%" y="879.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (41 samples, 1.77%)</title><rect x="67.8355%" y="1013" width="1.7749%" height="15" fill="rgb(248,218,19)" fg:x="1567" fg:w="41"/><text x="68.0855%" y="1023.50">s..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (41 samples, 1.77%)</title><rect x="67.8355%" y="997" width="1.7749%" height="15" fill="rgb(205,50,9)" fg:x="1567" fg:w="41"/><text x="68.0855%" y="1007.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (41 samples, 1.77%)</title><rect x="67.8355%" y="981" width="1.7749%" height="15" fill="rgb(238,81,28)" fg:x="1567" fg:w="41"/><text x="68.0855%" y="991.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (41 samples, 1.77%)</title><rect x="67.8355%" y="965" width="1.7749%" height="15" fill="rgb(235,110,19)" fg:x="1567" fg:w="41"/><text x="68.0855%" y="975.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.65%)</title><rect x="68.9610%" y="949" width="0.6494%" height="15" fill="rgb(214,7,14)" fg:x="1593" fg:w="15"/><text x="69.2110%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.65%)</title><rect x="68.9610%" y="933" width="0.6494%" height="15" fill="rgb(211,77,3)" fg:x="1593" fg:w="15"/><text x="69.2110%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.26%)</title><rect x="69.3506%" y="917" width="0.2597%" height="15" fill="rgb(229,5,9)" fg:x="1602" fg:w="6"/><text x="69.6006%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.26%)</title><rect x="69.3506%" y="901" width="0.2597%" height="15" fill="rgb(225,90,11)" fg:x="1602" fg:w="6"/><text x="69.6006%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.26%)</title><rect x="69.3506%" y="885" width="0.2597%" height="15" fill="rgb(242,56,8)" fg:x="1602" fg:w="6"/><text x="69.6006%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.22%)</title><rect x="69.3939%" y="869" width="0.2165%" height="15" fill="rgb(249,212,39)" fg:x="1603" fg:w="5"/><text x="69.6439%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.22%)</title><rect x="69.3939%" y="853" width="0.2165%" height="15" fill="rgb(236,90,9)" fg:x="1603" fg:w="5"/><text x="69.6439%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.22%)</title><rect x="69.3939%" y="837" width="0.2165%" height="15" fill="rgb(206,88,35)" fg:x="1603" fg:w="5"/><text x="69.6439%" y="847.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.22%)</title><rect x="69.3939%" y="821" width="0.2165%" height="15" fill="rgb(205,126,30)" fg:x="1603" fg:w="5"/><text x="69.6439%" y="831.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.04%)</title><rect x="69.6104%" y="965" width="0.0433%" height="15" fill="rgb(230,176,12)" fg:x="1608" fg:w="1"/><text x="69.8604%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="69.6104%" y="949" width="0.0433%" height="15" fill="rgb(243,19,9)" fg:x="1608" fg:w="1"/><text x="69.8604%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.04%)</title><rect x="69.6104%" y="933" width="0.0433%" height="15" fill="rgb(245,171,17)" fg:x="1608" fg:w="1"/><text x="69.8604%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="69.6104%" y="917" width="0.0433%" height="15" fill="rgb(227,52,21)" fg:x="1608" fg:w="1"/><text x="69.8604%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="69.6104%" y="901" width="0.0433%" height="15" fill="rgb(238,69,14)" fg:x="1608" fg:w="1"/><text x="69.8604%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="69.6104%" y="885" width="0.0433%" height="15" fill="rgb(241,156,39)" fg:x="1608" fg:w="1"/><text x="69.8604%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="69.6104%" y="869" width="0.0433%" height="15" fill="rgb(212,227,28)" fg:x="1608" fg:w="1"/><text x="69.8604%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="69.6104%" y="853" width="0.0433%" height="15" fill="rgb(209,118,27)" fg:x="1608" fg:w="1"/><text x="69.8604%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.04%)</title><rect x="69.6537%" y="965" width="0.0433%" height="15" fill="rgb(226,102,5)" fg:x="1609" fg:w="1"/><text x="69.9037%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="69.6537%" y="949" width="0.0433%" height="15" fill="rgb(223,34,3)" fg:x="1609" fg:w="1"/><text x="69.9037%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="69.6537%" y="933" width="0.0433%" height="15" fill="rgb(221,81,38)" fg:x="1609" fg:w="1"/><text x="69.9037%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="69.6537%" y="917" width="0.0433%" height="15" fill="rgb(236,219,28)" fg:x="1609" fg:w="1"/><text x="69.9037%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="69.6537%" y="901" width="0.0433%" height="15" fill="rgb(213,200,14)" fg:x="1609" fg:w="1"/><text x="69.9037%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.04%)</title><rect x="69.6537%" y="885" width="0.0433%" height="15" fill="rgb(240,33,19)" fg:x="1609" fg:w="1"/><text x="69.9037%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.04%)</title><rect x="69.6537%" y="869" width="0.0433%" height="15" fill="rgb(233,113,27)" fg:x="1609" fg:w="1"/><text x="69.9037%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="69.6537%" y="853" width="0.0433%" height="15" fill="rgb(220,221,18)" fg:x="1609" fg:w="1"/><text x="69.9037%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (12 samples, 0.52%)</title><rect x="69.6970%" y="869" width="0.5195%" height="15" fill="rgb(238,92,8)" fg:x="1610" fg:w="12"/><text x="69.9470%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (12 samples, 0.52%)</title><rect x="69.6970%" y="853" width="0.5195%" height="15" fill="rgb(222,164,16)" fg:x="1610" fg:w="12"/><text x="69.9470%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.52%)</title><rect x="69.6970%" y="837" width="0.5195%" height="15" fill="rgb(241,119,3)" fg:x="1610" fg:w="12"/><text x="69.9470%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.52%)</title><rect x="69.6970%" y="821" width="0.5195%" height="15" fill="rgb(241,44,8)" fg:x="1610" fg:w="12"/><text x="69.9470%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.52%)</title><rect x="69.6970%" y="805" width="0.5195%" height="15" fill="rgb(230,36,40)" fg:x="1610" fg:w="12"/><text x="69.9470%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.52%)</title><rect x="69.6970%" y="789" width="0.5195%" height="15" fill="rgb(243,16,36)" fg:x="1610" fg:w="12"/><text x="69.9470%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.09%)</title><rect x="70.1299%" y="773" width="0.0866%" height="15" fill="rgb(231,4,26)" fg:x="1620" fg:w="2"/><text x="70.3799%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="70.2165%" y="869" width="0.1299%" height="15" fill="rgb(240,9,31)" fg:x="1622" fg:w="3"/><text x="70.4665%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="70.2165%" y="853" width="0.1299%" height="15" fill="rgb(207,173,15)" fg:x="1622" fg:w="3"/><text x="70.4665%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.13%)</title><rect x="70.2165%" y="837" width="0.1299%" height="15" fill="rgb(224,192,53)" fg:x="1622" fg:w="3"/><text x="70.4665%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="70.3030%" y="821" width="0.0433%" height="15" fill="rgb(223,67,28)" fg:x="1624" fg:w="1"/><text x="70.5530%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="70.3030%" y="805" width="0.0433%" height="15" fill="rgb(211,20,47)" fg:x="1624" fg:w="1"/><text x="70.5530%" y="815.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (16 samples, 0.69%)</title><rect x="69.6970%" y="901" width="0.6926%" height="15" fill="rgb(240,228,2)" fg:x="1610" fg:w="16"/><text x="69.9470%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.69%)</title><rect x="69.6970%" y="885" width="0.6926%" height="15" fill="rgb(248,151,12)" fg:x="1610" fg:w="16"/><text x="69.9470%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="70.3463%" y="869" width="0.0433%" height="15" fill="rgb(244,8,39)" fg:x="1625" fg:w="1"/><text x="70.5963%" y="879.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.04%)</title><rect x="70.3463%" y="853" width="0.0433%" height="15" fill="rgb(222,26,8)" fg:x="1625" fg:w="1"/><text x="70.5963%" y="863.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.04%)</title><rect x="70.3463%" y="837" width="0.0433%" height="15" fill="rgb(213,106,44)" fg:x="1625" fg:w="1"/><text x="70.5963%" y="847.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.04%)</title><rect x="70.3463%" y="821" width="0.0433%" height="15" fill="rgb(214,129,20)" fg:x="1625" fg:w="1"/><text x="70.5963%" y="831.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (3 samples, 0.13%)</title><rect x="70.3896%" y="901" width="0.1299%" height="15" fill="rgb(212,32,13)" fg:x="1626" fg:w="3"/><text x="70.6396%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (3 samples, 0.13%)</title><rect x="70.3896%" y="885" width="0.1299%" height="15" fill="rgb(208,168,33)" fg:x="1626" fg:w="3"/><text x="70.6396%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.13%)</title><rect x="70.3896%" y="869" width="0.1299%" height="15" fill="rgb(231,207,8)" fg:x="1626" fg:w="3"/><text x="70.6396%" y="879.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.04%)</title><rect x="70.4762%" y="853" width="0.0433%" height="15" fill="rgb(235,219,23)" fg:x="1628" fg:w="1"/><text x="70.7262%" y="863.50"></text></g><g><title>exc_page_fault (1 samples, 0.04%)</title><rect x="70.4762%" y="837" width="0.0433%" height="15" fill="rgb(226,216,26)" fg:x="1628" fg:w="1"/><text x="70.7262%" y="847.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="70.4762%" y="821" width="0.0433%" height="15" fill="rgb(239,137,16)" fg:x="1628" fg:w="1"/><text x="70.7262%" y="831.50"></text></g><g><title>handle_mm_fault (1 samples, 0.04%)</title><rect x="70.4762%" y="805" width="0.0433%" height="15" fill="rgb(207,12,36)" fg:x="1628" fg:w="1"/><text x="70.7262%" y="815.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="70.4762%" y="789" width="0.0433%" height="15" fill="rgb(210,214,24)" fg:x="1628" fg:w="1"/><text x="70.7262%" y="799.50"></text></g><g><title>do_anonymous_page (1 samples, 0.04%)</title><rect x="70.4762%" y="773" width="0.0433%" height="15" fill="rgb(206,56,30)" fg:x="1628" fg:w="1"/><text x="70.7262%" y="783.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="70.4762%" y="757" width="0.0433%" height="15" fill="rgb(228,143,26)" fg:x="1628" fg:w="1"/><text x="70.7262%" y="767.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="70.4762%" y="741" width="0.0433%" height="15" fill="rgb(216,218,46)" fg:x="1628" fg:w="1"/><text x="70.7262%" y="751.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="70.4762%" y="725" width="0.0433%" height="15" fill="rgb(206,6,19)" fg:x="1628" fg:w="1"/><text x="70.7262%" y="735.50"></text></g><g><title>clear_page_rep (1 samples, 0.04%)</title><rect x="70.4762%" y="709" width="0.0433%" height="15" fill="rgb(239,177,51)" fg:x="1628" fg:w="1"/><text x="70.7262%" y="719.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (22 samples, 0.95%)</title><rect x="69.6104%" y="1013" width="0.9524%" height="15" fill="rgb(216,55,25)" fg:x="1608" fg:w="22"/><text x="69.8604%" y="1023.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (22 samples, 0.95%)</title><rect x="69.6104%" y="997" width="0.9524%" height="15" fill="rgb(231,163,29)" fg:x="1608" fg:w="22"/><text x="69.8604%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.95%)</title><rect x="69.6104%" y="981" width="0.9524%" height="15" fill="rgb(232,149,50)" fg:x="1608" fg:w="22"/><text x="69.8604%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (20 samples, 0.87%)</title><rect x="69.6970%" y="965" width="0.8658%" height="15" fill="rgb(223,142,48)" fg:x="1610" fg:w="20"/><text x="69.9470%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (20 samples, 0.87%)</title><rect x="69.6970%" y="949" width="0.8658%" height="15" fill="rgb(245,83,23)" fg:x="1610" fg:w="20"/><text x="69.9470%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (20 samples, 0.87%)</title><rect x="69.6970%" y="933" width="0.8658%" height="15" fill="rgb(224,63,2)" fg:x="1610" fg:w="20"/><text x="69.9470%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (20 samples, 0.87%)</title><rect x="69.6970%" y="917" width="0.8658%" height="15" fill="rgb(218,65,53)" fg:x="1610" fg:w="20"/><text x="69.9470%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.04%)</title><rect x="70.5195%" y="901" width="0.0433%" height="15" fill="rgb(221,84,29)" fg:x="1629" fg:w="1"/><text x="70.7695%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.04%)</title><rect x="70.5195%" y="885" width="0.0433%" height="15" fill="rgb(234,0,32)" fg:x="1629" fg:w="1"/><text x="70.7695%" y="895.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.04%)</title><rect x="70.5195%" y="869" width="0.0433%" height="15" fill="rgb(206,20,16)" fg:x="1629" fg:w="1"/><text x="70.7695%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="70.8658%" y="933" width="0.0866%" height="15" fill="rgb(244,172,18)" fg:x="1637" fg:w="2"/><text x="71.1158%" y="943.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="70.9091%" y="917" width="0.0433%" height="15" fill="rgb(254,133,1)" fg:x="1638" fg:w="1"/><text x="71.1591%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="70.9091%" y="901" width="0.0433%" height="15" fill="rgb(222,206,41)" fg:x="1638" fg:w="1"/><text x="71.1591%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9 samples, 0.39%)</title><rect x="70.9524%" y="869" width="0.3896%" height="15" fill="rgb(212,3,42)" fg:x="1639" fg:w="9"/><text x="71.2024%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9 samples, 0.39%)</title><rect x="70.9524%" y="853" width="0.3896%" height="15" fill="rgb(241,11,4)" fg:x="1639" fg:w="9"/><text x="71.2024%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (9 samples, 0.39%)</title><rect x="70.9524%" y="837" width="0.3896%" height="15" fill="rgb(205,19,26)" fg:x="1639" fg:w="9"/><text x="71.2024%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9 samples, 0.39%)</title><rect x="70.9524%" y="821" width="0.3896%" height="15" fill="rgb(210,179,32)" fg:x="1639" fg:w="9"/><text x="71.2024%" y="831.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (9 samples, 0.39%)</title><rect x="70.9524%" y="805" width="0.3896%" height="15" fill="rgb(227,116,49)" fg:x="1639" fg:w="9"/><text x="71.2024%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9 samples, 0.39%)</title><rect x="70.9524%" y="789" width="0.3896%" height="15" fill="rgb(211,146,6)" fg:x="1639" fg:w="9"/><text x="71.2024%" y="799.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.13%)</title><rect x="71.2121%" y="773" width="0.1299%" height="15" fill="rgb(219,44,39)" fg:x="1645" fg:w="3"/><text x="71.4621%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.13%)</title><rect x="71.3420%" y="869" width="0.1299%" height="15" fill="rgb(234,128,11)" fg:x="1648" fg:w="3"/><text x="71.5920%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.13%)</title><rect x="71.3420%" y="853" width="0.1299%" height="15" fill="rgb(220,183,53)" fg:x="1648" fg:w="3"/><text x="71.5920%" y="863.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="71.3853%" y="837" width="0.0866%" height="15" fill="rgb(213,219,32)" fg:x="1649" fg:w="2"/><text x="71.6353%" y="847.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.09%)</title><rect x="71.3853%" y="821" width="0.0866%" height="15" fill="rgb(232,156,16)" fg:x="1649" fg:w="2"/><text x="71.6353%" y="831.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11 samples, 0.48%)</title><rect x="74.1126%" y="773" width="0.4762%" height="15" fill="rgb(246,135,34)" fg:x="1712" fg:w="11"/><text x="74.3626%" y="783.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (11 samples, 0.48%)</title><rect x="74.1126%" y="757" width="0.4762%" height="15" fill="rgb(241,99,0)" fg:x="1712" fg:w="11"/><text x="74.3626%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.04%)</title><rect x="74.5455%" y="741" width="0.0433%" height="15" fill="rgb(222,103,45)" fg:x="1722" fg:w="1"/><text x="74.7955%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (80 samples, 3.46%)</title><rect x="71.4719%" y="869" width="3.4632%" height="15" fill="rgb(212,57,4)" fg:x="1651" fg:w="80"/><text x="71.7219%" y="879.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (59 samples, 2.55%)</title><rect x="72.3810%" y="853" width="2.5541%" height="15" fill="rgb(215,68,47)" fg:x="1672" fg:w="59"/><text x="72.6310%" y="863.50">co..</text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 2.42%)</title><rect x="72.5108%" y="837" width="2.4242%" height="15" fill="rgb(230,84,2)" fg:x="1675" fg:w="56"/><text x="72.7608%" y="847.50">&lt;c..</text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (56 samples, 2.42%)</title><rect x="72.5108%" y="821" width="2.4242%" height="15" fill="rgb(220,102,14)" fg:x="1675" fg:w="56"/><text x="72.7608%" y="831.50">co..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (54 samples, 2.34%)</title><rect x="72.5974%" y="805" width="2.3377%" height="15" fill="rgb(240,10,32)" fg:x="1677" fg:w="54"/><text x="72.8474%" y="815.50">&lt;..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (50 samples, 2.16%)</title><rect x="72.7706%" y="789" width="2.1645%" height="15" fill="rgb(215,47,27)" fg:x="1681" fg:w="50"/><text x="73.0206%" y="799.50">c..</text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (8 samples, 0.35%)</title><rect x="74.5887%" y="773" width="0.3463%" height="15" fill="rgb(233,188,43)" fg:x="1723" fg:w="8"/><text x="74.8387%" y="783.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (8 samples, 0.35%)</title><rect x="75.3680%" y="789" width="0.3463%" height="15" fill="rgb(253,190,1)" fg:x="1741" fg:w="8"/><text x="75.6180%" y="799.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (8 samples, 0.35%)</title><rect x="75.3680%" y="773" width="0.3463%" height="15" fill="rgb(206,114,52)" fg:x="1741" fg:w="8"/><text x="75.6180%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.17%)</title><rect x="75.5411%" y="757" width="0.1732%" height="15" fill="rgb(233,120,37)" fg:x="1745" fg:w="4"/><text x="75.7911%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="75.8009%" y="757" width="0.1732%" height="15" fill="rgb(214,52,39)" fg:x="1751" fg:w="4"/><text x="76.0509%" y="767.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (7 samples, 0.30%)</title><rect x="75.7143%" y="789" width="0.3030%" height="15" fill="rgb(223,80,29)" fg:x="1749" fg:w="7"/><text x="75.9643%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.30%)</title><rect x="75.7143%" y="773" width="0.3030%" height="15" fill="rgb(230,101,40)" fg:x="1749" fg:w="7"/><text x="75.9643%" y="783.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create::{{closure}} (1 samples, 0.04%)</title><rect x="75.9740%" y="757" width="0.0433%" height="15" fill="rgb(219,211,8)" fg:x="1755" fg:w="1"/><text x="76.2240%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (122 samples, 5.28%)</title><rect x="70.8658%" y="997" width="5.2814%" height="15" fill="rgb(252,126,28)" fg:x="1637" fg:w="122"/><text x="71.1158%" y="1007.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::find (122 samples, 5.28%)</title><rect x="70.8658%" y="981" width="5.2814%" height="15" fill="rgb(215,56,38)" fg:x="1637" fg:w="122"/><text x="71.1158%" y="991.50">core::..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (122 samples, 5.28%)</title><rect x="70.8658%" y="965" width="5.2814%" height="15" fill="rgb(249,55,44)" fg:x="1637" fg:w="122"/><text x="71.1158%" y="975.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (122 samples, 5.28%)</title><rect x="70.8658%" y="949" width="5.2814%" height="15" fill="rgb(220,221,32)" fg:x="1637" fg:w="122"/><text x="71.1158%" y="959.50">core::..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (120 samples, 5.19%)</title><rect x="70.9524%" y="933" width="5.1948%" height="15" fill="rgb(212,216,41)" fg:x="1639" fg:w="120"/><text x="71.2024%" y="943.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (120 samples, 5.19%)</title><rect x="70.9524%" y="917" width="5.1948%" height="15" fill="rgb(228,213,43)" fg:x="1639" fg:w="120"/><text x="71.2024%" y="927.50">core::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (120 samples, 5.19%)</title><rect x="70.9524%" y="901" width="5.1948%" height="15" fill="rgb(211,31,26)" fg:x="1639" fg:w="120"/><text x="71.2024%" y="911.50">core::..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (120 samples, 5.19%)</title><rect x="70.9524%" y="885" width="5.1948%" height="15" fill="rgb(229,202,19)" fg:x="1639" fg:w="120"/><text x="71.2024%" y="895.50">y2021:..</text></g><g><title>core::str::&lt;impl str&gt;::matches (28 samples, 1.21%)</title><rect x="74.9351%" y="869" width="1.2121%" height="15" fill="rgb(229,105,46)" fg:x="1731" fg:w="28"/><text x="75.1851%" y="879.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (28 samples, 1.21%)</title><rect x="74.9351%" y="853" width="1.2121%" height="15" fill="rgb(235,108,1)" fg:x="1731" fg:w="28"/><text x="75.1851%" y="863.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (28 samples, 1.21%)</title><rect x="74.9351%" y="837" width="1.2121%" height="15" fill="rgb(245,111,35)" fg:x="1731" fg:w="28"/><text x="75.1851%" y="847.50"></text></g><g><title>core::str::pattern::StrSearcher::new (27 samples, 1.17%)</title><rect x="74.9784%" y="821" width="1.1688%" height="15" fill="rgb(219,185,31)" fg:x="1732" fg:w="27"/><text x="75.2284%" y="831.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (21 samples, 0.91%)</title><rect x="75.2381%" y="805" width="0.9091%" height="15" fill="rgb(214,4,43)" fg:x="1738" fg:w="21"/><text x="75.4881%" y="815.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (3 samples, 0.13%)</title><rect x="76.0173%" y="789" width="0.1299%" height="15" fill="rgb(235,227,40)" fg:x="1756" fg:w="3"/><text x="76.2673%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="76.1039%" y="773" width="0.0433%" height="15" fill="rgb(230,88,30)" fg:x="1758" fg:w="1"/><text x="76.3539%" y="783.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="76.1039%" y="757" width="0.0433%" height="15" fill="rgb(216,217,1)" fg:x="1758" fg:w="1"/><text x="76.3539%" y="767.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="76.4935%" y="949" width="0.0433%" height="15" fill="rgb(248,139,50)" fg:x="1767" fg:w="1"/><text x="76.7435%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="76.8398%" y="789" width="0.0433%" height="15" fill="rgb(233,1,21)" fg:x="1775" fg:w="1"/><text x="77.0898%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (3 samples, 0.13%)</title><rect x="76.8831%" y="789" width="0.1299%" height="15" fill="rgb(215,183,12)" fg:x="1776" fg:w="3"/><text x="77.1331%" y="799.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.04%)</title><rect x="77.3593%" y="693" width="0.0433%" height="15" fill="rgb(229,104,42)" fg:x="1787" fg:w="1"/><text x="77.6093%" y="703.50"></text></g><g><title>alloc_perturb (1 samples, 0.04%)</title><rect x="77.4459%" y="677" width="0.0433%" height="15" fill="rgb(243,34,48)" fg:x="1789" fg:w="1"/><text x="77.6959%" y="687.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="77.4892%" y="581" width="0.0433%" height="15" fill="rgb(239,11,44)" fg:x="1790" fg:w="1"/><text x="77.7392%" y="591.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="77.4892%" y="565" width="0.0433%" height="15" fill="rgb(231,98,35)" fg:x="1790" fg:w="1"/><text x="77.7392%" y="575.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="77.4892%" y="549" width="0.0433%" height="15" fill="rgb(233,28,25)" fg:x="1790" fg:w="1"/><text x="77.7392%" y="559.50"></text></g><g><title>clear_page_rep (1 samples, 0.04%)</title><rect x="77.4892%" y="533" width="0.0433%" height="15" fill="rgb(234,123,11)" fg:x="1790" fg:w="1"/><text x="77.7392%" y="543.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.48%)</title><rect x="77.0996%" y="725" width="0.4762%" height="15" fill="rgb(220,69,3)" fg:x="1781" fg:w="11"/><text x="77.3496%" y="735.50"></text></g><g><title>_int_realloc (9 samples, 0.39%)</title><rect x="77.1861%" y="709" width="0.3896%" height="15" fill="rgb(214,64,36)" fg:x="1783" fg:w="9"/><text x="77.4361%" y="719.50"></text></g><g><title>_int_malloc (4 samples, 0.17%)</title><rect x="77.4026%" y="693" width="0.1732%" height="15" fill="rgb(211,138,32)" fg:x="1788" fg:w="4"/><text x="77.6526%" y="703.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.09%)</title><rect x="77.4892%" y="677" width="0.0866%" height="15" fill="rgb(213,118,47)" fg:x="1790" fg:w="2"/><text x="77.7392%" y="687.50"></text></g><g><title>exc_page_fault (2 samples, 0.09%)</title><rect x="77.4892%" y="661" width="0.0866%" height="15" fill="rgb(243,124,49)" fg:x="1790" fg:w="2"/><text x="77.7392%" y="671.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.09%)</title><rect x="77.4892%" y="645" width="0.0866%" height="15" fill="rgb(221,30,28)" fg:x="1790" fg:w="2"/><text x="77.7392%" y="655.50"></text></g><g><title>handle_mm_fault (2 samples, 0.09%)</title><rect x="77.4892%" y="629" width="0.0866%" height="15" fill="rgb(246,37,13)" fg:x="1790" fg:w="2"/><text x="77.7392%" y="639.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.09%)</title><rect x="77.4892%" y="613" width="0.0866%" height="15" fill="rgb(249,66,14)" fg:x="1790" fg:w="2"/><text x="77.7392%" y="623.50"></text></g><g><title>do_anonymous_page (2 samples, 0.09%)</title><rect x="77.4892%" y="597" width="0.0866%" height="15" fill="rgb(213,166,5)" fg:x="1790" fg:w="2"/><text x="77.7392%" y="607.50"></text></g><g><title>mem_cgroup_charge (1 samples, 0.04%)</title><rect x="77.5325%" y="581" width="0.0433%" height="15" fill="rgb(221,66,24)" fg:x="1791" fg:w="1"/><text x="77.7825%" y="591.50"></text></g><g><title>try_charge (1 samples, 0.04%)</title><rect x="77.5325%" y="565" width="0.0433%" height="15" fill="rgb(210,132,17)" fg:x="1791" fg:w="1"/><text x="77.7825%" y="575.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.04%)</title><rect x="77.5325%" y="549" width="0.0433%" height="15" fill="rgb(243,202,5)" fg:x="1791" fg:w="1"/><text x="77.7825%" y="559.50"></text></g><g><title>__rdl_realloc (3 samples, 0.13%)</title><rect x="77.5758%" y="725" width="0.1299%" height="15" fill="rgb(233,70,48)" fg:x="1792" fg:w="3"/><text x="77.8258%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.04%)</title><rect x="77.6623%" y="709" width="0.0433%" height="15" fill="rgb(238,41,26)" fg:x="1794" fg:w="1"/><text x="77.9123%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 0.69%)</title><rect x="77.0563%" y="773" width="0.6926%" height="15" fill="rgb(241,19,31)" fg:x="1780" fg:w="16"/><text x="77.3063%" y="783.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 0.69%)</title><rect x="77.0563%" y="757" width="0.6926%" height="15" fill="rgb(214,76,10)" fg:x="1780" fg:w="16"/><text x="77.3063%" y="767.50"></text></g><g><title>alloc::alloc::realloc (15 samples, 0.65%)</title><rect x="77.0996%" y="741" width="0.6494%" height="15" fill="rgb(254,202,22)" fg:x="1781" fg:w="15"/><text x="77.3496%" y="751.50"></text></g><g><title>__rust_realloc (1 samples, 0.04%)</title><rect x="77.7056%" y="725" width="0.0433%" height="15" fill="rgb(214,72,24)" fg:x="1795" fg:w="1"/><text x="77.9556%" y="735.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.13%)</title><rect x="77.7489%" y="773" width="0.1299%" height="15" fill="rgb(221,92,46)" fg:x="1796" fg:w="3"/><text x="77.9989%" y="783.50"></text></g><g><title>tcache_get (1 samples, 0.04%)</title><rect x="77.8355%" y="757" width="0.0433%" height="15" fill="rgb(246,13,50)" fg:x="1798" fg:w="1"/><text x="78.0855%" y="767.50"></text></g><g><title>__rdl_alloc (2 samples, 0.09%)</title><rect x="77.8788%" y="773" width="0.0866%" height="15" fill="rgb(240,165,38)" fg:x="1799" fg:w="2"/><text x="78.1288%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.09%)</title><rect x="77.8788%" y="757" width="0.0866%" height="15" fill="rgb(241,24,51)" fg:x="1799" fg:w="2"/><text x="78.1288%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 1.04%)</title><rect x="77.0130%" y="789" width="1.0390%" height="15" fill="rgb(227,51,44)" fg:x="1779" fg:w="24"/><text x="77.2630%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.09%)</title><rect x="77.9654%" y="773" width="0.0866%" height="15" fill="rgb(231,121,3)" fg:x="1801" fg:w="2"/><text x="78.2154%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (35 samples, 1.52%)</title><rect x="76.5801%" y="853" width="1.5152%" height="15" fill="rgb(245,3,41)" fg:x="1769" fg:w="35"/><text x="76.8301%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (35 samples, 1.52%)</title><rect x="76.5801%" y="837" width="1.5152%" height="15" fill="rgb(214,13,26)" fg:x="1769" fg:w="35"/><text x="76.8301%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (34 samples, 1.47%)</title><rect x="76.6234%" y="821" width="1.4719%" height="15" fill="rgb(252,75,11)" fg:x="1770" fg:w="34"/><text x="76.8734%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 1.26%)</title><rect x="76.8398%" y="805" width="1.2554%" height="15" fill="rgb(218,226,17)" fg:x="1775" fg:w="29"/><text x="77.0898%" y="815.50"></text></g><g><title>core::cmp::max (1 samples, 0.04%)</title><rect x="78.0519%" y="789" width="0.0433%" height="15" fill="rgb(248,89,38)" fg:x="1803" fg:w="1"/><text x="78.3019%" y="799.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="78.0519%" y="773" width="0.0433%" height="15" fill="rgb(237,73,46)" fg:x="1803" fg:w="1"/><text x="78.3019%" y="783.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.04%)</title><rect x="78.0519%" y="757" width="0.0433%" height="15" fill="rgb(242,78,33)" fg:x="1803" fg:w="1"/><text x="78.3019%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.13%)</title><rect x="78.0952%" y="853" width="0.1299%" height="15" fill="rgb(235,60,3)" fg:x="1804" fg:w="3"/><text x="78.3452%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.13%)</title><rect x="78.0952%" y="837" width="0.1299%" height="15" fill="rgb(216,172,19)" fg:x="1804" fg:w="3"/><text x="78.3452%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (42 samples, 1.82%)</title><rect x="76.5368%" y="949" width="1.8182%" height="15" fill="rgb(227,6,42)" fg:x="1768" fg:w="42"/><text x="76.7868%" y="959.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (42 samples, 1.82%)</title><rect x="76.5368%" y="933" width="1.8182%" height="15" fill="rgb(223,207,42)" fg:x="1768" fg:w="42"/><text x="76.7868%" y="943.50">&lt;..</text></g><g><title>alloc::string::String::push_str (42 samples, 1.82%)</title><rect x="76.5368%" y="917" width="1.8182%" height="15" fill="rgb(246,138,30)" fg:x="1768" fg:w="42"/><text x="76.7868%" y="927.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (42 samples, 1.82%)</title><rect x="76.5368%" y="901" width="1.8182%" height="15" fill="rgb(251,199,47)" fg:x="1768" fg:w="42"/><text x="76.7868%" y="911.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (42 samples, 1.82%)</title><rect x="76.5368%" y="885" width="1.8182%" height="15" fill="rgb(228,218,44)" fg:x="1768" fg:w="42"/><text x="76.7868%" y="895.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (42 samples, 1.82%)</title><rect x="76.5368%" y="869" width="1.8182%" height="15" fill="rgb(220,68,6)" fg:x="1768" fg:w="42"/><text x="76.7868%" y="879.50">a..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.13%)</title><rect x="78.2251%" y="853" width="0.1299%" height="15" fill="rgb(240,60,26)" fg:x="1807" fg:w="3"/><text x="78.4751%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.13%)</title><rect x="78.2251%" y="837" width="0.1299%" height="15" fill="rgb(211,200,19)" fg:x="1807" fg:w="3"/><text x="78.4751%" y="847.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="78.3550%" y="949" width="0.0433%" height="15" fill="rgb(242,145,30)" fg:x="1810" fg:w="1"/><text x="78.6050%" y="959.50"></text></g><g><title>core::fmt::Formatter::pad (5 samples, 0.22%)</title><rect x="78.3983%" y="949" width="0.2165%" height="15" fill="rgb(225,64,13)" fg:x="1811" fg:w="5"/><text x="78.6483%" y="959.50"></text></g><g><title>alloc::fmt::format (58 samples, 2.51%)</title><rect x="76.1472%" y="997" width="2.5108%" height="15" fill="rgb(218,103,35)" fg:x="1759" fg:w="58"/><text x="76.3972%" y="1007.50">al..</text></g><g><title>core::fmt::Write::write_fmt (54 samples, 2.34%)</title><rect x="76.3203%" y="981" width="2.3377%" height="15" fill="rgb(216,93,46)" fg:x="1763" fg:w="54"/><text x="76.5703%" y="991.50">c..</text></g><g><title>core::fmt::write (52 samples, 2.25%)</title><rect x="76.4069%" y="965" width="2.2511%" height="15" fill="rgb(225,159,27)" fg:x="1765" fg:w="52"/><text x="76.6569%" y="975.50">c..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="78.6147%" y="949" width="0.0433%" height="15" fill="rgb(225,204,11)" fg:x="1816" fg:w="1"/><text x="78.8647%" y="959.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="78.6147%" y="933" width="0.0433%" height="15" fill="rgb(205,56,4)" fg:x="1816" fg:w="1"/><text x="78.8647%" y="943.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.04%)</title><rect x="78.6580%" y="997" width="0.0433%" height="15" fill="rgb(206,6,35)" fg:x="1817" fg:w="1"/><text x="78.9080%" y="1007.50"></text></g><g><title>__GI___libc_free (1 samples, 0.04%)</title><rect x="78.7013%" y="901" width="0.0433%" height="15" fill="rgb(247,73,52)" fg:x="1818" fg:w="1"/><text x="78.9513%" y="911.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.04%)</title><rect x="78.7446%" y="901" width="0.0433%" height="15" fill="rgb(246,97,4)" fg:x="1819" fg:w="1"/><text x="78.9946%" y="911.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.04%)</title><rect x="78.7446%" y="885" width="0.0433%" height="15" fill="rgb(212,37,15)" fg:x="1819" fg:w="1"/><text x="78.9946%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.17%)</title><rect x="78.7013%" y="997" width="0.1732%" height="15" fill="rgb(208,130,40)" fg:x="1818" fg:w="4"/><text x="78.9513%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.17%)</title><rect x="78.7013%" y="981" width="0.1732%" height="15" fill="rgb(236,55,29)" fg:x="1818" fg:w="4"/><text x="78.9513%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.17%)</title><rect x="78.7013%" y="965" width="0.1732%" height="15" fill="rgb(209,156,45)" fg:x="1818" fg:w="4"/><text x="78.9513%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.17%)</title><rect x="78.7013%" y="949" width="0.1732%" height="15" fill="rgb(249,107,4)" fg:x="1818" fg:w="4"/><text x="78.9513%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.17%)</title><rect x="78.7013%" y="933" width="0.1732%" height="15" fill="rgb(227,7,13)" fg:x="1818" fg:w="4"/><text x="78.9513%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.17%)</title><rect x="78.7013%" y="917" width="0.1732%" height="15" fill="rgb(250,129,14)" fg:x="1818" fg:w="4"/><text x="78.9513%" y="927.50"></text></g><g><title>_int_free (2 samples, 0.09%)</title><rect x="78.7879%" y="901" width="0.0866%" height="15" fill="rgb(229,92,13)" fg:x="1820" fg:w="2"/><text x="79.0379%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.09%)</title><rect x="78.9610%" y="869" width="0.0866%" height="15" fill="rgb(245,98,39)" fg:x="1824" fg:w="2"/><text x="79.2110%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.17%)</title><rect x="78.9177%" y="933" width="0.1732%" height="15" fill="rgb(234,135,48)" fg:x="1823" fg:w="4"/><text x="79.1677%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.17%)</title><rect x="78.9177%" y="917" width="0.1732%" height="15" fill="rgb(230,98,28)" fg:x="1823" fg:w="4"/><text x="79.1677%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.17%)</title><rect x="78.9177%" y="901" width="0.1732%" height="15" fill="rgb(223,121,0)" fg:x="1823" fg:w="4"/><text x="79.1677%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.13%)</title><rect x="78.9610%" y="885" width="0.1299%" height="15" fill="rgb(234,173,33)" fg:x="1824" fg:w="3"/><text x="79.2110%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="79.0476%" y="869" width="0.0433%" height="15" fill="rgb(245,47,8)" fg:x="1826" fg:w="1"/><text x="79.2976%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.35%)</title><rect x="78.8745%" y="949" width="0.3463%" height="15" fill="rgb(205,17,20)" fg:x="1822" fg:w="8"/><text x="79.1245%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.13%)</title><rect x="79.0909%" y="933" width="0.1299%" height="15" fill="rgb(232,151,16)" fg:x="1827" fg:w="3"/><text x="79.3409%" y="943.50"></text></g><g><title>core::hash::Hasher::write_u8 (3 samples, 0.13%)</title><rect x="79.0909%" y="917" width="0.1299%" height="15" fill="rgb(208,30,32)" fg:x="1827" fg:w="3"/><text x="79.3409%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="79.0909%" y="901" width="0.1299%" height="15" fill="rgb(254,26,3)" fg:x="1827" fg:w="3"/><text x="79.3409%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="79.0909%" y="885" width="0.1299%" height="15" fill="rgb(240,177,30)" fg:x="1827" fg:w="3"/><text x="79.3409%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.13%)</title><rect x="79.0909%" y="869" width="0.1299%" height="15" fill="rgb(248,76,44)" fg:x="1827" fg:w="3"/><text x="79.3409%" y="879.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.09%)</title><rect x="79.1342%" y="853" width="0.0866%" height="15" fill="rgb(241,186,54)" fg:x="1828" fg:w="2"/><text x="79.3842%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="79.2208%" y="917" width="0.0866%" height="15" fill="rgb(249,171,29)" fg:x="1830" fg:w="2"/><text x="79.4708%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="79.2208%" y="901" width="0.0866%" height="15" fill="rgb(237,151,44)" fg:x="1830" fg:w="2"/><text x="79.4708%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="79.2641%" y="885" width="0.0433%" height="15" fill="rgb(228,174,30)" fg:x="1831" fg:w="1"/><text x="79.5141%" y="895.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.09%)</title><rect x="79.3074%" y="917" width="0.0866%" height="15" fill="rgb(252,14,37)" fg:x="1832" fg:w="2"/><text x="79.5574%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.09%)</title><rect x="79.3074%" y="901" width="0.0866%" height="15" fill="rgb(207,111,40)" fg:x="1832" fg:w="2"/><text x="79.5574%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.09%)</title><rect x="79.3074%" y="885" width="0.0866%" height="15" fill="rgb(248,171,54)" fg:x="1832" fg:w="2"/><text x="79.5574%" y="895.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.09%)</title><rect x="79.3074%" y="869" width="0.0866%" height="15" fill="rgb(211,127,2)" fg:x="1832" fg:w="2"/><text x="79.5574%" y="879.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.09%)</title><rect x="79.3074%" y="853" width="0.0866%" height="15" fill="rgb(236,87,47)" fg:x="1832" fg:w="2"/><text x="79.5574%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="79.3506%" y="837" width="0.0433%" height="15" fill="rgb(223,190,45)" fg:x="1833" fg:w="1"/><text x="79.6006%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (13 samples, 0.56%)</title><rect x="78.8745%" y="997" width="0.5628%" height="15" fill="rgb(215,5,16)" fg:x="1822" fg:w="13"/><text x="79.1245%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (13 samples, 0.56%)</title><rect x="78.8745%" y="981" width="0.5628%" height="15" fill="rgb(252,82,33)" fg:x="1822" fg:w="13"/><text x="79.1245%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 0.56%)</title><rect x="78.8745%" y="965" width="0.5628%" height="15" fill="rgb(247,213,44)" fg:x="1822" fg:w="13"/><text x="79.1245%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.22%)</title><rect x="79.2208%" y="949" width="0.2165%" height="15" fill="rgb(205,196,44)" fg:x="1830" fg:w="5"/><text x="79.4708%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.22%)</title><rect x="79.2208%" y="933" width="0.2165%" height="15" fill="rgb(237,96,54)" fg:x="1830" fg:w="5"/><text x="79.4708%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="79.3939%" y="917" width="0.0433%" height="15" fill="rgb(230,113,34)" fg:x="1834" fg:w="1"/><text x="79.6439%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="79.3939%" y="901" width="0.0433%" height="15" fill="rgb(221,224,12)" fg:x="1834" fg:w="1"/><text x="79.6439%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="79.3939%" y="885" width="0.0433%" height="15" fill="rgb(219,112,44)" fg:x="1834" fg:w="1"/><text x="79.6439%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="79.3939%" y="869" width="0.0433%" height="15" fill="rgb(210,31,13)" fg:x="1834" fg:w="1"/><text x="79.6439%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.04%)</title><rect x="79.3939%" y="853" width="0.0433%" height="15" fill="rgb(230,25,16)" fg:x="1834" fg:w="1"/><text x="79.6439%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.04%)</title><rect x="79.3939%" y="837" width="0.0433%" height="15" fill="rgb(246,108,53)" fg:x="1834" fg:w="1"/><text x="79.6439%" y="847.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.04%)</title><rect x="79.3939%" y="821" width="0.0433%" height="15" fill="rgb(241,172,50)" fg:x="1834" fg:w="1"/><text x="79.6439%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="79.4805%" y="901" width="0.0433%" height="15" fill="rgb(235,141,10)" fg:x="1836" fg:w="1"/><text x="79.7305%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="79.4805%" y="885" width="0.0433%" height="15" fill="rgb(220,174,43)" fg:x="1836" fg:w="1"/><text x="79.7305%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="79.4805%" y="869" width="0.0433%" height="15" fill="rgb(215,181,40)" fg:x="1836" fg:w="1"/><text x="79.7305%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.17%)</title><rect x="79.6537%" y="837" width="0.1732%" height="15" fill="rgb(230,97,2)" fg:x="1840" fg:w="4"/><text x="79.9037%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.17%)</title><rect x="79.6537%" y="821" width="0.1732%" height="15" fill="rgb(211,25,27)" fg:x="1840" fg:w="4"/><text x="79.9037%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.39%)</title><rect x="79.5238%" y="885" width="0.3896%" height="15" fill="rgb(230,87,26)" fg:x="1837" fg:w="9"/><text x="79.7738%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.39%)</title><rect x="79.5238%" y="869" width="0.3896%" height="15" fill="rgb(227,160,17)" fg:x="1837" fg:w="9"/><text x="79.7738%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.39%)</title><rect x="79.5238%" y="853" width="0.3896%" height="15" fill="rgb(244,85,34)" fg:x="1837" fg:w="9"/><text x="79.7738%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.09%)</title><rect x="79.8268%" y="837" width="0.0866%" height="15" fill="rgb(207,70,0)" fg:x="1844" fg:w="2"/><text x="80.0768%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (11 samples, 0.48%)</title><rect x="79.4805%" y="917" width="0.4762%" height="15" fill="rgb(223,129,7)" fg:x="1836" fg:w="11"/><text x="79.7305%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (10 samples, 0.43%)</title><rect x="79.5238%" y="901" width="0.4329%" height="15" fill="rgb(246,105,7)" fg:x="1837" fg:w="10"/><text x="79.7738%" y="911.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.04%)</title><rect x="79.9134%" y="885" width="0.0433%" height="15" fill="rgb(215,154,42)" fg:x="1846" fg:w="1"/><text x="80.1634%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="79.9134%" y="869" width="0.0433%" height="15" fill="rgb(220,215,30)" fg:x="1846" fg:w="1"/><text x="80.1634%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="79.9134%" y="853" width="0.0433%" height="15" fill="rgb(228,81,51)" fg:x="1846" fg:w="1"/><text x="80.1634%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="79.9134%" y="837" width="0.0433%" height="15" fill="rgb(247,71,54)" fg:x="1846" fg:w="1"/><text x="80.1634%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="80.0000%" y="853" width="0.0433%" height="15" fill="rgb(234,176,34)" fg:x="1848" fg:w="1"/><text x="80.2500%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.09%)</title><rect x="80.0000%" y="869" width="0.0866%" height="15" fill="rgb(241,103,54)" fg:x="1848" fg:w="2"/><text x="80.2500%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="80.0433%" y="853" width="0.0433%" height="15" fill="rgb(228,22,34)" fg:x="1849" fg:w="1"/><text x="80.2933%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.09%)</title><rect x="80.0866%" y="853" width="0.0866%" height="15" fill="rgb(241,179,48)" fg:x="1850" fg:w="2"/><text x="80.3366%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.30%)</title><rect x="79.9567%" y="917" width="0.3030%" height="15" fill="rgb(235,167,37)" fg:x="1847" fg:w="7"/><text x="80.2067%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.30%)</title><rect x="79.9567%" y="901" width="0.3030%" height="15" fill="rgb(213,109,30)" fg:x="1847" fg:w="7"/><text x="80.2067%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.30%)</title><rect x="79.9567%" y="885" width="0.3030%" height="15" fill="rgb(222,172,16)" fg:x="1847" fg:w="7"/><text x="80.2067%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.17%)</title><rect x="80.0866%" y="869" width="0.1732%" height="15" fill="rgb(233,192,5)" fg:x="1850" fg:w="4"/><text x="80.3366%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.09%)</title><rect x="80.1732%" y="853" width="0.0866%" height="15" fill="rgb(247,189,41)" fg:x="1852" fg:w="2"/><text x="80.4232%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (20 samples, 0.87%)</title><rect x="79.4372%" y="933" width="0.8658%" height="15" fill="rgb(218,134,47)" fg:x="1835" fg:w="20"/><text x="79.6872%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="80.2597%" y="917" width="0.0433%" height="15" fill="rgb(216,29,3)" fg:x="1854" fg:w="1"/><text x="80.5097%" y="927.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.04%)</title><rect x="80.2597%" y="901" width="0.0433%" height="15" fill="rgb(246,140,12)" fg:x="1854" fg:w="1"/><text x="80.5097%" y="911.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.04%)</title><rect x="80.2597%" y="885" width="0.0433%" height="15" fill="rgb(230,136,11)" fg:x="1854" fg:w="1"/><text x="80.5097%" y="895.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.04%)</title><rect x="80.2597%" y="869" width="0.0433%" height="15" fill="rgb(247,22,47)" fg:x="1854" fg:w="1"/><text x="80.5097%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="80.3463%" y="869" width="0.0866%" height="15" fill="rgb(218,84,22)" fg:x="1856" fg:w="2"/><text x="80.5963%" y="879.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.09%)</title><rect x="80.3463%" y="853" width="0.0866%" height="15" fill="rgb(216,87,39)" fg:x="1856" fg:w="2"/><text x="80.5963%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="80.3030%" y="901" width="0.1732%" height="15" fill="rgb(221,178,8)" fg:x="1855" fg:w="4"/><text x="80.5530%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="80.3030%" y="885" width="0.1732%" height="15" fill="rgb(230,42,11)" fg:x="1855" fg:w="4"/><text x="80.5530%" y="895.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (1 samples, 0.04%)</title><rect x="80.4329%" y="869" width="0.0433%" height="15" fill="rgb(237,229,4)" fg:x="1858" fg:w="1"/><text x="80.6829%" y="879.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.30%)</title><rect x="80.4762%" y="901" width="0.3030%" height="15" fill="rgb(222,31,33)" fg:x="1859" fg:w="7"/><text x="80.7262%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (7 samples, 0.30%)</title><rect x="80.4762%" y="885" width="0.3030%" height="15" fill="rgb(210,17,39)" fg:x="1859" fg:w="7"/><text x="80.7262%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (7 samples, 0.30%)</title><rect x="80.4762%" y="869" width="0.3030%" height="15" fill="rgb(244,93,20)" fg:x="1859" fg:w="7"/><text x="80.7262%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.30%)</title><rect x="80.4762%" y="853" width="0.3030%" height="15" fill="rgb(210,40,47)" fg:x="1859" fg:w="7"/><text x="80.7262%" y="863.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.30%)</title><rect x="80.4762%" y="837" width="0.3030%" height="15" fill="rgb(239,211,47)" fg:x="1859" fg:w="7"/><text x="80.7262%" y="847.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.30%)</title><rect x="80.4762%" y="821" width="0.3030%" height="15" fill="rgb(251,223,49)" fg:x="1859" fg:w="7"/><text x="80.7262%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="80.7359%" y="805" width="0.0433%" height="15" fill="rgb(221,149,5)" fg:x="1865" fg:w="1"/><text x="80.9859%" y="815.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (33 samples, 1.43%)</title><rect x="79.4372%" y="997" width="1.4286%" height="15" fill="rgb(219,224,51)" fg:x="1835" fg:w="33"/><text x="79.6872%" y="1007.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (33 samples, 1.43%)</title><rect x="79.4372%" y="981" width="1.4286%" height="15" fill="rgb(223,7,8)" fg:x="1835" fg:w="33"/><text x="79.6872%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (33 samples, 1.43%)</title><rect x="79.4372%" y="965" width="1.4286%" height="15" fill="rgb(241,217,22)" fg:x="1835" fg:w="33"/><text x="79.6872%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (33 samples, 1.43%)</title><rect x="79.4372%" y="949" width="1.4286%" height="15" fill="rgb(248,209,0)" fg:x="1835" fg:w="33"/><text x="79.6872%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.56%)</title><rect x="80.3030%" y="933" width="0.5628%" height="15" fill="rgb(217,205,4)" fg:x="1855" fg:w="13"/><text x="80.5530%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.56%)</title><rect x="80.3030%" y="917" width="0.5628%" height="15" fill="rgb(228,124,39)" fg:x="1855" fg:w="13"/><text x="80.5530%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.09%)</title><rect x="80.7792%" y="901" width="0.0866%" height="15" fill="rgb(250,116,42)" fg:x="1866" fg:w="2"/><text x="81.0292%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.09%)</title><rect x="80.7792%" y="885" width="0.0866%" height="15" fill="rgb(223,202,9)" fg:x="1866" fg:w="2"/><text x="81.0292%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.09%)</title><rect x="80.7792%" y="869" width="0.0866%" height="15" fill="rgb(242,222,40)" fg:x="1866" fg:w="2"/><text x="81.0292%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.09%)</title><rect x="80.7792%" y="853" width="0.0866%" height="15" fill="rgb(229,99,46)" fg:x="1866" fg:w="2"/><text x="81.0292%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.09%)</title><rect x="80.7792%" y="837" width="0.0866%" height="15" fill="rgb(225,56,46)" fg:x="1866" fg:w="2"/><text x="81.0292%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.09%)</title><rect x="80.7792%" y="821" width="0.0866%" height="15" fill="rgb(227,94,5)" fg:x="1866" fg:w="2"/><text x="81.0292%" y="831.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.09%)</title><rect x="80.7792%" y="805" width="0.0866%" height="15" fill="rgb(205,112,38)" fg:x="1866" fg:w="2"/><text x="81.0292%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="80.8658%" y="933" width="0.0433%" height="15" fill="rgb(231,133,46)" fg:x="1868" fg:w="1"/><text x="81.1158%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.04%)</title><rect x="80.8658%" y="917" width="0.0433%" height="15" fill="rgb(217,16,9)" fg:x="1868" fg:w="1"/><text x="81.1158%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.04%)</title><rect x="80.8658%" y="901" width="0.0433%" height="15" fill="rgb(249,173,9)" fg:x="1868" fg:w="1"/><text x="81.1158%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="80.8658%" y="885" width="0.0433%" height="15" fill="rgb(205,163,53)" fg:x="1868" fg:w="1"/><text x="81.1158%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="80.8658%" y="869" width="0.0433%" height="15" fill="rgb(217,54,41)" fg:x="1868" fg:w="1"/><text x="81.1158%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="80.8658%" y="853" width="0.0433%" height="15" fill="rgb(228,216,12)" fg:x="1868" fg:w="1"/><text x="81.1158%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="80.9091%" y="933" width="0.0433%" height="15" fill="rgb(244,228,15)" fg:x="1869" fg:w="1"/><text x="81.1591%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="80.9091%" y="917" width="0.0433%" height="15" fill="rgb(221,176,53)" fg:x="1869" fg:w="1"/><text x="81.1591%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="80.9091%" y="901" width="0.0433%" height="15" fill="rgb(205,94,34)" fg:x="1869" fg:w="1"/><text x="81.1591%" y="911.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.13%)</title><rect x="80.8658%" y="949" width="0.1299%" height="15" fill="rgb(213,110,48)" fg:x="1868" fg:w="3"/><text x="81.1158%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="80.9524%" y="933" width="0.0433%" height="15" fill="rgb(236,142,28)" fg:x="1870" fg:w="1"/><text x="81.2024%" y="943.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.04%)</title><rect x="80.9524%" y="917" width="0.0433%" height="15" fill="rgb(225,135,29)" fg:x="1870" fg:w="1"/><text x="81.2024%" y="927.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.04%)</title><rect x="80.9524%" y="901" width="0.0433%" height="15" fill="rgb(252,45,31)" fg:x="1870" fg:w="1"/><text x="81.2024%" y="911.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.04%)</title><rect x="80.9524%" y="885" width="0.0433%" height="15" fill="rgb(211,187,50)" fg:x="1870" fg:w="1"/><text x="81.2024%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.04%)</title><rect x="80.9957%" y="949" width="0.0433%" height="15" fill="rgb(229,109,7)" fg:x="1871" fg:w="1"/><text x="81.2457%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="80.9957%" y="933" width="0.0433%" height="15" fill="rgb(251,131,51)" fg:x="1871" fg:w="1"/><text x="81.2457%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="80.9957%" y="917" width="0.0433%" height="15" fill="rgb(251,180,35)" fg:x="1871" fg:w="1"/><text x="81.2457%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="80.9957%" y="901" width="0.0433%" height="15" fill="rgb(211,46,32)" fg:x="1871" fg:w="1"/><text x="81.2457%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="80.9957%" y="885" width="0.0433%" height="15" fill="rgb(248,123,17)" fg:x="1871" fg:w="1"/><text x="81.2457%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="80.9957%" y="869" width="0.0433%" height="15" fill="rgb(227,141,18)" fg:x="1871" fg:w="1"/><text x="81.2457%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.04%)</title><rect x="80.9957%" y="853" width="0.0433%" height="15" fill="rgb(216,102,9)" fg:x="1871" fg:w="1"/><text x="81.2457%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.04%)</title><rect x="80.9957%" y="837" width="0.0433%" height="15" fill="rgb(253,47,13)" fg:x="1871" fg:w="1"/><text x="81.2457%" y="847.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.04%)</title><rect x="80.9957%" y="821" width="0.0433%" height="15" fill="rgb(226,93,23)" fg:x="1871" fg:w="1"/><text x="81.2457%" y="831.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (7 samples, 0.30%)</title><rect x="80.8658%" y="997" width="0.3030%" height="15" fill="rgb(247,104,17)" fg:x="1868" fg:w="7"/><text x="81.1158%" y="1007.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (7 samples, 0.30%)</title><rect x="80.8658%" y="981" width="0.3030%" height="15" fill="rgb(233,203,26)" fg:x="1868" fg:w="7"/><text x="81.1158%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.30%)</title><rect x="80.8658%" y="965" width="0.3030%" height="15" fill="rgb(244,98,49)" fg:x="1868" fg:w="7"/><text x="81.1158%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.13%)</title><rect x="81.0390%" y="949" width="0.1299%" height="15" fill="rgb(235,134,22)" fg:x="1872" fg:w="3"/><text x="81.2890%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3 samples, 0.13%)</title><rect x="81.0390%" y="933" width="0.1299%" height="15" fill="rgb(221,70,32)" fg:x="1872" fg:w="3"/><text x="81.2890%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.13%)</title><rect x="81.0390%" y="917" width="0.1299%" height="15" fill="rgb(238,15,50)" fg:x="1872" fg:w="3"/><text x="81.2890%" y="927.50"></text></g><g><title>core::ptr::write (3 samples, 0.13%)</title><rect x="81.0390%" y="901" width="0.1299%" height="15" fill="rgb(215,221,48)" fg:x="1872" fg:w="3"/><text x="81.2890%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.26%)</title><rect x="81.4286%" y="853" width="0.2597%" height="15" fill="rgb(236,73,3)" fg:x="1881" fg:w="6"/><text x="81.6786%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.26%)</title><rect x="81.4286%" y="837" width="0.2597%" height="15" fill="rgb(250,107,11)" fg:x="1881" fg:w="6"/><text x="81.6786%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.26%)</title><rect x="81.4286%" y="821" width="0.2597%" height="15" fill="rgb(242,39,14)" fg:x="1881" fg:w="6"/><text x="81.6786%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.26%)</title><rect x="81.4286%" y="805" width="0.2597%" height="15" fill="rgb(248,164,37)" fg:x="1881" fg:w="6"/><text x="81.6786%" y="815.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.26%)</title><rect x="81.4286%" y="789" width="0.2597%" height="15" fill="rgb(217,60,12)" fg:x="1881" fg:w="6"/><text x="81.6786%" y="799.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.26%)</title><rect x="81.4286%" y="773" width="0.2597%" height="15" fill="rgb(240,125,29)" fg:x="1881" fg:w="6"/><text x="81.6786%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.17%)</title><rect x="81.5152%" y="757" width="0.1732%" height="15" fill="rgb(208,207,28)" fg:x="1883" fg:w="4"/><text x="81.7652%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.13%)</title><rect x="81.6883%" y="853" width="0.1299%" height="15" fill="rgb(209,159,27)" fg:x="1887" fg:w="3"/><text x="81.9383%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.13%)</title><rect x="81.6883%" y="837" width="0.1299%" height="15" fill="rgb(251,176,53)" fg:x="1887" fg:w="3"/><text x="81.9383%" y="847.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="81.6883%" y="821" width="0.1299%" height="15" fill="rgb(211,85,7)" fg:x="1887" fg:w="3"/><text x="81.9383%" y="831.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.13%)</title><rect x="81.6883%" y="805" width="0.1299%" height="15" fill="rgb(216,64,54)" fg:x="1887" fg:w="3"/><text x="81.9383%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="84.5455%" y="757" width="0.0433%" height="15" fill="rgb(217,54,24)" fg:x="1953" fg:w="1"/><text x="84.7955%" y="767.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.04%)</title><rect x="84.5455%" y="741" width="0.0433%" height="15" fill="rgb(208,206,53)" fg:x="1953" fg:w="1"/><text x="84.7955%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.04%)</title><rect x="84.5455%" y="725" width="0.0433%" height="15" fill="rgb(251,74,39)" fg:x="1953" fg:w="1"/><text x="84.7955%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.04%)</title><rect x="84.5455%" y="709" width="0.0433%" height="15" fill="rgb(226,47,5)" fg:x="1953" fg:w="1"/><text x="84.7955%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.26%)</title><rect x="84.5887%" y="757" width="0.2597%" height="15" fill="rgb(234,111,33)" fg:x="1954" fg:w="6"/><text x="84.8387%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.26%)</title><rect x="84.5887%" y="741" width="0.2597%" height="15" fill="rgb(251,14,10)" fg:x="1954" fg:w="6"/><text x="84.8387%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.09%)</title><rect x="84.8485%" y="757" width="0.0866%" height="15" fill="rgb(232,43,0)" fg:x="1960" fg:w="2"/><text x="85.0985%" y="767.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.09%)</title><rect x="84.8485%" y="741" width="0.0866%" height="15" fill="rgb(222,68,43)" fg:x="1960" fg:w="2"/><text x="85.0985%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (82 samples, 3.55%)</title><rect x="81.8182%" y="853" width="3.5498%" height="15" fill="rgb(217,24,23)" fg:x="1890" fg:w="82"/><text x="82.0682%" y="863.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (59 samples, 2.55%)</title><rect x="82.8139%" y="837" width="2.5541%" height="15" fill="rgb(229,209,14)" fg:x="1913" fg:w="59"/><text x="83.0639%" y="847.50">co..</text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 2.38%)</title><rect x="82.9870%" y="821" width="2.3810%" height="15" fill="rgb(250,149,48)" fg:x="1917" fg:w="55"/><text x="83.2370%" y="831.50">&lt;c..</text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (55 samples, 2.38%)</title><rect x="82.9870%" y="805" width="2.3810%" height="15" fill="rgb(210,120,37)" fg:x="1917" fg:w="55"/><text x="83.2370%" y="815.50">co..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (55 samples, 2.38%)</title><rect x="82.9870%" y="789" width="2.3810%" height="15" fill="rgb(210,21,8)" fg:x="1917" fg:w="55"/><text x="83.2370%" y="799.50">&lt;c..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (48 samples, 2.08%)</title><rect x="83.2900%" y="773" width="2.0779%" height="15" fill="rgb(243,145,7)" fg:x="1924" fg:w="48"/><text x="83.5400%" y="783.50">c..</text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (10 samples, 0.43%)</title><rect x="84.9351%" y="757" width="0.4329%" height="15" fill="rgb(238,178,32)" fg:x="1962" fg:w="10"/><text x="85.1851%" y="767.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (9 samples, 0.39%)</title><rect x="85.6277%" y="773" width="0.3896%" height="15" fill="rgb(222,4,10)" fg:x="1978" fg:w="9"/><text x="85.8777%" y="783.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9 samples, 0.39%)</title><rect x="85.6277%" y="757" width="0.3896%" height="15" fill="rgb(239,7,37)" fg:x="1978" fg:w="9"/><text x="85.8777%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.26%)</title><rect x="85.7576%" y="741" width="0.2597%" height="15" fill="rgb(215,31,37)" fg:x="1981" fg:w="6"/><text x="86.0076%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="86.0173%" y="773" width="0.0433%" height="15" fill="rgb(224,83,33)" fg:x="1987" fg:w="1"/><text x="86.2673%" y="783.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="86.0173%" y="757" width="0.0433%" height="15" fill="rgb(239,55,3)" fg:x="1987" fg:w="1"/><text x="86.2673%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="86.0173%" y="741" width="0.0433%" height="15" fill="rgb(247,92,11)" fg:x="1987" fg:w="1"/><text x="86.2673%" y="751.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (2 samples, 0.09%)</title><rect x="86.0606%" y="773" width="0.0866%" height="15" fill="rgb(239,200,7)" fg:x="1988" fg:w="2"/><text x="86.3106%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.09%)</title><rect x="86.0606%" y="757" width="0.0866%" height="15" fill="rgb(227,115,8)" fg:x="1988" fg:w="2"/><text x="86.3106%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="86.0606%" y="741" width="0.0866%" height="15" fill="rgb(215,189,27)" fg:x="1988" fg:w="2"/><text x="86.3106%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (116 samples, 5.02%)</title><rect x="81.4286%" y="901" width="5.0216%" height="15" fill="rgb(251,216,39)" fg:x="1881" fg:w="116"/><text x="81.6786%" y="911.50">core::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (116 samples, 5.02%)</title><rect x="81.4286%" y="885" width="5.0216%" height="15" fill="rgb(207,29,47)" fg:x="1881" fg:w="116"/><text x="81.6786%" y="895.50">core::..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (116 samples, 5.02%)</title><rect x="81.4286%" y="869" width="5.0216%" height="15" fill="rgb(210,71,34)" fg:x="1881" fg:w="116"/><text x="81.6786%" y="879.50">y2021:..</text></g><g><title>core::str::&lt;impl str&gt;::matches (25 samples, 1.08%)</title><rect x="85.3680%" y="853" width="1.0823%" height="15" fill="rgb(253,217,51)" fg:x="1972" fg:w="25"/><text x="85.6180%" y="863.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (25 samples, 1.08%)</title><rect x="85.3680%" y="837" width="1.0823%" height="15" fill="rgb(222,117,46)" fg:x="1972" fg:w="25"/><text x="85.6180%" y="847.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (25 samples, 1.08%)</title><rect x="85.3680%" y="821" width="1.0823%" height="15" fill="rgb(226,132,6)" fg:x="1972" fg:w="25"/><text x="85.6180%" y="831.50"></text></g><g><title>core::str::pattern::StrSearcher::new (25 samples, 1.08%)</title><rect x="85.3680%" y="805" width="1.0823%" height="15" fill="rgb(254,145,51)" fg:x="1972" fg:w="25"/><text x="85.6180%" y="815.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (19 samples, 0.82%)</title><rect x="85.6277%" y="789" width="0.8225%" height="15" fill="rgb(231,199,27)" fg:x="1978" fg:w="19"/><text x="85.8777%" y="799.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (7 samples, 0.30%)</title><rect x="86.1472%" y="773" width="0.3030%" height="15" fill="rgb(245,158,14)" fg:x="1990" fg:w="7"/><text x="86.3972%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="86.4069%" y="757" width="0.0433%" height="15" fill="rgb(240,113,14)" fg:x="1996" fg:w="1"/><text x="86.6569%" y="767.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="86.4069%" y="741" width="0.0433%" height="15" fill="rgb(210,20,13)" fg:x="1996" fg:w="1"/><text x="86.6569%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (117 samples, 5.06%)</title><rect x="81.4286%" y="981" width="5.0649%" height="15" fill="rgb(241,144,13)" fg:x="1881" fg:w="117"/><text x="81.6786%" y="991.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::find (117 samples, 5.06%)</title><rect x="81.4286%" y="965" width="5.0649%" height="15" fill="rgb(235,43,34)" fg:x="1881" fg:w="117"/><text x="81.6786%" y="975.50">core::..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (117 samples, 5.06%)</title><rect x="81.4286%" y="949" width="5.0649%" height="15" fill="rgb(208,36,20)" fg:x="1881" fg:w="117"/><text x="81.6786%" y="959.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (117 samples, 5.06%)</title><rect x="81.4286%" y="933" width="5.0649%" height="15" fill="rgb(239,204,10)" fg:x="1881" fg:w="117"/><text x="81.6786%" y="943.50">core::..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (117 samples, 5.06%)</title><rect x="81.4286%" y="917" width="5.0649%" height="15" fill="rgb(217,84,43)" fg:x="1881" fg:w="117"/><text x="81.6786%" y="927.50">core::..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.04%)</title><rect x="86.4502%" y="901" width="0.0433%" height="15" fill="rgb(241,170,50)" fg:x="1997" fg:w="1"/><text x="86.7002%" y="911.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.04%)</title><rect x="86.5801%" y="965" width="0.0433%" height="15" fill="rgb(226,205,29)" fg:x="2000" fg:w="1"/><text x="86.8301%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="86.5801%" y="949" width="0.0433%" height="15" fill="rgb(233,113,1)" fg:x="2000" fg:w="1"/><text x="86.8301%" y="959.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="86.5801%" y="933" width="0.0433%" height="15" fill="rgb(253,98,13)" fg:x="2000" fg:w="1"/><text x="86.8301%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="86.5801%" y="917" width="0.0433%" height="15" fill="rgb(211,115,12)" fg:x="2000" fg:w="1"/><text x="86.8301%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="86.5801%" y="901" width="0.0433%" height="15" fill="rgb(208,12,16)" fg:x="2000" fg:w="1"/><text x="86.8301%" y="911.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (5 samples, 0.22%)</title><rect x="86.7532%" y="933" width="0.2165%" height="15" fill="rgb(237,193,54)" fg:x="2004" fg:w="5"/><text x="87.0032%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.17%)</title><rect x="87.2727%" y="773" width="0.1732%" height="15" fill="rgb(243,22,42)" fg:x="2016" fg:w="4"/><text x="87.5227%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="87.4459%" y="773" width="0.0433%" height="15" fill="rgb(233,151,36)" fg:x="2020" fg:w="1"/><text x="87.6959%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (6 samples, 0.26%)</title><rect x="87.4892%" y="773" width="0.2597%" height="15" fill="rgb(237,57,45)" fg:x="2021" fg:w="6"/><text x="87.7392%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.09%)</title><rect x="88.0952%" y="677" width="0.0866%" height="15" fill="rgb(221,88,17)" fg:x="2035" fg:w="2"/><text x="88.3452%" y="687.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="88.3983%" y="661" width="0.0433%" height="15" fill="rgb(230,79,15)" fg:x="2042" fg:w="1"/><text x="88.6483%" y="671.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="88.3983%" y="645" width="0.0433%" height="15" fill="rgb(213,57,13)" fg:x="2042" fg:w="1"/><text x="88.6483%" y="655.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="88.3983%" y="629" width="0.0433%" height="15" fill="rgb(222,116,39)" fg:x="2042" fg:w="1"/><text x="88.6483%" y="639.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.04%)</title><rect x="88.3983%" y="613" width="0.0433%" height="15" fill="rgb(245,107,2)" fg:x="2042" fg:w="1"/><text x="88.6483%" y="623.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.04%)</title><rect x="88.3983%" y="597" width="0.0433%" height="15" fill="rgb(238,1,10)" fg:x="2042" fg:w="1"/><text x="88.6483%" y="607.50"></text></g><g><title>tick_sched_timer (1 samples, 0.04%)</title><rect x="88.3983%" y="581" width="0.0433%" height="15" fill="rgb(249,4,48)" fg:x="2042" fg:w="1"/><text x="88.6483%" y="591.50"></text></g><g><title>tick_sched_handle.isra.0 (1 samples, 0.04%)</title><rect x="88.3983%" y="565" width="0.0433%" height="15" fill="rgb(223,151,18)" fg:x="2042" fg:w="1"/><text x="88.6483%" y="575.50"></text></g><g><title>update_process_times (1 samples, 0.04%)</title><rect x="88.3983%" y="549" width="0.0433%" height="15" fill="rgb(227,65,43)" fg:x="2042" fg:w="1"/><text x="88.6483%" y="559.50"></text></g><g><title>scheduler_tick (1 samples, 0.04%)</title><rect x="88.3983%" y="533" width="0.0433%" height="15" fill="rgb(218,40,45)" fg:x="2042" fg:w="1"/><text x="88.6483%" y="543.50"></text></g><g><title>task_tick_fair (1 samples, 0.04%)</title><rect x="88.3983%" y="517" width="0.0433%" height="15" fill="rgb(252,121,31)" fg:x="2042" fg:w="1"/><text x="88.6483%" y="527.50"></text></g><g><title>hrtimer_active (1 samples, 0.04%)</title><rect x="88.3983%" y="501" width="0.0433%" height="15" fill="rgb(219,158,43)" fg:x="2042" fg:w="1"/><text x="88.6483%" y="511.50"></text></g><g><title>_int_free (7 samples, 0.30%)</title><rect x="88.1818%" y="677" width="0.3030%" height="15" fill="rgb(231,162,42)" fg:x="2037" fg:w="7"/><text x="88.4318%" y="687.50"></text></g><g><title>tcache_put (1 samples, 0.04%)</title><rect x="88.4416%" y="661" width="0.0433%" height="15" fill="rgb(217,179,25)" fg:x="2043" fg:w="1"/><text x="88.6916%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (20 samples, 0.87%)</title><rect x="87.7922%" y="757" width="0.8658%" height="15" fill="rgb(206,212,31)" fg:x="2028" fg:w="20"/><text x="88.0422%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (20 samples, 0.87%)</title><rect x="87.7922%" y="741" width="0.8658%" height="15" fill="rgb(235,144,12)" fg:x="2028" fg:w="20"/><text x="88.0422%" y="751.50"></text></g><g><title>alloc::alloc::realloc (20 samples, 0.87%)</title><rect x="87.7922%" y="725" width="0.8658%" height="15" fill="rgb(213,51,10)" fg:x="2028" fg:w="20"/><text x="88.0422%" y="735.50"></text></g><g><title>__GI___libc_realloc (20 samples, 0.87%)</title><rect x="87.7922%" y="709" width="0.8658%" height="15" fill="rgb(231,145,14)" fg:x="2028" fg:w="20"/><text x="88.0422%" y="719.50"></text></g><g><title>_int_realloc (19 samples, 0.82%)</title><rect x="87.8355%" y="693" width="0.8225%" height="15" fill="rgb(235,15,28)" fg:x="2029" fg:w="19"/><text x="88.0855%" y="703.50"></text></g><g><title>_int_malloc (4 samples, 0.17%)</title><rect x="88.4848%" y="677" width="0.1732%" height="15" fill="rgb(237,206,10)" fg:x="2044" fg:w="4"/><text x="88.7348%" y="687.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.13%)</title><rect x="88.6580%" y="757" width="0.1299%" height="15" fill="rgb(236,227,27)" fg:x="2048" fg:w="3"/><text x="88.9080%" y="767.50"></text></g><g><title>tcache_get (2 samples, 0.09%)</title><rect x="88.7013%" y="741" width="0.0866%" height="15" fill="rgb(246,83,35)" fg:x="2049" fg:w="2"/><text x="88.9513%" y="751.50"></text></g><g><title>__rdl_alloc (3 samples, 0.13%)</title><rect x="88.7879%" y="757" width="0.1299%" height="15" fill="rgb(220,136,24)" fg:x="2051" fg:w="3"/><text x="89.0379%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.04%)</title><rect x="88.8745%" y="741" width="0.0433%" height="15" fill="rgb(217,3,25)" fg:x="2053" fg:w="1"/><text x="89.1245%" y="751.50"></text></g><g><title>__rust_alloc (1 samples, 0.04%)</title><rect x="88.9177%" y="757" width="0.0433%" height="15" fill="rgb(239,24,14)" fg:x="2054" fg:w="1"/><text x="89.1677%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (46 samples, 1.99%)</title><rect x="87.0130%" y="837" width="1.9913%" height="15" fill="rgb(244,16,53)" fg:x="2010" fg:w="46"/><text x="87.2630%" y="847.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (46 samples, 1.99%)</title><rect x="87.0130%" y="821" width="1.9913%" height="15" fill="rgb(208,175,44)" fg:x="2010" fg:w="46"/><text x="87.2630%" y="831.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (43 samples, 1.86%)</title><rect x="87.1429%" y="805" width="1.8615%" height="15" fill="rgb(252,18,48)" fg:x="2013" fg:w="43"/><text x="87.3929%" y="815.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (40 samples, 1.73%)</title><rect x="87.2727%" y="789" width="1.7316%" height="15" fill="rgb(234,199,32)" fg:x="2016" fg:w="40"/><text x="87.5227%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (29 samples, 1.26%)</title><rect x="87.7489%" y="773" width="1.2554%" height="15" fill="rgb(225,77,54)" fg:x="2027" fg:w="29"/><text x="87.9989%" y="783.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.04%)</title><rect x="88.9610%" y="757" width="0.0433%" height="15" fill="rgb(225,42,25)" fg:x="2055" fg:w="1"/><text x="89.2110%" y="767.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.09%)</title><rect x="89.0043%" y="821" width="0.0866%" height="15" fill="rgb(242,227,46)" fg:x="2056" fg:w="2"/><text x="89.2543%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.13%)</title><rect x="89.0043%" y="837" width="0.1299%" height="15" fill="rgb(246,197,35)" fg:x="2056" fg:w="3"/><text x="89.2543%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="89.0909%" y="821" width="0.0433%" height="15" fill="rgb(215,159,26)" fg:x="2058" fg:w="1"/><text x="89.3409%" y="831.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (52 samples, 2.25%)</title><rect x="86.9697%" y="933" width="2.2511%" height="15" fill="rgb(212,194,50)" fg:x="2009" fg:w="52"/><text x="87.2197%" y="943.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (51 samples, 2.21%)</title><rect x="87.0130%" y="917" width="2.2078%" height="15" fill="rgb(246,132,1)" fg:x="2010" fg:w="51"/><text x="87.2630%" y="927.50">&lt;..</text></g><g><title>alloc::string::String::push_str (51 samples, 2.21%)</title><rect x="87.0130%" y="901" width="2.2078%" height="15" fill="rgb(217,71,7)" fg:x="2010" fg:w="51"/><text x="87.2630%" y="911.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (51 samples, 2.21%)</title><rect x="87.0130%" y="885" width="2.2078%" height="15" fill="rgb(252,59,32)" fg:x="2010" fg:w="51"/><text x="87.2630%" y="895.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (51 samples, 2.21%)</title><rect x="87.0130%" y="869" width="2.2078%" height="15" fill="rgb(253,204,25)" fg:x="2010" fg:w="51"/><text x="87.2630%" y="879.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (51 samples, 2.21%)</title><rect x="87.0130%" y="853" width="2.2078%" height="15" fill="rgb(232,21,16)" fg:x="2010" fg:w="51"/><text x="87.2630%" y="863.50">a..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.09%)</title><rect x="89.1342%" y="837" width="0.0866%" height="15" fill="rgb(248,90,29)" fg:x="2059" fg:w="2"/><text x="89.3842%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.09%)</title><rect x="89.1342%" y="821" width="0.0866%" height="15" fill="rgb(249,223,7)" fg:x="2059" fg:w="2"/><text x="89.3842%" y="831.50"></text></g><g><title>alloc::fmt::format (65 samples, 2.81%)</title><rect x="86.4935%" y="981" width="2.8139%" height="15" fill="rgb(231,119,42)" fg:x="1998" fg:w="65"/><text x="86.7435%" y="991.50">al..</text></g><g><title>core::fmt::Write::write_fmt (62 samples, 2.68%)</title><rect x="86.6234%" y="965" width="2.6840%" height="15" fill="rgb(215,41,35)" fg:x="2001" fg:w="62"/><text x="86.8734%" y="975.50">co..</text></g><g><title>core::fmt::write (62 samples, 2.68%)</title><rect x="86.6234%" y="949" width="2.6840%" height="15" fill="rgb(220,44,45)" fg:x="2001" fg:w="62"/><text x="86.8734%" y="959.50">co..</text></g><g><title>core::fmt::Formatter::pad (2 samples, 0.09%)</title><rect x="89.2208%" y="933" width="0.0866%" height="15" fill="rgb(253,197,36)" fg:x="2061" fg:w="2"/><text x="89.4708%" y="943.50"></text></g><g><title>core::fmt::Arguments::new_v1 (2 samples, 0.09%)</title><rect x="89.3074%" y="981" width="0.0866%" height="15" fill="rgb(245,225,54)" fg:x="2063" fg:w="2"/><text x="89.5574%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="89.3939%" y="981" width="0.0433%" height="15" fill="rgb(239,94,37)" fg:x="2065" fg:w="1"/><text x="89.6439%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="89.3939%" y="965" width="0.0433%" height="15" fill="rgb(242,217,10)" fg:x="2065" fg:w="1"/><text x="89.6439%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="89.3939%" y="949" width="0.0433%" height="15" fill="rgb(250,193,7)" fg:x="2065" fg:w="1"/><text x="89.6439%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="89.3939%" y="933" width="0.0433%" height="15" fill="rgb(230,104,19)" fg:x="2065" fg:w="1"/><text x="89.6439%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="89.3939%" y="917" width="0.0433%" height="15" fill="rgb(230,181,4)" fg:x="2065" fg:w="1"/><text x="89.6439%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="89.3939%" y="901" width="0.0433%" height="15" fill="rgb(216,219,49)" fg:x="2065" fg:w="1"/><text x="89.6439%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="89.3939%" y="885" width="0.0433%" height="15" fill="rgb(254,144,0)" fg:x="2065" fg:w="1"/><text x="89.6439%" y="895.50"></text></g><g><title>free_perturb (1 samples, 0.04%)</title><rect x="89.3939%" y="869" width="0.0433%" height="15" fill="rgb(205,209,38)" fg:x="2065" fg:w="1"/><text x="89.6439%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="89.6104%" y="869" width="0.0433%" height="15" fill="rgb(240,21,42)" fg:x="2070" fg:w="1"/><text x="89.8604%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="89.6104%" y="853" width="0.0433%" height="15" fill="rgb(241,132,3)" fg:x="2070" fg:w="1"/><text x="89.8604%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.17%)</title><rect x="89.5238%" y="917" width="0.1732%" height="15" fill="rgb(225,14,2)" fg:x="2068" fg:w="4"/><text x="89.7738%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.17%)</title><rect x="89.5238%" y="901" width="0.1732%" height="15" fill="rgb(210,141,35)" fg:x="2068" fg:w="4"/><text x="89.7738%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.17%)</title><rect x="89.5238%" y="885" width="0.1732%" height="15" fill="rgb(251,14,44)" fg:x="2068" fg:w="4"/><text x="89.7738%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="89.6537%" y="869" width="0.0433%" height="15" fill="rgb(247,48,18)" fg:x="2071" fg:w="1"/><text x="89.9037%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="89.6537%" y="853" width="0.0433%" height="15" fill="rgb(225,0,40)" fg:x="2071" fg:w="1"/><text x="89.9037%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="89.6970%" y="917" width="0.0433%" height="15" fill="rgb(221,31,33)" fg:x="2072" fg:w="1"/><text x="89.9470%" y="927.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.04%)</title><rect x="89.6970%" y="901" width="0.0433%" height="15" fill="rgb(237,42,40)" fg:x="2072" fg:w="1"/><text x="89.9470%" y="911.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.04%)</title><rect x="89.6970%" y="885" width="0.0433%" height="15" fill="rgb(233,51,29)" fg:x="2072" fg:w="1"/><text x="89.9470%" y="895.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.04%)</title><rect x="89.6970%" y="869" width="0.0433%" height="15" fill="rgb(226,58,20)" fg:x="2072" fg:w="1"/><text x="89.9470%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.39%)</title><rect x="89.4372%" y="933" width="0.3896%" height="15" fill="rgb(208,98,7)" fg:x="2066" fg:w="9"/><text x="89.6872%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.09%)</title><rect x="89.7403%" y="917" width="0.0866%" height="15" fill="rgb(228,143,44)" fg:x="2073" fg:w="2"/><text x="89.9903%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="89.7403%" y="901" width="0.0866%" height="15" fill="rgb(246,55,38)" fg:x="2073" fg:w="2"/><text x="89.9903%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="89.7835%" y="885" width="0.0433%" height="15" fill="rgb(247,87,16)" fg:x="2074" fg:w="1"/><text x="90.0335%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="89.7835%" y="869" width="0.0433%" height="15" fill="rgb(234,129,42)" fg:x="2074" fg:w="1"/><text x="90.0335%" y="879.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="89.7835%" y="853" width="0.0433%" height="15" fill="rgb(220,82,16)" fg:x="2074" fg:w="1"/><text x="90.0335%" y="863.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="89.8701%" y="853" width="0.0433%" height="15" fill="rgb(211,88,4)" fg:x="2076" fg:w="1"/><text x="90.1201%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="89.8701%" y="901" width="0.0866%" height="15" fill="rgb(248,151,21)" fg:x="2076" fg:w="2"/><text x="90.1201%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="89.8701%" y="885" width="0.0866%" height="15" fill="rgb(238,163,6)" fg:x="2076" fg:w="2"/><text x="90.1201%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="89.8701%" y="869" width="0.0866%" height="15" fill="rgb(209,183,11)" fg:x="2076" fg:w="2"/><text x="90.1201%" y="879.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.04%)</title><rect x="89.9134%" y="853" width="0.0433%" height="15" fill="rgb(219,37,20)" fg:x="2077" fg:w="1"/><text x="90.1634%" y="863.50"></text></g><g><title>&lt;&amp;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (1 samples, 0.04%)</title><rect x="89.9567%" y="885" width="0.0433%" height="15" fill="rgb(210,158,4)" fg:x="2078" fg:w="1"/><text x="90.2067%" y="895.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.22%)</title><rect x="89.9567%" y="901" width="0.2165%" height="15" fill="rgb(221,167,53)" fg:x="2078" fg:w="5"/><text x="90.2067%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.17%)</title><rect x="90.0000%" y="885" width="0.1732%" height="15" fill="rgb(237,151,45)" fg:x="2079" fg:w="4"/><text x="90.2500%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.17%)</title><rect x="90.0000%" y="869" width="0.1732%" height="15" fill="rgb(231,39,3)" fg:x="2079" fg:w="4"/><text x="90.2500%" y="879.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.17%)</title><rect x="90.0000%" y="853" width="0.1732%" height="15" fill="rgb(212,167,28)" fg:x="2079" fg:w="4"/><text x="90.2500%" y="863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.17%)</title><rect x="90.0000%" y="837" width="0.1732%" height="15" fill="rgb(232,178,8)" fg:x="2079" fg:w="4"/><text x="90.2500%" y="847.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.09%)</title><rect x="90.0866%" y="821" width="0.0866%" height="15" fill="rgb(225,151,20)" fg:x="2081" fg:w="2"/><text x="90.3366%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (18 samples, 0.78%)</title><rect x="89.4372%" y="981" width="0.7792%" height="15" fill="rgb(238,3,37)" fg:x="2066" fg:w="18"/><text x="89.6872%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (18 samples, 0.78%)</title><rect x="89.4372%" y="965" width="0.7792%" height="15" fill="rgb(251,147,42)" fg:x="2066" fg:w="18"/><text x="89.6872%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (18 samples, 0.78%)</title><rect x="89.4372%" y="949" width="0.7792%" height="15" fill="rgb(208,173,10)" fg:x="2066" fg:w="18"/><text x="89.6872%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.39%)</title><rect x="89.8268%" y="933" width="0.3896%" height="15" fill="rgb(246,225,4)" fg:x="2075" fg:w="9"/><text x="90.0768%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.39%)</title><rect x="89.8268%" y="917" width="0.3896%" height="15" fill="rgb(248,102,6)" fg:x="2075" fg:w="9"/><text x="90.0768%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="90.1732%" y="901" width="0.0433%" height="15" fill="rgb(232,6,21)" fg:x="2083" fg:w="1"/><text x="90.4232%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="90.1732%" y="885" width="0.0433%" height="15" fill="rgb(221,179,22)" fg:x="2083" fg:w="1"/><text x="90.4232%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="90.1732%" y="869" width="0.0433%" height="15" fill="rgb(252,50,20)" fg:x="2083" fg:w="1"/><text x="90.4232%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.04%)</title><rect x="90.1732%" y="853" width="0.0433%" height="15" fill="rgb(222,56,38)" fg:x="2083" fg:w="1"/><text x="90.4232%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.17%)</title><rect x="90.4329%" y="821" width="0.1732%" height="15" fill="rgb(206,193,29)" fg:x="2089" fg:w="4"/><text x="90.6829%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.13%)</title><rect x="90.4762%" y="805" width="0.1299%" height="15" fill="rgb(239,192,45)" fg:x="2090" fg:w="3"/><text x="90.7262%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.48%)</title><rect x="90.2597%" y="869" width="0.4762%" height="15" fill="rgb(254,18,36)" fg:x="2085" fg:w="11"/><text x="90.5097%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.48%)</title><rect x="90.2597%" y="853" width="0.4762%" height="15" fill="rgb(221,127,11)" fg:x="2085" fg:w="11"/><text x="90.5097%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.48%)</title><rect x="90.2597%" y="837" width="0.4762%" height="15" fill="rgb(234,146,35)" fg:x="2085" fg:w="11"/><text x="90.5097%" y="847.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.13%)</title><rect x="90.6061%" y="821" width="0.1299%" height="15" fill="rgb(254,201,37)" fg:x="2093" fg:w="3"/><text x="90.8561%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.09%)</title><rect x="90.6494%" y="805" width="0.0866%" height="15" fill="rgb(211,202,23)" fg:x="2094" fg:w="2"/><text x="90.8994%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (12 samples, 0.52%)</title><rect x="90.2597%" y="901" width="0.5195%" height="15" fill="rgb(237,91,2)" fg:x="2085" fg:w="12"/><text x="90.5097%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (12 samples, 0.52%)</title><rect x="90.2597%" y="885" width="0.5195%" height="15" fill="rgb(226,228,36)" fg:x="2085" fg:w="12"/><text x="90.5097%" y="895.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.04%)</title><rect x="90.7359%" y="869" width="0.0433%" height="15" fill="rgb(213,63,50)" fg:x="2096" fg:w="1"/><text x="90.9859%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="90.7359%" y="853" width="0.0433%" height="15" fill="rgb(235,194,19)" fg:x="2096" fg:w="1"/><text x="90.9859%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="90.7359%" y="837" width="0.0433%" height="15" fill="rgb(207,204,18)" fg:x="2096" fg:w="1"/><text x="90.9859%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="90.7359%" y="821" width="0.0433%" height="15" fill="rgb(248,8,7)" fg:x="2096" fg:w="1"/><text x="90.9859%" y="831.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="90.7359%" y="805" width="0.0433%" height="15" fill="rgb(223,145,47)" fg:x="2096" fg:w="1"/><text x="90.9859%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="90.8658%" y="853" width="0.0433%" height="15" fill="rgb(228,84,11)" fg:x="2099" fg:w="1"/><text x="91.1158%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.30%)</title><rect x="90.7792%" y="901" width="0.3030%" height="15" fill="rgb(218,76,45)" fg:x="2097" fg:w="7"/><text x="91.0292%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.30%)</title><rect x="90.7792%" y="885" width="0.3030%" height="15" fill="rgb(223,80,15)" fg:x="2097" fg:w="7"/><text x="91.0292%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.30%)</title><rect x="90.7792%" y="869" width="0.3030%" height="15" fill="rgb(219,218,33)" fg:x="2097" fg:w="7"/><text x="91.0292%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.17%)</title><rect x="90.9091%" y="853" width="0.1732%" height="15" fill="rgb(208,51,11)" fg:x="2100" fg:w="4"/><text x="91.1591%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.13%)</title><rect x="90.9524%" y="837" width="0.1299%" height="15" fill="rgb(229,165,39)" fg:x="2101" fg:w="3"/><text x="91.2024%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (22 samples, 0.95%)</title><rect x="90.2165%" y="917" width="0.9524%" height="15" fill="rgb(241,100,24)" fg:x="2084" fg:w="22"/><text x="90.4665%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.09%)</title><rect x="91.0823%" y="901" width="0.0866%" height="15" fill="rgb(228,14,23)" fg:x="2104" fg:w="2"/><text x="91.3323%" y="911.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.04%)</title><rect x="91.1255%" y="885" width="0.0433%" height="15" fill="rgb(247,116,52)" fg:x="2105" fg:w="1"/><text x="91.3755%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="91.2554%" y="885" width="0.0866%" height="15" fill="rgb(216,149,33)" fg:x="2108" fg:w="2"/><text x="91.5054%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="91.2987%" y="869" width="0.0433%" height="15" fill="rgb(238,142,29)" fg:x="2109" fg:w="1"/><text x="91.5487%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="91.2987%" y="853" width="0.0433%" height="15" fill="rgb(224,83,40)" fg:x="2109" fg:w="1"/><text x="91.5487%" y="863.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.04%)</title><rect x="91.2987%" y="837" width="0.0433%" height="15" fill="rgb(234,165,11)" fg:x="2109" fg:w="1"/><text x="91.5487%" y="847.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.09%)</title><rect x="91.3420%" y="885" width="0.0866%" height="15" fill="rgb(215,96,23)" fg:x="2110" fg:w="2"/><text x="91.5920%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.09%)</title><rect x="91.3420%" y="869" width="0.0866%" height="15" fill="rgb(233,179,26)" fg:x="2110" fg:w="2"/><text x="91.5920%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.09%)</title><rect x="91.3420%" y="853" width="0.0866%" height="15" fill="rgb(225,129,33)" fg:x="2110" fg:w="2"/><text x="91.5920%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.09%)</title><rect x="91.3420%" y="837" width="0.0866%" height="15" fill="rgb(237,49,13)" fg:x="2110" fg:w="2"/><text x="91.5920%" y="847.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.09%)</title><rect x="91.3420%" y="821" width="0.0866%" height="15" fill="rgb(211,3,31)" fg:x="2110" fg:w="2"/><text x="91.5920%" y="831.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.09%)</title><rect x="91.3420%" y="805" width="0.0866%" height="15" fill="rgb(216,152,19)" fg:x="2110" fg:w="2"/><text x="91.5920%" y="815.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (30 samples, 1.30%)</title><rect x="90.2165%" y="981" width="1.2987%" height="15" fill="rgb(251,121,35)" fg:x="2084" fg:w="30"/><text x="90.4665%" y="991.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (30 samples, 1.30%)</title><rect x="90.2165%" y="965" width="1.2987%" height="15" fill="rgb(210,217,47)" fg:x="2084" fg:w="30"/><text x="90.4665%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (30 samples, 1.30%)</title><rect x="90.2165%" y="949" width="1.2987%" height="15" fill="rgb(244,116,22)" fg:x="2084" fg:w="30"/><text x="90.4665%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30 samples, 1.30%)</title><rect x="90.2165%" y="933" width="1.2987%" height="15" fill="rgb(228,17,21)" fg:x="2084" fg:w="30"/><text x="90.4665%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.35%)</title><rect x="91.1688%" y="917" width="0.3463%" height="15" fill="rgb(240,149,34)" fg:x="2106" fg:w="8"/><text x="91.4188%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.35%)</title><rect x="91.1688%" y="901" width="0.3463%" height="15" fill="rgb(208,125,47)" fg:x="2106" fg:w="8"/><text x="91.4188%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.09%)</title><rect x="91.4286%" y="885" width="0.0866%" height="15" fill="rgb(249,186,39)" fg:x="2112" fg:w="2"/><text x="91.6786%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.09%)</title><rect x="91.4286%" y="869" width="0.0866%" height="15" fill="rgb(240,220,33)" fg:x="2112" fg:w="2"/><text x="91.6786%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.09%)</title><rect x="91.4286%" y="853" width="0.0866%" height="15" fill="rgb(243,110,23)" fg:x="2112" fg:w="2"/><text x="91.6786%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.09%)</title><rect x="91.4286%" y="837" width="0.0866%" height="15" fill="rgb(219,163,46)" fg:x="2112" fg:w="2"/><text x="91.6786%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.09%)</title><rect x="91.4286%" y="821" width="0.0866%" height="15" fill="rgb(216,126,30)" fg:x="2112" fg:w="2"/><text x="91.6786%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.09%)</title><rect x="91.4286%" y="805" width="0.0866%" height="15" fill="rgb(208,139,11)" fg:x="2112" fg:w="2"/><text x="91.6786%" y="815.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.09%)</title><rect x="91.4286%" y="789" width="0.0866%" height="15" fill="rgb(213,118,36)" fg:x="2112" fg:w="2"/><text x="91.6786%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="91.5152%" y="885" width="0.0433%" height="15" fill="rgb(226,43,17)" fg:x="2114" fg:w="1"/><text x="91.7652%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="91.5152%" y="869" width="0.0433%" height="15" fill="rgb(254,217,4)" fg:x="2114" fg:w="1"/><text x="91.7652%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="91.5152%" y="853" width="0.0433%" height="15" fill="rgb(210,134,47)" fg:x="2114" fg:w="1"/><text x="91.7652%" y="863.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.09%)</title><rect x="91.5152%" y="933" width="0.0866%" height="15" fill="rgb(237,24,49)" fg:x="2114" fg:w="2"/><text x="91.7652%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.09%)</title><rect x="91.5152%" y="917" width="0.0866%" height="15" fill="rgb(251,39,46)" fg:x="2114" fg:w="2"/><text x="91.7652%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.09%)</title><rect x="91.5152%" y="901" width="0.0866%" height="15" fill="rgb(251,220,3)" fg:x="2114" fg:w="2"/><text x="91.7652%" y="911.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.04%)</title><rect x="91.5584%" y="885" width="0.0433%" height="15" fill="rgb(228,105,12)" fg:x="2115" fg:w="1"/><text x="91.8084%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="91.5584%" y="869" width="0.0433%" height="15" fill="rgb(215,196,1)" fg:x="2115" fg:w="1"/><text x="91.8084%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="91.6017%" y="901" width="0.0433%" height="15" fill="rgb(214,33,39)" fg:x="2116" fg:w="1"/><text x="91.8517%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="91.6017%" y="885" width="0.0433%" height="15" fill="rgb(220,19,52)" fg:x="2116" fg:w="1"/><text x="91.8517%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="91.6017%" y="869" width="0.0433%" height="15" fill="rgb(221,78,38)" fg:x="2116" fg:w="1"/><text x="91.8517%" y="879.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.04%)</title><rect x="91.6450%" y="901" width="0.0433%" height="15" fill="rgb(253,30,16)" fg:x="2117" fg:w="1"/><text x="91.8950%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="91.6450%" y="885" width="0.0433%" height="15" fill="rgb(242,65,0)" fg:x="2117" fg:w="1"/><text x="91.8950%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (1 samples, 0.04%)</title><rect x="91.6450%" y="869" width="0.0433%" height="15" fill="rgb(235,201,12)" fg:x="2117" fg:w="1"/><text x="91.8950%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="91.6450%" y="853" width="0.0433%" height="15" fill="rgb(233,161,9)" fg:x="2117" fg:w="1"/><text x="91.8950%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="91.6450%" y="837" width="0.0433%" height="15" fill="rgb(241,207,41)" fg:x="2117" fg:w="1"/><text x="91.8950%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.13%)</title><rect x="91.6017%" y="933" width="0.1299%" height="15" fill="rgb(212,69,46)" fg:x="2116" fg:w="3"/><text x="91.8517%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.13%)</title><rect x="91.6017%" y="917" width="0.1299%" height="15" fill="rgb(239,69,45)" fg:x="2116" fg:w="3"/><text x="91.8517%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="91.6883%" y="901" width="0.0433%" height="15" fill="rgb(242,117,48)" fg:x="2118" fg:w="1"/><text x="91.9383%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="91.6883%" y="885" width="0.0433%" height="15" fill="rgb(228,41,36)" fg:x="2118" fg:w="1"/><text x="91.9383%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="91.6883%" y="869" width="0.0433%" height="15" fill="rgb(212,3,32)" fg:x="2118" fg:w="1"/><text x="91.9383%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="91.6883%" y="853" width="0.0433%" height="15" fill="rgb(233,41,49)" fg:x="2118" fg:w="1"/><text x="91.9383%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.04%)</title><rect x="91.6883%" y="837" width="0.0433%" height="15" fill="rgb(252,170,49)" fg:x="2118" fg:w="1"/><text x="91.9383%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.04%)</title><rect x="91.6883%" y="821" width="0.0433%" height="15" fill="rgb(229,53,26)" fg:x="2118" fg:w="1"/><text x="91.9383%" y="831.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.04%)</title><rect x="91.6883%" y="805" width="0.0433%" height="15" fill="rgb(217,157,12)" fg:x="2118" fg:w="1"/><text x="91.9383%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.04%)</title><rect x="91.7316%" y="917" width="0.0433%" height="15" fill="rgb(227,17,9)" fg:x="2119" fg:w="1"/><text x="91.9816%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.04%)</title><rect x="91.7316%" y="901" width="0.0433%" height="15" fill="rgb(218,84,12)" fg:x="2119" fg:w="1"/><text x="91.9816%" y="911.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="91.7316%" y="885" width="0.0433%" height="15" fill="rgb(212,79,24)" fg:x="2119" fg:w="1"/><text x="91.9816%" y="895.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (7 samples, 0.30%)</title><rect x="91.5152%" y="981" width="0.3030%" height="15" fill="rgb(217,222,37)" fg:x="2114" fg:w="7"/><text x="91.7652%" y="991.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (7 samples, 0.30%)</title><rect x="91.5152%" y="965" width="0.3030%" height="15" fill="rgb(246,208,8)" fg:x="2114" fg:w="7"/><text x="91.7652%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.30%)</title><rect x="91.5152%" y="949" width="0.3030%" height="15" fill="rgb(244,133,10)" fg:x="2114" fg:w="7"/><text x="91.7652%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.09%)</title><rect x="91.7316%" y="933" width="0.0866%" height="15" fill="rgb(209,219,41)" fg:x="2119" fg:w="2"/><text x="91.9816%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.04%)</title><rect x="91.7749%" y="917" width="0.0433%" height="15" fill="rgb(253,175,45)" fg:x="2120" fg:w="1"/><text x="92.0249%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="91.9481%" y="837" width="0.0433%" height="15" fill="rgb(235,100,37)" fg:x="2124" fg:w="1"/><text x="92.1981%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="91.9481%" y="821" width="0.0433%" height="15" fill="rgb(225,87,19)" fg:x="2124" fg:w="1"/><text x="92.1981%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.04%)</title><rect x="91.9481%" y="805" width="0.0433%" height="15" fill="rgb(217,152,17)" fg:x="2124" fg:w="1"/><text x="92.1981%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="91.9481%" y="789" width="0.0433%" height="15" fill="rgb(235,72,13)" fg:x="2124" fg:w="1"/><text x="92.1981%" y="799.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="91.9481%" y="773" width="0.0433%" height="15" fill="rgb(233,140,18)" fg:x="2124" fg:w="1"/><text x="92.1981%" y="783.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="91.9481%" y="757" width="0.0433%" height="15" fill="rgb(207,212,28)" fg:x="2124" fg:w="1"/><text x="92.1981%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="91.9481%" y="741" width="0.0433%" height="15" fill="rgb(220,130,25)" fg:x="2124" fg:w="1"/><text x="92.1981%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.04%)</title><rect x="91.9913%" y="837" width="0.0433%" height="15" fill="rgb(205,55,34)" fg:x="2125" fg:w="1"/><text x="92.2413%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="91.9913%" y="821" width="0.0433%" height="15" fill="rgb(237,54,35)" fg:x="2125" fg:w="1"/><text x="92.2413%" y="831.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="91.9913%" y="805" width="0.0433%" height="15" fill="rgb(208,67,23)" fg:x="2125" fg:w="1"/><text x="92.2413%" y="815.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.04%)</title><rect x="91.9913%" y="789" width="0.0433%" height="15" fill="rgb(206,207,50)" fg:x="2125" fg:w="1"/><text x="92.2413%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="93.8095%" y="741" width="0.0433%" height="15" fill="rgb(213,211,42)" fg:x="2167" fg:w="1"/><text x="94.0595%" y="751.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.04%)</title><rect x="93.8095%" y="725" width="0.0433%" height="15" fill="rgb(252,197,50)" fg:x="2167" fg:w="1"/><text x="94.0595%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.04%)</title><rect x="93.8095%" y="709" width="0.0433%" height="15" fill="rgb(251,211,41)" fg:x="2167" fg:w="1"/><text x="94.0595%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.04%)</title><rect x="93.8095%" y="693" width="0.0433%" height="15" fill="rgb(229,211,5)" fg:x="2167" fg:w="1"/><text x="94.0595%" y="703.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.17%)</title><rect x="93.8528%" y="741" width="0.1732%" height="15" fill="rgb(239,36,31)" fg:x="2168" fg:w="4"/><text x="94.1028%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.17%)</title><rect x="93.8528%" y="725" width="0.1732%" height="15" fill="rgb(248,67,31)" fg:x="2168" fg:w="4"/><text x="94.1028%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.09%)</title><rect x="94.0260%" y="741" width="0.0866%" height="15" fill="rgb(249,55,44)" fg:x="2172" fg:w="2"/><text x="94.2760%" y="751.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.09%)</title><rect x="94.0260%" y="725" width="0.0866%" height="15" fill="rgb(216,82,12)" fg:x="2172" fg:w="2"/><text x="94.2760%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (55 samples, 2.38%)</title><rect x="92.0346%" y="837" width="2.3810%" height="15" fill="rgb(242,174,1)" fg:x="2126" fg:w="55"/><text x="92.2846%" y="847.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (42 samples, 1.82%)</title><rect x="92.5974%" y="821" width="1.8182%" height="15" fill="rgb(208,120,29)" fg:x="2139" fg:w="42"/><text x="92.8474%" y="831.50">c..</text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 1.82%)</title><rect x="92.5974%" y="805" width="1.8182%" height="15" fill="rgb(221,105,43)" fg:x="2139" fg:w="42"/><text x="92.8474%" y="815.50">&lt;..</text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (42 samples, 1.82%)</title><rect x="92.5974%" y="789" width="1.8182%" height="15" fill="rgb(234,124,22)" fg:x="2139" fg:w="42"/><text x="92.8474%" y="799.50">c..</text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (42 samples, 1.82%)</title><rect x="92.5974%" y="773" width="1.8182%" height="15" fill="rgb(212,23,30)" fg:x="2139" fg:w="42"/><text x="92.8474%" y="783.50">&lt;..</text></g><g><title>core::str::pattern::TwoWaySearcher::next (36 samples, 1.56%)</title><rect x="92.8571%" y="757" width="1.5584%" height="15" fill="rgb(219,122,53)" fg:x="2145" fg:w="36"/><text x="93.1071%" y="767.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (7 samples, 0.30%)</title><rect x="94.1126%" y="741" width="0.3030%" height="15" fill="rgb(248,84,24)" fg:x="2174" fg:w="7"/><text x="94.3626%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.13%)</title><rect x="94.5455%" y="757" width="0.1299%" height="15" fill="rgb(245,115,18)" fg:x="2184" fg:w="3"/><text x="94.7955%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.13%)</title><rect x="94.5455%" y="741" width="0.1299%" height="15" fill="rgb(227,176,51)" fg:x="2184" fg:w="3"/><text x="94.7955%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 2.94%)</title><rect x="91.9048%" y="965" width="2.9437%" height="15" fill="rgb(229,63,42)" fg:x="2123" fg:w="68"/><text x="92.1548%" y="975.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find (68 samples, 2.94%)</title><rect x="91.9048%" y="949" width="2.9437%" height="15" fill="rgb(247,202,24)" fg:x="2123" fg:w="68"/><text x="92.1548%" y="959.50">co..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (68 samples, 2.94%)</title><rect x="91.9048%" y="933" width="2.9437%" height="15" fill="rgb(244,173,20)" fg:x="2123" fg:w="68"/><text x="92.1548%" y="943.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (68 samples, 2.94%)</title><rect x="91.9048%" y="917" width="2.9437%" height="15" fill="rgb(242,81,47)" fg:x="2123" fg:w="68"/><text x="92.1548%" y="927.50">co..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (68 samples, 2.94%)</title><rect x="91.9048%" y="901" width="2.9437%" height="15" fill="rgb(231,185,54)" fg:x="2123" fg:w="68"/><text x="92.1548%" y="911.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (68 samples, 2.94%)</title><rect x="91.9048%" y="885" width="2.9437%" height="15" fill="rgb(243,55,32)" fg:x="2123" fg:w="68"/><text x="92.1548%" y="895.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (67 samples, 2.90%)</title><rect x="91.9481%" y="869" width="2.9004%" height="15" fill="rgb(208,167,19)" fg:x="2124" fg:w="67"/><text x="92.1981%" y="879.50">co..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (67 samples, 2.90%)</title><rect x="91.9481%" y="853" width="2.9004%" height="15" fill="rgb(231,72,35)" fg:x="2124" fg:w="67"/><text x="92.1981%" y="863.50">y2..</text></g><g><title>core::str::&lt;impl str&gt;::matches (10 samples, 0.43%)</title><rect x="94.4156%" y="837" width="0.4329%" height="15" fill="rgb(250,173,51)" fg:x="2181" fg:w="10"/><text x="94.6656%" y="847.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (10 samples, 0.43%)</title><rect x="94.4156%" y="821" width="0.4329%" height="15" fill="rgb(209,5,22)" fg:x="2181" fg:w="10"/><text x="94.6656%" y="831.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (10 samples, 0.43%)</title><rect x="94.4156%" y="805" width="0.4329%" height="15" fill="rgb(250,174,19)" fg:x="2181" fg:w="10"/><text x="94.6656%" y="815.50"></text></g><g><title>core::str::pattern::StrSearcher::new (10 samples, 0.43%)</title><rect x="94.4156%" y="789" width="0.4329%" height="15" fill="rgb(217,3,49)" fg:x="2181" fg:w="10"/><text x="94.6656%" y="799.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (8 samples, 0.35%)</title><rect x="94.5022%" y="773" width="0.3463%" height="15" fill="rgb(218,225,5)" fg:x="2183" fg:w="8"/><text x="94.7522%" y="783.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (4 samples, 0.17%)</title><rect x="94.6753%" y="757" width="0.1732%" height="15" fill="rgb(236,89,11)" fg:x="2187" fg:w="4"/><text x="94.9253%" y="767.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="94.9351%" y="917" width="0.0433%" height="15" fill="rgb(206,33,28)" fg:x="2193" fg:w="1"/><text x="95.1851%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.04%)</title><rect x="95.0649%" y="757" width="0.0433%" height="15" fill="rgb(241,56,42)" fg:x="2196" fg:w="1"/><text x="95.3149%" y="767.50"></text></g><g><title>_int_free (2 samples, 0.09%)</title><rect x="95.3680%" y="661" width="0.0866%" height="15" fill="rgb(222,44,11)" fg:x="2203" fg:w="2"/><text x="95.6180%" y="671.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.39%)</title><rect x="95.1082%" y="693" width="0.3896%" height="15" fill="rgb(234,111,20)" fg:x="2197" fg:w="9"/><text x="95.3582%" y="703.50"></text></g><g><title>_int_realloc (7 samples, 0.30%)</title><rect x="95.1948%" y="677" width="0.3030%" height="15" fill="rgb(237,77,6)" fg:x="2199" fg:w="7"/><text x="95.4448%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.04%)</title><rect x="95.4545%" y="661" width="0.0433%" height="15" fill="rgb(235,111,23)" fg:x="2205" fg:w="1"/><text x="95.7045%" y="671.50"></text></g><g><title>checked_request2size (1 samples, 0.04%)</title><rect x="95.4545%" y="645" width="0.0433%" height="15" fill="rgb(251,135,29)" fg:x="2205" fg:w="1"/><text x="95.7045%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.43%)</title><rect x="95.1082%" y="741" width="0.4329%" height="15" fill="rgb(217,57,1)" fg:x="2197" fg:w="10"/><text x="95.3582%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.43%)</title><rect x="95.1082%" y="725" width="0.4329%" height="15" fill="rgb(249,119,31)" fg:x="2197" fg:w="10"/><text x="95.3582%" y="735.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.43%)</title><rect x="95.1082%" y="709" width="0.4329%" height="15" fill="rgb(233,164,33)" fg:x="2197" fg:w="10"/><text x="95.3582%" y="719.50"></text></g><g><title>__rust_realloc (1 samples, 0.04%)</title><rect x="95.4978%" y="693" width="0.0433%" height="15" fill="rgb(250,217,43)" fg:x="2206" fg:w="1"/><text x="95.7478%" y="703.50"></text></g><g><title>checked_request2size (1 samples, 0.04%)</title><rect x="95.5411%" y="725" width="0.0433%" height="15" fill="rgb(232,154,50)" fg:x="2207" fg:w="1"/><text x="95.7911%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (15 samples, 0.65%)</title><rect x="95.0216%" y="821" width="0.6494%" height="15" fill="rgb(227,190,8)" fg:x="2195" fg:w="15"/><text x="95.2716%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.65%)</title><rect x="95.0216%" y="805" width="0.6494%" height="15" fill="rgb(209,217,32)" fg:x="2195" fg:w="15"/><text x="95.2716%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.65%)</title><rect x="95.0216%" y="789" width="0.6494%" height="15" fill="rgb(243,203,50)" fg:x="2195" fg:w="15"/><text x="95.2716%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.61%)</title><rect x="95.0649%" y="773" width="0.6061%" height="15" fill="rgb(232,152,27)" fg:x="2196" fg:w="14"/><text x="95.3149%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.56%)</title><rect x="95.1082%" y="757" width="0.5628%" height="15" fill="rgb(240,34,29)" fg:x="2197" fg:w="13"/><text x="95.3582%" y="767.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.13%)</title><rect x="95.5411%" y="741" width="0.1299%" height="15" fill="rgb(215,185,52)" fg:x="2207" fg:w="3"/><text x="95.7911%" y="751.50"></text></g><g><title>tcache_get (2 samples, 0.09%)</title><rect x="95.5844%" y="725" width="0.0866%" height="15" fill="rgb(240,89,49)" fg:x="2208" fg:w="2"/><text x="95.8344%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (17 samples, 0.74%)</title><rect x="94.9784%" y="917" width="0.7359%" height="15" fill="rgb(225,12,52)" fg:x="2194" fg:w="17"/><text x="95.2284%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (16 samples, 0.69%)</title><rect x="95.0216%" y="901" width="0.6926%" height="15" fill="rgb(239,128,45)" fg:x="2195" fg:w="16"/><text x="95.2716%" y="911.50"></text></g><g><title>alloc::string::String::push_str (16 samples, 0.69%)</title><rect x="95.0216%" y="885" width="0.6926%" height="15" fill="rgb(211,78,47)" fg:x="2195" fg:w="16"/><text x="95.2716%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.69%)</title><rect x="95.0216%" y="869" width="0.6926%" height="15" fill="rgb(232,31,21)" fg:x="2195" fg:w="16"/><text x="95.2716%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.69%)</title><rect x="95.0216%" y="853" width="0.6926%" height="15" fill="rgb(222,168,14)" fg:x="2195" fg:w="16"/><text x="95.2716%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.69%)</title><rect x="95.0216%" y="837" width="0.6926%" height="15" fill="rgb(209,128,24)" fg:x="2195" fg:w="16"/><text x="95.2716%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="95.6710%" y="821" width="0.0433%" height="15" fill="rgb(249,35,13)" fg:x="2210" fg:w="1"/><text x="95.9210%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="95.6710%" y="805" width="0.0433%" height="15" fill="rgb(218,7,2)" fg:x="2210" fg:w="1"/><text x="95.9210%" y="815.50"></text></g><g><title>alloc::fmt::format (21 samples, 0.91%)</title><rect x="94.8485%" y="965" width="0.9091%" height="15" fill="rgb(238,107,27)" fg:x="2191" fg:w="21"/><text x="95.0985%" y="975.50"></text></g><g><title>core::fmt::Write::write_fmt (21 samples, 0.91%)</title><rect x="94.8485%" y="949" width="0.9091%" height="15" fill="rgb(217,88,38)" fg:x="2191" fg:w="21"/><text x="95.0985%" y="959.50"></text></g><g><title>core::fmt::write (21 samples, 0.91%)</title><rect x="94.8485%" y="933" width="0.9091%" height="15" fill="rgb(230,207,0)" fg:x="2191" fg:w="21"/><text x="95.0985%" y="943.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.04%)</title><rect x="95.7143%" y="917" width="0.0433%" height="15" fill="rgb(249,64,54)" fg:x="2211" fg:w="1"/><text x="95.9643%" y="927.50"></text></g><g><title>__GI___libc_free (1 samples, 0.04%)</title><rect x="95.7576%" y="869" width="0.0433%" height="15" fill="rgb(231,7,11)" fg:x="2212" fg:w="1"/><text x="96.0076%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.17%)</title><rect x="95.7576%" y="965" width="0.1732%" height="15" fill="rgb(205,149,21)" fg:x="2212" fg:w="4"/><text x="96.0076%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.17%)</title><rect x="95.7576%" y="949" width="0.1732%" height="15" fill="rgb(215,126,34)" fg:x="2212" fg:w="4"/><text x="96.0076%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.17%)</title><rect x="95.7576%" y="933" width="0.1732%" height="15" fill="rgb(241,132,45)" fg:x="2212" fg:w="4"/><text x="96.0076%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.17%)</title><rect x="95.7576%" y="917" width="0.1732%" height="15" fill="rgb(252,69,32)" fg:x="2212" fg:w="4"/><text x="96.0076%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.17%)</title><rect x="95.7576%" y="901" width="0.1732%" height="15" fill="rgb(232,204,19)" fg:x="2212" fg:w="4"/><text x="96.0076%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.17%)</title><rect x="95.7576%" y="885" width="0.1732%" height="15" fill="rgb(249,15,47)" fg:x="2212" fg:w="4"/><text x="96.0076%" y="895.50"></text></g><g><title>_int_free (3 samples, 0.13%)</title><rect x="95.8009%" y="869" width="0.1299%" height="15" fill="rgb(209,227,23)" fg:x="2213" fg:w="3"/><text x="96.0509%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.17%)</title><rect x="95.9307%" y="917" width="0.1732%" height="15" fill="rgb(248,92,24)" fg:x="2216" fg:w="4"/><text x="96.1807%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.17%)</title><rect x="95.9307%" y="901" width="0.1732%" height="15" fill="rgb(247,59,2)" fg:x="2216" fg:w="4"/><text x="96.1807%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.17%)</title><rect x="95.9307%" y="885" width="0.1732%" height="15" fill="rgb(221,30,5)" fg:x="2216" fg:w="4"/><text x="96.1807%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.17%)</title><rect x="95.9307%" y="869" width="0.1732%" height="15" fill="rgb(208,108,53)" fg:x="2216" fg:w="4"/><text x="96.1807%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.13%)</title><rect x="95.9740%" y="853" width="0.1299%" height="15" fill="rgb(211,183,26)" fg:x="2217" fg:w="3"/><text x="96.2240%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.13%)</title><rect x="95.9740%" y="837" width="0.1299%" height="15" fill="rgb(232,132,4)" fg:x="2217" fg:w="3"/><text x="96.2240%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="96.1905%" y="885" width="0.0433%" height="15" fill="rgb(253,128,37)" fg:x="2222" fg:w="1"/><text x="96.4405%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="96.1905%" y="869" width="0.0433%" height="15" fill="rgb(221,58,24)" fg:x="2222" fg:w="1"/><text x="96.4405%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="96.1905%" y="853" width="0.0433%" height="15" fill="rgb(230,54,45)" fg:x="2222" fg:w="1"/><text x="96.4405%" y="863.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.04%)</title><rect x="96.2338%" y="885" width="0.0433%" height="15" fill="rgb(254,21,18)" fg:x="2223" fg:w="1"/><text x="96.4838%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.04%)</title><rect x="96.2338%" y="869" width="0.0433%" height="15" fill="rgb(221,108,0)" fg:x="2223" fg:w="1"/><text x="96.4838%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="96.2338%" y="853" width="0.0433%" height="15" fill="rgb(206,95,1)" fg:x="2223" fg:w="1"/><text x="96.4838%" y="863.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="96.2338%" y="837" width="0.0433%" height="15" fill="rgb(237,52,5)" fg:x="2223" fg:w="1"/><text x="96.4838%" y="847.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="96.2338%" y="821" width="0.0433%" height="15" fill="rgb(218,150,34)" fg:x="2223" fg:w="1"/><text x="96.4838%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="96.2338%" y="805" width="0.0433%" height="15" fill="rgb(235,194,28)" fg:x="2223" fg:w="1"/><text x="96.4838%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.39%)</title><rect x="95.9307%" y="965" width="0.3896%" height="15" fill="rgb(245,92,18)" fg:x="2216" fg:w="9"/><text x="96.1807%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.39%)</title><rect x="95.9307%" y="949" width="0.3896%" height="15" fill="rgb(253,203,53)" fg:x="2216" fg:w="9"/><text x="96.1807%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.39%)</title><rect x="95.9307%" y="933" width="0.3896%" height="15" fill="rgb(249,185,47)" fg:x="2216" fg:w="9"/><text x="96.1807%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.22%)</title><rect x="96.1039%" y="917" width="0.2165%" height="15" fill="rgb(252,194,52)" fg:x="2220" fg:w="5"/><text x="96.3539%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.22%)</title><rect x="96.1039%" y="901" width="0.2165%" height="15" fill="rgb(210,53,36)" fg:x="2220" fg:w="5"/><text x="96.3539%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.04%)</title><rect x="96.2771%" y="885" width="0.0433%" height="15" fill="rgb(237,37,25)" fg:x="2224" fg:w="1"/><text x="96.5271%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.04%)</title><rect x="96.2771%" y="869" width="0.0433%" height="15" fill="rgb(242,116,27)" fg:x="2224" fg:w="1"/><text x="96.5271%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="96.2771%" y="853" width="0.0433%" height="15" fill="rgb(213,185,26)" fg:x="2224" fg:w="1"/><text x="96.5271%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.04%)</title><rect x="96.2771%" y="837" width="0.0433%" height="15" fill="rgb(225,204,8)" fg:x="2224" fg:w="1"/><text x="96.5271%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.04%)</title><rect x="96.2771%" y="821" width="0.0433%" height="15" fill="rgb(254,111,37)" fg:x="2224" fg:w="1"/><text x="96.5271%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.04%)</title><rect x="96.2771%" y="805" width="0.0433%" height="15" fill="rgb(242,35,9)" fg:x="2224" fg:w="1"/><text x="96.5271%" y="815.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.04%)</title><rect x="96.2771%" y="789" width="0.0433%" height="15" fill="rgb(232,138,49)" fg:x="2224" fg:w="1"/><text x="96.5271%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.17%)</title><rect x="96.3203%" y="853" width="0.1732%" height="15" fill="rgb(247,56,4)" fg:x="2225" fg:w="4"/><text x="96.5703%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.17%)</title><rect x="96.3203%" y="837" width="0.1732%" height="15" fill="rgb(226,179,17)" fg:x="2225" fg:w="4"/><text x="96.5703%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.17%)</title><rect x="96.3203%" y="821" width="0.1732%" height="15" fill="rgb(216,163,45)" fg:x="2225" fg:w="4"/><text x="96.5703%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.09%)</title><rect x="96.4069%" y="805" width="0.0866%" height="15" fill="rgb(211,157,3)" fg:x="2227" fg:w="2"/><text x="96.6569%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="96.4502%" y="789" width="0.0433%" height="15" fill="rgb(234,44,20)" fg:x="2228" fg:w="1"/><text x="96.7002%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (6 samples, 0.26%)</title><rect x="96.3203%" y="885" width="0.2597%" height="15" fill="rgb(254,138,23)" fg:x="2225" fg:w="6"/><text x="96.5703%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6 samples, 0.26%)</title><rect x="96.3203%" y="869" width="0.2597%" height="15" fill="rgb(206,119,39)" fg:x="2225" fg:w="6"/><text x="96.5703%" y="879.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.09%)</title><rect x="96.4935%" y="853" width="0.0866%" height="15" fill="rgb(231,105,52)" fg:x="2229" fg:w="2"/><text x="96.7435%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="96.4935%" y="837" width="0.0866%" height="15" fill="rgb(250,20,5)" fg:x="2229" fg:w="2"/><text x="96.7435%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="96.4935%" y="821" width="0.0866%" height="15" fill="rgb(215,198,30)" fg:x="2229" fg:w="2"/><text x="96.7435%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.09%)</title><rect x="96.4935%" y="805" width="0.0866%" height="15" fill="rgb(246,142,8)" fg:x="2229" fg:w="2"/><text x="96.7435%" y="815.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="96.5368%" y="789" width="0.0433%" height="15" fill="rgb(243,26,38)" fg:x="2230" fg:w="1"/><text x="96.7868%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="96.6234%" y="837" width="0.0433%" height="15" fill="rgb(205,133,28)" fg:x="2232" fg:w="1"/><text x="96.8734%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="96.6234%" y="821" width="0.0433%" height="15" fill="rgb(212,34,0)" fg:x="2232" fg:w="1"/><text x="96.8734%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.26%)</title><rect x="96.5801%" y="885" width="0.2597%" height="15" fill="rgb(251,226,22)" fg:x="2231" fg:w="6"/><text x="96.8301%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.26%)</title><rect x="96.5801%" y="869" width="0.2597%" height="15" fill="rgb(252,119,9)" fg:x="2231" fg:w="6"/><text x="96.8301%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.26%)</title><rect x="96.5801%" y="853" width="0.2597%" height="15" fill="rgb(213,150,50)" fg:x="2231" fg:w="6"/><text x="96.8301%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.17%)</title><rect x="96.6667%" y="837" width="0.1732%" height="15" fill="rgb(212,24,39)" fg:x="2233" fg:w="4"/><text x="96.9167%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.09%)</title><rect x="96.7532%" y="821" width="0.0866%" height="15" fill="rgb(213,46,39)" fg:x="2235" fg:w="2"/><text x="97.0032%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.56%)</title><rect x="96.3203%" y="901" width="0.5628%" height="15" fill="rgb(239,106,12)" fg:x="2225" fg:w="13"/><text x="96.5703%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="96.8398%" y="885" width="0.0433%" height="15" fill="rgb(249,229,21)" fg:x="2237" fg:w="1"/><text x="97.0898%" y="895.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.04%)</title><rect x="96.8398%" y="869" width="0.0433%" height="15" fill="rgb(212,158,3)" fg:x="2237" fg:w="1"/><text x="97.0898%" y="879.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.04%)</title><rect x="96.8398%" y="853" width="0.0433%" height="15" fill="rgb(253,26,48)" fg:x="2237" fg:w="1"/><text x="97.0898%" y="863.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.04%)</title><rect x="96.8398%" y="837" width="0.0433%" height="15" fill="rgb(238,178,20)" fg:x="2237" fg:w="1"/><text x="97.0898%" y="847.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (16 samples, 0.69%)</title><rect x="96.3203%" y="965" width="0.6926%" height="15" fill="rgb(208,86,15)" fg:x="2225" fg:w="16"/><text x="96.5703%" y="975.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (16 samples, 0.69%)</title><rect x="96.3203%" y="949" width="0.6926%" height="15" fill="rgb(239,42,53)" fg:x="2225" fg:w="16"/><text x="96.5703%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (16 samples, 0.69%)</title><rect x="96.3203%" y="933" width="0.6926%" height="15" fill="rgb(245,226,8)" fg:x="2225" fg:w="16"/><text x="96.5703%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 0.69%)</title><rect x="96.3203%" y="917" width="0.6926%" height="15" fill="rgb(216,176,32)" fg:x="2225" fg:w="16"/><text x="96.5703%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.13%)</title><rect x="96.8831%" y="901" width="0.1299%" height="15" fill="rgb(231,186,21)" fg:x="2238" fg:w="3"/><text x="97.1331%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.13%)</title><rect x="96.8831%" y="885" width="0.1299%" height="15" fill="rgb(205,95,49)" fg:x="2238" fg:w="3"/><text x="97.1331%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.09%)</title><rect x="96.9264%" y="869" width="0.0866%" height="15" fill="rgb(217,145,8)" fg:x="2239" fg:w="2"/><text x="97.1764%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.09%)</title><rect x="96.9264%" y="853" width="0.0866%" height="15" fill="rgb(239,144,48)" fg:x="2239" fg:w="2"/><text x="97.1764%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.09%)</title><rect x="96.9264%" y="837" width="0.0866%" height="15" fill="rgb(214,189,23)" fg:x="2239" fg:w="2"/><text x="97.1764%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.09%)</title><rect x="96.9264%" y="821" width="0.0866%" height="15" fill="rgb(229,157,17)" fg:x="2239" fg:w="2"/><text x="97.1764%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.09%)</title><rect x="96.9264%" y="805" width="0.0866%" height="15" fill="rgb(230,5,48)" fg:x="2239" fg:w="2"/><text x="97.1764%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.09%)</title><rect x="96.9264%" y="789" width="0.0866%" height="15" fill="rgb(224,156,48)" fg:x="2239" fg:w="2"/><text x="97.1764%" y="799.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.09%)</title><rect x="96.9264%" y="773" width="0.0866%" height="15" fill="rgb(223,14,29)" fg:x="2239" fg:w="2"/><text x="97.1764%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="97.0563%" y="901" width="0.0433%" height="15" fill="rgb(229,96,36)" fg:x="2242" fg:w="1"/><text x="97.3063%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.04%)</title><rect x="97.0563%" y="885" width="0.0433%" height="15" fill="rgb(231,102,53)" fg:x="2242" fg:w="1"/><text x="97.3063%" y="895.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.04%)</title><rect x="97.0563%" y="869" width="0.0433%" height="15" fill="rgb(210,77,38)" fg:x="2242" fg:w="1"/><text x="97.3063%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="97.0563%" y="853" width="0.0433%" height="15" fill="rgb(235,131,6)" fg:x="2242" fg:w="1"/><text x="97.3063%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="97.0563%" y="837" width="0.0433%" height="15" fill="rgb(252,55,38)" fg:x="2242" fg:w="1"/><text x="97.3063%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="97.0563%" y="821" width="0.0433%" height="15" fill="rgb(246,38,14)" fg:x="2242" fg:w="1"/><text x="97.3063%" y="831.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="97.0563%" y="805" width="0.0433%" height="15" fill="rgb(242,27,5)" fg:x="2242" fg:w="1"/><text x="97.3063%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="97.0996%" y="837" width="0.0433%" height="15" fill="rgb(228,65,35)" fg:x="2243" fg:w="1"/><text x="97.3496%" y="847.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.13%)</title><rect x="97.0563%" y="917" width="0.1299%" height="15" fill="rgb(245,93,11)" fg:x="2242" fg:w="3"/><text x="97.3063%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="97.0996%" y="901" width="0.0866%" height="15" fill="rgb(213,1,31)" fg:x="2243" fg:w="2"/><text x="97.3496%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="97.0996%" y="885" width="0.0866%" height="15" fill="rgb(237,205,14)" fg:x="2243" fg:w="2"/><text x="97.3496%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.09%)</title><rect x="97.0996%" y="869" width="0.0866%" height="15" fill="rgb(232,118,45)" fg:x="2243" fg:w="2"/><text x="97.3496%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.09%)</title><rect x="97.0996%" y="853" width="0.0866%" height="15" fill="rgb(218,5,6)" fg:x="2243" fg:w="2"/><text x="97.3496%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="97.1429%" y="837" width="0.0433%" height="15" fill="rgb(251,87,51)" fg:x="2244" fg:w="1"/><text x="97.3929%" y="847.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (5 samples, 0.22%)</title><rect x="97.0130%" y="965" width="0.2165%" height="15" fill="rgb(207,225,20)" fg:x="2241" fg:w="5"/><text x="97.2630%" y="975.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (5 samples, 0.22%)</title><rect x="97.0130%" y="949" width="0.2165%" height="15" fill="rgb(222,78,54)" fg:x="2241" fg:w="5"/><text x="97.2630%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.22%)</title><rect x="97.0130%" y="933" width="0.2165%" height="15" fill="rgb(232,85,16)" fg:x="2241" fg:w="5"/><text x="97.2630%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.04%)</title><rect x="97.1861%" y="917" width="0.0433%" height="15" fill="rgb(244,25,33)" fg:x="2245" fg:w="1"/><text x="97.4361%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.04%)</title><rect x="97.1861%" y="901" width="0.0433%" height="15" fill="rgb(233,24,36)" fg:x="2245" fg:w="1"/><text x="97.4361%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.04%)</title><rect x="97.1861%" y="885" width="0.0433%" height="15" fill="rgb(253,49,54)" fg:x="2245" fg:w="1"/><text x="97.4361%" y="895.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="97.1861%" y="869" width="0.0433%" height="15" fill="rgb(245,12,22)" fg:x="2245" fg:w="1"/><text x="97.4361%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="97.2727%" y="821" width="0.0433%" height="15" fill="rgb(253,141,28)" fg:x="2247" fg:w="1"/><text x="97.5227%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="97.2727%" y="805" width="0.0433%" height="15" fill="rgb(225,207,27)" fg:x="2247" fg:w="1"/><text x="97.5227%" y="815.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.04%)</title><rect x="97.2727%" y="789" width="0.0433%" height="15" fill="rgb(220,84,2)" fg:x="2247" fg:w="1"/><text x="97.5227%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="97.2727%" y="773" width="0.0433%" height="15" fill="rgb(224,37,37)" fg:x="2247" fg:w="1"/><text x="97.5227%" y="783.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="97.2727%" y="757" width="0.0433%" height="15" fill="rgb(220,143,18)" fg:x="2247" fg:w="1"/><text x="97.5227%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="97.2727%" y="741" width="0.0433%" height="15" fill="rgb(210,88,33)" fg:x="2247" fg:w="1"/><text x="97.5227%" y="751.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="97.2727%" y="725" width="0.0433%" height="15" fill="rgb(219,87,51)" fg:x="2247" fg:w="1"/><text x="97.5227%" y="735.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.09%)</title><rect x="98.1385%" y="725" width="0.0866%" height="15" fill="rgb(211,7,35)" fg:x="2267" fg:w="2"/><text x="98.3885%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.09%)</title><rect x="98.1385%" y="709" width="0.0866%" height="15" fill="rgb(232,77,2)" fg:x="2267" fg:w="2"/><text x="98.3885%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (24 samples, 1.04%)</title><rect x="97.3160%" y="821" width="1.0390%" height="15" fill="rgb(249,94,25)" fg:x="2248" fg:w="24"/><text x="97.5660%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.78%)</title><rect x="97.5758%" y="805" width="0.7792%" height="15" fill="rgb(215,112,2)" fg:x="2254" fg:w="18"/><text x="97.8258%" y="815.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.74%)</title><rect x="97.6190%" y="789" width="0.7359%" height="15" fill="rgb(226,115,48)" fg:x="2255" fg:w="17"/><text x="97.8690%" y="799.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (17 samples, 0.74%)</title><rect x="97.6190%" y="773" width="0.7359%" height="15" fill="rgb(249,196,10)" fg:x="2255" fg:w="17"/><text x="97.8690%" y="783.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (17 samples, 0.74%)</title><rect x="97.6190%" y="757" width="0.7359%" height="15" fill="rgb(237,109,14)" fg:x="2255" fg:w="17"/><text x="97.8690%" y="767.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (15 samples, 0.65%)</title><rect x="97.7056%" y="741" width="0.6494%" height="15" fill="rgb(217,103,53)" fg:x="2257" fg:w="15"/><text x="97.9556%" y="751.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (3 samples, 0.13%)</title><rect x="98.2251%" y="725" width="0.1299%" height="15" fill="rgb(244,137,9)" fg:x="2269" fg:w="3"/><text x="98.4751%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.26%)</title><rect x="98.4416%" y="741" width="0.2597%" height="15" fill="rgb(227,201,3)" fg:x="2274" fg:w="6"/><text x="98.6916%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.26%)</title><rect x="98.4416%" y="725" width="0.2597%" height="15" fill="rgb(243,94,6)" fg:x="2274" fg:w="6"/><text x="98.6916%" y="735.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.17%)</title><rect x="98.5281%" y="709" width="0.1732%" height="15" fill="rgb(235,118,5)" fg:x="2276" fg:w="4"/><text x="98.7781%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 1.52%)</title><rect x="97.2727%" y="949" width="1.5152%" height="15" fill="rgb(247,10,30)" fg:x="2247" fg:w="35"/><text x="97.5227%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (35 samples, 1.52%)</title><rect x="97.2727%" y="933" width="1.5152%" height="15" fill="rgb(205,26,28)" fg:x="2247" fg:w="35"/><text x="97.5227%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 1.52%)</title><rect x="97.2727%" y="917" width="1.5152%" height="15" fill="rgb(206,99,35)" fg:x="2247" fg:w="35"/><text x="97.5227%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (35 samples, 1.52%)</title><rect x="97.2727%" y="901" width="1.5152%" height="15" fill="rgb(238,130,40)" fg:x="2247" fg:w="35"/><text x="97.5227%" y="911.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (35 samples, 1.52%)</title><rect x="97.2727%" y="885" width="1.5152%" height="15" fill="rgb(224,126,31)" fg:x="2247" fg:w="35"/><text x="97.5227%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (35 samples, 1.52%)</title><rect x="97.2727%" y="869" width="1.5152%" height="15" fill="rgb(254,105,17)" fg:x="2247" fg:w="35"/><text x="97.5227%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (35 samples, 1.52%)</title><rect x="97.2727%" y="853" width="1.5152%" height="15" fill="rgb(216,87,36)" fg:x="2247" fg:w="35"/><text x="97.5227%" y="863.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (35 samples, 1.52%)</title><rect x="97.2727%" y="837" width="1.5152%" height="15" fill="rgb(240,21,12)" fg:x="2247" fg:w="35"/><text x="97.5227%" y="847.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (10 samples, 0.43%)</title><rect x="98.3550%" y="821" width="0.4329%" height="15" fill="rgb(245,192,34)" fg:x="2272" fg:w="10"/><text x="98.6050%" y="831.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (10 samples, 0.43%)</title><rect x="98.3550%" y="805" width="0.4329%" height="15" fill="rgb(226,100,49)" fg:x="2272" fg:w="10"/><text x="98.6050%" y="815.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (10 samples, 0.43%)</title><rect x="98.3550%" y="789" width="0.4329%" height="15" fill="rgb(245,188,27)" fg:x="2272" fg:w="10"/><text x="98.6050%" y="799.50"></text></g><g><title>core::str::pattern::StrSearcher::new (10 samples, 0.43%)</title><rect x="98.3550%" y="773" width="0.4329%" height="15" fill="rgb(212,170,8)" fg:x="2272" fg:w="10"/><text x="98.6050%" y="783.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (8 samples, 0.35%)</title><rect x="98.4416%" y="757" width="0.3463%" height="15" fill="rgb(217,113,29)" fg:x="2274" fg:w="8"/><text x="98.6916%" y="767.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (2 samples, 0.09%)</title><rect x="98.7013%" y="741" width="0.0866%" height="15" fill="rgb(237,30,3)" fg:x="2280" fg:w="2"/><text x="98.9513%" y="751.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.04%)</title><rect x="98.7879%" y="933" width="0.0433%" height="15" fill="rgb(227,19,28)" fg:x="2282" fg:w="1"/><text x="99.0379%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.04%)</title><rect x="98.7879%" y="917" width="0.0433%" height="15" fill="rgb(239,172,45)" fg:x="2282" fg:w="1"/><text x="99.0379%" y="927.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.04%)</title><rect x="98.7879%" y="901" width="0.0433%" height="15" fill="rgb(254,55,39)" fg:x="2282" fg:w="1"/><text x="99.0379%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="98.7879%" y="885" width="0.0433%" height="15" fill="rgb(249,208,12)" fg:x="2282" fg:w="1"/><text x="99.0379%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="98.7879%" y="869" width="0.0433%" height="15" fill="rgb(240,52,13)" fg:x="2282" fg:w="1"/><text x="99.0379%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="98.7879%" y="853" width="0.0433%" height="15" fill="rgb(252,149,13)" fg:x="2282" fg:w="1"/><text x="99.0379%" y="863.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.17%)</title><rect x="98.7879%" y="949" width="0.1732%" height="15" fill="rgb(232,81,48)" fg:x="2282" fg:w="4"/><text x="99.0379%" y="959.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.13%)</title><rect x="98.8312%" y="933" width="0.1299%" height="15" fill="rgb(222,144,2)" fg:x="2283" fg:w="3"/><text x="99.0812%" y="943.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="98.9177%" y="917" width="0.0433%" height="15" fill="rgb(216,81,32)" fg:x="2285" fg:w="1"/><text x="99.1677%" y="927.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.04%)</title><rect x="98.9177%" y="901" width="0.0433%" height="15" fill="rgb(244,78,51)" fg:x="2285" fg:w="1"/><text x="99.1677%" y="911.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.04%)</title><rect x="98.9610%" y="949" width="0.0433%" height="15" fill="rgb(217,66,21)" fg:x="2286" fg:w="1"/><text x="99.2110%" y="959.50"></text></g><g><title>__GI___libc_free (1 samples, 0.04%)</title><rect x="99.0043%" y="853" width="0.0433%" height="15" fill="rgb(247,101,42)" fg:x="2287" fg:w="1"/><text x="99.2543%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.09%)</title><rect x="99.0043%" y="949" width="0.0866%" height="15" fill="rgb(227,81,39)" fg:x="2287" fg:w="2"/><text x="99.2543%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.09%)</title><rect x="99.0043%" y="933" width="0.0866%" height="15" fill="rgb(220,223,44)" fg:x="2287" fg:w="2"/><text x="99.2543%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.09%)</title><rect x="99.0043%" y="917" width="0.0866%" height="15" fill="rgb(205,218,2)" fg:x="2287" fg:w="2"/><text x="99.2543%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.09%)</title><rect x="99.0043%" y="901" width="0.0866%" height="15" fill="rgb(212,207,28)" fg:x="2287" fg:w="2"/><text x="99.2543%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.09%)</title><rect x="99.0043%" y="885" width="0.0866%" height="15" fill="rgb(224,12,41)" fg:x="2287" fg:w="2"/><text x="99.2543%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.09%)</title><rect x="99.0043%" y="869" width="0.0866%" height="15" fill="rgb(216,118,12)" fg:x="2287" fg:w="2"/><text x="99.2543%" y="879.50"></text></g><g><title>_int_free (1 samples, 0.04%)</title><rect x="99.0476%" y="853" width="0.0433%" height="15" fill="rgb(252,97,46)" fg:x="2288" fg:w="1"/><text x="99.2976%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="99.0909%" y="885" width="0.0433%" height="15" fill="rgb(244,206,19)" fg:x="2289" fg:w="1"/><text x="99.3409%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="99.0909%" y="869" width="0.0433%" height="15" fill="rgb(231,84,31)" fg:x="2289" fg:w="1"/><text x="99.3409%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="99.0909%" y="853" width="0.0433%" height="15" fill="rgb(244,133,0)" fg:x="2289" fg:w="1"/><text x="99.3409%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="99.0909%" y="837" width="0.0433%" height="15" fill="rgb(223,15,50)" fg:x="2289" fg:w="1"/><text x="99.3409%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="99.0909%" y="821" width="0.0433%" height="15" fill="rgb(250,118,49)" fg:x="2289" fg:w="1"/><text x="99.3409%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.13%)</title><rect x="99.0909%" y="949" width="0.1299%" height="15" fill="rgb(248,25,38)" fg:x="2289" fg:w="3"/><text x="99.3409%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.13%)</title><rect x="99.0909%" y="933" width="0.1299%" height="15" fill="rgb(215,70,14)" fg:x="2289" fg:w="3"/><text x="99.3409%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.13%)</title><rect x="99.0909%" y="917" width="0.1299%" height="15" fill="rgb(215,28,15)" fg:x="2289" fg:w="3"/><text x="99.3409%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.13%)</title><rect x="99.0909%" y="901" width="0.1299%" height="15" fill="rgb(243,6,28)" fg:x="2289" fg:w="3"/><text x="99.3409%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.09%)</title><rect x="99.1342%" y="885" width="0.0866%" height="15" fill="rgb(222,130,1)" fg:x="2290" fg:w="2"/><text x="99.3842%" y="895.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.04%)</title><rect x="99.1775%" y="869" width="0.0433%" height="15" fill="rgb(236,166,44)" fg:x="2291" fg:w="1"/><text x="99.4275%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="99.1775%" y="853" width="0.0433%" height="15" fill="rgb(221,108,14)" fg:x="2291" fg:w="1"/><text x="99.4275%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="99.1775%" y="837" width="0.0433%" height="15" fill="rgb(252,3,45)" fg:x="2291" fg:w="1"/><text x="99.4275%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="99.1775%" y="821" width="0.0433%" height="15" fill="rgb(237,68,30)" fg:x="2291" fg:w="1"/><text x="99.4275%" y="831.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.04%)</title><rect x="99.1775%" y="805" width="0.0433%" height="15" fill="rgb(211,79,22)" fg:x="2291" fg:w="1"/><text x="99.4275%" y="815.50"></text></g><g><title>y2021::d12::main2::run (1,646 samples, 71.26%)</title><rect x="28.0087%" y="1221" width="71.2554%" height="15" fill="rgb(252,185,21)" fg:x="647" fg:w="1646"/><text x="28.2587%" y="1231.50">y2021::d12::main2::run</text></g><g><title>y2021::d12::main2::p02 (1,600 samples, 69.26%)</title><rect x="30.0000%" y="1205" width="69.2641%" height="15" fill="rgb(225,189,26)" fg:x="693" fg:w="1600"/><text x="30.2500%" y="1215.50">y2021::d12::main2::p02</text></g><g><title>y2021::d12::main2::traverse (1,511 samples, 65.41%)</title><rect x="33.8528%" y="1189" width="65.4113%" height="15" fill="rgb(241,30,40)" fg:x="782" fg:w="1511"/><text x="34.1028%" y="1199.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,511 samples, 65.41%)</title><rect x="33.8528%" y="1173" width="65.4113%" height="15" fill="rgb(235,215,44)" fg:x="782" fg:w="1511"/><text x="34.1028%" y="1183.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,511 samples, 65.41%)</title><rect x="33.8528%" y="1157" width="65.4113%" height="15" fill="rgb(205,8,29)" fg:x="782" fg:w="1511"/><text x="34.1028%" y="1167.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,511 samples, 65.41%)</title><rect x="33.8528%" y="1141" width="65.4113%" height="15" fill="rgb(241,137,42)" fg:x="782" fg:w="1511"/><text x="34.1028%" y="1151.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,509 samples, 65.32%)</title><rect x="33.9394%" y="1125" width="65.3247%" height="15" fill="rgb(237,155,2)" fg:x="784" fg:w="1509"/><text x="34.1894%" y="1135.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,505 samples, 65.15%)</title><rect x="34.1126%" y="1109" width="65.1515%" height="15" fill="rgb(245,29,42)" fg:x="788" fg:w="1505"/><text x="34.3626%" y="1119.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,491 samples, 64.55%)</title><rect x="34.7186%" y="1093" width="64.5455%" height="15" fill="rgb(234,101,35)" fg:x="802" fg:w="1491"/><text x="34.9686%" y="1103.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,448 samples, 62.68%)</title><rect x="36.5801%" y="1077" width="62.6840%" height="15" fill="rgb(228,64,37)" fg:x="845" fg:w="1448"/><text x="36.8301%" y="1087.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,369 samples, 59.26%)</title><rect x="40.0000%" y="1061" width="59.2641%" height="15" fill="rgb(217,214,36)" fg:x="924" fg:w="1369"/><text x="40.2500%" y="1071.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,118 samples, 48.40%)</title><rect x="50.8658%" y="1045" width="48.3983%" height="15" fill="rgb(243,70,3)" fg:x="1175" fg:w="1118"/><text x="51.1158%" y="1055.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (902 samples, 39.05%)</title><rect x="60.2165%" y="1029" width="39.0476%" height="15" fill="rgb(253,158,52)" fg:x="1391" fg:w="902"/><text x="60.4665%" y="1039.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (663 samples, 28.70%)</title><rect x="70.5628%" y="1013" width="28.7013%" height="15" fill="rgb(234,111,54)" fg:x="1630" fg:w="663"/><text x="70.8128%" y="1023.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (418 samples, 18.10%)</title><rect x="81.1688%" y="997" width="18.0952%" height="15" fill="rgb(217,70,32)" fg:x="1875" fg:w="418"/><text x="81.4188%" y="1007.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (172 samples, 7.45%)</title><rect x="91.8182%" y="981" width="7.4459%" height="15" fill="rgb(234,18,33)" fg:x="2121" fg:w="172"/><text x="92.0682%" y="991.50">y2021::d12..</text></g><g><title>y2021::d12::main2::traverse (47 samples, 2.03%)</title><rect x="97.2294%" y="965" width="2.0346%" height="15" fill="rgb(234,12,49)" fg:x="2246" fg:w="47"/><text x="97.4794%" y="975.50">y..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.04%)</title><rect x="99.2208%" y="949" width="0.0433%" height="15" fill="rgb(236,10,21)" fg:x="2292" fg:w="1"/><text x="99.4708%" y="959.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.04%)</title><rect x="99.2208%" y="933" width="0.0433%" height="15" fill="rgb(248,182,45)" fg:x="2292" fg:w="1"/><text x="99.4708%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.04%)</title><rect x="99.2208%" y="917" width="0.0433%" height="15" fill="rgb(217,95,36)" fg:x="2292" fg:w="1"/><text x="99.4708%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="99.2208%" y="901" width="0.0433%" height="15" fill="rgb(212,110,31)" fg:x="2292" fg:w="1"/><text x="99.4708%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="99.2208%" y="885" width="0.0433%" height="15" fill="rgb(206,32,53)" fg:x="2292" fg:w="1"/><text x="99.4708%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="99.2208%" y="869" width="0.0433%" height="15" fill="rgb(246,141,37)" fg:x="2292" fg:w="1"/><text x="99.4708%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.04%)</title><rect x="99.2208%" y="853" width="0.0433%" height="15" fill="rgb(219,16,7)" fg:x="2292" fg:w="1"/><text x="99.4708%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="99.2208%" y="837" width="0.0433%" height="15" fill="rgb(230,205,45)" fg:x="2292" fg:w="1"/><text x="99.4708%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="99.2208%" y="821" width="0.0433%" height="15" fill="rgb(231,43,49)" fg:x="2292" fg:w="1"/><text x="99.4708%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="99.2208%" y="805" width="0.0433%" height="15" fill="rgb(212,106,34)" fg:x="2292" fg:w="1"/><text x="99.4708%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.04%)</title><rect x="99.2208%" y="789" width="0.0433%" height="15" fill="rgb(206,83,17)" fg:x="2292" fg:w="1"/><text x="99.4708%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="99.2208%" y="773" width="0.0433%" height="15" fill="rgb(244,154,49)" fg:x="2292" fg:w="1"/><text x="99.4708%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="99.2641%" y="1173" width="0.0433%" height="15" fill="rgb(244,149,49)" fg:x="2293" fg:w="1"/><text x="99.5141%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="99.2641%" y="1157" width="0.0433%" height="15" fill="rgb(227,134,18)" fg:x="2293" fg:w="1"/><text x="99.5141%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="99.2641%" y="1141" width="0.0433%" height="15" fill="rgb(237,116,36)" fg:x="2293" fg:w="1"/><text x="99.5141%" y="1151.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="99.2641%" y="1125" width="0.0433%" height="15" fill="rgb(205,129,40)" fg:x="2293" fg:w="1"/><text x="99.5141%" y="1135.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="99.2641%" y="1109" width="0.0433%" height="15" fill="rgb(236,178,4)" fg:x="2293" fg:w="1"/><text x="99.5141%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="99.2641%" y="1093" width="0.0433%" height="15" fill="rgb(251,76,53)" fg:x="2293" fg:w="1"/><text x="99.5141%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="99.2641%" y="1077" width="0.0433%" height="15" fill="rgb(242,92,40)" fg:x="2293" fg:w="1"/><text x="99.5141%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="99.2641%" y="1061" width="0.0433%" height="15" fill="rgb(209,45,30)" fg:x="2293" fg:w="1"/><text x="99.5141%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="99.2641%" y="1045" width="0.0433%" height="15" fill="rgb(218,157,36)" fg:x="2293" fg:w="1"/><text x="99.5141%" y="1055.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="99.2641%" y="1029" width="0.0433%" height="15" fill="rgb(222,186,16)" fg:x="2293" fg:w="1"/><text x="99.5141%" y="1039.50"></text></g><g><title>y2021::d13::main::parse_input::{{closure}} (1 samples, 0.04%)</title><rect x="99.2641%" y="1013" width="0.0433%" height="15" fill="rgb(254,72,35)" fg:x="2293" fg:w="1"/><text x="99.5141%" y="1023.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 0.04%)</title><rect x="99.2641%" y="997" width="0.0433%" height="15" fill="rgb(224,25,35)" fg:x="2293" fg:w="1"/><text x="99.5141%" y="1007.50"></text></g><g><title>&lt;y2021::types::point::Point as core::str::traits::FromStr&gt;::from_str (1 samples, 0.04%)</title><rect x="99.2641%" y="981" width="0.0433%" height="15" fill="rgb(206,135,52)" fg:x="2293" fg:w="1"/><text x="99.5141%" y="991.50"></text></g><g><title>__GI___libc_free (1 samples, 0.04%)</title><rect x="99.2641%" y="965" width="0.0433%" height="15" fill="rgb(229,174,47)" fg:x="2293" fg:w="1"/><text x="99.5141%" y="975.50"></text></g><g><title>y2021::d13::main::p01 (2 samples, 0.09%)</title><rect x="99.2641%" y="1205" width="0.0866%" height="15" fill="rgb(242,184,21)" fg:x="2293" fg:w="2"/><text x="99.5141%" y="1215.50"></text></g><g><title>y2021::d13::main::parse_input (2 samples, 0.09%)</title><rect x="99.2641%" y="1189" width="0.0866%" height="15" fill="rgb(213,22,45)" fg:x="2293" fg:w="2"/><text x="99.5141%" y="1199.50"></text></g><g><title>std::fs::File::open (1 samples, 0.04%)</title><rect x="99.3074%" y="1173" width="0.0433%" height="15" fill="rgb(237,81,54)" fg:x="2294" fg:w="1"/><text x="99.5574%" y="1183.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.04%)</title><rect x="99.3074%" y="1157" width="0.0433%" height="15" fill="rgb(248,177,18)" fg:x="2294" fg:w="1"/><text x="99.5574%" y="1167.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.04%)</title><rect x="99.3074%" y="1141" width="0.0433%" height="15" fill="rgb(254,31,16)" fg:x="2294" fg:w="1"/><text x="99.5574%" y="1151.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.04%)</title><rect x="99.3074%" y="1125" width="0.0433%" height="15" fill="rgb(235,20,31)" fg:x="2294" fg:w="1"/><text x="99.5574%" y="1135.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.04%)</title><rect x="99.3074%" y="1109" width="0.0433%" height="15" fill="rgb(240,56,43)" fg:x="2294" fg:w="1"/><text x="99.5574%" y="1119.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.04%)</title><rect x="99.3074%" y="1093" width="0.0433%" height="15" fill="rgb(237,197,51)" fg:x="2294" fg:w="1"/><text x="99.5574%" y="1103.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.04%)</title><rect x="99.3074%" y="1077" width="0.0433%" height="15" fill="rgb(241,162,44)" fg:x="2294" fg:w="1"/><text x="99.5574%" y="1087.50"></text></g><g><title>__libc_open64 (1 samples, 0.04%)</title><rect x="99.3074%" y="1061" width="0.0433%" height="15" fill="rgb(224,23,20)" fg:x="2294" fg:w="1"/><text x="99.5574%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="99.3074%" y="1045" width="0.0433%" height="15" fill="rgb(250,109,34)" fg:x="2294" fg:w="1"/><text x="99.5574%" y="1055.50"></text></g><g><title>do_syscall_64 (1 samples, 0.04%)</title><rect x="99.3074%" y="1029" width="0.0433%" height="15" fill="rgb(214,175,50)" fg:x="2294" fg:w="1"/><text x="99.5574%" y="1039.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.04%)</title><rect x="99.3074%" y="1013" width="0.0433%" height="15" fill="rgb(213,182,5)" fg:x="2294" fg:w="1"/><text x="99.5574%" y="1023.50"></text></g><g><title>do_sys_open (1 samples, 0.04%)</title><rect x="99.3074%" y="997" width="0.0433%" height="15" fill="rgb(209,199,19)" fg:x="2294" fg:w="1"/><text x="99.5574%" y="1007.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.04%)</title><rect x="99.3074%" y="981" width="0.0433%" height="15" fill="rgb(236,224,42)" fg:x="2294" fg:w="1"/><text x="99.5574%" y="991.50"></text></g><g><title>do_filp_open (1 samples, 0.04%)</title><rect x="99.3074%" y="965" width="0.0433%" height="15" fill="rgb(246,226,29)" fg:x="2294" fg:w="1"/><text x="99.5574%" y="975.50"></text></g><g><title>may_open (1 samples, 0.04%)</title><rect x="99.3074%" y="949" width="0.0433%" height="15" fill="rgb(227,223,11)" fg:x="2294" fg:w="1"/><text x="99.5574%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="99.3506%" y="1189" width="0.0433%" height="15" fill="rgb(219,7,51)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="1199.50"></text></g><g><title>y2021::d13::main::p02::{{closure}} (1 samples, 0.04%)</title><rect x="99.3506%" y="1173" width="0.0433%" height="15" fill="rgb(245,167,10)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="1183.50"></text></g><g><title>y2021::d13::main::fold_points (1 samples, 0.04%)</title><rect x="99.3506%" y="1157" width="0.0433%" height="15" fill="rgb(237,224,16)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="99.3506%" y="1141" width="0.0433%" height="15" fill="rgb(226,132,13)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="99.3506%" y="1125" width="0.0433%" height="15" fill="rgb(214,140,3)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="1135.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="99.3506%" y="1109" width="0.0433%" height="15" fill="rgb(221,177,4)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="1119.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="99.3506%" y="1093" width="0.0433%" height="15" fill="rgb(238,139,3)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="1103.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="99.3506%" y="1077" width="0.0433%" height="15" fill="rgb(216,17,39)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="99.3506%" y="1061" width="0.0433%" height="15" fill="rgb(238,120,9)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="99.3506%" y="1045" width="0.0433%" height="15" fill="rgb(244,92,53)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="99.3506%" y="1029" width="0.0433%" height="15" fill="rgb(224,148,33)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="99.3506%" y="1013" width="0.0433%" height="15" fill="rgb(243,6,36)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="1023.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="99.3506%" y="997" width="0.0433%" height="15" fill="rgb(230,102,11)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="99.3506%" y="981" width="0.0433%" height="15" fill="rgb(234,148,36)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.04%)</title><rect x="99.3506%" y="965" width="0.0433%" height="15" fill="rgb(251,153,25)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="975.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1 samples, 0.04%)</title><rect x="99.3506%" y="949" width="0.0433%" height="15" fill="rgb(215,129,8)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="99.3506%" y="933" width="0.0433%" height="15" fill="rgb(224,128,35)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="943.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.04%)</title><rect x="99.3506%" y="917" width="0.0433%" height="15" fill="rgb(237,56,52)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="927.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (1 samples, 0.04%)</title><rect x="99.3506%" y="901" width="0.0433%" height="15" fill="rgb(234,213,19)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.04%)</title><rect x="99.3506%" y="885" width="0.0433%" height="15" fill="rgb(252,82,23)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="895.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.04%)</title><rect x="99.3506%" y="869" width="0.0433%" height="15" fill="rgb(254,201,21)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="99.3506%" y="853" width="0.0433%" height="15" fill="rgb(250,186,11)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="99.3506%" y="837" width="0.0433%" height="15" fill="rgb(211,174,5)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="99.3506%" y="821" width="0.0433%" height="15" fill="rgb(214,121,10)" fg:x="2295" fg:w="1"/><text x="99.6006%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="99.3939%" y="1157" width="0.0433%" height="15" fill="rgb(241,66,2)" fg:x="2296" fg:w="1"/><text x="99.6439%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="99.3939%" y="1141" width="0.0433%" height="15" fill="rgb(220,167,19)" fg:x="2296" fg:w="1"/><text x="99.6439%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="99.3939%" y="1125" width="0.0433%" height="15" fill="rgb(231,54,50)" fg:x="2296" fg:w="1"/><text x="99.6439%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="99.3939%" y="1109" width="0.0433%" height="15" fill="rgb(239,217,53)" fg:x="2296" fg:w="1"/><text x="99.6439%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.04%)</title><rect x="99.3939%" y="1093" width="0.0433%" height="15" fill="rgb(248,8,0)" fg:x="2296" fg:w="1"/><text x="99.6439%" y="1103.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="99.3939%" y="1077" width="0.0433%" height="15" fill="rgb(229,118,37)" fg:x="2296" fg:w="1"/><text x="99.6439%" y="1087.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.04%)</title><rect x="99.3939%" y="1061" width="0.0433%" height="15" fill="rgb(253,223,43)" fg:x="2296" fg:w="1"/><text x="99.6439%" y="1071.50"></text></g><g><title>y2021::d13::main::run (5 samples, 0.22%)</title><rect x="99.2641%" y="1221" width="0.2165%" height="15" fill="rgb(211,77,36)" fg:x="2293" fg:w="5"/><text x="99.5141%" y="1231.50"></text></g><g><title>y2021::d13::main::p02 (3 samples, 0.13%)</title><rect x="99.3506%" y="1205" width="0.1299%" height="15" fill="rgb(219,3,53)" fg:x="2295" fg:w="3"/><text x="99.6006%" y="1215.50"></text></g><g><title>y2021::d13::main::parse_input (2 samples, 0.09%)</title><rect x="99.3939%" y="1189" width="0.0866%" height="15" fill="rgb(244,45,42)" fg:x="2296" fg:w="2"/><text x="99.6439%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.09%)</title><rect x="99.3939%" y="1173" width="0.0866%" height="15" fill="rgb(225,95,27)" fg:x="2296" fg:w="2"/><text x="99.6439%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="99.4372%" y="1157" width="0.0433%" height="15" fill="rgb(207,74,8)" fg:x="2297" fg:w="1"/><text x="99.6872%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="99.4372%" y="1141" width="0.0433%" height="15" fill="rgb(243,63,36)" fg:x="2297" fg:w="1"/><text x="99.6872%" y="1151.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="99.4372%" y="1125" width="0.0433%" height="15" fill="rgb(211,180,12)" fg:x="2297" fg:w="1"/><text x="99.6872%" y="1135.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="99.4372%" y="1109" width="0.0433%" height="15" fill="rgb(254,166,49)" fg:x="2297" fg:w="1"/><text x="99.6872%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="99.4372%" y="1093" width="0.0433%" height="15" fill="rgb(205,19,0)" fg:x="2297" fg:w="1"/><text x="99.6872%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="99.4372%" y="1077" width="0.0433%" height="15" fill="rgb(224,172,32)" fg:x="2297" fg:w="1"/><text x="99.6872%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="99.4372%" y="1061" width="0.0433%" height="15" fill="rgb(254,136,30)" fg:x="2297" fg:w="1"/><text x="99.6872%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="99.4372%" y="1045" width="0.0433%" height="15" fill="rgb(246,19,35)" fg:x="2297" fg:w="1"/><text x="99.6872%" y="1055.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="99.4372%" y="1029" width="0.0433%" height="15" fill="rgb(219,24,36)" fg:x="2297" fg:w="1"/><text x="99.6872%" y="1039.50"></text></g><g><title>y2021::d13::main::parse_input::{{closure}} (1 samples, 0.04%)</title><rect x="99.4372%" y="1013" width="0.0433%" height="15" fill="rgb(251,55,1)" fg:x="2297" fg:w="1"/><text x="99.6872%" y="1023.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 0.04%)</title><rect x="99.4372%" y="997" width="0.0433%" height="15" fill="rgb(218,117,39)" fg:x="2297" fg:w="1"/><text x="99.6872%" y="1007.50"></text></g><g><title>&lt;y2021::types::point::Point as core::str::traits::FromStr&gt;::from_str (1 samples, 0.04%)</title><rect x="99.4372%" y="981" width="0.0433%" height="15" fill="rgb(248,169,11)" fg:x="2297" fg:w="1"/><text x="99.6872%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 0.04%)</title><rect x="99.4372%" y="965" width="0.0433%" height="15" fill="rgb(244,40,44)" fg:x="2297" fg:w="1"/><text x="99.6872%" y="975.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u64&gt;::from_str (1 samples, 0.04%)</title><rect x="99.4372%" y="949" width="0.0433%" height="15" fill="rgb(234,62,37)" fg:x="2297" fg:w="1"/><text x="99.6872%" y="959.50"></text></g><g><title>core::num::from_str_radix (1 samples, 0.04%)</title><rect x="99.4372%" y="933" width="0.0433%" height="15" fill="rgb(207,117,42)" fg:x="2297" fg:w="1"/><text x="99.6872%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="99.4805%" y="1189" width="0.0433%" height="15" fill="rgb(213,43,2)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="1199.50"></text></g><g><title>y2021::d14::main::p01::{{closure}} (1 samples, 0.04%)</title><rect x="99.4805%" y="1173" width="0.0433%" height="15" fill="rgb(244,202,51)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="1183.50"></text></g><g><title>y2021::d14::main::better_step (1 samples, 0.04%)</title><rect x="99.4805%" y="1157" width="0.0433%" height="15" fill="rgb(253,174,46)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="99.4805%" y="1141" width="0.0433%" height="15" fill="rgb(251,23,1)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="99.4805%" y="1125" width="0.0433%" height="15" fill="rgb(253,26,1)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="99.4805%" y="1109" width="0.0433%" height="15" fill="rgb(216,89,31)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="99.4805%" y="1093" width="0.0433%" height="15" fill="rgb(209,109,5)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="99.4805%" y="1077" width="0.0433%" height="15" fill="rgb(229,63,13)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="1087.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="99.4805%" y="1061" width="0.0433%" height="15" fill="rgb(238,137,54)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (1 samples, 0.04%)</title><rect x="99.4805%" y="1045" width="0.0433%" height="15" fill="rgb(228,1,9)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="99.4805%" y="1029" width="0.0433%" height="15" fill="rgb(249,120,48)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.04%)</title><rect x="99.4805%" y="1013" width="0.0433%" height="15" fill="rgb(209,72,36)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="1023.50"></text></g><g><title>y2021::d14::main::better_step::{{closure}} (1 samples, 0.04%)</title><rect x="99.4805%" y="997" width="0.0433%" height="15" fill="rgb(247,98,49)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.04%)</title><rect x="99.4805%" y="981" width="0.0433%" height="15" fill="rgb(233,75,36)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="991.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.04%)</title><rect x="99.4805%" y="965" width="0.0433%" height="15" fill="rgb(225,14,24)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="975.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.04%)</title><rect x="99.4805%" y="949" width="0.0433%" height="15" fill="rgb(237,193,20)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.04%)</title><rect x="99.4805%" y="933" width="0.0433%" height="15" fill="rgb(239,122,19)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.04%)</title><rect x="99.4805%" y="917" width="0.0433%" height="15" fill="rgb(231,220,10)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="99.4805%" y="901" width="0.0433%" height="15" fill="rgb(220,66,15)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="99.4805%" y="885" width="0.0433%" height="15" fill="rgb(215,171,52)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="99.4805%" y="869" width="0.0433%" height="15" fill="rgb(241,169,50)" fg:x="2298" fg:w="1"/><text x="99.7305%" y="879.50"></text></g><g><title>y2021::d14::main::p01 (2 samples, 0.09%)</title><rect x="99.4805%" y="1205" width="0.0866%" height="15" fill="rgb(236,189,0)" fg:x="2298" fg:w="2"/><text x="99.7305%" y="1215.50"></text></g><g><title>y2021::d14::main::parse_input (1 samples, 0.04%)</title><rect x="99.5238%" y="1189" width="0.0433%" height="15" fill="rgb(217,147,20)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="99.5238%" y="1173" width="0.0433%" height="15" fill="rgb(206,188,39)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="99.5238%" y="1157" width="0.0433%" height="15" fill="rgb(227,118,25)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="99.5238%" y="1141" width="0.0433%" height="15" fill="rgb(248,171,40)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="1151.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="99.5238%" y="1125" width="0.0433%" height="15" fill="rgb(251,90,54)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="99.5238%" y="1109" width="0.0433%" height="15" fill="rgb(234,11,46)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="99.5238%" y="1093" width="0.0433%" height="15" fill="rgb(229,134,13)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="99.5238%" y="1077" width="0.0433%" height="15" fill="rgb(223,129,3)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="99.5238%" y="1061" width="0.0433%" height="15" fill="rgb(221,124,13)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="1071.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1 samples, 0.04%)</title><rect x="99.5238%" y="1045" width="0.0433%" height="15" fill="rgb(234,3,18)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="1055.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="99.5238%" y="1029" width="0.0433%" height="15" fill="rgb(249,199,20)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="1039.50"></text></g><g><title>y2021::d14::main::parse_input::{{closure}} (1 samples, 0.04%)</title><rect x="99.5238%" y="1013" width="0.0433%" height="15" fill="rgb(224,134,6)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="1023.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="99.5238%" y="997" width="0.0433%" height="15" fill="rgb(254,83,26)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="1007.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.04%)</title><rect x="99.5238%" y="981" width="0.0433%" height="15" fill="rgb(217,88,9)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="991.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.04%)</title><rect x="99.5238%" y="965" width="0.0433%" height="15" fill="rgb(225,73,2)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="975.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.04%)</title><rect x="99.5238%" y="949" width="0.0433%" height="15" fill="rgb(226,44,39)" fg:x="2299" fg:w="1"/><text x="99.7738%" y="959.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (1 samples, 0.04%)</title><rect x="99.5671%" y="981" width="0.0433%" height="15" fill="rgb(228,53,17)" fg:x="2300" fg:w="1"/><text x="99.8171%" y="991.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.04%)</title><rect x="99.5671%" y="965" width="0.0433%" height="15" fill="rgb(212,27,27)" fg:x="2300" fg:w="1"/><text x="99.8171%" y="975.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.04%)</title><rect x="99.5671%" y="949" width="0.0433%" height="15" fill="rgb(241,50,6)" fg:x="2300" fg:w="1"/><text x="99.8171%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.04%)</title><rect x="99.5671%" y="933" width="0.0433%" height="15" fill="rgb(225,28,51)" fg:x="2300" fg:w="1"/><text x="99.8171%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.04%)</title><rect x="99.5671%" y="917" width="0.0433%" height="15" fill="rgb(215,33,16)" fg:x="2300" fg:w="1"/><text x="99.8171%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.04%)</title><rect x="99.5671%" y="901" width="0.0433%" height="15" fill="rgb(243,40,39)" fg:x="2300" fg:w="1"/><text x="99.8171%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.04%)</title><rect x="99.5671%" y="885" width="0.0433%" height="15" fill="rgb(225,11,42)" fg:x="2300" fg:w="1"/><text x="99.8171%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.04%)</title><rect x="99.5671%" y="869" width="0.0433%" height="15" fill="rgb(241,220,38)" fg:x="2300" fg:w="1"/><text x="99.8171%" y="879.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.04%)</title><rect x="99.6104%" y="949" width="0.0433%" height="15" fill="rgb(244,52,35)" fg:x="2301" fg:w="1"/><text x="99.8604%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.04%)</title><rect x="99.6104%" y="933" width="0.0433%" height="15" fill="rgb(246,42,46)" fg:x="2301" fg:w="1"/><text x="99.8604%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.04%)</title><rect x="99.6104%" y="917" width="0.0433%" height="15" fill="rgb(205,184,13)" fg:x="2301" fg:w="1"/><text x="99.8604%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.04%)</title><rect x="99.6104%" y="901" width="0.0433%" height="15" fill="rgb(209,48,36)" fg:x="2301" fg:w="1"/><text x="99.8604%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="99.6104%" y="885" width="0.0433%" height="15" fill="rgb(244,34,51)" fg:x="2301" fg:w="1"/><text x="99.8604%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="99.6104%" y="869" width="0.0433%" height="15" fill="rgb(221,107,33)" fg:x="2301" fg:w="1"/><text x="99.8604%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="99.6104%" y="853" width="0.0433%" height="15" fill="rgb(224,203,12)" fg:x="2301" fg:w="1"/><text x="99.8604%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (3 samples, 0.13%)</title><rect x="99.5671%" y="1045" width="0.1299%" height="15" fill="rgb(230,215,18)" fg:x="2300" fg:w="3"/><text x="99.8171%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.13%)</title><rect x="99.5671%" y="1029" width="0.1299%" height="15" fill="rgb(206,185,35)" fg:x="2300" fg:w="3"/><text x="99.8171%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.13%)</title><rect x="99.5671%" y="1013" width="0.1299%" height="15" fill="rgb(228,140,34)" fg:x="2300" fg:w="3"/><text x="99.8171%" y="1023.50"></text></g><g><title>y2021::d14::main::better_step::{{closure}} (3 samples, 0.13%)</title><rect x="99.5671%" y="997" width="0.1299%" height="15" fill="rgb(208,93,13)" fg:x="2300" fg:w="3"/><text x="99.8171%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.09%)</title><rect x="99.6104%" y="981" width="0.0866%" height="15" fill="rgb(221,193,39)" fg:x="2301" fg:w="2"/><text x="99.8604%" y="991.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.09%)</title><rect x="99.6104%" y="965" width="0.0866%" height="15" fill="rgb(241,132,34)" fg:x="2301" fg:w="2"/><text x="99.8604%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="99.6537%" y="949" width="0.0433%" height="15" fill="rgb(221,141,10)" fg:x="2302" fg:w="1"/><text x="99.9037%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="99.6537%" y="933" width="0.0433%" height="15" fill="rgb(226,90,31)" fg:x="2302" fg:w="1"/><text x="99.9037%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="99.6537%" y="917" width="0.0433%" height="15" fill="rgb(243,75,5)" fg:x="2302" fg:w="1"/><text x="99.9037%" y="927.50"></text></g><g><title>__libc_start_main (2,260 samples, 97.84%)</title><rect x="1.9048%" y="1461" width="97.8355%" height="15" fill="rgb(227,156,21)" fg:x="44" fg:w="2260"/><text x="2.1548%" y="1471.50">__libc_start_main</text></g><g><title>main (2,260 samples, 97.84%)</title><rect x="1.9048%" y="1445" width="97.8355%" height="15" fill="rgb(250,195,8)" fg:x="44" fg:w="2260"/><text x="2.1548%" y="1455.50">main</text></g><g><title>std::rt::lang_start_internal (2,260 samples, 97.84%)</title><rect x="1.9048%" y="1429" width="97.8355%" height="15" fill="rgb(220,134,5)" fg:x="44" fg:w="2260"/><text x="2.1548%" y="1439.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (2,260 samples, 97.84%)</title><rect x="1.9048%" y="1413" width="97.8355%" height="15" fill="rgb(246,106,34)" fg:x="44" fg:w="2260"/><text x="2.1548%" y="1423.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,260 samples, 97.84%)</title><rect x="1.9048%" y="1397" width="97.8355%" height="15" fill="rgb(205,1,4)" fg:x="44" fg:w="2260"/><text x="2.1548%" y="1407.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,260 samples, 97.84%)</title><rect x="1.9048%" y="1381" width="97.8355%" height="15" fill="rgb(224,151,29)" fg:x="44" fg:w="2260"/><text x="2.1548%" y="1391.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (2,260 samples, 97.84%)</title><rect x="1.9048%" y="1365" width="97.8355%" height="15" fill="rgb(251,196,0)" fg:x="44" fg:w="2260"/><text x="2.1548%" y="1375.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (2,260 samples, 97.84%)</title><rect x="1.9048%" y="1349" width="97.8355%" height="15" fill="rgb(212,127,0)" fg:x="44" fg:w="2260"/><text x="2.1548%" y="1359.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,260 samples, 97.84%)</title><rect x="1.9048%" y="1333" width="97.8355%" height="15" fill="rgb(236,71,53)" fg:x="44" fg:w="2260"/><text x="2.1548%" y="1343.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,260 samples, 97.84%)</title><rect x="1.9048%" y="1317" width="97.8355%" height="15" fill="rgb(227,99,0)" fg:x="44" fg:w="2260"/><text x="2.1548%" y="1327.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2,260 samples, 97.84%)</title><rect x="1.9048%" y="1301" width="97.8355%" height="15" fill="rgb(239,89,21)" fg:x="44" fg:w="2260"/><text x="2.1548%" y="1311.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (2,260 samples, 97.84%)</title><rect x="1.9048%" y="1285" width="97.8355%" height="15" fill="rgb(243,122,19)" fg:x="44" fg:w="2260"/><text x="2.1548%" y="1295.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,260 samples, 97.84%)</title><rect x="1.9048%" y="1269" width="97.8355%" height="15" fill="rgb(229,192,45)" fg:x="44" fg:w="2260"/><text x="2.1548%" y="1279.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (2,259 samples, 97.79%)</title><rect x="1.9481%" y="1253" width="97.7922%" height="15" fill="rgb(235,165,35)" fg:x="45" fg:w="2259"/><text x="2.1981%" y="1263.50">core::ops::function::FnOnce::call_once</text></g><g><title>y2021::main (2,259 samples, 97.79%)</title><rect x="1.9481%" y="1237" width="97.7922%" height="15" fill="rgb(253,202,0)" fg:x="45" fg:w="2259"/><text x="2.1981%" y="1247.50">y2021::main</text></g><g><title>y2021::d14::main::run (6 samples, 0.26%)</title><rect x="99.4805%" y="1221" width="0.2597%" height="15" fill="rgb(235,51,20)" fg:x="2298" fg:w="6"/><text x="99.7305%" y="1231.50"></text></g><g><title>y2021::d14::main::p02 (4 samples, 0.17%)</title><rect x="99.5671%" y="1205" width="0.1732%" height="15" fill="rgb(218,95,46)" fg:x="2300" fg:w="4"/><text x="99.8171%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.17%)</title><rect x="99.5671%" y="1189" width="0.1732%" height="15" fill="rgb(212,81,10)" fg:x="2300" fg:w="4"/><text x="99.8171%" y="1199.50"></text></g><g><title>y2021::d14::main::p02::{{closure}} (4 samples, 0.17%)</title><rect x="99.5671%" y="1173" width="0.1732%" height="15" fill="rgb(240,59,0)" fg:x="2300" fg:w="4"/><text x="99.8171%" y="1183.50"></text></g><g><title>y2021::d14::main::better_step (4 samples, 0.17%)</title><rect x="99.5671%" y="1157" width="0.1732%" height="15" fill="rgb(212,191,42)" fg:x="2300" fg:w="4"/><text x="99.8171%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.17%)</title><rect x="99.5671%" y="1141" width="0.1732%" height="15" fill="rgb(233,140,3)" fg:x="2300" fg:w="4"/><text x="99.8171%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.17%)</title><rect x="99.5671%" y="1125" width="0.1732%" height="15" fill="rgb(215,69,23)" fg:x="2300" fg:w="4"/><text x="99.8171%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.17%)</title><rect x="99.5671%" y="1109" width="0.1732%" height="15" fill="rgb(240,202,20)" fg:x="2300" fg:w="4"/><text x="99.8171%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.17%)</title><rect x="99.5671%" y="1093" width="0.1732%" height="15" fill="rgb(209,146,50)" fg:x="2300" fg:w="4"/><text x="99.8171%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.17%)</title><rect x="99.5671%" y="1077" width="0.1732%" height="15" fill="rgb(253,102,54)" fg:x="2300" fg:w="4"/><text x="99.8171%" y="1087.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.17%)</title><rect x="99.5671%" y="1061" width="0.1732%" height="15" fill="rgb(250,173,47)" fg:x="2300" fg:w="4"/><text x="99.8171%" y="1071.50"></text></g><g><title>y2021::d14::main::better_step::{{closure}} (1 samples, 0.04%)</title><rect x="99.6970%" y="1045" width="0.0433%" height="15" fill="rgb(232,142,7)" fg:x="2303" fg:w="1"/><text x="99.9470%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.04%)</title><rect x="99.6970%" y="1029" width="0.0433%" height="15" fill="rgb(230,157,47)" fg:x="2303" fg:w="1"/><text x="99.9470%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.04%)</title><rect x="99.6970%" y="1013" width="0.0433%" height="15" fill="rgb(214,177,35)" fg:x="2303" fg:w="1"/><text x="99.9470%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="99.6970%" y="997" width="0.0433%" height="15" fill="rgb(234,119,46)" fg:x="2303" fg:w="1"/><text x="99.9470%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="99.6970%" y="981" width="0.0433%" height="15" fill="rgb(241,180,50)" fg:x="2303" fg:w="1"/><text x="99.9470%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="99.6970%" y="965" width="0.0433%" height="15" fill="rgb(221,54,25)" fg:x="2303" fg:w="1"/><text x="99.9470%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="99.6970%" y="949" width="0.0433%" height="15" fill="rgb(209,157,44)" fg:x="2303" fg:w="1"/><text x="99.9470%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="99.6970%" y="933" width="0.0433%" height="15" fill="rgb(246,115,41)" fg:x="2303" fg:w="1"/><text x="99.9470%" y="943.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.04%)</title><rect x="99.7403%" y="1397" width="0.0433%" height="15" fill="rgb(229,86,1)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1407.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.04%)</title><rect x="99.7403%" y="1381" width="0.0433%" height="15" fill="rgb(240,108,53)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1391.50"></text></g><g><title>openaux (1 samples, 0.04%)</title><rect x="99.7403%" y="1365" width="0.0433%" height="15" fill="rgb(227,134,2)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1375.50"></text></g><g><title>_dl_map_object (1 samples, 0.04%)</title><rect x="99.7403%" y="1349" width="0.0433%" height="15" fill="rgb(213,129,25)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1359.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.04%)</title><rect x="99.7403%" y="1333" width="0.0433%" height="15" fill="rgb(226,35,21)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1343.50"></text></g><g><title>_dl_map_segments (1 samples, 0.04%)</title><rect x="99.7403%" y="1317" width="0.0433%" height="15" fill="rgb(208,129,26)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1327.50"></text></g><g><title>__mmap64 (1 samples, 0.04%)</title><rect x="99.7403%" y="1301" width="0.0433%" height="15" fill="rgb(224,83,6)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1311.50"></text></g><g><title>__mmap64 (1 samples, 0.04%)</title><rect x="99.7403%" y="1285" width="0.0433%" height="15" fill="rgb(227,52,39)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1295.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="99.7403%" y="1269" width="0.0433%" height="15" fill="rgb(241,30,17)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1279.50"></text></g><g><title>do_syscall_64 (1 samples, 0.04%)</title><rect x="99.7403%" y="1253" width="0.0433%" height="15" fill="rgb(246,186,42)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1263.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.04%)</title><rect x="99.7403%" y="1237" width="0.0433%" height="15" fill="rgb(221,169,15)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1247.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.04%)</title><rect x="99.7403%" y="1221" width="0.0433%" height="15" fill="rgb(235,108,21)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1231.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.04%)</title><rect x="99.7403%" y="1205" width="0.0433%" height="15" fill="rgb(219,148,30)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1215.50"></text></g><g><title>do_mmap (1 samples, 0.04%)</title><rect x="99.7403%" y="1189" width="0.0433%" height="15" fill="rgb(220,109,5)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1199.50"></text></g><g><title>mmap_region (1 samples, 0.04%)</title><rect x="99.7403%" y="1173" width="0.0433%" height="15" fill="rgb(213,203,48)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1183.50"></text></g><g><title>__do_munmap (1 samples, 0.04%)</title><rect x="99.7403%" y="1157" width="0.0433%" height="15" fill="rgb(244,71,33)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1167.50"></text></g><g><title>__split_vma (1 samples, 0.04%)</title><rect x="99.7403%" y="1141" width="0.0433%" height="15" fill="rgb(209,23,2)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1151.50"></text></g><g><title>__vma_adjust (1 samples, 0.04%)</title><rect x="99.7403%" y="1125" width="0.0433%" height="15" fill="rgb(219,97,7)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1135.50"></text></g><g><title>__vma_link_file (1 samples, 0.04%)</title><rect x="99.7403%" y="1109" width="0.0433%" height="15" fill="rgb(216,161,23)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1119.50"></text></g><g><title>vma_interval_tree_insert (1 samples, 0.04%)</title><rect x="99.7403%" y="1093" width="0.0433%" height="15" fill="rgb(207,45,42)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1103.50"></text></g><g><title>__rb_insert_augmented (1 samples, 0.04%)</title><rect x="99.7403%" y="1077" width="0.0433%" height="15" fill="rgb(241,61,4)" fg:x="2304" fg:w="1"/><text x="99.9903%" y="1087.50"></text></g><g><title>_dl_start_final (2 samples, 0.09%)</title><rect x="99.7403%" y="1445" width="0.0866%" height="15" fill="rgb(236,170,1)" fg:x="2304" fg:w="2"/><text x="99.9903%" y="1455.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.09%)</title><rect x="99.7403%" y="1429" width="0.0866%" height="15" fill="rgb(239,72,5)" fg:x="2304" fg:w="2"/><text x="99.9903%" y="1439.50"></text></g><g><title>dl_main (2 samples, 0.09%)</title><rect x="99.7403%" y="1413" width="0.0866%" height="15" fill="rgb(214,13,50)" fg:x="2304" fg:w="2"/><text x="99.9903%" y="1423.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.04%)</title><rect x="99.7835%" y="1397" width="0.0433%" height="15" fill="rgb(224,88,9)" fg:x="2305" fg:w="1"/><text x="100.0335%" y="1407.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.04%)</title><rect x="99.7835%" y="1381" width="0.0433%" height="15" fill="rgb(238,192,34)" fg:x="2305" fg:w="1"/><text x="100.0335%" y="1391.50"></text></g><g><title>elf_machine_rela (1 samples, 0.04%)</title><rect x="99.7835%" y="1365" width="0.0433%" height="15" fill="rgb(217,203,50)" fg:x="2305" fg:w="1"/><text x="100.0335%" y="1375.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.04%)</title><rect x="99.7835%" y="1349" width="0.0433%" height="15" fill="rgb(241,123,32)" fg:x="2305" fg:w="1"/><text x="100.0335%" y="1359.50"></text></g><g><title>do_lookup_x (1 samples, 0.04%)</title><rect x="99.7835%" y="1333" width="0.0433%" height="15" fill="rgb(248,151,39)" fg:x="2305" fg:w="1"/><text x="100.0335%" y="1343.50"></text></g><g><title>check_match (1 samples, 0.04%)</title><rect x="99.7835%" y="1317" width="0.0433%" height="15" fill="rgb(208,89,6)" fg:x="2305" fg:w="1"/><text x="100.0335%" y="1327.50"></text></g><g><title>strcmp (1 samples, 0.04%)</title><rect x="99.7835%" y="1301" width="0.0433%" height="15" fill="rgb(254,43,26)" fg:x="2305" fg:w="1"/><text x="100.0335%" y="1311.50"></text></g><g><title>_start (2,263 samples, 97.97%)</title><rect x="1.9048%" y="1477" width="97.9654%" height="15" fill="rgb(216,158,13)" fg:x="44" fg:w="2263"/><text x="2.1548%" y="1487.50">_start</text></g><g><title>_dl_start (3 samples, 0.13%)</title><rect x="99.7403%" y="1461" width="0.1299%" height="15" fill="rgb(212,47,37)" fg:x="2304" fg:w="3"/><text x="99.9903%" y="1471.50"></text></g><g><title>rtld_timer_start (1 samples, 0.04%)</title><rect x="99.8268%" y="1445" width="0.0433%" height="15" fill="rgb(254,16,10)" fg:x="2306" fg:w="1"/><text x="100.0768%" y="1455.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.04%)</title><rect x="99.8268%" y="1429" width="0.0433%" height="15" fill="rgb(223,228,16)" fg:x="2306" fg:w="1"/><text x="100.0768%" y="1439.50"></text></g><g><title>exc_page_fault (1 samples, 0.04%)</title><rect x="99.8268%" y="1413" width="0.0433%" height="15" fill="rgb(249,108,50)" fg:x="2306" fg:w="1"/><text x="100.0768%" y="1423.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="99.8268%" y="1397" width="0.0433%" height="15" fill="rgb(208,220,5)" fg:x="2306" fg:w="1"/><text x="100.0768%" y="1407.50"></text></g><g><title>handle_mm_fault (1 samples, 0.04%)</title><rect x="99.8268%" y="1381" width="0.0433%" height="15" fill="rgb(217,89,48)" fg:x="2306" fg:w="1"/><text x="100.0768%" y="1391.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="99.8268%" y="1365" width="0.0433%" height="15" fill="rgb(212,113,41)" fg:x="2306" fg:w="1"/><text x="100.0768%" y="1375.50"></text></g><g><title>do_fault (1 samples, 0.04%)</title><rect x="99.8268%" y="1349" width="0.0433%" height="15" fill="rgb(231,127,5)" fg:x="2306" fg:w="1"/><text x="100.0768%" y="1359.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.04%)</title><rect x="99.8701%" y="1445" width="0.0433%" height="15" fill="rgb(217,141,17)" fg:x="2307" fg:w="1"/><text x="100.1201%" y="1455.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.04%)</title><rect x="99.8701%" y="1429" width="0.0433%" height="15" fill="rgb(245,125,54)" fg:x="2307" fg:w="1"/><text x="100.1201%" y="1439.50"></text></g><g><title>bprm_execve (1 samples, 0.04%)</title><rect x="99.8701%" y="1413" width="0.0433%" height="15" fill="rgb(248,125,3)" fg:x="2307" fg:w="1"/><text x="100.1201%" y="1423.50"></text></g><g><title>exec_binprm (1 samples, 0.04%)</title><rect x="99.8701%" y="1397" width="0.0433%" height="15" fill="rgb(236,119,51)" fg:x="2307" fg:w="1"/><text x="100.1201%" y="1407.50"></text></g><g><title>load_elf_binary (1 samples, 0.04%)</title><rect x="99.8701%" y="1381" width="0.0433%" height="15" fill="rgb(239,99,8)" fg:x="2307" fg:w="1"/><text x="100.1201%" y="1391.50"></text></g><g><title>setup_arg_pages (1 samples, 0.04%)</title><rect x="99.8701%" y="1365" width="0.0433%" height="15" fill="rgb(224,228,4)" fg:x="2307" fg:w="1"/><text x="100.1201%" y="1375.50"></text></g><g><title>mprotect_fixup (1 samples, 0.04%)</title><rect x="99.8701%" y="1349" width="0.0433%" height="15" fill="rgb(220,131,45)" fg:x="2307" fg:w="1"/><text x="100.1201%" y="1359.50"></text></g><g><title>perf_event_mmap (1 samples, 0.04%)</title><rect x="99.8701%" y="1333" width="0.0433%" height="15" fill="rgb(215,62,5)" fg:x="2307" fg:w="1"/><text x="100.1201%" y="1343.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.04%)</title><rect x="99.8701%" y="1317" width="0.0433%" height="15" fill="rgb(253,12,24)" fg:x="2307" fg:w="1"/><text x="100.1201%" y="1327.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.04%)</title><rect x="99.8701%" y="1301" width="0.0433%" height="15" fill="rgb(248,120,50)" fg:x="2307" fg:w="1"/><text x="100.1201%" y="1311.50"></text></g><g><title>__perf_event__output_id_sample (1 samples, 0.04%)</title><rect x="99.8701%" y="1285" width="0.0433%" height="15" fill="rgb(245,194,10)" fg:x="2307" fg:w="1"/><text x="100.1201%" y="1295.50"></text></g><g><title>free_pgtables (1 samples, 0.04%)</title><rect x="99.9134%" y="1365" width="0.0433%" height="15" fill="rgb(241,149,38)" fg:x="2308" fg:w="1"/><text x="100.1634%" y="1375.50"></text></g><g><title>unlink_anon_vmas (1 samples, 0.04%)</title><rect x="99.9134%" y="1349" width="0.0433%" height="15" fill="rgb(219,215,7)" fg:x="2308" fg:w="1"/><text x="100.1634%" y="1359.50"></text></g><g><title>__put_anon_vma (1 samples, 0.04%)</title><rect x="99.9134%" y="1333" width="0.0433%" height="15" fill="rgb(208,120,31)" fg:x="2308" fg:w="1"/><text x="100.1634%" y="1343.50"></text></g><g><title>kmem_cache_free (1 samples, 0.04%)</title><rect x="99.9134%" y="1317" width="0.0433%" height="15" fill="rgb(244,30,8)" fg:x="2308" fg:w="1"/><text x="100.1634%" y="1327.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.04%)</title><rect x="99.9134%" y="1301" width="0.0433%" height="15" fill="rgb(238,35,44)" fg:x="2308" fg:w="1"/><text x="100.1634%" y="1311.50"></text></g><g><title>all (2,310 samples, 100%)</title><rect x="0.0000%" y="1509" width="100.0000%" height="15" fill="rgb(243,218,37)" fg:x="0" fg:w="2310"/><text x="0.2500%" y="1519.50"></text></g><g><title>y2021 (2,302 samples, 99.65%)</title><rect x="0.3463%" y="1493" width="99.6537%" height="15" fill="rgb(218,169,10)" fg:x="8" fg:w="2302"/><text x="0.5963%" y="1503.50">y2021</text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.13%)</title><rect x="99.8701%" y="1477" width="0.1299%" height="15" fill="rgb(221,144,10)" fg:x="2307" fg:w="3"/><text x="100.1201%" y="1487.50"></text></g><g><title>do_syscall_64 (3 samples, 0.13%)</title><rect x="99.8701%" y="1461" width="0.1299%" height="15" fill="rgb(226,41,38)" fg:x="2307" fg:w="3"/><text x="100.1201%" y="1471.50"></text></g><g><title>__x64_sys_exit_group (2 samples, 0.09%)</title><rect x="99.9134%" y="1445" width="0.0866%" height="15" fill="rgb(228,3,1)" fg:x="2308" fg:w="2"/><text x="100.1634%" y="1455.50"></text></g><g><title>do_group_exit (2 samples, 0.09%)</title><rect x="99.9134%" y="1429" width="0.0866%" height="15" fill="rgb(209,129,12)" fg:x="2308" fg:w="2"/><text x="100.1634%" y="1439.50"></text></g><g><title>do_exit (2 samples, 0.09%)</title><rect x="99.9134%" y="1413" width="0.0866%" height="15" fill="rgb(213,136,33)" fg:x="2308" fg:w="2"/><text x="100.1634%" y="1423.50"></text></g><g><title>mmput (2 samples, 0.09%)</title><rect x="99.9134%" y="1397" width="0.0866%" height="15" fill="rgb(209,181,29)" fg:x="2308" fg:w="2"/><text x="100.1634%" y="1407.50"></text></g><g><title>exit_mmap (2 samples, 0.09%)</title><rect x="99.9134%" y="1381" width="0.0866%" height="15" fill="rgb(234,173,18)" fg:x="2308" fg:w="2"/><text x="100.1634%" y="1391.50"></text></g><g><title>unmap_vmas (1 samples, 0.04%)</title><rect x="99.9567%" y="1365" width="0.0433%" height="15" fill="rgb(227,73,47)" fg:x="2309" fg:w="1"/><text x="100.2067%" y="1375.50"></text></g><g><title>unmap_single_vma (1 samples, 0.04%)</title><rect x="99.9567%" y="1349" width="0.0433%" height="15" fill="rgb(234,9,34)" fg:x="2309" fg:w="1"/><text x="100.2067%" y="1359.50"></text></g><g><title>unmap_page_range (1 samples, 0.04%)</title><rect x="99.9567%" y="1333" width="0.0433%" height="15" fill="rgb(235,172,15)" fg:x="2309" fg:w="1"/><text x="100.2067%" y="1343.50"></text></g><g><title>zap_pte_range.isra.0 (1 samples, 0.04%)</title><rect x="99.9567%" y="1317" width="0.0433%" height="15" fill="rgb(245,61,2)" fg:x="2309" fg:w="1"/><text x="100.2067%" y="1327.50"></text></g></svg></svg>