<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1430" onload="init(evt)" viewBox="0 0 1200 1430" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1430" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1413.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1413.00"> </text><svg id="frames" x="10" width="1180" total_samples="4359"><g><title>perf_event_comm_output (7 samples, 0.16%)</title><rect x="0.0000%" y="1189" width="0.1606%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="7"/><text x="0.2500%" y="1199.50"></text></g><g><title>perf (8 samples, 0.18%)</title><rect x="0.0000%" y="1365" width="0.1835%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1375.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.18%)</title><rect x="0.0000%" y="1349" width="0.1835%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1359.50"></text></g><g><title>do_syscall_64 (8 samples, 0.18%)</title><rect x="0.0000%" y="1333" width="0.1835%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1343.50"></text></g><g><title>__x64_sys_execve (8 samples, 0.18%)</title><rect x="0.0000%" y="1317" width="0.1835%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1327.50"></text></g><g><title>do_execveat_common.isra.0 (8 samples, 0.18%)</title><rect x="0.0000%" y="1301" width="0.1835%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1311.50"></text></g><g><title>bprm_execve (8 samples, 0.18%)</title><rect x="0.0000%" y="1285" width="0.1835%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1295.50"></text></g><g><title>exec_binprm (8 samples, 0.18%)</title><rect x="0.0000%" y="1269" width="0.1835%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1279.50"></text></g><g><title>load_elf_binary (8 samples, 0.18%)</title><rect x="0.0000%" y="1253" width="0.1835%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1263.50"></text></g><g><title>begin_new_exec (8 samples, 0.18%)</title><rect x="0.0000%" y="1237" width="0.1835%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1247.50"></text></g><g><title>__set_task_comm (8 samples, 0.18%)</title><rect x="0.0000%" y="1221" width="0.1835%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1231.50"></text></g><g><title>perf_event_comm (8 samples, 0.18%)</title><rect x="0.0000%" y="1205" width="0.1835%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="8"/><text x="0.2500%" y="1215.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="0.1606%" y="1189" width="0.0229%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="1"/><text x="0.4106%" y="1199.50"></text></g><g><title>perf_event_comm_output (1 samples, 0.02%)</title><rect x="0.1606%" y="1173" width="0.0229%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="1"/><text x="0.4106%" y="1183.50"></text></g><g><title>_int_free (3 samples, 0.07%)</title><rect x="0.1835%" y="533" width="0.0688%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="3"/><text x="0.4335%" y="543.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="0.2294%" y="517" width="0.0229%" height="15" fill="rgb(231,73,38)" fg:x="10" fg:w="1"/><text x="0.4794%" y="527.50"></text></g><g><title>clear_page_rep (1 samples, 0.02%)</title><rect x="0.3441%" y="373" width="0.0229%" height="15" fill="rgb(225,20,46)" fg:x="15" fg:w="1"/><text x="0.5941%" y="383.50"></text></g><g><title>handle_mm_fault (3 samples, 0.07%)</title><rect x="0.3212%" y="469" width="0.0688%" height="15" fill="rgb(210,31,41)" fg:x="14" fg:w="3"/><text x="0.5712%" y="479.50"></text></g><g><title>__handle_mm_fault (3 samples, 0.07%)</title><rect x="0.3212%" y="453" width="0.0688%" height="15" fill="rgb(221,200,47)" fg:x="14" fg:w="3"/><text x="0.5712%" y="463.50"></text></g><g><title>do_anonymous_page (3 samples, 0.07%)</title><rect x="0.3212%" y="437" width="0.0688%" height="15" fill="rgb(226,26,5)" fg:x="14" fg:w="3"/><text x="0.5712%" y="447.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.07%)</title><rect x="0.3212%" y="421" width="0.0688%" height="15" fill="rgb(249,33,26)" fg:x="14" fg:w="3"/><text x="0.5712%" y="431.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.07%)</title><rect x="0.3212%" y="405" width="0.0688%" height="15" fill="rgb(235,183,28)" fg:x="14" fg:w="3"/><text x="0.5712%" y="415.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.05%)</title><rect x="0.3441%" y="389" width="0.0459%" height="15" fill="rgb(221,5,38)" fg:x="15" fg:w="2"/><text x="0.5941%" y="399.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="0.3671%" y="373" width="0.0229%" height="15" fill="rgb(247,18,42)" fg:x="16" fg:w="1"/><text x="0.6171%" y="383.50"></text></g><g><title>alloc::fmt::format (10 samples, 0.23%)</title><rect x="0.1835%" y="837" width="0.2294%" height="15" fill="rgb(241,131,45)" fg:x="8" fg:w="10"/><text x="0.4335%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (10 samples, 0.23%)</title><rect x="0.1835%" y="821" width="0.2294%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="10"/><text x="0.4335%" y="831.50"></text></g><g><title>core::fmt::write (10 samples, 0.23%)</title><rect x="0.1835%" y="805" width="0.2294%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="10"/><text x="0.4335%" y="815.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.23%)</title><rect x="0.1835%" y="789" width="0.2294%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="10"/><text x="0.4335%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (10 samples, 0.23%)</title><rect x="0.1835%" y="773" width="0.2294%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="10"/><text x="0.4335%" y="783.50"></text></g><g><title>alloc::string::String::push_str (10 samples, 0.23%)</title><rect x="0.1835%" y="757" width="0.2294%" height="15" fill="rgb(232,36,49)" fg:x="8" fg:w="10"/><text x="0.4335%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.23%)</title><rect x="0.1835%" y="741" width="0.2294%" height="15" fill="rgb(209,103,24)" fg:x="8" fg:w="10"/><text x="0.4335%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.23%)</title><rect x="0.1835%" y="725" width="0.2294%" height="15" fill="rgb(229,88,8)" fg:x="8" fg:w="10"/><text x="0.4335%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.23%)</title><rect x="0.1835%" y="709" width="0.2294%" height="15" fill="rgb(213,181,19)" fg:x="8" fg:w="10"/><text x="0.4335%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.23%)</title><rect x="0.1835%" y="693" width="0.2294%" height="15" fill="rgb(254,191,54)" fg:x="8" fg:w="10"/><text x="0.4335%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.23%)</title><rect x="0.1835%" y="677" width="0.2294%" height="15" fill="rgb(241,83,37)" fg:x="8" fg:w="10"/><text x="0.4335%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.23%)</title><rect x="0.1835%" y="661" width="0.2294%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="10"/><text x="0.4335%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.23%)</title><rect x="0.1835%" y="645" width="0.2294%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="10"/><text x="0.4335%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.23%)</title><rect x="0.1835%" y="629" width="0.2294%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="10"/><text x="0.4335%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.23%)</title><rect x="0.1835%" y="613" width="0.2294%" height="15" fill="rgb(238,167,29)" fg:x="8" fg:w="10"/><text x="0.4335%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.23%)</title><rect x="0.1835%" y="597" width="0.2294%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="10"/><text x="0.4335%" y="607.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.23%)</title><rect x="0.1835%" y="581" width="0.2294%" height="15" fill="rgb(231,60,39)" fg:x="8" fg:w="10"/><text x="0.4335%" y="591.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.23%)</title><rect x="0.1835%" y="565" width="0.2294%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="10"/><text x="0.4335%" y="575.50"></text></g><g><title>_int_realloc (10 samples, 0.23%)</title><rect x="0.1835%" y="549" width="0.2294%" height="15" fill="rgb(235,93,37)" fg:x="8" fg:w="10"/><text x="0.4335%" y="559.50"></text></g><g><title>_int_malloc (7 samples, 0.16%)</title><rect x="0.2524%" y="533" width="0.1606%" height="15" fill="rgb(213,116,39)" fg:x="11" fg:w="7"/><text x="0.5024%" y="543.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.09%)</title><rect x="0.3212%" y="517" width="0.0918%" height="15" fill="rgb(222,207,29)" fg:x="14" fg:w="4"/><text x="0.5712%" y="527.50"></text></g><g><title>exc_page_fault (4 samples, 0.09%)</title><rect x="0.3212%" y="501" width="0.0918%" height="15" fill="rgb(206,96,30)" fg:x="14" fg:w="4"/><text x="0.5712%" y="511.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.09%)</title><rect x="0.3212%" y="485" width="0.0918%" height="15" fill="rgb(218,138,4)" fg:x="14" fg:w="4"/><text x="0.5712%" y="495.50"></text></g><g><title>mem_cgroup_from_task (1 samples, 0.02%)</title><rect x="0.3900%" y="469" width="0.0229%" height="15" fill="rgb(250,191,14)" fg:x="17" fg:w="1"/><text x="0.6400%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.5965%" y="597" width="0.0229%" height="15" fill="rgb(239,60,40)" fg:x="26" fg:w="1"/><text x="0.8465%" y="607.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.02%)</title><rect x="0.5965%" y="581" width="0.0229%" height="15" fill="rgb(206,27,48)" fg:x="26" fg:w="1"/><text x="0.8465%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.02%)</title><rect x="0.5965%" y="565" width="0.0229%" height="15" fill="rgb(225,35,8)" fg:x="26" fg:w="1"/><text x="0.8465%" y="575.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.05%)</title><rect x="0.6194%" y="597" width="0.0459%" height="15" fill="rgb(250,213,24)" fg:x="27" fg:w="2"/><text x="0.8694%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.05%)</title><rect x="0.6194%" y="581" width="0.0459%" height="15" fill="rgb(247,123,22)" fg:x="27" fg:w="2"/><text x="0.8694%" y="591.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="0.6423%" y="565" width="0.0229%" height="15" fill="rgb(231,138,38)" fg:x="28" fg:w="1"/><text x="0.8923%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.02%)</title><rect x="0.6423%" y="549" width="0.0229%" height="15" fill="rgb(231,145,46)" fg:x="28" fg:w="1"/><text x="0.8923%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.39%)</title><rect x="0.4129%" y="821" width="0.3900%" height="15" fill="rgb(251,118,11)" fg:x="18" fg:w="17"/><text x="0.6629%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (17 samples, 0.39%)</title><rect x="0.4129%" y="805" width="0.3900%" height="15" fill="rgb(217,147,25)" fg:x="18" fg:w="17"/><text x="0.6629%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.39%)</title><rect x="0.4129%" y="789" width="0.3900%" height="15" fill="rgb(247,81,37)" fg:x="18" fg:w="17"/><text x="0.6629%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.39%)</title><rect x="0.4129%" y="773" width="0.3900%" height="15" fill="rgb(209,12,38)" fg:x="18" fg:w="17"/><text x="0.6629%" y="783.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (17 samples, 0.39%)</title><rect x="0.4129%" y="757" width="0.3900%" height="15" fill="rgb(227,1,9)" fg:x="18" fg:w="17"/><text x="0.6629%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (17 samples, 0.39%)</title><rect x="0.4129%" y="741" width="0.3900%" height="15" fill="rgb(248,47,43)" fg:x="18" fg:w="17"/><text x="0.6629%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 0.39%)</title><rect x="0.4129%" y="725" width="0.3900%" height="15" fill="rgb(221,10,30)" fg:x="18" fg:w="17"/><text x="0.6629%" y="735.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (17 samples, 0.39%)</title><rect x="0.4129%" y="709" width="0.3900%" height="15" fill="rgb(210,229,1)" fg:x="18" fg:w="17"/><text x="0.6629%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (17 samples, 0.39%)</title><rect x="0.4129%" y="693" width="0.3900%" height="15" fill="rgb(222,148,37)" fg:x="18" fg:w="17"/><text x="0.6629%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (17 samples, 0.39%)</title><rect x="0.4129%" y="677" width="0.3900%" height="15" fill="rgb(234,67,33)" fg:x="18" fg:w="17"/><text x="0.6629%" y="687.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.39%)</title><rect x="0.4129%" y="661" width="0.3900%" height="15" fill="rgb(247,98,35)" fg:x="18" fg:w="17"/><text x="0.6629%" y="671.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (17 samples, 0.39%)</title><rect x="0.4129%" y="645" width="0.3900%" height="15" fill="rgb(247,138,52)" fg:x="18" fg:w="17"/><text x="0.6629%" y="655.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (17 samples, 0.39%)</title><rect x="0.4129%" y="629" width="0.3900%" height="15" fill="rgb(213,79,30)" fg:x="18" fg:w="17"/><text x="0.6629%" y="639.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (17 samples, 0.39%)</title><rect x="0.4129%" y="613" width="0.3900%" height="15" fill="rgb(246,177,23)" fg:x="18" fg:w="17"/><text x="0.6629%" y="623.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (6 samples, 0.14%)</title><rect x="0.6653%" y="597" width="0.1376%" height="15" fill="rgb(230,62,27)" fg:x="29" fg:w="6"/><text x="0.9153%" y="607.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.02%)</title><rect x="0.8029%" y="821" width="0.0229%" height="15" fill="rgb(216,154,8)" fg:x="35" fg:w="1"/><text x="1.0529%" y="831.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.02%)</title><rect x="0.8029%" y="805" width="0.0229%" height="15" fill="rgb(244,35,45)" fg:x="35" fg:w="1"/><text x="1.0529%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.02%)</title><rect x="0.8029%" y="789" width="0.0229%" height="15" fill="rgb(251,115,12)" fg:x="35" fg:w="1"/><text x="1.0529%" y="799.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.02%)</title><rect x="0.8029%" y="773" width="0.0229%" height="15" fill="rgb(240,54,50)" fg:x="35" fg:w="1"/><text x="1.0529%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="0.8029%" y="757" width="0.0229%" height="15" fill="rgb(233,84,52)" fg:x="35" fg:w="1"/><text x="1.0529%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="0.8029%" y="741" width="0.0229%" height="15" fill="rgb(207,117,47)" fg:x="35" fg:w="1"/><text x="1.0529%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.8029%" y="725" width="0.0229%" height="15" fill="rgb(249,43,39)" fg:x="35" fg:w="1"/><text x="1.0529%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="0.8259%" y="709" width="0.0229%" height="15" fill="rgb(209,38,44)" fg:x="36" fg:w="1"/><text x="1.0759%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="0.8259%" y="693" width="0.0229%" height="15" fill="rgb(236,212,23)" fg:x="36" fg:w="1"/><text x="1.0759%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.05%)</title><rect x="0.8259%" y="821" width="0.0459%" height="15" fill="rgb(242,79,21)" fg:x="36" fg:w="2"/><text x="1.0759%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.05%)</title><rect x="0.8259%" y="805" width="0.0459%" height="15" fill="rgb(211,96,35)" fg:x="36" fg:w="2"/><text x="1.0759%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.05%)</title><rect x="0.8259%" y="789" width="0.0459%" height="15" fill="rgb(253,215,40)" fg:x="36" fg:w="2"/><text x="1.0759%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.05%)</title><rect x="0.8259%" y="773" width="0.0459%" height="15" fill="rgb(211,81,21)" fg:x="36" fg:w="2"/><text x="1.0759%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="0.8259%" y="757" width="0.0459%" height="15" fill="rgb(208,190,38)" fg:x="36" fg:w="2"/><text x="1.0759%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="0.8259%" y="741" width="0.0459%" height="15" fill="rgb(235,213,38)" fg:x="36" fg:w="2"/><text x="1.0759%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="0.8259%" y="725" width="0.0459%" height="15" fill="rgb(237,122,38)" fg:x="36" fg:w="2"/><text x="1.0759%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="0.8488%" y="709" width="0.0229%" height="15" fill="rgb(244,218,35)" fg:x="37" fg:w="1"/><text x="1.0988%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="0.8488%" y="693" width="0.0229%" height="15" fill="rgb(240,68,47)" fg:x="37" fg:w="1"/><text x="1.0988%" y="703.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="0.8718%" y="821" width="0.0229%" height="15" fill="rgb(210,16,53)" fg:x="38" fg:w="1"/><text x="1.1218%" y="831.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="0.8718%" y="805" width="0.0229%" height="15" fill="rgb(235,124,12)" fg:x="38" fg:w="1"/><text x="1.1218%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="0.8718%" y="789" width="0.0229%" height="15" fill="rgb(224,169,11)" fg:x="38" fg:w="1"/><text x="1.1218%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="0.8718%" y="773" width="0.0229%" height="15" fill="rgb(250,166,2)" fg:x="38" fg:w="1"/><text x="1.1218%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="0.8718%" y="757" width="0.0229%" height="15" fill="rgb(242,216,29)" fg:x="38" fg:w="1"/><text x="1.1218%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="0.8718%" y="741" width="0.0229%" height="15" fill="rgb(230,116,27)" fg:x="38" fg:w="1"/><text x="1.1218%" y="751.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="0.8718%" y="725" width="0.0229%" height="15" fill="rgb(228,99,48)" fg:x="38" fg:w="1"/><text x="1.1218%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="0.8718%" y="709" width="0.0229%" height="15" fill="rgb(253,11,6)" fg:x="38" fg:w="1"/><text x="1.1218%" y="719.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="0.8718%" y="693" width="0.0229%" height="15" fill="rgb(247,143,39)" fg:x="38" fg:w="1"/><text x="1.1218%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="0.8947%" y="757" width="0.0229%" height="15" fill="rgb(236,97,10)" fg:x="39" fg:w="1"/><text x="1.1447%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="0.8947%" y="741" width="0.0229%" height="15" fill="rgb(233,208,19)" fg:x="39" fg:w="1"/><text x="1.1447%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="0.8947%" y="725" width="0.0229%" height="15" fill="rgb(216,164,2)" fg:x="39" fg:w="1"/><text x="1.1447%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="0.8947%" y="709" width="0.0229%" height="15" fill="rgb(220,129,5)" fg:x="39" fg:w="1"/><text x="1.1447%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="0.8947%" y="693" width="0.0229%" height="15" fill="rgb(242,17,10)" fg:x="39" fg:w="1"/><text x="1.1447%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="0.8947%" y="677" width="0.0229%" height="15" fill="rgb(242,107,0)" fg:x="39" fg:w="1"/><text x="1.1447%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="0.8947%" y="661" width="0.0229%" height="15" fill="rgb(251,28,31)" fg:x="39" fg:w="1"/><text x="1.1447%" y="671.50"></text></g><g><title>__libc_start_main (34 samples, 0.78%)</title><rect x="0.1835%" y="1333" width="0.7800%" height="15" fill="rgb(233,223,10)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1343.50"></text></g><g><title>main (34 samples, 0.78%)</title><rect x="0.1835%" y="1317" width="0.7800%" height="15" fill="rgb(215,21,27)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1327.50"></text></g><g><title>std::rt::lang_start_internal (34 samples, 0.78%)</title><rect x="0.1835%" y="1301" width="0.7800%" height="15" fill="rgb(232,23,21)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (34 samples, 0.78%)</title><rect x="0.1835%" y="1285" width="0.7800%" height="15" fill="rgb(244,5,23)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1295.50"></text></g><g><title>std::panicking::try (34 samples, 0.78%)</title><rect x="0.1835%" y="1269" width="0.7800%" height="15" fill="rgb(226,81,46)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1279.50"></text></g><g><title>std::panicking::try::do_call (34 samples, 0.78%)</title><rect x="0.1835%" y="1253" width="0.7800%" height="15" fill="rgb(247,70,30)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1263.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (34 samples, 0.78%)</title><rect x="0.1835%" y="1237" width="0.7800%" height="15" fill="rgb(212,68,19)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (34 samples, 0.78%)</title><rect x="0.1835%" y="1221" width="0.7800%" height="15" fill="rgb(240,187,13)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1231.50"></text></g><g><title>std::panicking::try (34 samples, 0.78%)</title><rect x="0.1835%" y="1205" width="0.7800%" height="15" fill="rgb(223,113,26)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (34 samples, 0.78%)</title><rect x="0.1835%" y="1189" width="0.7800%" height="15" fill="rgb(206,192,2)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1199.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (34 samples, 0.78%)</title><rect x="0.1835%" y="1173" width="0.7800%" height="15" fill="rgb(241,108,4)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1183.50"></text></g><g><title>std::rt::lang_start::{{closure}} (34 samples, 0.78%)</title><rect x="0.1835%" y="1157" width="0.7800%" height="15" fill="rgb(247,173,49)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1167.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (34 samples, 0.78%)</title><rect x="0.1835%" y="1141" width="0.7800%" height="15" fill="rgb(224,114,35)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1151.50"></text></g><g><title>core::ops::function::FnOnce::call_once (34 samples, 0.78%)</title><rect x="0.1835%" y="1125" width="0.7800%" height="15" fill="rgb(245,159,27)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1135.50"></text></g><g><title>y2021::main (34 samples, 0.78%)</title><rect x="0.1835%" y="1109" width="0.7800%" height="15" fill="rgb(245,172,44)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1119.50"></text></g><g><title>y2021::d12::main2::run (34 samples, 0.78%)</title><rect x="0.1835%" y="1093" width="0.7800%" height="15" fill="rgb(236,23,11)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1103.50"></text></g><g><title>y2021::d12::main2::p02 (34 samples, 0.78%)</title><rect x="0.1835%" y="1077" width="0.7800%" height="15" fill="rgb(205,117,38)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1087.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.78%)</title><rect x="0.1835%" y="1061" width="0.7800%" height="15" fill="rgb(237,72,25)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1071.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.78%)</title><rect x="0.1835%" y="1045" width="0.7800%" height="15" fill="rgb(244,70,9)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1055.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.78%)</title><rect x="0.1835%" y="1029" width="0.7800%" height="15" fill="rgb(217,125,39)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1039.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.78%)</title><rect x="0.1835%" y="1013" width="0.7800%" height="15" fill="rgb(235,36,10)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1023.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.78%)</title><rect x="0.1835%" y="997" width="0.7800%" height="15" fill="rgb(251,123,47)" fg:x="8" fg:w="34"/><text x="0.4335%" y="1007.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.78%)</title><rect x="0.1835%" y="981" width="0.7800%" height="15" fill="rgb(221,13,13)" fg:x="8" fg:w="34"/><text x="0.4335%" y="991.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.78%)</title><rect x="0.1835%" y="965" width="0.7800%" height="15" fill="rgb(238,131,9)" fg:x="8" fg:w="34"/><text x="0.4335%" y="975.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.78%)</title><rect x="0.1835%" y="949" width="0.7800%" height="15" fill="rgb(211,50,8)" fg:x="8" fg:w="34"/><text x="0.4335%" y="959.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.78%)</title><rect x="0.1835%" y="933" width="0.7800%" height="15" fill="rgb(245,182,24)" fg:x="8" fg:w="34"/><text x="0.4335%" y="943.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.78%)</title><rect x="0.1835%" y="917" width="0.7800%" height="15" fill="rgb(242,14,37)" fg:x="8" fg:w="34"/><text x="0.4335%" y="927.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.78%)</title><rect x="0.1835%" y="901" width="0.7800%" height="15" fill="rgb(246,228,12)" fg:x="8" fg:w="34"/><text x="0.4335%" y="911.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.78%)</title><rect x="0.1835%" y="885" width="0.7800%" height="15" fill="rgb(213,55,15)" fg:x="8" fg:w="34"/><text x="0.4335%" y="895.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.78%)</title><rect x="0.1835%" y="869" width="0.7800%" height="15" fill="rgb(209,9,3)" fg:x="8" fg:w="34"/><text x="0.4335%" y="879.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.78%)</title><rect x="0.1835%" y="853" width="0.7800%" height="15" fill="rgb(230,59,30)" fg:x="8" fg:w="34"/><text x="0.4335%" y="863.50"></text></g><g><title>y2021::d12::main2::traverse (24 samples, 0.55%)</title><rect x="0.4129%" y="837" width="0.5506%" height="15" fill="rgb(209,121,21)" fg:x="18" fg:w="24"/><text x="0.6629%" y="847.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (3 samples, 0.07%)</title><rect x="0.8947%" y="821" width="0.0688%" height="15" fill="rgb(220,109,13)" fg:x="39" fg:w="3"/><text x="1.1447%" y="831.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (3 samples, 0.07%)</title><rect x="0.8947%" y="805" width="0.0688%" height="15" fill="rgb(232,18,1)" fg:x="39" fg:w="3"/><text x="1.1447%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.07%)</title><rect x="0.8947%" y="789" width="0.0688%" height="15" fill="rgb(215,41,42)" fg:x="39" fg:w="3"/><text x="1.1447%" y="799.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.07%)</title><rect x="0.8947%" y="773" width="0.0688%" height="15" fill="rgb(224,123,36)" fg:x="39" fg:w="3"/><text x="1.1447%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="0.9176%" y="757" width="0.0459%" height="15" fill="rgb(240,125,3)" fg:x="40" fg:w="2"/><text x="1.1676%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="0.9176%" y="741" width="0.0459%" height="15" fill="rgb(205,98,50)" fg:x="40" fg:w="2"/><text x="1.1676%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="0.9176%" y="725" width="0.0459%" height="15" fill="rgb(205,185,37)" fg:x="40" fg:w="2"/><text x="1.1676%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="0.9406%" y="709" width="0.0229%" height="15" fill="rgb(238,207,15)" fg:x="41" fg:w="1"/><text x="1.1906%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="0.9406%" y="693" width="0.0229%" height="15" fill="rgb(213,199,42)" fg:x="41" fg:w="1"/><text x="1.1906%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (3 samples, 0.07%)</title><rect x="0.9635%" y="645" width="0.0688%" height="15" fill="rgb(235,201,11)" fg:x="42" fg:w="3"/><text x="1.2135%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.07%)</title><rect x="1.0323%" y="629" width="0.0688%" height="15" fill="rgb(207,46,11)" fg:x="45" fg:w="3"/><text x="1.2823%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.07%)</title><rect x="1.0323%" y="613" width="0.0688%" height="15" fill="rgb(241,35,35)" fg:x="45" fg:w="3"/><text x="1.2823%" y="623.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.07%)</title><rect x="1.0323%" y="597" width="0.0688%" height="15" fill="rgb(243,32,47)" fg:x="45" fg:w="3"/><text x="1.2823%" y="607.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.07%)</title><rect x="1.0323%" y="581" width="0.0688%" height="15" fill="rgb(247,202,23)" fg:x="45" fg:w="3"/><text x="1.2823%" y="591.50"></text></g><g><title>_int_realloc (2 samples, 0.05%)</title><rect x="1.0553%" y="565" width="0.0459%" height="15" fill="rgb(219,102,11)" fg:x="46" fg:w="2"/><text x="1.3053%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="1.0782%" y="549" width="0.0229%" height="15" fill="rgb(243,110,44)" fg:x="47" fg:w="1"/><text x="1.3282%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.09%)</title><rect x="1.0323%" y="645" width="0.0918%" height="15" fill="rgb(222,74,54)" fg:x="45" fg:w="4"/><text x="1.2823%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="1.1012%" y="629" width="0.0229%" height="15" fill="rgb(216,99,12)" fg:x="48" fg:w="1"/><text x="1.3512%" y="639.50"></text></g><g><title>alloc::fmt::format (8 samples, 0.18%)</title><rect x="0.9635%" y="853" width="0.1835%" height="15" fill="rgb(226,22,26)" fg:x="42" fg:w="8"/><text x="1.2135%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (8 samples, 0.18%)</title><rect x="0.9635%" y="837" width="0.1835%" height="15" fill="rgb(217,163,10)" fg:x="42" fg:w="8"/><text x="1.2135%" y="847.50"></text></g><g><title>core::fmt::write (8 samples, 0.18%)</title><rect x="0.9635%" y="821" width="0.1835%" height="15" fill="rgb(213,25,53)" fg:x="42" fg:w="8"/><text x="1.2135%" y="831.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (8 samples, 0.18%)</title><rect x="0.9635%" y="805" width="0.1835%" height="15" fill="rgb(252,105,26)" fg:x="42" fg:w="8"/><text x="1.2135%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.18%)</title><rect x="0.9635%" y="789" width="0.1835%" height="15" fill="rgb(220,39,43)" fg:x="42" fg:w="8"/><text x="1.2135%" y="799.50"></text></g><g><title>alloc::string::String::push_str (8 samples, 0.18%)</title><rect x="0.9635%" y="773" width="0.1835%" height="15" fill="rgb(229,68,48)" fg:x="42" fg:w="8"/><text x="1.2135%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.18%)</title><rect x="0.9635%" y="757" width="0.1835%" height="15" fill="rgb(252,8,32)" fg:x="42" fg:w="8"/><text x="1.2135%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.18%)</title><rect x="0.9635%" y="741" width="0.1835%" height="15" fill="rgb(223,20,43)" fg:x="42" fg:w="8"/><text x="1.2135%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.18%)</title><rect x="0.9635%" y="725" width="0.1835%" height="15" fill="rgb(229,81,49)" fg:x="42" fg:w="8"/><text x="1.2135%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.18%)</title><rect x="0.9635%" y="709" width="0.1835%" height="15" fill="rgb(236,28,36)" fg:x="42" fg:w="8"/><text x="1.2135%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.18%)</title><rect x="0.9635%" y="693" width="0.1835%" height="15" fill="rgb(249,185,26)" fg:x="42" fg:w="8"/><text x="1.2135%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.18%)</title><rect x="0.9635%" y="677" width="0.1835%" height="15" fill="rgb(249,174,33)" fg:x="42" fg:w="8"/><text x="1.2135%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.18%)</title><rect x="0.9635%" y="661" width="0.1835%" height="15" fill="rgb(233,201,37)" fg:x="42" fg:w="8"/><text x="1.2135%" y="671.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="1.1241%" y="645" width="0.0229%" height="15" fill="rgb(221,78,26)" fg:x="49" fg:w="1"/><text x="1.3741%" y="655.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="1.1241%" y="629" width="0.0229%" height="15" fill="rgb(250,127,30)" fg:x="49" fg:w="1"/><text x="1.3741%" y="639.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="1.1241%" y="613" width="0.0229%" height="15" fill="rgb(230,49,44)" fg:x="49" fg:w="1"/><text x="1.3741%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (6 samples, 0.14%)</title><rect x="1.1471%" y="709" width="0.1376%" height="15" fill="rgb(229,67,23)" fg:x="50" fg:w="6"/><text x="1.3971%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.11%)</title><rect x="1.1700%" y="693" width="0.1147%" height="15" fill="rgb(249,83,47)" fg:x="51" fg:w="5"/><text x="1.4200%" y="703.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.09%)</title><rect x="1.1929%" y="677" width="0.0918%" height="15" fill="rgb(215,43,3)" fg:x="52" fg:w="4"/><text x="1.4429%" y="687.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (4 samples, 0.09%)</title><rect x="1.1929%" y="661" width="0.0918%" height="15" fill="rgb(238,154,13)" fg:x="52" fg:w="4"/><text x="1.4429%" y="671.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (4 samples, 0.09%)</title><rect x="1.1929%" y="645" width="0.0918%" height="15" fill="rgb(219,56,2)" fg:x="52" fg:w="4"/><text x="1.4429%" y="655.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (4 samples, 0.09%)</title><rect x="1.1929%" y="629" width="0.0918%" height="15" fill="rgb(233,0,4)" fg:x="52" fg:w="4"/><text x="1.4429%" y="639.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.02%)</title><rect x="1.2618%" y="613" width="0.0229%" height="15" fill="rgb(235,30,7)" fg:x="55" fg:w="1"/><text x="1.5118%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.16%)</title><rect x="1.1471%" y="837" width="0.1606%" height="15" fill="rgb(250,79,13)" fg:x="50" fg:w="7"/><text x="1.3971%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (7 samples, 0.16%)</title><rect x="1.1471%" y="821" width="0.1606%" height="15" fill="rgb(211,146,34)" fg:x="50" fg:w="7"/><text x="1.3971%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.16%)</title><rect x="1.1471%" y="805" width="0.1606%" height="15" fill="rgb(228,22,38)" fg:x="50" fg:w="7"/><text x="1.3971%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.16%)</title><rect x="1.1471%" y="789" width="0.1606%" height="15" fill="rgb(235,168,5)" fg:x="50" fg:w="7"/><text x="1.3971%" y="799.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (7 samples, 0.16%)</title><rect x="1.1471%" y="773" width="0.1606%" height="15" fill="rgb(221,155,16)" fg:x="50" fg:w="7"/><text x="1.3971%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (7 samples, 0.16%)</title><rect x="1.1471%" y="757" width="0.1606%" height="15" fill="rgb(215,215,53)" fg:x="50" fg:w="7"/><text x="1.3971%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.16%)</title><rect x="1.1471%" y="741" width="0.1606%" height="15" fill="rgb(223,4,10)" fg:x="50" fg:w="7"/><text x="1.3971%" y="751.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (7 samples, 0.16%)</title><rect x="1.1471%" y="725" width="0.1606%" height="15" fill="rgb(234,103,6)" fg:x="50" fg:w="7"/><text x="1.3971%" y="735.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (1 samples, 0.02%)</title><rect x="1.2847%" y="709" width="0.0229%" height="15" fill="rgb(227,97,0)" fg:x="56" fg:w="1"/><text x="1.5347%" y="719.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.02%)</title><rect x="1.2847%" y="693" width="0.0229%" height="15" fill="rgb(234,150,53)" fg:x="56" fg:w="1"/><text x="1.5347%" y="703.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.02%)</title><rect x="1.2847%" y="677" width="0.0229%" height="15" fill="rgb(228,201,54)" fg:x="56" fg:w="1"/><text x="1.5347%" y="687.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.02%)</title><rect x="1.2847%" y="661" width="0.0229%" height="15" fill="rgb(222,22,37)" fg:x="56" fg:w="1"/><text x="1.5347%" y="671.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.02%)</title><rect x="1.2847%" y="645" width="0.0229%" height="15" fill="rgb(237,53,32)" fg:x="56" fg:w="1"/><text x="1.5347%" y="655.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="1.2847%" y="629" width="0.0229%" height="15" fill="rgb(233,25,53)" fg:x="56" fg:w="1"/><text x="1.5347%" y="639.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="1.2847%" y="613" width="0.0229%" height="15" fill="rgb(210,40,34)" fg:x="56" fg:w="1"/><text x="1.5347%" y="623.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="1.2847%" y="597" width="0.0229%" height="15" fill="rgb(241,220,44)" fg:x="56" fg:w="1"/><text x="1.5347%" y="607.50"></text></g><g><title>std::rt::lang_start_internal (16 samples, 0.37%)</title><rect x="0.9635%" y="1333" width="0.3671%" height="15" fill="rgb(235,28,35)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.37%)</title><rect x="0.9635%" y="1317" width="0.3671%" height="15" fill="rgb(210,56,17)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1327.50"></text></g><g><title>std::panicking::try (16 samples, 0.37%)</title><rect x="0.9635%" y="1301" width="0.3671%" height="15" fill="rgb(224,130,29)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1311.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.37%)</title><rect x="0.9635%" y="1285" width="0.3671%" height="15" fill="rgb(235,212,8)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1295.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (16 samples, 0.37%)</title><rect x="0.9635%" y="1269" width="0.3671%" height="15" fill="rgb(223,33,50)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.37%)</title><rect x="0.9635%" y="1253" width="0.3671%" height="15" fill="rgb(219,149,13)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1263.50"></text></g><g><title>std::panicking::try (16 samples, 0.37%)</title><rect x="0.9635%" y="1237" width="0.3671%" height="15" fill="rgb(250,156,29)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.37%)</title><rect x="0.9635%" y="1221" width="0.3671%" height="15" fill="rgb(216,193,19)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (16 samples, 0.37%)</title><rect x="0.9635%" y="1205" width="0.3671%" height="15" fill="rgb(216,135,14)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1215.50"></text></g><g><title>std::rt::lang_start::{{closure}} (16 samples, 0.37%)</title><rect x="0.9635%" y="1189" width="0.3671%" height="15" fill="rgb(241,47,5)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1199.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (16 samples, 0.37%)</title><rect x="0.9635%" y="1173" width="0.3671%" height="15" fill="rgb(233,42,35)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.37%)</title><rect x="0.9635%" y="1157" width="0.3671%" height="15" fill="rgb(231,13,6)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1167.50"></text></g><g><title>y2021::main (16 samples, 0.37%)</title><rect x="0.9635%" y="1141" width="0.3671%" height="15" fill="rgb(207,181,40)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1151.50"></text></g><g><title>y2021::d12::main2::run (16 samples, 0.37%)</title><rect x="0.9635%" y="1125" width="0.3671%" height="15" fill="rgb(254,173,49)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1135.50"></text></g><g><title>y2021::d12::main2::p02 (16 samples, 0.37%)</title><rect x="0.9635%" y="1109" width="0.3671%" height="15" fill="rgb(221,1,38)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1119.50"></text></g><g><title>y2021::d12::main2::traverse (16 samples, 0.37%)</title><rect x="0.9635%" y="1093" width="0.3671%" height="15" fill="rgb(206,124,46)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1103.50"></text></g><g><title>y2021::d12::main2::traverse (16 samples, 0.37%)</title><rect x="0.9635%" y="1077" width="0.3671%" height="15" fill="rgb(249,21,11)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1087.50"></text></g><g><title>y2021::d12::main2::traverse (16 samples, 0.37%)</title><rect x="0.9635%" y="1061" width="0.3671%" height="15" fill="rgb(222,201,40)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1071.50"></text></g><g><title>y2021::d12::main2::traverse (16 samples, 0.37%)</title><rect x="0.9635%" y="1045" width="0.3671%" height="15" fill="rgb(235,61,29)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1055.50"></text></g><g><title>y2021::d12::main2::traverse (16 samples, 0.37%)</title><rect x="0.9635%" y="1029" width="0.3671%" height="15" fill="rgb(219,207,3)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1039.50"></text></g><g><title>y2021::d12::main2::traverse (16 samples, 0.37%)</title><rect x="0.9635%" y="1013" width="0.3671%" height="15" fill="rgb(222,56,46)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1023.50"></text></g><g><title>y2021::d12::main2::traverse (16 samples, 0.37%)</title><rect x="0.9635%" y="997" width="0.3671%" height="15" fill="rgb(239,76,54)" fg:x="42" fg:w="16"/><text x="1.2135%" y="1007.50"></text></g><g><title>y2021::d12::main2::traverse (16 samples, 0.37%)</title><rect x="0.9635%" y="981" width="0.3671%" height="15" fill="rgb(231,124,27)" fg:x="42" fg:w="16"/><text x="1.2135%" y="991.50"></text></g><g><title>y2021::d12::main2::traverse (16 samples, 0.37%)</title><rect x="0.9635%" y="965" width="0.3671%" height="15" fill="rgb(249,195,6)" fg:x="42" fg:w="16"/><text x="1.2135%" y="975.50"></text></g><g><title>y2021::d12::main2::traverse (16 samples, 0.37%)</title><rect x="0.9635%" y="949" width="0.3671%" height="15" fill="rgb(237,174,47)" fg:x="42" fg:w="16"/><text x="1.2135%" y="959.50"></text></g><g><title>y2021::d12::main2::traverse (16 samples, 0.37%)</title><rect x="0.9635%" y="933" width="0.3671%" height="15" fill="rgb(206,201,31)" fg:x="42" fg:w="16"/><text x="1.2135%" y="943.50"></text></g><g><title>y2021::d12::main2::traverse (16 samples, 0.37%)</title><rect x="0.9635%" y="917" width="0.3671%" height="15" fill="rgb(231,57,52)" fg:x="42" fg:w="16"/><text x="1.2135%" y="927.50"></text></g><g><title>y2021::d12::main2::traverse (16 samples, 0.37%)</title><rect x="0.9635%" y="901" width="0.3671%" height="15" fill="rgb(248,177,22)" fg:x="42" fg:w="16"/><text x="1.2135%" y="911.50"></text></g><g><title>y2021::d12::main2::traverse (16 samples, 0.37%)</title><rect x="0.9635%" y="885" width="0.3671%" height="15" fill="rgb(215,211,37)" fg:x="42" fg:w="16"/><text x="1.2135%" y="895.50"></text></g><g><title>y2021::d12::main2::traverse (16 samples, 0.37%)</title><rect x="0.9635%" y="869" width="0.3671%" height="15" fill="rgb(241,128,51)" fg:x="42" fg:w="16"/><text x="1.2135%" y="879.50"></text></g><g><title>y2021::d12::main2::traverse (8 samples, 0.18%)</title><rect x="1.1471%" y="853" width="0.1835%" height="15" fill="rgb(227,165,31)" fg:x="50" fg:w="8"/><text x="1.3971%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="1.3076%" y="837" width="0.0229%" height="15" fill="rgb(228,167,24)" fg:x="57" fg:w="1"/><text x="1.5576%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="1.3076%" y="821" width="0.0229%" height="15" fill="rgb(228,143,12)" fg:x="57" fg:w="1"/><text x="1.5576%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="1.3076%" y="805" width="0.0229%" height="15" fill="rgb(249,149,8)" fg:x="57" fg:w="1"/><text x="1.5576%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="1.3076%" y="789" width="0.0229%" height="15" fill="rgb(243,35,44)" fg:x="57" fg:w="1"/><text x="1.5576%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="1.3076%" y="773" width="0.0229%" height="15" fill="rgb(246,89,9)" fg:x="57" fg:w="1"/><text x="1.5576%" y="783.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="1.3076%" y="757" width="0.0229%" height="15" fill="rgb(233,213,13)" fg:x="57" fg:w="1"/><text x="1.5576%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="1.3076%" y="741" width="0.0229%" height="15" fill="rgb(233,141,41)" fg:x="57" fg:w="1"/><text x="1.5576%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="1.3076%" y="725" width="0.0229%" height="15" fill="rgb(239,167,4)" fg:x="57" fg:w="1"/><text x="1.5576%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="1.3076%" y="709" width="0.0229%" height="15" fill="rgb(209,217,16)" fg:x="57" fg:w="1"/><text x="1.5576%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="1.3076%" y="693" width="0.0229%" height="15" fill="rgb(219,88,35)" fg:x="57" fg:w="1"/><text x="1.5576%" y="703.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.05%)</title><rect x="1.3306%" y="1045" width="0.0459%" height="15" fill="rgb(220,193,23)" fg:x="58" fg:w="2"/><text x="1.5806%" y="1055.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.05%)</title><rect x="1.3306%" y="1029" width="0.0459%" height="15" fill="rgb(230,90,52)" fg:x="58" fg:w="2"/><text x="1.5806%" y="1039.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="1.3306%" y="1013" width="0.0459%" height="15" fill="rgb(252,106,19)" fg:x="58" fg:w="2"/><text x="1.5806%" y="1023.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="1.3306%" y="997" width="0.0459%" height="15" fill="rgb(206,74,20)" fg:x="58" fg:w="2"/><text x="1.5806%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="1.3306%" y="981" width="0.0459%" height="15" fill="rgb(230,138,44)" fg:x="58" fg:w="2"/><text x="1.5806%" y="991.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.05%)</title><rect x="1.3306%" y="965" width="0.0459%" height="15" fill="rgb(235,182,43)" fg:x="58" fg:w="2"/><text x="1.5806%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="1.3306%" y="949" width="0.0459%" height="15" fill="rgb(242,16,51)" fg:x="58" fg:w="2"/><text x="1.5806%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="1.3306%" y="933" width="0.0459%" height="15" fill="rgb(248,9,4)" fg:x="58" fg:w="2"/><text x="1.5806%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="1.3306%" y="917" width="0.0459%" height="15" fill="rgb(210,31,22)" fg:x="58" fg:w="2"/><text x="1.5806%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="1.3306%" y="901" width="0.0459%" height="15" fill="rgb(239,54,39)" fg:x="58" fg:w="2"/><text x="1.5806%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="1.3306%" y="885" width="0.0459%" height="15" fill="rgb(230,99,41)" fg:x="58" fg:w="2"/><text x="1.5806%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="1.3306%" y="869" width="0.0459%" height="15" fill="rgb(253,106,12)" fg:x="58" fg:w="2"/><text x="1.5806%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.05%)</title><rect x="1.3306%" y="853" width="0.0459%" height="15" fill="rgb(213,46,41)" fg:x="58" fg:w="2"/><text x="1.5806%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="1.3306%" y="837" width="0.0459%" height="15" fill="rgb(215,133,35)" fg:x="58" fg:w="2"/><text x="1.5806%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.05%)</title><rect x="1.3306%" y="821" width="0.0459%" height="15" fill="rgb(213,28,5)" fg:x="58" fg:w="2"/><text x="1.5806%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.05%)</title><rect x="1.3306%" y="805" width="0.0459%" height="15" fill="rgb(215,77,49)" fg:x="58" fg:w="2"/><text x="1.5806%" y="815.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.05%)</title><rect x="1.3306%" y="789" width="0.0459%" height="15" fill="rgb(248,100,22)" fg:x="58" fg:w="2"/><text x="1.5806%" y="799.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.05%)</title><rect x="1.3306%" y="773" width="0.0459%" height="15" fill="rgb(208,67,9)" fg:x="58" fg:w="2"/><text x="1.5806%" y="783.50"></text></g><g><title>_int_realloc (2 samples, 0.05%)</title><rect x="1.3306%" y="757" width="0.0459%" height="15" fill="rgb(219,133,21)" fg:x="58" fg:w="2"/><text x="1.5806%" y="767.50"></text></g><g><title>_int_malloc (2 samples, 0.05%)</title><rect x="1.3306%" y="741" width="0.0459%" height="15" fill="rgb(246,46,29)" fg:x="58" fg:w="2"/><text x="1.5806%" y="751.50"></text></g><g><title>[unknown] (54 samples, 1.24%)</title><rect x="0.1835%" y="1349" width="1.2388%" height="15" fill="rgb(246,185,52)" fg:x="8" fg:w="54"/><text x="0.4335%" y="1359.50"></text></g><g><title>y2021::main (4 samples, 0.09%)</title><rect x="1.3306%" y="1333" width="0.0918%" height="15" fill="rgb(252,136,11)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1343.50"></text></g><g><title>y2021::d12::main2::run (4 samples, 0.09%)</title><rect x="1.3306%" y="1317" width="0.0918%" height="15" fill="rgb(219,138,53)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1327.50"></text></g><g><title>y2021::d12::main2::p02 (4 samples, 0.09%)</title><rect x="1.3306%" y="1301" width="0.0918%" height="15" fill="rgb(211,51,23)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1311.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.09%)</title><rect x="1.3306%" y="1285" width="0.0918%" height="15" fill="rgb(247,221,28)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1295.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.09%)</title><rect x="1.3306%" y="1269" width="0.0918%" height="15" fill="rgb(251,222,45)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1279.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.09%)</title><rect x="1.3306%" y="1253" width="0.0918%" height="15" fill="rgb(217,162,53)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1263.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.09%)</title><rect x="1.3306%" y="1237" width="0.0918%" height="15" fill="rgb(229,93,14)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1247.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.09%)</title><rect x="1.3306%" y="1221" width="0.0918%" height="15" fill="rgb(209,67,49)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1231.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.09%)</title><rect x="1.3306%" y="1205" width="0.0918%" height="15" fill="rgb(213,87,29)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1215.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.09%)</title><rect x="1.3306%" y="1189" width="0.0918%" height="15" fill="rgb(205,151,52)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1199.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.09%)</title><rect x="1.3306%" y="1173" width="0.0918%" height="15" fill="rgb(253,215,39)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1183.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.09%)</title><rect x="1.3306%" y="1157" width="0.0918%" height="15" fill="rgb(221,220,41)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1167.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.09%)</title><rect x="1.3306%" y="1141" width="0.0918%" height="15" fill="rgb(218,133,21)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1151.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.09%)</title><rect x="1.3306%" y="1125" width="0.0918%" height="15" fill="rgb(221,193,43)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1135.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.09%)</title><rect x="1.3306%" y="1109" width="0.0918%" height="15" fill="rgb(240,128,52)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1119.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.09%)</title><rect x="1.3306%" y="1093" width="0.0918%" height="15" fill="rgb(253,114,12)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1103.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.09%)</title><rect x="1.3306%" y="1077" width="0.0918%" height="15" fill="rgb(215,223,47)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1087.50"></text></g><g><title>y2021::d12::main2::traverse (4 samples, 0.09%)</title><rect x="1.3306%" y="1061" width="0.0918%" height="15" fill="rgb(248,225,23)" fg:x="58" fg:w="4"/><text x="1.5806%" y="1071.50"></text></g><g><title>y2021::d12::main2::traverse (2 samples, 0.05%)</title><rect x="1.3765%" y="1045" width="0.0459%" height="15" fill="rgb(250,108,0)" fg:x="60" fg:w="2"/><text x="1.6265%" y="1055.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.05%)</title><rect x="1.3765%" y="1029" width="0.0459%" height="15" fill="rgb(228,208,7)" fg:x="60" fg:w="2"/><text x="1.6265%" y="1039.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.05%)</title><rect x="1.3765%" y="1013" width="0.0459%" height="15" fill="rgb(244,45,10)" fg:x="60" fg:w="2"/><text x="1.6265%" y="1023.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="1.3765%" y="997" width="0.0459%" height="15" fill="rgb(207,125,25)" fg:x="60" fg:w="2"/><text x="1.6265%" y="1007.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="1.3994%" y="981" width="0.0229%" height="15" fill="rgb(210,195,18)" fg:x="61" fg:w="1"/><text x="1.6494%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="1.3994%" y="965" width="0.0229%" height="15" fill="rgb(249,80,12)" fg:x="61" fg:w="1"/><text x="1.6494%" y="975.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.02%)</title><rect x="1.3994%" y="949" width="0.0229%" height="15" fill="rgb(221,65,9)" fg:x="61" fg:w="1"/><text x="1.6494%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="1.3994%" y="933" width="0.0229%" height="15" fill="rgb(235,49,36)" fg:x="61" fg:w="1"/><text x="1.6494%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="1.3994%" y="917" width="0.0229%" height="15" fill="rgb(225,32,20)" fg:x="61" fg:w="1"/><text x="1.6494%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="1.3994%" y="901" width="0.0229%" height="15" fill="rgb(215,141,46)" fg:x="61" fg:w="1"/><text x="1.6494%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="1.3994%" y="885" width="0.0229%" height="15" fill="rgb(250,160,47)" fg:x="61" fg:w="1"/><text x="1.6494%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect x="1.3994%" y="869" width="0.0229%" height="15" fill="rgb(216,222,40)" fg:x="61" fg:w="1"/><text x="1.6494%" y="879.50"></text></g><g><title>y2021::d01::main::part_1 (1 samples, 0.02%)</title><rect x="1.4223%" y="1077" width="0.0229%" height="15" fill="rgb(234,217,39)" fg:x="62" fg:w="1"/><text x="1.6723%" y="1087.50"></text></g><g><title>y2021::utils::file::line_as_usize (1 samples, 0.02%)</title><rect x="1.4223%" y="1061" width="0.0229%" height="15" fill="rgb(207,178,40)" fg:x="62" fg:w="1"/><text x="1.6723%" y="1071.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="1.4223%" y="1045" width="0.0229%" height="15" fill="rgb(221,136,13)" fg:x="62" fg:w="1"/><text x="1.6723%" y="1055.50"></text></g><g><title>y2021::d01::main::run (3 samples, 0.07%)</title><rect x="1.4223%" y="1093" width="0.0688%" height="15" fill="rgb(249,199,10)" fg:x="62" fg:w="3"/><text x="1.6723%" y="1103.50"></text></g><g><title>y2021::d01::main::part_2 (2 samples, 0.05%)</title><rect x="1.4453%" y="1077" width="0.0459%" height="15" fill="rgb(249,222,13)" fg:x="63" fg:w="2"/><text x="1.6953%" y="1087.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.4682%" y="1061" width="0.0229%" height="15" fill="rgb(244,185,38)" fg:x="64" fg:w="1"/><text x="1.7182%" y="1071.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.02%)</title><rect x="1.4682%" y="1045" width="0.0229%" height="15" fill="rgb(236,202,9)" fg:x="64" fg:w="1"/><text x="1.7182%" y="1055.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.02%)</title><rect x="1.4682%" y="1029" width="0.0229%" height="15" fill="rgb(250,229,37)" fg:x="64" fg:w="1"/><text x="1.7182%" y="1039.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 0.02%)</title><rect x="1.4682%" y="1013" width="0.0229%" height="15" fill="rgb(206,174,23)" fg:x="64" fg:w="1"/><text x="1.7182%" y="1023.50"></text></g><g><title>std::io::read_until (1 samples, 0.02%)</title><rect x="1.4682%" y="997" width="0.0229%" height="15" fill="rgb(211,33,43)" fg:x="64" fg:w="1"/><text x="1.7182%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="1.4682%" y="981" width="0.0229%" height="15" fill="rgb(245,58,50)" fg:x="64" fg:w="1"/><text x="1.7182%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="1.4682%" y="965" width="0.0229%" height="15" fill="rgb(244,68,36)" fg:x="64" fg:w="1"/><text x="1.7182%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="1.4682%" y="949" width="0.0229%" height="15" fill="rgb(232,229,15)" fg:x="64" fg:w="1"/><text x="1.7182%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="1.4682%" y="933" width="0.0229%" height="15" fill="rgb(254,30,23)" fg:x="64" fg:w="1"/><text x="1.7182%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1.4682%" y="917" width="0.0229%" height="15" fill="rgb(235,160,14)" fg:x="64" fg:w="1"/><text x="1.7182%" y="927.50"></text></g><g><title>y2021::d02::main::p01 (1 samples, 0.02%)</title><rect x="1.4912%" y="1077" width="0.0229%" height="15" fill="rgb(212,155,44)" fg:x="65" fg:w="1"/><text x="1.7412%" y="1087.50"></text></g><g><title>y2021::d02::main::str_to_command (1 samples, 0.02%)</title><rect x="1.4912%" y="1061" width="0.0229%" height="15" fill="rgb(226,2,50)" fg:x="65" fg:w="1"/><text x="1.7412%" y="1071.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (1 samples, 0.02%)</title><rect x="1.4912%" y="1045" width="0.0229%" height="15" fill="rgb(234,177,6)" fg:x="65" fg:w="1"/><text x="1.7412%" y="1055.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.02%)</title><rect x="1.4912%" y="1029" width="0.0229%" height="15" fill="rgb(217,24,9)" fg:x="65" fg:w="1"/><text x="1.7412%" y="1039.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.02%)</title><rect x="1.4912%" y="1013" width="0.0229%" height="15" fill="rgb(220,13,46)" fg:x="65" fg:w="1"/><text x="1.7412%" y="1023.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.02%)</title><rect x="1.4912%" y="997" width="0.0229%" height="15" fill="rgb(239,221,27)" fg:x="65" fg:w="1"/><text x="1.7412%" y="1007.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="1.4912%" y="981" width="0.0229%" height="15" fill="rgb(222,198,25)" fg:x="65" fg:w="1"/><text x="1.7412%" y="991.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="1.4912%" y="965" width="0.0229%" height="15" fill="rgb(211,99,13)" fg:x="65" fg:w="1"/><text x="1.7412%" y="975.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="1.4912%" y="949" width="0.0229%" height="15" fill="rgb(232,111,31)" fg:x="65" fg:w="1"/><text x="1.7412%" y="959.50"></text></g><g><title>y2021::d02::main::run (2 samples, 0.05%)</title><rect x="1.4912%" y="1093" width="0.0459%" height="15" fill="rgb(245,82,37)" fg:x="65" fg:w="2"/><text x="1.7412%" y="1103.50"></text></g><g><title>y2021::d02::main::p02 (1 samples, 0.02%)</title><rect x="1.5141%" y="1077" width="0.0229%" height="15" fill="rgb(227,149,46)" fg:x="66" fg:w="1"/><text x="1.7641%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="1.5141%" y="1061" width="0.0229%" height="15" fill="rgb(218,36,50)" fg:x="66" fg:w="1"/><text x="1.7641%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="1.5141%" y="1045" width="0.0229%" height="15" fill="rgb(226,80,48)" fg:x="66" fg:w="1"/><text x="1.7641%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="1.5141%" y="1029" width="0.0229%" height="15" fill="rgb(238,224,15)" fg:x="66" fg:w="1"/><text x="1.7641%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="1.5141%" y="1013" width="0.0229%" height="15" fill="rgb(241,136,10)" fg:x="66" fg:w="1"/><text x="1.7641%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="1.5141%" y="997" width="0.0229%" height="15" fill="rgb(208,32,45)" fg:x="66" fg:w="1"/><text x="1.7641%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="1.5141%" y="981" width="0.0229%" height="15" fill="rgb(207,135,9)" fg:x="66" fg:w="1"/><text x="1.7641%" y="991.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="1.5141%" y="965" width="0.0229%" height="15" fill="rgb(206,86,44)" fg:x="66" fg:w="1"/><text x="1.7641%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.5370%" y="1061" width="0.0229%" height="15" fill="rgb(245,177,15)" fg:x="67" fg:w="1"/><text x="1.7870%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.5370%" y="1045" width="0.0229%" height="15" fill="rgb(206,64,50)" fg:x="67" fg:w="1"/><text x="1.7870%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.5600%" y="853" width="0.0229%" height="15" fill="rgb(234,36,40)" fg:x="68" fg:w="1"/><text x="1.8100%" y="863.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.5600%" y="837" width="0.0229%" height="15" fill="rgb(213,64,8)" fg:x="68" fg:w="1"/><text x="1.8100%" y="847.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.02%)</title><rect x="1.5600%" y="821" width="0.0229%" height="15" fill="rgb(210,75,36)" fg:x="68" fg:w="1"/><text x="1.8100%" y="831.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.02%)</title><rect x="1.5600%" y="805" width="0.0229%" height="15" fill="rgb(229,88,21)" fg:x="68" fg:w="1"/><text x="1.8100%" y="815.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 0.02%)</title><rect x="1.5600%" y="789" width="0.0229%" height="15" fill="rgb(252,204,47)" fg:x="68" fg:w="1"/><text x="1.8100%" y="799.50"></text></g><g><title>std::io::read_until (1 samples, 0.02%)</title><rect x="1.5600%" y="773" width="0.0229%" height="15" fill="rgb(208,77,27)" fg:x="68" fg:w="1"/><text x="1.8100%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="1.5600%" y="757" width="0.0229%" height="15" fill="rgb(221,76,26)" fg:x="68" fg:w="1"/><text x="1.8100%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="1.5600%" y="741" width="0.0229%" height="15" fill="rgb(225,139,18)" fg:x="68" fg:w="1"/><text x="1.8100%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="1.5600%" y="725" width="0.0229%" height="15" fill="rgb(230,137,11)" fg:x="68" fg:w="1"/><text x="1.8100%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.5600%" y="709" width="0.0229%" height="15" fill="rgb(212,28,1)" fg:x="68" fg:w="1"/><text x="1.8100%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.5600%" y="693" width="0.0229%" height="15" fill="rgb(248,164,17)" fg:x="68" fg:w="1"/><text x="1.8100%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="1.5600%" y="677" width="0.0229%" height="15" fill="rgb(222,171,42)" fg:x="68" fg:w="1"/><text x="1.8100%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="1.5600%" y="661" width="0.0229%" height="15" fill="rgb(243,84,45)" fg:x="68" fg:w="1"/><text x="1.8100%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.02%)</title><rect x="1.5600%" y="645" width="0.0229%" height="15" fill="rgb(252,49,23)" fg:x="68" fg:w="1"/><text x="1.8100%" y="655.50"></text></g><g><title>y2021::d03::main::p01 (3 samples, 0.07%)</title><rect x="1.5370%" y="1077" width="0.0688%" height="15" fill="rgb(215,19,7)" fg:x="67" fg:w="3"/><text x="1.7870%" y="1087.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d (2 samples, 0.05%)</title><rect x="1.5600%" y="1061" width="0.0459%" height="15" fill="rgb(238,81,41)" fg:x="68" fg:w="2"/><text x="1.8100%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="1.5600%" y="1045" width="0.0459%" height="15" fill="rgb(210,199,37)" fg:x="68" fg:w="2"/><text x="1.8100%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="1.5600%" y="1029" width="0.0459%" height="15" fill="rgb(244,192,49)" fg:x="68" fg:w="2"/><text x="1.8100%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="1.5600%" y="1013" width="0.0459%" height="15" fill="rgb(226,211,11)" fg:x="68" fg:w="2"/><text x="1.8100%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="1.5600%" y="997" width="0.0459%" height="15" fill="rgb(236,162,54)" fg:x="68" fg:w="2"/><text x="1.8100%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="1.5600%" y="981" width="0.0459%" height="15" fill="rgb(220,229,9)" fg:x="68" fg:w="2"/><text x="1.8100%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.05%)</title><rect x="1.5600%" y="965" width="0.0459%" height="15" fill="rgb(250,87,22)" fg:x="68" fg:w="2"/><text x="1.8100%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="1.5600%" y="949" width="0.0459%" height="15" fill="rgb(239,43,17)" fg:x="68" fg:w="2"/><text x="1.8100%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="1.5600%" y="933" width="0.0459%" height="15" fill="rgb(231,177,25)" fg:x="68" fg:w="2"/><text x="1.8100%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="1.5600%" y="917" width="0.0459%" height="15" fill="rgb(219,179,1)" fg:x="68" fg:w="2"/><text x="1.8100%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.05%)</title><rect x="1.5600%" y="901" width="0.0459%" height="15" fill="rgb(238,219,53)" fg:x="68" fg:w="2"/><text x="1.8100%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="1.5600%" y="885" width="0.0459%" height="15" fill="rgb(232,167,36)" fg:x="68" fg:w="2"/><text x="1.8100%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="1.5600%" y="869" width="0.0459%" height="15" fill="rgb(244,19,51)" fg:x="68" fg:w="2"/><text x="1.8100%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="1.5829%" y="853" width="0.0229%" height="15" fill="rgb(224,6,22)" fg:x="69" fg:w="1"/><text x="1.8329%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="1.5829%" y="837" width="0.0229%" height="15" fill="rgb(224,145,5)" fg:x="69" fg:w="1"/><text x="1.8329%" y="847.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d::{{closure}} (1 samples, 0.02%)</title><rect x="1.5829%" y="821" width="0.0229%" height="15" fill="rgb(234,130,49)" fg:x="69" fg:w="1"/><text x="1.8329%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.02%)</title><rect x="1.5829%" y="805" width="0.0229%" height="15" fill="rgb(254,6,2)" fg:x="69" fg:w="1"/><text x="1.8329%" y="815.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="1.5829%" y="789" width="0.0229%" height="15" fill="rgb(208,96,46)" fg:x="69" fg:w="1"/><text x="1.8329%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="1.5829%" y="773" width="0.0229%" height="15" fill="rgb(239,3,39)" fg:x="69" fg:w="1"/><text x="1.8329%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.5829%" y="757" width="0.0229%" height="15" fill="rgb(233,210,1)" fg:x="69" fg:w="1"/><text x="1.8329%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.5829%" y="741" width="0.0229%" height="15" fill="rgb(244,137,37)" fg:x="69" fg:w="1"/><text x="1.8329%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.5829%" y="725" width="0.0229%" height="15" fill="rgb(240,136,2)" fg:x="69" fg:w="1"/><text x="1.8329%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="1.5829%" y="709" width="0.0229%" height="15" fill="rgb(239,18,37)" fg:x="69" fg:w="1"/><text x="1.8329%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="1.5829%" y="693" width="0.0229%" height="15" fill="rgb(218,185,22)" fg:x="69" fg:w="1"/><text x="1.8329%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.5829%" y="677" width="0.0229%" height="15" fill="rgb(225,218,4)" fg:x="69" fg:w="1"/><text x="1.8329%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.5829%" y="661" width="0.0229%" height="15" fill="rgb(230,182,32)" fg:x="69" fg:w="1"/><text x="1.8329%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="1.5829%" y="645" width="0.0229%" height="15" fill="rgb(242,56,43)" fg:x="69" fg:w="1"/><text x="1.8329%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="1.5829%" y="629" width="0.0229%" height="15" fill="rgb(233,99,24)" fg:x="69" fg:w="1"/><text x="1.8329%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="1.5829%" y="613" width="0.0229%" height="15" fill="rgb(234,209,42)" fg:x="69" fg:w="1"/><text x="1.8329%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="1.5829%" y="597" width="0.0229%" height="15" fill="rgb(227,7,12)" fg:x="69" fg:w="1"/><text x="1.8329%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="1.5829%" y="581" width="0.0229%" height="15" fill="rgb(245,203,43)" fg:x="69" fg:w="1"/><text x="1.8329%" y="591.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="1.5829%" y="565" width="0.0229%" height="15" fill="rgb(238,205,33)" fg:x="69" fg:w="1"/><text x="1.8329%" y="575.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="1.5829%" y="549" width="0.0229%" height="15" fill="rgb(231,56,7)" fg:x="69" fg:w="1"/><text x="1.8329%" y="559.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="1.5829%" y="533" width="0.0229%" height="15" fill="rgb(244,186,29)" fg:x="69" fg:w="1"/><text x="1.8329%" y="543.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="1.5829%" y="517" width="0.0229%" height="15" fill="rgb(234,111,31)" fg:x="69" fg:w="1"/><text x="1.8329%" y="527.50"></text></g><g><title>alloc_perturb (1 samples, 0.02%)</title><rect x="1.5829%" y="501" width="0.0229%" height="15" fill="rgb(241,149,10)" fg:x="69" fg:w="1"/><text x="1.8329%" y="511.50"></text></g><g><title>y2021::d03::main::run (5 samples, 0.11%)</title><rect x="1.5370%" y="1093" width="0.1147%" height="15" fill="rgb(249,206,44)" fg:x="67" fg:w="5"/><text x="1.7870%" y="1103.50"></text></g><g><title>y2021::d03::main::p02 (2 samples, 0.05%)</title><rect x="1.6059%" y="1077" width="0.0459%" height="15" fill="rgb(251,153,30)" fg:x="70" fg:w="2"/><text x="1.8559%" y="1087.50"></text></g><g><title>y2021::utils::file::lines_as_vec2d (2 samples, 0.05%)</title><rect x="1.6059%" y="1061" width="0.0459%" height="15" fill="rgb(239,152,38)" fg:x="70" fg:w="2"/><text x="1.8559%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="1.6059%" y="1045" width="0.0459%" height="15" fill="rgb(249,139,47)" fg:x="70" fg:w="2"/><text x="1.8559%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="1.6059%" y="1029" width="0.0459%" height="15" fill="rgb(244,64,35)" fg:x="70" fg:w="2"/><text x="1.8559%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="1.6059%" y="1013" width="0.0459%" height="15" fill="rgb(216,46,15)" fg:x="70" fg:w="2"/><text x="1.8559%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="1.6059%" y="997" width="0.0459%" height="15" fill="rgb(250,74,19)" fg:x="70" fg:w="2"/><text x="1.8559%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="1.6059%" y="981" width="0.0459%" height="15" fill="rgb(249,42,33)" fg:x="70" fg:w="2"/><text x="1.8559%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.05%)</title><rect x="1.6059%" y="965" width="0.0459%" height="15" fill="rgb(242,149,17)" fg:x="70" fg:w="2"/><text x="1.8559%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.6288%" y="949" width="0.0229%" height="15" fill="rgb(244,29,21)" fg:x="71" fg:w="1"/><text x="1.8788%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.6288%" y="933" width="0.0229%" height="15" fill="rgb(220,130,37)" fg:x="71" fg:w="1"/><text x="1.8788%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.6288%" y="917" width="0.0229%" height="15" fill="rgb(211,67,2)" fg:x="71" fg:w="1"/><text x="1.8788%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.02%)</title><rect x="1.6288%" y="901" width="0.0229%" height="15" fill="rgb(235,68,52)" fg:x="71" fg:w="1"/><text x="1.8788%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;std::io::Lines&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;&gt;,y2021::utils::file::lines_as_vec2d::{{closure}}&gt;,y2021::utils::file::lines_as_vec2d::{{closure}}&gt;,y2021::utils::file::lines_as_vec2d::{{closure}}&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="1.6288%" y="885" width="0.0229%" height="15" fill="rgb(246,142,3)" fg:x="71" fg:w="1"/><text x="1.8788%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;std::io::Lines&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;&gt;,y2021::utils::file::lines_as_vec2d::{{closure}}&gt;,y2021::utils::file::lines_as_vec2d::{{closure}}&gt;,y2021::utils::file::lines_as_vec2d::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="1.6288%" y="869" width="0.0229%" height="15" fill="rgb(241,25,7)" fg:x="71" fg:w="1"/><text x="1.8788%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::map::Map&lt;std::io::Lines&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;&gt;,y2021::utils::file::lines_as_vec2d::{{closure}}&gt;,y2021::utils::file::lines_as_vec2d::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="1.6288%" y="853" width="0.0229%" height="15" fill="rgb(242,119,39)" fg:x="71" fg:w="1"/><text x="1.8788%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;std::io::Lines&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;&gt;,y2021::utils::file::lines_as_vec2d::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="1.6288%" y="837" width="0.0229%" height="15" fill="rgb(241,98,45)" fg:x="71" fg:w="1"/><text x="1.8788%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::Lines&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="1.6288%" y="821" width="0.0229%" height="15" fill="rgb(254,28,30)" fg:x="71" fg:w="1"/><text x="1.8788%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;&gt; (1 samples, 0.02%)</title><rect x="1.6288%" y="805" width="0.0229%" height="15" fill="rgb(241,142,54)" fg:x="71" fg:w="1"/><text x="1.8788%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (1 samples, 0.02%)</title><rect x="1.6288%" y="789" width="0.0229%" height="15" fill="rgb(222,85,15)" fg:x="71" fg:w="1"/><text x="1.8788%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (1 samples, 0.02%)</title><rect x="1.6288%" y="773" width="0.0229%" height="15" fill="rgb(210,85,47)" fg:x="71" fg:w="1"/><text x="1.8788%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (1 samples, 0.02%)</title><rect x="1.6288%" y="757" width="0.0229%" height="15" fill="rgb(224,206,25)" fg:x="71" fg:w="1"/><text x="1.8788%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1 samples, 0.02%)</title><rect x="1.6288%" y="741" width="0.0229%" height="15" fill="rgb(243,201,19)" fg:x="71" fg:w="1"/><text x="1.8788%" y="751.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="1.6288%" y="725" width="0.0229%" height="15" fill="rgb(236,59,4)" fg:x="71" fg:w="1"/><text x="1.8788%" y="735.50"></text></g><g><title>__close (1 samples, 0.02%)</title><rect x="1.6288%" y="709" width="0.0229%" height="15" fill="rgb(254,179,45)" fg:x="71" fg:w="1"/><text x="1.8788%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1.6288%" y="693" width="0.0229%" height="15" fill="rgb(226,14,10)" fg:x="71" fg:w="1"/><text x="1.8788%" y="703.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1.6288%" y="677" width="0.0229%" height="15" fill="rgb(244,27,41)" fg:x="71" fg:w="1"/><text x="1.8788%" y="687.50"></text></g><g><title>__x64_sys_close (1 samples, 0.02%)</title><rect x="1.6288%" y="661" width="0.0229%" height="15" fill="rgb(235,35,32)" fg:x="71" fg:w="1"/><text x="1.8788%" y="671.50"></text></g><g><title>close_fd (1 samples, 0.02%)</title><rect x="1.6288%" y="645" width="0.0229%" height="15" fill="rgb(218,68,31)" fg:x="71" fg:w="1"/><text x="1.8788%" y="655.50"></text></g><g><title>filp_close (1 samples, 0.02%)</title><rect x="1.6288%" y="629" width="0.0229%" height="15" fill="rgb(207,120,37)" fg:x="71" fg:w="1"/><text x="1.8788%" y="639.50"></text></g><g><title>fput_many (1 samples, 0.02%)</title><rect x="1.6288%" y="613" width="0.0229%" height="15" fill="rgb(227,98,0)" fg:x="71" fg:w="1"/><text x="1.8788%" y="623.50"></text></g><g><title>y2021::d04::main::BingoPlayer::take (1 samples, 0.02%)</title><rect x="1.6518%" y="1061" width="0.0229%" height="15" fill="rgb(207,7,3)" fg:x="72" fg:w="1"/><text x="1.9018%" y="1071.50"></text></g><g><title>y2021::d04::main::p01 (2 samples, 0.05%)</title><rect x="1.6518%" y="1077" width="0.0459%" height="15" fill="rgb(206,98,19)" fg:x="72" fg:w="2"/><text x="1.9018%" y="1087.50"></text></g><g><title>y2021::d04::main::bingo_game_from_path (1 samples, 0.02%)</title><rect x="1.6747%" y="1061" width="0.0229%" height="15" fill="rgb(217,5,26)" fg:x="73" fg:w="1"/><text x="1.9247%" y="1071.50"></text></g><g><title>y2021::d04::main::bingo_line_to_vec (1 samples, 0.02%)</title><rect x="1.6747%" y="1045" width="0.0229%" height="15" fill="rgb(235,190,38)" fg:x="73" fg:w="1"/><text x="1.9247%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="1.6747%" y="1029" width="0.0229%" height="15" fill="rgb(247,86,24)" fg:x="73" fg:w="1"/><text x="1.9247%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.6747%" y="1013" width="0.0229%" height="15" fill="rgb(205,101,16)" fg:x="73" fg:w="1"/><text x="1.9247%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.6747%" y="997" width="0.0229%" height="15" fill="rgb(246,168,33)" fg:x="73" fg:w="1"/><text x="1.9247%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="1.6747%" y="981" width="0.0229%" height="15" fill="rgb(231,114,1)" fg:x="73" fg:w="1"/><text x="1.9247%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="1.6747%" y="965" width="0.0229%" height="15" fill="rgb(207,184,53)" fg:x="73" fg:w="1"/><text x="1.9247%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="1.6747%" y="949" width="0.0229%" height="15" fill="rgb(224,95,51)" fg:x="73" fg:w="1"/><text x="1.9247%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.6747%" y="933" width="0.0229%" height="15" fill="rgb(212,188,45)" fg:x="73" fg:w="1"/><text x="1.9247%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="1.6747%" y="917" width="0.0229%" height="15" fill="rgb(223,154,38)" fg:x="73" fg:w="1"/><text x="1.9247%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="1.6747%" y="901" width="0.0229%" height="15" fill="rgb(251,22,52)" fg:x="73" fg:w="1"/><text x="1.9247%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="1.6747%" y="885" width="0.0229%" height="15" fill="rgb(229,209,22)" fg:x="73" fg:w="1"/><text x="1.9247%" y="895.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="1.6747%" y="869" width="0.0229%" height="15" fill="rgb(234,138,34)" fg:x="73" fg:w="1"/><text x="1.9247%" y="879.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="1.6747%" y="853" width="0.0229%" height="15" fill="rgb(212,95,11)" fg:x="73" fg:w="1"/><text x="1.9247%" y="863.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="1.6747%" y="837" width="0.0229%" height="15" fill="rgb(240,179,47)" fg:x="73" fg:w="1"/><text x="1.9247%" y="847.50"></text></g><g><title>y2021::d04::main::BingoPlayer::take (1 samples, 0.02%)</title><rect x="1.6976%" y="1061" width="0.0229%" height="15" fill="rgb(240,163,11)" fg:x="74" fg:w="1"/><text x="1.9476%" y="1071.50"></text></g><g><title>y2021::d04::main::run (4 samples, 0.09%)</title><rect x="1.6518%" y="1093" width="0.0918%" height="15" fill="rgb(236,37,12)" fg:x="72" fg:w="4"/><text x="1.9018%" y="1103.50"></text></g><g><title>y2021::d04::main::p02 (2 samples, 0.05%)</title><rect x="1.6976%" y="1077" width="0.0459%" height="15" fill="rgb(232,164,16)" fg:x="74" fg:w="2"/><text x="1.9476%" y="1087.50"></text></g><g><title>y2021::d04::main::bingo_game_from_path (1 samples, 0.02%)</title><rect x="1.7206%" y="1061" width="0.0229%" height="15" fill="rgb(244,205,15)" fg:x="75" fg:w="1"/><text x="1.9706%" y="1071.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="1.7206%" y="1045" width="0.0229%" height="15" fill="rgb(223,117,47)" fg:x="75" fg:w="1"/><text x="1.9706%" y="1055.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.02%)</title><rect x="1.7206%" y="1029" width="0.0229%" height="15" fill="rgb(244,107,35)" fg:x="75" fg:w="1"/><text x="1.9706%" y="1039.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.02%)</title><rect x="1.7206%" y="1013" width="0.0229%" height="15" fill="rgb(205,140,8)" fg:x="75" fg:w="1"/><text x="1.9706%" y="1023.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 0.02%)</title><rect x="1.7206%" y="997" width="0.0229%" height="15" fill="rgb(228,84,46)" fg:x="75" fg:w="1"/><text x="1.9706%" y="1007.50"></text></g><g><title>std::io::read_until (1 samples, 0.02%)</title><rect x="1.7206%" y="981" width="0.0229%" height="15" fill="rgb(254,188,9)" fg:x="75" fg:w="1"/><text x="1.9706%" y="991.50"></text></g><g><title>std::sys_common::memchr::memchr (1 samples, 0.02%)</title><rect x="1.7206%" y="965" width="0.0229%" height="15" fill="rgb(206,112,54)" fg:x="75" fg:w="1"/><text x="1.9706%" y="975.50"></text></g><g><title>std::sys::unix::memchr::memchr (1 samples, 0.02%)</title><rect x="1.7206%" y="949" width="0.0229%" height="15" fill="rgb(216,84,49)" fg:x="75" fg:w="1"/><text x="1.9706%" y="959.50"></text></g><g><title>__memchr_avx2 (1 samples, 0.02%)</title><rect x="1.7206%" y="933" width="0.0229%" height="15" fill="rgb(214,194,35)" fg:x="75" fg:w="1"/><text x="1.9706%" y="943.50"></text></g><g><title>std::io::stdio::_print (1 samples, 0.02%)</title><rect x="1.7435%" y="1077" width="0.0229%" height="15" fill="rgb(249,28,3)" fg:x="76" fg:w="1"/><text x="1.9935%" y="1087.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.02%)</title><rect x="1.7435%" y="1061" width="0.0229%" height="15" fill="rgb(222,56,52)" fg:x="76" fg:w="1"/><text x="1.9935%" y="1071.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="1.7435%" y="1045" width="0.0229%" height="15" fill="rgb(245,217,50)" fg:x="76" fg:w="1"/><text x="1.9935%" y="1055.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="1.7435%" y="1029" width="0.0229%" height="15" fill="rgb(213,201,24)" fg:x="76" fg:w="1"/><text x="1.9935%" y="1039.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.02%)</title><rect x="1.7435%" y="1013" width="0.0229%" height="15" fill="rgb(248,116,28)" fg:x="76" fg:w="1"/><text x="1.9935%" y="1023.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="1.7435%" y="997" width="0.0229%" height="15" fill="rgb(219,72,43)" fg:x="76" fg:w="1"/><text x="1.9935%" y="1007.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="1.7435%" y="981" width="0.0229%" height="15" fill="rgb(209,138,14)" fg:x="76" fg:w="1"/><text x="1.9935%" y="991.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="1.7435%" y="965" width="0.0229%" height="15" fill="rgb(222,18,33)" fg:x="76" fg:w="1"/><text x="1.9935%" y="975.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="1.7435%" y="949" width="0.0229%" height="15" fill="rgb(213,199,7)" fg:x="76" fg:w="1"/><text x="1.9935%" y="959.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="1.7435%" y="933" width="0.0229%" height="15" fill="rgb(250,110,10)" fg:x="76" fg:w="1"/><text x="1.9935%" y="943.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.02%)</title><rect x="1.7435%" y="917" width="0.0229%" height="15" fill="rgb(248,123,6)" fg:x="76" fg:w="1"/><text x="1.9935%" y="927.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 0.02%)</title><rect x="1.7435%" y="901" width="0.0229%" height="15" fill="rgb(206,91,31)" fg:x="76" fg:w="1"/><text x="1.9935%" y="911.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.02%)</title><rect x="1.7435%" y="885" width="0.0229%" height="15" fill="rgb(211,154,13)" fg:x="76" fg:w="1"/><text x="1.9935%" y="895.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.02%)</title><rect x="1.7435%" y="869" width="0.0229%" height="15" fill="rgb(225,148,7)" fg:x="76" fg:w="1"/><text x="1.9935%" y="879.50"></text></g><g><title>__libc_write (1 samples, 0.02%)</title><rect x="1.7435%" y="853" width="0.0229%" height="15" fill="rgb(220,160,43)" fg:x="76" fg:w="1"/><text x="1.9935%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1.7435%" y="837" width="0.0229%" height="15" fill="rgb(213,52,39)" fg:x="76" fg:w="1"/><text x="1.9935%" y="847.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1.7435%" y="821" width="0.0229%" height="15" fill="rgb(243,137,7)" fg:x="76" fg:w="1"/><text x="1.9935%" y="831.50"></text></g><g><title>__x64_sys_write (1 samples, 0.02%)</title><rect x="1.7435%" y="805" width="0.0229%" height="15" fill="rgb(230,79,13)" fg:x="76" fg:w="1"/><text x="1.9935%" y="815.50"></text></g><g><title>ksys_write (1 samples, 0.02%)</title><rect x="1.7435%" y="789" width="0.0229%" height="15" fill="rgb(247,105,23)" fg:x="76" fg:w="1"/><text x="1.9935%" y="799.50"></text></g><g><title>vfs_write (1 samples, 0.02%)</title><rect x="1.7435%" y="773" width="0.0229%" height="15" fill="rgb(223,179,41)" fg:x="76" fg:w="1"/><text x="1.9935%" y="783.50"></text></g><g><title>new_sync_write (1 samples, 0.02%)</title><rect x="1.7435%" y="757" width="0.0229%" height="15" fill="rgb(218,9,34)" fg:x="76" fg:w="1"/><text x="1.9935%" y="767.50"></text></g><g><title>tty_write (1 samples, 0.02%)</title><rect x="1.7435%" y="741" width="0.0229%" height="15" fill="rgb(222,106,8)" fg:x="76" fg:w="1"/><text x="1.9935%" y="751.50"></text></g><g><title>file_tty_write.isra.0 (1 samples, 0.02%)</title><rect x="1.7435%" y="725" width="0.0229%" height="15" fill="rgb(211,220,0)" fg:x="76" fg:w="1"/><text x="1.9935%" y="735.50"></text></g><g><title>process_echoes (1 samples, 0.02%)</title><rect x="1.7435%" y="709" width="0.0229%" height="15" fill="rgb(229,52,16)" fg:x="76" fg:w="1"/><text x="1.9935%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (8 samples, 0.18%)</title><rect x="2.2482%" y="741" width="0.1835%" height="15" fill="rgb(212,155,18)" fg:x="98" fg:w="8"/><text x="2.4982%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (8 samples, 0.18%)</title><rect x="2.2482%" y="725" width="0.1835%" height="15" fill="rgb(242,21,14)" fg:x="98" fg:w="8"/><text x="2.4982%" y="735.50"></text></g><g><title>core::ptr::write (8 samples, 0.18%)</title><rect x="2.2482%" y="709" width="0.1835%" height="15" fill="rgb(222,19,48)" fg:x="98" fg:w="8"/><text x="2.4982%" y="719.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (9 samples, 0.21%)</title><rect x="2.2482%" y="805" width="0.2065%" height="15" fill="rgb(232,45,27)" fg:x="98" fg:w="9"/><text x="2.4982%" y="815.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (9 samples, 0.21%)</title><rect x="2.2482%" y="789" width="0.2065%" height="15" fill="rgb(249,103,42)" fg:x="98" fg:w="9"/><text x="2.4982%" y="799.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (9 samples, 0.21%)</title><rect x="2.2482%" y="773" width="0.2065%" height="15" fill="rgb(246,81,33)" fg:x="98" fg:w="9"/><text x="2.4982%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (9 samples, 0.21%)</title><rect x="2.2482%" y="757" width="0.2065%" height="15" fill="rgb(252,33,42)" fg:x="98" fg:w="9"/><text x="2.4982%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.02%)</title><rect x="2.4318%" y="741" width="0.0229%" height="15" fill="rgb(209,212,41)" fg:x="106" fg:w="1"/><text x="2.6818%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="2.4318%" y="725" width="0.0229%" height="15" fill="rgb(207,154,6)" fg:x="106" fg:w="1"/><text x="2.6818%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="2.4318%" y="709" width="0.0229%" height="15" fill="rgb(223,64,47)" fg:x="106" fg:w="1"/><text x="2.6818%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="2.4318%" y="693" width="0.0229%" height="15" fill="rgb(211,161,38)" fg:x="106" fg:w="1"/><text x="2.6818%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="2.4318%" y="677" width="0.0229%" height="15" fill="rgb(219,138,40)" fg:x="106" fg:w="1"/><text x="2.6818%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="2.4776%" y="709" width="0.0229%" height="15" fill="rgb(241,228,46)" fg:x="108" fg:w="1"/><text x="2.7276%" y="719.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="2.4776%" y="693" width="0.0229%" height="15" fill="rgb(223,209,38)" fg:x="108" fg:w="1"/><text x="2.7276%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.02%)</title><rect x="2.4776%" y="677" width="0.0229%" height="15" fill="rgb(236,164,45)" fg:x="108" fg:w="1"/><text x="2.7276%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.02%)</title><rect x="2.4776%" y="661" width="0.0229%" height="15" fill="rgb(231,15,5)" fg:x="108" fg:w="1"/><text x="2.7276%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="2.4776%" y="645" width="0.0229%" height="15" fill="rgb(252,35,15)" fg:x="108" fg:w="1"/><text x="2.7276%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="2.4776%" y="629" width="0.0229%" height="15" fill="rgb(248,181,18)" fg:x="108" fg:w="1"/><text x="2.7276%" y="639.50"></text></g><g><title>__GI_munmap (1 samples, 0.02%)</title><rect x="2.4776%" y="613" width="0.0229%" height="15" fill="rgb(233,39,42)" fg:x="108" fg:w="1"/><text x="2.7276%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="2.4776%" y="597" width="0.0229%" height="15" fill="rgb(238,110,33)" fg:x="108" fg:w="1"/><text x="2.7276%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="2.4776%" y="581" width="0.0229%" height="15" fill="rgb(233,195,10)" fg:x="108" fg:w="1"/><text x="2.7276%" y="591.50"></text></g><g><title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="2.4776%" y="565" width="0.0229%" height="15" fill="rgb(254,105,3)" fg:x="108" fg:w="1"/><text x="2.7276%" y="575.50"></text></g><g><title>__vm_munmap (1 samples, 0.02%)</title><rect x="2.4776%" y="549" width="0.0229%" height="15" fill="rgb(221,225,9)" fg:x="108" fg:w="1"/><text x="2.7276%" y="559.50"></text></g><g><title>__do_munmap (1 samples, 0.02%)</title><rect x="2.4776%" y="533" width="0.0229%" height="15" fill="rgb(224,227,45)" fg:x="108" fg:w="1"/><text x="2.7276%" y="543.50"></text></g><g><title>unmap_region (1 samples, 0.02%)</title><rect x="2.4776%" y="517" width="0.0229%" height="15" fill="rgb(229,198,43)" fg:x="108" fg:w="1"/><text x="2.7276%" y="527.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="2.4776%" y="501" width="0.0229%" height="15" fill="rgb(206,209,35)" fg:x="108" fg:w="1"/><text x="2.7276%" y="511.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.02%)</title><rect x="2.4776%" y="485" width="0.0229%" height="15" fill="rgb(245,195,53)" fg:x="108" fg:w="1"/><text x="2.7276%" y="495.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="2.4776%" y="469" width="0.0229%" height="15" fill="rgb(240,92,26)" fg:x="108" fg:w="1"/><text x="2.7276%" y="479.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="2.4776%" y="453" width="0.0229%" height="15" fill="rgb(207,40,23)" fg:x="108" fg:w="1"/><text x="2.7276%" y="463.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="2.4776%" y="437" width="0.0229%" height="15" fill="rgb(223,111,35)" fg:x="108" fg:w="1"/><text x="2.7276%" y="447.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="2.4776%" y="421" width="0.0229%" height="15" fill="rgb(229,147,28)" fg:x="108" fg:w="1"/><text x="2.7276%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="2.6382%" y="629" width="0.0229%" height="15" fill="rgb(211,29,28)" fg:x="115" fg:w="1"/><text x="2.8882%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="2.6382%" y="613" width="0.0229%" height="15" fill="rgb(228,72,33)" fg:x="115" fg:w="1"/><text x="2.8882%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.11%)</title><rect x="2.7300%" y="613" width="0.1147%" height="15" fill="rgb(205,214,31)" fg:x="119" fg:w="5"/><text x="2.9800%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (14 samples, 0.32%)</title><rect x="2.5465%" y="677" width="0.3212%" height="15" fill="rgb(224,111,15)" fg:x="111" fg:w="14"/><text x="2.7965%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (14 samples, 0.32%)</title><rect x="2.5465%" y="661" width="0.3212%" height="15" fill="rgb(253,21,26)" fg:x="111" fg:w="14"/><text x="2.7965%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (14 samples, 0.32%)</title><rect x="2.5465%" y="645" width="0.3212%" height="15" fill="rgb(245,139,43)" fg:x="111" fg:w="14"/><text x="2.7965%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.21%)</title><rect x="2.6612%" y="629" width="0.2065%" height="15" fill="rgb(252,170,7)" fg:x="116" fg:w="9"/><text x="2.9112%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="2.8447%" y="613" width="0.0229%" height="15" fill="rgb(231,118,14)" fg:x="124" fg:w="1"/><text x="3.0947%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.05%)</title><rect x="2.8676%" y="677" width="0.0459%" height="15" fill="rgb(238,83,0)" fg:x="125" fg:w="2"/><text x="3.1176%" y="687.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.05%)</title><rect x="2.8676%" y="661" width="0.0459%" height="15" fill="rgb(221,39,39)" fg:x="125" fg:w="2"/><text x="3.1176%" y="671.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="2.8906%" y="645" width="0.0229%" height="15" fill="rgb(222,119,46)" fg:x="126" fg:w="1"/><text x="3.1406%" y="655.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="2.8906%" y="629" width="0.0229%" height="15" fill="rgb(222,165,49)" fg:x="126" fg:w="1"/><text x="3.1406%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.09%)</title><rect x="3.0970%" y="565" width="0.0918%" height="15" fill="rgb(219,113,52)" fg:x="135" fg:w="4"/><text x="3.3470%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.11%)</title><rect x="3.0970%" y="581" width="0.1147%" height="15" fill="rgb(214,7,15)" fg:x="135" fg:w="5"/><text x="3.3470%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="3.1888%" y="565" width="0.0229%" height="15" fill="rgb(235,32,4)" fg:x="139" fg:w="1"/><text x="3.4388%" y="575.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="3.2117%" y="581" width="0.0229%" height="15" fill="rgb(238,90,54)" fg:x="140" fg:w="1"/><text x="3.4617%" y="591.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (33 samples, 0.76%)</title><rect x="2.5006%" y="709" width="0.7571%" height="15" fill="rgb(213,208,19)" fg:x="109" fg:w="33"/><text x="2.7506%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (33 samples, 0.76%)</title><rect x="2.5006%" y="693" width="0.7571%" height="15" fill="rgb(233,156,4)" fg:x="109" fg:w="33"/><text x="2.7506%" y="703.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (15 samples, 0.34%)</title><rect x="2.9135%" y="677" width="0.3441%" height="15" fill="rgb(207,194,5)" fg:x="127" fg:w="15"/><text x="3.1635%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (13 samples, 0.30%)</title><rect x="2.9594%" y="661" width="0.2982%" height="15" fill="rgb(206,111,30)" fg:x="129" fg:w="13"/><text x="3.2094%" y="671.50"></text></g><g><title>core::hash::Hasher::write_usize (12 samples, 0.28%)</title><rect x="2.9823%" y="645" width="0.2753%" height="15" fill="rgb(243,70,54)" fg:x="130" fg:w="12"/><text x="3.2323%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.28%)</title><rect x="2.9823%" y="629" width="0.2753%" height="15" fill="rgb(242,28,8)" fg:x="130" fg:w="12"/><text x="3.2323%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.28%)</title><rect x="2.9823%" y="613" width="0.2753%" height="15" fill="rgb(219,106,18)" fg:x="130" fg:w="12"/><text x="3.2323%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.28%)</title><rect x="2.9823%" y="597" width="0.2753%" height="15" fill="rgb(244,222,10)" fg:x="130" fg:w="12"/><text x="3.2323%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="3.2347%" y="581" width="0.0229%" height="15" fill="rgb(236,179,52)" fg:x="141" fg:w="1"/><text x="3.4847%" y="591.50"></text></g><g><title>clear_page_rep (5 samples, 0.11%)</title><rect x="3.4641%" y="517" width="0.1147%" height="15" fill="rgb(213,23,39)" fg:x="151" fg:w="5"/><text x="3.7141%" y="527.50"></text></g><g><title>alloc_pages_vma (11 samples, 0.25%)</title><rect x="3.4641%" y="565" width="0.2524%" height="15" fill="rgb(238,48,10)" fg:x="151" fg:w="11"/><text x="3.7141%" y="575.50"></text></g><g><title>__alloc_pages_nodemask (11 samples, 0.25%)</title><rect x="3.4641%" y="549" width="0.2524%" height="15" fill="rgb(251,196,23)" fg:x="151" fg:w="11"/><text x="3.7141%" y="559.50"></text></g><g><title>get_page_from_freelist (11 samples, 0.25%)</title><rect x="3.4641%" y="533" width="0.2524%" height="15" fill="rgb(250,152,24)" fg:x="151" fg:w="11"/><text x="3.7141%" y="543.50"></text></g><g><title>rmqueue (6 samples, 0.14%)</title><rect x="3.5788%" y="517" width="0.1376%" height="15" fill="rgb(209,150,17)" fg:x="156" fg:w="6"/><text x="3.8288%" y="527.50"></text></g><g><title>__handle_mm_fault (13 samples, 0.30%)</title><rect x="3.4412%" y="597" width="0.2982%" height="15" fill="rgb(234,202,34)" fg:x="150" fg:w="13"/><text x="3.6912%" y="607.50"></text></g><g><title>do_anonymous_page (13 samples, 0.30%)</title><rect x="3.4412%" y="581" width="0.2982%" height="15" fill="rgb(253,148,53)" fg:x="150" fg:w="13"/><text x="3.6912%" y="591.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.02%)</title><rect x="3.7164%" y="565" width="0.0229%" height="15" fill="rgb(218,129,16)" fg:x="162" fg:w="1"/><text x="3.9664%" y="575.50"></text></g><g><title>lru_cache_add (1 samples, 0.02%)</title><rect x="3.7164%" y="549" width="0.0229%" height="15" fill="rgb(216,85,19)" fg:x="162" fg:w="1"/><text x="3.9664%" y="559.50"></text></g><g><title>__pagevec_lru_add (1 samples, 0.02%)</title><rect x="3.7164%" y="533" width="0.0229%" height="15" fill="rgb(235,228,7)" fg:x="162" fg:w="1"/><text x="3.9664%" y="543.50"></text></g><g><title>page_mapping (1 samples, 0.02%)</title><rect x="3.7164%" y="517" width="0.0229%" height="15" fill="rgb(245,175,0)" fg:x="162" fg:w="1"/><text x="3.9664%" y="527.50"></text></g><g><title>handle_mm_fault (14 samples, 0.32%)</title><rect x="3.4412%" y="613" width="0.3212%" height="15" fill="rgb(208,168,36)" fg:x="150" fg:w="14"/><text x="3.6912%" y="623.50"></text></g><g><title>pmd_devmap_trans_unstable (1 samples, 0.02%)</title><rect x="3.7394%" y="597" width="0.0229%" height="15" fill="rgb(246,171,24)" fg:x="163" fg:w="1"/><text x="3.9894%" y="607.50"></text></g><g><title>do_user_addr_fault (16 samples, 0.37%)</title><rect x="3.4182%" y="629" width="0.3671%" height="15" fill="rgb(215,142,24)" fg:x="149" fg:w="16"/><text x="3.6682%" y="639.50"></text></g><g><title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="3.7623%" y="613" width="0.0229%" height="15" fill="rgb(250,187,7)" fg:x="164" fg:w="1"/><text x="4.0123%" y="623.50"></text></g><g><title>exc_page_fault (17 samples, 0.39%)</title><rect x="3.4182%" y="645" width="0.3900%" height="15" fill="rgb(228,66,33)" fg:x="149" fg:w="17"/><text x="3.6682%" y="655.50"></text></g><g><title>down_read_trylock (1 samples, 0.02%)</title><rect x="3.7853%" y="629" width="0.0229%" height="15" fill="rgb(234,215,21)" fg:x="165" fg:w="1"/><text x="4.0353%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (25 samples, 0.57%)</title><rect x="3.2576%" y="709" width="0.5735%" height="15" fill="rgb(222,191,20)" fg:x="142" fg:w="25"/><text x="3.5076%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (25 samples, 0.57%)</title><rect x="3.2576%" y="693" width="0.5735%" height="15" fill="rgb(245,79,54)" fg:x="142" fg:w="25"/><text x="3.5076%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.57%)</title><rect x="3.2576%" y="677" width="0.5735%" height="15" fill="rgb(240,10,37)" fg:x="142" fg:w="25"/><text x="3.5076%" y="687.50"></text></g><g><title>asm_exc_page_fault (21 samples, 0.48%)</title><rect x="3.3494%" y="661" width="0.4818%" height="15" fill="rgb(214,192,32)" fg:x="146" fg:w="21"/><text x="3.5994%" y="671.50"></text></g><g><title>fault_in_kernel_space (1 samples, 0.02%)</title><rect x="3.8082%" y="645" width="0.0229%" height="15" fill="rgb(209,36,54)" fg:x="166" fg:w="1"/><text x="4.0582%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (2 samples, 0.05%)</title><rect x="3.8312%" y="709" width="0.0459%" height="15" fill="rgb(220,10,11)" fg:x="167" fg:w="2"/><text x="4.0812%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.05%)</title><rect x="3.8312%" y="693" width="0.0459%" height="15" fill="rgb(221,106,17)" fg:x="167" fg:w="2"/><text x="4.0812%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.05%)</title><rect x="3.8312%" y="677" width="0.0459%" height="15" fill="rgb(251,142,44)" fg:x="167" fg:w="2"/><text x="4.0812%" y="687.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (2 samples, 0.05%)</title><rect x="3.8312%" y="661" width="0.0459%" height="15" fill="rgb(238,13,15)" fg:x="167" fg:w="2"/><text x="4.0812%" y="671.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (2 samples, 0.05%)</title><rect x="3.8312%" y="645" width="0.0459%" height="15" fill="rgb(208,107,27)" fg:x="167" fg:w="2"/><text x="4.0812%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="3.9688%" y="677" width="0.0229%" height="15" fill="rgb(205,136,37)" fg:x="173" fg:w="1"/><text x="4.2188%" y="687.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.09%)</title><rect x="3.9917%" y="677" width="0.0918%" height="15" fill="rgb(250,205,27)" fg:x="174" fg:w="4"/><text x="4.2417%" y="687.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.02%)</title><rect x="4.0835%" y="677" width="0.0229%" height="15" fill="rgb(210,80,43)" fg:x="178" fg:w="1"/><text x="4.3335%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (14 samples, 0.32%)</title><rect x="3.8770%" y="709" width="0.3212%" height="15" fill="rgb(247,160,36)" fg:x="169" fg:w="14"/><text x="4.1270%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (14 samples, 0.32%)</title><rect x="3.8770%" y="693" width="0.3212%" height="15" fill="rgb(234,13,49)" fg:x="169" fg:w="14"/><text x="4.1270%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.09%)</title><rect x="4.1064%" y="677" width="0.0918%" height="15" fill="rgb(234,122,0)" fg:x="179" fg:w="4"/><text x="4.3564%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.09%)</title><rect x="4.1064%" y="661" width="0.0918%" height="15" fill="rgb(207,146,38)" fg:x="179" fg:w="4"/><text x="4.3564%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (2 samples, 0.05%)</title><rect x="4.1982%" y="677" width="0.0459%" height="15" fill="rgb(207,177,25)" fg:x="183" fg:w="2"/><text x="4.4482%" y="687.50"></text></g><g><title>core::intrinsics::write_bytes (2 samples, 0.05%)</title><rect x="4.1982%" y="661" width="0.0459%" height="15" fill="rgb(211,178,42)" fg:x="183" fg:w="2"/><text x="4.4482%" y="671.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.05%)</title><rect x="4.1982%" y="645" width="0.0459%" height="15" fill="rgb(230,69,54)" fg:x="183" fg:w="2"/><text x="4.4482%" y="655.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="4.2212%" y="629" width="0.0229%" height="15" fill="rgb(214,135,41)" fg:x="184" fg:w="1"/><text x="4.4712%" y="639.50"></text></g><g><title>_int_malloc (2 samples, 0.05%)</title><rect x="4.2441%" y="581" width="0.0459%" height="15" fill="rgb(237,67,25)" fg:x="185" fg:w="2"/><text x="4.4941%" y="591.50"></text></g><g><title>sysmalloc (1 samples, 0.02%)</title><rect x="4.2670%" y="565" width="0.0229%" height="15" fill="rgb(222,189,50)" fg:x="186" fg:w="1"/><text x="4.5170%" y="575.50"></text></g><g><title>__GI___default_morecore (1 samples, 0.02%)</title><rect x="4.2670%" y="549" width="0.0229%" height="15" fill="rgb(245,148,34)" fg:x="186" fg:w="1"/><text x="4.5170%" y="559.50"></text></g><g><title>__GI___sbrk (1 samples, 0.02%)</title><rect x="4.2670%" y="533" width="0.0229%" height="15" fill="rgb(222,29,6)" fg:x="186" fg:w="1"/><text x="4.5170%" y="543.50"></text></g><g><title>__GI___sbrk (1 samples, 0.02%)</title><rect x="4.2670%" y="517" width="0.0229%" height="15" fill="rgb(221,189,43)" fg:x="186" fg:w="1"/><text x="4.5170%" y="527.50"></text></g><g><title>__brk (1 samples, 0.02%)</title><rect x="4.2670%" y="501" width="0.0229%" height="15" fill="rgb(207,36,27)" fg:x="186" fg:w="1"/><text x="4.5170%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="4.2670%" y="485" width="0.0229%" height="15" fill="rgb(217,90,24)" fg:x="186" fg:w="1"/><text x="4.5170%" y="495.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="4.2670%" y="469" width="0.0229%" height="15" fill="rgb(224,66,35)" fg:x="186" fg:w="1"/><text x="4.5170%" y="479.50"></text></g><g><title>__x64_sys_brk (1 samples, 0.02%)</title><rect x="4.2670%" y="453" width="0.0229%" height="15" fill="rgb(221,13,50)" fg:x="186" fg:w="1"/><text x="4.5170%" y="463.50"></text></g><g><title>do_brk_flags (1 samples, 0.02%)</title><rect x="4.2670%" y="437" width="0.0229%" height="15" fill="rgb(236,68,49)" fg:x="186" fg:w="1"/><text x="4.5170%" y="447.50"></text></g><g><title>perf_event_mmap (1 samples, 0.02%)</title><rect x="4.2670%" y="421" width="0.0229%" height="15" fill="rgb(229,146,28)" fg:x="186" fg:w="1"/><text x="4.5170%" y="431.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="4.2670%" y="405" width="0.0229%" height="15" fill="rgb(225,31,38)" fg:x="186" fg:w="1"/><text x="4.5170%" y="415.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="4.2670%" y="389" width="0.0229%" height="15" fill="rgb(250,208,3)" fg:x="186" fg:w="1"/><text x="4.5170%" y="399.50"></text></g><g><title>perf_output_copy (1 samples, 0.02%)</title><rect x="4.2670%" y="373" width="0.0229%" height="15" fill="rgb(246,54,23)" fg:x="186" fg:w="1"/><text x="4.5170%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (80 samples, 1.84%)</title><rect x="2.4776%" y="773" width="1.8353%" height="15" fill="rgb(243,76,11)" fg:x="108" fg:w="80"/><text x="2.7276%" y="783.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (80 samples, 1.84%)</title><rect x="2.4776%" y="757" width="1.8353%" height="15" fill="rgb(245,21,50)" fg:x="108" fg:w="80"/><text x="2.7276%" y="767.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (80 samples, 1.84%)</title><rect x="2.4776%" y="741" width="1.8353%" height="15" fill="rgb(228,9,43)" fg:x="108" fg:w="80"/><text x="2.7276%" y="751.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (80 samples, 1.84%)</title><rect x="2.4776%" y="725" width="1.8353%" height="15" fill="rgb(208,100,47)" fg:x="108" fg:w="80"/><text x="2.7276%" y="735.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (5 samples, 0.11%)</title><rect x="4.1982%" y="709" width="0.1147%" height="15" fill="rgb(232,26,8)" fg:x="183" fg:w="5"/><text x="4.4482%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (5 samples, 0.11%)</title><rect x="4.1982%" y="693" width="0.1147%" height="15" fill="rgb(216,166,38)" fg:x="183" fg:w="5"/><text x="4.4482%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (3 samples, 0.07%)</title><rect x="4.2441%" y="677" width="0.0688%" height="15" fill="rgb(251,202,51)" fg:x="185" fg:w="3"/><text x="4.4941%" y="687.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.07%)</title><rect x="4.2441%" y="661" width="0.0688%" height="15" fill="rgb(254,216,34)" fg:x="185" fg:w="3"/><text x="4.4941%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.07%)</title><rect x="4.2441%" y="645" width="0.0688%" height="15" fill="rgb(251,32,27)" fg:x="185" fg:w="3"/><text x="4.4941%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.07%)</title><rect x="4.2441%" y="629" width="0.0688%" height="15" fill="rgb(208,127,28)" fg:x="185" fg:w="3"/><text x="4.4941%" y="639.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.07%)</title><rect x="4.2441%" y="613" width="0.0688%" height="15" fill="rgb(224,137,22)" fg:x="185" fg:w="3"/><text x="4.4941%" y="623.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.07%)</title><rect x="4.2441%" y="597" width="0.0688%" height="15" fill="rgb(254,70,32)" fg:x="185" fg:w="3"/><text x="4.4941%" y="607.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="4.2900%" y="581" width="0.0229%" height="15" fill="rgb(229,75,37)" fg:x="187" fg:w="1"/><text x="4.5400%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="4.4047%" y="709" width="0.0229%" height="15" fill="rgb(252,64,23)" fg:x="192" fg:w="1"/><text x="4.6547%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="4.4047%" y="693" width="0.0229%" height="15" fill="rgb(232,162,48)" fg:x="192" fg:w="1"/><text x="4.6547%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.14%)</title><rect x="4.3129%" y="757" width="0.1376%" height="15" fill="rgb(246,160,12)" fg:x="188" fg:w="6"/><text x="4.5629%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.14%)</title><rect x="4.3129%" y="741" width="0.1376%" height="15" fill="rgb(247,166,0)" fg:x="188" fg:w="6"/><text x="4.5629%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.14%)</title><rect x="4.3129%" y="725" width="0.1376%" height="15" fill="rgb(249,219,21)" fg:x="188" fg:w="6"/><text x="4.5629%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="4.4276%" y="709" width="0.0229%" height="15" fill="rgb(205,209,3)" fg:x="193" fg:w="1"/><text x="4.6776%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="4.4506%" y="757" width="0.0229%" height="15" fill="rgb(243,44,1)" fg:x="194" fg:w="1"/><text x="4.7006%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.07%)</title><rect x="4.5194%" y="661" width="0.0688%" height="15" fill="rgb(206,159,16)" fg:x="197" fg:w="3"/><text x="4.7694%" y="671.50"></text></g><g><title>hashbrown::map::make_insert_hash (15 samples, 0.34%)</title><rect x="4.3129%" y="773" width="0.3441%" height="15" fill="rgb(244,77,30)" fg:x="188" fg:w="15"/><text x="4.5629%" y="783.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (8 samples, 0.18%)</title><rect x="4.4735%" y="757" width="0.1835%" height="15" fill="rgb(218,69,12)" fg:x="195" fg:w="8"/><text x="4.7235%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (8 samples, 0.18%)</title><rect x="4.4735%" y="741" width="0.1835%" height="15" fill="rgb(212,87,7)" fg:x="195" fg:w="8"/><text x="4.7235%" y="751.50"></text></g><g><title>core::hash::Hasher::write_usize (8 samples, 0.18%)</title><rect x="4.4735%" y="725" width="0.1835%" height="15" fill="rgb(245,114,25)" fg:x="195" fg:w="8"/><text x="4.7235%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.18%)</title><rect x="4.4735%" y="709" width="0.1835%" height="15" fill="rgb(210,61,42)" fg:x="195" fg:w="8"/><text x="4.7235%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.18%)</title><rect x="4.4735%" y="693" width="0.1835%" height="15" fill="rgb(211,52,33)" fg:x="195" fg:w="8"/><text x="4.7235%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.18%)</title><rect x="4.4735%" y="677" width="0.1835%" height="15" fill="rgb(234,58,33)" fg:x="195" fg:w="8"/><text x="4.7235%" y="687.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.07%)</title><rect x="4.5882%" y="661" width="0.0688%" height="15" fill="rgb(220,115,36)" fg:x="200" fg:w="3"/><text x="4.8382%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.09%)</title><rect x="4.7488%" y="757" width="0.0918%" height="15" fill="rgb(243,153,54)" fg:x="207" fg:w="4"/><text x="4.9988%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.09%)</title><rect x="4.7488%" y="741" width="0.0918%" height="15" fill="rgb(251,47,18)" fg:x="207" fg:w="4"/><text x="4.9988%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="4.7717%" y="725" width="0.0688%" height="15" fill="rgb(242,102,42)" fg:x="208" fg:w="3"/><text x="5.0217%" y="735.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.07%)</title><rect x="4.7717%" y="709" width="0.0688%" height="15" fill="rgb(234,31,38)" fg:x="208" fg:w="3"/><text x="5.0217%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="4.8406%" y="709" width="0.0229%" height="15" fill="rgb(221,117,51)" fg:x="211" fg:w="1"/><text x="5.0906%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="4.8406%" y="693" width="0.0229%" height="15" fill="rgb(212,20,18)" fg:x="211" fg:w="1"/><text x="5.0906%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="4.8406%" y="677" width="0.0229%" height="15" fill="rgb(245,133,36)" fg:x="211" fg:w="1"/><text x="5.0906%" y="687.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (115 samples, 2.64%)</title><rect x="2.4547%" y="789" width="2.6382%" height="15" fill="rgb(212,6,19)" fg:x="107" fg:w="115"/><text x="2.7047%" y="799.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.44%)</title><rect x="4.6570%" y="773" width="0.4359%" height="15" fill="rgb(218,1,36)" fg:x="203" fg:w="19"/><text x="4.9070%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (11 samples, 0.25%)</title><rect x="4.8406%" y="757" width="0.2524%" height="15" fill="rgb(246,84,54)" fg:x="211" fg:w="11"/><text x="5.0906%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (11 samples, 0.25%)</title><rect x="4.8406%" y="741" width="0.2524%" height="15" fill="rgb(242,110,6)" fg:x="211" fg:w="11"/><text x="5.0906%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (11 samples, 0.25%)</title><rect x="4.8406%" y="725" width="0.2524%" height="15" fill="rgb(214,47,5)" fg:x="211" fg:w="11"/><text x="5.0906%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.23%)</title><rect x="4.8635%" y="709" width="0.2294%" height="15" fill="rgb(218,159,25)" fg:x="212" fg:w="10"/><text x="5.1135%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (10 samples, 0.23%)</title><rect x="4.8635%" y="693" width="0.2294%" height="15" fill="rgb(215,211,28)" fg:x="212" fg:w="10"/><text x="5.1135%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (10 samples, 0.23%)</title><rect x="4.8635%" y="677" width="0.2294%" height="15" fill="rgb(238,59,32)" fg:x="212" fg:w="10"/><text x="5.1135%" y="687.50"></text></g><g><title>core::core_arch::simd::i8x16::new (10 samples, 0.23%)</title><rect x="4.8635%" y="661" width="0.2294%" height="15" fill="rgb(226,82,3)" fg:x="212" fg:w="10"/><text x="5.1135%" y="671.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="5.0700%" y="645" width="0.0229%" height="15" fill="rgb(240,164,32)" fg:x="221" fg:w="1"/><text x="5.3200%" y="655.50"></text></g><g><title>irq_enter_rcu (1 samples, 0.02%)</title><rect x="5.0700%" y="629" width="0.0229%" height="15" fill="rgb(232,46,7)" fg:x="221" fg:w="1"/><text x="5.3200%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (153 samples, 3.51%)</title><rect x="1.7665%" y="869" width="3.5100%" height="15" fill="rgb(229,129,53)" fg:x="77" fg:w="153"/><text x="2.0165%" y="879.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (153 samples, 3.51%)</title><rect x="1.7665%" y="853" width="3.5100%" height="15" fill="rgb(234,188,29)" fg:x="77" fg:w="153"/><text x="2.0165%" y="863.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (152 samples, 3.49%)</title><rect x="1.7894%" y="837" width="3.4870%" height="15" fill="rgb(246,141,4)" fg:x="78" fg:w="152"/><text x="2.0394%" y="847.50">cor..</text></g><g><title>y2021::d05::main::p01::{{closure}} (149 samples, 3.42%)</title><rect x="1.8582%" y="821" width="3.4182%" height="15" fill="rgb(229,23,39)" fg:x="81" fg:w="149"/><text x="2.1082%" y="831.50">y20..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (123 samples, 2.82%)</title><rect x="2.4547%" y="805" width="2.8217%" height="15" fill="rgb(206,12,3)" fg:x="107" fg:w="123"/><text x="2.7047%" y="815.50">st..</text></g><g><title>std::collections::hash::map::map_entry (8 samples, 0.18%)</title><rect x="5.0929%" y="789" width="0.1835%" height="15" fill="rgb(252,226,20)" fg:x="222" fg:w="8"/><text x="5.3429%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="5.2764%" y="773" width="0.0459%" height="15" fill="rgb(216,123,35)" fg:x="230" fg:w="2"/><text x="5.5264%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.05%)</title><rect x="5.2764%" y="757" width="0.0459%" height="15" fill="rgb(212,68,40)" fg:x="230" fg:w="2"/><text x="5.5264%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="5.2764%" y="741" width="0.0459%" height="15" fill="rgb(254,125,32)" fg:x="230" fg:w="2"/><text x="5.5264%" y="751.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (2 samples, 0.05%)</title><rect x="5.2764%" y="725" width="0.0459%" height="15" fill="rgb(253,97,22)" fg:x="230" fg:w="2"/><text x="5.5264%" y="735.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (2 samples, 0.05%)</title><rect x="5.2764%" y="709" width="0.0459%" height="15" fill="rgb(241,101,14)" fg:x="230" fg:w="2"/><text x="5.5264%" y="719.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (2 samples, 0.05%)</title><rect x="5.2764%" y="693" width="0.0459%" height="15" fill="rgb(238,103,29)" fg:x="230" fg:w="2"/><text x="5.5264%" y="703.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (2 samples, 0.05%)</title><rect x="5.2764%" y="677" width="0.0459%" height="15" fill="rgb(233,195,47)" fg:x="230" fg:w="2"/><text x="5.5264%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.05%)</title><rect x="5.2764%" y="661" width="0.0459%" height="15" fill="rgb(246,218,30)" fg:x="230" fg:w="2"/><text x="5.5264%" y="671.50"></text></g><g><title>y2021::types::line::Line::points::{{closure}} (2 samples, 0.05%)</title><rect x="5.2764%" y="645" width="0.0459%" height="15" fill="rgb(219,145,47)" fg:x="230" fg:w="2"/><text x="5.5264%" y="655.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (156 samples, 3.58%)</title><rect x="1.7665%" y="901" width="3.5788%" height="15" fill="rgb(243,12,26)" fg:x="77" fg:w="156"/><text x="2.0165%" y="911.50">core..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (156 samples, 3.58%)</title><rect x="1.7665%" y="885" width="3.5788%" height="15" fill="rgb(214,87,16)" fg:x="77" fg:w="156"/><text x="2.0165%" y="895.50">core..</text></g><g><title>y2021::d05::main::p01::{{closure}} (3 samples, 0.07%)</title><rect x="5.2764%" y="869" width="0.0688%" height="15" fill="rgb(208,99,42)" fg:x="230" fg:w="3"/><text x="5.5264%" y="879.50"></text></g><g><title>y2021::types::line::Line::points (3 samples, 0.07%)</title><rect x="5.2764%" y="853" width="0.0688%" height="15" fill="rgb(253,99,2)" fg:x="230" fg:w="3"/><text x="5.5264%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.07%)</title><rect x="5.2764%" y="837" width="0.0688%" height="15" fill="rgb(220,168,23)" fg:x="230" fg:w="3"/><text x="5.5264%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="5.2764%" y="821" width="0.0688%" height="15" fill="rgb(242,38,24)" fg:x="230" fg:w="3"/><text x="5.5264%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="5.2764%" y="805" width="0.0688%" height="15" fill="rgb(225,182,9)" fg:x="230" fg:w="3"/><text x="5.5264%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="5.2764%" y="789" width="0.0688%" height="15" fill="rgb(243,178,37)" fg:x="230" fg:w="3"/><text x="5.5264%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect x="5.3223%" y="773" width="0.0229%" height="15" fill="rgb(232,139,19)" fg:x="232" fg:w="1"/><text x="5.5723%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="5.3223%" y="757" width="0.0229%" height="15" fill="rgb(225,201,24)" fg:x="232" fg:w="1"/><text x="5.5723%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="5.3223%" y="741" width="0.0229%" height="15" fill="rgb(221,47,46)" fg:x="232" fg:w="1"/><text x="5.5723%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="5.3223%" y="725" width="0.0229%" height="15" fill="rgb(249,23,13)" fg:x="232" fg:w="1"/><text x="5.5723%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="5.3223%" y="709" width="0.0229%" height="15" fill="rgb(219,9,5)" fg:x="232" fg:w="1"/><text x="5.5723%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="5.3223%" y="693" width="0.0229%" height="15" fill="rgb(254,171,16)" fg:x="232" fg:w="1"/><text x="5.5723%" y="703.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="5.3223%" y="677" width="0.0229%" height="15" fill="rgb(230,171,20)" fg:x="232" fg:w="1"/><text x="5.5723%" y="687.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="5.3223%" y="661" width="0.0229%" height="15" fill="rgb(210,71,41)" fg:x="232" fg:w="1"/><text x="5.5723%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="5.3223%" y="645" width="0.0229%" height="15" fill="rgb(206,173,20)" fg:x="232" fg:w="1"/><text x="5.5723%" y="655.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="5.3682%" y="757" width="0.0229%" height="15" fill="rgb(233,88,34)" fg:x="234" fg:w="1"/><text x="5.6182%" y="767.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.02%)</title><rect x="5.3682%" y="741" width="0.0229%" height="15" fill="rgb(223,209,46)" fg:x="234" fg:w="1"/><text x="5.6182%" y="751.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::get_end (1 samples, 0.02%)</title><rect x="5.3682%" y="725" width="0.0229%" height="15" fill="rgb(250,43,18)" fg:x="234" fg:w="1"/><text x="5.6182%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="5.3682%" y="853" width="0.0459%" height="15" fill="rgb(208,13,10)" fg:x="234" fg:w="2"/><text x="5.6182%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="5.3682%" y="837" width="0.0459%" height="15" fill="rgb(212,200,36)" fg:x="234" fg:w="2"/><text x="5.6182%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="5.3682%" y="821" width="0.0459%" height="15" fill="rgb(225,90,30)" fg:x="234" fg:w="2"/><text x="5.6182%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="5.3682%" y="805" width="0.0459%" height="15" fill="rgb(236,182,39)" fg:x="234" fg:w="2"/><text x="5.6182%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="5.3682%" y="789" width="0.0459%" height="15" fill="rgb(212,144,35)" fg:x="234" fg:w="2"/><text x="5.6182%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.05%)</title><rect x="5.3682%" y="773" width="0.0459%" height="15" fill="rgb(228,63,44)" fg:x="234" fg:w="2"/><text x="5.6182%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="5.3911%" y="757" width="0.0229%" height="15" fill="rgb(228,109,6)" fg:x="235" fg:w="1"/><text x="5.6411%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="5.3911%" y="741" width="0.0229%" height="15" fill="rgb(238,117,24)" fg:x="235" fg:w="1"/><text x="5.6411%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="5.3911%" y="725" width="0.0229%" height="15" fill="rgb(242,26,26)" fg:x="235" fg:w="1"/><text x="5.6411%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="5.3911%" y="709" width="0.0229%" height="15" fill="rgb(221,92,48)" fg:x="235" fg:w="1"/><text x="5.6411%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="5.3911%" y="693" width="0.0229%" height="15" fill="rgb(209,209,32)" fg:x="235" fg:w="1"/><text x="5.6411%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="5.3911%" y="677" width="0.0229%" height="15" fill="rgb(221,70,22)" fg:x="235" fg:w="1"/><text x="5.6411%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="5.4141%" y="821" width="0.0229%" height="15" fill="rgb(248,145,5)" fg:x="236" fg:w="1"/><text x="5.6641%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="5.4370%" y="821" width="0.0459%" height="15" fill="rgb(226,116,26)" fg:x="237" fg:w="2"/><text x="5.6870%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="5.4370%" y="805" width="0.0459%" height="15" fill="rgb(244,5,17)" fg:x="237" fg:w="2"/><text x="5.6870%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="5.4600%" y="789" width="0.0229%" height="15" fill="rgb(252,159,33)" fg:x="238" fg:w="1"/><text x="5.7100%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="5.4600%" y="773" width="0.0229%" height="15" fill="rgb(206,71,0)" fg:x="238" fg:w="1"/><text x="5.7100%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="5.4600%" y="757" width="0.0229%" height="15" fill="rgb(233,118,54)" fg:x="238" fg:w="1"/><text x="5.7100%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="5.4600%" y="741" width="0.0229%" height="15" fill="rgb(234,83,48)" fg:x="238" fg:w="1"/><text x="5.7100%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="5.4600%" y="725" width="0.0229%" height="15" fill="rgb(228,3,54)" fg:x="238" fg:w="1"/><text x="5.7100%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="5.4600%" y="709" width="0.0229%" height="15" fill="rgb(226,155,13)" fg:x="238" fg:w="1"/><text x="5.7100%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="5.4600%" y="693" width="0.0229%" height="15" fill="rgb(241,28,37)" fg:x="238" fg:w="1"/><text x="5.7100%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="5.4600%" y="677" width="0.0229%" height="15" fill="rgb(233,93,10)" fg:x="238" fg:w="1"/><text x="5.7100%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="5.4600%" y="661" width="0.0229%" height="15" fill="rgb(225,113,19)" fg:x="238" fg:w="1"/><text x="5.7100%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="5.4600%" y="645" width="0.0229%" height="15" fill="rgb(241,2,18)" fg:x="238" fg:w="1"/><text x="5.7100%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="5.4600%" y="629" width="0.0229%" height="15" fill="rgb(228,207,21)" fg:x="238" fg:w="1"/><text x="5.7100%" y="639.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="5.4600%" y="613" width="0.0229%" height="15" fill="rgb(213,211,35)" fg:x="238" fg:w="1"/><text x="5.7100%" y="623.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="5.4600%" y="597" width="0.0229%" height="15" fill="rgb(209,83,10)" fg:x="238" fg:w="1"/><text x="5.7100%" y="607.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 0.02%)</title><rect x="5.4829%" y="821" width="0.0229%" height="15" fill="rgb(209,164,1)" fg:x="239" fg:w="1"/><text x="5.7329%" y="831.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u64&gt;::from_str (1 samples, 0.02%)</title><rect x="5.4829%" y="805" width="0.0229%" height="15" fill="rgb(213,184,43)" fg:x="239" fg:w="1"/><text x="5.7329%" y="815.50"></text></g><g><title>core::num::from_str_radix (1 samples, 0.02%)</title><rect x="5.4829%" y="789" width="0.0229%" height="15" fill="rgb(231,61,34)" fg:x="239" fg:w="1"/><text x="5.7329%" y="799.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.02%)</title><rect x="5.4829%" y="773" width="0.0229%" height="15" fill="rgb(235,75,3)" fg:x="239" fg:w="1"/><text x="5.7329%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (164 samples, 3.76%)</title><rect x="1.7665%" y="917" width="3.7623%" height="15" fill="rgb(220,106,47)" fg:x="77" fg:w="164"/><text x="2.0165%" y="927.50">core..</text></g><g><title>y2021::d05::main::read_path_to_lines::{{closure}} (8 samples, 0.18%)</title><rect x="5.3453%" y="901" width="0.1835%" height="15" fill="rgb(210,196,33)" fg:x="233" fg:w="8"/><text x="5.5953%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (8 samples, 0.18%)</title><rect x="5.3453%" y="885" width="0.1835%" height="15" fill="rgb(229,154,42)" fg:x="233" fg:w="8"/><text x="5.5953%" y="895.50"></text></g><g><title>&lt;y2021::types::line::Line as core::str::traits::FromStr&gt;::from_str (8 samples, 0.18%)</title><rect x="5.3453%" y="869" width="0.1835%" height="15" fill="rgb(228,114,26)" fg:x="233" fg:w="8"/><text x="5.5953%" y="879.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (5 samples, 0.11%)</title><rect x="5.4141%" y="853" width="0.1147%" height="15" fill="rgb(208,144,1)" fg:x="236" fg:w="5"/><text x="5.6641%" y="863.50"></text></g><g><title>&lt;y2021::types::point::Point as core::str::traits::FromStr&gt;::from_str (5 samples, 0.11%)</title><rect x="5.4141%" y="837" width="0.1147%" height="15" fill="rgb(239,112,37)" fg:x="236" fg:w="5"/><text x="5.6641%" y="847.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (1 samples, 0.02%)</title><rect x="5.5058%" y="821" width="0.0229%" height="15" fill="rgb(210,96,50)" fg:x="240" fg:w="1"/><text x="5.7558%" y="831.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.02%)</title><rect x="5.5058%" y="805" width="0.0229%" height="15" fill="rgb(222,178,2)" fg:x="240" fg:w="1"/><text x="5.7558%" y="815.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.02%)</title><rect x="5.5058%" y="789" width="0.0229%" height="15" fill="rgb(226,74,18)" fg:x="240" fg:w="1"/><text x="5.7558%" y="799.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.02%)</title><rect x="5.5058%" y="773" width="0.0229%" height="15" fill="rgb(225,67,54)" fg:x="240" fg:w="1"/><text x="5.7558%" y="783.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="5.5058%" y="757" width="0.0229%" height="15" fill="rgb(251,92,32)" fg:x="240" fg:w="1"/><text x="5.7558%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="5.5058%" y="741" width="0.0229%" height="15" fill="rgb(228,149,22)" fg:x="240" fg:w="1"/><text x="5.7558%" y="751.50"></text></g><g><title>&lt;alloc::string::String as alloc::string::ToString&gt;::to_string (1 samples, 0.02%)</title><rect x="5.5288%" y="885" width="0.0229%" height="15" fill="rgb(243,54,13)" fg:x="241" fg:w="1"/><text x="5.7788%" y="895.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.02%)</title><rect x="5.5288%" y="869" width="0.0229%" height="15" fill="rgb(243,180,28)" fg:x="241" fg:w="1"/><text x="5.7788%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="5.5288%" y="853" width="0.0229%" height="15" fill="rgb(208,167,24)" fg:x="241" fg:w="1"/><text x="5.7788%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="5.5288%" y="837" width="0.0229%" height="15" fill="rgb(245,73,45)" fg:x="241" fg:w="1"/><text x="5.7788%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="5.5288%" y="821" width="0.0229%" height="15" fill="rgb(237,203,48)" fg:x="241" fg:w="1"/><text x="5.7788%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="5.5288%" y="805" width="0.0229%" height="15" fill="rgb(211,197,16)" fg:x="241" fg:w="1"/><text x="5.7788%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="5.5288%" y="789" width="0.0229%" height="15" fill="rgb(243,99,51)" fg:x="241" fg:w="1"/><text x="5.7788%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="5.5288%" y="773" width="0.0229%" height="15" fill="rgb(215,123,29)" fg:x="241" fg:w="1"/><text x="5.7788%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="5.5288%" y="757" width="0.0229%" height="15" fill="rgb(239,186,37)" fg:x="241" fg:w="1"/><text x="5.7788%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="5.5288%" y="741" width="0.0229%" height="15" fill="rgb(252,136,39)" fg:x="241" fg:w="1"/><text x="5.7788%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="5.5288%" y="725" width="0.0229%" height="15" fill="rgb(223,213,32)" fg:x="241" fg:w="1"/><text x="5.7788%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="5.5288%" y="709" width="0.0229%" height="15" fill="rgb(233,115,5)" fg:x="241" fg:w="1"/><text x="5.7788%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="5.5288%" y="693" width="0.0229%" height="15" fill="rgb(207,226,44)" fg:x="241" fg:w="1"/><text x="5.7788%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="5.5288%" y="677" width="0.0229%" height="15" fill="rgb(208,126,0)" fg:x="241" fg:w="1"/><text x="5.7788%" y="687.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="5.5288%" y="661" width="0.0229%" height="15" fill="rgb(244,66,21)" fg:x="241" fg:w="1"/><text x="5.7788%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (166 samples, 3.81%)</title><rect x="1.7665%" y="1061" width="3.8082%" height="15" fill="rgb(222,97,12)" fg:x="77" fg:w="166"/><text x="2.0165%" y="1071.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (166 samples, 3.81%)</title><rect x="1.7665%" y="1045" width="3.8082%" height="15" fill="rgb(219,213,19)" fg:x="77" fg:w="166"/><text x="2.0165%" y="1055.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (166 samples, 3.81%)</title><rect x="1.7665%" y="1029" width="3.8082%" height="15" fill="rgb(252,169,30)" fg:x="77" fg:w="166"/><text x="2.0165%" y="1039.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (166 samples, 3.81%)</title><rect x="1.7665%" y="1013" width="3.8082%" height="15" fill="rgb(206,32,51)" fg:x="77" fg:w="166"/><text x="2.0165%" y="1023.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (166 samples, 3.81%)</title><rect x="1.7665%" y="997" width="3.8082%" height="15" fill="rgb(250,172,42)" fg:x="77" fg:w="166"/><text x="2.0165%" y="1007.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (166 samples, 3.81%)</title><rect x="1.7665%" y="981" width="3.8082%" height="15" fill="rgb(209,34,43)" fg:x="77" fg:w="166"/><text x="2.0165%" y="991.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (166 samples, 3.81%)</title><rect x="1.7665%" y="965" width="3.8082%" height="15" fill="rgb(223,11,35)" fg:x="77" fg:w="166"/><text x="2.0165%" y="975.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (166 samples, 3.81%)</title><rect x="1.7665%" y="949" width="3.8082%" height="15" fill="rgb(251,219,26)" fg:x="77" fg:w="166"/><text x="2.0165%" y="959.50">core..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (166 samples, 3.81%)</title><rect x="1.7665%" y="933" width="3.8082%" height="15" fill="rgb(231,119,3)" fg:x="77" fg:w="166"/><text x="2.0165%" y="943.50">core..</text></g><g><title>y2021::d05::main::read_path_to_lines::{{closure}} (2 samples, 0.05%)</title><rect x="5.5288%" y="917" width="0.0459%" height="15" fill="rgb(216,97,11)" fg:x="241" fg:w="2"/><text x="5.7788%" y="927.50"></text></g><g><title>y2021::utils::file::line_as_str (2 samples, 0.05%)</title><rect x="5.5288%" y="901" width="0.0459%" height="15" fill="rgb(223,59,9)" fg:x="241" fg:w="2"/><text x="5.7788%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="5.5517%" y="885" width="0.0229%" height="15" fill="rgb(233,93,31)" fg:x="242" fg:w="1"/><text x="5.8017%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="5.5517%" y="869" width="0.0229%" height="15" fill="rgb(239,81,33)" fg:x="242" fg:w="1"/><text x="5.8017%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="5.5517%" y="853" width="0.0229%" height="15" fill="rgb(213,120,34)" fg:x="242" fg:w="1"/><text x="5.8017%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="5.5517%" y="837" width="0.0229%" height="15" fill="rgb(243,49,53)" fg:x="242" fg:w="1"/><text x="5.8017%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="5.5517%" y="821" width="0.0229%" height="15" fill="rgb(247,216,33)" fg:x="242" fg:w="1"/><text x="5.8017%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="5.5517%" y="805" width="0.0229%" height="15" fill="rgb(226,26,14)" fg:x="242" fg:w="1"/><text x="5.8017%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="5.5517%" y="789" width="0.0229%" height="15" fill="rgb(215,49,53)" fg:x="242" fg:w="1"/><text x="5.8017%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.09%)</title><rect x="5.5747%" y="1061" width="0.0918%" height="15" fill="rgb(245,162,40)" fg:x="243" fg:w="4"/><text x="5.8247%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.09%)</title><rect x="5.5747%" y="1045" width="0.0918%" height="15" fill="rgb(229,68,17)" fg:x="243" fg:w="4"/><text x="5.8247%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.09%)</title><rect x="5.5747%" y="1029" width="0.0918%" height="15" fill="rgb(213,182,10)" fg:x="243" fg:w="4"/><text x="5.8247%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.09%)</title><rect x="5.5747%" y="1013" width="0.0918%" height="15" fill="rgb(245,125,30)" fg:x="243" fg:w="4"/><text x="5.8247%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.09%)</title><rect x="5.5747%" y="997" width="0.0918%" height="15" fill="rgb(232,202,2)" fg:x="243" fg:w="4"/><text x="5.8247%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.09%)</title><rect x="5.5747%" y="981" width="0.0918%" height="15" fill="rgb(237,140,51)" fg:x="243" fg:w="4"/><text x="5.8247%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="5.5976%" y="965" width="0.0688%" height="15" fill="rgb(236,157,25)" fg:x="244" fg:w="3"/><text x="5.8476%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.07%)</title><rect x="5.5976%" y="949" width="0.0688%" height="15" fill="rgb(219,209,0)" fg:x="244" fg:w="3"/><text x="5.8476%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="5.5976%" y="933" width="0.0688%" height="15" fill="rgb(240,116,54)" fg:x="244" fg:w="3"/><text x="5.8476%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="5.6206%" y="917" width="0.0459%" height="15" fill="rgb(216,10,36)" fg:x="245" fg:w="2"/><text x="5.8706%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="5.6206%" y="901" width="0.0459%" height="15" fill="rgb(222,72,44)" fg:x="245" fg:w="2"/><text x="5.8706%" y="911.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="5.6206%" y="885" width="0.0459%" height="15" fill="rgb(232,159,9)" fg:x="245" fg:w="2"/><text x="5.8706%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="5.6206%" y="869" width="0.0459%" height="15" fill="rgb(210,39,32)" fg:x="245" fg:w="2"/><text x="5.8706%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="5.6206%" y="853" width="0.0459%" height="15" fill="rgb(216,194,45)" fg:x="245" fg:w="2"/><text x="5.8706%" y="863.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="5.6435%" y="837" width="0.0229%" height="15" fill="rgb(218,18,35)" fg:x="246" fg:w="1"/><text x="5.8935%" y="847.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="5.6664%" y="821" width="0.0229%" height="15" fill="rgb(207,83,51)" fg:x="247" fg:w="1"/><text x="5.9164%" y="831.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.02%)</title><rect x="5.6664%" y="805" width="0.0229%" height="15" fill="rgb(225,63,43)" fg:x="247" fg:w="1"/><text x="5.9164%" y="815.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="5.6664%" y="789" width="0.0229%" height="15" fill="rgb(207,57,36)" fg:x="247" fg:w="1"/><text x="5.9164%" y="799.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="5.6664%" y="773" width="0.0229%" height="15" fill="rgb(216,99,33)" fg:x="247" fg:w="1"/><text x="5.9164%" y="783.50"></text></g><g><title>free_unref_page_list (1 samples, 0.02%)</title><rect x="5.6664%" y="757" width="0.0229%" height="15" fill="rgb(225,42,16)" fg:x="247" fg:w="1"/><text x="5.9164%" y="767.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="5.6664%" y="741" width="0.0229%" height="15" fill="rgb(220,201,45)" fg:x="247" fg:w="1"/><text x="5.9164%" y="751.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.02%)</title><rect x="5.6664%" y="725" width="0.0229%" height="15" fill="rgb(225,33,4)" fg:x="247" fg:w="1"/><text x="5.9164%" y="735.50"></text></g><g><title>y2021::d05::main::p01 (172 samples, 3.95%)</title><rect x="1.7665%" y="1077" width="3.9459%" height="15" fill="rgb(224,33,50)" fg:x="77" fg:w="172"/><text x="2.0165%" y="1087.50">y202..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::types::point::Point,i32&gt;&gt; (2 samples, 0.05%)</title><rect x="5.6664%" y="1061" width="0.0459%" height="15" fill="rgb(246,198,51)" fg:x="247" fg:w="2"/><text x="5.9164%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::types::point::Point,i32,std::collections::hash::map::RandomState&gt;&gt; (2 samples, 0.05%)</title><rect x="5.6664%" y="1045" width="0.0459%" height="15" fill="rgb(205,22,4)" fg:x="247" fg:w="2"/><text x="5.9164%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::types::point::Point,i32)&gt;&gt; (2 samples, 0.05%)</title><rect x="5.6664%" y="1029" width="0.0459%" height="15" fill="rgb(206,3,8)" fg:x="247" fg:w="2"/><text x="5.9164%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="5.6664%" y="1013" width="0.0459%" height="15" fill="rgb(251,23,15)" fg:x="247" fg:w="2"/><text x="5.9164%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (2 samples, 0.05%)</title><rect x="5.6664%" y="997" width="0.0459%" height="15" fill="rgb(252,88,28)" fg:x="247" fg:w="2"/><text x="5.9164%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (2 samples, 0.05%)</title><rect x="5.6664%" y="981" width="0.0459%" height="15" fill="rgb(212,127,14)" fg:x="247" fg:w="2"/><text x="5.9164%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.05%)</title><rect x="5.6664%" y="965" width="0.0459%" height="15" fill="rgb(247,145,37)" fg:x="247" fg:w="2"/><text x="5.9164%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.05%)</title><rect x="5.6664%" y="949" width="0.0459%" height="15" fill="rgb(209,117,53)" fg:x="247" fg:w="2"/><text x="5.9164%" y="959.50"></text></g><g><title>__GI_munmap (2 samples, 0.05%)</title><rect x="5.6664%" y="933" width="0.0459%" height="15" fill="rgb(212,90,42)" fg:x="247" fg:w="2"/><text x="5.9164%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="5.6664%" y="917" width="0.0459%" height="15" fill="rgb(218,164,37)" fg:x="247" fg:w="2"/><text x="5.9164%" y="927.50"></text></g><g><title>do_syscall_64 (2 samples, 0.05%)</title><rect x="5.6664%" y="901" width="0.0459%" height="15" fill="rgb(246,65,34)" fg:x="247" fg:w="2"/><text x="5.9164%" y="911.50"></text></g><g><title>__x64_sys_munmap (2 samples, 0.05%)</title><rect x="5.6664%" y="885" width="0.0459%" height="15" fill="rgb(231,100,33)" fg:x="247" fg:w="2"/><text x="5.9164%" y="895.50"></text></g><g><title>__vm_munmap (2 samples, 0.05%)</title><rect x="5.6664%" y="869" width="0.0459%" height="15" fill="rgb(228,126,14)" fg:x="247" fg:w="2"/><text x="5.9164%" y="879.50"></text></g><g><title>__do_munmap (2 samples, 0.05%)</title><rect x="5.6664%" y="853" width="0.0459%" height="15" fill="rgb(215,173,21)" fg:x="247" fg:w="2"/><text x="5.9164%" y="863.50"></text></g><g><title>unmap_region (2 samples, 0.05%)</title><rect x="5.6664%" y="837" width="0.0459%" height="15" fill="rgb(210,6,40)" fg:x="247" fg:w="2"/><text x="5.9164%" y="847.50"></text></g><g><title>unmap_vmas (1 samples, 0.02%)</title><rect x="5.6894%" y="821" width="0.0229%" height="15" fill="rgb(212,48,18)" fg:x="248" fg:w="1"/><text x="5.9394%" y="831.50"></text></g><g><title>unmap_single_vma (1 samples, 0.02%)</title><rect x="5.6894%" y="805" width="0.0229%" height="15" fill="rgb(230,214,11)" fg:x="248" fg:w="1"/><text x="5.9394%" y="815.50"></text></g><g><title>unmap_page_range (1 samples, 0.02%)</title><rect x="5.6894%" y="789" width="0.0229%" height="15" fill="rgb(254,105,39)" fg:x="248" fg:w="1"/><text x="5.9394%" y="799.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="5.6894%" y="773" width="0.0229%" height="15" fill="rgb(245,158,5)" fg:x="248" fg:w="1"/><text x="5.9394%" y="783.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="5.7123%" y="949" width="0.0229%" height="15" fill="rgb(249,208,11)" fg:x="249" fg:w="1"/><text x="5.9623%" y="959.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.02%)</title><rect x="5.7123%" y="933" width="0.0229%" height="15" fill="rgb(210,39,28)" fg:x="249" fg:w="1"/><text x="5.9623%" y="943.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.02%)</title><rect x="5.7123%" y="917" width="0.0229%" height="15" fill="rgb(211,56,53)" fg:x="249" fg:w="1"/><text x="5.9623%" y="927.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 0.02%)</title><rect x="5.7123%" y="901" width="0.0229%" height="15" fill="rgb(226,201,30)" fg:x="249" fg:w="1"/><text x="5.9623%" y="911.50"></text></g><g><title>std::io::read_until (1 samples, 0.02%)</title><rect x="5.7123%" y="885" width="0.0229%" height="15" fill="rgb(239,101,34)" fg:x="249" fg:w="1"/><text x="5.9623%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="5.7123%" y="869" width="0.0229%" height="15" fill="rgb(226,209,5)" fg:x="249" fg:w="1"/><text x="5.9623%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="5.7123%" y="853" width="0.0229%" height="15" fill="rgb(250,105,47)" fg:x="249" fg:w="1"/><text x="5.9623%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="5.7123%" y="837" width="0.0229%" height="15" fill="rgb(230,72,3)" fg:x="249" fg:w="1"/><text x="5.9623%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="5.7123%" y="821" width="0.0229%" height="15" fill="rgb(232,218,39)" fg:x="249" fg:w="1"/><text x="5.9623%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="5.7123%" y="805" width="0.0229%" height="15" fill="rgb(248,166,6)" fg:x="249" fg:w="1"/><text x="5.9623%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="5.7123%" y="789" width="0.0229%" height="15" fill="rgb(247,89,20)" fg:x="249" fg:w="1"/><text x="5.9623%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="5.7123%" y="773" width="0.0229%" height="15" fill="rgb(248,130,54)" fg:x="249" fg:w="1"/><text x="5.9623%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="5.7123%" y="757" width="0.0229%" height="15" fill="rgb(234,196,4)" fg:x="249" fg:w="1"/><text x="5.9623%" y="767.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="5.7123%" y="741" width="0.0229%" height="15" fill="rgb(250,143,31)" fg:x="249" fg:w="1"/><text x="5.9623%" y="751.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="5.7123%" y="725" width="0.0229%" height="15" fill="rgb(211,110,34)" fg:x="249" fg:w="1"/><text x="5.9623%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (9 samples, 0.21%)</title><rect x="6.9282%" y="773" width="0.2065%" height="15" fill="rgb(215,124,48)" fg:x="302" fg:w="9"/><text x="7.1782%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (9 samples, 0.21%)</title><rect x="6.9282%" y="757" width="0.2065%" height="15" fill="rgb(216,46,13)" fg:x="302" fg:w="9"/><text x="7.1782%" y="767.50"></text></g><g><title>core::ptr::write (9 samples, 0.21%)</title><rect x="6.9282%" y="741" width="0.2065%" height="15" fill="rgb(205,184,25)" fg:x="302" fg:w="9"/><text x="7.1782%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="7.1347%" y="757" width="0.0229%" height="15" fill="rgb(228,1,10)" fg:x="311" fg:w="1"/><text x="7.3847%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="7.1347%" y="741" width="0.0229%" height="15" fill="rgb(213,116,27)" fg:x="311" fg:w="1"/><text x="7.3847%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="7.1347%" y="725" width="0.0229%" height="15" fill="rgb(241,95,50)" fg:x="311" fg:w="1"/><text x="7.3847%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="7.1347%" y="709" width="0.0229%" height="15" fill="rgb(238,48,32)" fg:x="311" fg:w="1"/><text x="7.3847%" y="719.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (13 samples, 0.30%)</title><rect x="6.8823%" y="837" width="0.2982%" height="15" fill="rgb(235,113,49)" fg:x="300" fg:w="13"/><text x="7.1323%" y="847.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (13 samples, 0.30%)</title><rect x="6.8823%" y="821" width="0.2982%" height="15" fill="rgb(205,127,43)" fg:x="300" fg:w="13"/><text x="7.1323%" y="831.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (13 samples, 0.30%)</title><rect x="6.8823%" y="805" width="0.2982%" height="15" fill="rgb(250,162,2)" fg:x="300" fg:w="13"/><text x="7.1323%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (11 samples, 0.25%)</title><rect x="6.9282%" y="789" width="0.2524%" height="15" fill="rgb(220,13,41)" fg:x="302" fg:w="11"/><text x="7.1782%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.05%)</title><rect x="7.1347%" y="773" width="0.0459%" height="15" fill="rgb(249,221,25)" fg:x="311" fg:w="2"/><text x="7.3847%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.02%)</title><rect x="7.1576%" y="757" width="0.0229%" height="15" fill="rgb(215,208,19)" fg:x="312" fg:w="1"/><text x="7.4076%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.02%)</title><rect x="7.1576%" y="741" width="0.0229%" height="15" fill="rgb(236,175,2)" fg:x="312" fg:w="1"/><text x="7.4076%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="7.3411%" y="741" width="0.0229%" height="15" fill="rgb(241,52,2)" fg:x="320" fg:w="1"/><text x="7.5911%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="7.3411%" y="725" width="0.0229%" height="15" fill="rgb(248,140,14)" fg:x="320" fg:w="1"/><text x="7.5911%" y="735.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="7.3411%" y="709" width="0.0229%" height="15" fill="rgb(253,22,42)" fg:x="320" fg:w="1"/><text x="7.5911%" y="719.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="7.3641%" y="469" width="0.0229%" height="15" fill="rgb(234,61,47)" fg:x="321" fg:w="1"/><text x="7.6141%" y="479.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.02%)</title><rect x="7.3641%" y="453" width="0.0229%" height="15" fill="rgb(208,226,15)" fg:x="321" fg:w="1"/><text x="7.6141%" y="463.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="7.3641%" y="437" width="0.0229%" height="15" fill="rgb(217,221,4)" fg:x="321" fg:w="1"/><text x="7.6141%" y="447.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="7.3641%" y="421" width="0.0229%" height="15" fill="rgb(212,174,34)" fg:x="321" fg:w="1"/><text x="7.6141%" y="431.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="7.3641%" y="405" width="0.0229%" height="15" fill="rgb(253,83,4)" fg:x="321" fg:w="1"/><text x="7.6141%" y="415.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="7.3641%" y="389" width="0.0229%" height="15" fill="rgb(250,195,49)" fg:x="321" fg:w="1"/><text x="7.6141%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (3 samples, 0.07%)</title><rect x="7.3641%" y="741" width="0.0688%" height="15" fill="rgb(241,192,25)" fg:x="321" fg:w="3"/><text x="7.6141%" y="751.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="7.3641%" y="725" width="0.0688%" height="15" fill="rgb(208,124,10)" fg:x="321" fg:w="3"/><text x="7.6141%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (3 samples, 0.07%)</title><rect x="7.3641%" y="709" width="0.0688%" height="15" fill="rgb(222,33,0)" fg:x="321" fg:w="3"/><text x="7.6141%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (3 samples, 0.07%)</title><rect x="7.3641%" y="693" width="0.0688%" height="15" fill="rgb(234,209,28)" fg:x="321" fg:w="3"/><text x="7.6141%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="7.3641%" y="677" width="0.0688%" height="15" fill="rgb(224,11,23)" fg:x="321" fg:w="3"/><text x="7.6141%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="7.3641%" y="661" width="0.0688%" height="15" fill="rgb(232,99,1)" fg:x="321" fg:w="3"/><text x="7.6141%" y="671.50"></text></g><g><title>_int_free (3 samples, 0.07%)</title><rect x="7.3641%" y="645" width="0.0688%" height="15" fill="rgb(237,95,45)" fg:x="321" fg:w="3"/><text x="7.6141%" y="655.50"></text></g><g><title>systrim (3 samples, 0.07%)</title><rect x="7.3641%" y="629" width="0.0688%" height="15" fill="rgb(208,109,11)" fg:x="321" fg:w="3"/><text x="7.6141%" y="639.50"></text></g><g><title>__GI___default_morecore (3 samples, 0.07%)</title><rect x="7.3641%" y="613" width="0.0688%" height="15" fill="rgb(216,190,48)" fg:x="321" fg:w="3"/><text x="7.6141%" y="623.50"></text></g><g><title>__GI___sbrk (3 samples, 0.07%)</title><rect x="7.3641%" y="597" width="0.0688%" height="15" fill="rgb(251,171,36)" fg:x="321" fg:w="3"/><text x="7.6141%" y="607.50"></text></g><g><title>__GI___sbrk (3 samples, 0.07%)</title><rect x="7.3641%" y="581" width="0.0688%" height="15" fill="rgb(230,62,22)" fg:x="321" fg:w="3"/><text x="7.6141%" y="591.50"></text></g><g><title>__brk (3 samples, 0.07%)</title><rect x="7.3641%" y="565" width="0.0688%" height="15" fill="rgb(225,114,35)" fg:x="321" fg:w="3"/><text x="7.6141%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="7.3641%" y="549" width="0.0688%" height="15" fill="rgb(215,118,42)" fg:x="321" fg:w="3"/><text x="7.6141%" y="559.50"></text></g><g><title>do_syscall_64 (3 samples, 0.07%)</title><rect x="7.3641%" y="533" width="0.0688%" height="15" fill="rgb(243,119,21)" fg:x="321" fg:w="3"/><text x="7.6141%" y="543.50"></text></g><g><title>__x64_sys_brk (3 samples, 0.07%)</title><rect x="7.3641%" y="517" width="0.0688%" height="15" fill="rgb(252,177,53)" fg:x="321" fg:w="3"/><text x="7.6141%" y="527.50"></text></g><g><title>__do_munmap (3 samples, 0.07%)</title><rect x="7.3641%" y="501" width="0.0688%" height="15" fill="rgb(237,209,29)" fg:x="321" fg:w="3"/><text x="7.6141%" y="511.50"></text></g><g><title>unmap_region (3 samples, 0.07%)</title><rect x="7.3641%" y="485" width="0.0688%" height="15" fill="rgb(212,65,23)" fg:x="321" fg:w="3"/><text x="7.6141%" y="495.50"></text></g><g><title>unmap_vmas (2 samples, 0.05%)</title><rect x="7.3870%" y="469" width="0.0459%" height="15" fill="rgb(230,222,46)" fg:x="322" fg:w="2"/><text x="7.6370%" y="479.50"></text></g><g><title>unmap_single_vma (2 samples, 0.05%)</title><rect x="7.3870%" y="453" width="0.0459%" height="15" fill="rgb(215,135,32)" fg:x="322" fg:w="2"/><text x="7.6370%" y="463.50"></text></g><g><title>unmap_page_range (2 samples, 0.05%)</title><rect x="7.3870%" y="437" width="0.0459%" height="15" fill="rgb(246,101,22)" fg:x="322" fg:w="2"/><text x="7.6370%" y="447.50"></text></g><g><title>zap_pte_range.isra.0 (2 samples, 0.05%)</title><rect x="7.3870%" y="421" width="0.0459%" height="15" fill="rgb(206,107,13)" fg:x="322" fg:w="2"/><text x="7.6370%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="7.9376%" y="661" width="0.0229%" height="15" fill="rgb(250,100,44)" fg:x="346" fg:w="1"/><text x="8.1876%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="7.9376%" y="645" width="0.0229%" height="15" fill="rgb(231,147,38)" fg:x="346" fg:w="1"/><text x="8.1876%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.28%)</title><rect x="8.1211%" y="645" width="0.2753%" height="15" fill="rgb(229,8,40)" fg:x="354" fg:w="12"/><text x="8.3711%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (32 samples, 0.73%)</title><rect x="7.7082%" y="709" width="0.7341%" height="15" fill="rgb(221,135,30)" fg:x="336" fg:w="32"/><text x="7.9582%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (32 samples, 0.73%)</title><rect x="7.7082%" y="693" width="0.7341%" height="15" fill="rgb(249,193,18)" fg:x="336" fg:w="32"/><text x="7.9582%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (32 samples, 0.73%)</title><rect x="7.7082%" y="677" width="0.7341%" height="15" fill="rgb(209,133,39)" fg:x="336" fg:w="32"/><text x="7.9582%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21 samples, 0.48%)</title><rect x="7.9605%" y="661" width="0.4818%" height="15" fill="rgb(232,100,14)" fg:x="347" fg:w="21"/><text x="8.2105%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="8.3964%" y="645" width="0.0459%" height="15" fill="rgb(224,185,1)" fg:x="366" fg:w="2"/><text x="8.6464%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.09%)</title><rect x="8.4423%" y="709" width="0.0918%" height="15" fill="rgb(223,139,8)" fg:x="368" fg:w="4"/><text x="8.6923%" y="719.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="8.5111%" y="693" width="0.0229%" height="15" fill="rgb(232,213,38)" fg:x="371" fg:w="1"/><text x="8.7611%" y="703.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="8.5111%" y="677" width="0.0229%" height="15" fill="rgb(207,94,22)" fg:x="371" fg:w="1"/><text x="8.7611%" y="687.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="8.5111%" y="661" width="0.0229%" height="15" fill="rgb(219,183,54)" fg:x="371" fg:w="1"/><text x="8.7611%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.21%)</title><rect x="9.0158%" y="597" width="0.2065%" height="15" fill="rgb(216,185,54)" fg:x="393" fg:w="9"/><text x="9.2658%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (18 samples, 0.41%)</title><rect x="8.8782%" y="613" width="0.4129%" height="15" fill="rgb(254,217,39)" fg:x="387" fg:w="18"/><text x="9.1282%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="9.2223%" y="597" width="0.0688%" height="15" fill="rgb(240,178,23)" fg:x="402" fg:w="3"/><text x="9.4723%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="9.2911%" y="613" width="0.0229%" height="15" fill="rgb(218,11,47)" fg:x="405" fg:w="1"/><text x="9.5411%" y="623.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (83 samples, 1.90%)</title><rect x="7.4329%" y="741" width="1.9041%" height="15" fill="rgb(218,51,51)" fg:x="324" fg:w="83"/><text x="7.6829%" y="751.50">h..</text></g><g><title>hashbrown::map::make_hash (83 samples, 1.90%)</title><rect x="7.4329%" y="725" width="1.9041%" height="15" fill="rgb(238,126,27)" fg:x="324" fg:w="83"/><text x="7.6829%" y="735.50">h..</text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (35 samples, 0.80%)</title><rect x="8.5341%" y="709" width="0.8029%" height="15" fill="rgb(249,202,22)" fg:x="372" fg:w="35"/><text x="8.7841%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (31 samples, 0.71%)</title><rect x="8.6258%" y="693" width="0.7112%" height="15" fill="rgb(254,195,49)" fg:x="376" fg:w="31"/><text x="8.8758%" y="703.50"></text></g><g><title>core::hash::Hasher::write_usize (30 samples, 0.69%)</title><rect x="8.6488%" y="677" width="0.6882%" height="15" fill="rgb(208,123,14)" fg:x="377" fg:w="30"/><text x="8.8988%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.69%)</title><rect x="8.6488%" y="661" width="0.6882%" height="15" fill="rgb(224,200,8)" fg:x="377" fg:w="30"/><text x="8.8988%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (30 samples, 0.69%)</title><rect x="8.6488%" y="645" width="0.6882%" height="15" fill="rgb(217,61,36)" fg:x="377" fg:w="30"/><text x="8.8988%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 0.69%)</title><rect x="8.6488%" y="629" width="0.6882%" height="15" fill="rgb(206,35,45)" fg:x="377" fg:w="30"/><text x="8.8988%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="9.3141%" y="613" width="0.0229%" height="15" fill="rgb(217,65,33)" fg:x="406" fg:w="1"/><text x="9.5641%" y="623.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="9.3141%" y="597" width="0.0229%" height="15" fill="rgb(222,158,48)" fg:x="406" fg:w="1"/><text x="9.5641%" y="607.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="9.3141%" y="581" width="0.0229%" height="15" fill="rgb(254,2,54)" fg:x="406" fg:w="1"/><text x="9.5641%" y="591.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="9.3141%" y="565" width="0.0229%" height="15" fill="rgb(250,143,38)" fg:x="406" fg:w="1"/><text x="9.5641%" y="575.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="9.3141%" y="549" width="0.0229%" height="15" fill="rgb(248,25,0)" fg:x="406" fg:w="1"/><text x="9.5641%" y="559.50"></text></g><g><title>tick_program_event (1 samples, 0.02%)</title><rect x="9.3141%" y="533" width="0.0229%" height="15" fill="rgb(206,152,27)" fg:x="406" fg:w="1"/><text x="9.5641%" y="543.50"></text></g><g><title>clockevents_program_event (1 samples, 0.02%)</title><rect x="9.3141%" y="517" width="0.0229%" height="15" fill="rgb(240,77,30)" fg:x="406" fg:w="1"/><text x="9.5641%" y="527.50"></text></g><g><title>read_tsc (1 samples, 0.02%)</title><rect x="9.3141%" y="501" width="0.0229%" height="15" fill="rgb(231,5,3)" fg:x="406" fg:w="1"/><text x="9.5641%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="9.3370%" y="741" width="0.0229%" height="15" fill="rgb(207,226,32)" fg:x="407" fg:w="1"/><text x="9.5870%" y="751.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="9.3370%" y="725" width="0.0229%" height="15" fill="rgb(222,207,47)" fg:x="407" fg:w="1"/><text x="9.5870%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="9.3370%" y="709" width="0.0229%" height="15" fill="rgb(229,115,45)" fg:x="407" fg:w="1"/><text x="9.5870%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="9.3370%" y="693" width="0.0229%" height="15" fill="rgb(224,191,6)" fg:x="407" fg:w="1"/><text x="9.5870%" y="703.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="9.4976%" y="693" width="0.0229%" height="15" fill="rgb(230,227,24)" fg:x="414" fg:w="1"/><text x="9.7476%" y="703.50"></text></g><g><title>down_read_trylock (1 samples, 0.02%)</title><rect x="9.6123%" y="645" width="0.0229%" height="15" fill="rgb(228,80,19)" fg:x="419" fg:w="1"/><text x="9.8623%" y="655.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="9.7041%" y="613" width="0.0459%" height="15" fill="rgb(247,229,0)" fg:x="423" fg:w="2"/><text x="9.9541%" y="623.50"></text></g><g><title>cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="9.7499%" y="613" width="0.0229%" height="15" fill="rgb(237,194,15)" fg:x="425" fg:w="1"/><text x="9.9999%" y="623.50"></text></g><g><title>__pte_alloc (1 samples, 0.02%)</title><rect x="9.7958%" y="597" width="0.0229%" height="15" fill="rgb(219,203,20)" fg:x="427" fg:w="1"/><text x="10.0458%" y="607.50"></text></g><g><title>pte_alloc_one (1 samples, 0.02%)</title><rect x="9.7958%" y="581" width="0.0229%" height="15" fill="rgb(234,128,8)" fg:x="427" fg:w="1"/><text x="10.0458%" y="591.50"></text></g><g><title>alloc_pages_current (1 samples, 0.02%)</title><rect x="9.7958%" y="565" width="0.0229%" height="15" fill="rgb(248,202,8)" fg:x="427" fg:w="1"/><text x="10.0458%" y="575.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="9.7958%" y="549" width="0.0229%" height="15" fill="rgb(206,104,37)" fg:x="427" fg:w="1"/><text x="10.0458%" y="559.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="9.7958%" y="533" width="0.0229%" height="15" fill="rgb(223,8,27)" fg:x="427" fg:w="1"/><text x="10.0458%" y="543.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="9.7958%" y="517" width="0.0229%" height="15" fill="rgb(216,217,28)" fg:x="427" fg:w="1"/><text x="10.0458%" y="527.50"></text></g><g><title>_cond_resched (1 samples, 0.02%)</title><rect x="9.8417%" y="565" width="0.0229%" height="15" fill="rgb(249,199,1)" fg:x="429" fg:w="1"/><text x="10.0917%" y="575.50"></text></g><g><title>clear_page_rep (4 samples, 0.09%)</title><rect x="9.8646%" y="549" width="0.0918%" height="15" fill="rgb(240,85,17)" fg:x="430" fg:w="4"/><text x="10.1146%" y="559.50"></text></g><g><title>prep_new_page (1 samples, 0.02%)</title><rect x="9.9564%" y="549" width="0.0229%" height="15" fill="rgb(206,108,45)" fg:x="434" fg:w="1"/><text x="10.2064%" y="559.50"></text></g><g><title>alloc_pages_vma (12 samples, 0.28%)</title><rect x="9.8188%" y="597" width="0.2753%" height="15" fill="rgb(245,210,41)" fg:x="428" fg:w="12"/><text x="10.0688%" y="607.50"></text></g><g><title>__alloc_pages_nodemask (11 samples, 0.25%)</title><rect x="9.8417%" y="581" width="0.2524%" height="15" fill="rgb(206,13,37)" fg:x="429" fg:w="11"/><text x="10.0917%" y="591.50"></text></g><g><title>get_page_from_freelist (10 samples, 0.23%)</title><rect x="9.8646%" y="565" width="0.2294%" height="15" fill="rgb(250,61,18)" fg:x="430" fg:w="10"/><text x="10.1146%" y="575.50"></text></g><g><title>rmqueue (5 samples, 0.11%)</title><rect x="9.9794%" y="549" width="0.1147%" height="15" fill="rgb(235,172,48)" fg:x="435" fg:w="5"/><text x="10.2294%" y="559.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (2 samples, 0.05%)</title><rect x="10.0941%" y="597" width="0.0459%" height="15" fill="rgb(249,201,17)" fg:x="440" fg:w="2"/><text x="10.3441%" y="607.50"></text></g><g><title>lru_cache_add (2 samples, 0.05%)</title><rect x="10.0941%" y="581" width="0.0459%" height="15" fill="rgb(219,208,6)" fg:x="440" fg:w="2"/><text x="10.3441%" y="591.50"></text></g><g><title>__pagevec_lru_add (2 samples, 0.05%)</title><rect x="10.0941%" y="565" width="0.0459%" height="15" fill="rgb(248,31,23)" fg:x="440" fg:w="2"/><text x="10.3441%" y="575.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="10.1170%" y="549" width="0.0229%" height="15" fill="rgb(245,15,42)" fg:x="441" fg:w="1"/><text x="10.3670%" y="559.50"></text></g><g><title>mem_cgroup_charge (1 samples, 0.02%)</title><rect x="10.1399%" y="597" width="0.0229%" height="15" fill="rgb(222,217,39)" fg:x="442" fg:w="1"/><text x="10.3899%" y="607.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="10.1399%" y="581" width="0.0229%" height="15" fill="rgb(210,219,27)" fg:x="442" fg:w="1"/><text x="10.3899%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (37 samples, 0.85%)</title><rect x="9.3599%" y="741" width="0.8488%" height="15" fill="rgb(252,166,36)" fg:x="408" fg:w="37"/><text x="9.6099%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (37 samples, 0.85%)</title><rect x="9.3599%" y="725" width="0.8488%" height="15" fill="rgb(245,132,34)" fg:x="408" fg:w="37"/><text x="9.6099%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.85%)</title><rect x="9.3599%" y="709" width="0.8488%" height="15" fill="rgb(236,54,3)" fg:x="408" fg:w="37"/><text x="9.6099%" y="719.50"></text></g><g><title>asm_exc_page_fault (30 samples, 0.69%)</title><rect x="9.5205%" y="693" width="0.6882%" height="15" fill="rgb(241,173,43)" fg:x="415" fg:w="30"/><text x="9.7705%" y="703.50"></text></g><g><title>exc_page_fault (27 samples, 0.62%)</title><rect x="9.5894%" y="677" width="0.6194%" height="15" fill="rgb(215,190,9)" fg:x="418" fg:w="27"/><text x="9.8394%" y="687.50"></text></g><g><title>do_user_addr_fault (26 samples, 0.60%)</title><rect x="9.6123%" y="661" width="0.5965%" height="15" fill="rgb(242,101,16)" fg:x="419" fg:w="26"/><text x="9.8623%" y="671.50"></text></g><g><title>handle_mm_fault (25 samples, 0.57%)</title><rect x="9.6352%" y="645" width="0.5735%" height="15" fill="rgb(223,190,21)" fg:x="420" fg:w="25"/><text x="9.8852%" y="655.50"></text></g><g><title>__handle_mm_fault (23 samples, 0.53%)</title><rect x="9.6811%" y="629" width="0.5276%" height="15" fill="rgb(215,228,25)" fg:x="422" fg:w="23"/><text x="9.9311%" y="639.50"></text></g><g><title>do_anonymous_page (19 samples, 0.44%)</title><rect x="9.7729%" y="613" width="0.4359%" height="15" fill="rgb(225,36,22)" fg:x="426" fg:w="19"/><text x="10.0229%" y="623.50"></text></g><g><title>page_add_new_anon_rmap (2 samples, 0.05%)</title><rect x="10.1629%" y="597" width="0.0459%" height="15" fill="rgb(251,106,46)" fg:x="443" fg:w="2"/><text x="10.4129%" y="607.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="10.1858%" y="581" width="0.0229%" height="15" fill="rgb(208,90,1)" fg:x="444" fg:w="1"/><text x="10.4358%" y="591.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="10.1858%" y="565" width="0.0229%" height="15" fill="rgb(243,10,4)" fg:x="444" fg:w="1"/><text x="10.4358%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="10.4382%" y="709" width="0.0229%" height="15" fill="rgb(212,137,27)" fg:x="455" fg:w="1"/><text x="10.6882%" y="719.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.14%)</title><rect x="10.4611%" y="709" width="0.1376%" height="15" fill="rgb(231,220,49)" fg:x="456" fg:w="6"/><text x="10.7111%" y="719.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.02%)</title><rect x="10.5988%" y="709" width="0.0229%" height="15" fill="rgb(237,96,20)" fg:x="462" fg:w="1"/><text x="10.8488%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (26 samples, 0.60%)</title><rect x="10.2088%" y="725" width="0.5965%" height="15" fill="rgb(239,229,30)" fg:x="445" fg:w="26"/><text x="10.4588%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (8 samples, 0.18%)</title><rect x="10.6217%" y="709" width="0.1835%" height="15" fill="rgb(219,65,33)" fg:x="463" fg:w="8"/><text x="10.8717%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.18%)</title><rect x="10.6217%" y="693" width="0.1835%" height="15" fill="rgb(243,134,7)" fg:x="463" fg:w="8"/><text x="10.8717%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (28 samples, 0.64%)</title><rect x="10.2088%" y="741" width="0.6423%" height="15" fill="rgb(216,177,54)" fg:x="445" fg:w="28"/><text x="10.4588%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (2 samples, 0.05%)</title><rect x="10.8052%" y="725" width="0.0459%" height="15" fill="rgb(211,160,20)" fg:x="471" fg:w="2"/><text x="11.0552%" y="735.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.05%)</title><rect x="10.8052%" y="709" width="0.0459%" height="15" fill="rgb(239,85,39)" fg:x="471" fg:w="2"/><text x="11.0552%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (154 samples, 3.53%)</title><rect x="7.3411%" y="805" width="3.5329%" height="15" fill="rgb(232,125,22)" fg:x="320" fg:w="154"/><text x="7.5911%" y="815.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (154 samples, 3.53%)</title><rect x="7.3411%" y="789" width="3.5329%" height="15" fill="rgb(244,57,34)" fg:x="320" fg:w="154"/><text x="7.5911%" y="799.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (154 samples, 3.53%)</title><rect x="7.3411%" y="773" width="3.5329%" height="15" fill="rgb(214,203,32)" fg:x="320" fg:w="154"/><text x="7.5911%" y="783.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (154 samples, 3.53%)</title><rect x="7.3411%" y="757" width="3.5329%" height="15" fill="rgb(207,58,43)" fg:x="320" fg:w="154"/><text x="7.5911%" y="767.50">has..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.02%)</title><rect x="10.8511%" y="741" width="0.0229%" height="15" fill="rgb(215,193,15)" fg:x="473" fg:w="1"/><text x="11.1011%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.02%)</title><rect x="10.8511%" y="725" width="0.0229%" height="15" fill="rgb(232,15,44)" fg:x="473" fg:w="1"/><text x="11.1011%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.02%)</title><rect x="10.8511%" y="709" width="0.0229%" height="15" fill="rgb(212,3,48)" fg:x="473" fg:w="1"/><text x="11.1011%" y="719.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.02%)</title><rect x="10.8511%" y="693" width="0.0229%" height="15" fill="rgb(218,128,7)" fg:x="473" fg:w="1"/><text x="11.1011%" y="703.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="10.8511%" y="677" width="0.0229%" height="15" fill="rgb(226,216,39)" fg:x="473" fg:w="1"/><text x="11.1011%" y="687.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="10.8511%" y="661" width="0.0229%" height="15" fill="rgb(243,47,51)" fg:x="473" fg:w="1"/><text x="11.1011%" y="671.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="10.8511%" y="645" width="0.0229%" height="15" fill="rgb(241,183,40)" fg:x="473" fg:w="1"/><text x="11.1011%" y="655.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="10.8511%" y="629" width="0.0229%" height="15" fill="rgb(231,217,32)" fg:x="473" fg:w="1"/><text x="11.1011%" y="639.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="10.8511%" y="613" width="0.0229%" height="15" fill="rgb(229,61,38)" fg:x="473" fg:w="1"/><text x="11.1011%" y="623.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="10.8511%" y="597" width="0.0229%" height="15" fill="rgb(225,210,5)" fg:x="473" fg:w="1"/><text x="11.1011%" y="607.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="10.8511%" y="581" width="0.0229%" height="15" fill="rgb(231,79,45)" fg:x="473" fg:w="1"/><text x="11.1011%" y="591.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="10.8511%" y="565" width="0.0229%" height="15" fill="rgb(224,100,7)" fg:x="473" fg:w="1"/><text x="11.1011%" y="575.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="10.8511%" y="549" width="0.0229%" height="15" fill="rgb(241,198,18)" fg:x="473" fg:w="1"/><text x="11.1011%" y="559.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="10.8511%" y="533" width="0.0229%" height="15" fill="rgb(252,97,53)" fg:x="473" fg:w="1"/><text x="11.1011%" y="543.50"></text></g><g><title>clear_page_rep (1 samples, 0.02%)</title><rect x="10.8511%" y="517" width="0.0229%" height="15" fill="rgb(220,88,7)" fg:x="473" fg:w="1"/><text x="11.1011%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.05%)</title><rect x="10.8970%" y="741" width="0.0459%" height="15" fill="rgb(213,176,14)" fg:x="475" fg:w="2"/><text x="11.1470%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="10.9199%" y="725" width="0.0229%" height="15" fill="rgb(246,73,7)" fg:x="476" fg:w="1"/><text x="11.1699%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.11%)</title><rect x="10.8741%" y="789" width="0.1147%" height="15" fill="rgb(245,64,36)" fg:x="474" fg:w="5"/><text x="11.1241%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.11%)</title><rect x="10.8741%" y="773" width="0.1147%" height="15" fill="rgb(245,80,10)" fg:x="474" fg:w="5"/><text x="11.1241%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.11%)</title><rect x="10.8741%" y="757" width="0.1147%" height="15" fill="rgb(232,107,50)" fg:x="474" fg:w="5"/><text x="11.1241%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.05%)</title><rect x="10.9429%" y="741" width="0.0459%" height="15" fill="rgb(253,3,0)" fg:x="477" fg:w="2"/><text x="11.1929%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="10.9658%" y="725" width="0.0229%" height="15" fill="rgb(212,99,53)" fg:x="478" fg:w="1"/><text x="11.2158%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="10.9888%" y="789" width="0.0229%" height="15" fill="rgb(249,111,54)" fg:x="479" fg:w="1"/><text x="11.2388%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.07%)</title><rect x="11.2870%" y="693" width="0.0688%" height="15" fill="rgb(249,55,30)" fg:x="492" fg:w="3"/><text x="11.5370%" y="703.50"></text></g><g><title>hashbrown::map::make_insert_hash (26 samples, 0.60%)</title><rect x="10.8741%" y="805" width="0.5965%" height="15" fill="rgb(237,47,42)" fg:x="474" fg:w="26"/><text x="11.1241%" y="815.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (20 samples, 0.46%)</title><rect x="11.0117%" y="789" width="0.4588%" height="15" fill="rgb(211,20,18)" fg:x="480" fg:w="20"/><text x="11.2617%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (19 samples, 0.44%)</title><rect x="11.0346%" y="773" width="0.4359%" height="15" fill="rgb(231,203,46)" fg:x="481" fg:w="19"/><text x="11.2846%" y="783.50"></text></g><g><title>core::hash::Hasher::write_usize (18 samples, 0.41%)</title><rect x="11.0576%" y="757" width="0.4129%" height="15" fill="rgb(237,142,3)" fg:x="482" fg:w="18"/><text x="11.3076%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.41%)</title><rect x="11.0576%" y="741" width="0.4129%" height="15" fill="rgb(241,107,1)" fg:x="482" fg:w="18"/><text x="11.3076%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (18 samples, 0.41%)</title><rect x="11.0576%" y="725" width="0.4129%" height="15" fill="rgb(229,83,13)" fg:x="482" fg:w="18"/><text x="11.3076%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.41%)</title><rect x="11.0576%" y="709" width="0.4129%" height="15" fill="rgb(241,91,40)" fg:x="482" fg:w="18"/><text x="11.3076%" y="719.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.11%)</title><rect x="11.3558%" y="693" width="0.1147%" height="15" fill="rgb(225,3,45)" fg:x="495" fg:w="5"/><text x="11.6058%" y="703.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.07%)</title><rect x="11.9064%" y="741" width="0.0688%" height="15" fill="rgb(244,223,14)" fg:x="519" fg:w="3"/><text x="12.1564%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="11.8835%" y="757" width="0.1147%" height="15" fill="rgb(224,124,37)" fg:x="518" fg:w="5"/><text x="12.1335%" y="767.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.02%)</title><rect x="11.9752%" y="741" width="0.0229%" height="15" fill="rgb(251,171,30)" fg:x="522" fg:w="1"/><text x="12.2252%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.21%)</title><rect x="11.8146%" y="789" width="0.2065%" height="15" fill="rgb(236,46,54)" fg:x="515" fg:w="9"/><text x="12.0646%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.21%)</title><rect x="11.8146%" y="773" width="0.2065%" height="15" fill="rgb(245,213,5)" fg:x="515" fg:w="9"/><text x="12.0646%" y="783.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (1 samples, 0.02%)</title><rect x="11.9982%" y="757" width="0.0229%" height="15" fill="rgb(230,144,27)" fg:x="523" fg:w="1"/><text x="12.2482%" y="767.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="12.0211%" y="741" width="0.0229%" height="15" fill="rgb(220,86,6)" fg:x="524" fg:w="1"/><text x="12.2711%" y="751.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (235 samples, 5.39%)</title><rect x="7.1805%" y="821" width="5.3911%" height="15" fill="rgb(240,20,13)" fg:x="313" fg:w="235"/><text x="7.4305%" y="831.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (48 samples, 1.10%)</title><rect x="11.4705%" y="805" width="1.1012%" height="15" fill="rgb(217,89,34)" fg:x="500" fg:w="48"/><text x="11.7205%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (24 samples, 0.55%)</title><rect x="12.0211%" y="789" width="0.5506%" height="15" fill="rgb(229,13,5)" fg:x="524" fg:w="24"/><text x="12.2711%" y="799.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (24 samples, 0.55%)</title><rect x="12.0211%" y="773" width="0.5506%" height="15" fill="rgb(244,67,35)" fg:x="524" fg:w="24"/><text x="12.2711%" y="783.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (24 samples, 0.55%)</title><rect x="12.0211%" y="757" width="0.5506%" height="15" fill="rgb(221,40,2)" fg:x="524" fg:w="24"/><text x="12.2711%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (23 samples, 0.53%)</title><rect x="12.0440%" y="741" width="0.5276%" height="15" fill="rgb(237,157,21)" fg:x="525" fg:w="23"/><text x="12.2940%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (23 samples, 0.53%)</title><rect x="12.0440%" y="725" width="0.5276%" height="15" fill="rgb(222,94,11)" fg:x="525" fg:w="23"/><text x="12.2940%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (23 samples, 0.53%)</title><rect x="12.0440%" y="709" width="0.5276%" height="15" fill="rgb(249,113,6)" fg:x="525" fg:w="23"/><text x="12.2940%" y="719.50"></text></g><g><title>core::core_arch::simd::i8x16::new (23 samples, 0.53%)</title><rect x="12.0440%" y="693" width="0.5276%" height="15" fill="rgb(238,137,36)" fg:x="525" fg:w="23"/><text x="12.2940%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (315 samples, 7.23%)</title><rect x="5.7353%" y="869" width="7.2264%" height="15" fill="rgb(210,102,26)" fg:x="250" fg:w="315"/><text x="5.9853%" y="879.50">core::ops:..</text></g><g><title>y2021::d05::main::p02::{{closure}} (309 samples, 7.09%)</title><rect x="5.8729%" y="853" width="7.0888%" height="15" fill="rgb(218,30,30)" fg:x="256" fg:w="309"/><text x="6.1229%" y="863.50">y2021::d05..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (252 samples, 5.78%)</title><rect x="7.1805%" y="837" width="5.7811%" height="15" fill="rgb(214,67,26)" fg:x="313" fg:w="252"/><text x="7.4305%" y="847.50">std::co..</text></g><g><title>std::collections::hash::map::map_entry (17 samples, 0.39%)</title><rect x="12.5717%" y="821" width="0.3900%" height="15" fill="rgb(251,9,53)" fg:x="548" fg:w="17"/><text x="12.8217%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (316 samples, 7.25%)</title><rect x="5.7353%" y="901" width="7.2494%" height="15" fill="rgb(228,204,25)" fg:x="250" fg:w="316"/><text x="5.9853%" y="911.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (316 samples, 7.25%)</title><rect x="5.7353%" y="885" width="7.2494%" height="15" fill="rgb(207,153,8)" fg:x="250" fg:w="316"/><text x="5.9853%" y="895.50">core::iter..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;y2021::types::point::Point&gt;&gt; (1 samples, 0.02%)</title><rect x="12.9617%" y="869" width="0.0229%" height="15" fill="rgb(242,9,16)" fg:x="565" fg:w="1"/><text x="13.2117%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="12.9617%" y="853" width="0.0229%" height="15" fill="rgb(217,211,10)" fg:x="565" fg:w="1"/><text x="13.2117%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;y2021::types::point::Point,alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="12.9617%" y="837" width="0.0229%" height="15" fill="rgb(219,228,52)" fg:x="565" fg:w="1"/><text x="13.2117%" y="847.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="12.9617%" y="821" width="0.0229%" height="15" fill="rgb(231,92,29)" fg:x="565" fg:w="1"/><text x="13.2117%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;y2021::types::point::Point&gt;&gt; (1 samples, 0.02%)</title><rect x="12.9617%" y="805" width="0.0229%" height="15" fill="rgb(232,8,23)" fg:x="565" fg:w="1"/><text x="13.2117%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="12.9617%" y="789" width="0.0229%" height="15" fill="rgb(216,211,34)" fg:x="565" fg:w="1"/><text x="13.2117%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="12.9617%" y="773" width="0.0229%" height="15" fill="rgb(236,151,0)" fg:x="565" fg:w="1"/><text x="13.2117%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="12.9617%" y="757" width="0.0229%" height="15" fill="rgb(209,168,3)" fg:x="565" fg:w="1"/><text x="13.2117%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="12.9617%" y="741" width="0.0229%" height="15" fill="rgb(208,129,28)" fg:x="565" fg:w="1"/><text x="13.2117%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.05%)</title><rect x="12.9846%" y="677" width="0.0459%" height="15" fill="rgb(229,78,22)" fg:x="566" fg:w="2"/><text x="13.2346%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (2 samples, 0.05%)</title><rect x="12.9846%" y="661" width="0.0459%" height="15" fill="rgb(228,187,13)" fg:x="566" fg:w="2"/><text x="13.2346%" y="671.50"></text></g><g><title>core::ptr::write (2 samples, 0.05%)</title><rect x="12.9846%" y="645" width="0.0459%" height="15" fill="rgb(240,119,24)" fg:x="566" fg:w="2"/><text x="13.2346%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.09%)</title><rect x="12.9846%" y="805" width="0.0918%" height="15" fill="rgb(209,194,42)" fg:x="566" fg:w="4"/><text x="13.2346%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.09%)</title><rect x="12.9846%" y="789" width="0.0918%" height="15" fill="rgb(247,200,46)" fg:x="566" fg:w="4"/><text x="13.2346%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.09%)</title><rect x="12.9846%" y="773" width="0.0918%" height="15" fill="rgb(218,76,16)" fg:x="566" fg:w="4"/><text x="13.2346%" y="783.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (4 samples, 0.09%)</title><rect x="12.9846%" y="757" width="0.0918%" height="15" fill="rgb(225,21,48)" fg:x="566" fg:w="4"/><text x="13.2346%" y="767.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (4 samples, 0.09%)</title><rect x="12.9846%" y="741" width="0.0918%" height="15" fill="rgb(239,223,50)" fg:x="566" fg:w="4"/><text x="13.2346%" y="751.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (4 samples, 0.09%)</title><rect x="12.9846%" y="725" width="0.0918%" height="15" fill="rgb(244,45,21)" fg:x="566" fg:w="4"/><text x="13.2346%" y="735.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (4 samples, 0.09%)</title><rect x="12.9846%" y="709" width="0.0918%" height="15" fill="rgb(232,33,43)" fg:x="566" fg:w="4"/><text x="13.2346%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.09%)</title><rect x="12.9846%" y="693" width="0.0918%" height="15" fill="rgb(209,8,3)" fg:x="566" fg:w="4"/><text x="13.2346%" y="703.50"></text></g><g><title>y2021::types::line::Line::points::{{closure}} (2 samples, 0.05%)</title><rect x="13.0305%" y="677" width="0.0459%" height="15" fill="rgb(214,25,53)" fg:x="568" fg:w="2"/><text x="13.2805%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (321 samples, 7.36%)</title><rect x="5.7353%" y="917" width="7.3641%" height="15" fill="rgb(254,186,54)" fg:x="250" fg:w="321"/><text x="5.9853%" y="927.50">core::iter..</text></g><g><title>y2021::d05::main::p02::{{closure}} (5 samples, 0.11%)</title><rect x="12.9846%" y="901" width="0.1147%" height="15" fill="rgb(208,174,49)" fg:x="566" fg:w="5"/><text x="13.2346%" y="911.50"></text></g><g><title>y2021::types::line::Line::points (5 samples, 0.11%)</title><rect x="12.9846%" y="885" width="0.1147%" height="15" fill="rgb(233,191,51)" fg:x="566" fg:w="5"/><text x="13.2346%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.11%)</title><rect x="12.9846%" y="869" width="0.1147%" height="15" fill="rgb(222,134,10)" fg:x="566" fg:w="5"/><text x="13.2346%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.11%)</title><rect x="12.9846%" y="853" width="0.1147%" height="15" fill="rgb(230,226,20)" fg:x="566" fg:w="5"/><text x="13.2346%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.11%)</title><rect x="12.9846%" y="837" width="0.1147%" height="15" fill="rgb(251,111,25)" fg:x="566" fg:w="5"/><text x="13.2346%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.11%)</title><rect x="12.9846%" y="821" width="0.1147%" height="15" fill="rgb(224,40,46)" fg:x="566" fg:w="5"/><text x="13.2346%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect x="13.0764%" y="805" width="0.0229%" height="15" fill="rgb(236,108,47)" fg:x="570" fg:w="1"/><text x="13.3264%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="13.0764%" y="789" width="0.0229%" height="15" fill="rgb(234,93,0)" fg:x="570" fg:w="1"/><text x="13.3264%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="13.0764%" y="773" width="0.0229%" height="15" fill="rgb(224,213,32)" fg:x="570" fg:w="1"/><text x="13.3264%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="13.0764%" y="757" width="0.0229%" height="15" fill="rgb(251,11,48)" fg:x="570" fg:w="1"/><text x="13.3264%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="13.0764%" y="741" width="0.0229%" height="15" fill="rgb(236,173,5)" fg:x="570" fg:w="1"/><text x="13.3264%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="13.0764%" y="725" width="0.0229%" height="15" fill="rgb(230,95,12)" fg:x="570" fg:w="1"/><text x="13.3264%" y="735.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="13.0764%" y="709" width="0.0229%" height="15" fill="rgb(232,209,1)" fg:x="570" fg:w="1"/><text x="13.3264%" y="719.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="13.0764%" y="693" width="0.0229%" height="15" fill="rgb(232,6,1)" fg:x="570" fg:w="1"/><text x="13.3264%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="13.0764%" y="677" width="0.0229%" height="15" fill="rgb(210,224,50)" fg:x="570" fg:w="1"/><text x="13.3264%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="13.0993%" y="805" width="0.0229%" height="15" fill="rgb(228,127,35)" fg:x="571" fg:w="1"/><text x="13.3493%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="13.0993%" y="789" width="0.0229%" height="15" fill="rgb(245,102,45)" fg:x="571" fg:w="1"/><text x="13.3493%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="13.0993%" y="773" width="0.0229%" height="15" fill="rgb(214,1,49)" fg:x="571" fg:w="1"/><text x="13.3493%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="13.0993%" y="757" width="0.0229%" height="15" fill="rgb(226,163,40)" fg:x="571" fg:w="1"/><text x="13.3493%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="13.0993%" y="741" width="0.0229%" height="15" fill="rgb(239,212,28)" fg:x="571" fg:w="1"/><text x="13.3493%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="13.0993%" y="725" width="0.0229%" height="15" fill="rgb(220,20,13)" fg:x="571" fg:w="1"/><text x="13.3493%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="13.0993%" y="709" width="0.0229%" height="15" fill="rgb(210,164,35)" fg:x="571" fg:w="1"/><text x="13.3493%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="13.0993%" y="693" width="0.0229%" height="15" fill="rgb(248,109,41)" fg:x="571" fg:w="1"/><text x="13.3493%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="13.0993%" y="677" width="0.0229%" height="15" fill="rgb(238,23,50)" fg:x="571" fg:w="1"/><text x="13.3493%" y="687.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="13.0993%" y="661" width="0.0229%" height="15" fill="rgb(211,48,49)" fg:x="571" fg:w="1"/><text x="13.3493%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="13.0993%" y="645" width="0.0229%" height="15" fill="rgb(223,36,21)" fg:x="571" fg:w="1"/><text x="13.3493%" y="655.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="13.0993%" y="629" width="0.0229%" height="15" fill="rgb(207,123,46)" fg:x="571" fg:w="1"/><text x="13.3493%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="13.0993%" y="613" width="0.0229%" height="15" fill="rgb(240,218,32)" fg:x="571" fg:w="1"/><text x="13.3493%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="13.0993%" y="869" width="0.0459%" height="15" fill="rgb(252,5,43)" fg:x="571" fg:w="2"/><text x="13.3493%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="13.0993%" y="853" width="0.0459%" height="15" fill="rgb(252,84,19)" fg:x="571" fg:w="2"/><text x="13.3493%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="13.0993%" y="837" width="0.0459%" height="15" fill="rgb(243,152,39)" fg:x="571" fg:w="2"/><text x="13.3493%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="13.0993%" y="821" width="0.0459%" height="15" fill="rgb(234,160,15)" fg:x="571" fg:w="2"/><text x="13.3493%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.02%)</title><rect x="13.1223%" y="805" width="0.0229%" height="15" fill="rgb(237,34,20)" fg:x="572" fg:w="1"/><text x="13.3723%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="13.1223%" y="789" width="0.0229%" height="15" fill="rgb(229,97,13)" fg:x="572" fg:w="1"/><text x="13.3723%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="13.1223%" y="773" width="0.0229%" height="15" fill="rgb(234,71,50)" fg:x="572" fg:w="1"/><text x="13.3723%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="13.1223%" y="757" width="0.0229%" height="15" fill="rgb(253,155,4)" fg:x="572" fg:w="1"/><text x="13.3723%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="13.1223%" y="741" width="0.0229%" height="15" fill="rgb(222,185,37)" fg:x="572" fg:w="1"/><text x="13.3723%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="13.1223%" y="725" width="0.0229%" height="15" fill="rgb(251,177,13)" fg:x="572" fg:w="1"/><text x="13.3723%" y="735.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="13.1223%" y="709" width="0.0229%" height="15" fill="rgb(250,179,40)" fg:x="572" fg:w="1"/><text x="13.3723%" y="719.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="13.1223%" y="693" width="0.0229%" height="15" fill="rgb(242,44,2)" fg:x="572" fg:w="1"/><text x="13.3723%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="13.1452%" y="837" width="0.0229%" height="15" fill="rgb(216,177,13)" fg:x="573" fg:w="1"/><text x="13.3952%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="13.2140%" y="677" width="0.0229%" height="15" fill="rgb(216,106,43)" fg:x="576" fg:w="1"/><text x="13.4640%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (329 samples, 7.55%)</title><rect x="5.7123%" y="1061" width="7.5476%" height="15" fill="rgb(216,183,2)" fg:x="249" fg:w="329"/><text x="5.9623%" y="1071.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (329 samples, 7.55%)</title><rect x="5.7123%" y="1045" width="7.5476%" height="15" fill="rgb(249,75,3)" fg:x="249" fg:w="329"/><text x="5.9623%" y="1055.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (329 samples, 7.55%)</title><rect x="5.7123%" y="1029" width="7.5476%" height="15" fill="rgb(219,67,39)" fg:x="249" fg:w="329"/><text x="5.9623%" y="1039.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (329 samples, 7.55%)</title><rect x="5.7123%" y="1013" width="7.5476%" height="15" fill="rgb(253,228,2)" fg:x="249" fg:w="329"/><text x="5.9623%" y="1023.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (329 samples, 7.55%)</title><rect x="5.7123%" y="997" width="7.5476%" height="15" fill="rgb(235,138,27)" fg:x="249" fg:w="329"/><text x="5.9623%" y="1007.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (329 samples, 7.55%)</title><rect x="5.7123%" y="981" width="7.5476%" height="15" fill="rgb(236,97,51)" fg:x="249" fg:w="329"/><text x="5.9623%" y="991.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (329 samples, 7.55%)</title><rect x="5.7123%" y="965" width="7.5476%" height="15" fill="rgb(240,80,30)" fg:x="249" fg:w="329"/><text x="5.9623%" y="975.50">core::iter..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (328 samples, 7.52%)</title><rect x="5.7353%" y="949" width="7.5247%" height="15" fill="rgb(230,178,19)" fg:x="250" fg:w="328"/><text x="5.9853%" y="959.50">core::iter..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (328 samples, 7.52%)</title><rect x="5.7353%" y="933" width="7.5247%" height="15" fill="rgb(210,190,27)" fg:x="250" fg:w="328"/><text x="5.9853%" y="943.50">core::iter..</text></g><g><title>y2021::d05::main::read_path_to_lines::{{closure}} (7 samples, 0.16%)</title><rect x="13.0993%" y="917" width="0.1606%" height="15" fill="rgb(222,107,31)" fg:x="571" fg:w="7"/><text x="13.3493%" y="927.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (7 samples, 0.16%)</title><rect x="13.0993%" y="901" width="0.1606%" height="15" fill="rgb(216,127,34)" fg:x="571" fg:w="7"/><text x="13.3493%" y="911.50"></text></g><g><title>&lt;y2021::types::line::Line as core::str::traits::FromStr&gt;::from_str (7 samples, 0.16%)</title><rect x="13.0993%" y="885" width="0.1606%" height="15" fill="rgb(234,116,52)" fg:x="571" fg:w="7"/><text x="13.3493%" y="895.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (5 samples, 0.11%)</title><rect x="13.1452%" y="869" width="0.1147%" height="15" fill="rgb(222,124,15)" fg:x="573" fg:w="5"/><text x="13.3952%" y="879.50"></text></g><g><title>&lt;y2021::types::point::Point as core::str::traits::FromStr&gt;::from_str (5 samples, 0.11%)</title><rect x="13.1452%" y="853" width="0.1147%" height="15" fill="rgb(231,179,28)" fg:x="573" fg:w="5"/><text x="13.3952%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.09%)</title><rect x="13.1682%" y="837" width="0.0918%" height="15" fill="rgb(226,93,45)" fg:x="574" fg:w="4"/><text x="13.4182%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.09%)</title><rect x="13.1682%" y="821" width="0.0918%" height="15" fill="rgb(215,8,51)" fg:x="574" fg:w="4"/><text x="13.4182%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="13.1911%" y="805" width="0.0688%" height="15" fill="rgb(223,106,5)" fg:x="575" fg:w="3"/><text x="13.4411%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="13.1911%" y="789" width="0.0688%" height="15" fill="rgb(250,191,5)" fg:x="575" fg:w="3"/><text x="13.4411%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="13.2140%" y="773" width="0.0459%" height="15" fill="rgb(242,132,44)" fg:x="576" fg:w="2"/><text x="13.4640%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.05%)</title><rect x="13.2140%" y="757" width="0.0459%" height="15" fill="rgb(251,152,29)" fg:x="576" fg:w="2"/><text x="13.4640%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="13.2140%" y="741" width="0.0459%" height="15" fill="rgb(218,179,5)" fg:x="576" fg:w="2"/><text x="13.4640%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="13.2140%" y="725" width="0.0459%" height="15" fill="rgb(227,67,19)" fg:x="576" fg:w="2"/><text x="13.4640%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="13.2140%" y="709" width="0.0459%" height="15" fill="rgb(233,119,31)" fg:x="576" fg:w="2"/><text x="13.4640%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.05%)</title><rect x="13.2140%" y="693" width="0.0459%" height="15" fill="rgb(241,120,22)" fg:x="576" fg:w="2"/><text x="13.4640%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="13.2370%" y="677" width="0.0229%" height="15" fill="rgb(224,102,30)" fg:x="577" fg:w="1"/><text x="13.4870%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="13.2370%" y="661" width="0.0229%" height="15" fill="rgb(210,164,37)" fg:x="577" fg:w="1"/><text x="13.4870%" y="671.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="13.2370%" y="645" width="0.0229%" height="15" fill="rgb(226,191,16)" fg:x="577" fg:w="1"/><text x="13.4870%" y="655.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="13.2370%" y="629" width="0.0229%" height="15" fill="rgb(214,40,45)" fg:x="577" fg:w="1"/><text x="13.4870%" y="639.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="13.2370%" y="613" width="0.0229%" height="15" fill="rgb(244,29,26)" fg:x="577" fg:w="1"/><text x="13.4870%" y="623.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="13.2370%" y="597" width="0.0229%" height="15" fill="rgb(216,16,5)" fg:x="577" fg:w="1"/><text x="13.4870%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="13.2370%" y="581" width="0.0229%" height="15" fill="rgb(249,76,35)" fg:x="577" fg:w="1"/><text x="13.4870%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="13.3287%" y="917" width="0.1147%" height="15" fill="rgb(207,11,44)" fg:x="581" fg:w="5"/><text x="13.5787%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="13.3287%" y="901" width="0.1147%" height="15" fill="rgb(228,190,49)" fg:x="581" fg:w="5"/><text x="13.5787%" y="911.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="13.3287%" y="885" width="0.1147%" height="15" fill="rgb(214,173,12)" fg:x="581" fg:w="5"/><text x="13.5787%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="13.3287%" y="869" width="0.1147%" height="15" fill="rgb(218,26,35)" fg:x="581" fg:w="5"/><text x="13.5787%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="13.3287%" y="853" width="0.1147%" height="15" fill="rgb(220,200,19)" fg:x="581" fg:w="5"/><text x="13.5787%" y="863.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.09%)</title><rect x="13.3517%" y="837" width="0.0918%" height="15" fill="rgb(239,95,49)" fg:x="582" fg:w="4"/><text x="13.6017%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.21%)</title><rect x="13.2599%" y="1061" width="0.2065%" height="15" fill="rgb(235,85,53)" fg:x="578" fg:w="9"/><text x="13.5099%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.21%)</title><rect x="13.2599%" y="1045" width="0.2065%" height="15" fill="rgb(233,133,31)" fg:x="578" fg:w="9"/><text x="13.5099%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.21%)</title><rect x="13.2599%" y="1029" width="0.2065%" height="15" fill="rgb(218,25,20)" fg:x="578" fg:w="9"/><text x="13.5099%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.21%)</title><rect x="13.2599%" y="1013" width="0.2065%" height="15" fill="rgb(252,210,38)" fg:x="578" fg:w="9"/><text x="13.5099%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.21%)</title><rect x="13.2599%" y="997" width="0.2065%" height="15" fill="rgb(242,134,21)" fg:x="578" fg:w="9"/><text x="13.5099%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (9 samples, 0.21%)</title><rect x="13.2599%" y="981" width="0.2065%" height="15" fill="rgb(213,28,48)" fg:x="578" fg:w="9"/><text x="13.5099%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.21%)</title><rect x="13.2599%" y="965" width="0.2065%" height="15" fill="rgb(250,196,2)" fg:x="578" fg:w="9"/><text x="13.5099%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (9 samples, 0.21%)</title><rect x="13.2599%" y="949" width="0.2065%" height="15" fill="rgb(227,5,17)" fg:x="578" fg:w="9"/><text x="13.5099%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.21%)</title><rect x="13.2599%" y="933" width="0.2065%" height="15" fill="rgb(221,226,24)" fg:x="578" fg:w="9"/><text x="13.5099%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.02%)</title><rect x="13.4435%" y="917" width="0.0229%" height="15" fill="rgb(211,5,48)" fg:x="586" fg:w="1"/><text x="13.6935%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="13.4435%" y="901" width="0.0229%" height="15" fill="rgb(219,150,6)" fg:x="586" fg:w="1"/><text x="13.6935%" y="911.50"></text></g><g><title>y2021::d05::main::p01::{{closure}} (1 samples, 0.02%)</title><rect x="13.4435%" y="885" width="0.0229%" height="15" fill="rgb(251,46,16)" fg:x="586" fg:w="1"/><text x="13.6935%" y="895.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="13.4664%" y="821" width="0.0229%" height="15" fill="rgb(220,204,40)" fg:x="587" fg:w="1"/><text x="13.7164%" y="831.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.02%)</title><rect x="13.4664%" y="805" width="0.0229%" height="15" fill="rgb(211,85,2)" fg:x="587" fg:w="1"/><text x="13.7164%" y="815.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="13.4664%" y="789" width="0.0229%" height="15" fill="rgb(229,17,7)" fg:x="587" fg:w="1"/><text x="13.7164%" y="799.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="13.4664%" y="773" width="0.0229%" height="15" fill="rgb(239,72,28)" fg:x="587" fg:w="1"/><text x="13.7164%" y="783.50"></text></g><g><title>free_unref_page_list (1 samples, 0.02%)</title><rect x="13.4664%" y="757" width="0.0229%" height="15" fill="rgb(230,47,54)" fg:x="587" fg:w="1"/><text x="13.7164%" y="767.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="13.4664%" y="741" width="0.0229%" height="15" fill="rgb(214,50,8)" fg:x="587" fg:w="1"/><text x="13.7164%" y="751.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.02%)</title><rect x="13.4664%" y="725" width="0.0229%" height="15" fill="rgb(216,198,43)" fg:x="587" fg:w="1"/><text x="13.7164%" y="735.50"></text></g><g><title>__GI_munmap (3 samples, 0.07%)</title><rect x="13.4664%" y="933" width="0.0688%" height="15" fill="rgb(234,20,35)" fg:x="587" fg:w="3"/><text x="13.7164%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="13.4664%" y="917" width="0.0688%" height="15" fill="rgb(254,45,19)" fg:x="587" fg:w="3"/><text x="13.7164%" y="927.50"></text></g><g><title>do_syscall_64 (3 samples, 0.07%)</title><rect x="13.4664%" y="901" width="0.0688%" height="15" fill="rgb(219,14,44)" fg:x="587" fg:w="3"/><text x="13.7164%" y="911.50"></text></g><g><title>__x64_sys_munmap (3 samples, 0.07%)</title><rect x="13.4664%" y="885" width="0.0688%" height="15" fill="rgb(217,220,26)" fg:x="587" fg:w="3"/><text x="13.7164%" y="895.50"></text></g><g><title>__vm_munmap (3 samples, 0.07%)</title><rect x="13.4664%" y="869" width="0.0688%" height="15" fill="rgb(213,158,28)" fg:x="587" fg:w="3"/><text x="13.7164%" y="879.50"></text></g><g><title>__do_munmap (3 samples, 0.07%)</title><rect x="13.4664%" y="853" width="0.0688%" height="15" fill="rgb(252,51,52)" fg:x="587" fg:w="3"/><text x="13.7164%" y="863.50"></text></g><g><title>unmap_region (3 samples, 0.07%)</title><rect x="13.4664%" y="837" width="0.0688%" height="15" fill="rgb(246,89,16)" fg:x="587" fg:w="3"/><text x="13.7164%" y="847.50"></text></g><g><title>unmap_vmas (2 samples, 0.05%)</title><rect x="13.4893%" y="821" width="0.0459%" height="15" fill="rgb(216,158,49)" fg:x="588" fg:w="2"/><text x="13.7393%" y="831.50"></text></g><g><title>unmap_single_vma (2 samples, 0.05%)</title><rect x="13.4893%" y="805" width="0.0459%" height="15" fill="rgb(236,107,19)" fg:x="588" fg:w="2"/><text x="13.7393%" y="815.50"></text></g><g><title>unmap_page_range (2 samples, 0.05%)</title><rect x="13.4893%" y="789" width="0.0459%" height="15" fill="rgb(228,185,30)" fg:x="588" fg:w="2"/><text x="13.7393%" y="799.50"></text></g><g><title>zap_pte_range.isra.0 (2 samples, 0.05%)</title><rect x="13.4893%" y="773" width="0.0459%" height="15" fill="rgb(246,134,8)" fg:x="588" fg:w="2"/><text x="13.7393%" y="783.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="13.5352%" y="693" width="0.0229%" height="15" fill="rgb(214,143,50)" fg:x="590" fg:w="1"/><text x="13.7852%" y="703.50"></text></g><g><title>tlb_finish_mmu (2 samples, 0.05%)</title><rect x="13.5352%" y="757" width="0.0459%" height="15" fill="rgb(228,75,8)" fg:x="590" fg:w="2"/><text x="13.7852%" y="767.50"></text></g><g><title>tlb_flush_mmu (2 samples, 0.05%)</title><rect x="13.5352%" y="741" width="0.0459%" height="15" fill="rgb(207,175,4)" fg:x="590" fg:w="2"/><text x="13.7852%" y="751.50"></text></g><g><title>free_pages_and_swap_cache (2 samples, 0.05%)</title><rect x="13.5352%" y="725" width="0.0459%" height="15" fill="rgb(205,108,24)" fg:x="590" fg:w="2"/><text x="13.7852%" y="735.50"></text></g><g><title>release_pages (2 samples, 0.05%)</title><rect x="13.5352%" y="709" width="0.0459%" height="15" fill="rgb(244,120,49)" fg:x="590" fg:w="2"/><text x="13.7852%" y="719.50"></text></g><g><title>free_unref_page_list (1 samples, 0.02%)</title><rect x="13.5582%" y="693" width="0.0229%" height="15" fill="rgb(223,47,38)" fg:x="591" fg:w="1"/><text x="13.8082%" y="703.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="13.5582%" y="677" width="0.0229%" height="15" fill="rgb(229,179,11)" fg:x="591" fg:w="1"/><text x="13.8082%" y="687.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.02%)</title><rect x="13.5582%" y="661" width="0.0229%" height="15" fill="rgb(231,122,1)" fg:x="591" fg:w="1"/><text x="13.8082%" y="671.50"></text></g><g><title>y2021::d05::main::run (519 samples, 11.91%)</title><rect x="1.7435%" y="1093" width="11.9064%" height="15" fill="rgb(245,119,9)" fg:x="76" fg:w="519"/><text x="1.9935%" y="1103.50">y2021::d05::main::..</text></g><g><title>y2021::d05::main::p02 (346 samples, 7.94%)</title><rect x="5.7123%" y="1077" width="7.9376%" height="15" fill="rgb(241,163,25)" fg:x="249" fg:w="346"/><text x="5.9623%" y="1087.50">y2021::d05:..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::types::point::Point,i32&gt;&gt; (8 samples, 0.18%)</title><rect x="13.4664%" y="1061" width="0.1835%" height="15" fill="rgb(217,214,3)" fg:x="587" fg:w="8"/><text x="13.7164%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::types::point::Point,i32,std::collections::hash::map::RandomState&gt;&gt; (8 samples, 0.18%)</title><rect x="13.4664%" y="1045" width="0.1835%" height="15" fill="rgb(240,86,28)" fg:x="587" fg:w="8"/><text x="13.7164%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::types::point::Point,i32)&gt;&gt; (8 samples, 0.18%)</title><rect x="13.4664%" y="1029" width="0.1835%" height="15" fill="rgb(215,47,9)" fg:x="587" fg:w="8"/><text x="13.7164%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.18%)</title><rect x="13.4664%" y="1013" width="0.1835%" height="15" fill="rgb(252,25,45)" fg:x="587" fg:w="8"/><text x="13.7164%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (8 samples, 0.18%)</title><rect x="13.4664%" y="997" width="0.1835%" height="15" fill="rgb(251,164,9)" fg:x="587" fg:w="8"/><text x="13.7164%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (8 samples, 0.18%)</title><rect x="13.4664%" y="981" width="0.1835%" height="15" fill="rgb(233,194,0)" fg:x="587" fg:w="8"/><text x="13.7164%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.18%)</title><rect x="13.4664%" y="965" width="0.1835%" height="15" fill="rgb(249,111,24)" fg:x="587" fg:w="8"/><text x="13.7164%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.18%)</title><rect x="13.4664%" y="949" width="0.1835%" height="15" fill="rgb(250,223,3)" fg:x="587" fg:w="8"/><text x="13.7164%" y="959.50"></text></g><g><title>_int_free (5 samples, 0.11%)</title><rect x="13.5352%" y="933" width="0.1147%" height="15" fill="rgb(236,178,37)" fg:x="590" fg:w="5"/><text x="13.7852%" y="943.50"></text></g><g><title>systrim (5 samples, 0.11%)</title><rect x="13.5352%" y="917" width="0.1147%" height="15" fill="rgb(241,158,50)" fg:x="590" fg:w="5"/><text x="13.7852%" y="927.50"></text></g><g><title>__GI___default_morecore (5 samples, 0.11%)</title><rect x="13.5352%" y="901" width="0.1147%" height="15" fill="rgb(213,121,41)" fg:x="590" fg:w="5"/><text x="13.7852%" y="911.50"></text></g><g><title>__GI___sbrk (5 samples, 0.11%)</title><rect x="13.5352%" y="885" width="0.1147%" height="15" fill="rgb(240,92,3)" fg:x="590" fg:w="5"/><text x="13.7852%" y="895.50"></text></g><g><title>__GI___sbrk (5 samples, 0.11%)</title><rect x="13.5352%" y="869" width="0.1147%" height="15" fill="rgb(205,123,3)" fg:x="590" fg:w="5"/><text x="13.7852%" y="879.50"></text></g><g><title>__brk (5 samples, 0.11%)</title><rect x="13.5352%" y="853" width="0.1147%" height="15" fill="rgb(205,97,47)" fg:x="590" fg:w="5"/><text x="13.7852%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.11%)</title><rect x="13.5352%" y="837" width="0.1147%" height="15" fill="rgb(247,152,14)" fg:x="590" fg:w="5"/><text x="13.7852%" y="847.50"></text></g><g><title>do_syscall_64 (5 samples, 0.11%)</title><rect x="13.5352%" y="821" width="0.1147%" height="15" fill="rgb(248,195,53)" fg:x="590" fg:w="5"/><text x="13.7852%" y="831.50"></text></g><g><title>__x64_sys_brk (5 samples, 0.11%)</title><rect x="13.5352%" y="805" width="0.1147%" height="15" fill="rgb(226,201,16)" fg:x="590" fg:w="5"/><text x="13.7852%" y="815.50"></text></g><g><title>__do_munmap (5 samples, 0.11%)</title><rect x="13.5352%" y="789" width="0.1147%" height="15" fill="rgb(205,98,0)" fg:x="590" fg:w="5"/><text x="13.7852%" y="799.50"></text></g><g><title>unmap_region (5 samples, 0.11%)</title><rect x="13.5352%" y="773" width="0.1147%" height="15" fill="rgb(214,191,48)" fg:x="590" fg:w="5"/><text x="13.7852%" y="783.50"></text></g><g><title>unmap_vmas (3 samples, 0.07%)</title><rect x="13.5811%" y="757" width="0.0688%" height="15" fill="rgb(237,112,39)" fg:x="592" fg:w="3"/><text x="13.8311%" y="767.50"></text></g><g><title>unmap_single_vma (3 samples, 0.07%)</title><rect x="13.5811%" y="741" width="0.0688%" height="15" fill="rgb(247,203,27)" fg:x="592" fg:w="3"/><text x="13.8311%" y="751.50"></text></g><g><title>unmap_page_range (3 samples, 0.07%)</title><rect x="13.5811%" y="725" width="0.0688%" height="15" fill="rgb(235,124,28)" fg:x="592" fg:w="3"/><text x="13.8311%" y="735.50"></text></g><g><title>zap_pte_range.isra.0 (3 samples, 0.07%)</title><rect x="13.5811%" y="709" width="0.0688%" height="15" fill="rgb(208,207,46)" fg:x="592" fg:w="3"/><text x="13.8311%" y="719.50"></text></g><g><title>page_remove_rmap (1 samples, 0.02%)</title><rect x="13.6270%" y="693" width="0.0229%" height="15" fill="rgb(234,176,4)" fg:x="594" fg:w="1"/><text x="13.8770%" y="703.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="13.6270%" y="677" width="0.0229%" height="15" fill="rgb(230,133,28)" fg:x="594" fg:w="1"/><text x="13.8770%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="13.6499%" y="789" width="0.0229%" height="15" fill="rgb(211,137,40)" fg:x="595" fg:w="1"/><text x="13.8999%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="13.6499%" y="773" width="0.0229%" height="15" fill="rgb(254,35,13)" fg:x="595" fg:w="1"/><text x="13.8999%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="13.6499%" y="757" width="0.0229%" height="15" fill="rgb(225,49,51)" fg:x="595" fg:w="1"/><text x="13.8999%" y="767.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (3 samples, 0.07%)</title><rect x="13.6729%" y="773" width="0.0688%" height="15" fill="rgb(251,10,15)" fg:x="596" fg:w="3"/><text x="13.9229%" y="783.50"></text></g><g><title>y2021::d07::main::p01 (8 samples, 0.18%)</title><rect x="13.6499%" y="1077" width="0.1835%" height="15" fill="rgb(228,207,15)" fg:x="595" fg:w="8"/><text x="13.8999%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.18%)</title><rect x="13.6499%" y="1061" width="0.1835%" height="15" fill="rgb(241,99,19)" fg:x="595" fg:w="8"/><text x="13.8999%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.18%)</title><rect x="13.6499%" y="1045" width="0.1835%" height="15" fill="rgb(207,104,49)" fg:x="595" fg:w="8"/><text x="13.8999%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.18%)</title><rect x="13.6499%" y="1029" width="0.1835%" height="15" fill="rgb(234,99,18)" fg:x="595" fg:w="8"/><text x="13.8999%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.18%)</title><rect x="13.6499%" y="1013" width="0.1835%" height="15" fill="rgb(213,191,49)" fg:x="595" fg:w="8"/><text x="13.8999%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.18%)</title><rect x="13.6499%" y="997" width="0.1835%" height="15" fill="rgb(210,226,19)" fg:x="595" fg:w="8"/><text x="13.8999%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.18%)</title><rect x="13.6499%" y="981" width="0.1835%" height="15" fill="rgb(229,97,18)" fg:x="595" fg:w="8"/><text x="13.8999%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.18%)</title><rect x="13.6499%" y="965" width="0.1835%" height="15" fill="rgb(211,167,15)" fg:x="595" fg:w="8"/><text x="13.8999%" y="975.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (8 samples, 0.18%)</title><rect x="13.6499%" y="949" width="0.1835%" height="15" fill="rgb(210,169,34)" fg:x="595" fg:w="8"/><text x="13.8999%" y="959.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (8 samples, 0.18%)</title><rect x="13.6499%" y="933" width="0.1835%" height="15" fill="rgb(241,121,31)" fg:x="595" fg:w="8"/><text x="13.8999%" y="943.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (8 samples, 0.18%)</title><rect x="13.6499%" y="917" width="0.1835%" height="15" fill="rgb(232,40,11)" fg:x="595" fg:w="8"/><text x="13.8999%" y="927.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (8 samples, 0.18%)</title><rect x="13.6499%" y="901" width="0.1835%" height="15" fill="rgb(205,86,26)" fg:x="595" fg:w="8"/><text x="13.8999%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 0.18%)</title><rect x="13.6499%" y="885" width="0.1835%" height="15" fill="rgb(231,126,28)" fg:x="595" fg:w="8"/><text x="13.8999%" y="895.50"></text></g><g><title>y2021::d07::main::p01::{{closure}} (8 samples, 0.18%)</title><rect x="13.6499%" y="869" width="0.1835%" height="15" fill="rgb(219,221,18)" fg:x="595" fg:w="8"/><text x="13.8999%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (8 samples, 0.18%)</title><rect x="13.6499%" y="853" width="0.1835%" height="15" fill="rgb(211,40,0)" fg:x="595" fg:w="8"/><text x="13.8999%" y="863.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (8 samples, 0.18%)</title><rect x="13.6499%" y="837" width="0.1835%" height="15" fill="rgb(239,85,43)" fg:x="595" fg:w="8"/><text x="13.8999%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.18%)</title><rect x="13.6499%" y="821" width="0.1835%" height="15" fill="rgb(231,55,21)" fg:x="595" fg:w="8"/><text x="13.8999%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.18%)</title><rect x="13.6499%" y="805" width="0.1835%" height="15" fill="rgb(225,184,43)" fg:x="595" fg:w="8"/><text x="13.8999%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.16%)</title><rect x="13.6729%" y="789" width="0.1606%" height="15" fill="rgb(251,158,41)" fg:x="596" fg:w="7"/><text x="13.9229%" y="799.50"></text></g><g><title>y2021::d07::main::p01::{{closure}}::{{closure}} (4 samples, 0.09%)</title><rect x="13.7417%" y="773" width="0.0918%" height="15" fill="rgb(234,159,37)" fg:x="599" fg:w="4"/><text x="13.9917%" y="783.50"></text></g><g><title>y2021::utils::math::abs_diff (4 samples, 0.09%)</title><rect x="13.7417%" y="757" width="0.0918%" height="15" fill="rgb(216,204,22)" fg:x="599" fg:w="4"/><text x="13.9917%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (4 samples, 0.09%)</title><rect x="13.7417%" y="741" width="0.0918%" height="15" fill="rgb(214,17,3)" fg:x="599" fg:w="4"/><text x="13.9917%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::gt (4 samples, 0.09%)</title><rect x="13.7417%" y="725" width="0.0918%" height="15" fill="rgb(212,111,17)" fg:x="599" fg:w="4"/><text x="13.9917%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="13.8334%" y="773" width="0.1147%" height="15" fill="rgb(221,157,24)" fg:x="603" fg:w="5"/><text x="14.0834%" y="783.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (3 samples, 0.07%)</title><rect x="13.8793%" y="757" width="0.0688%" height="15" fill="rgb(252,16,13)" fg:x="605" fg:w="3"/><text x="14.1293%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.07%)</title><rect x="13.8793%" y="741" width="0.0688%" height="15" fill="rgb(221,62,2)" fg:x="605" fg:w="3"/><text x="14.1293%" y="751.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (3 samples, 0.07%)</title><rect x="13.9482%" y="741" width="0.0688%" height="15" fill="rgb(247,87,22)" fg:x="608" fg:w="3"/><text x="14.1982%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.16%)</title><rect x="13.9482%" y="757" width="0.1606%" height="15" fill="rgb(215,73,9)" fg:x="608" fg:w="7"/><text x="14.1982%" y="767.50"></text></g><g><title>y2021::d07::main::p02::{{closure}}::{{closure}} (4 samples, 0.09%)</title><rect x="14.0170%" y="741" width="0.0918%" height="15" fill="rgb(207,175,33)" fg:x="611" fg:w="4"/><text x="14.2670%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.30%)</title><rect x="13.8334%" y="1061" width="0.2982%" height="15" fill="rgb(243,129,54)" fg:x="603" fg:w="13"/><text x="14.0834%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.30%)</title><rect x="13.8334%" y="1045" width="0.2982%" height="15" fill="rgb(227,119,45)" fg:x="603" fg:w="13"/><text x="14.0834%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.30%)</title><rect x="13.8334%" y="1029" width="0.2982%" height="15" fill="rgb(205,109,36)" fg:x="603" fg:w="13"/><text x="14.0834%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.30%)</title><rect x="13.8334%" y="1013" width="0.2982%" height="15" fill="rgb(205,6,39)" fg:x="603" fg:w="13"/><text x="14.0834%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 0.30%)</title><rect x="13.8334%" y="997" width="0.2982%" height="15" fill="rgb(221,32,16)" fg:x="603" fg:w="13"/><text x="14.0834%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 0.30%)</title><rect x="13.8334%" y="981" width="0.2982%" height="15" fill="rgb(228,144,50)" fg:x="603" fg:w="13"/><text x="14.0834%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.30%)</title><rect x="13.8334%" y="965" width="0.2982%" height="15" fill="rgb(229,201,53)" fg:x="603" fg:w="13"/><text x="14.0834%" y="975.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (13 samples, 0.30%)</title><rect x="13.8334%" y="949" width="0.2982%" height="15" fill="rgb(249,153,27)" fg:x="603" fg:w="13"/><text x="14.0834%" y="959.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (13 samples, 0.30%)</title><rect x="13.8334%" y="933" width="0.2982%" height="15" fill="rgb(227,106,25)" fg:x="603" fg:w="13"/><text x="14.0834%" y="943.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (13 samples, 0.30%)</title><rect x="13.8334%" y="917" width="0.2982%" height="15" fill="rgb(230,65,29)" fg:x="603" fg:w="13"/><text x="14.0834%" y="927.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (13 samples, 0.30%)</title><rect x="13.8334%" y="901" width="0.2982%" height="15" fill="rgb(221,57,46)" fg:x="603" fg:w="13"/><text x="14.0834%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (13 samples, 0.30%)</title><rect x="13.8334%" y="885" width="0.2982%" height="15" fill="rgb(229,161,17)" fg:x="603" fg:w="13"/><text x="14.0834%" y="895.50"></text></g><g><title>y2021::d07::main::p02::{{closure}} (13 samples, 0.30%)</title><rect x="13.8334%" y="869" width="0.2982%" height="15" fill="rgb(222,213,11)" fg:x="603" fg:w="13"/><text x="14.0834%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (13 samples, 0.30%)</title><rect x="13.8334%" y="853" width="0.2982%" height="15" fill="rgb(235,35,13)" fg:x="603" fg:w="13"/><text x="14.0834%" y="863.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (13 samples, 0.30%)</title><rect x="13.8334%" y="837" width="0.2982%" height="15" fill="rgb(233,158,34)" fg:x="603" fg:w="13"/><text x="14.0834%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.30%)</title><rect x="13.8334%" y="821" width="0.2982%" height="15" fill="rgb(215,151,48)" fg:x="603" fg:w="13"/><text x="14.0834%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.30%)</title><rect x="13.8334%" y="805" width="0.2982%" height="15" fill="rgb(229,84,14)" fg:x="603" fg:w="13"/><text x="14.0834%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 0.30%)</title><rect x="13.8334%" y="789" width="0.2982%" height="15" fill="rgb(229,68,14)" fg:x="603" fg:w="13"/><text x="14.0834%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 0.18%)</title><rect x="13.9482%" y="773" width="0.1835%" height="15" fill="rgb(243,106,26)" fg:x="608" fg:w="8"/><text x="14.1982%" y="783.50"></text></g><g><title>y2021::d07::main::p02::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="14.1087%" y="757" width="0.0229%" height="15" fill="rgb(206,45,38)" fg:x="615" fg:w="1"/><text x="14.3587%" y="767.50"></text></g><g><title>y2021::utils::math::abs_diff (1 samples, 0.02%)</title><rect x="14.1087%" y="741" width="0.0229%" height="15" fill="rgb(226,6,15)" fg:x="615" fg:w="1"/><text x="14.3587%" y="751.50"></text></g><g><title>y2021::d07::main::run (22 samples, 0.50%)</title><rect x="13.6499%" y="1093" width="0.5047%" height="15" fill="rgb(232,22,54)" fg:x="595" fg:w="22"/><text x="13.8999%" y="1103.50"></text></g><g><title>y2021::d07::main::p02 (14 samples, 0.32%)</title><rect x="13.8334%" y="1077" width="0.3212%" height="15" fill="rgb(229,222,32)" fg:x="603" fg:w="14"/><text x="14.0834%" y="1087.50"></text></g><g><title>y2021::utils::file::csv_to_vec (1 samples, 0.02%)</title><rect x="14.1317%" y="1061" width="0.0229%" height="15" fill="rgb(228,62,29)" fg:x="616" fg:w="1"/><text x="14.3817%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="14.1317%" y="1045" width="0.0229%" height="15" fill="rgb(251,103,34)" fg:x="616" fg:w="1"/><text x="14.3817%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.1317%" y="1029" width="0.0229%" height="15" fill="rgb(233,12,30)" fg:x="616" fg:w="1"/><text x="14.3817%" y="1039.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.02%)</title><rect x="14.1317%" y="1013" width="0.0229%" height="15" fill="rgb(238,52,0)" fg:x="616" fg:w="1"/><text x="14.3817%" y="1023.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.02%)</title><rect x="14.1317%" y="997" width="0.0229%" height="15" fill="rgb(223,98,5)" fg:x="616" fg:w="1"/><text x="14.3817%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="14.1317%" y="981" width="0.0229%" height="15" fill="rgb(228,75,37)" fg:x="616" fg:w="1"/><text x="14.3817%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.1317%" y="965" width="0.0229%" height="15" fill="rgb(205,115,49)" fg:x="616" fg:w="1"/><text x="14.3817%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.1317%" y="949" width="0.0229%" height="15" fill="rgb(250,154,43)" fg:x="616" fg:w="1"/><text x="14.3817%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.1317%" y="933" width="0.0229%" height="15" fill="rgb(226,43,29)" fg:x="616" fg:w="1"/><text x="14.3817%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="14.1317%" y="917" width="0.0229%" height="15" fill="rgb(249,228,39)" fg:x="616" fg:w="1"/><text x="14.3817%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="14.1317%" y="901" width="0.0229%" height="15" fill="rgb(216,79,43)" fg:x="616" fg:w="1"/><text x="14.3817%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.1317%" y="885" width="0.0229%" height="15" fill="rgb(228,95,12)" fg:x="616" fg:w="1"/><text x="14.3817%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.02%)</title><rect x="14.1317%" y="869" width="0.0229%" height="15" fill="rgb(249,221,15)" fg:x="616" fg:w="1"/><text x="14.3817%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="14.1317%" y="853" width="0.0229%" height="15" fill="rgb(233,34,13)" fg:x="616" fg:w="1"/><text x="14.3817%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="14.1317%" y="837" width="0.0229%" height="15" fill="rgb(214,103,39)" fg:x="616" fg:w="1"/><text x="14.3817%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="14.1317%" y="821" width="0.0229%" height="15" fill="rgb(251,126,39)" fg:x="616" fg:w="1"/><text x="14.3817%" y="831.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.1317%" y="805" width="0.0229%" height="15" fill="rgb(214,216,36)" fg:x="616" fg:w="1"/><text x="14.3817%" y="815.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.02%)</title><rect x="14.1317%" y="789" width="0.0229%" height="15" fill="rgb(220,221,8)" fg:x="616" fg:w="1"/><text x="14.3817%" y="799.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.02%)</title><rect x="14.1317%" y="773" width="0.0229%" height="15" fill="rgb(240,216,3)" fg:x="616" fg:w="1"/><text x="14.3817%" y="783.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.02%)</title><rect x="14.1317%" y="757" width="0.0229%" height="15" fill="rgb(232,218,17)" fg:x="616" fg:w="1"/><text x="14.3817%" y="767.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.1546%" y="821" width="0.0229%" height="15" fill="rgb(229,163,45)" fg:x="617" fg:w="1"/><text x="14.4046%" y="831.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.02%)</title><rect x="14.1546%" y="805" width="0.0229%" height="15" fill="rgb(231,110,42)" fg:x="617" fg:w="1"/><text x="14.4046%" y="815.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.02%)</title><rect x="14.1546%" y="789" width="0.0229%" height="15" fill="rgb(208,170,48)" fg:x="617" fg:w="1"/><text x="14.4046%" y="799.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 0.02%)</title><rect x="14.1546%" y="773" width="0.0229%" height="15" fill="rgb(239,116,25)" fg:x="617" fg:w="1"/><text x="14.4046%" y="783.50"></text></g><g><title>std::io::read_until (1 samples, 0.02%)</title><rect x="14.1546%" y="757" width="0.0229%" height="15" fill="rgb(219,200,50)" fg:x="617" fg:w="1"/><text x="14.4046%" y="767.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.02%)</title><rect x="14.1546%" y="741" width="0.0229%" height="15" fill="rgb(245,200,0)" fg:x="617" fg:w="1"/><text x="14.4046%" y="751.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.02%)</title><rect x="14.1546%" y="725" width="0.0229%" height="15" fill="rgb(245,119,33)" fg:x="617" fg:w="1"/><text x="14.4046%" y="735.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.02%)</title><rect x="14.1546%" y="709" width="0.0229%" height="15" fill="rgb(231,125,12)" fg:x="617" fg:w="1"/><text x="14.4046%" y="719.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.02%)</title><rect x="14.1546%" y="693" width="0.0229%" height="15" fill="rgb(216,96,41)" fg:x="617" fg:w="1"/><text x="14.4046%" y="703.50"></text></g><g><title>__libc_read (1 samples, 0.02%)</title><rect x="14.1546%" y="677" width="0.0229%" height="15" fill="rgb(248,43,45)" fg:x="617" fg:w="1"/><text x="14.4046%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="14.1546%" y="661" width="0.0229%" height="15" fill="rgb(217,222,7)" fg:x="617" fg:w="1"/><text x="14.4046%" y="671.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="14.1546%" y="645" width="0.0229%" height="15" fill="rgb(233,28,6)" fg:x="617" fg:w="1"/><text x="14.4046%" y="655.50"></text></g><g><title>__x64_sys_read (1 samples, 0.02%)</title><rect x="14.1546%" y="629" width="0.0229%" height="15" fill="rgb(231,218,15)" fg:x="617" fg:w="1"/><text x="14.4046%" y="639.50"></text></g><g><title>ksys_read (1 samples, 0.02%)</title><rect x="14.1546%" y="613" width="0.0229%" height="15" fill="rgb(226,171,48)" fg:x="617" fg:w="1"/><text x="14.4046%" y="623.50"></text></g><g><title>vfs_read (1 samples, 0.02%)</title><rect x="14.1546%" y="597" width="0.0229%" height="15" fill="rgb(235,201,9)" fg:x="617" fg:w="1"/><text x="14.4046%" y="607.50"></text></g><g><title>new_sync_read (1 samples, 0.02%)</title><rect x="14.1546%" y="581" width="0.0229%" height="15" fill="rgb(217,80,15)" fg:x="617" fg:w="1"/><text x="14.4046%" y="591.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="14.1546%" y="565" width="0.0229%" height="15" fill="rgb(219,152,8)" fg:x="617" fg:w="1"/><text x="14.4046%" y="575.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="14.1546%" y="549" width="0.0229%" height="15" fill="rgb(243,107,38)" fg:x="617" fg:w="1"/><text x="14.4046%" y="559.50"></text></g><g><title>generic_file_buffered_read (1 samples, 0.02%)</title><rect x="14.1546%" y="533" width="0.0229%" height="15" fill="rgb(231,17,5)" fg:x="617" fg:w="1"/><text x="14.4046%" y="543.50"></text></g><g><title>generic_file_buffered_read_get_pages (1 samples, 0.02%)</title><rect x="14.1546%" y="517" width="0.0229%" height="15" fill="rgb(209,25,54)" fg:x="617" fg:w="1"/><text x="14.4046%" y="527.50"></text></g><g><title>page_cache_sync_ra (1 samples, 0.02%)</title><rect x="14.1546%" y="501" width="0.0229%" height="15" fill="rgb(219,0,2)" fg:x="617" fg:w="1"/><text x="14.4046%" y="511.50"></text></g><g><title>ondemand_readahead (1 samples, 0.02%)</title><rect x="14.1546%" y="485" width="0.0229%" height="15" fill="rgb(246,9,5)" fg:x="617" fg:w="1"/><text x="14.4046%" y="495.50"></text></g><g><title>y2021::d08::main::p01 (3 samples, 0.07%)</title><rect x="14.1546%" y="1077" width="0.0688%" height="15" fill="rgb(226,159,4)" fg:x="617" fg:w="3"/><text x="14.4046%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.07%)</title><rect x="14.1546%" y="1061" width="0.0688%" height="15" fill="rgb(219,175,34)" fg:x="617" fg:w="3"/><text x="14.4046%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="14.1546%" y="1045" width="0.0688%" height="15" fill="rgb(236,10,46)" fg:x="617" fg:w="3"/><text x="14.4046%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="14.1546%" y="1029" width="0.0688%" height="15" fill="rgb(240,211,16)" fg:x="617" fg:w="3"/><text x="14.4046%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="14.1546%" y="1013" width="0.0688%" height="15" fill="rgb(205,3,43)" fg:x="617" fg:w="3"/><text x="14.4046%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.07%)</title><rect x="14.1546%" y="997" width="0.0688%" height="15" fill="rgb(245,7,22)" fg:x="617" fg:w="3"/><text x="14.4046%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.07%)</title><rect x="14.1546%" y="981" width="0.0688%" height="15" fill="rgb(239,132,32)" fg:x="617" fg:w="3"/><text x="14.4046%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="14.1546%" y="965" width="0.0688%" height="15" fill="rgb(228,202,34)" fg:x="617" fg:w="3"/><text x="14.4046%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.07%)</title><rect x="14.1546%" y="949" width="0.0688%" height="15" fill="rgb(254,200,22)" fg:x="617" fg:w="3"/><text x="14.4046%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.07%)</title><rect x="14.1546%" y="933" width="0.0688%" height="15" fill="rgb(219,10,39)" fg:x="617" fg:w="3"/><text x="14.4046%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.07%)</title><rect x="14.1546%" y="917" width="0.0688%" height="15" fill="rgb(226,210,39)" fg:x="617" fg:w="3"/><text x="14.4046%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.07%)</title><rect x="14.1546%" y="901" width="0.0688%" height="15" fill="rgb(208,219,16)" fg:x="617" fg:w="3"/><text x="14.4046%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (3 samples, 0.07%)</title><rect x="14.1546%" y="885" width="0.0688%" height="15" fill="rgb(216,158,51)" fg:x="617" fg:w="3"/><text x="14.4046%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.07%)</title><rect x="14.1546%" y="869" width="0.0688%" height="15" fill="rgb(233,14,44)" fg:x="617" fg:w="3"/><text x="14.4046%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.07%)</title><rect x="14.1546%" y="853" width="0.0688%" height="15" fill="rgb(237,97,39)" fg:x="617" fg:w="3"/><text x="14.4046%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="14.1546%" y="837" width="0.0688%" height="15" fill="rgb(218,198,43)" fg:x="617" fg:w="3"/><text x="14.4046%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.05%)</title><rect x="14.1776%" y="821" width="0.0459%" height="15" fill="rgb(231,104,20)" fg:x="618" fg:w="2"/><text x="14.4276%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.05%)</title><rect x="14.1776%" y="805" width="0.0459%" height="15" fill="rgb(254,36,13)" fg:x="618" fg:w="2"/><text x="14.4276%" y="815.50"></text></g><g><title>y2021::d08::main::p01::{{closure}} (2 samples, 0.05%)</title><rect x="14.1776%" y="789" width="0.0459%" height="15" fill="rgb(248,14,50)" fg:x="618" fg:w="2"/><text x="14.4276%" y="799.50"></text></g><g><title>y2021::d08::main::parse_line (2 samples, 0.05%)</title><rect x="14.1776%" y="773" width="0.0459%" height="15" fill="rgb(217,107,29)" fg:x="618" fg:w="2"/><text x="14.4276%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="14.1776%" y="757" width="0.0459%" height="15" fill="rgb(251,169,33)" fg:x="618" fg:w="2"/><text x="14.4276%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.1776%" y="741" width="0.0459%" height="15" fill="rgb(217,108,32)" fg:x="618" fg:w="2"/><text x="14.4276%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.1776%" y="725" width="0.0459%" height="15" fill="rgb(219,66,42)" fg:x="618" fg:w="2"/><text x="14.4276%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.2005%" y="709" width="0.0229%" height="15" fill="rgb(206,180,7)" fg:x="619" fg:w="1"/><text x="14.4505%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="14.2005%" y="693" width="0.0229%" height="15" fill="rgb(208,226,31)" fg:x="619" fg:w="1"/><text x="14.4505%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="14.2005%" y="677" width="0.0229%" height="15" fill="rgb(218,26,49)" fg:x="619" fg:w="1"/><text x="14.4505%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.2005%" y="661" width="0.0229%" height="15" fill="rgb(233,197,48)" fg:x="619" fg:w="1"/><text x="14.4505%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.2005%" y="645" width="0.0229%" height="15" fill="rgb(252,181,51)" fg:x="619" fg:w="1"/><text x="14.4505%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="14.2005%" y="629" width="0.0229%" height="15" fill="rgb(253,90,19)" fg:x="619" fg:w="1"/><text x="14.4505%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="14.2005%" y="613" width="0.0229%" height="15" fill="rgb(215,171,30)" fg:x="619" fg:w="1"/><text x="14.4505%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="14.2005%" y="597" width="0.0229%" height="15" fill="rgb(214,222,9)" fg:x="619" fg:w="1"/><text x="14.4505%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="14.2005%" y="581" width="0.0229%" height="15" fill="rgb(223,3,22)" fg:x="619" fg:w="1"/><text x="14.4505%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="14.2005%" y="565" width="0.0229%" height="15" fill="rgb(225,196,46)" fg:x="619" fg:w="1"/><text x="14.4505%" y="575.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="14.2005%" y="549" width="0.0229%" height="15" fill="rgb(209,110,37)" fg:x="619" fg:w="1"/><text x="14.4505%" y="559.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="14.2005%" y="533" width="0.0229%" height="15" fill="rgb(249,89,12)" fg:x="619" fg:w="1"/><text x="14.4505%" y="543.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="14.2005%" y="517" width="0.0229%" height="15" fill="rgb(226,27,33)" fg:x="619" fg:w="1"/><text x="14.4505%" y="527.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="14.2005%" y="501" width="0.0229%" height="15" fill="rgb(213,82,22)" fg:x="619" fg:w="1"/><text x="14.4505%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="14.2234%" y="709" width="0.0229%" height="15" fill="rgb(248,140,0)" fg:x="620" fg:w="1"/><text x="14.4734%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="14.2234%" y="693" width="0.0229%" height="15" fill="rgb(228,106,3)" fg:x="620" fg:w="1"/><text x="14.4734%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.2234%" y="677" width="0.0229%" height="15" fill="rgb(209,23,37)" fg:x="620" fg:w="1"/><text x="14.4734%" y="687.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.2234%" y="661" width="0.0229%" height="15" fill="rgb(241,93,50)" fg:x="620" fg:w="1"/><text x="14.4734%" y="671.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.02%)</title><rect x="14.2234%" y="645" width="0.0229%" height="15" fill="rgb(253,46,43)" fg:x="620" fg:w="1"/><text x="14.4734%" y="655.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.02%)</title><rect x="14.2234%" y="629" width="0.0229%" height="15" fill="rgb(226,206,43)" fg:x="620" fg:w="1"/><text x="14.4734%" y="639.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.02%)</title><rect x="14.2234%" y="613" width="0.0229%" height="15" fill="rgb(217,54,7)" fg:x="620" fg:w="1"/><text x="14.4734%" y="623.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="14.2234%" y="597" width="0.0229%" height="15" fill="rgb(223,5,52)" fg:x="620" fg:w="1"/><text x="14.4734%" y="607.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="14.2234%" y="581" width="0.0229%" height="15" fill="rgb(206,52,46)" fg:x="620" fg:w="1"/><text x="14.4734%" y="591.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="14.2234%" y="565" width="0.0229%" height="15" fill="rgb(253,136,11)" fg:x="620" fg:w="1"/><text x="14.4734%" y="575.50"></text></g><g><title>y2021::d08::main::parse_line (2 samples, 0.05%)</title><rect x="14.2234%" y="789" width="0.0459%" height="15" fill="rgb(208,106,33)" fg:x="620" fg:w="2"/><text x="14.4734%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="14.2234%" y="773" width="0.0459%" height="15" fill="rgb(206,54,4)" fg:x="620" fg:w="2"/><text x="14.4734%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.2234%" y="757" width="0.0459%" height="15" fill="rgb(213,3,15)" fg:x="620" fg:w="2"/><text x="14.4734%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.2234%" y="741" width="0.0459%" height="15" fill="rgb(252,211,39)" fg:x="620" fg:w="2"/><text x="14.4734%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="14.2234%" y="725" width="0.0459%" height="15" fill="rgb(223,6,36)" fg:x="620" fg:w="2"/><text x="14.4734%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.2464%" y="709" width="0.0229%" height="15" fill="rgb(252,169,45)" fg:x="621" fg:w="1"/><text x="14.4964%" y="719.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.2464%" y="693" width="0.0229%" height="15" fill="rgb(212,48,26)" fg:x="621" fg:w="1"/><text x="14.4964%" y="703.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.02%)</title><rect x="14.2464%" y="677" width="0.0229%" height="15" fill="rgb(251,102,48)" fg:x="621" fg:w="1"/><text x="14.4964%" y="687.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.02%)</title><rect x="14.2464%" y="661" width="0.0229%" height="15" fill="rgb(243,208,16)" fg:x="621" fg:w="1"/><text x="14.4964%" y="671.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.02%)</title><rect x="14.2464%" y="645" width="0.0229%" height="15" fill="rgb(219,96,24)" fg:x="621" fg:w="1"/><text x="14.4964%" y="655.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.02%)</title><rect x="14.2464%" y="629" width="0.0229%" height="15" fill="rgb(219,33,29)" fg:x="621" fg:w="1"/><text x="14.4964%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="14.2693%" y="629" width="0.0229%" height="15" fill="rgb(223,176,5)" fg:x="622" fg:w="1"/><text x="14.5193%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="14.2693%" y="613" width="0.0229%" height="15" fill="rgb(228,140,14)" fg:x="622" fg:w="1"/><text x="14.5193%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1 samples, 0.02%)</title><rect x="14.2693%" y="597" width="0.0229%" height="15" fill="rgb(217,179,31)" fg:x="622" fg:w="1"/><text x="14.5193%" y="607.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (1 samples, 0.02%)</title><rect x="14.2693%" y="581" width="0.0229%" height="15" fill="rgb(230,9,30)" fg:x="622" fg:w="1"/><text x="14.5193%" y="591.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.2693%" y="565" width="0.0229%" height="15" fill="rgb(230,136,20)" fg:x="622" fg:w="1"/><text x="14.5193%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.2693%" y="549" width="0.0229%" height="15" fill="rgb(215,210,22)" fg:x="622" fg:w="1"/><text x="14.5193%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.2693%" y="533" width="0.0229%" height="15" fill="rgb(218,43,5)" fg:x="622" fg:w="1"/><text x="14.5193%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.2693%" y="517" width="0.0229%" height="15" fill="rgb(216,11,5)" fg:x="622" fg:w="1"/><text x="14.5193%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="14.2693%" y="501" width="0.0229%" height="15" fill="rgb(209,82,29)" fg:x="622" fg:w="1"/><text x="14.5193%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="14.2693%" y="485" width="0.0229%" height="15" fill="rgb(244,115,12)" fg:x="622" fg:w="1"/><text x="14.5193%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="14.2693%" y="469" width="0.0229%" height="15" fill="rgb(222,82,18)" fg:x="622" fg:w="1"/><text x="14.5193%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="14.2693%" y="453" width="0.0229%" height="15" fill="rgb(249,227,8)" fg:x="622" fg:w="1"/><text x="14.5193%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="14.2693%" y="437" width="0.0229%" height="15" fill="rgb(253,141,45)" fg:x="622" fg:w="1"/><text x="14.5193%" y="447.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="14.2693%" y="421" width="0.0229%" height="15" fill="rgb(234,184,4)" fg:x="622" fg:w="1"/><text x="14.5193%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (2 samples, 0.05%)</title><rect x="14.2693%" y="709" width="0.0459%" height="15" fill="rgb(218,194,23)" fg:x="622" fg:w="2"/><text x="14.5193%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (2 samples, 0.05%)</title><rect x="14.2693%" y="693" width="0.0459%" height="15" fill="rgb(235,66,41)" fg:x="622" fg:w="2"/><text x="14.5193%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (2 samples, 0.05%)</title><rect x="14.2693%" y="677" width="0.0459%" height="15" fill="rgb(245,217,1)" fg:x="622" fg:w="2"/><text x="14.5193%" y="687.50"></text></g><g><title>core::cmp::PartialEq::ne (2 samples, 0.05%)</title><rect x="14.2693%" y="661" width="0.0459%" height="15" fill="rgb(229,91,1)" fg:x="622" fg:w="2"/><text x="14.5193%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="14.2693%" y="645" width="0.0459%" height="15" fill="rgb(207,101,30)" fg:x="622" fg:w="2"/><text x="14.5193%" y="655.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (1 samples, 0.02%)</title><rect x="14.2923%" y="629" width="0.0229%" height="15" fill="rgb(223,82,49)" fg:x="623" fg:w="1"/><text x="14.5423%" y="639.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (1 samples, 0.02%)</title><rect x="14.2923%" y="613" width="0.0229%" height="15" fill="rgb(218,167,17)" fg:x="623" fg:w="1"/><text x="14.5423%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="14.2693%" y="773" width="0.0688%" height="15" fill="rgb(208,103,14)" fg:x="622" fg:w="3"/><text x="14.5193%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (3 samples, 0.07%)</title><rect x="14.2693%" y="757" width="0.0688%" height="15" fill="rgb(238,20,8)" fg:x="622" fg:w="3"/><text x="14.5193%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.07%)</title><rect x="14.2693%" y="741" width="0.0688%" height="15" fill="rgb(218,80,54)" fg:x="622" fg:w="3"/><text x="14.5193%" y="751.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (3 samples, 0.07%)</title><rect x="14.2693%" y="725" width="0.0688%" height="15" fill="rgb(240,144,17)" fg:x="622" fg:w="3"/><text x="14.5193%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.02%)</title><rect x="14.3152%" y="709" width="0.0229%" height="15" fill="rgb(245,27,50)" fg:x="624" fg:w="1"/><text x="14.5652%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="14.3152%" y="693" width="0.0229%" height="15" fill="rgb(251,51,7)" fg:x="624" fg:w="1"/><text x="14.5652%" y="703.50"></text></g><g><title>&lt;std::collections::hash::set::Difference&lt;T,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.3152%" y="677" width="0.0229%" height="15" fill="rgb(245,217,29)" fg:x="624" fg:w="1"/><text x="14.5652%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.3152%" y="661" width="0.0229%" height="15" fill="rgb(221,176,29)" fg:x="624" fg:w="1"/><text x="14.5652%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.3152%" y="645" width="0.0229%" height="15" fill="rgb(212,180,24)" fg:x="624" fg:w="1"/><text x="14.5652%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.3152%" y="629" width="0.0229%" height="15" fill="rgb(254,24,2)" fg:x="624" fg:w="1"/><text x="14.5652%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.3152%" y="613" width="0.0229%" height="15" fill="rgb(230,100,2)" fg:x="624" fg:w="1"/><text x="14.5652%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.3152%" y="597" width="0.0229%" height="15" fill="rgb(219,142,25)" fg:x="624" fg:w="1"/><text x="14.5652%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="14.3152%" y="581" width="0.0229%" height="15" fill="rgb(240,73,43)" fg:x="624" fg:w="1"/><text x="14.5652%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="14.3152%" y="565" width="0.0229%" height="15" fill="rgb(214,114,15)" fg:x="624" fg:w="1"/><text x="14.5652%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="14.3152%" y="549" width="0.0229%" height="15" fill="rgb(207,130,4)" fg:x="624" fg:w="1"/><text x="14.5652%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="14.3152%" y="533" width="0.0229%" height="15" fill="rgb(221,25,40)" fg:x="624" fg:w="1"/><text x="14.5652%" y="543.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.02%)</title><rect x="14.3382%" y="485" width="0.0229%" height="15" fill="rgb(241,184,7)" fg:x="625" fg:w="1"/><text x="14.5882%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.3382%" y="469" width="0.0229%" height="15" fill="rgb(235,159,4)" fg:x="625" fg:w="1"/><text x="14.5882%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.3382%" y="453" width="0.0229%" height="15" fill="rgb(214,87,48)" fg:x="625" fg:w="1"/><text x="14.5882%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.3382%" y="437" width="0.0229%" height="15" fill="rgb(246,198,24)" fg:x="625" fg:w="1"/><text x="14.5882%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.3382%" y="421" width="0.0229%" height="15" fill="rgb(209,66,40)" fg:x="625" fg:w="1"/><text x="14.5882%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="14.3382%" y="533" width="0.0459%" height="15" fill="rgb(233,147,39)" fg:x="625" fg:w="2"/><text x="14.5882%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.05%)</title><rect x="14.3382%" y="517" width="0.0459%" height="15" fill="rgb(231,145,52)" fg:x="625" fg:w="2"/><text x="14.5882%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.05%)</title><rect x="14.3382%" y="501" width="0.0459%" height="15" fill="rgb(206,20,26)" fg:x="625" fg:w="2"/><text x="14.5882%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.02%)</title><rect x="14.3611%" y="485" width="0.0229%" height="15" fill="rgb(238,220,4)" fg:x="626" fg:w="1"/><text x="14.6111%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.02%)</title><rect x="14.3611%" y="469" width="0.0229%" height="15" fill="rgb(252,195,42)" fg:x="626" fg:w="1"/><text x="14.6111%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.02%)</title><rect x="14.3611%" y="453" width="0.0229%" height="15" fill="rgb(209,10,6)" fg:x="626" fg:w="1"/><text x="14.6111%" y="463.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.02%)</title><rect x="14.3611%" y="437" width="0.0229%" height="15" fill="rgb(229,3,52)" fg:x="626" fg:w="1"/><text x="14.6111%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="14.3611%" y="421" width="0.0229%" height="15" fill="rgb(253,49,37)" fg:x="626" fg:w="1"/><text x="14.6111%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="14.3611%" y="405" width="0.0229%" height="15" fill="rgb(240,103,49)" fg:x="626" fg:w="1"/><text x="14.6111%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="14.3611%" y="389" width="0.0229%" height="15" fill="rgb(250,182,30)" fg:x="626" fg:w="1"/><text x="14.6111%" y="399.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="14.3611%" y="373" width="0.0229%" height="15" fill="rgb(248,8,30)" fg:x="626" fg:w="1"/><text x="14.6111%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.07%)</title><rect x="14.3382%" y="773" width="0.0688%" height="15" fill="rgb(237,120,30)" fg:x="625" fg:w="3"/><text x="14.5882%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="14.3382%" y="757" width="0.0688%" height="15" fill="rgb(221,146,34)" fg:x="625" fg:w="3"/><text x="14.5882%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="14.3382%" y="741" width="0.0688%" height="15" fill="rgb(242,55,13)" fg:x="625" fg:w="3"/><text x="14.5882%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="14.3382%" y="725" width="0.0688%" height="15" fill="rgb(242,112,31)" fg:x="625" fg:w="3"/><text x="14.5882%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.07%)</title><rect x="14.3382%" y="709" width="0.0688%" height="15" fill="rgb(249,192,27)" fg:x="625" fg:w="3"/><text x="14.5882%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.07%)</title><rect x="14.3382%" y="693" width="0.0688%" height="15" fill="rgb(208,204,44)" fg:x="625" fg:w="3"/><text x="14.5882%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="14.3382%" y="677" width="0.0688%" height="15" fill="rgb(208,93,54)" fg:x="625" fg:w="3"/><text x="14.5882%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.07%)</title><rect x="14.3382%" y="661" width="0.0688%" height="15" fill="rgb(242,1,31)" fg:x="625" fg:w="3"/><text x="14.5882%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.07%)</title><rect x="14.3382%" y="645" width="0.0688%" height="15" fill="rgb(241,83,25)" fg:x="625" fg:w="3"/><text x="14.5882%" y="655.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (3 samples, 0.07%)</title><rect x="14.3382%" y="629" width="0.0688%" height="15" fill="rgb(205,169,50)" fg:x="625" fg:w="3"/><text x="14.5882%" y="639.50"></text></g><g><title>y2021::d08::main::set_from_iter (3 samples, 0.07%)</title><rect x="14.3382%" y="613" width="0.0688%" height="15" fill="rgb(239,186,37)" fg:x="625" fg:w="3"/><text x="14.5882%" y="623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (3 samples, 0.07%)</title><rect x="14.3382%" y="597" width="0.0688%" height="15" fill="rgb(205,221,10)" fg:x="625" fg:w="3"/><text x="14.5882%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (3 samples, 0.07%)</title><rect x="14.3382%" y="581" width="0.0688%" height="15" fill="rgb(218,196,15)" fg:x="625" fg:w="3"/><text x="14.5882%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.07%)</title><rect x="14.3382%" y="565" width="0.0688%" height="15" fill="rgb(218,196,35)" fg:x="625" fg:w="3"/><text x="14.5882%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.07%)</title><rect x="14.3382%" y="549" width="0.0688%" height="15" fill="rgb(233,63,24)" fg:x="625" fg:w="3"/><text x="14.5882%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="14.3840%" y="533" width="0.0229%" height="15" fill="rgb(225,8,4)" fg:x="627" fg:w="1"/><text x="14.6340%" y="543.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.02%)</title><rect x="14.3840%" y="517" width="0.0229%" height="15" fill="rgb(234,105,35)" fg:x="627" fg:w="1"/><text x="14.6340%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.4070%" y="437" width="0.0229%" height="15" fill="rgb(236,21,32)" fg:x="628" fg:w="1"/><text x="14.6570%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (1 samples, 0.02%)</title><rect x="14.4070%" y="421" width="0.0229%" height="15" fill="rgb(228,109,6)" fg:x="628" fg:w="1"/><text x="14.6570%" y="431.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.02%)</title><rect x="14.4070%" y="405" width="0.0229%" height="15" fill="rgb(229,215,31)" fg:x="628" fg:w="1"/><text x="14.6570%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.05%)</title><rect x="14.4070%" y="645" width="0.0459%" height="15" fill="rgb(221,52,54)" fg:x="628" fg:w="2"/><text x="14.6570%" y="655.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (2 samples, 0.05%)</title><rect x="14.4070%" y="629" width="0.0459%" height="15" fill="rgb(252,129,43)" fg:x="628" fg:w="2"/><text x="14.6570%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (2 samples, 0.05%)</title><rect x="14.4070%" y="613" width="0.0459%" height="15" fill="rgb(248,183,27)" fg:x="628" fg:w="2"/><text x="14.6570%" y="623.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}}::{{closure}} (2 samples, 0.05%)</title><rect x="14.4070%" y="597" width="0.0459%" height="15" fill="rgb(250,0,22)" fg:x="628" fg:w="2"/><text x="14.6570%" y="607.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="14.4070%" y="581" width="0.0459%" height="15" fill="rgb(213,166,10)" fg:x="628" fg:w="2"/><text x="14.6570%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.05%)</title><rect x="14.4070%" y="565" width="0.0459%" height="15" fill="rgb(207,163,36)" fg:x="628" fg:w="2"/><text x="14.6570%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="14.4070%" y="549" width="0.0459%" height="15" fill="rgb(208,122,22)" fg:x="628" fg:w="2"/><text x="14.6570%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (2 samples, 0.05%)</title><rect x="14.4070%" y="533" width="0.0459%" height="15" fill="rgb(207,104,49)" fg:x="628" fg:w="2"/><text x="14.6570%" y="543.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (2 samples, 0.05%)</title><rect x="14.4070%" y="517" width="0.0459%" height="15" fill="rgb(248,211,50)" fg:x="628" fg:w="2"/><text x="14.6570%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.05%)</title><rect x="14.4070%" y="501" width="0.0459%" height="15" fill="rgb(217,13,45)" fg:x="628" fg:w="2"/><text x="14.6570%" y="511.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.05%)</title><rect x="14.4070%" y="485" width="0.0459%" height="15" fill="rgb(211,216,49)" fg:x="628" fg:w="2"/><text x="14.6570%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.05%)</title><rect x="14.4070%" y="469" width="0.0459%" height="15" fill="rgb(221,58,53)" fg:x="628" fg:w="2"/><text x="14.6570%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.05%)</title><rect x="14.4070%" y="453" width="0.0459%" height="15" fill="rgb(220,112,41)" fg:x="628" fg:w="2"/><text x="14.6570%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="14.4299%" y="437" width="0.0229%" height="15" fill="rgb(236,38,28)" fg:x="629" fg:w="1"/><text x="14.6799%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="14.4299%" y="421" width="0.0229%" height="15" fill="rgb(227,195,22)" fg:x="629" fg:w="1"/><text x="14.6799%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="14.4299%" y="405" width="0.0229%" height="15" fill="rgb(214,55,33)" fg:x="629" fg:w="1"/><text x="14.6799%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="14.4299%" y="389" width="0.0229%" height="15" fill="rgb(248,80,13)" fg:x="629" fg:w="1"/><text x="14.6799%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="14.4299%" y="373" width="0.0229%" height="15" fill="rgb(238,52,6)" fg:x="629" fg:w="1"/><text x="14.6799%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="14.4299%" y="357" width="0.0229%" height="15" fill="rgb(224,198,47)" fg:x="629" fg:w="1"/><text x="14.6799%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="14.4299%" y="341" width="0.0229%" height="15" fill="rgb(233,171,20)" fg:x="629" fg:w="1"/><text x="14.6799%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="14.4299%" y="325" width="0.0229%" height="15" fill="rgb(241,30,25)" fg:x="629" fg:w="1"/><text x="14.6799%" y="335.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="14.4299%" y="309" width="0.0229%" height="15" fill="rgb(207,171,38)" fg:x="629" fg:w="1"/><text x="14.6799%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4 samples, 0.09%)</title><rect x="14.4070%" y="773" width="0.0918%" height="15" fill="rgb(234,70,1)" fg:x="628" fg:w="4"/><text x="14.6570%" y="783.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4 samples, 0.09%)</title><rect x="14.4070%" y="757" width="0.0918%" height="15" fill="rgb(232,178,18)" fg:x="628" fg:w="4"/><text x="14.6570%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.09%)</title><rect x="14.4070%" y="741" width="0.0918%" height="15" fill="rgb(241,78,40)" fg:x="628" fg:w="4"/><text x="14.6570%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.09%)</title><rect x="14.4070%" y="725" width="0.0918%" height="15" fill="rgb(222,35,25)" fg:x="628" fg:w="4"/><text x="14.6570%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.09%)</title><rect x="14.4070%" y="709" width="0.0918%" height="15" fill="rgb(207,92,16)" fg:x="628" fg:w="4"/><text x="14.6570%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.09%)</title><rect x="14.4070%" y="693" width="0.0918%" height="15" fill="rgb(216,59,51)" fg:x="628" fg:w="4"/><text x="14.6570%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.09%)</title><rect x="14.4070%" y="677" width="0.0918%" height="15" fill="rgb(213,80,28)" fg:x="628" fg:w="4"/><text x="14.6570%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.09%)</title><rect x="14.4070%" y="661" width="0.0918%" height="15" fill="rgb(220,93,7)" fg:x="628" fg:w="4"/><text x="14.6570%" y="671.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (2 samples, 0.05%)</title><rect x="14.4529%" y="645" width="0.0459%" height="15" fill="rgb(225,24,44)" fg:x="630" fg:w="2"/><text x="14.7029%" y="655.50"></text></g><g><title>y2021::d08::main::set_from_iter (2 samples, 0.05%)</title><rect x="14.4529%" y="629" width="0.0459%" height="15" fill="rgb(243,74,40)" fg:x="630" fg:w="2"/><text x="14.7029%" y="639.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.05%)</title><rect x="14.4529%" y="613" width="0.0459%" height="15" fill="rgb(228,39,7)" fg:x="630" fg:w="2"/><text x="14.7029%" y="623.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="14.4529%" y="597" width="0.0459%" height="15" fill="rgb(227,79,8)" fg:x="630" fg:w="2"/><text x="14.7029%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="14.4529%" y="581" width="0.0459%" height="15" fill="rgb(236,58,11)" fg:x="630" fg:w="2"/><text x="14.7029%" y="591.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.05%)</title><rect x="14.4529%" y="565" width="0.0459%" height="15" fill="rgb(249,63,35)" fg:x="630" fg:w="2"/><text x="14.7029%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="14.4529%" y="549" width="0.0459%" height="15" fill="rgb(252,114,16)" fg:x="630" fg:w="2"/><text x="14.7029%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="14.4529%" y="533" width="0.0459%" height="15" fill="rgb(254,151,24)" fg:x="630" fg:w="2"/><text x="14.7029%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="14.4529%" y="517" width="0.0459%" height="15" fill="rgb(253,54,39)" fg:x="630" fg:w="2"/><text x="14.7029%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;usize,alloc::vec::Vec&lt;&amp;std::collections::hash::set::HashSet&lt;char&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="14.4987%" y="773" width="0.0229%" height="15" fill="rgb(243,25,45)" fg:x="632" fg:w="1"/><text x="14.7487%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;usize,alloc::vec::Vec&lt;&amp;std::collections::hash::set::HashSet&lt;char&gt;&gt;,std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.02%)</title><rect x="14.4987%" y="757" width="0.0229%" height="15" fill="rgb(234,134,9)" fg:x="632" fg:w="1"/><text x="14.7487%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(usize,alloc::vec::Vec&lt;&amp;std::collections::hash::set::HashSet&lt;char&gt;&gt;)&gt;&gt; (1 samples, 0.02%)</title><rect x="14.4987%" y="741" width="0.0229%" height="15" fill="rgb(227,166,31)" fg:x="632" fg:w="1"/><text x="14.7487%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="14.4987%" y="725" width="0.0229%" height="15" fill="rgb(245,143,41)" fg:x="632" fg:w="1"/><text x="14.7487%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.02%)</title><rect x="14.4987%" y="709" width="0.0229%" height="15" fill="rgb(238,181,32)" fg:x="632" fg:w="1"/><text x="14.7487%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.4987%" y="693" width="0.0229%" height="15" fill="rgb(224,113,18)" fg:x="632" fg:w="1"/><text x="14.7487%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.4987%" y="677" width="0.0229%" height="15" fill="rgb(240,229,28)" fg:x="632" fg:w="1"/><text x="14.7487%" y="687.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.02%)</title><rect x="14.4987%" y="661" width="0.0229%" height="15" fill="rgb(250,185,3)" fg:x="632" fg:w="1"/><text x="14.7487%" y="671.50"></text></g><g><title>y2021::d08::main::run (17 samples, 0.39%)</title><rect x="14.1546%" y="1093" width="0.3900%" height="15" fill="rgb(212,59,25)" fg:x="617" fg:w="17"/><text x="14.4046%" y="1103.50"></text></g><g><title>y2021::d08::main::p02 (14 samples, 0.32%)</title><rect x="14.2234%" y="1077" width="0.3212%" height="15" fill="rgb(221,87,20)" fg:x="620" fg:w="14"/><text x="14.4734%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.32%)</title><rect x="14.2234%" y="1061" width="0.3212%" height="15" fill="rgb(213,74,28)" fg:x="620" fg:w="14"/><text x="14.4734%" y="1071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::iter::traits::accum::Sum&lt;core::option::Option&lt;U&gt;&gt;&gt;::sum (14 samples, 0.32%)</title><rect x="14.2234%" y="1045" width="0.3212%" height="15" fill="rgb(224,132,34)" fg:x="620" fg:w="14"/><text x="14.4734%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.32%)</title><rect x="14.2234%" y="1029" width="0.3212%" height="15" fill="rgb(222,101,24)" fg:x="620" fg:w="14"/><text x="14.4734%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::accum::Sum&lt;core::result::Result&lt;U,E&gt;&gt;&gt;::sum (14 samples, 0.32%)</title><rect x="14.2234%" y="1013" width="0.3212%" height="15" fill="rgb(254,142,4)" fg:x="620" fg:w="14"/><text x="14.4734%" y="1023.50"></text></g><g><title>core::iter::adapters::process_results (14 samples, 0.32%)</title><rect x="14.2234%" y="997" width="0.3212%" height="15" fill="rgb(230,229,49)" fg:x="620" fg:w="14"/><text x="14.4734%" y="1007.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::accum::Sum&lt;core::result::Result&lt;U,E&gt;&gt;&gt;::sum::{{closure}} (14 samples, 0.32%)</title><rect x="14.2234%" y="981" width="0.3212%" height="15" fill="rgb(238,70,47)" fg:x="620" fg:w="14"/><text x="14.4734%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (14 samples, 0.32%)</title><rect x="14.2234%" y="965" width="0.3212%" height="15" fill="rgb(231,160,17)" fg:x="620" fg:w="14"/><text x="14.4734%" y="975.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (14 samples, 0.32%)</title><rect x="14.2234%" y="949" width="0.3212%" height="15" fill="rgb(218,68,53)" fg:x="620" fg:w="14"/><text x="14.4734%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.32%)</title><rect x="14.2234%" y="933" width="0.3212%" height="15" fill="rgb(236,111,10)" fg:x="620" fg:w="14"/><text x="14.4734%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.32%)</title><rect x="14.2234%" y="917" width="0.3212%" height="15" fill="rgb(224,34,41)" fg:x="620" fg:w="14"/><text x="14.4734%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.32%)</title><rect x="14.2234%" y="901" width="0.3212%" height="15" fill="rgb(241,118,19)" fg:x="620" fg:w="14"/><text x="14.4734%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.32%)</title><rect x="14.2234%" y="885" width="0.3212%" height="15" fill="rgb(238,129,25)" fg:x="620" fg:w="14"/><text x="14.4734%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.32%)</title><rect x="14.2234%" y="869" width="0.3212%" height="15" fill="rgb(238,22,31)" fg:x="620" fg:w="14"/><text x="14.4734%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.32%)</title><rect x="14.2234%" y="853" width="0.3212%" height="15" fill="rgb(222,174,48)" fg:x="620" fg:w="14"/><text x="14.4734%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (14 samples, 0.32%)</title><rect x="14.2234%" y="837" width="0.3212%" height="15" fill="rgb(206,152,40)" fg:x="620" fg:w="14"/><text x="14.4734%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (14 samples, 0.32%)</title><rect x="14.2234%" y="821" width="0.3212%" height="15" fill="rgb(218,99,54)" fg:x="620" fg:w="14"/><text x="14.4734%" y="831.50"></text></g><g><title>y2021::d08::main::p02::{{closure}} (14 samples, 0.32%)</title><rect x="14.2234%" y="805" width="0.3212%" height="15" fill="rgb(220,174,26)" fg:x="620" fg:w="14"/><text x="14.4734%" y="815.50"></text></g><g><title>y2021::d08::main::signal_value (12 samples, 0.28%)</title><rect x="14.2693%" y="789" width="0.2753%" height="15" fill="rgb(245,116,9)" fg:x="622" fg:w="12"/><text x="14.5193%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;char&gt;&gt; (1 samples, 0.02%)</title><rect x="14.5217%" y="773" width="0.0229%" height="15" fill="rgb(209,72,35)" fg:x="633" fg:w="1"/><text x="14.7717%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;char,std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.02%)</title><rect x="14.5217%" y="757" width="0.0229%" height="15" fill="rgb(226,126,21)" fg:x="633" fg:w="1"/><text x="14.7717%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;char,(),std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.02%)</title><rect x="14.5217%" y="741" width="0.0229%" height="15" fill="rgb(227,192,1)" fg:x="633" fg:w="1"/><text x="14.7717%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(char,())&gt;&gt; (1 samples, 0.02%)</title><rect x="14.5217%" y="725" width="0.0229%" height="15" fill="rgb(237,180,29)" fg:x="633" fg:w="1"/><text x="14.7717%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="14.5217%" y="709" width="0.0229%" height="15" fill="rgb(230,197,35)" fg:x="633" fg:w="1"/><text x="14.7717%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (1 samples, 0.02%)</title><rect x="14.5217%" y="693" width="0.0229%" height="15" fill="rgb(246,193,31)" fg:x="633" fg:w="1"/><text x="14.7717%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.02%)</title><rect x="14.5217%" y="677" width="0.0229%" height="15" fill="rgb(241,36,4)" fg:x="633" fg:w="1"/><text x="14.7717%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="14.5217%" y="661" width="0.0229%" height="15" fill="rgb(241,130,17)" fg:x="633" fg:w="1"/><text x="14.7717%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="14.5217%" y="645" width="0.0229%" height="15" fill="rgb(206,137,32)" fg:x="633" fg:w="1"/><text x="14.7717%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="14.5217%" y="629" width="0.0229%" height="15" fill="rgb(237,228,51)" fg:x="633" fg:w="1"/><text x="14.7717%" y="639.50"></text></g><g><title>y2021::d09::main::p01 (1 samples, 0.02%)</title><rect x="14.5446%" y="1077" width="0.0229%" height="15" fill="rgb(243,6,42)" fg:x="634" fg:w="1"/><text x="14.7946%" y="1087.50"></text></g><g><title>y2021::d09::main::lines_to_i32 (1 samples, 0.02%)</title><rect x="14.5446%" y="1061" width="0.0229%" height="15" fill="rgb(251,74,28)" fg:x="634" fg:w="1"/><text x="14.7946%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="14.5446%" y="1045" width="0.0229%" height="15" fill="rgb(218,20,49)" fg:x="634" fg:w="1"/><text x="14.7946%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.5446%" y="1029" width="0.0229%" height="15" fill="rgb(238,28,14)" fg:x="634" fg:w="1"/><text x="14.7946%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.5446%" y="1013" width="0.0229%" height="15" fill="rgb(229,40,46)" fg:x="634" fg:w="1"/><text x="14.7946%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="14.5446%" y="997" width="0.0229%" height="15" fill="rgb(244,195,20)" fg:x="634" fg:w="1"/><text x="14.7946%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="14.5446%" y="981" width="0.0229%" height="15" fill="rgb(253,56,35)" fg:x="634" fg:w="1"/><text x="14.7946%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="14.5446%" y="965" width="0.0229%" height="15" fill="rgb(210,149,44)" fg:x="634" fg:w="1"/><text x="14.7946%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.5446%" y="949" width="0.0229%" height="15" fill="rgb(240,135,12)" fg:x="634" fg:w="1"/><text x="14.7946%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.5446%" y="933" width="0.0229%" height="15" fill="rgb(251,24,50)" fg:x="634" fg:w="1"/><text x="14.7946%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.5446%" y="917" width="0.0229%" height="15" fill="rgb(243,200,47)" fg:x="634" fg:w="1"/><text x="14.7946%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.02%)</title><rect x="14.5446%" y="901" width="0.0229%" height="15" fill="rgb(224,166,26)" fg:x="634" fg:w="1"/><text x="14.7946%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.5446%" y="885" width="0.0229%" height="15" fill="rgb(233,0,47)" fg:x="634" fg:w="1"/><text x="14.7946%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.5446%" y="869" width="0.0229%" height="15" fill="rgb(253,80,5)" fg:x="634" fg:w="1"/><text x="14.7946%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.5446%" y="853" width="0.0229%" height="15" fill="rgb(214,133,25)" fg:x="634" fg:w="1"/><text x="14.7946%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="14.5446%" y="837" width="0.0229%" height="15" fill="rgb(209,27,14)" fg:x="634" fg:w="1"/><text x="14.7946%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="14.5446%" y="821" width="0.0229%" height="15" fill="rgb(219,102,51)" fg:x="634" fg:w="1"/><text x="14.7946%" y="831.50"></text></g><g><title>y2021::d09::main::lines_to_i32::{{closure}} (1 samples, 0.02%)</title><rect x="14.5446%" y="805" width="0.0229%" height="15" fill="rgb(237,18,16)" fg:x="634" fg:w="1"/><text x="14.7946%" y="815.50"></text></g><g><title>y2021::utils::file::line_as_str (1 samples, 0.02%)</title><rect x="14.5446%" y="789" width="0.0229%" height="15" fill="rgb(241,85,17)" fg:x="634" fg:w="1"/><text x="14.7946%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="14.5446%" y="773" width="0.0229%" height="15" fill="rgb(236,90,42)" fg:x="634" fg:w="1"/><text x="14.7946%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="14.5446%" y="757" width="0.0229%" height="15" fill="rgb(249,57,21)" fg:x="634" fg:w="1"/><text x="14.7946%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="14.5446%" y="741" width="0.0229%" height="15" fill="rgb(243,12,36)" fg:x="634" fg:w="1"/><text x="14.7946%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="14.5446%" y="725" width="0.0229%" height="15" fill="rgb(253,128,47)" fg:x="634" fg:w="1"/><text x="14.7946%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="14.5446%" y="709" width="0.0229%" height="15" fill="rgb(207,33,20)" fg:x="634" fg:w="1"/><text x="14.7946%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="14.5446%" y="693" width="0.0229%" height="15" fill="rgb(233,215,35)" fg:x="634" fg:w="1"/><text x="14.7946%" y="703.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="14.5446%" y="677" width="0.0229%" height="15" fill="rgb(249,188,52)" fg:x="634" fg:w="1"/><text x="14.7946%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.5676%" y="837" width="0.0229%" height="15" fill="rgb(225,12,32)" fg:x="635" fg:w="1"/><text x="14.8176%" y="847.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.5676%" y="821" width="0.0229%" height="15" fill="rgb(247,98,14)" fg:x="635" fg:w="1"/><text x="14.8176%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.5676%" y="805" width="0.0229%" height="15" fill="rgb(247,219,48)" fg:x="635" fg:w="1"/><text x="14.8176%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.5676%" y="789" width="0.0229%" height="15" fill="rgb(253,60,48)" fg:x="635" fg:w="1"/><text x="14.8176%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.5676%" y="773" width="0.0229%" height="15" fill="rgb(245,15,52)" fg:x="635" fg:w="1"/><text x="14.8176%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.5676%" y="757" width="0.0229%" height="15" fill="rgb(220,133,28)" fg:x="635" fg:w="1"/><text x="14.8176%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.5676%" y="741" width="0.0229%" height="15" fill="rgb(217,180,4)" fg:x="635" fg:w="1"/><text x="14.8176%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.5676%" y="725" width="0.0229%" height="15" fill="rgb(251,24,1)" fg:x="635" fg:w="1"/><text x="14.8176%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="14.5676%" y="709" width="0.0229%" height="15" fill="rgb(212,185,49)" fg:x="635" fg:w="1"/><text x="14.8176%" y="719.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.02%)</title><rect x="14.5905%" y="837" width="0.0229%" height="15" fill="rgb(215,175,22)" fg:x="636" fg:w="1"/><text x="14.8405%" y="847.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="14.5905%" y="821" width="0.0229%" height="15" fill="rgb(250,205,14)" fg:x="636" fg:w="1"/><text x="14.8405%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="14.5905%" y="805" width="0.0229%" height="15" fill="rgb(225,211,22)" fg:x="636" fg:w="1"/><text x="14.8405%" y="815.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="14.5905%" y="789" width="0.0229%" height="15" fill="rgb(251,179,42)" fg:x="636" fg:w="1"/><text x="14.8405%" y="799.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="14.5905%" y="773" width="0.0229%" height="15" fill="rgb(208,216,51)" fg:x="636" fg:w="1"/><text x="14.8405%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="14.5905%" y="757" width="0.0229%" height="15" fill="rgb(235,36,11)" fg:x="636" fg:w="1"/><text x="14.8405%" y="767.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="14.5905%" y="741" width="0.0229%" height="15" fill="rgb(213,189,28)" fg:x="636" fg:w="1"/><text x="14.8405%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="14.5905%" y="725" width="0.0229%" height="15" fill="rgb(227,203,42)" fg:x="636" fg:w="1"/><text x="14.8405%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="14.5905%" y="709" width="0.0229%" height="15" fill="rgb(244,72,36)" fg:x="636" fg:w="1"/><text x="14.8405%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="14.5905%" y="693" width="0.0229%" height="15" fill="rgb(213,53,17)" fg:x="636" fg:w="1"/><text x="14.8405%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="14.5905%" y="677" width="0.0229%" height="15" fill="rgb(207,167,3)" fg:x="636" fg:w="1"/><text x="14.8405%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.6134%" y="821" width="0.0229%" height="15" fill="rgb(216,98,30)" fg:x="637" fg:w="1"/><text x="14.8634%" y="831.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.6134%" y="805" width="0.0229%" height="15" fill="rgb(236,123,15)" fg:x="637" fg:w="1"/><text x="14.8634%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.6134%" y="789" width="0.0229%" height="15" fill="rgb(248,81,50)" fg:x="637" fg:w="1"/><text x="14.8634%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.6134%" y="773" width="0.0229%" height="15" fill="rgb(214,120,4)" fg:x="637" fg:w="1"/><text x="14.8634%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.6134%" y="757" width="0.0229%" height="15" fill="rgb(208,179,34)" fg:x="637" fg:w="1"/><text x="14.8634%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.6134%" y="741" width="0.0229%" height="15" fill="rgb(227,140,7)" fg:x="637" fg:w="1"/><text x="14.8634%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.6134%" y="725" width="0.0229%" height="15" fill="rgb(214,22,6)" fg:x="637" fg:w="1"/><text x="14.8634%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.6134%" y="709" width="0.0229%" height="15" fill="rgb(207,137,27)" fg:x="637" fg:w="1"/><text x="14.8634%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="14.6134%" y="693" width="0.0229%" height="15" fill="rgb(210,8,46)" fg:x="637" fg:w="1"/><text x="14.8634%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="14.6134%" y="677" width="0.0229%" height="15" fill="rgb(240,16,54)" fg:x="637" fg:w="1"/><text x="14.8634%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.6364%" y="805" width="0.0229%" height="15" fill="rgb(211,209,29)" fg:x="638" fg:w="1"/><text x="14.8864%" y="815.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.6364%" y="789" width="0.0229%" height="15" fill="rgb(226,228,24)" fg:x="638" fg:w="1"/><text x="14.8864%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.6364%" y="773" width="0.0229%" height="15" fill="rgb(222,84,9)" fg:x="638" fg:w="1"/><text x="14.8864%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.6364%" y="757" width="0.0229%" height="15" fill="rgb(234,203,30)" fg:x="638" fg:w="1"/><text x="14.8864%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.6364%" y="741" width="0.0229%" height="15" fill="rgb(238,109,14)" fg:x="638" fg:w="1"/><text x="14.8864%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.6364%" y="725" width="0.0229%" height="15" fill="rgb(233,206,34)" fg:x="638" fg:w="1"/><text x="14.8864%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.6364%" y="709" width="0.0229%" height="15" fill="rgb(220,167,47)" fg:x="638" fg:w="1"/><text x="14.8864%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.6364%" y="693" width="0.0229%" height="15" fill="rgb(238,105,10)" fg:x="638" fg:w="1"/><text x="14.8864%" y="703.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.6593%" y="645" width="0.0229%" height="15" fill="rgb(213,227,17)" fg:x="639" fg:w="1"/><text x="14.9093%" y="655.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.6593%" y="629" width="0.0229%" height="15" fill="rgb(217,132,38)" fg:x="639" fg:w="1"/><text x="14.9093%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.6593%" y="613" width="0.0229%" height="15" fill="rgb(242,146,4)" fg:x="639" fg:w="1"/><text x="14.9093%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.6593%" y="597" width="0.0229%" height="15" fill="rgb(212,61,9)" fg:x="639" fg:w="1"/><text x="14.9093%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.6593%" y="581" width="0.0229%" height="15" fill="rgb(247,126,22)" fg:x="639" fg:w="1"/><text x="14.9093%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.6593%" y="565" width="0.0229%" height="15" fill="rgb(220,196,2)" fg:x="639" fg:w="1"/><text x="14.9093%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.6593%" y="549" width="0.0229%" height="15" fill="rgb(208,46,4)" fg:x="639" fg:w="1"/><text x="14.9093%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.6593%" y="533" width="0.0229%" height="15" fill="rgb(252,104,46)" fg:x="639" fg:w="1"/><text x="14.9093%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="14.6593%" y="517" width="0.0229%" height="15" fill="rgb(237,152,48)" fg:x="639" fg:w="1"/><text x="14.9093%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.6823%" y="629" width="0.0229%" height="15" fill="rgb(221,59,37)" fg:x="640" fg:w="1"/><text x="14.9323%" y="639.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.6823%" y="613" width="0.0229%" height="15" fill="rgb(209,202,51)" fg:x="640" fg:w="1"/><text x="14.9323%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.6823%" y="597" width="0.0229%" height="15" fill="rgb(228,81,30)" fg:x="640" fg:w="1"/><text x="14.9323%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.6823%" y="581" width="0.0229%" height="15" fill="rgb(227,42,39)" fg:x="640" fg:w="1"/><text x="14.9323%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.6823%" y="565" width="0.0229%" height="15" fill="rgb(221,26,2)" fg:x="640" fg:w="1"/><text x="14.9323%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.6823%" y="549" width="0.0229%" height="15" fill="rgb(254,61,31)" fg:x="640" fg:w="1"/><text x="14.9323%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.6823%" y="533" width="0.0229%" height="15" fill="rgb(222,173,38)" fg:x="640" fg:w="1"/><text x="14.9323%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.6823%" y="517" width="0.0229%" height="15" fill="rgb(218,50,12)" fg:x="640" fg:w="1"/><text x="14.9323%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="14.6823%" y="501" width="0.0229%" height="15" fill="rgb(223,88,40)" fg:x="640" fg:w="1"/><text x="14.9323%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="14.6823%" y="485" width="0.0229%" height="15" fill="rgb(237,54,19)" fg:x="640" fg:w="1"/><text x="14.9323%" y="495.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.7052%" y="565" width="0.0229%" height="15" fill="rgb(251,129,25)" fg:x="641" fg:w="1"/><text x="14.9552%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.7052%" y="549" width="0.0229%" height="15" fill="rgb(238,97,19)" fg:x="641" fg:w="1"/><text x="14.9552%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.7052%" y="533" width="0.0229%" height="15" fill="rgb(240,169,18)" fg:x="641" fg:w="1"/><text x="14.9552%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.7052%" y="517" width="0.0229%" height="15" fill="rgb(230,187,49)" fg:x="641" fg:w="1"/><text x="14.9552%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.7052%" y="501" width="0.0229%" height="15" fill="rgb(209,44,26)" fg:x="641" fg:w="1"/><text x="14.9552%" y="511.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="14.7052%" y="485" width="0.0229%" height="15" fill="rgb(244,0,6)" fg:x="641" fg:w="1"/><text x="14.9552%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="14.7052%" y="469" width="0.0229%" height="15" fill="rgb(248,18,21)" fg:x="641" fg:w="1"/><text x="14.9552%" y="479.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="14.7052%" y="453" width="0.0229%" height="15" fill="rgb(245,180,19)" fg:x="641" fg:w="1"/><text x="14.9552%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="14.7052%" y="437" width="0.0229%" height="15" fill="rgb(252,118,36)" fg:x="641" fg:w="1"/><text x="14.9552%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="14.7052%" y="421" width="0.0229%" height="15" fill="rgb(210,224,19)" fg:x="641" fg:w="1"/><text x="14.9552%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="14.7052%" y="405" width="0.0229%" height="15" fill="rgb(218,30,24)" fg:x="641" fg:w="1"/><text x="14.9552%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="14.7052%" y="389" width="0.0229%" height="15" fill="rgb(219,75,50)" fg:x="641" fg:w="1"/><text x="14.9552%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="14.7052%" y="373" width="0.0229%" height="15" fill="rgb(234,72,50)" fg:x="641" fg:w="1"/><text x="14.9552%" y="383.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.02%)</title><rect x="14.7281%" y="517" width="0.0229%" height="15" fill="rgb(219,100,48)" fg:x="642" fg:w="1"/><text x="14.9781%" y="527.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="14.7281%" y="501" width="0.0229%" height="15" fill="rgb(253,5,41)" fg:x="642" fg:w="1"/><text x="14.9781%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="14.7281%" y="485" width="0.0229%" height="15" fill="rgb(247,181,11)" fg:x="642" fg:w="1"/><text x="14.9781%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="14.7281%" y="469" width="0.0229%" height="15" fill="rgb(222,223,25)" fg:x="642" fg:w="1"/><text x="14.9781%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="14.7281%" y="453" width="0.0229%" height="15" fill="rgb(214,198,28)" fg:x="642" fg:w="1"/><text x="14.9781%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="14.7281%" y="437" width="0.0229%" height="15" fill="rgb(230,46,43)" fg:x="642" fg:w="1"/><text x="14.9781%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="14.7281%" y="421" width="0.0229%" height="15" fill="rgb(233,65,53)" fg:x="642" fg:w="1"/><text x="14.9781%" y="431.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.02%)</title><rect x="14.7281%" y="405" width="0.0229%" height="15" fill="rgb(221,121,27)" fg:x="642" fg:w="1"/><text x="14.9781%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.7281%" y="389" width="0.0229%" height="15" fill="rgb(247,70,47)" fg:x="642" fg:w="1"/><text x="14.9781%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.7281%" y="373" width="0.0229%" height="15" fill="rgb(228,85,35)" fg:x="642" fg:w="1"/><text x="14.9781%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.7281%" y="357" width="0.0229%" height="15" fill="rgb(209,50,18)" fg:x="642" fg:w="1"/><text x="14.9781%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="14.7281%" y="341" width="0.0229%" height="15" fill="rgb(250,19,35)" fg:x="642" fg:w="1"/><text x="14.9781%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="14.7281%" y="325" width="0.0229%" height="15" fill="rgb(253,107,29)" fg:x="642" fg:w="1"/><text x="14.9781%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="14.7281%" y="309" width="0.0229%" height="15" fill="rgb(252,179,29)" fg:x="642" fg:w="1"/><text x="14.9781%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.7511%" y="501" width="0.0229%" height="15" fill="rgb(238,194,6)" fg:x="643" fg:w="1"/><text x="15.0011%" y="511.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.7740%" y="469" width="0.0229%" height="15" fill="rgb(238,164,29)" fg:x="644" fg:w="1"/><text x="15.0240%" y="479.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.7740%" y="453" width="0.0229%" height="15" fill="rgb(224,25,9)" fg:x="644" fg:w="1"/><text x="15.0240%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.7740%" y="437" width="0.0229%" height="15" fill="rgb(244,153,23)" fg:x="644" fg:w="1"/><text x="15.0240%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.7740%" y="421" width="0.0229%" height="15" fill="rgb(212,203,14)" fg:x="644" fg:w="1"/><text x="15.0240%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="14.7740%" y="405" width="0.0229%" height="15" fill="rgb(220,164,20)" fg:x="644" fg:w="1"/><text x="15.0240%" y="415.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="14.7740%" y="389" width="0.0229%" height="15" fill="rgb(222,203,48)" fg:x="644" fg:w="1"/><text x="15.0240%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="14.7740%" y="373" width="0.0229%" height="15" fill="rgb(215,159,22)" fg:x="644" fg:w="1"/><text x="15.0240%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="14.7740%" y="357" width="0.0229%" height="15" fill="rgb(216,183,47)" fg:x="644" fg:w="1"/><text x="15.0240%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="14.7740%" y="341" width="0.0229%" height="15" fill="rgb(229,195,25)" fg:x="644" fg:w="1"/><text x="15.0240%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="14.7740%" y="325" width="0.0229%" height="15" fill="rgb(224,132,51)" fg:x="644" fg:w="1"/><text x="15.0240%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="14.7740%" y="309" width="0.0229%" height="15" fill="rgb(240,63,7)" fg:x="644" fg:w="1"/><text x="15.0240%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="14.7740%" y="293" width="0.0229%" height="15" fill="rgb(249,182,41)" fg:x="644" fg:w="1"/><text x="15.0240%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="14.7740%" y="277" width="0.0229%" height="15" fill="rgb(243,47,26)" fg:x="644" fg:w="1"/><text x="15.0240%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.25%)</title><rect x="14.5676%" y="1061" width="0.2524%" height="15" fill="rgb(233,48,2)" fg:x="635" fg:w="11"/><text x="14.8176%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.25%)</title><rect x="14.5676%" y="1045" width="0.2524%" height="15" fill="rgb(244,165,34)" fg:x="635" fg:w="11"/><text x="14.8176%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.25%)</title><rect x="14.5676%" y="1029" width="0.2524%" height="15" fill="rgb(207,89,7)" fg:x="635" fg:w="11"/><text x="14.8176%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 0.25%)</title><rect x="14.5676%" y="1013" width="0.2524%" height="15" fill="rgb(244,117,36)" fg:x="635" fg:w="11"/><text x="14.8176%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.25%)</title><rect x="14.5676%" y="997" width="0.2524%" height="15" fill="rgb(226,144,34)" fg:x="635" fg:w="11"/><text x="14.8176%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.25%)</title><rect x="14.5676%" y="981" width="0.2524%" height="15" fill="rgb(213,23,19)" fg:x="635" fg:w="11"/><text x="14.8176%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.25%)</title><rect x="14.5676%" y="965" width="0.2524%" height="15" fill="rgb(217,75,12)" fg:x="635" fg:w="11"/><text x="14.8176%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.25%)</title><rect x="14.5676%" y="949" width="0.2524%" height="15" fill="rgb(224,159,17)" fg:x="635" fg:w="11"/><text x="14.8176%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.25%)</title><rect x="14.5676%" y="933" width="0.2524%" height="15" fill="rgb(217,118,1)" fg:x="635" fg:w="11"/><text x="14.8176%" y="943.50"></text></g><g><title>y2021::d09::main::p02::{{closure}} (11 samples, 0.25%)</title><rect x="14.5676%" y="917" width="0.2524%" height="15" fill="rgb(232,180,48)" fg:x="635" fg:w="11"/><text x="14.8176%" y="927.50"></text></g><g><title>y2021::d09::main::get_basin_size (11 samples, 0.25%)</title><rect x="14.5676%" y="901" width="0.2524%" height="15" fill="rgb(230,27,33)" fg:x="635" fg:w="11"/><text x="14.8176%" y="911.50"></text></g><g><title>y2021::d09::main::get_basin_size (11 samples, 0.25%)</title><rect x="14.5676%" y="885" width="0.2524%" height="15" fill="rgb(205,31,21)" fg:x="635" fg:w="11"/><text x="14.8176%" y="895.50"></text></g><g><title>y2021::d09::main::get_basin_size (11 samples, 0.25%)</title><rect x="14.5676%" y="869" width="0.2524%" height="15" fill="rgb(253,59,4)" fg:x="635" fg:w="11"/><text x="14.8176%" y="879.50"></text></g><g><title>y2021::d09::main::get_basin_size (11 samples, 0.25%)</title><rect x="14.5676%" y="853" width="0.2524%" height="15" fill="rgb(224,201,9)" fg:x="635" fg:w="11"/><text x="14.8176%" y="863.50"></text></g><g><title>y2021::d09::main::get_basin_size (9 samples, 0.21%)</title><rect x="14.6134%" y="837" width="0.2065%" height="15" fill="rgb(229,206,30)" fg:x="637" fg:w="9"/><text x="14.8634%" y="847.50"></text></g><g><title>y2021::d09::main::get_basin_size (8 samples, 0.18%)</title><rect x="14.6364%" y="821" width="0.1835%" height="15" fill="rgb(212,67,47)" fg:x="638" fg:w="8"/><text x="14.8864%" y="831.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.16%)</title><rect x="14.6593%" y="805" width="0.1606%" height="15" fill="rgb(211,96,50)" fg:x="639" fg:w="7"/><text x="14.9093%" y="815.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.16%)</title><rect x="14.6593%" y="789" width="0.1606%" height="15" fill="rgb(252,114,18)" fg:x="639" fg:w="7"/><text x="14.9093%" y="799.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.16%)</title><rect x="14.6593%" y="773" width="0.1606%" height="15" fill="rgb(223,58,37)" fg:x="639" fg:w="7"/><text x="14.9093%" y="783.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.16%)</title><rect x="14.6593%" y="757" width="0.1606%" height="15" fill="rgb(237,70,4)" fg:x="639" fg:w="7"/><text x="14.9093%" y="767.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.16%)</title><rect x="14.6593%" y="741" width="0.1606%" height="15" fill="rgb(244,85,46)" fg:x="639" fg:w="7"/><text x="14.9093%" y="751.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.16%)</title><rect x="14.6593%" y="725" width="0.1606%" height="15" fill="rgb(223,39,52)" fg:x="639" fg:w="7"/><text x="14.9093%" y="735.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.16%)</title><rect x="14.6593%" y="709" width="0.1606%" height="15" fill="rgb(218,200,14)" fg:x="639" fg:w="7"/><text x="14.9093%" y="719.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.16%)</title><rect x="14.6593%" y="693" width="0.1606%" height="15" fill="rgb(208,171,16)" fg:x="639" fg:w="7"/><text x="14.9093%" y="703.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.16%)</title><rect x="14.6593%" y="677" width="0.1606%" height="15" fill="rgb(234,200,18)" fg:x="639" fg:w="7"/><text x="14.9093%" y="687.50"></text></g><g><title>y2021::d09::main::get_basin_size (7 samples, 0.16%)</title><rect x="14.6593%" y="661" width="0.1606%" height="15" fill="rgb(228,45,11)" fg:x="639" fg:w="7"/><text x="14.9093%" y="671.50"></text></g><g><title>y2021::d09::main::get_basin_size (6 samples, 0.14%)</title><rect x="14.6823%" y="645" width="0.1376%" height="15" fill="rgb(237,182,11)" fg:x="640" fg:w="6"/><text x="14.9323%" y="655.50"></text></g><g><title>y2021::d09::main::get_basin_size (5 samples, 0.11%)</title><rect x="14.7052%" y="629" width="0.1147%" height="15" fill="rgb(241,175,49)" fg:x="641" fg:w="5"/><text x="14.9552%" y="639.50"></text></g><g><title>y2021::d09::main::get_basin_size (5 samples, 0.11%)</title><rect x="14.7052%" y="613" width="0.1147%" height="15" fill="rgb(247,38,35)" fg:x="641" fg:w="5"/><text x="14.9552%" y="623.50"></text></g><g><title>y2021::d09::main::get_basin_size (5 samples, 0.11%)</title><rect x="14.7052%" y="597" width="0.1147%" height="15" fill="rgb(228,39,49)" fg:x="641" fg:w="5"/><text x="14.9552%" y="607.50"></text></g><g><title>y2021::d09::main::get_basin_size (5 samples, 0.11%)</title><rect x="14.7052%" y="581" width="0.1147%" height="15" fill="rgb(226,101,26)" fg:x="641" fg:w="5"/><text x="14.9552%" y="591.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.09%)</title><rect x="14.7281%" y="565" width="0.0918%" height="15" fill="rgb(206,141,19)" fg:x="642" fg:w="4"/><text x="14.9781%" y="575.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.09%)</title><rect x="14.7281%" y="549" width="0.0918%" height="15" fill="rgb(211,200,13)" fg:x="642" fg:w="4"/><text x="14.9781%" y="559.50"></text></g><g><title>y2021::d09::main::get_basin_size (4 samples, 0.09%)</title><rect x="14.7281%" y="533" width="0.0918%" height="15" fill="rgb(241,121,6)" fg:x="642" fg:w="4"/><text x="14.9781%" y="543.50"></text></g><g><title>y2021::d09::main::get_basin_size (3 samples, 0.07%)</title><rect x="14.7511%" y="517" width="0.0688%" height="15" fill="rgb(234,221,29)" fg:x="643" fg:w="3"/><text x="15.0011%" y="527.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.05%)</title><rect x="14.7740%" y="501" width="0.0459%" height="15" fill="rgb(229,136,5)" fg:x="644" fg:w="2"/><text x="15.0240%" y="511.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.05%)</title><rect x="14.7740%" y="485" width="0.0459%" height="15" fill="rgb(238,36,11)" fg:x="644" fg:w="2"/><text x="15.0240%" y="495.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="469" width="0.0229%" height="15" fill="rgb(251,55,41)" fg:x="645" fg:w="1"/><text x="15.0470%" y="479.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="453" width="0.0229%" height="15" fill="rgb(242,34,40)" fg:x="645" fg:w="1"/><text x="15.0470%" y="463.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="437" width="0.0229%" height="15" fill="rgb(215,42,17)" fg:x="645" fg:w="1"/><text x="15.0470%" y="447.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="421" width="0.0229%" height="15" fill="rgb(207,44,46)" fg:x="645" fg:w="1"/><text x="15.0470%" y="431.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="405" width="0.0229%" height="15" fill="rgb(211,206,28)" fg:x="645" fg:w="1"/><text x="15.0470%" y="415.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="389" width="0.0229%" height="15" fill="rgb(237,167,16)" fg:x="645" fg:w="1"/><text x="15.0470%" y="399.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="373" width="0.0229%" height="15" fill="rgb(233,66,6)" fg:x="645" fg:w="1"/><text x="15.0470%" y="383.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="357" width="0.0229%" height="15" fill="rgb(246,123,29)" fg:x="645" fg:w="1"/><text x="15.0470%" y="367.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="341" width="0.0229%" height="15" fill="rgb(209,62,40)" fg:x="645" fg:w="1"/><text x="15.0470%" y="351.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="325" width="0.0229%" height="15" fill="rgb(218,4,25)" fg:x="645" fg:w="1"/><text x="15.0470%" y="335.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="309" width="0.0229%" height="15" fill="rgb(253,91,49)" fg:x="645" fg:w="1"/><text x="15.0470%" y="319.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="293" width="0.0229%" height="15" fill="rgb(228,155,29)" fg:x="645" fg:w="1"/><text x="15.0470%" y="303.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="277" width="0.0229%" height="15" fill="rgb(243,57,37)" fg:x="645" fg:w="1"/><text x="15.0470%" y="287.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="261" width="0.0229%" height="15" fill="rgb(244,167,17)" fg:x="645" fg:w="1"/><text x="15.0470%" y="271.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="245" width="0.0229%" height="15" fill="rgb(207,181,38)" fg:x="645" fg:w="1"/><text x="15.0470%" y="255.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="229" width="0.0229%" height="15" fill="rgb(211,8,23)" fg:x="645" fg:w="1"/><text x="15.0470%" y="239.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="213" width="0.0229%" height="15" fill="rgb(235,11,44)" fg:x="645" fg:w="1"/><text x="15.0470%" y="223.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="197" width="0.0229%" height="15" fill="rgb(248,18,52)" fg:x="645" fg:w="1"/><text x="15.0470%" y="207.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="181" width="0.0229%" height="15" fill="rgb(208,4,7)" fg:x="645" fg:w="1"/><text x="15.0470%" y="191.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="165" width="0.0229%" height="15" fill="rgb(240,17,39)" fg:x="645" fg:w="1"/><text x="15.0470%" y="175.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="149" width="0.0229%" height="15" fill="rgb(207,170,3)" fg:x="645" fg:w="1"/><text x="15.0470%" y="159.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.02%)</title><rect x="14.7970%" y="133" width="0.0229%" height="15" fill="rgb(236,100,52)" fg:x="645" fg:w="1"/><text x="15.0470%" y="143.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="14.7970%" y="117" width="0.0229%" height="15" fill="rgb(246,78,51)" fg:x="645" fg:w="1"/><text x="15.0470%" y="127.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="14.7970%" y="101" width="0.0229%" height="15" fill="rgb(211,17,15)" fg:x="645" fg:w="1"/><text x="15.0470%" y="111.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.7970%" y="85" width="0.0229%" height="15" fill="rgb(209,59,46)" fg:x="645" fg:w="1"/><text x="15.0470%" y="95.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.7970%" y="69" width="0.0229%" height="15" fill="rgb(210,92,25)" fg:x="645" fg:w="1"/><text x="15.0470%" y="79.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="14.7970%" y="53" width="0.0229%" height="15" fill="rgb(238,174,52)" fg:x="645" fg:w="1"/><text x="15.0470%" y="63.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="14.7970%" y="37" width="0.0229%" height="15" fill="rgb(230,73,7)" fg:x="645" fg:w="1"/><text x="15.0470%" y="47.50"></text></g><g><title>y2021::d09::main::lowest_surrounding (1 samples, 0.02%)</title><rect x="14.8199%" y="1061" width="0.0229%" height="15" fill="rgb(243,124,40)" fg:x="646" fg:w="1"/><text x="15.0699%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (1 samples, 0.02%)</title><rect x="14.8199%" y="1045" width="0.0229%" height="15" fill="rgb(244,170,11)" fg:x="646" fg:w="1"/><text x="15.0699%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (1 samples, 0.02%)</title><rect x="14.8199%" y="1029" width="0.0229%" height="15" fill="rgb(207,114,54)" fg:x="646" fg:w="1"/><text x="15.0699%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1 samples, 0.02%)</title><rect x="14.8199%" y="1013" width="0.0229%" height="15" fill="rgb(205,42,20)" fg:x="646" fg:w="1"/><text x="15.0699%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="14.8199%" y="997" width="0.0229%" height="15" fill="rgb(230,30,28)" fg:x="646" fg:w="1"/><text x="15.0699%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="14.8199%" y="981" width="0.0229%" height="15" fill="rgb(205,73,54)" fg:x="646" fg:w="1"/><text x="15.0699%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.8199%" y="965" width="0.0229%" height="15" fill="rgb(254,227,23)" fg:x="646" fg:w="1"/><text x="15.0699%" y="975.50"></text></g><g><title>y2021::d09::main::run (14 samples, 0.32%)</title><rect x="14.5446%" y="1093" width="0.3212%" height="15" fill="rgb(228,202,34)" fg:x="634" fg:w="14"/><text x="14.7946%" y="1103.50"></text></g><g><title>y2021::d09::main::p02 (13 samples, 0.30%)</title><rect x="14.5676%" y="1077" width="0.2982%" height="15" fill="rgb(222,225,37)" fg:x="635" fg:w="13"/><text x="14.8176%" y="1087.50"></text></g><g><title>y2021::utils::file::read_to_lines (1 samples, 0.02%)</title><rect x="14.8429%" y="1061" width="0.0229%" height="15" fill="rgb(221,14,54)" fg:x="647" fg:w="1"/><text x="15.0929%" y="1071.50"></text></g><g><title>std::fs::File::open (1 samples, 0.02%)</title><rect x="14.8429%" y="1045" width="0.0229%" height="15" fill="rgb(254,102,2)" fg:x="647" fg:w="1"/><text x="15.0929%" y="1055.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.02%)</title><rect x="14.8429%" y="1029" width="0.0229%" height="15" fill="rgb(232,104,17)" fg:x="647" fg:w="1"/><text x="15.0929%" y="1039.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.02%)</title><rect x="14.8429%" y="1013" width="0.0229%" height="15" fill="rgb(250,220,14)" fg:x="647" fg:w="1"/><text x="15.0929%" y="1023.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.02%)</title><rect x="14.8429%" y="997" width="0.0229%" height="15" fill="rgb(241,158,9)" fg:x="647" fg:w="1"/><text x="15.0929%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.02%)</title><rect x="14.8429%" y="981" width="0.0229%" height="15" fill="rgb(246,9,43)" fg:x="647" fg:w="1"/><text x="15.0929%" y="991.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.02%)</title><rect x="14.8429%" y="965" width="0.0229%" height="15" fill="rgb(206,73,33)" fg:x="647" fg:w="1"/><text x="15.0929%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.02%)</title><rect x="14.8429%" y="949" width="0.0229%" height="15" fill="rgb(222,79,8)" fg:x="647" fg:w="1"/><text x="15.0929%" y="959.50"></text></g><g><title>__libc_open64 (1 samples, 0.02%)</title><rect x="14.8429%" y="933" width="0.0229%" height="15" fill="rgb(234,8,54)" fg:x="647" fg:w="1"/><text x="15.0929%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="14.8429%" y="917" width="0.0229%" height="15" fill="rgb(209,134,38)" fg:x="647" fg:w="1"/><text x="15.0929%" y="927.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="14.8429%" y="901" width="0.0229%" height="15" fill="rgb(230,127,29)" fg:x="647" fg:w="1"/><text x="15.0929%" y="911.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.02%)</title><rect x="14.8429%" y="885" width="0.0229%" height="15" fill="rgb(242,44,41)" fg:x="647" fg:w="1"/><text x="15.0929%" y="895.50"></text></g><g><title>do_sys_open (1 samples, 0.02%)</title><rect x="14.8429%" y="869" width="0.0229%" height="15" fill="rgb(222,56,43)" fg:x="647" fg:w="1"/><text x="15.0929%" y="879.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.02%)</title><rect x="14.8429%" y="853" width="0.0229%" height="15" fill="rgb(238,39,47)" fg:x="647" fg:w="1"/><text x="15.0929%" y="863.50"></text></g><g><title>do_filp_open (1 samples, 0.02%)</title><rect x="14.8429%" y="837" width="0.0229%" height="15" fill="rgb(226,79,43)" fg:x="647" fg:w="1"/><text x="15.0929%" y="847.50"></text></g><g><title>path_openat (1 samples, 0.02%)</title><rect x="14.8429%" y="821" width="0.0229%" height="15" fill="rgb(242,105,53)" fg:x="647" fg:w="1"/><text x="15.0929%" y="831.50"></text></g><g><title>vfs_open (1 samples, 0.02%)</title><rect x="14.8429%" y="805" width="0.0229%" height="15" fill="rgb(251,132,46)" fg:x="647" fg:w="1"/><text x="15.0929%" y="815.50"></text></g><g><title>do_dentry_open (1 samples, 0.02%)</title><rect x="14.8429%" y="789" width="0.0229%" height="15" fill="rgb(231,77,14)" fg:x="647" fg:w="1"/><text x="15.0929%" y="799.50"></text></g><g><title>ext4_file_open (1 samples, 0.02%)</title><rect x="14.8429%" y="773" width="0.0229%" height="15" fill="rgb(240,135,9)" fg:x="647" fg:w="1"/><text x="15.0929%" y="783.50"></text></g><g><title>fscrypt_file_open (1 samples, 0.02%)</title><rect x="14.8429%" y="757" width="0.0229%" height="15" fill="rgb(248,109,14)" fg:x="647" fg:w="1"/><text x="15.0929%" y="767.50"></text></g><g><title>dput (1 samples, 0.02%)</title><rect x="14.8429%" y="741" width="0.0229%" height="15" fill="rgb(227,146,52)" fg:x="647" fg:w="1"/><text x="15.0929%" y="751.50"></text></g><g><title>_cond_resched (1 samples, 0.02%)</title><rect x="14.8429%" y="725" width="0.0229%" height="15" fill="rgb(232,54,3)" fg:x="647" fg:w="1"/><text x="15.0929%" y="735.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.8658%" y="981" width="0.0229%" height="15" fill="rgb(229,201,43)" fg:x="648" fg:w="1"/><text x="15.1158%" y="991.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.02%)</title><rect x="14.8658%" y="965" width="0.0229%" height="15" fill="rgb(252,161,33)" fg:x="648" fg:w="1"/><text x="15.1158%" y="975.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.02%)</title><rect x="14.8658%" y="949" width="0.0229%" height="15" fill="rgb(226,146,40)" fg:x="648" fg:w="1"/><text x="15.1158%" y="959.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 0.02%)</title><rect x="14.8658%" y="933" width="0.0229%" height="15" fill="rgb(219,47,25)" fg:x="648" fg:w="1"/><text x="15.1158%" y="943.50"></text></g><g><title>std::io::read_until (1 samples, 0.02%)</title><rect x="14.8658%" y="917" width="0.0229%" height="15" fill="rgb(250,135,13)" fg:x="648" fg:w="1"/><text x="15.1158%" y="927.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.02%)</title><rect x="14.8658%" y="901" width="0.0229%" height="15" fill="rgb(219,229,18)" fg:x="648" fg:w="1"/><text x="15.1158%" y="911.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.02%)</title><rect x="14.8658%" y="885" width="0.0229%" height="15" fill="rgb(217,152,27)" fg:x="648" fg:w="1"/><text x="15.1158%" y="895.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.02%)</title><rect x="14.8658%" y="869" width="0.0229%" height="15" fill="rgb(225,71,47)" fg:x="648" fg:w="1"/><text x="15.1158%" y="879.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.02%)</title><rect x="14.8658%" y="853" width="0.0229%" height="15" fill="rgb(220,139,14)" fg:x="648" fg:w="1"/><text x="15.1158%" y="863.50"></text></g><g><title>__libc_read (1 samples, 0.02%)</title><rect x="14.8658%" y="837" width="0.0229%" height="15" fill="rgb(247,54,32)" fg:x="648" fg:w="1"/><text x="15.1158%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="14.8658%" y="821" width="0.0229%" height="15" fill="rgb(252,131,39)" fg:x="648" fg:w="1"/><text x="15.1158%" y="831.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="14.8658%" y="805" width="0.0229%" height="15" fill="rgb(210,108,39)" fg:x="648" fg:w="1"/><text x="15.1158%" y="815.50"></text></g><g><title>__x64_sys_read (1 samples, 0.02%)</title><rect x="14.8658%" y="789" width="0.0229%" height="15" fill="rgb(205,23,29)" fg:x="648" fg:w="1"/><text x="15.1158%" y="799.50"></text></g><g><title>ksys_read (1 samples, 0.02%)</title><rect x="14.8658%" y="773" width="0.0229%" height="15" fill="rgb(246,139,46)" fg:x="648" fg:w="1"/><text x="15.1158%" y="783.50"></text></g><g><title>vfs_read (1 samples, 0.02%)</title><rect x="14.8658%" y="757" width="0.0229%" height="15" fill="rgb(250,81,26)" fg:x="648" fg:w="1"/><text x="15.1158%" y="767.50"></text></g><g><title>new_sync_read (1 samples, 0.02%)</title><rect x="14.8658%" y="741" width="0.0229%" height="15" fill="rgb(214,104,7)" fg:x="648" fg:w="1"/><text x="15.1158%" y="751.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="14.8658%" y="725" width="0.0229%" height="15" fill="rgb(233,189,8)" fg:x="648" fg:w="1"/><text x="15.1158%" y="735.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="14.8658%" y="709" width="0.0229%" height="15" fill="rgb(228,141,17)" fg:x="648" fg:w="1"/><text x="15.1158%" y="719.50"></text></g><g><title>generic_file_buffered_read (1 samples, 0.02%)</title><rect x="14.8658%" y="693" width="0.0229%" height="15" fill="rgb(247,157,1)" fg:x="648" fg:w="1"/><text x="15.1158%" y="703.50"></text></g><g><title>generic_file_buffered_read_get_pages (1 samples, 0.02%)</title><rect x="14.8658%" y="677" width="0.0229%" height="15" fill="rgb(249,225,5)" fg:x="648" fg:w="1"/><text x="15.1158%" y="687.50"></text></g><g><title>wait_on_page_bit_common (1 samples, 0.02%)</title><rect x="14.8658%" y="661" width="0.0229%" height="15" fill="rgb(242,55,13)" fg:x="648" fg:w="1"/><text x="15.1158%" y="671.50"></text></g><g><title>io_schedule (1 samples, 0.02%)</title><rect x="14.8658%" y="645" width="0.0229%" height="15" fill="rgb(230,49,50)" fg:x="648" fg:w="1"/><text x="15.1158%" y="655.50"></text></g><g><title>schedule (1 samples, 0.02%)</title><rect x="14.8658%" y="629" width="0.0229%" height="15" fill="rgb(241,111,38)" fg:x="648" fg:w="1"/><text x="15.1158%" y="639.50"></text></g><g><title>__schedule (1 samples, 0.02%)</title><rect x="14.8658%" y="613" width="0.0229%" height="15" fill="rgb(252,155,4)" fg:x="648" fg:w="1"/><text x="15.1158%" y="623.50"></text></g><g><title>dequeue_task (1 samples, 0.02%)</title><rect x="14.8658%" y="597" width="0.0229%" height="15" fill="rgb(212,69,32)" fg:x="648" fg:w="1"/><text x="15.1158%" y="607.50"></text></g><g><title>psi_task_change (1 samples, 0.02%)</title><rect x="14.8658%" y="581" width="0.0229%" height="15" fill="rgb(243,107,47)" fg:x="648" fg:w="1"/><text x="15.1158%" y="591.50"></text></g><g><title>psi_group_change (1 samples, 0.02%)</title><rect x="14.8658%" y="565" width="0.0229%" height="15" fill="rgb(247,130,12)" fg:x="648" fg:w="1"/><text x="15.1158%" y="575.50"></text></g><g><title>record_times (1 samples, 0.02%)</title><rect x="14.8658%" y="549" width="0.0229%" height="15" fill="rgb(233,74,16)" fg:x="648" fg:w="1"/><text x="15.1158%" y="559.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="14.8658%" y="533" width="0.0229%" height="15" fill="rgb(208,58,18)" fg:x="648" fg:w="1"/><text x="15.1158%" y="543.50"></text></g><g><title>native_sched_clock (1 samples, 0.02%)</title><rect x="14.8658%" y="517" width="0.0229%" height="15" fill="rgb(242,225,1)" fg:x="648" fg:w="1"/><text x="15.1158%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;char&gt;&gt; (1 samples, 0.02%)</title><rect x="14.8887%" y="917" width="0.0229%" height="15" fill="rgb(249,39,40)" fg:x="649" fg:w="1"/><text x="15.1387%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;char&gt;&gt; (1 samples, 0.02%)</title><rect x="14.8887%" y="901" width="0.0229%" height="15" fill="rgb(207,72,44)" fg:x="649" fg:w="1"/><text x="15.1387%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="14.8887%" y="885" width="0.0229%" height="15" fill="rgb(215,193,12)" fg:x="649" fg:w="1"/><text x="15.1387%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="14.8887%" y="869" width="0.0229%" height="15" fill="rgb(248,41,39)" fg:x="649" fg:w="1"/><text x="15.1387%" y="879.50"></text></g><g><title>y2021::d10::main::p01 (3 samples, 0.07%)</title><rect x="14.8658%" y="1077" width="0.0688%" height="15" fill="rgb(253,85,4)" fg:x="648" fg:w="3"/><text x="15.1158%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3 samples, 0.07%)</title><rect x="14.8658%" y="1061" width="0.0688%" height="15" fill="rgb(243,70,31)" fg:x="648" fg:w="3"/><text x="15.1158%" y="1071.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3 samples, 0.07%)</title><rect x="14.8658%" y="1045" width="0.0688%" height="15" fill="rgb(253,195,26)" fg:x="648" fg:w="3"/><text x="15.1158%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="14.8658%" y="1029" width="0.0688%" height="15" fill="rgb(243,42,11)" fg:x="648" fg:w="3"/><text x="15.1158%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="14.8658%" y="1013" width="0.0688%" height="15" fill="rgb(239,66,17)" fg:x="648" fg:w="3"/><text x="15.1158%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.07%)</title><rect x="14.8658%" y="997" width="0.0688%" height="15" fill="rgb(217,132,21)" fg:x="648" fg:w="3"/><text x="15.1158%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.05%)</title><rect x="14.8887%" y="981" width="0.0459%" height="15" fill="rgb(252,202,21)" fg:x="649" fg:w="2"/><text x="15.1387%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.05%)</title><rect x="14.8887%" y="965" width="0.0459%" height="15" fill="rgb(233,98,36)" fg:x="649" fg:w="2"/><text x="15.1387%" y="975.50"></text></g><g><title>y2021::d10::main::p01::{{closure}} (2 samples, 0.05%)</title><rect x="14.8887%" y="949" width="0.0459%" height="15" fill="rgb(216,153,54)" fg:x="649" fg:w="2"/><text x="15.1387%" y="959.50"></text></g><g><title>y2021::d10::main::check_line (2 samples, 0.05%)</title><rect x="14.8887%" y="933" width="0.0459%" height="15" fill="rgb(250,99,7)" fg:x="649" fg:w="2"/><text x="15.1387%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.9117%" y="917" width="0.0229%" height="15" fill="rgb(207,56,50)" fg:x="650" fg:w="1"/><text x="15.1617%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="14.9117%" y="901" width="0.0229%" height="15" fill="rgb(244,61,34)" fg:x="650" fg:w="1"/><text x="15.1617%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="14.9117%" y="885" width="0.0229%" height="15" fill="rgb(241,50,38)" fg:x="650" fg:w="1"/><text x="15.1617%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="14.9117%" y="869" width="0.0229%" height="15" fill="rgb(212,166,30)" fg:x="650" fg:w="1"/><text x="15.1617%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="14.9117%" y="853" width="0.0229%" height="15" fill="rgb(249,127,32)" fg:x="650" fg:w="1"/><text x="15.1617%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.9117%" y="837" width="0.0229%" height="15" fill="rgb(209,103,0)" fg:x="650" fg:w="1"/><text x="15.1617%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.9117%" y="821" width="0.0229%" height="15" fill="rgb(238,209,51)" fg:x="650" fg:w="1"/><text x="15.1617%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.9117%" y="805" width="0.0229%" height="15" fill="rgb(237,56,23)" fg:x="650" fg:w="1"/><text x="15.1617%" y="815.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="14.9117%" y="789" width="0.0229%" height="15" fill="rgb(215,153,46)" fg:x="650" fg:w="1"/><text x="15.1617%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (2 samples, 0.05%)</title><rect x="14.9346%" y="821" width="0.0459%" height="15" fill="rgb(224,49,31)" fg:x="651" fg:w="2"/><text x="15.1846%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.05%)</title><rect x="14.9346%" y="805" width="0.0459%" height="15" fill="rgb(250,18,42)" fg:x="651" fg:w="2"/><text x="15.1846%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.05%)</title><rect x="14.9346%" y="789" width="0.0459%" height="15" fill="rgb(215,176,39)" fg:x="651" fg:w="2"/><text x="15.1846%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.05%)</title><rect x="14.9346%" y="773" width="0.0459%" height="15" fill="rgb(223,77,29)" fg:x="651" fg:w="2"/><text x="15.1846%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="14.9346%" y="757" width="0.0459%" height="15" fill="rgb(234,94,52)" fg:x="651" fg:w="2"/><text x="15.1846%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="14.9346%" y="741" width="0.0459%" height="15" fill="rgb(220,154,50)" fg:x="651" fg:w="2"/><text x="15.1846%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="14.9346%" y="725" width="0.0459%" height="15" fill="rgb(212,11,10)" fg:x="651" fg:w="2"/><text x="15.1846%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.05%)</title><rect x="14.9346%" y="709" width="0.0459%" height="15" fill="rgb(205,166,19)" fg:x="651" fg:w="2"/><text x="15.1846%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="14.9346%" y="693" width="0.0459%" height="15" fill="rgb(244,198,16)" fg:x="651" fg:w="2"/><text x="15.1846%" y="703.50"></text></g><g><title>y2021::d10::main::run (6 samples, 0.14%)</title><rect x="14.8658%" y="1093" width="0.1376%" height="15" fill="rgb(219,69,12)" fg:x="648" fg:w="6"/><text x="15.1158%" y="1103.50"></text></g><g><title>y2021::d10::main::p02 (3 samples, 0.07%)</title><rect x="14.9346%" y="1077" width="0.0688%" height="15" fill="rgb(245,30,7)" fg:x="651" fg:w="3"/><text x="15.1846%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.07%)</title><rect x="14.9346%" y="1061" width="0.0688%" height="15" fill="rgb(218,221,48)" fg:x="651" fg:w="3"/><text x="15.1846%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="14.9346%" y="1045" width="0.0688%" height="15" fill="rgb(216,66,15)" fg:x="651" fg:w="3"/><text x="15.1846%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="14.9346%" y="1029" width="0.0688%" height="15" fill="rgb(226,122,50)" fg:x="651" fg:w="3"/><text x="15.1846%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="14.9346%" y="1013" width="0.0688%" height="15" fill="rgb(239,156,16)" fg:x="651" fg:w="3"/><text x="15.1846%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.07%)</title><rect x="14.9346%" y="997" width="0.0688%" height="15" fill="rgb(224,27,38)" fg:x="651" fg:w="3"/><text x="15.1846%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.07%)</title><rect x="14.9346%" y="981" width="0.0688%" height="15" fill="rgb(224,39,27)" fg:x="651" fg:w="3"/><text x="15.1846%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="14.9346%" y="965" width="0.0688%" height="15" fill="rgb(215,92,29)" fg:x="651" fg:w="3"/><text x="15.1846%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.07%)</title><rect x="14.9346%" y="949" width="0.0688%" height="15" fill="rgb(207,159,16)" fg:x="651" fg:w="3"/><text x="15.1846%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.07%)</title><rect x="14.9346%" y="933" width="0.0688%" height="15" fill="rgb(238,163,47)" fg:x="651" fg:w="3"/><text x="15.1846%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.07%)</title><rect x="14.9346%" y="917" width="0.0688%" height="15" fill="rgb(219,91,49)" fg:x="651" fg:w="3"/><text x="15.1846%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="14.9346%" y="901" width="0.0688%" height="15" fill="rgb(227,167,31)" fg:x="651" fg:w="3"/><text x="15.1846%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.07%)</title><rect x="14.9346%" y="885" width="0.0688%" height="15" fill="rgb(234,80,54)" fg:x="651" fg:w="3"/><text x="15.1846%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.07%)</title><rect x="14.9346%" y="869" width="0.0688%" height="15" fill="rgb(212,114,2)" fg:x="651" fg:w="3"/><text x="15.1846%" y="879.50"></text></g><g><title>y2021::d10::main::p02::{{closure}} (3 samples, 0.07%)</title><rect x="14.9346%" y="853" width="0.0688%" height="15" fill="rgb(234,50,24)" fg:x="651" fg:w="3"/><text x="15.1846%" y="863.50"></text></g><g><title>y2021::d10::main::check_line (3 samples, 0.07%)</title><rect x="14.9346%" y="837" width="0.0688%" height="15" fill="rgb(221,68,8)" fg:x="651" fg:w="3"/><text x="15.1846%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.02%)</title><rect x="14.9805%" y="821" width="0.0229%" height="15" fill="rgb(254,180,31)" fg:x="653" fg:w="1"/><text x="15.2305%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="14.9805%" y="805" width="0.0229%" height="15" fill="rgb(247,130,50)" fg:x="653" fg:w="1"/><text x="15.2305%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.11%)</title><rect x="15.0034%" y="885" width="0.1147%" height="15" fill="rgb(211,109,4)" fg:x="654" fg:w="5"/><text x="15.2534%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.11%)</title><rect x="15.0034%" y="869" width="0.1147%" height="15" fill="rgb(238,50,21)" fg:x="654" fg:w="5"/><text x="15.2534%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="15.0034%" y="853" width="0.1147%" height="15" fill="rgb(225,57,45)" fg:x="654" fg:w="5"/><text x="15.2534%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="15.0034%" y="837" width="0.1147%" height="15" fill="rgb(209,196,50)" fg:x="654" fg:w="5"/><text x="15.2534%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (5 samples, 0.11%)</title><rect x="15.0034%" y="821" width="0.1147%" height="15" fill="rgb(242,140,13)" fg:x="654" fg:w="5"/><text x="15.2534%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.11%)</title><rect x="15.0034%" y="805" width="0.1147%" height="15" fill="rgb(217,111,7)" fg:x="654" fg:w="5"/><text x="15.2534%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.11%)</title><rect x="15.0034%" y="789" width="0.1147%" height="15" fill="rgb(253,193,51)" fg:x="654" fg:w="5"/><text x="15.2534%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.11%)</title><rect x="15.0034%" y="773" width="0.1147%" height="15" fill="rgb(252,70,29)" fg:x="654" fg:w="5"/><text x="15.2534%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (5 samples, 0.11%)</title><rect x="15.0034%" y="757" width="0.1147%" height="15" fill="rgb(232,127,12)" fg:x="654" fg:w="5"/><text x="15.2534%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.11%)</title><rect x="15.0034%" y="741" width="0.1147%" height="15" fill="rgb(211,180,21)" fg:x="654" fg:w="5"/><text x="15.2534%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.11%)</title><rect x="15.0034%" y="725" width="0.1147%" height="15" fill="rgb(229,72,13)" fg:x="654" fg:w="5"/><text x="15.2534%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.11%)</title><rect x="15.0034%" y="709" width="0.1147%" height="15" fill="rgb(240,211,49)" fg:x="654" fg:w="5"/><text x="15.2534%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.11%)</title><rect x="15.0034%" y="693" width="0.1147%" height="15" fill="rgb(219,149,40)" fg:x="654" fg:w="5"/><text x="15.2534%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.11%)</title><rect x="15.0034%" y="677" width="0.1147%" height="15" fill="rgb(210,127,46)" fg:x="654" fg:w="5"/><text x="15.2534%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (5 samples, 0.11%)</title><rect x="15.0034%" y="661" width="0.1147%" height="15" fill="rgb(220,106,7)" fg:x="654" fg:w="5"/><text x="15.2534%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.11%)</title><rect x="15.0034%" y="645" width="0.1147%" height="15" fill="rgb(249,31,22)" fg:x="654" fg:w="5"/><text x="15.2534%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.11%)</title><rect x="15.0034%" y="629" width="0.1147%" height="15" fill="rgb(253,1,49)" fg:x="654" fg:w="5"/><text x="15.2534%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (5 samples, 0.11%)</title><rect x="15.0034%" y="613" width="0.1147%" height="15" fill="rgb(227,144,33)" fg:x="654" fg:w="5"/><text x="15.2534%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.11%)</title><rect x="15.0034%" y="597" width="0.1147%" height="15" fill="rgb(249,163,44)" fg:x="654" fg:w="5"/><text x="15.2534%" y="607.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (5 samples, 0.11%)</title><rect x="15.0034%" y="581" width="0.1147%" height="15" fill="rgb(234,15,39)" fg:x="654" fg:w="5"/><text x="15.2534%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (5 samples, 0.11%)</title><rect x="15.0034%" y="565" width="0.1147%" height="15" fill="rgb(207,66,16)" fg:x="654" fg:w="5"/><text x="15.2534%" y="575.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (5 samples, 0.11%)</title><rect x="15.0034%" y="549" width="0.1147%" height="15" fill="rgb(233,112,24)" fg:x="654" fg:w="5"/><text x="15.2534%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (5 samples, 0.11%)</title><rect x="15.0034%" y="533" width="0.1147%" height="15" fill="rgb(230,90,22)" fg:x="654" fg:w="5"/><text x="15.2534%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="15.0723%" y="517" width="0.0459%" height="15" fill="rgb(229,61,13)" fg:x="657" fg:w="2"/><text x="15.3223%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="15.1181%" y="661" width="0.0229%" height="15" fill="rgb(225,57,24)" fg:x="659" fg:w="1"/><text x="15.3681%" y="671.50"></text></g><g><title>y2021::d11::main::p01 (8 samples, 0.18%)</title><rect x="15.0034%" y="1077" width="0.1835%" height="15" fill="rgb(208,169,48)" fg:x="654" fg:w="8"/><text x="15.2534%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (8 samples, 0.18%)</title><rect x="15.0034%" y="1061" width="0.1835%" height="15" fill="rgb(244,218,51)" fg:x="654" fg:w="8"/><text x="15.2534%" y="1071.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (8 samples, 0.18%)</title><rect x="15.0034%" y="1045" width="0.1835%" height="15" fill="rgb(214,148,10)" fg:x="654" fg:w="8"/><text x="15.2534%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.18%)</title><rect x="15.0034%" y="1029" width="0.1835%" height="15" fill="rgb(225,174,27)" fg:x="654" fg:w="8"/><text x="15.2534%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.18%)</title><rect x="15.0034%" y="1013" width="0.1835%" height="15" fill="rgb(230,96,26)" fg:x="654" fg:w="8"/><text x="15.2534%" y="1023.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 0.18%)</title><rect x="15.0034%" y="997" width="0.1835%" height="15" fill="rgb(232,10,30)" fg:x="654" fg:w="8"/><text x="15.2534%" y="1007.50"></text></g><g><title>y2021::d11::main::p01::{{closure}} (8 samples, 0.18%)</title><rect x="15.0034%" y="981" width="0.1835%" height="15" fill="rgb(222,8,50)" fg:x="654" fg:w="8"/><text x="15.2534%" y="991.50"></text></g><g><title>y2021::d11::main::cycle_step (8 samples, 0.18%)</title><rect x="15.0034%" y="965" width="0.1835%" height="15" fill="rgb(213,81,27)" fg:x="654" fg:w="8"/><text x="15.2534%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.18%)</title><rect x="15.0034%" y="949" width="0.1835%" height="15" fill="rgb(245,50,10)" fg:x="654" fg:w="8"/><text x="15.2534%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.18%)</title><rect x="15.0034%" y="933" width="0.1835%" height="15" fill="rgb(216,100,18)" fg:x="654" fg:w="8"/><text x="15.2534%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.18%)</title><rect x="15.0034%" y="917" width="0.1835%" height="15" fill="rgb(236,147,54)" fg:x="654" fg:w="8"/><text x="15.2534%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.18%)</title><rect x="15.0034%" y="901" width="0.1835%" height="15" fill="rgb(205,143,26)" fg:x="654" fg:w="8"/><text x="15.2534%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="15.1181%" y="885" width="0.0688%" height="15" fill="rgb(236,26,9)" fg:x="659" fg:w="3"/><text x="15.3681%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="15.1181%" y="869" width="0.0688%" height="15" fill="rgb(221,165,53)" fg:x="659" fg:w="3"/><text x="15.3681%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.07%)</title><rect x="15.1181%" y="853" width="0.0688%" height="15" fill="rgb(214,110,17)" fg:x="659" fg:w="3"/><text x="15.3681%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.07%)</title><rect x="15.1181%" y="837" width="0.0688%" height="15" fill="rgb(237,197,12)" fg:x="659" fg:w="3"/><text x="15.3681%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.07%)</title><rect x="15.1181%" y="821" width="0.0688%" height="15" fill="rgb(205,84,17)" fg:x="659" fg:w="3"/><text x="15.3681%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.07%)</title><rect x="15.1181%" y="805" width="0.0688%" height="15" fill="rgb(237,18,45)" fg:x="659" fg:w="3"/><text x="15.3681%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (3 samples, 0.07%)</title><rect x="15.1181%" y="789" width="0.0688%" height="15" fill="rgb(221,87,14)" fg:x="659" fg:w="3"/><text x="15.3681%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.07%)</title><rect x="15.1181%" y="773" width="0.0688%" height="15" fill="rgb(238,186,15)" fg:x="659" fg:w="3"/><text x="15.3681%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.07%)</title><rect x="15.1181%" y="757" width="0.0688%" height="15" fill="rgb(208,115,11)" fg:x="659" fg:w="3"/><text x="15.3681%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="15.1181%" y="741" width="0.0688%" height="15" fill="rgb(254,175,0)" fg:x="659" fg:w="3"/><text x="15.3681%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.07%)</title><rect x="15.1181%" y="725" width="0.0688%" height="15" fill="rgb(227,24,42)" fg:x="659" fg:w="3"/><text x="15.3681%" y="735.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.07%)</title><rect x="15.1181%" y="709" width="0.0688%" height="15" fill="rgb(223,211,37)" fg:x="659" fg:w="3"/><text x="15.3681%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (3 samples, 0.07%)</title><rect x="15.1181%" y="693" width="0.0688%" height="15" fill="rgb(235,49,27)" fg:x="659" fg:w="3"/><text x="15.3681%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="15.1181%" y="677" width="0.0688%" height="15" fill="rgb(254,97,51)" fg:x="659" fg:w="3"/><text x="15.3681%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="15.1411%" y="661" width="0.0459%" height="15" fill="rgb(249,51,40)" fg:x="660" fg:w="2"/><text x="15.3911%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.05%)</title><rect x="15.1411%" y="645" width="0.0459%" height="15" fill="rgb(210,128,45)" fg:x="660" fg:w="2"/><text x="15.3911%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="15.1411%" y="629" width="0.0459%" height="15" fill="rgb(224,137,50)" fg:x="660" fg:w="2"/><text x="15.3911%" y="639.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (2 samples, 0.05%)</title><rect x="15.1411%" y="613" width="0.0459%" height="15" fill="rgb(242,15,9)" fg:x="660" fg:w="2"/><text x="15.3911%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.05%)</title><rect x="15.1411%" y="597" width="0.0459%" height="15" fill="rgb(233,187,41)" fg:x="660" fg:w="2"/><text x="15.3911%" y="607.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.05%)</title><rect x="15.1411%" y="581" width="0.0459%" height="15" fill="rgb(227,2,29)" fg:x="660" fg:w="2"/><text x="15.3911%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2 samples, 0.05%)</title><rect x="15.1411%" y="565" width="0.0459%" height="15" fill="rgb(222,70,3)" fg:x="660" fg:w="2"/><text x="15.3911%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="15.1411%" y="549" width="0.0459%" height="15" fill="rgb(213,11,42)" fg:x="660" fg:w="2"/><text x="15.3911%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;y2021::d11::point3d::Point3d&gt;&gt; (1 samples, 0.02%)</title><rect x="15.1870%" y="1061" width="0.0229%" height="15" fill="rgb(225,150,9)" fg:x="662" fg:w="1"/><text x="15.4370%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;y2021::d11::point3d::Point3d&gt;&gt; (1 samples, 0.02%)</title><rect x="15.1870%" y="1045" width="0.0229%" height="15" fill="rgb(230,162,45)" fg:x="662" fg:w="1"/><text x="15.4370%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="15.1870%" y="1029" width="0.0229%" height="15" fill="rgb(222,14,52)" fg:x="662" fg:w="1"/><text x="15.4370%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="15.1870%" y="1013" width="0.0229%" height="15" fill="rgb(254,198,14)" fg:x="662" fg:w="1"/><text x="15.4370%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="15.1870%" y="997" width="0.0229%" height="15" fill="rgb(220,217,30)" fg:x="662" fg:w="1"/><text x="15.4370%" y="1007.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="15.1870%" y="981" width="0.0229%" height="15" fill="rgb(215,146,41)" fg:x="662" fg:w="1"/><text x="15.4370%" y="991.50"></text></g><g><title>y2021::d11::chart::Chart::reset (1 samples, 0.02%)</title><rect x="15.2099%" y="1061" width="0.0229%" height="15" fill="rgb(217,27,36)" fg:x="663" fg:w="1"/><text x="15.4599%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.02%)</title><rect x="15.2099%" y="1045" width="0.0229%" height="15" fill="rgb(219,218,39)" fg:x="663" fg:w="1"/><text x="15.4599%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="15.2099%" y="1029" width="0.0229%" height="15" fill="rgb(219,4,42)" fg:x="663" fg:w="1"/><text x="15.4599%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="15.2099%" y="1013" width="0.0229%" height="15" fill="rgb(249,119,36)" fg:x="663" fg:w="1"/><text x="15.4599%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="15.2099%" y="997" width="0.0229%" height="15" fill="rgb(209,23,33)" fg:x="663" fg:w="1"/><text x="15.4599%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="15.2099%" y="981" width="0.0229%" height="15" fill="rgb(211,10,0)" fg:x="663" fg:w="1"/><text x="15.4599%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="15.2099%" y="965" width="0.0229%" height="15" fill="rgb(208,99,37)" fg:x="663" fg:w="1"/><text x="15.4599%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="15.2099%" y="949" width="0.0229%" height="15" fill="rgb(213,132,31)" fg:x="663" fg:w="1"/><text x="15.4599%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="15.2099%" y="933" width="0.0229%" height="15" fill="rgb(243,129,40)" fg:x="663" fg:w="1"/><text x="15.4599%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="15.2099%" y="917" width="0.0229%" height="15" fill="rgb(210,66,33)" fg:x="663" fg:w="1"/><text x="15.4599%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="15.2099%" y="901" width="0.0229%" height="15" fill="rgb(209,189,4)" fg:x="663" fg:w="1"/><text x="15.4599%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="15.2099%" y="885" width="0.0229%" height="15" fill="rgb(214,107,37)" fg:x="663" fg:w="1"/><text x="15.4599%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (1 samples, 0.02%)</title><rect x="15.2099%" y="869" width="0.0229%" height="15" fill="rgb(245,88,54)" fg:x="663" fg:w="1"/><text x="15.4599%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="15.2099%" y="853" width="0.0229%" height="15" fill="rgb(205,146,20)" fg:x="663" fg:w="1"/><text x="15.4599%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="15.2099%" y="837" width="0.0229%" height="15" fill="rgb(220,161,25)" fg:x="663" fg:w="1"/><text x="15.4599%" y="847.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1 samples, 0.02%)</title><rect x="15.2099%" y="821" width="0.0229%" height="15" fill="rgb(215,152,15)" fg:x="663" fg:w="1"/><text x="15.4599%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.14%)</title><rect x="15.2558%" y="869" width="0.1376%" height="15" fill="rgb(233,192,44)" fg:x="665" fg:w="6"/><text x="15.5058%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (6 samples, 0.14%)</title><rect x="15.2558%" y="853" width="0.1376%" height="15" fill="rgb(240,170,46)" fg:x="665" fg:w="6"/><text x="15.5058%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.14%)</title><rect x="15.2558%" y="837" width="0.1376%" height="15" fill="rgb(207,104,33)" fg:x="665" fg:w="6"/><text x="15.5058%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.14%)</title><rect x="15.2558%" y="821" width="0.1376%" height="15" fill="rgb(219,21,39)" fg:x="665" fg:w="6"/><text x="15.5058%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.14%)</title><rect x="15.2558%" y="805" width="0.1376%" height="15" fill="rgb(214,133,29)" fg:x="665" fg:w="6"/><text x="15.5058%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.14%)</title><rect x="15.2558%" y="789" width="0.1376%" height="15" fill="rgb(226,93,6)" fg:x="665" fg:w="6"/><text x="15.5058%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.14%)</title><rect x="15.2558%" y="773" width="0.1376%" height="15" fill="rgb(252,222,34)" fg:x="665" fg:w="6"/><text x="15.5058%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (6 samples, 0.14%)</title><rect x="15.2558%" y="757" width="0.1376%" height="15" fill="rgb(252,92,48)" fg:x="665" fg:w="6"/><text x="15.5058%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.14%)</title><rect x="15.2558%" y="741" width="0.1376%" height="15" fill="rgb(245,223,24)" fg:x="665" fg:w="6"/><text x="15.5058%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.14%)</title><rect x="15.2558%" y="725" width="0.1376%" height="15" fill="rgb(205,176,3)" fg:x="665" fg:w="6"/><text x="15.5058%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (6 samples, 0.14%)</title><rect x="15.2558%" y="709" width="0.1376%" height="15" fill="rgb(235,151,15)" fg:x="665" fg:w="6"/><text x="15.5058%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.09%)</title><rect x="15.3017%" y="693" width="0.0918%" height="15" fill="rgb(237,209,11)" fg:x="667" fg:w="4"/><text x="15.5517%" y="703.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (4 samples, 0.09%)</title><rect x="15.3017%" y="677" width="0.0918%" height="15" fill="rgb(243,227,24)" fg:x="667" fg:w="4"/><text x="15.5517%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (4 samples, 0.09%)</title><rect x="15.3017%" y="661" width="0.0918%" height="15" fill="rgb(239,193,16)" fg:x="667" fg:w="4"/><text x="15.5517%" y="671.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (4 samples, 0.09%)</title><rect x="15.3017%" y="645" width="0.0918%" height="15" fill="rgb(231,27,9)" fg:x="667" fg:w="4"/><text x="15.5517%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (4 samples, 0.09%)</title><rect x="15.3017%" y="629" width="0.0918%" height="15" fill="rgb(219,169,10)" fg:x="667" fg:w="4"/><text x="15.5517%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="15.3934%" y="853" width="0.0229%" height="15" fill="rgb(244,229,43)" fg:x="671" fg:w="1"/><text x="15.6434%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.21%)</title><rect x="15.2558%" y="933" width="0.2065%" height="15" fill="rgb(254,38,20)" fg:x="665" fg:w="9"/><text x="15.5058%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (9 samples, 0.21%)</title><rect x="15.2558%" y="917" width="0.2065%" height="15" fill="rgb(250,47,30)" fg:x="665" fg:w="9"/><text x="15.5058%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.21%)</title><rect x="15.2558%" y="901" width="0.2065%" height="15" fill="rgb(224,124,36)" fg:x="665" fg:w="9"/><text x="15.5058%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.21%)</title><rect x="15.2558%" y="885" width="0.2065%" height="15" fill="rgb(246,68,51)" fg:x="665" fg:w="9"/><text x="15.5058%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="15.3934%" y="869" width="0.0688%" height="15" fill="rgb(253,43,49)" fg:x="671" fg:w="3"/><text x="15.6434%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="15.4164%" y="853" width="0.0459%" height="15" fill="rgb(219,54,36)" fg:x="672" fg:w="2"/><text x="15.6664%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.05%)</title><rect x="15.4164%" y="837" width="0.0459%" height="15" fill="rgb(227,133,34)" fg:x="672" fg:w="2"/><text x="15.6664%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="15.4164%" y="821" width="0.0459%" height="15" fill="rgb(247,227,15)" fg:x="672" fg:w="2"/><text x="15.6664%" y="831.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (2 samples, 0.05%)</title><rect x="15.4164%" y="805" width="0.0459%" height="15" fill="rgb(229,96,14)" fg:x="672" fg:w="2"/><text x="15.6664%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.05%)</title><rect x="15.4164%" y="789" width="0.0459%" height="15" fill="rgb(220,79,17)" fg:x="672" fg:w="2"/><text x="15.6664%" y="799.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.05%)</title><rect x="15.4164%" y="773" width="0.0459%" height="15" fill="rgb(205,131,53)" fg:x="672" fg:w="2"/><text x="15.6664%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2 samples, 0.05%)</title><rect x="15.4164%" y="757" width="0.0459%" height="15" fill="rgb(209,50,29)" fg:x="672" fg:w="2"/><text x="15.6664%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.23%)</title><rect x="15.2558%" y="949" width="0.2294%" height="15" fill="rgb(245,86,46)" fg:x="665" fg:w="10"/><text x="15.5058%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="15.4623%" y="933" width="0.0229%" height="15" fill="rgb(235,66,46)" fg:x="674" fg:w="1"/><text x="15.7123%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="15.4623%" y="917" width="0.0229%" height="15" fill="rgb(232,148,31)" fg:x="674" fg:w="1"/><text x="15.7123%" y="927.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (1 samples, 0.02%)</title><rect x="15.4623%" y="901" width="0.0229%" height="15" fill="rgb(217,149,8)" fg:x="674" fg:w="1"/><text x="15.7123%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="15.5081%" y="789" width="0.0229%" height="15" fill="rgb(209,183,11)" fg:x="676" fg:w="1"/><text x="15.7581%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 0.30%)</title><rect x="15.2558%" y="981" width="0.2982%" height="15" fill="rgb(208,55,20)" fg:x="665" fg:w="13"/><text x="15.5058%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (13 samples, 0.30%)</title><rect x="15.2558%" y="965" width="0.2982%" height="15" fill="rgb(218,39,14)" fg:x="665" fg:w="13"/><text x="15.5058%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.07%)</title><rect x="15.4852%" y="949" width="0.0688%" height="15" fill="rgb(216,169,33)" fg:x="675" fg:w="3"/><text x="15.7352%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.07%)</title><rect x="15.4852%" y="933" width="0.0688%" height="15" fill="rgb(233,80,24)" fg:x="675" fg:w="3"/><text x="15.7352%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.07%)</title><rect x="15.4852%" y="917" width="0.0688%" height="15" fill="rgb(213,179,31)" fg:x="675" fg:w="3"/><text x="15.7352%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.07%)</title><rect x="15.4852%" y="901" width="0.0688%" height="15" fill="rgb(209,19,5)" fg:x="675" fg:w="3"/><text x="15.7352%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="15.5081%" y="885" width="0.0459%" height="15" fill="rgb(219,18,35)" fg:x="676" fg:w="2"/><text x="15.7581%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.05%)</title><rect x="15.5081%" y="869" width="0.0459%" height="15" fill="rgb(209,169,16)" fg:x="676" fg:w="2"/><text x="15.7581%" y="879.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.05%)</title><rect x="15.5081%" y="853" width="0.0459%" height="15" fill="rgb(245,90,51)" fg:x="676" fg:w="2"/><text x="15.7581%" y="863.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.05%)</title><rect x="15.5081%" y="837" width="0.0459%" height="15" fill="rgb(220,99,45)" fg:x="676" fg:w="2"/><text x="15.7581%" y="847.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.05%)</title><rect x="15.5081%" y="821" width="0.0459%" height="15" fill="rgb(249,89,25)" fg:x="676" fg:w="2"/><text x="15.7581%" y="831.50"></text></g><g><title>_int_realloc (2 samples, 0.05%)</title><rect x="15.5081%" y="805" width="0.0459%" height="15" fill="rgb(239,193,0)" fg:x="676" fg:w="2"/><text x="15.7581%" y="815.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="15.5311%" y="789" width="0.0229%" height="15" fill="rgb(231,126,1)" fg:x="677" fg:w="1"/><text x="15.7811%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="15.5540%" y="757" width="0.0459%" height="15" fill="rgb(243,166,3)" fg:x="678" fg:w="2"/><text x="15.8040%" y="767.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="15.5770%" y="741" width="0.0229%" height="15" fill="rgb(223,22,34)" fg:x="679" fg:w="1"/><text x="15.8270%" y="751.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="15.5770%" y="725" width="0.0229%" height="15" fill="rgb(251,52,51)" fg:x="679" fg:w="1"/><text x="15.8270%" y="735.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="15.5999%" y="725" width="0.0229%" height="15" fill="rgb(221,165,28)" fg:x="680" fg:w="1"/><text x="15.8499%" y="735.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="15.5999%" y="709" width="0.0229%" height="15" fill="rgb(218,121,47)" fg:x="680" fg:w="1"/><text x="15.8499%" y="719.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="15.5999%" y="693" width="0.0229%" height="15" fill="rgb(209,120,9)" fg:x="680" fg:w="1"/><text x="15.8499%" y="703.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="15.5999%" y="677" width="0.0229%" height="15" fill="rgb(236,68,12)" fg:x="680" fg:w="1"/><text x="15.8499%" y="687.50"></text></g><g><title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="15.5999%" y="661" width="0.0229%" height="15" fill="rgb(225,194,26)" fg:x="680" fg:w="1"/><text x="15.8499%" y="671.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="15.5999%" y="645" width="0.0229%" height="15" fill="rgb(231,84,39)" fg:x="680" fg:w="1"/><text x="15.8499%" y="655.50"></text></g><g><title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="15.5999%" y="629" width="0.0229%" height="15" fill="rgb(210,11,45)" fg:x="680" fg:w="1"/><text x="15.8499%" y="639.50"></text></g><g><title>update_blocked_averages (1 samples, 0.02%)</title><rect x="15.5999%" y="613" width="0.0229%" height="15" fill="rgb(224,54,52)" fg:x="680" fg:w="1"/><text x="15.8499%" y="623.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="15.5999%" y="597" width="0.0229%" height="15" fill="rgb(238,102,14)" fg:x="680" fg:w="1"/><text x="15.8499%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.44%)</title><rect x="15.2329%" y="1045" width="0.4359%" height="15" fill="rgb(243,160,52)" fg:x="664" fg:w="19"/><text x="15.4829%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.44%)</title><rect x="15.2329%" y="1029" width="0.4359%" height="15" fill="rgb(216,114,19)" fg:x="664" fg:w="19"/><text x="15.4829%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.44%)</title><rect x="15.2329%" y="1013" width="0.4359%" height="15" fill="rgb(244,166,37)" fg:x="664" fg:w="19"/><text x="15.4829%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (18 samples, 0.41%)</title><rect x="15.2558%" y="997" width="0.4129%" height="15" fill="rgb(246,29,44)" fg:x="665" fg:w="18"/><text x="15.5058%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="15.5540%" y="981" width="0.1147%" height="15" fill="rgb(215,56,53)" fg:x="678" fg:w="5"/><text x="15.8040%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="15.5540%" y="965" width="0.1147%" height="15" fill="rgb(217,60,2)" fg:x="678" fg:w="5"/><text x="15.8040%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (5 samples, 0.11%)</title><rect x="15.5540%" y="949" width="0.1147%" height="15" fill="rgb(207,26,24)" fg:x="678" fg:w="5"/><text x="15.8040%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.11%)</title><rect x="15.5540%" y="933" width="0.1147%" height="15" fill="rgb(252,210,15)" fg:x="678" fg:w="5"/><text x="15.8040%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.11%)</title><rect x="15.5540%" y="917" width="0.1147%" height="15" fill="rgb(253,209,26)" fg:x="678" fg:w="5"/><text x="15.8040%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.11%)</title><rect x="15.5540%" y="901" width="0.1147%" height="15" fill="rgb(238,170,14)" fg:x="678" fg:w="5"/><text x="15.8040%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (5 samples, 0.11%)</title><rect x="15.5540%" y="885" width="0.1147%" height="15" fill="rgb(216,178,15)" fg:x="678" fg:w="5"/><text x="15.8040%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.11%)</title><rect x="15.5540%" y="869" width="0.1147%" height="15" fill="rgb(250,197,2)" fg:x="678" fg:w="5"/><text x="15.8040%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.11%)</title><rect x="15.5540%" y="853" width="0.1147%" height="15" fill="rgb(212,70,42)" fg:x="678" fg:w="5"/><text x="15.8040%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.11%)</title><rect x="15.5540%" y="837" width="0.1147%" height="15" fill="rgb(227,213,9)" fg:x="678" fg:w="5"/><text x="15.8040%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.11%)</title><rect x="15.5540%" y="821" width="0.1147%" height="15" fill="rgb(245,99,25)" fg:x="678" fg:w="5"/><text x="15.8040%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.11%)</title><rect x="15.5540%" y="805" width="0.1147%" height="15" fill="rgb(250,82,29)" fg:x="678" fg:w="5"/><text x="15.8040%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (5 samples, 0.11%)</title><rect x="15.5540%" y="789" width="0.1147%" height="15" fill="rgb(241,226,54)" fg:x="678" fg:w="5"/><text x="15.8040%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.11%)</title><rect x="15.5540%" y="773" width="0.1147%" height="15" fill="rgb(221,99,41)" fg:x="678" fg:w="5"/><text x="15.8040%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.07%)</title><rect x="15.5999%" y="757" width="0.0688%" height="15" fill="rgb(213,90,21)" fg:x="680" fg:w="3"/><text x="15.8499%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.07%)</title><rect x="15.5999%" y="741" width="0.0688%" height="15" fill="rgb(205,208,24)" fg:x="680" fg:w="3"/><text x="15.8499%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="15.6228%" y="725" width="0.0459%" height="15" fill="rgb(246,31,12)" fg:x="681" fg:w="2"/><text x="15.8728%" y="735.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (2 samples, 0.05%)</title><rect x="15.6228%" y="709" width="0.0459%" height="15" fill="rgb(213,154,6)" fg:x="681" fg:w="2"/><text x="15.8728%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.05%)</title><rect x="15.6228%" y="693" width="0.0459%" height="15" fill="rgb(222,163,29)" fg:x="681" fg:w="2"/><text x="15.8728%" y="703.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.05%)</title><rect x="15.6228%" y="677" width="0.0459%" height="15" fill="rgb(227,201,8)" fg:x="681" fg:w="2"/><text x="15.8728%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2 samples, 0.05%)</title><rect x="15.6228%" y="661" width="0.0459%" height="15" fill="rgb(233,9,32)" fg:x="681" fg:w="2"/><text x="15.8728%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="15.6458%" y="645" width="0.0229%" height="15" fill="rgb(217,54,24)" fg:x="682" fg:w="1"/><text x="15.8958%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="15.6687%" y="965" width="0.0229%" height="15" fill="rgb(235,192,0)" fg:x="683" fg:w="1"/><text x="15.9187%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="15.6687%" y="949" width="0.0229%" height="15" fill="rgb(235,45,9)" fg:x="683" fg:w="1"/><text x="15.9187%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="15.6687%" y="933" width="0.0229%" height="15" fill="rgb(246,42,40)" fg:x="683" fg:w="1"/><text x="15.9187%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="15.6687%" y="917" width="0.0229%" height="15" fill="rgb(248,111,24)" fg:x="683" fg:w="1"/><text x="15.9187%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="15.6687%" y="901" width="0.0229%" height="15" fill="rgb(249,65,22)" fg:x="683" fg:w="1"/><text x="15.9187%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="15.6687%" y="885" width="0.0229%" height="15" fill="rgb(238,111,51)" fg:x="683" fg:w="1"/><text x="15.9187%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="15.6687%" y="869" width="0.0229%" height="15" fill="rgb(250,118,22)" fg:x="683" fg:w="1"/><text x="15.9187%" y="879.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="15.6687%" y="853" width="0.0229%" height="15" fill="rgb(234,84,26)" fg:x="683" fg:w="1"/><text x="15.9187%" y="863.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="15.6687%" y="837" width="0.0229%" height="15" fill="rgb(243,172,12)" fg:x="683" fg:w="1"/><text x="15.9187%" y="847.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="15.6687%" y="821" width="0.0229%" height="15" fill="rgb(236,150,49)" fg:x="683" fg:w="1"/><text x="15.9187%" y="831.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="15.6687%" y="805" width="0.0229%" height="15" fill="rgb(225,197,26)" fg:x="683" fg:w="1"/><text x="15.9187%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="15.6687%" y="789" width="0.0229%" height="15" fill="rgb(214,17,42)" fg:x="683" fg:w="1"/><text x="15.9187%" y="799.50"></text></g><g><title>y2021::d11::main::run (31 samples, 0.71%)</title><rect x="15.0034%" y="1093" width="0.7112%" height="15" fill="rgb(224,165,40)" fg:x="654" fg:w="31"/><text x="15.2534%" y="1103.50"></text></g><g><title>y2021::d11::main::p02 (23 samples, 0.53%)</title><rect x="15.1870%" y="1077" width="0.5276%" height="15" fill="rgb(246,100,4)" fg:x="662" fg:w="23"/><text x="15.4370%" y="1087.50"></text></g><g><title>y2021::d11::main::cycle_step (21 samples, 0.48%)</title><rect x="15.2329%" y="1061" width="0.4818%" height="15" fill="rgb(222,103,0)" fg:x="664" fg:w="21"/><text x="15.4829%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.05%)</title><rect x="15.6687%" y="1045" width="0.0459%" height="15" fill="rgb(227,189,26)" fg:x="683" fg:w="2"/><text x="15.9187%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="15.6687%" y="1029" width="0.0459%" height="15" fill="rgb(214,202,17)" fg:x="683" fg:w="2"/><text x="15.9187%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="15.6687%" y="1013" width="0.0459%" height="15" fill="rgb(229,111,3)" fg:x="683" fg:w="2"/><text x="15.9187%" y="1023.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.05%)</title><rect x="15.6687%" y="997" width="0.0459%" height="15" fill="rgb(229,172,15)" fg:x="683" fg:w="2"/><text x="15.9187%" y="1007.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (2 samples, 0.05%)</title><rect x="15.6687%" y="981" width="0.0459%" height="15" fill="rgb(230,224,35)" fg:x="683" fg:w="2"/><text x="15.9187%" y="991.50"></text></g><g><title>y2021::d11::main::flash_point (1 samples, 0.02%)</title><rect x="15.6917%" y="965" width="0.0229%" height="15" fill="rgb(251,141,6)" fg:x="684" fg:w="1"/><text x="15.9417%" y="975.50"></text></g><g><title>y2021::d11::chart::Chart::at_pos (1 samples, 0.02%)</title><rect x="15.6917%" y="949" width="0.0229%" height="15" fill="rgb(225,208,6)" fg:x="684" fg:w="1"/><text x="15.9417%" y="959.50"></text></g><g><title>std::io::stdio::_print (1 samples, 0.02%)</title><rect x="15.7146%" y="1077" width="0.0229%" height="15" fill="rgb(246,181,16)" fg:x="685" fg:w="1"/><text x="15.9646%" y="1087.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.02%)</title><rect x="15.7146%" y="1061" width="0.0229%" height="15" fill="rgb(227,129,36)" fg:x="685" fg:w="1"/><text x="15.9646%" y="1071.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="15.7146%" y="1045" width="0.0229%" height="15" fill="rgb(248,117,24)" fg:x="685" fg:w="1"/><text x="15.9646%" y="1055.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.02%)</title><rect x="15.7146%" y="1029" width="0.0229%" height="15" fill="rgb(214,185,35)" fg:x="685" fg:w="1"/><text x="15.9646%" y="1039.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.02%)</title><rect x="15.7146%" y="1013" width="0.0229%" height="15" fill="rgb(236,150,34)" fg:x="685" fg:w="1"/><text x="15.9646%" y="1023.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="15.7146%" y="997" width="0.0229%" height="15" fill="rgb(243,228,27)" fg:x="685" fg:w="1"/><text x="15.9646%" y="1007.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="15.7146%" y="981" width="0.0229%" height="15" fill="rgb(245,77,44)" fg:x="685" fg:w="1"/><text x="15.9646%" y="991.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="15.7146%" y="965" width="0.0229%" height="15" fill="rgb(235,214,42)" fg:x="685" fg:w="1"/><text x="15.9646%" y="975.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="15.7146%" y="949" width="0.0229%" height="15" fill="rgb(221,74,3)" fg:x="685" fg:w="1"/><text x="15.9646%" y="959.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.02%)</title><rect x="15.7146%" y="933" width="0.0229%" height="15" fill="rgb(206,121,29)" fg:x="685" fg:w="1"/><text x="15.9646%" y="943.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.02%)</title><rect x="15.7146%" y="917" width="0.0229%" height="15" fill="rgb(249,131,53)" fg:x="685" fg:w="1"/><text x="15.9646%" y="927.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 0.02%)</title><rect x="15.7146%" y="901" width="0.0229%" height="15" fill="rgb(236,170,29)" fg:x="685" fg:w="1"/><text x="15.9646%" y="911.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.02%)</title><rect x="15.7146%" y="885" width="0.0229%" height="15" fill="rgb(247,96,15)" fg:x="685" fg:w="1"/><text x="15.9646%" y="895.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.02%)</title><rect x="15.7146%" y="869" width="0.0229%" height="15" fill="rgb(211,210,7)" fg:x="685" fg:w="1"/><text x="15.9646%" y="879.50"></text></g><g><title>__libc_write (1 samples, 0.02%)</title><rect x="15.7146%" y="853" width="0.0229%" height="15" fill="rgb(240,88,50)" fg:x="685" fg:w="1"/><text x="15.9646%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="15.7146%" y="837" width="0.0229%" height="15" fill="rgb(209,229,26)" fg:x="685" fg:w="1"/><text x="15.9646%" y="847.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="15.7146%" y="821" width="0.0229%" height="15" fill="rgb(210,68,23)" fg:x="685" fg:w="1"/><text x="15.9646%" y="831.50"></text></g><g><title>__x64_sys_write (1 samples, 0.02%)</title><rect x="15.7146%" y="805" width="0.0229%" height="15" fill="rgb(229,180,13)" fg:x="685" fg:w="1"/><text x="15.9646%" y="815.50"></text></g><g><title>ksys_write (1 samples, 0.02%)</title><rect x="15.7146%" y="789" width="0.0229%" height="15" fill="rgb(236,53,44)" fg:x="685" fg:w="1"/><text x="15.9646%" y="799.50"></text></g><g><title>vfs_write (1 samples, 0.02%)</title><rect x="15.7146%" y="773" width="0.0229%" height="15" fill="rgb(244,214,29)" fg:x="685" fg:w="1"/><text x="15.9646%" y="783.50"></text></g><g><title>new_sync_write (1 samples, 0.02%)</title><rect x="15.7146%" y="757" width="0.0229%" height="15" fill="rgb(220,75,29)" fg:x="685" fg:w="1"/><text x="15.9646%" y="767.50"></text></g><g><title>tty_write (1 samples, 0.02%)</title><rect x="15.7146%" y="741" width="0.0229%" height="15" fill="rgb(214,183,37)" fg:x="685" fg:w="1"/><text x="15.9646%" y="751.50"></text></g><g><title>file_tty_write.isra.0 (1 samples, 0.02%)</title><rect x="15.7146%" y="725" width="0.0229%" height="15" fill="rgb(239,117,29)" fg:x="685" fg:w="1"/><text x="15.9646%" y="735.50"></text></g><g><title>n_tty_write (1 samples, 0.02%)</title><rect x="15.7146%" y="709" width="0.0229%" height="15" fill="rgb(237,171,35)" fg:x="685" fg:w="1"/><text x="15.9646%" y="719.50"></text></g><g><title>remove_wait_queue (1 samples, 0.02%)</title><rect x="15.7146%" y="693" width="0.0229%" height="15" fill="rgb(229,178,53)" fg:x="685" fg:w="1"/><text x="15.9646%" y="703.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="15.7146%" y="677" width="0.0229%" height="15" fill="rgb(210,102,19)" fg:x="685" fg:w="1"/><text x="15.9646%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1 samples, 0.02%)</title><rect x="15.7376%" y="1061" width="0.0229%" height="15" fill="rgb(235,127,22)" fg:x="686" fg:w="1"/><text x="15.9876%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.02%)</title><rect x="15.7376%" y="1045" width="0.0229%" height="15" fill="rgb(244,31,31)" fg:x="686" fg:w="1"/><text x="15.9876%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.02%)</title><rect x="15.7376%" y="1029" width="0.0229%" height="15" fill="rgb(231,43,21)" fg:x="686" fg:w="1"/><text x="15.9876%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1 samples, 0.02%)</title><rect x="15.7376%" y="1013" width="0.0229%" height="15" fill="rgb(217,131,35)" fg:x="686" fg:w="1"/><text x="15.9876%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="15.7376%" y="997" width="0.0229%" height="15" fill="rgb(221,149,4)" fg:x="686" fg:w="1"/><text x="15.9876%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.02%)</title><rect x="15.7376%" y="981" width="0.0229%" height="15" fill="rgb(232,170,28)" fg:x="686" fg:w="1"/><text x="15.9876%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.02%)</title><rect x="15.7376%" y="965" width="0.0229%" height="15" fill="rgb(238,56,10)" fg:x="686" fg:w="1"/><text x="15.9876%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.02%)</title><rect x="15.7376%" y="949" width="0.0229%" height="15" fill="rgb(235,196,14)" fg:x="686" fg:w="1"/><text x="15.9876%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1 samples, 0.02%)</title><rect x="15.7376%" y="933" width="0.0229%" height="15" fill="rgb(216,45,48)" fg:x="686" fg:w="1"/><text x="15.9876%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="15.7376%" y="917" width="0.0229%" height="15" fill="rgb(238,213,17)" fg:x="686" fg:w="1"/><text x="15.9876%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="15.7376%" y="901" width="0.0229%" height="15" fill="rgb(212,13,2)" fg:x="686" fg:w="1"/><text x="15.9876%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="15.7376%" y="885" width="0.0229%" height="15" fill="rgb(240,114,20)" fg:x="686" fg:w="1"/><text x="15.9876%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="15.7376%" y="869" width="0.0229%" height="15" fill="rgb(228,41,40)" fg:x="686" fg:w="1"/><text x="15.9876%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="15.7376%" y="853" width="0.0229%" height="15" fill="rgb(244,132,35)" fg:x="686" fg:w="1"/><text x="15.9876%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="15.7376%" y="837" width="0.0229%" height="15" fill="rgb(253,189,4)" fg:x="686" fg:w="1"/><text x="15.9876%" y="847.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="15.7376%" y="821" width="0.0229%" height="15" fill="rgb(224,37,19)" fg:x="686" fg:w="1"/><text x="15.9876%" y="831.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.02%)</title><rect x="15.7605%" y="981" width="0.0229%" height="15" fill="rgb(235,223,18)" fg:x="687" fg:w="1"/><text x="16.0105%" y="991.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.02%)</title><rect x="15.7605%" y="965" width="0.0229%" height="15" fill="rgb(235,163,25)" fg:x="687" fg:w="1"/><text x="16.0105%" y="975.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="15.7605%" y="949" width="0.0229%" height="15" fill="rgb(217,145,28)" fg:x="687" fg:w="1"/><text x="16.0105%" y="959.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="15.7605%" y="933" width="0.0229%" height="15" fill="rgb(223,223,32)" fg:x="687" fg:w="1"/><text x="16.0105%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="15.7605%" y="917" width="0.0229%" height="15" fill="rgb(227,189,39)" fg:x="687" fg:w="1"/><text x="16.0105%" y="927.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.02%)</title><rect x="15.7605%" y="901" width="0.0229%" height="15" fill="rgb(248,10,22)" fg:x="687" fg:w="1"/><text x="16.0105%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="15.7605%" y="885" width="0.0229%" height="15" fill="rgb(248,46,39)" fg:x="687" fg:w="1"/><text x="16.0105%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="15.7605%" y="869" width="0.0229%" height="15" fill="rgb(248,113,48)" fg:x="687" fg:w="1"/><text x="16.0105%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="15.7605%" y="853" width="0.0229%" height="15" fill="rgb(245,16,25)" fg:x="687" fg:w="1"/><text x="16.0105%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="15.7605%" y="837" width="0.0229%" height="15" fill="rgb(249,152,16)" fg:x="687" fg:w="1"/><text x="16.0105%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="15.7605%" y="821" width="0.0229%" height="15" fill="rgb(250,16,1)" fg:x="687" fg:w="1"/><text x="16.0105%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="15.7605%" y="805" width="0.0229%" height="15" fill="rgb(249,138,3)" fg:x="687" fg:w="1"/><text x="16.0105%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="15.7605%" y="789" width="0.0229%" height="15" fill="rgb(227,71,41)" fg:x="687" fg:w="1"/><text x="16.0105%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="15.7605%" y="773" width="0.0229%" height="15" fill="rgb(209,184,23)" fg:x="687" fg:w="1"/><text x="16.0105%" y="783.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="15.7605%" y="757" width="0.0229%" height="15" fill="rgb(223,215,31)" fg:x="687" fg:w="1"/><text x="16.0105%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="15.7834%" y="965" width="0.0229%" height="15" fill="rgb(210,146,28)" fg:x="688" fg:w="1"/><text x="16.0334%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.02%)</title><rect x="15.7834%" y="949" width="0.0229%" height="15" fill="rgb(209,183,41)" fg:x="688" fg:w="1"/><text x="16.0334%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="15.7834%" y="933" width="0.0229%" height="15" fill="rgb(209,224,45)" fg:x="688" fg:w="1"/><text x="16.0334%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="15.7834%" y="917" width="0.0229%" height="15" fill="rgb(224,209,51)" fg:x="688" fg:w="1"/><text x="16.0334%" y="927.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.02%)</title><rect x="15.7834%" y="901" width="0.0229%" height="15" fill="rgb(223,17,39)" fg:x="688" fg:w="1"/><text x="16.0334%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.02%)</title><rect x="15.7834%" y="885" width="0.0229%" height="15" fill="rgb(234,204,37)" fg:x="688" fg:w="1"/><text x="16.0334%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="15.7834%" y="869" width="0.0229%" height="15" fill="rgb(236,120,5)" fg:x="688" fg:w="1"/><text x="16.0334%" y="879.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.02%)</title><rect x="15.7834%" y="853" width="0.0229%" height="15" fill="rgb(248,97,27)" fg:x="688" fg:w="1"/><text x="16.0334%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.02%)</title><rect x="15.7834%" y="837" width="0.0229%" height="15" fill="rgb(240,66,17)" fg:x="688" fg:w="1"/><text x="16.0334%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="15.7834%" y="821" width="0.0229%" height="15" fill="rgb(210,79,3)" fg:x="688" fg:w="1"/><text x="16.0334%" y="831.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="15.7834%" y="805" width="0.0229%" height="15" fill="rgb(214,176,27)" fg:x="688" fg:w="1"/><text x="16.0334%" y="815.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.02%)</title><rect x="15.7834%" y="789" width="0.0229%" height="15" fill="rgb(235,185,3)" fg:x="688" fg:w="1"/><text x="16.0334%" y="799.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.02%)</title><rect x="15.7834%" y="773" width="0.0229%" height="15" fill="rgb(227,24,12)" fg:x="688" fg:w="1"/><text x="16.0334%" y="783.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.02%)</title><rect x="15.7834%" y="757" width="0.0229%" height="15" fill="rgb(252,169,48)" fg:x="688" fg:w="1"/><text x="16.0334%" y="767.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.02%)</title><rect x="15.7834%" y="741" width="0.0229%" height="15" fill="rgb(212,65,1)" fg:x="688" fg:w="1"/><text x="16.0334%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="15.8064%" y="949" width="0.0229%" height="15" fill="rgb(242,39,24)" fg:x="689" fg:w="1"/><text x="16.0564%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.02%)</title><rect x="15.8064%" y="933" width="0.0229%" height="15" fill="rgb(249,32,23)" fg:x="689" fg:w="1"/><text x="16.0564%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="15.8064%" y="917" width="0.0229%" height="15" fill="rgb(251,195,23)" fg:x="689" fg:w="1"/><text x="16.0564%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="15.8064%" y="901" width="0.0229%" height="15" fill="rgb(236,174,8)" fg:x="689" fg:w="1"/><text x="16.0564%" y="911.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.02%)</title><rect x="15.8064%" y="885" width="0.0229%" height="15" fill="rgb(220,197,8)" fg:x="689" fg:w="1"/><text x="16.0564%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.02%)</title><rect x="15.8064%" y="869" width="0.0229%" height="15" fill="rgb(240,108,37)" fg:x="689" fg:w="1"/><text x="16.0564%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="15.8064%" y="853" width="0.0229%" height="15" fill="rgb(232,176,24)" fg:x="689" fg:w="1"/><text x="16.0564%" y="863.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.02%)</title><rect x="15.8064%" y="837" width="0.0229%" height="15" fill="rgb(243,35,29)" fg:x="689" fg:w="1"/><text x="16.0564%" y="847.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (1 samples, 0.02%)</title><rect x="15.8064%" y="821" width="0.0229%" height="15" fill="rgb(210,37,18)" fg:x="689" fg:w="1"/><text x="16.0564%" y="831.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.02%)</title><rect x="15.8064%" y="805" width="0.0229%" height="15" fill="rgb(224,184,40)" fg:x="689" fg:w="1"/><text x="16.0564%" y="815.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.02%)</title><rect x="15.8064%" y="789" width="0.0229%" height="15" fill="rgb(236,39,29)" fg:x="689" fg:w="1"/><text x="16.0564%" y="799.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.02%)</title><rect x="15.8064%" y="773" width="0.0229%" height="15" fill="rgb(232,48,39)" fg:x="689" fg:w="1"/><text x="16.0564%" y="783.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.05%)</title><rect x="15.8293%" y="949" width="0.0459%" height="15" fill="rgb(236,34,42)" fg:x="690" fg:w="2"/><text x="16.0793%" y="959.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.05%)</title><rect x="15.8293%" y="933" width="0.0459%" height="15" fill="rgb(243,106,37)" fg:x="690" fg:w="2"/><text x="16.0793%" y="943.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="15.8293%" y="917" width="0.0459%" height="15" fill="rgb(218,96,6)" fg:x="690" fg:w="2"/><text x="16.0793%" y="927.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="15.8293%" y="901" width="0.0459%" height="15" fill="rgb(235,130,12)" fg:x="690" fg:w="2"/><text x="16.0793%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="15.8293%" y="885" width="0.0459%" height="15" fill="rgb(231,95,0)" fg:x="690" fg:w="2"/><text x="16.0793%" y="895.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.05%)</title><rect x="15.8293%" y="869" width="0.0459%" height="15" fill="rgb(228,12,23)" fg:x="690" fg:w="2"/><text x="16.0793%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="15.8293%" y="853" width="0.0459%" height="15" fill="rgb(216,12,1)" fg:x="690" fg:w="2"/><text x="16.0793%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="15.8293%" y="837" width="0.0459%" height="15" fill="rgb(219,59,3)" fg:x="690" fg:w="2"/><text x="16.0793%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="15.8293%" y="821" width="0.0459%" height="15" fill="rgb(215,208,46)" fg:x="690" fg:w="2"/><text x="16.0793%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="15.8293%" y="805" width="0.0459%" height="15" fill="rgb(254,224,29)" fg:x="690" fg:w="2"/><text x="16.0793%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="15.8293%" y="789" width="0.0459%" height="15" fill="rgb(232,14,29)" fg:x="690" fg:w="2"/><text x="16.0793%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="15.8293%" y="773" width="0.0459%" height="15" fill="rgb(208,45,52)" fg:x="690" fg:w="2"/><text x="16.0793%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="15.8523%" y="757" width="0.0229%" height="15" fill="rgb(234,191,28)" fg:x="691" fg:w="1"/><text x="16.1023%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="15.8523%" y="741" width="0.0229%" height="15" fill="rgb(244,67,43)" fg:x="691" fg:w="1"/><text x="16.1023%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="15.8752%" y="949" width="0.0229%" height="15" fill="rgb(236,189,24)" fg:x="692" fg:w="1"/><text x="16.1252%" y="959.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="15.8752%" y="933" width="0.0229%" height="15" fill="rgb(239,214,33)" fg:x="692" fg:w="1"/><text x="16.1252%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="15.8752%" y="917" width="0.0229%" height="15" fill="rgb(226,176,41)" fg:x="692" fg:w="1"/><text x="16.1252%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="15.8752%" y="901" width="0.0229%" height="15" fill="rgb(248,47,8)" fg:x="692" fg:w="1"/><text x="16.1252%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="15.8752%" y="885" width="0.0229%" height="15" fill="rgb(218,81,44)" fg:x="692" fg:w="1"/><text x="16.1252%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="15.8752%" y="869" width="0.0229%" height="15" fill="rgb(213,98,6)" fg:x="692" fg:w="1"/><text x="16.1252%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="15.8752%" y="853" width="0.0229%" height="15" fill="rgb(222,85,22)" fg:x="692" fg:w="1"/><text x="16.1252%" y="863.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="15.8752%" y="837" width="0.0229%" height="15" fill="rgb(239,46,39)" fg:x="692" fg:w="1"/><text x="16.1252%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="15.8752%" y="821" width="0.0229%" height="15" fill="rgb(237,12,29)" fg:x="692" fg:w="1"/><text x="16.1252%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="15.8752%" y="805" width="0.0229%" height="15" fill="rgb(214,77,8)" fg:x="692" fg:w="1"/><text x="16.1252%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="15.8752%" y="789" width="0.0229%" height="15" fill="rgb(217,168,37)" fg:x="692" fg:w="1"/><text x="16.1252%" y="799.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="15.8752%" y="773" width="0.0229%" height="15" fill="rgb(221,217,23)" fg:x="692" fg:w="1"/><text x="16.1252%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="15.9211%" y="933" width="0.0229%" height="15" fill="rgb(243,229,36)" fg:x="694" fg:w="1"/><text x="16.1711%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.02%)</title><rect x="15.9211%" y="917" width="0.0229%" height="15" fill="rgb(251,163,40)" fg:x="694" fg:w="1"/><text x="16.1711%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="15.9211%" y="901" width="0.0229%" height="15" fill="rgb(237,222,12)" fg:x="694" fg:w="1"/><text x="16.1711%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="15.9211%" y="885" width="0.0229%" height="15" fill="rgb(248,132,6)" fg:x="694" fg:w="1"/><text x="16.1711%" y="895.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.02%)</title><rect x="15.9211%" y="869" width="0.0229%" height="15" fill="rgb(227,167,50)" fg:x="694" fg:w="1"/><text x="16.1711%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.02%)</title><rect x="15.9211%" y="853" width="0.0229%" height="15" fill="rgb(242,84,37)" fg:x="694" fg:w="1"/><text x="16.1711%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="15.9211%" y="837" width="0.0229%" height="15" fill="rgb(212,4,50)" fg:x="694" fg:w="1"/><text x="16.1711%" y="847.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.02%)</title><rect x="15.9211%" y="821" width="0.0229%" height="15" fill="rgb(230,228,32)" fg:x="694" fg:w="1"/><text x="16.1711%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.02%)</title><rect x="15.9440%" y="725" width="0.0229%" height="15" fill="rgb(248,217,23)" fg:x="695" fg:w="1"/><text x="16.1940%" y="735.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.05%)</title><rect x="15.9440%" y="933" width="0.0459%" height="15" fill="rgb(238,197,32)" fg:x="695" fg:w="2"/><text x="16.1940%" y="943.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.05%)</title><rect x="15.9440%" y="917" width="0.0459%" height="15" fill="rgb(236,106,1)" fg:x="695" fg:w="2"/><text x="16.1940%" y="927.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="15.9440%" y="901" width="0.0459%" height="15" fill="rgb(219,228,13)" fg:x="695" fg:w="2"/><text x="16.1940%" y="911.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="15.9440%" y="885" width="0.0459%" height="15" fill="rgb(238,30,35)" fg:x="695" fg:w="2"/><text x="16.1940%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="15.9440%" y="869" width="0.0459%" height="15" fill="rgb(236,70,23)" fg:x="695" fg:w="2"/><text x="16.1940%" y="879.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.05%)</title><rect x="15.9440%" y="853" width="0.0459%" height="15" fill="rgb(249,104,48)" fg:x="695" fg:w="2"/><text x="16.1940%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="15.9440%" y="837" width="0.0459%" height="15" fill="rgb(254,117,50)" fg:x="695" fg:w="2"/><text x="16.1940%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="15.9440%" y="821" width="0.0459%" height="15" fill="rgb(223,152,4)" fg:x="695" fg:w="2"/><text x="16.1940%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="15.9440%" y="805" width="0.0459%" height="15" fill="rgb(245,6,2)" fg:x="695" fg:w="2"/><text x="16.1940%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="15.9440%" y="789" width="0.0459%" height="15" fill="rgb(249,150,24)" fg:x="695" fg:w="2"/><text x="16.1940%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="15.9440%" y="773" width="0.0459%" height="15" fill="rgb(228,185,42)" fg:x="695" fg:w="2"/><text x="16.1940%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="15.9440%" y="757" width="0.0459%" height="15" fill="rgb(226,39,33)" fg:x="695" fg:w="2"/><text x="16.1940%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.05%)</title><rect x="15.9440%" y="741" width="0.0459%" height="15" fill="rgb(221,166,19)" fg:x="695" fg:w="2"/><text x="16.1940%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="15.9670%" y="725" width="0.0229%" height="15" fill="rgb(209,109,2)" fg:x="696" fg:w="1"/><text x="16.2170%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="15.9670%" y="709" width="0.0229%" height="15" fill="rgb(252,216,26)" fg:x="696" fg:w="1"/><text x="16.2170%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="15.9670%" y="693" width="0.0229%" height="15" fill="rgb(227,173,36)" fg:x="696" fg:w="1"/><text x="16.2170%" y="703.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="15.9670%" y="677" width="0.0229%" height="15" fill="rgb(209,90,7)" fg:x="696" fg:w="1"/><text x="16.2170%" y="687.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="15.9670%" y="661" width="0.0229%" height="15" fill="rgb(250,194,11)" fg:x="696" fg:w="1"/><text x="16.2170%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="15.9899%" y="933" width="0.0229%" height="15" fill="rgb(220,72,50)" fg:x="697" fg:w="1"/><text x="16.2399%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="15.9899%" y="917" width="0.0229%" height="15" fill="rgb(222,106,48)" fg:x="697" fg:w="1"/><text x="16.2399%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="15.9899%" y="901" width="0.0229%" height="15" fill="rgb(216,220,45)" fg:x="697" fg:w="1"/><text x="16.2399%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="15.9899%" y="885" width="0.0229%" height="15" fill="rgb(234,112,18)" fg:x="697" fg:w="1"/><text x="16.2399%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="15.9899%" y="869" width="0.0229%" height="15" fill="rgb(206,179,9)" fg:x="697" fg:w="1"/><text x="16.2399%" y="879.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="15.9899%" y="853" width="0.0229%" height="15" fill="rgb(215,115,40)" fg:x="697" fg:w="1"/><text x="16.2399%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="15.9899%" y="837" width="0.0229%" height="15" fill="rgb(222,69,34)" fg:x="697" fg:w="1"/><text x="16.2399%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="15.9899%" y="821" width="0.0229%" height="15" fill="rgb(209,161,10)" fg:x="697" fg:w="1"/><text x="16.2399%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="15.9899%" y="805" width="0.0229%" height="15" fill="rgb(217,6,38)" fg:x="697" fg:w="1"/><text x="16.2399%" y="815.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="15.9899%" y="789" width="0.0229%" height="15" fill="rgb(229,229,48)" fg:x="697" fg:w="1"/><text x="16.2399%" y="799.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="16.0128%" y="933" width="0.0229%" height="15" fill="rgb(225,21,28)" fg:x="698" fg:w="1"/><text x="16.2628%" y="943.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="16.0128%" y="917" width="0.0229%" height="15" fill="rgb(206,33,13)" fg:x="698" fg:w="1"/><text x="16.2628%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="16.0128%" y="901" width="0.0229%" height="15" fill="rgb(242,178,17)" fg:x="698" fg:w="1"/><text x="16.2628%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="16.0128%" y="885" width="0.0229%" height="15" fill="rgb(220,162,5)" fg:x="698" fg:w="1"/><text x="16.2628%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="16.0128%" y="869" width="0.0229%" height="15" fill="rgb(210,33,43)" fg:x="698" fg:w="1"/><text x="16.2628%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="16.0128%" y="853" width="0.0229%" height="15" fill="rgb(216,116,54)" fg:x="698" fg:w="1"/><text x="16.2628%" y="863.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="16.0128%" y="837" width="0.0229%" height="15" fill="rgb(249,92,24)" fg:x="698" fg:w="1"/><text x="16.2628%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="16.0128%" y="821" width="0.0229%" height="15" fill="rgb(231,189,14)" fg:x="698" fg:w="1"/><text x="16.2628%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="16.0128%" y="805" width="0.0229%" height="15" fill="rgb(230,8,41)" fg:x="698" fg:w="1"/><text x="16.2628%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="16.0128%" y="789" width="0.0229%" height="15" fill="rgb(249,7,27)" fg:x="698" fg:w="1"/><text x="16.2628%" y="799.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="16.0128%" y="773" width="0.0229%" height="15" fill="rgb(232,86,5)" fg:x="698" fg:w="1"/><text x="16.2628%" y="783.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="16.0128%" y="757" width="0.0229%" height="15" fill="rgb(224,175,18)" fg:x="698" fg:w="1"/><text x="16.2628%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="16.0358%" y="789" width="0.0229%" height="15" fill="rgb(220,129,12)" fg:x="699" fg:w="1"/><text x="16.2858%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="16.0358%" y="773" width="0.0229%" height="15" fill="rgb(210,19,36)" fg:x="699" fg:w="1"/><text x="16.2858%" y="783.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="16.0358%" y="757" width="0.0229%" height="15" fill="rgb(219,96,14)" fg:x="699" fg:w="1"/><text x="16.2858%" y="767.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.02%)</title><rect x="16.0358%" y="741" width="0.0229%" height="15" fill="rgb(249,106,1)" fg:x="699" fg:w="1"/><text x="16.2858%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (3 samples, 0.07%)</title><rect x="16.0587%" y="789" width="0.0688%" height="15" fill="rgb(249,155,20)" fg:x="700" fg:w="3"/><text x="16.3087%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.07%)</title><rect x="16.0587%" y="773" width="0.0688%" height="15" fill="rgb(244,168,9)" fg:x="700" fg:w="3"/><text x="16.3087%" y="783.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="16.0817%" y="757" width="0.0459%" height="15" fill="rgb(216,23,50)" fg:x="701" fg:w="2"/><text x="16.3317%" y="767.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (2 samples, 0.05%)</title><rect x="16.0817%" y="741" width="0.0459%" height="15" fill="rgb(224,219,20)" fg:x="701" fg:w="2"/><text x="16.3317%" y="751.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.05%)</title><rect x="16.0817%" y="725" width="0.0459%" height="15" fill="rgb(222,156,15)" fg:x="701" fg:w="2"/><text x="16.3317%" y="735.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.05%)</title><rect x="16.0817%" y="709" width="0.0459%" height="15" fill="rgb(231,97,17)" fg:x="701" fg:w="2"/><text x="16.3317%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.14%)</title><rect x="16.0358%" y="917" width="0.1376%" height="15" fill="rgb(218,70,48)" fg:x="699" fg:w="6"/><text x="16.2858%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (6 samples, 0.14%)</title><rect x="16.0358%" y="901" width="0.1376%" height="15" fill="rgb(212,196,52)" fg:x="699" fg:w="6"/><text x="16.2858%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.14%)</title><rect x="16.0358%" y="885" width="0.1376%" height="15" fill="rgb(243,203,18)" fg:x="699" fg:w="6"/><text x="16.2858%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.14%)</title><rect x="16.0358%" y="869" width="0.1376%" height="15" fill="rgb(252,125,41)" fg:x="699" fg:w="6"/><text x="16.2858%" y="879.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (6 samples, 0.14%)</title><rect x="16.0358%" y="853" width="0.1376%" height="15" fill="rgb(223,180,33)" fg:x="699" fg:w="6"/><text x="16.2858%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (6 samples, 0.14%)</title><rect x="16.0358%" y="837" width="0.1376%" height="15" fill="rgb(254,159,46)" fg:x="699" fg:w="6"/><text x="16.2858%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.14%)</title><rect x="16.0358%" y="821" width="0.1376%" height="15" fill="rgb(254,38,10)" fg:x="699" fg:w="6"/><text x="16.2858%" y="831.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (6 samples, 0.14%)</title><rect x="16.0358%" y="805" width="0.1376%" height="15" fill="rgb(208,217,32)" fg:x="699" fg:w="6"/><text x="16.2858%" y="815.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (2 samples, 0.05%)</title><rect x="16.1276%" y="789" width="0.0459%" height="15" fill="rgb(221,120,13)" fg:x="703" fg:w="2"/><text x="16.3776%" y="799.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.05%)</title><rect x="16.1276%" y="773" width="0.0459%" height="15" fill="rgb(246,54,52)" fg:x="703" fg:w="2"/><text x="16.3776%" y="783.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.05%)</title><rect x="16.1276%" y="757" width="0.0459%" height="15" fill="rgb(242,34,25)" fg:x="703" fg:w="2"/><text x="16.3776%" y="767.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.05%)</title><rect x="16.1276%" y="741" width="0.0459%" height="15" fill="rgb(247,209,9)" fg:x="703" fg:w="2"/><text x="16.3776%" y="751.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.02%)</title><rect x="16.1505%" y="725" width="0.0229%" height="15" fill="rgb(228,71,26)" fg:x="704" fg:w="1"/><text x="16.4005%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="16.1505%" y="709" width="0.0229%" height="15" fill="rgb(222,145,49)" fg:x="704" fg:w="1"/><text x="16.4005%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="16.1505%" y="693" width="0.0229%" height="15" fill="rgb(218,121,17)" fg:x="704" fg:w="1"/><text x="16.4005%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.02%)</title><rect x="16.1734%" y="709" width="0.0229%" height="15" fill="rgb(244,50,7)" fg:x="705" fg:w="1"/><text x="16.4234%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="16.1734%" y="869" width="0.0459%" height="15" fill="rgb(246,229,37)" fg:x="705" fg:w="2"/><text x="16.4234%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="16.1734%" y="853" width="0.0459%" height="15" fill="rgb(225,18,5)" fg:x="705" fg:w="2"/><text x="16.4234%" y="863.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.05%)</title><rect x="16.1734%" y="837" width="0.0459%" height="15" fill="rgb(213,204,8)" fg:x="705" fg:w="2"/><text x="16.4234%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="16.1734%" y="821" width="0.0459%" height="15" fill="rgb(238,103,6)" fg:x="705" fg:w="2"/><text x="16.4234%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="16.1734%" y="805" width="0.0459%" height="15" fill="rgb(222,25,35)" fg:x="705" fg:w="2"/><text x="16.4234%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="16.1734%" y="789" width="0.0459%" height="15" fill="rgb(213,203,35)" fg:x="705" fg:w="2"/><text x="16.4234%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="16.1734%" y="773" width="0.0459%" height="15" fill="rgb(221,79,53)" fg:x="705" fg:w="2"/><text x="16.4234%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="16.1734%" y="757" width="0.0459%" height="15" fill="rgb(243,200,35)" fg:x="705" fg:w="2"/><text x="16.4234%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="16.1734%" y="741" width="0.0459%" height="15" fill="rgb(248,60,25)" fg:x="705" fg:w="2"/><text x="16.4234%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.05%)</title><rect x="16.1734%" y="725" width="0.0459%" height="15" fill="rgb(227,53,46)" fg:x="705" fg:w="2"/><text x="16.4234%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="16.1964%" y="709" width="0.0229%" height="15" fill="rgb(216,120,32)" fg:x="706" fg:w="1"/><text x="16.4464%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="16.1964%" y="693" width="0.0229%" height="15" fill="rgb(220,134,1)" fg:x="706" fg:w="1"/><text x="16.4464%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="16.1964%" y="677" width="0.0229%" height="15" fill="rgb(237,168,5)" fg:x="706" fg:w="1"/><text x="16.4464%" y="687.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="16.1964%" y="661" width="0.0229%" height="15" fill="rgb(231,100,33)" fg:x="706" fg:w="1"/><text x="16.4464%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="16.1964%" y="645" width="0.0229%" height="15" fill="rgb(236,177,47)" fg:x="706" fg:w="1"/><text x="16.4464%" y="655.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="16.1964%" y="629" width="0.0229%" height="15" fill="rgb(235,7,49)" fg:x="706" fg:w="1"/><text x="16.4464%" y="639.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="16.1964%" y="613" width="0.0229%" height="15" fill="rgb(232,119,22)" fg:x="706" fg:w="1"/><text x="16.4464%" y="623.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.07%)</title><rect x="16.1734%" y="917" width="0.0688%" height="15" fill="rgb(254,73,53)" fg:x="705" fg:w="3"/><text x="16.4234%" y="927.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.07%)</title><rect x="16.1734%" y="901" width="0.0688%" height="15" fill="rgb(251,35,20)" fg:x="705" fg:w="3"/><text x="16.4234%" y="911.50"></text></g><g><title>core::fmt::write (3 samples, 0.07%)</title><rect x="16.1734%" y="885" width="0.0688%" height="15" fill="rgb(241,119,20)" fg:x="705" fg:w="3"/><text x="16.4234%" y="895.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.02%)</title><rect x="16.2193%" y="869" width="0.0229%" height="15" fill="rgb(207,102,14)" fg:x="707" fg:w="1"/><text x="16.4693%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="16.2423%" y="853" width="0.0229%" height="15" fill="rgb(248,201,50)" fg:x="708" fg:w="1"/><text x="16.4923%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="16.2423%" y="837" width="0.0229%" height="15" fill="rgb(222,185,44)" fg:x="708" fg:w="1"/><text x="16.4923%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="16.2423%" y="821" width="0.0229%" height="15" fill="rgb(218,107,18)" fg:x="708" fg:w="1"/><text x="16.4923%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="16.2423%" y="805" width="0.0229%" height="15" fill="rgb(237,177,39)" fg:x="708" fg:w="1"/><text x="16.4923%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="16.2423%" y="789" width="0.0229%" height="15" fill="rgb(246,69,6)" fg:x="708" fg:w="1"/><text x="16.4923%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="16.2423%" y="773" width="0.0229%" height="15" fill="rgb(234,208,37)" fg:x="708" fg:w="1"/><text x="16.4923%" y="783.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.05%)</title><rect x="16.2423%" y="917" width="0.0459%" height="15" fill="rgb(225,4,6)" fg:x="708" fg:w="2"/><text x="16.4923%" y="927.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.05%)</title><rect x="16.2423%" y="901" width="0.0459%" height="15" fill="rgb(233,45,0)" fg:x="708" fg:w="2"/><text x="16.4923%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.05%)</title><rect x="16.2423%" y="885" width="0.0459%" height="15" fill="rgb(226,136,5)" fg:x="708" fg:w="2"/><text x="16.4923%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.05%)</title><rect x="16.2423%" y="869" width="0.0459%" height="15" fill="rgb(211,91,47)" fg:x="708" fg:w="2"/><text x="16.4923%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="16.2652%" y="853" width="0.0229%" height="15" fill="rgb(242,88,51)" fg:x="709" fg:w="1"/><text x="16.5152%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="16.2652%" y="837" width="0.0229%" height="15" fill="rgb(230,91,28)" fg:x="709" fg:w="1"/><text x="16.5152%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="16.2652%" y="821" width="0.0229%" height="15" fill="rgb(254,186,29)" fg:x="709" fg:w="1"/><text x="16.5152%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="16.2652%" y="805" width="0.0229%" height="15" fill="rgb(238,6,4)" fg:x="709" fg:w="1"/><text x="16.5152%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="16.2652%" y="789" width="0.0229%" height="15" fill="rgb(221,151,16)" fg:x="709" fg:w="1"/><text x="16.5152%" y="799.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="16.2652%" y="773" width="0.0229%" height="15" fill="rgb(251,143,52)" fg:x="709" fg:w="1"/><text x="16.5152%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="16.2881%" y="837" width="0.0459%" height="15" fill="rgb(206,90,15)" fg:x="710" fg:w="2"/><text x="16.5381%" y="847.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="16.3111%" y="821" width="0.0229%" height="15" fill="rgb(218,35,8)" fg:x="711" fg:w="1"/><text x="16.5611%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="16.3111%" y="805" width="0.0229%" height="15" fill="rgb(239,215,6)" fg:x="711" fg:w="1"/><text x="16.5611%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.09%)</title><rect x="16.2881%" y="901" width="0.0918%" height="15" fill="rgb(245,116,39)" fg:x="710" fg:w="4"/><text x="16.5381%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4 samples, 0.09%)</title><rect x="16.2881%" y="885" width="0.0918%" height="15" fill="rgb(242,65,28)" fg:x="710" fg:w="4"/><text x="16.5381%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.09%)</title><rect x="16.2881%" y="869" width="0.0918%" height="15" fill="rgb(252,132,53)" fg:x="710" fg:w="4"/><text x="16.5381%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.09%)</title><rect x="16.2881%" y="853" width="0.0918%" height="15" fill="rgb(224,159,50)" fg:x="710" fg:w="4"/><text x="16.5381%" y="863.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.05%)</title><rect x="16.3340%" y="837" width="0.0459%" height="15" fill="rgb(224,93,4)" fg:x="712" fg:w="2"/><text x="16.5840%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.05%)</title><rect x="16.3340%" y="821" width="0.0459%" height="15" fill="rgb(208,81,34)" fg:x="712" fg:w="2"/><text x="16.5840%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="16.3340%" y="805" width="0.0459%" height="15" fill="rgb(233,92,54)" fg:x="712" fg:w="2"/><text x="16.5840%" y="815.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.05%)</title><rect x="16.3340%" y="789" width="0.0459%" height="15" fill="rgb(237,21,14)" fg:x="712" fg:w="2"/><text x="16.5840%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.05%)</title><rect x="16.3340%" y="773" width="0.0459%" height="15" fill="rgb(249,128,51)" fg:x="712" fg:w="2"/><text x="16.5840%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="16.3340%" y="757" width="0.0459%" height="15" fill="rgb(223,129,24)" fg:x="712" fg:w="2"/><text x="16.5840%" y="767.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="16.3340%" y="741" width="0.0459%" height="15" fill="rgb(231,168,25)" fg:x="712" fg:w="2"/><text x="16.5840%" y="751.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (2 samples, 0.05%)</title><rect x="16.3340%" y="725" width="0.0459%" height="15" fill="rgb(224,39,20)" fg:x="712" fg:w="2"/><text x="16.5840%" y="735.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.05%)</title><rect x="16.3340%" y="709" width="0.0459%" height="15" fill="rgb(225,152,53)" fg:x="712" fg:w="2"/><text x="16.5840%" y="719.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.05%)</title><rect x="16.3340%" y="693" width="0.0459%" height="15" fill="rgb(252,17,24)" fg:x="712" fg:w="2"/><text x="16.5840%" y="703.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="16.3570%" y="677" width="0.0229%" height="15" fill="rgb(250,114,30)" fg:x="713" fg:w="1"/><text x="16.6070%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="16.3570%" y="661" width="0.0229%" height="15" fill="rgb(229,5,4)" fg:x="713" fg:w="1"/><text x="16.6070%" y="671.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.05%)</title><rect x="16.3799%" y="901" width="0.0459%" height="15" fill="rgb(225,176,49)" fg:x="714" fg:w="2"/><text x="16.6299%" y="911.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.05%)</title><rect x="16.3799%" y="885" width="0.0459%" height="15" fill="rgb(224,221,49)" fg:x="714" fg:w="2"/><text x="16.6299%" y="895.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="16.3799%" y="869" width="0.0459%" height="15" fill="rgb(253,169,27)" fg:x="714" fg:w="2"/><text x="16.6299%" y="879.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="16.3799%" y="853" width="0.0459%" height="15" fill="rgb(211,206,16)" fg:x="714" fg:w="2"/><text x="16.6299%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="16.3799%" y="837" width="0.0459%" height="15" fill="rgb(244,87,35)" fg:x="714" fg:w="2"/><text x="16.6299%" y="847.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.05%)</title><rect x="16.3799%" y="821" width="0.0459%" height="15" fill="rgb(246,28,10)" fg:x="714" fg:w="2"/><text x="16.6299%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="16.3799%" y="805" width="0.0459%" height="15" fill="rgb(229,12,44)" fg:x="714" fg:w="2"/><text x="16.6299%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="16.3799%" y="789" width="0.0459%" height="15" fill="rgb(210,145,37)" fg:x="714" fg:w="2"/><text x="16.6299%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="16.3799%" y="773" width="0.0459%" height="15" fill="rgb(227,112,52)" fg:x="714" fg:w="2"/><text x="16.6299%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="16.4028%" y="757" width="0.0229%" height="15" fill="rgb(238,155,34)" fg:x="715" fg:w="1"/><text x="16.6528%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="16.4028%" y="741" width="0.0229%" height="15" fill="rgb(239,226,36)" fg:x="715" fg:w="1"/><text x="16.6528%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="16.4028%" y="725" width="0.0229%" height="15" fill="rgb(230,16,23)" fg:x="715" fg:w="1"/><text x="16.6528%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="16.4028%" y="709" width="0.0229%" height="15" fill="rgb(236,171,36)" fg:x="715" fg:w="1"/><text x="16.6528%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="16.4028%" y="693" width="0.0229%" height="15" fill="rgb(221,22,14)" fg:x="715" fg:w="1"/><text x="16.6528%" y="703.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="16.4028%" y="677" width="0.0229%" height="15" fill="rgb(242,43,11)" fg:x="715" fg:w="1"/><text x="16.6528%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="16.4258%" y="885" width="0.0459%" height="15" fill="rgb(232,69,23)" fg:x="716" fg:w="2"/><text x="16.6758%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.05%)</title><rect x="16.4258%" y="869" width="0.0459%" height="15" fill="rgb(216,180,54)" fg:x="716" fg:w="2"/><text x="16.6758%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="16.4258%" y="853" width="0.0459%" height="15" fill="rgb(216,5,24)" fg:x="716" fg:w="2"/><text x="16.6758%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="16.4258%" y="837" width="0.0459%" height="15" fill="rgb(225,89,9)" fg:x="716" fg:w="2"/><text x="16.6758%" y="847.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.05%)</title><rect x="16.4258%" y="821" width="0.0459%" height="15" fill="rgb(243,75,33)" fg:x="716" fg:w="2"/><text x="16.6758%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.05%)</title><rect x="16.4258%" y="805" width="0.0459%" height="15" fill="rgb(247,141,45)" fg:x="716" fg:w="2"/><text x="16.6758%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="16.4258%" y="789" width="0.0459%" height="15" fill="rgb(232,177,36)" fg:x="716" fg:w="2"/><text x="16.6758%" y="799.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.05%)</title><rect x="16.4258%" y="773" width="0.0459%" height="15" fill="rgb(219,125,36)" fg:x="716" fg:w="2"/><text x="16.6758%" y="783.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (2 samples, 0.05%)</title><rect x="16.4258%" y="757" width="0.0459%" height="15" fill="rgb(227,94,9)" fg:x="716" fg:w="2"/><text x="16.6758%" y="767.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.05%)</title><rect x="16.4258%" y="741" width="0.0459%" height="15" fill="rgb(240,34,52)" fg:x="716" fg:w="2"/><text x="16.6758%" y="751.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.05%)</title><rect x="16.4258%" y="725" width="0.0459%" height="15" fill="rgb(216,45,12)" fg:x="716" fg:w="2"/><text x="16.6758%" y="735.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.05%)</title><rect x="16.4258%" y="709" width="0.0459%" height="15" fill="rgb(246,21,19)" fg:x="716" fg:w="2"/><text x="16.6758%" y="719.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2 samples, 0.05%)</title><rect x="16.4258%" y="693" width="0.0459%" height="15" fill="rgb(213,98,42)" fg:x="716" fg:w="2"/><text x="16.6758%" y="703.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (2 samples, 0.05%)</title><rect x="16.4258%" y="677" width="0.0459%" height="15" fill="rgb(250,136,47)" fg:x="716" fg:w="2"/><text x="16.6758%" y="687.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.02%)</title><rect x="16.4717%" y="885" width="0.0229%" height="15" fill="rgb(251,124,27)" fg:x="718" fg:w="1"/><text x="16.7217%" y="895.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.02%)</title><rect x="16.4717%" y="869" width="0.0229%" height="15" fill="rgb(229,180,14)" fg:x="718" fg:w="1"/><text x="16.7217%" y="879.50"></text></g><g><title>core::fmt::write (1 samples, 0.02%)</title><rect x="16.4717%" y="853" width="0.0229%" height="15" fill="rgb(245,216,25)" fg:x="718" fg:w="1"/><text x="16.7217%" y="863.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="16.4717%" y="837" width="0.0229%" height="15" fill="rgb(251,43,5)" fg:x="718" fg:w="1"/><text x="16.7217%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.02%)</title><rect x="16.4717%" y="821" width="0.0229%" height="15" fill="rgb(250,128,24)" fg:x="718" fg:w="1"/><text x="16.7217%" y="831.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.02%)</title><rect x="16.4717%" y="805" width="0.0229%" height="15" fill="rgb(217,117,27)" fg:x="718" fg:w="1"/><text x="16.7217%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.02%)</title><rect x="16.4717%" y="789" width="0.0229%" height="15" fill="rgb(245,147,4)" fg:x="718" fg:w="1"/><text x="16.7217%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="16.4717%" y="773" width="0.0229%" height="15" fill="rgb(242,201,35)" fg:x="718" fg:w="1"/><text x="16.7217%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="16.4717%" y="757" width="0.0229%" height="15" fill="rgb(218,181,1)" fg:x="718" fg:w="1"/><text x="16.7217%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="16.4717%" y="741" width="0.0229%" height="15" fill="rgb(222,6,29)" fg:x="718" fg:w="1"/><text x="16.7217%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="16.4717%" y="725" width="0.0229%" height="15" fill="rgb(208,186,3)" fg:x="718" fg:w="1"/><text x="16.7217%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="16.4717%" y="709" width="0.0229%" height="15" fill="rgb(216,36,26)" fg:x="718" fg:w="1"/><text x="16.7217%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="16.4717%" y="693" width="0.0229%" height="15" fill="rgb(248,201,23)" fg:x="718" fg:w="1"/><text x="16.7217%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.02%)</title><rect x="16.4717%" y="677" width="0.0229%" height="15" fill="rgb(251,170,31)" fg:x="718" fg:w="1"/><text x="16.7217%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="16.4946%" y="821" width="0.0229%" height="15" fill="rgb(207,110,25)" fg:x="719" fg:w="1"/><text x="16.7446%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.4946%" y="805" width="0.0229%" height="15" fill="rgb(250,54,15)" fg:x="719" fg:w="1"/><text x="16.7446%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.4946%" y="789" width="0.0229%" height="15" fill="rgb(227,68,33)" fg:x="719" fg:w="1"/><text x="16.7446%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="16.4946%" y="773" width="0.0229%" height="15" fill="rgb(238,34,41)" fg:x="719" fg:w="1"/><text x="16.7446%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="16.4946%" y="757" width="0.0229%" height="15" fill="rgb(220,11,15)" fg:x="719" fg:w="1"/><text x="16.7446%" y="767.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.05%)</title><rect x="16.4946%" y="885" width="0.0459%" height="15" fill="rgb(246,111,35)" fg:x="719" fg:w="2"/><text x="16.7446%" y="895.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.05%)</title><rect x="16.4946%" y="869" width="0.0459%" height="15" fill="rgb(209,88,53)" fg:x="719" fg:w="2"/><text x="16.7446%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.05%)</title><rect x="16.4946%" y="853" width="0.0459%" height="15" fill="rgb(231,185,47)" fg:x="719" fg:w="2"/><text x="16.7446%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.05%)</title><rect x="16.4946%" y="837" width="0.0459%" height="15" fill="rgb(233,154,1)" fg:x="719" fg:w="2"/><text x="16.7446%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="16.5175%" y="821" width="0.0229%" height="15" fill="rgb(225,15,46)" fg:x="720" fg:w="1"/><text x="16.7675%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="16.5175%" y="805" width="0.0229%" height="15" fill="rgb(211,135,41)" fg:x="720" fg:w="1"/><text x="16.7675%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="16.5175%" y="789" width="0.0229%" height="15" fill="rgb(208,54,0)" fg:x="720" fg:w="1"/><text x="16.7675%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="16.5175%" y="773" width="0.0229%" height="15" fill="rgb(244,136,14)" fg:x="720" fg:w="1"/><text x="16.7675%" y="783.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.02%)</title><rect x="16.5175%" y="757" width="0.0229%" height="15" fill="rgb(241,56,14)" fg:x="720" fg:w="1"/><text x="16.7675%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="16.5175%" y="741" width="0.0229%" height="15" fill="rgb(205,80,24)" fg:x="720" fg:w="1"/><text x="16.7675%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="16.5175%" y="725" width="0.0229%" height="15" fill="rgb(220,57,4)" fg:x="720" fg:w="1"/><text x="16.7675%" y="735.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.02%)</title><rect x="16.5405%" y="885" width="0.0229%" height="15" fill="rgb(226,193,50)" fg:x="721" fg:w="1"/><text x="16.7905%" y="895.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="16.5405%" y="869" width="0.0229%" height="15" fill="rgb(231,168,22)" fg:x="721" fg:w="1"/><text x="16.7905%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="16.5405%" y="853" width="0.0229%" height="15" fill="rgb(254,215,14)" fg:x="721" fg:w="1"/><text x="16.7905%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="16.5405%" y="837" width="0.0229%" height="15" fill="rgb(211,115,16)" fg:x="721" fg:w="1"/><text x="16.7905%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="16.5405%" y="821" width="0.0229%" height="15" fill="rgb(236,210,16)" fg:x="721" fg:w="1"/><text x="16.7905%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="16.5405%" y="805" width="0.0229%" height="15" fill="rgb(221,94,12)" fg:x="721" fg:w="1"/><text x="16.7905%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="16.5405%" y="789" width="0.0229%" height="15" fill="rgb(235,218,49)" fg:x="721" fg:w="1"/><text x="16.7905%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.02%)</title><rect x="16.5405%" y="773" width="0.0229%" height="15" fill="rgb(217,114,14)" fg:x="721" fg:w="1"/><text x="16.7905%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.02%)</title><rect x="16.5405%" y="757" width="0.0229%" height="15" fill="rgb(216,145,22)" fg:x="721" fg:w="1"/><text x="16.7905%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.02%)</title><rect x="16.5405%" y="741" width="0.0229%" height="15" fill="rgb(217,112,39)" fg:x="721" fg:w="1"/><text x="16.7905%" y="751.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.02%)</title><rect x="16.5405%" y="725" width="0.0229%" height="15" fill="rgb(225,85,32)" fg:x="721" fg:w="1"/><text x="16.7905%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="16.5405%" y="709" width="0.0229%" height="15" fill="rgb(245,209,47)" fg:x="721" fg:w="1"/><text x="16.7905%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="16.5405%" y="693" width="0.0229%" height="15" fill="rgb(218,220,15)" fg:x="721" fg:w="1"/><text x="16.7905%" y="703.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="16.5405%" y="677" width="0.0229%" height="15" fill="rgb(222,202,31)" fg:x="721" fg:w="1"/><text x="16.7905%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="16.5405%" y="661" width="0.0229%" height="15" fill="rgb(243,203,4)" fg:x="721" fg:w="1"/><text x="16.7905%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="16.5405%" y="645" width="0.0229%" height="15" fill="rgb(237,92,17)" fg:x="721" fg:w="1"/><text x="16.7905%" y="655.50"></text></g><g><title>sysmalloc (1 samples, 0.02%)</title><rect x="16.5405%" y="629" width="0.0229%" height="15" fill="rgb(231,119,7)" fg:x="721" fg:w="1"/><text x="16.7905%" y="639.50"></text></g><g><title>__GI___default_morecore (1 samples, 0.02%)</title><rect x="16.5405%" y="613" width="0.0229%" height="15" fill="rgb(237,82,41)" fg:x="721" fg:w="1"/><text x="16.7905%" y="623.50"></text></g><g><title>__GI___sbrk (1 samples, 0.02%)</title><rect x="16.5405%" y="597" width="0.0229%" height="15" fill="rgb(226,81,48)" fg:x="721" fg:w="1"/><text x="16.7905%" y="607.50"></text></g><g><title>__GI___sbrk (1 samples, 0.02%)</title><rect x="16.5405%" y="581" width="0.0229%" height="15" fill="rgb(234,70,51)" fg:x="721" fg:w="1"/><text x="16.7905%" y="591.50"></text></g><g><title>__brk (1 samples, 0.02%)</title><rect x="16.5405%" y="565" width="0.0229%" height="15" fill="rgb(251,86,4)" fg:x="721" fg:w="1"/><text x="16.7905%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="16.5405%" y="549" width="0.0229%" height="15" fill="rgb(244,144,28)" fg:x="721" fg:w="1"/><text x="16.7905%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="16.5405%" y="533" width="0.0229%" height="15" fill="rgb(232,161,39)" fg:x="721" fg:w="1"/><text x="16.7905%" y="543.50"></text></g><g><title>__x64_sys_brk (1 samples, 0.02%)</title><rect x="16.5405%" y="517" width="0.0229%" height="15" fill="rgb(247,34,51)" fg:x="721" fg:w="1"/><text x="16.7905%" y="527.50"></text></g><g><title>do_brk_flags (1 samples, 0.02%)</title><rect x="16.5405%" y="501" width="0.0229%" height="15" fill="rgb(225,132,2)" fg:x="721" fg:w="1"/><text x="16.7905%" y="511.50"></text></g><g><title>vma_merge (1 samples, 0.02%)</title><rect x="16.5405%" y="485" width="0.0229%" height="15" fill="rgb(209,159,44)" fg:x="721" fg:w="1"/><text x="16.7905%" y="495.50"></text></g><g><title>__vma_adjust (1 samples, 0.02%)</title><rect x="16.5405%" y="469" width="0.0229%" height="15" fill="rgb(251,214,1)" fg:x="721" fg:w="1"/><text x="16.7905%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="16.5634%" y="741" width="0.0229%" height="15" fill="rgb(247,84,47)" fg:x="722" fg:w="1"/><text x="16.8134%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="16.5634%" y="725" width="0.0229%" height="15" fill="rgb(240,111,43)" fg:x="722" fg:w="1"/><text x="16.8134%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="16.5634%" y="709" width="0.0229%" height="15" fill="rgb(215,214,35)" fg:x="722" fg:w="1"/><text x="16.8134%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="16.5634%" y="693" width="0.0229%" height="15" fill="rgb(248,207,23)" fg:x="722" fg:w="1"/><text x="16.8134%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="16.5634%" y="677" width="0.0229%" height="15" fill="rgb(214,186,4)" fg:x="722" fg:w="1"/><text x="16.8134%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="16.5634%" y="661" width="0.0229%" height="15" fill="rgb(220,133,22)" fg:x="722" fg:w="1"/><text x="16.8134%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="16.5634%" y="869" width="0.0688%" height="15" fill="rgb(239,134,19)" fg:x="722" fg:w="3"/><text x="16.8134%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.07%)</title><rect x="16.5634%" y="853" width="0.0688%" height="15" fill="rgb(250,140,9)" fg:x="722" fg:w="3"/><text x="16.8134%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.07%)</title><rect x="16.5634%" y="837" width="0.0688%" height="15" fill="rgb(225,59,14)" fg:x="722" fg:w="3"/><text x="16.8134%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="16.5634%" y="821" width="0.0688%" height="15" fill="rgb(214,152,51)" fg:x="722" fg:w="3"/><text x="16.8134%" y="831.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3 samples, 0.07%)</title><rect x="16.5634%" y="805" width="0.0688%" height="15" fill="rgb(251,227,43)" fg:x="722" fg:w="3"/><text x="16.8134%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.07%)</title><rect x="16.5634%" y="789" width="0.0688%" height="15" fill="rgb(241,96,17)" fg:x="722" fg:w="3"/><text x="16.8134%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.07%)</title><rect x="16.5634%" y="773" width="0.0688%" height="15" fill="rgb(234,198,43)" fg:x="722" fg:w="3"/><text x="16.8134%" y="783.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (3 samples, 0.07%)</title><rect x="16.5634%" y="757" width="0.0688%" height="15" fill="rgb(220,108,29)" fg:x="722" fg:w="3"/><text x="16.8134%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.05%)</title><rect x="16.5864%" y="741" width="0.0459%" height="15" fill="rgb(226,163,33)" fg:x="723" fg:w="2"/><text x="16.8364%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="16.5864%" y="725" width="0.0459%" height="15" fill="rgb(205,194,45)" fg:x="723" fg:w="2"/><text x="16.8364%" y="735.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="16.5864%" y="709" width="0.0459%" height="15" fill="rgb(206,143,44)" fg:x="723" fg:w="2"/><text x="16.8364%" y="719.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (2 samples, 0.05%)</title><rect x="16.5864%" y="693" width="0.0459%" height="15" fill="rgb(236,136,36)" fg:x="723" fg:w="2"/><text x="16.8364%" y="703.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.05%)</title><rect x="16.5864%" y="677" width="0.0459%" height="15" fill="rgb(249,172,42)" fg:x="723" fg:w="2"/><text x="16.8364%" y="687.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.05%)</title><rect x="16.5864%" y="661" width="0.0459%" height="15" fill="rgb(216,139,23)" fg:x="723" fg:w="2"/><text x="16.8364%" y="671.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.02%)</title><rect x="16.6093%" y="645" width="0.0229%" height="15" fill="rgb(207,166,20)" fg:x="724" fg:w="1"/><text x="16.8593%" y="655.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="16.6552%" y="597" width="0.0229%" height="15" fill="rgb(210,209,22)" fg:x="726" fg:w="1"/><text x="16.9052%" y="607.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="16.6552%" y="581" width="0.0229%" height="15" fill="rgb(232,118,20)" fg:x="726" fg:w="1"/><text x="16.9052%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="16.6552%" y="565" width="0.0229%" height="15" fill="rgb(238,113,42)" fg:x="726" fg:w="1"/><text x="16.9052%" y="575.50"></text></g><g><title>alloc::fmt::format (3 samples, 0.07%)</title><rect x="16.6323%" y="869" width="0.0688%" height="15" fill="rgb(231,42,5)" fg:x="725" fg:w="3"/><text x="16.8823%" y="879.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.07%)</title><rect x="16.6323%" y="853" width="0.0688%" height="15" fill="rgb(243,166,24)" fg:x="725" fg:w="3"/><text x="16.8823%" y="863.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="16.6552%" y="837" width="0.0459%" height="15" fill="rgb(237,226,12)" fg:x="726" fg:w="2"/><text x="16.9052%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="16.6552%" y="821" width="0.0459%" height="15" fill="rgb(229,133,24)" fg:x="726" fg:w="2"/><text x="16.9052%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="16.6552%" y="805" width="0.0459%" height="15" fill="rgb(238,33,43)" fg:x="726" fg:w="2"/><text x="16.9052%" y="815.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.05%)</title><rect x="16.6552%" y="789" width="0.0459%" height="15" fill="rgb(227,59,38)" fg:x="726" fg:w="2"/><text x="16.9052%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="16.6552%" y="773" width="0.0459%" height="15" fill="rgb(230,97,0)" fg:x="726" fg:w="2"/><text x="16.9052%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="16.6552%" y="757" width="0.0459%" height="15" fill="rgb(250,173,50)" fg:x="726" fg:w="2"/><text x="16.9052%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="16.6552%" y="741" width="0.0459%" height="15" fill="rgb(240,15,50)" fg:x="726" fg:w="2"/><text x="16.9052%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="16.6552%" y="725" width="0.0459%" height="15" fill="rgb(221,93,22)" fg:x="726" fg:w="2"/><text x="16.9052%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="16.6552%" y="709" width="0.0459%" height="15" fill="rgb(245,180,53)" fg:x="726" fg:w="2"/><text x="16.9052%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="16.6552%" y="693" width="0.0459%" height="15" fill="rgb(231,88,51)" fg:x="726" fg:w="2"/><text x="16.9052%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.05%)</title><rect x="16.6552%" y="677" width="0.0459%" height="15" fill="rgb(240,58,21)" fg:x="726" fg:w="2"/><text x="16.9052%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="16.6552%" y="661" width="0.0459%" height="15" fill="rgb(237,21,10)" fg:x="726" fg:w="2"/><text x="16.9052%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.05%)</title><rect x="16.6552%" y="645" width="0.0459%" height="15" fill="rgb(218,43,11)" fg:x="726" fg:w="2"/><text x="16.9052%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.05%)</title><rect x="16.6552%" y="629" width="0.0459%" height="15" fill="rgb(218,221,29)" fg:x="726" fg:w="2"/><text x="16.9052%" y="639.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.05%)</title><rect x="16.6552%" y="613" width="0.0459%" height="15" fill="rgb(214,118,42)" fg:x="726" fg:w="2"/><text x="16.9052%" y="623.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="16.6781%" y="597" width="0.0229%" height="15" fill="rgb(251,200,26)" fg:x="727" fg:w="1"/><text x="16.9281%" y="607.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="16.7011%" y="821" width="0.0229%" height="15" fill="rgb(237,101,39)" fg:x="728" fg:w="1"/><text x="16.9511%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="16.7011%" y="805" width="0.0229%" height="15" fill="rgb(251,117,11)" fg:x="728" fg:w="1"/><text x="16.9511%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="16.7011%" y="789" width="0.0229%" height="15" fill="rgb(216,223,23)" fg:x="728" fg:w="1"/><text x="16.9511%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="16.7011%" y="773" width="0.0229%" height="15" fill="rgb(251,54,12)" fg:x="728" fg:w="1"/><text x="16.9511%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="16.7011%" y="757" width="0.0229%" height="15" fill="rgb(254,176,54)" fg:x="728" fg:w="1"/><text x="16.9511%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="16.7011%" y="741" width="0.0229%" height="15" fill="rgb(210,32,8)" fg:x="728" fg:w="1"/><text x="16.9511%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="16.7011%" y="725" width="0.0229%" height="15" fill="rgb(235,52,38)" fg:x="728" fg:w="1"/><text x="16.9511%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="16.7011%" y="709" width="0.0229%" height="15" fill="rgb(231,4,44)" fg:x="728" fg:w="1"/><text x="16.9511%" y="719.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.05%)</title><rect x="16.7011%" y="869" width="0.0459%" height="15" fill="rgb(249,2,32)" fg:x="728" fg:w="2"/><text x="16.9511%" y="879.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="16.7011%" y="853" width="0.0459%" height="15" fill="rgb(224,65,26)" fg:x="728" fg:w="2"/><text x="16.9511%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="16.7011%" y="837" width="0.0459%" height="15" fill="rgb(250,73,40)" fg:x="728" fg:w="2"/><text x="16.9511%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="16.7240%" y="821" width="0.0229%" height="15" fill="rgb(253,177,16)" fg:x="729" fg:w="1"/><text x="16.9740%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="16.7240%" y="805" width="0.0229%" height="15" fill="rgb(217,32,34)" fg:x="729" fg:w="1"/><text x="16.9740%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="16.7240%" y="789" width="0.0229%" height="15" fill="rgb(212,7,10)" fg:x="729" fg:w="1"/><text x="16.9740%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="16.7240%" y="773" width="0.0229%" height="15" fill="rgb(245,89,8)" fg:x="729" fg:w="1"/><text x="16.9740%" y="783.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.02%)</title><rect x="16.7240%" y="757" width="0.0229%" height="15" fill="rgb(237,16,53)" fg:x="729" fg:w="1"/><text x="16.9740%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="16.7240%" y="741" width="0.0229%" height="15" fill="rgb(250,204,30)" fg:x="729" fg:w="1"/><text x="16.9740%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="16.7240%" y="725" width="0.0229%" height="15" fill="rgb(208,77,27)" fg:x="729" fg:w="1"/><text x="16.9740%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="16.7240%" y="709" width="0.0229%" height="15" fill="rgb(250,204,28)" fg:x="729" fg:w="1"/><text x="16.9740%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="16.7240%" y="693" width="0.0229%" height="15" fill="rgb(244,63,21)" fg:x="729" fg:w="1"/><text x="16.9740%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="16.7240%" y="677" width="0.0229%" height="15" fill="rgb(236,85,44)" fg:x="729" fg:w="1"/><text x="16.9740%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="16.7240%" y="661" width="0.0229%" height="15" fill="rgb(215,98,4)" fg:x="729" fg:w="1"/><text x="16.9740%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="16.7240%" y="645" width="0.0229%" height="15" fill="rgb(235,38,11)" fg:x="729" fg:w="1"/><text x="16.9740%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="16.7240%" y="629" width="0.0229%" height="15" fill="rgb(254,186,25)" fg:x="729" fg:w="1"/><text x="16.9740%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="16.7470%" y="549" width="0.0229%" height="15" fill="rgb(225,55,31)" fg:x="730" fg:w="1"/><text x="16.9970%" y="559.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.05%)</title><rect x="16.7470%" y="853" width="0.0459%" height="15" fill="rgb(211,15,21)" fg:x="730" fg:w="2"/><text x="16.9970%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.05%)</title><rect x="16.7470%" y="837" width="0.0459%" height="15" fill="rgb(215,187,41)" fg:x="730" fg:w="2"/><text x="16.9970%" y="847.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="16.7470%" y="821" width="0.0459%" height="15" fill="rgb(248,69,32)" fg:x="730" fg:w="2"/><text x="16.9970%" y="831.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="16.7470%" y="805" width="0.0459%" height="15" fill="rgb(252,102,52)" fg:x="730" fg:w="2"/><text x="16.9970%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="16.7470%" y="789" width="0.0459%" height="15" fill="rgb(253,140,32)" fg:x="730" fg:w="2"/><text x="16.9970%" y="799.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.05%)</title><rect x="16.7470%" y="773" width="0.0459%" height="15" fill="rgb(216,56,42)" fg:x="730" fg:w="2"/><text x="16.9970%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="16.7470%" y="757" width="0.0459%" height="15" fill="rgb(216,184,14)" fg:x="730" fg:w="2"/><text x="16.9970%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="16.7470%" y="741" width="0.0459%" height="15" fill="rgb(237,187,27)" fg:x="730" fg:w="2"/><text x="16.9970%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="16.7470%" y="725" width="0.0459%" height="15" fill="rgb(219,65,3)" fg:x="730" fg:w="2"/><text x="16.9970%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="16.7470%" y="709" width="0.0459%" height="15" fill="rgb(245,83,25)" fg:x="730" fg:w="2"/><text x="16.9970%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="16.7470%" y="693" width="0.0459%" height="15" fill="rgb(214,205,45)" fg:x="730" fg:w="2"/><text x="16.9970%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="16.7470%" y="677" width="0.0459%" height="15" fill="rgb(241,20,18)" fg:x="730" fg:w="2"/><text x="16.9970%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.05%)</title><rect x="16.7470%" y="661" width="0.0459%" height="15" fill="rgb(232,163,23)" fg:x="730" fg:w="2"/><text x="16.9970%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="16.7470%" y="645" width="0.0459%" height="15" fill="rgb(214,5,46)" fg:x="730" fg:w="2"/><text x="16.9970%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.05%)</title><rect x="16.7470%" y="629" width="0.0459%" height="15" fill="rgb(229,78,17)" fg:x="730" fg:w="2"/><text x="16.9970%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.05%)</title><rect x="16.7470%" y="613" width="0.0459%" height="15" fill="rgb(248,89,10)" fg:x="730" fg:w="2"/><text x="16.9970%" y="623.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.05%)</title><rect x="16.7470%" y="597" width="0.0459%" height="15" fill="rgb(248,54,15)" fg:x="730" fg:w="2"/><text x="16.9970%" y="607.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.05%)</title><rect x="16.7470%" y="581" width="0.0459%" height="15" fill="rgb(223,116,6)" fg:x="730" fg:w="2"/><text x="16.9970%" y="591.50"></text></g><g><title>_int_realloc (2 samples, 0.05%)</title><rect x="16.7470%" y="565" width="0.0459%" height="15" fill="rgb(205,125,38)" fg:x="730" fg:w="2"/><text x="16.9970%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="16.7699%" y="549" width="0.0229%" height="15" fill="rgb(251,78,38)" fg:x="731" fg:w="1"/><text x="17.0199%" y="559.50"></text></g><g><title>y2021::d12::main2::p01 (47 samples, 1.08%)</title><rect x="15.7376%" y="1077" width="1.0782%" height="15" fill="rgb(253,78,28)" fg:x="686" fg:w="47"/><text x="15.9876%" y="1087.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.06%)</title><rect x="15.7605%" y="1061" width="1.0553%" height="15" fill="rgb(209,120,3)" fg:x="687" fg:w="46"/><text x="16.0105%" y="1071.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.06%)</title><rect x="15.7605%" y="1045" width="1.0553%" height="15" fill="rgb(238,229,9)" fg:x="687" fg:w="46"/><text x="16.0105%" y="1055.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.06%)</title><rect x="15.7605%" y="1029" width="1.0553%" height="15" fill="rgb(253,159,18)" fg:x="687" fg:w="46"/><text x="16.0105%" y="1039.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.06%)</title><rect x="15.7605%" y="1013" width="1.0553%" height="15" fill="rgb(244,42,34)" fg:x="687" fg:w="46"/><text x="16.0105%" y="1023.50"></text></g><g><title>y2021::d12::main2::traverse (46 samples, 1.06%)</title><rect x="15.7605%" y="997" width="1.0553%" height="15" fill="rgb(224,8,7)" fg:x="687" fg:w="46"/><text x="16.0105%" y="1007.50"></text></g><g><title>y2021::d12::main2::traverse (45 samples, 1.03%)</title><rect x="15.7834%" y="981" width="1.0323%" height="15" fill="rgb(210,201,45)" fg:x="688" fg:w="45"/><text x="16.0334%" y="991.50"></text></g><g><title>y2021::d12::main2::traverse (44 samples, 1.01%)</title><rect x="15.8064%" y="965" width="1.0094%" height="15" fill="rgb(252,185,21)" fg:x="689" fg:w="44"/><text x="16.0564%" y="975.50"></text></g><g><title>y2021::d12::main2::traverse (40 samples, 0.92%)</title><rect x="15.8981%" y="949" width="0.9176%" height="15" fill="rgb(223,131,1)" fg:x="693" fg:w="40"/><text x="16.1481%" y="959.50"></text></g><g><title>y2021::d12::main2::traverse (34 samples, 0.78%)</title><rect x="16.0358%" y="933" width="0.7800%" height="15" fill="rgb(245,141,16)" fg:x="699" fg:w="34"/><text x="16.2858%" y="943.50"></text></g><g><title>y2021::d12::main2::traverse (23 samples, 0.53%)</title><rect x="16.2881%" y="917" width="0.5276%" height="15" fill="rgb(229,55,45)" fg:x="710" fg:w="23"/><text x="16.5381%" y="927.50"></text></g><g><title>y2021::d12::main2::traverse (17 samples, 0.39%)</title><rect x="16.4258%" y="901" width="0.3900%" height="15" fill="rgb(208,92,15)" fg:x="716" fg:w="17"/><text x="16.6758%" y="911.50"></text></g><g><title>y2021::d12::main2::traverse (11 samples, 0.25%)</title><rect x="16.5634%" y="885" width="0.2524%" height="15" fill="rgb(234,185,47)" fg:x="722" fg:w="11"/><text x="16.8134%" y="895.50"></text></g><g><title>y2021::d12::main2::traverse (3 samples, 0.07%)</title><rect x="16.7470%" y="869" width="0.0688%" height="15" fill="rgb(253,104,50)" fg:x="730" fg:w="3"/><text x="16.9970%" y="879.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.02%)</title><rect x="16.7928%" y="853" width="0.0229%" height="15" fill="rgb(205,70,7)" fg:x="732" fg:w="1"/><text x="17.0428%" y="863.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.02%)</title><rect x="16.7928%" y="837" width="0.0229%" height="15" fill="rgb(240,178,43)" fg:x="732" fg:w="1"/><text x="17.0428%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.02%)</title><rect x="16.7928%" y="821" width="0.0229%" height="15" fill="rgb(214,112,2)" fg:x="732" fg:w="1"/><text x="17.0428%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="16.7928%" y="805" width="0.0229%" height="15" fill="rgb(206,46,17)" fg:x="732" fg:w="1"/><text x="17.0428%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="16.7928%" y="789" width="0.0229%" height="15" fill="rgb(225,220,16)" fg:x="732" fg:w="1"/><text x="17.0428%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="16.7928%" y="773" width="0.0229%" height="15" fill="rgb(238,65,40)" fg:x="732" fg:w="1"/><text x="17.0428%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="16.7928%" y="757" width="0.0229%" height="15" fill="rgb(230,151,21)" fg:x="732" fg:w="1"/><text x="17.0428%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="16.7928%" y="741" width="0.0229%" height="15" fill="rgb(218,58,49)" fg:x="732" fg:w="1"/><text x="17.0428%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="16.7928%" y="725" width="0.0229%" height="15" fill="rgb(219,179,14)" fg:x="732" fg:w="1"/><text x="17.0428%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="16.7928%" y="709" width="0.0229%" height="15" fill="rgb(223,72,1)" fg:x="732" fg:w="1"/><text x="17.0428%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="16.7928%" y="693" width="0.0229%" height="15" fill="rgb(238,126,10)" fg:x="732" fg:w="1"/><text x="17.0428%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="16.8158%" y="965" width="0.0459%" height="15" fill="rgb(224,206,38)" fg:x="733" fg:w="2"/><text x="17.0658%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="16.8158%" y="949" width="0.0459%" height="15" fill="rgb(212,201,54)" fg:x="733" fg:w="2"/><text x="17.0658%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (2 samples, 0.05%)</title><rect x="16.8158%" y="933" width="0.0459%" height="15" fill="rgb(218,154,48)" fg:x="733" fg:w="2"/><text x="17.0658%" y="943.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.05%)</title><rect x="16.8158%" y="917" width="0.0459%" height="15" fill="rgb(232,93,24)" fg:x="733" fg:w="2"/><text x="17.0658%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.05%)</title><rect x="16.8158%" y="901" width="0.0459%" height="15" fill="rgb(245,30,21)" fg:x="733" fg:w="2"/><text x="17.0658%" y="911.50"></text></g><g><title>__GI___libc_free (36 samples, 0.83%)</title><rect x="16.8617%" y="821" width="0.8259%" height="15" fill="rgb(242,148,29)" fg:x="735" fg:w="36"/><text x="17.1117%" y="831.50"></text></g><g><title>asm_sysvec_irq_work (1 samples, 0.02%)</title><rect x="17.6646%" y="805" width="0.0229%" height="15" fill="rgb(244,153,54)" fg:x="770" fg:w="1"/><text x="17.9146%" y="815.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.02%)</title><rect x="17.6646%" y="789" width="0.0229%" height="15" fill="rgb(252,87,22)" fg:x="770" fg:w="1"/><text x="17.9146%" y="799.50"></text></g><g><title>irqentry_exit (1 samples, 0.02%)</title><rect x="17.6646%" y="773" width="0.0229%" height="15" fill="rgb(210,51,29)" fg:x="770" fg:w="1"/><text x="17.9146%" y="783.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="17.6646%" y="757" width="0.0229%" height="15" fill="rgb(242,136,47)" fg:x="770" fg:w="1"/><text x="17.9146%" y="767.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="17.6646%" y="741" width="0.0229%" height="15" fill="rgb(238,68,4)" fg:x="770" fg:w="1"/><text x="17.9146%" y="751.50"></text></g><g><title>schedule (1 samples, 0.02%)</title><rect x="17.6646%" y="725" width="0.0229%" height="15" fill="rgb(242,161,30)" fg:x="770" fg:w="1"/><text x="17.9146%" y="735.50"></text></g><g><title>__schedule (1 samples, 0.02%)</title><rect x="17.6646%" y="709" width="0.0229%" height="15" fill="rgb(218,58,44)" fg:x="770" fg:w="1"/><text x="17.9146%" y="719.50"></text></g><g><title>psi_task_switch (1 samples, 0.02%)</title><rect x="17.6646%" y="693" width="0.0229%" height="15" fill="rgb(252,125,32)" fg:x="770" fg:w="1"/><text x="17.9146%" y="703.50"></text></g><g><title>psi_group_change (1 samples, 0.02%)</title><rect x="17.6646%" y="677" width="0.0229%" height="15" fill="rgb(219,178,0)" fg:x="770" fg:w="1"/><text x="17.9146%" y="687.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="17.6875%" y="821" width="0.0229%" height="15" fill="rgb(213,152,7)" fg:x="771" fg:w="1"/><text x="17.9375%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="17.6875%" y="805" width="0.0229%" height="15" fill="rgb(249,109,34)" fg:x="771" fg:w="1"/><text x="17.9375%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (56 samples, 1.28%)</title><rect x="16.8158%" y="981" width="1.2847%" height="15" fill="rgb(232,96,21)" fg:x="733" fg:w="56"/><text x="17.0658%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (54 samples, 1.24%)</title><rect x="16.8617%" y="965" width="1.2388%" height="15" fill="rgb(228,27,39)" fg:x="735" fg:w="54"/><text x="17.1117%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (54 samples, 1.24%)</title><rect x="16.8617%" y="949" width="1.2388%" height="15" fill="rgb(211,182,52)" fg:x="735" fg:w="54"/><text x="17.1117%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (54 samples, 1.24%)</title><rect x="16.8617%" y="933" width="1.2388%" height="15" fill="rgb(234,178,38)" fg:x="735" fg:w="54"/><text x="17.1117%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (54 samples, 1.24%)</title><rect x="16.8617%" y="917" width="1.2388%" height="15" fill="rgb(221,111,3)" fg:x="735" fg:w="54"/><text x="17.1117%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (54 samples, 1.24%)</title><rect x="16.8617%" y="901" width="1.2388%" height="15" fill="rgb(228,175,21)" fg:x="735" fg:w="54"/><text x="17.1117%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (54 samples, 1.24%)</title><rect x="16.8617%" y="885" width="1.2388%" height="15" fill="rgb(228,174,43)" fg:x="735" fg:w="54"/><text x="17.1117%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 1.24%)</title><rect x="16.8617%" y="869" width="1.2388%" height="15" fill="rgb(211,191,0)" fg:x="735" fg:w="54"/><text x="17.1117%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (54 samples, 1.24%)</title><rect x="16.8617%" y="853" width="1.2388%" height="15" fill="rgb(253,117,3)" fg:x="735" fg:w="54"/><text x="17.1117%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (54 samples, 1.24%)</title><rect x="16.8617%" y="837" width="1.2388%" height="15" fill="rgb(241,127,19)" fg:x="735" fg:w="54"/><text x="17.1117%" y="847.50"></text></g><g><title>_int_free (17 samples, 0.39%)</title><rect x="17.7105%" y="821" width="0.3900%" height="15" fill="rgb(218,103,12)" fg:x="772" fg:w="17"/><text x="17.9605%" y="831.50"></text></g><g><title>malloc_consolidate (25 samples, 0.57%)</title><rect x="18.1005%" y="901" width="0.5735%" height="15" fill="rgb(236,214,43)" fg:x="789" fg:w="25"/><text x="18.3505%" y="911.50"></text></g><g><title>unlink_chunk (14 samples, 0.32%)</title><rect x="18.3528%" y="885" width="0.3212%" height="15" fill="rgb(244,144,19)" fg:x="800" fg:w="14"/><text x="18.6028%" y="895.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="18.6740%" y="677" width="0.0229%" height="15" fill="rgb(246,188,10)" fg:x="814" fg:w="1"/><text x="18.9240%" y="687.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="18.6740%" y="661" width="0.0229%" height="15" fill="rgb(212,193,33)" fg:x="814" fg:w="1"/><text x="18.9240%" y="671.50"></text></g><g><title>free_pcp_prepare (1 samples, 0.02%)</title><rect x="18.6969%" y="661" width="0.0229%" height="15" fill="rgb(241,51,29)" fg:x="815" fg:w="1"/><text x="18.9469%" y="671.50"></text></g><g><title>tlb_finish_mmu (4 samples, 0.09%)</title><rect x="18.6740%" y="741" width="0.0918%" height="15" fill="rgb(211,58,19)" fg:x="814" fg:w="4"/><text x="18.9240%" y="751.50"></text></g><g><title>tlb_flush_mmu (4 samples, 0.09%)</title><rect x="18.6740%" y="725" width="0.0918%" height="15" fill="rgb(229,111,26)" fg:x="814" fg:w="4"/><text x="18.9240%" y="735.50"></text></g><g><title>free_pages_and_swap_cache (4 samples, 0.09%)</title><rect x="18.6740%" y="709" width="0.0918%" height="15" fill="rgb(213,115,40)" fg:x="814" fg:w="4"/><text x="18.9240%" y="719.50"></text></g><g><title>release_pages (4 samples, 0.09%)</title><rect x="18.6740%" y="693" width="0.0918%" height="15" fill="rgb(209,56,44)" fg:x="814" fg:w="4"/><text x="18.9240%" y="703.50"></text></g><g><title>free_unref_page_list (3 samples, 0.07%)</title><rect x="18.6969%" y="677" width="0.0688%" height="15" fill="rgb(230,108,32)" fg:x="815" fg:w="3"/><text x="18.9469%" y="687.50"></text></g><g><title>free_unref_page_commit (2 samples, 0.05%)</title><rect x="18.7199%" y="661" width="0.0459%" height="15" fill="rgb(216,165,31)" fg:x="816" fg:w="2"/><text x="18.9699%" y="671.50"></text></g><g><title>free_pcppages_bulk (2 samples, 0.05%)</title><rect x="18.7199%" y="645" width="0.0459%" height="15" fill="rgb(218,122,21)" fg:x="816" fg:w="2"/><text x="18.9699%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (90 samples, 2.06%)</title><rect x="16.8158%" y="1061" width="2.0647%" height="15" fill="rgb(223,224,47)" fg:x="733" fg:w="90"/><text x="17.0658%" y="1071.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (90 samples, 2.06%)</title><rect x="16.8158%" y="1045" width="2.0647%" height="15" fill="rgb(238,102,44)" fg:x="733" fg:w="90"/><text x="17.0658%" y="1055.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (90 samples, 2.06%)</title><rect x="16.8158%" y="1029" width="2.0647%" height="15" fill="rgb(236,46,40)" fg:x="733" fg:w="90"/><text x="17.0658%" y="1039.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (90 samples, 2.06%)</title><rect x="16.8158%" y="1013" width="2.0647%" height="15" fill="rgb(247,202,50)" fg:x="733" fg:w="90"/><text x="17.0658%" y="1023.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (90 samples, 2.06%)</title><rect x="16.8158%" y="997" width="2.0647%" height="15" fill="rgb(209,99,20)" fg:x="733" fg:w="90"/><text x="17.0658%" y="1007.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (34 samples, 0.78%)</title><rect x="18.1005%" y="981" width="0.7800%" height="15" fill="rgb(252,27,34)" fg:x="789" fg:w="34"/><text x="18.3505%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (34 samples, 0.78%)</title><rect x="18.1005%" y="965" width="0.7800%" height="15" fill="rgb(215,206,23)" fg:x="789" fg:w="34"/><text x="18.3505%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.78%)</title><rect x="18.1005%" y="949" width="0.7800%" height="15" fill="rgb(212,135,36)" fg:x="789" fg:w="34"/><text x="18.3505%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.78%)</title><rect x="18.1005%" y="933" width="0.7800%" height="15" fill="rgb(240,189,1)" fg:x="789" fg:w="34"/><text x="18.3505%" y="943.50"></text></g><g><title>_int_free (34 samples, 0.78%)</title><rect x="18.1005%" y="917" width="0.7800%" height="15" fill="rgb(242,56,20)" fg:x="789" fg:w="34"/><text x="18.3505%" y="927.50"></text></g><g><title>systrim (9 samples, 0.21%)</title><rect x="18.6740%" y="901" width="0.2065%" height="15" fill="rgb(247,132,33)" fg:x="814" fg:w="9"/><text x="18.9240%" y="911.50"></text></g><g><title>__GI___default_morecore (9 samples, 0.21%)</title><rect x="18.6740%" y="885" width="0.2065%" height="15" fill="rgb(208,149,11)" fg:x="814" fg:w="9"/><text x="18.9240%" y="895.50"></text></g><g><title>__GI___sbrk (9 samples, 0.21%)</title><rect x="18.6740%" y="869" width="0.2065%" height="15" fill="rgb(211,33,11)" fg:x="814" fg:w="9"/><text x="18.9240%" y="879.50"></text></g><g><title>__GI___sbrk (9 samples, 0.21%)</title><rect x="18.6740%" y="853" width="0.2065%" height="15" fill="rgb(221,29,38)" fg:x="814" fg:w="9"/><text x="18.9240%" y="863.50"></text></g><g><title>__brk (9 samples, 0.21%)</title><rect x="18.6740%" y="837" width="0.2065%" height="15" fill="rgb(206,182,49)" fg:x="814" fg:w="9"/><text x="18.9240%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.21%)</title><rect x="18.6740%" y="821" width="0.2065%" height="15" fill="rgb(216,140,1)" fg:x="814" fg:w="9"/><text x="18.9240%" y="831.50"></text></g><g><title>do_syscall_64 (9 samples, 0.21%)</title><rect x="18.6740%" y="805" width="0.2065%" height="15" fill="rgb(232,57,40)" fg:x="814" fg:w="9"/><text x="18.9240%" y="815.50"></text></g><g><title>__x64_sys_brk (9 samples, 0.21%)</title><rect x="18.6740%" y="789" width="0.2065%" height="15" fill="rgb(224,186,18)" fg:x="814" fg:w="9"/><text x="18.9240%" y="799.50"></text></g><g><title>__do_munmap (9 samples, 0.21%)</title><rect x="18.6740%" y="773" width="0.2065%" height="15" fill="rgb(215,121,11)" fg:x="814" fg:w="9"/><text x="18.9240%" y="783.50"></text></g><g><title>unmap_region (9 samples, 0.21%)</title><rect x="18.6740%" y="757" width="0.2065%" height="15" fill="rgb(245,147,10)" fg:x="814" fg:w="9"/><text x="18.9240%" y="767.50"></text></g><g><title>unmap_vmas (5 samples, 0.11%)</title><rect x="18.7658%" y="741" width="0.1147%" height="15" fill="rgb(238,153,13)" fg:x="818" fg:w="5"/><text x="19.0158%" y="751.50"></text></g><g><title>unmap_single_vma (5 samples, 0.11%)</title><rect x="18.7658%" y="725" width="0.1147%" height="15" fill="rgb(233,108,0)" fg:x="818" fg:w="5"/><text x="19.0158%" y="735.50"></text></g><g><title>unmap_page_range (5 samples, 0.11%)</title><rect x="18.7658%" y="709" width="0.1147%" height="15" fill="rgb(212,157,17)" fg:x="818" fg:w="5"/><text x="19.0158%" y="719.50"></text></g><g><title>zap_pte_range.isra.0 (5 samples, 0.11%)</title><rect x="18.7658%" y="693" width="0.1147%" height="15" fill="rgb(225,213,38)" fg:x="818" fg:w="5"/><text x="19.0158%" y="703.50"></text></g><g><title>page_remove_rmap (1 samples, 0.02%)</title><rect x="18.8575%" y="677" width="0.0229%" height="15" fill="rgb(248,16,11)" fg:x="822" fg:w="1"/><text x="19.1075%" y="687.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="18.8575%" y="661" width="0.0229%" height="15" fill="rgb(241,33,4)" fg:x="822" fg:w="1"/><text x="19.1075%" y="671.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="18.8575%" y="645" width="0.0229%" height="15" fill="rgb(222,26,43)" fg:x="822" fg:w="1"/><text x="19.1075%" y="655.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="18.8575%" y="629" width="0.0229%" height="15" fill="rgb(243,29,36)" fg:x="822" fg:w="1"/><text x="19.1075%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="18.8805%" y="949" width="0.0229%" height="15" fill="rgb(241,9,27)" fg:x="823" fg:w="1"/><text x="19.1305%" y="959.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="18.8805%" y="933" width="0.0229%" height="15" fill="rgb(205,117,26)" fg:x="823" fg:w="1"/><text x="19.1305%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="18.8805%" y="917" width="0.0229%" height="15" fill="rgb(209,80,39)" fg:x="823" fg:w="1"/><text x="19.1305%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="18.8805%" y="1013" width="0.0459%" height="15" fill="rgb(239,155,6)" fg:x="823" fg:w="2"/><text x="19.1305%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.05%)</title><rect x="18.8805%" y="997" width="0.0459%" height="15" fill="rgb(212,104,12)" fg:x="823" fg:w="2"/><text x="19.1305%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="18.8805%" y="981" width="0.0459%" height="15" fill="rgb(234,204,3)" fg:x="823" fg:w="2"/><text x="19.1305%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="18.8805%" y="965" width="0.0459%" height="15" fill="rgb(251,218,7)" fg:x="823" fg:w="2"/><text x="19.1305%" y="975.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.02%)</title><rect x="18.9034%" y="949" width="0.0229%" height="15" fill="rgb(221,81,32)" fg:x="824" fg:w="1"/><text x="19.1534%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.02%)</title><rect x="18.9034%" y="933" width="0.0229%" height="15" fill="rgb(214,152,26)" fg:x="824" fg:w="1"/><text x="19.1534%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="18.9034%" y="917" width="0.0229%" height="15" fill="rgb(223,22,3)" fg:x="824" fg:w="1"/><text x="19.1534%" y="927.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.02%)</title><rect x="18.9034%" y="901" width="0.0229%" height="15" fill="rgb(207,174,7)" fg:x="824" fg:w="1"/><text x="19.1534%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (1 samples, 0.02%)</title><rect x="18.9034%" y="885" width="0.0229%" height="15" fill="rgb(224,19,52)" fg:x="824" fg:w="1"/><text x="19.1534%" y="895.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.02%)</title><rect x="18.9034%" y="869" width="0.0229%" height="15" fill="rgb(228,24,14)" fg:x="824" fg:w="1"/><text x="19.1534%" y="879.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.02%)</title><rect x="18.9034%" y="853" width="0.0229%" height="15" fill="rgb(230,153,43)" fg:x="824" fg:w="1"/><text x="19.1534%" y="863.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.02%)</title><rect x="18.9034%" y="837" width="0.0229%" height="15" fill="rgb(231,106,12)" fg:x="824" fg:w="1"/><text x="19.1534%" y="847.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.02%)</title><rect x="18.9034%" y="821" width="0.0229%" height="15" fill="rgb(215,92,2)" fg:x="824" fg:w="1"/><text x="19.1534%" y="831.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="18.9034%" y="805" width="0.0229%" height="15" fill="rgb(249,143,25)" fg:x="824" fg:w="1"/><text x="19.1534%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="18.9034%" y="789" width="0.0229%" height="15" fill="rgb(252,7,35)" fg:x="824" fg:w="1"/><text x="19.1534%" y="799.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="18.9034%" y="773" width="0.0229%" height="15" fill="rgb(216,69,40)" fg:x="824" fg:w="1"/><text x="19.1534%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="18.9493%" y="997" width="0.0459%" height="15" fill="rgb(240,36,33)" fg:x="826" fg:w="2"/><text x="19.1993%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.05%)</title><rect x="18.9493%" y="981" width="0.0459%" height="15" fill="rgb(231,128,14)" fg:x="826" fg:w="2"/><text x="19.1993%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="18.9493%" y="965" width="0.0459%" height="15" fill="rgb(245,143,14)" fg:x="826" fg:w="2"/><text x="19.1993%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="18.9493%" y="949" width="0.0459%" height="15" fill="rgb(222,130,28)" fg:x="826" fg:w="2"/><text x="19.1993%" y="959.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.05%)</title><rect x="18.9493%" y="933" width="0.0459%" height="15" fill="rgb(212,10,48)" fg:x="826" fg:w="2"/><text x="19.1993%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.05%)</title><rect x="18.9493%" y="917" width="0.0459%" height="15" fill="rgb(254,118,45)" fg:x="826" fg:w="2"/><text x="19.1993%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.05%)</title><rect x="18.9493%" y="901" width="0.0459%" height="15" fill="rgb(228,6,45)" fg:x="826" fg:w="2"/><text x="19.1993%" y="911.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.05%)</title><rect x="18.9493%" y="885" width="0.0459%" height="15" fill="rgb(241,18,35)" fg:x="826" fg:w="2"/><text x="19.1993%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.05%)</title><rect x="18.9493%" y="869" width="0.0459%" height="15" fill="rgb(227,214,53)" fg:x="826" fg:w="2"/><text x="19.1993%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="18.9722%" y="853" width="0.0229%" height="15" fill="rgb(224,107,51)" fg:x="827" fg:w="1"/><text x="19.2222%" y="863.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="18.9722%" y="837" width="0.0229%" height="15" fill="rgb(248,60,28)" fg:x="827" fg:w="1"/><text x="19.2222%" y="847.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.02%)</title><rect x="18.9722%" y="821" width="0.0229%" height="15" fill="rgb(249,101,23)" fg:x="827" fg:w="1"/><text x="19.2222%" y="831.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.02%)</title><rect x="18.9722%" y="805" width="0.0229%" height="15" fill="rgb(228,51,19)" fg:x="827" fg:w="1"/><text x="19.2222%" y="815.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.02%)</title><rect x="18.9722%" y="789" width="0.0229%" height="15" fill="rgb(213,20,6)" fg:x="827" fg:w="1"/><text x="19.2222%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="18.9952%" y="981" width="0.0229%" height="15" fill="rgb(212,124,10)" fg:x="828" fg:w="1"/><text x="19.2452%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.02%)</title><rect x="18.9952%" y="965" width="0.0229%" height="15" fill="rgb(248,3,40)" fg:x="828" fg:w="1"/><text x="19.2452%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="18.9952%" y="949" width="0.0229%" height="15" fill="rgb(223,178,23)" fg:x="828" fg:w="1"/><text x="19.2452%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="18.9952%" y="933" width="0.0229%" height="15" fill="rgb(240,132,45)" fg:x="828" fg:w="1"/><text x="19.2452%" y="943.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.02%)</title><rect x="18.9952%" y="917" width="0.0229%" height="15" fill="rgb(245,164,36)" fg:x="828" fg:w="1"/><text x="19.2452%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.02%)</title><rect x="18.9952%" y="901" width="0.0229%" height="15" fill="rgb(231,188,53)" fg:x="828" fg:w="1"/><text x="19.2452%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="18.9952%" y="885" width="0.0229%" height="15" fill="rgb(237,198,39)" fg:x="828" fg:w="1"/><text x="19.2452%" y="895.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.02%)</title><rect x="18.9952%" y="869" width="0.0229%" height="15" fill="rgb(223,120,35)" fg:x="828" fg:w="1"/><text x="19.2452%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.02%)</title><rect x="18.9952%" y="853" width="0.0229%" height="15" fill="rgb(253,107,49)" fg:x="828" fg:w="1"/><text x="19.2452%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="18.9952%" y="837" width="0.0229%" height="15" fill="rgb(216,44,31)" fg:x="828" fg:w="1"/><text x="19.2452%" y="847.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="18.9952%" y="821" width="0.0229%" height="15" fill="rgb(253,87,21)" fg:x="828" fg:w="1"/><text x="19.2452%" y="831.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.02%)</title><rect x="18.9952%" y="805" width="0.0229%" height="15" fill="rgb(226,18,2)" fg:x="828" fg:w="1"/><text x="19.2452%" y="815.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.02%)</title><rect x="18.9952%" y="789" width="0.0229%" height="15" fill="rgb(216,8,46)" fg:x="828" fg:w="1"/><text x="19.2452%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="19.0181%" y="757" width="0.0229%" height="15" fill="rgb(226,140,39)" fg:x="829" fg:w="1"/><text x="19.2681%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="19.0181%" y="741" width="0.0229%" height="15" fill="rgb(221,194,54)" fg:x="829" fg:w="1"/><text x="19.2681%" y="751.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.02%)</title><rect x="19.0181%" y="725" width="0.0229%" height="15" fill="rgb(213,92,11)" fg:x="829" fg:w="1"/><text x="19.2681%" y="735.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.02%)</title><rect x="19.0181%" y="709" width="0.0229%" height="15" fill="rgb(229,162,46)" fg:x="829" fg:w="1"/><text x="19.2681%" y="719.50"></text></g><g><title>_int_realloc (1 samples, 0.02%)</title><rect x="19.0181%" y="693" width="0.0229%" height="15" fill="rgb(214,111,36)" fg:x="829" fg:w="1"/><text x="19.2681%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="19.0181%" y="677" width="0.0229%" height="15" fill="rgb(207,6,21)" fg:x="829" fg:w="1"/><text x="19.2681%" y="687.50"></text></g><g><title>alloc::fmt::format (2 samples, 0.05%)</title><rect x="19.0181%" y="981" width="0.0459%" height="15" fill="rgb(213,127,38)" fg:x="829" fg:w="2"/><text x="19.2681%" y="991.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.05%)</title><rect x="19.0181%" y="965" width="0.0459%" height="15" fill="rgb(238,118,32)" fg:x="829" fg:w="2"/><text x="19.2681%" y="975.50"></text></g><g><title>core::fmt::write (2 samples, 0.05%)</title><rect x="19.0181%" y="949" width="0.0459%" height="15" fill="rgb(240,139,39)" fg:x="829" fg:w="2"/><text x="19.2681%" y="959.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="19.0181%" y="933" width="0.0459%" height="15" fill="rgb(235,10,37)" fg:x="829" fg:w="2"/><text x="19.2681%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.05%)</title><rect x="19.0181%" y="917" width="0.0459%" height="15" fill="rgb(249,171,38)" fg:x="829" fg:w="2"/><text x="19.2681%" y="927.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.05%)</title><rect x="19.0181%" y="901" width="0.0459%" height="15" fill="rgb(242,144,32)" fg:x="829" fg:w="2"/><text x="19.2681%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.05%)</title><rect x="19.0181%" y="885" width="0.0459%" height="15" fill="rgb(217,117,21)" fg:x="829" fg:w="2"/><text x="19.2681%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.05%)</title><rect x="19.0181%" y="869" width="0.0459%" height="15" fill="rgb(249,87,1)" fg:x="829" fg:w="2"/><text x="19.2681%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.05%)</title><rect x="19.0181%" y="853" width="0.0459%" height="15" fill="rgb(248,196,48)" fg:x="829" fg:w="2"/><text x="19.2681%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="19.0181%" y="837" width="0.0459%" height="15" fill="rgb(251,206,33)" fg:x="829" fg:w="2"/><text x="19.2681%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="19.0181%" y="821" width="0.0459%" height="15" fill="rgb(232,141,28)" fg:x="829" fg:w="2"/><text x="19.2681%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.05%)</title><rect x="19.0181%" y="805" width="0.0459%" height="15" fill="rgb(209,167,14)" fg:x="829" fg:w="2"/><text x="19.2681%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.05%)</title><rect x="19.0181%" y="789" width="0.0459%" height="15" fill="rgb(225,11,50)" fg:x="829" fg:w="2"/><text x="19.2681%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.05%)</title><rect x="19.0181%" y="773" width="0.0459%" height="15" fill="rgb(209,50,20)" fg:x="829" fg:w="2"/><text x="19.2681%" y="783.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="19.0411%" y="757" width="0.0229%" height="15" fill="rgb(212,17,46)" fg:x="830" fg:w="1"/><text x="19.2911%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="19.0640%" y="837" width="0.0229%" height="15" fill="rgb(216,101,39)" fg:x="831" fg:w="1"/><text x="19.3140%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="19.0640%" y="821" width="0.0229%" height="15" fill="rgb(212,228,48)" fg:x="831" fg:w="1"/><text x="19.3140%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="19.0640%" y="805" width="0.0229%" height="15" fill="rgb(250,6,50)" fg:x="831" fg:w="1"/><text x="19.3140%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="19.0640%" y="789" width="0.0229%" height="15" fill="rgb(250,160,48)" fg:x="831" fg:w="1"/><text x="19.3140%" y="799.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="19.0640%" y="773" width="0.0229%" height="15" fill="rgb(244,216,33)" fg:x="831" fg:w="1"/><text x="19.3140%" y="783.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="19.0640%" y="757" width="0.0229%" height="15" fill="rgb(207,157,5)" fg:x="831" fg:w="1"/><text x="19.3140%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="19.0640%" y="741" width="0.0229%" height="15" fill="rgb(228,199,8)" fg:x="831" fg:w="1"/><text x="19.3140%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.02%)</title><rect x="19.0869%" y="837" width="0.0229%" height="15" fill="rgb(227,80,20)" fg:x="832" fg:w="1"/><text x="19.3369%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="19.0640%" y="965" width="0.0688%" height="15" fill="rgb(222,9,33)" fg:x="831" fg:w="3"/><text x="19.3140%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.07%)</title><rect x="19.0640%" y="949" width="0.0688%" height="15" fill="rgb(239,44,28)" fg:x="831" fg:w="3"/><text x="19.3140%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.07%)</title><rect x="19.0640%" y="933" width="0.0688%" height="15" fill="rgb(249,187,43)" fg:x="831" fg:w="3"/><text x="19.3140%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="19.0640%" y="917" width="0.0688%" height="15" fill="rgb(216,141,28)" fg:x="831" fg:w="3"/><text x="19.3140%" y="927.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3 samples, 0.07%)</title><rect x="19.0640%" y="901" width="0.0688%" height="15" fill="rgb(230,154,53)" fg:x="831" fg:w="3"/><text x="19.3140%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.07%)</title><rect x="19.0640%" y="885" width="0.0688%" height="15" fill="rgb(227,82,4)" fg:x="831" fg:w="3"/><text x="19.3140%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.07%)</title><rect x="19.0640%" y="869" width="0.0688%" height="15" fill="rgb(220,107,16)" fg:x="831" fg:w="3"/><text x="19.3140%" y="879.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (3 samples, 0.07%)</title><rect x="19.0640%" y="853" width="0.0688%" height="15" fill="rgb(207,187,2)" fg:x="831" fg:w="3"/><text x="19.3140%" y="863.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (1 samples, 0.02%)</title><rect x="19.1099%" y="837" width="0.0229%" height="15" fill="rgb(210,162,52)" fg:x="833" fg:w="1"/><text x="19.3599%" y="847.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.02%)</title><rect x="19.1099%" y="821" width="0.0229%" height="15" fill="rgb(217,216,49)" fg:x="833" fg:w="1"/><text x="19.3599%" y="831.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.02%)</title><rect x="19.1099%" y="805" width="0.0229%" height="15" fill="rgb(218,146,49)" fg:x="833" fg:w="1"/><text x="19.3599%" y="815.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.02%)</title><rect x="19.1099%" y="789" width="0.0229%" height="15" fill="rgb(216,55,40)" fg:x="833" fg:w="1"/><text x="19.3599%" y="799.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.02%)</title><rect x="19.1099%" y="773" width="0.0229%" height="15" fill="rgb(208,196,21)" fg:x="833" fg:w="1"/><text x="19.3599%" y="783.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="19.1099%" y="757" width="0.0229%" height="15" fill="rgb(242,117,42)" fg:x="833" fg:w="1"/><text x="19.3599%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="19.1099%" y="741" width="0.0229%" height="15" fill="rgb(210,11,23)" fg:x="833" fg:w="1"/><text x="19.3599%" y="751.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="19.1099%" y="725" width="0.0229%" height="15" fill="rgb(217,110,2)" fg:x="833" fg:w="1"/><text x="19.3599%" y="735.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="19.2017%" y="661" width="0.0229%" height="15" fill="rgb(229,77,54)" fg:x="837" fg:w="1"/><text x="19.4517%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.09%)</title><rect x="19.1558%" y="741" width="0.0918%" height="15" fill="rgb(218,53,16)" fg:x="835" fg:w="4"/><text x="19.4058%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.09%)</title><rect x="19.1558%" y="725" width="0.0918%" height="15" fill="rgb(215,38,13)" fg:x="835" fg:w="4"/><text x="19.4058%" y="735.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.09%)</title><rect x="19.1558%" y="709" width="0.0918%" height="15" fill="rgb(235,42,18)" fg:x="835" fg:w="4"/><text x="19.4058%" y="719.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.09%)</title><rect x="19.1558%" y="693" width="0.0918%" height="15" fill="rgb(219,66,54)" fg:x="835" fg:w="4"/><text x="19.4058%" y="703.50"></text></g><g><title>_int_realloc (4 samples, 0.09%)</title><rect x="19.1558%" y="677" width="0.0918%" height="15" fill="rgb(222,205,4)" fg:x="835" fg:w="4"/><text x="19.4058%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="19.2246%" y="661" width="0.0229%" height="15" fill="rgb(227,213,46)" fg:x="838" fg:w="1"/><text x="19.4746%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.11%)</title><rect x="19.1558%" y="917" width="0.1147%" height="15" fill="rgb(250,145,42)" fg:x="835" fg:w="5"/><text x="19.4058%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.11%)</title><rect x="19.1558%" y="901" width="0.1147%" height="15" fill="rgb(219,15,2)" fg:x="835" fg:w="5"/><text x="19.4058%" y="911.50"></text></g><g><title>alloc::string::String::push_str (5 samples, 0.11%)</title><rect x="19.1558%" y="885" width="0.1147%" height="15" fill="rgb(231,181,52)" fg:x="835" fg:w="5"/><text x="19.4058%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.11%)</title><rect x="19.1558%" y="869" width="0.1147%" height="15" fill="rgb(235,1,42)" fg:x="835" fg:w="5"/><text x="19.4058%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.11%)</title><rect x="19.1558%" y="853" width="0.1147%" height="15" fill="rgb(249,88,27)" fg:x="835" fg:w="5"/><text x="19.4058%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.11%)</title><rect x="19.1558%" y="837" width="0.1147%" height="15" fill="rgb(235,145,16)" fg:x="835" fg:w="5"/><text x="19.4058%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.11%)</title><rect x="19.1558%" y="821" width="0.1147%" height="15" fill="rgb(237,114,19)" fg:x="835" fg:w="5"/><text x="19.4058%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.11%)</title><rect x="19.1558%" y="805" width="0.1147%" height="15" fill="rgb(238,51,50)" fg:x="835" fg:w="5"/><text x="19.4058%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.11%)</title><rect x="19.1558%" y="789" width="0.1147%" height="15" fill="rgb(205,194,25)" fg:x="835" fg:w="5"/><text x="19.4058%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.11%)</title><rect x="19.1558%" y="773" width="0.1147%" height="15" fill="rgb(215,203,17)" fg:x="835" fg:w="5"/><text x="19.4058%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.11%)</title><rect x="19.1558%" y="757" width="0.1147%" height="15" fill="rgb(233,112,49)" fg:x="835" fg:w="5"/><text x="19.4058%" y="767.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="19.2475%" y="741" width="0.0229%" height="15" fill="rgb(241,130,26)" fg:x="839" fg:w="1"/><text x="19.4975%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="19.2475%" y="725" width="0.0229%" height="15" fill="rgb(252,223,19)" fg:x="839" fg:w="1"/><text x="19.4975%" y="735.50"></text></g><g><title>alloc::fmt::format (7 samples, 0.16%)</title><rect x="19.1328%" y="965" width="0.1606%" height="15" fill="rgb(211,95,25)" fg:x="834" fg:w="7"/><text x="19.3828%" y="975.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.16%)</title><rect x="19.1328%" y="949" width="0.1606%" height="15" fill="rgb(251,182,27)" fg:x="834" fg:w="7"/><text x="19.3828%" y="959.50"></text></g><g><title>core::fmt::write (7 samples, 0.16%)</title><rect x="19.1328%" y="933" width="0.1606%" height="15" fill="rgb(238,24,4)" fg:x="834" fg:w="7"/><text x="19.3828%" y="943.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.02%)</title><rect x="19.2705%" y="917" width="0.0229%" height="15" fill="rgb(224,220,25)" fg:x="840" fg:w="1"/><text x="19.5205%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="19.2934%" y="965" width="0.0229%" height="15" fill="rgb(239,133,26)" fg:x="841" fg:w="1"/><text x="19.5434%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="19.2934%" y="949" width="0.0229%" height="15" fill="rgb(211,94,48)" fg:x="841" fg:w="1"/><text x="19.5434%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="19.2934%" y="933" width="0.0229%" height="15" fill="rgb(239,87,6)" fg:x="841" fg:w="1"/><text x="19.5434%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="19.2934%" y="917" width="0.0229%" height="15" fill="rgb(227,62,0)" fg:x="841" fg:w="1"/><text x="19.5434%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="19.2934%" y="901" width="0.0229%" height="15" fill="rgb(211,226,4)" fg:x="841" fg:w="1"/><text x="19.5434%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="19.2934%" y="885" width="0.0229%" height="15" fill="rgb(253,38,52)" fg:x="841" fg:w="1"/><text x="19.5434%" y="895.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="19.2934%" y="869" width="0.0229%" height="15" fill="rgb(229,126,40)" fg:x="841" fg:w="1"/><text x="19.5434%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.05%)</title><rect x="19.3164%" y="965" width="0.0459%" height="15" fill="rgb(229,165,44)" fg:x="842" fg:w="2"/><text x="19.5664%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.05%)</title><rect x="19.3164%" y="949" width="0.0459%" height="15" fill="rgb(247,95,47)" fg:x="842" fg:w="2"/><text x="19.5664%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.05%)</title><rect x="19.3164%" y="933" width="0.0459%" height="15" fill="rgb(216,140,30)" fg:x="842" fg:w="2"/><text x="19.5664%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.05%)</title><rect x="19.3164%" y="917" width="0.0459%" height="15" fill="rgb(246,214,8)" fg:x="842" fg:w="2"/><text x="19.5664%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="19.3164%" y="901" width="0.0459%" height="15" fill="rgb(227,224,15)" fg:x="842" fg:w="2"/><text x="19.5664%" y="911.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.05%)</title><rect x="19.3164%" y="885" width="0.0459%" height="15" fill="rgb(233,175,4)" fg:x="842" fg:w="2"/><text x="19.5664%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.05%)</title><rect x="19.3164%" y="869" width="0.0459%" height="15" fill="rgb(221,66,45)" fg:x="842" fg:w="2"/><text x="19.5664%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="19.3164%" y="853" width="0.0459%" height="15" fill="rgb(221,178,18)" fg:x="842" fg:w="2"/><text x="19.5664%" y="863.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="19.3164%" y="837" width="0.0459%" height="15" fill="rgb(213,81,29)" fg:x="842" fg:w="2"/><text x="19.5664%" y="847.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="19.3164%" y="821" width="0.0459%" height="15" fill="rgb(220,89,49)" fg:x="842" fg:w="2"/><text x="19.5664%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="19.3164%" y="805" width="0.0459%" height="15" fill="rgb(227,60,33)" fg:x="842" fg:w="2"/><text x="19.5664%" y="815.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="19.3622%" y="789" width="0.0459%" height="15" fill="rgb(205,113,12)" fg:x="844" fg:w="2"/><text x="19.6122%" y="799.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.05%)</title><rect x="19.3622%" y="773" width="0.0459%" height="15" fill="rgb(211,32,1)" fg:x="844" fg:w="2"/><text x="19.6122%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.07%)</title><rect x="19.3622%" y="821" width="0.0688%" height="15" fill="rgb(246,2,12)" fg:x="844" fg:w="3"/><text x="19.6122%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="19.3622%" y="805" width="0.0688%" height="15" fill="rgb(243,37,27)" fg:x="844" fg:w="3"/><text x="19.6122%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1 samples, 0.02%)</title><rect x="19.4081%" y="789" width="0.0229%" height="15" fill="rgb(248,211,31)" fg:x="846" fg:w="1"/><text x="19.6581%" y="799.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="19.4081%" y="773" width="0.0229%" height="15" fill="rgb(242,146,47)" fg:x="846" fg:w="1"/><text x="19.6581%" y="783.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_lowercase (1 samples, 0.02%)</title><rect x="19.4081%" y="757" width="0.0229%" height="15" fill="rgb(206,70,20)" fg:x="846" fg:w="1"/><text x="19.6581%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.21%)</title><rect x="19.3622%" y="949" width="0.2065%" height="15" fill="rgb(215,10,51)" fg:x="844" fg:w="9"/><text x="19.6122%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (9 samples, 0.21%)</title><rect x="19.3622%" y="933" width="0.2065%" height="15" fill="rgb(243,178,53)" fg:x="844" fg:w="9"/><text x="19.6122%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.21%)</title><rect x="19.3622%" y="917" width="0.2065%" height="15" fill="rgb(233,221,20)" fg:x="844" fg:w="9"/><text x="19.6122%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.21%)</title><rect x="19.3622%" y="901" width="0.2065%" height="15" fill="rgb(218,95,35)" fg:x="844" fg:w="9"/><text x="19.6122%" y="911.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (9 samples, 0.21%)</title><rect x="19.3622%" y="885" width="0.2065%" height="15" fill="rgb(229,13,5)" fg:x="844" fg:w="9"/><text x="19.6122%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (9 samples, 0.21%)</title><rect x="19.3622%" y="869" width="0.2065%" height="15" fill="rgb(252,164,30)" fg:x="844" fg:w="9"/><text x="19.6122%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 0.21%)</title><rect x="19.3622%" y="853" width="0.2065%" height="15" fill="rgb(232,68,36)" fg:x="844" fg:w="9"/><text x="19.6122%" y="863.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (9 samples, 0.21%)</title><rect x="19.3622%" y="837" width="0.2065%" height="15" fill="rgb(219,59,54)" fg:x="844" fg:w="9"/><text x="19.6122%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (6 samples, 0.14%)</title><rect x="19.4311%" y="821" width="0.1376%" height="15" fill="rgb(250,92,33)" fg:x="847" fg:w="6"/><text x="19.6811%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.09%)</title><rect x="19.4769%" y="805" width="0.0918%" height="15" fill="rgb(229,162,54)" fg:x="849" fg:w="4"/><text x="19.7269%" y="815.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.09%)</title><rect x="19.4769%" y="789" width="0.0918%" height="15" fill="rgb(244,114,52)" fg:x="849" fg:w="4"/><text x="19.7269%" y="799.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (4 samples, 0.09%)</title><rect x="19.4769%" y="773" width="0.0918%" height="15" fill="rgb(212,211,43)" fg:x="849" fg:w="4"/><text x="19.7269%" y="783.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (4 samples, 0.09%)</title><rect x="19.4769%" y="757" width="0.0918%" height="15" fill="rgb(226,147,8)" fg:x="849" fg:w="4"/><text x="19.7269%" y="767.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (3 samples, 0.07%)</title><rect x="19.4999%" y="741" width="0.0688%" height="15" fill="rgb(226,23,13)" fg:x="850" fg:w="3"/><text x="19.7499%" y="751.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.02%)</title><rect x="19.5458%" y="725" width="0.0229%" height="15" fill="rgb(240,63,4)" fg:x="852" fg:w="1"/><text x="19.7958%" y="735.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.02%)</title><rect x="19.5687%" y="933" width="0.0229%" height="15" fill="rgb(221,1,32)" fg:x="853" fg:w="1"/><text x="19.8187%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.02%)</title><rect x="19.5687%" y="917" width="0.0229%" height="15" fill="rgb(242,117,10)" fg:x="853" fg:w="1"/><text x="19.8187%" y="927.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.02%)</title><rect x="19.5687%" y="901" width="0.0229%" height="15" fill="rgb(249,172,44)" fg:x="853" fg:w="1"/><text x="19.8187%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="19.5687%" y="885" width="0.0229%" height="15" fill="rgb(244,46,45)" fg:x="853" fg:w="1"/><text x="19.8187%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="19.5687%" y="869" width="0.0229%" height="15" fill="rgb(206,43,17)" fg:x="853" fg:w="1"/><text x="19.8187%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="19.5687%" y="853" width="0.0229%" height="15" fill="rgb(239,218,39)" fg:x="853" fg:w="1"/><text x="19.8187%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (2 samples, 0.05%)</title><rect x="19.5916%" y="741" width="0.0459%" height="15" fill="rgb(208,169,54)" fg:x="854" fg:w="2"/><text x="19.8416%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="19.6605%" y="645" width="0.0229%" height="15" fill="rgb(247,25,42)" fg:x="857" fg:w="1"/><text x="19.9105%" y="655.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.05%)</title><rect x="19.6605%" y="677" width="0.0459%" height="15" fill="rgb(226,23,31)" fg:x="857" fg:w="2"/><text x="19.9105%" y="687.50"></text></g><g><title>_int_realloc (2 samples, 0.05%)</title><rect x="19.6605%" y="661" width="0.0459%" height="15" fill="rgb(247,16,28)" fg:x="857" fg:w="2"/><text x="19.9105%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="19.6834%" y="645" width="0.0229%" height="15" fill="rgb(231,147,38)" fg:x="858" fg:w="1"/><text x="19.9334%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.07%)</title><rect x="19.6605%" y="725" width="0.0688%" height="15" fill="rgb(253,81,48)" fg:x="857" fg:w="3"/><text x="19.9105%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.07%)</title><rect x="19.6605%" y="709" width="0.0688%" height="15" fill="rgb(249,222,43)" fg:x="857" fg:w="3"/><text x="19.9105%" y="719.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.07%)</title><rect x="19.6605%" y="693" width="0.0688%" height="15" fill="rgb(221,3,27)" fg:x="857" fg:w="3"/><text x="19.9105%" y="703.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="19.7064%" y="677" width="0.0229%" height="15" fill="rgb(228,180,5)" fg:x="859" fg:w="1"/><text x="19.9564%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.02%)</title><rect x="19.7064%" y="661" width="0.0229%" height="15" fill="rgb(227,131,42)" fg:x="859" fg:w="1"/><text x="19.9564%" y="671.50"></text></g><g><title>alloc::fmt::format (8 samples, 0.18%)</title><rect x="19.5687%" y="949" width="0.1835%" height="15" fill="rgb(212,3,39)" fg:x="853" fg:w="8"/><text x="19.8187%" y="959.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.16%)</title><rect x="19.5916%" y="933" width="0.1606%" height="15" fill="rgb(226,45,5)" fg:x="854" fg:w="7"/><text x="19.8416%" y="943.50"></text></g><g><title>core::fmt::write (7 samples, 0.16%)</title><rect x="19.5916%" y="917" width="0.1606%" height="15" fill="rgb(215,167,45)" fg:x="854" fg:w="7"/><text x="19.8416%" y="927.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (7 samples, 0.16%)</title><rect x="19.5916%" y="901" width="0.1606%" height="15" fill="rgb(250,218,53)" fg:x="854" fg:w="7"/><text x="19.8416%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.16%)</title><rect x="19.5916%" y="885" width="0.1606%" height="15" fill="rgb(207,140,0)" fg:x="854" fg:w="7"/><text x="19.8416%" y="895.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.16%)</title><rect x="19.5916%" y="869" width="0.1606%" height="15" fill="rgb(238,133,51)" fg:x="854" fg:w="7"/><text x="19.8416%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.16%)</title><rect x="19.5916%" y="853" width="0.1606%" height="15" fill="rgb(218,203,53)" fg:x="854" fg:w="7"/><text x="19.8416%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.16%)</title><rect x="19.5916%" y="837" width="0.1606%" height="15" fill="rgb(226,184,25)" fg:x="854" fg:w="7"/><text x="19.8416%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.16%)</title><rect x="19.5916%" y="821" width="0.1606%" height="15" fill="rgb(231,121,21)" fg:x="854" fg:w="7"/><text x="19.8416%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.16%)</title><rect x="19.5916%" y="805" width="0.1606%" height="15" fill="rgb(251,14,34)" fg:x="854" fg:w="7"/><text x="19.8416%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.16%)</title><rect x="19.5916%" y="789" width="0.1606%" height="15" fill="rgb(249,193,11)" fg:x="854" fg:w="7"/><text x="19.8416%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.16%)</title><rect x="19.5916%" y="773" width="0.1606%" height="15" fill="rgb(220,172,37)" fg:x="854" fg:w="7"/><text x="19.8416%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.16%)</title><rect x="19.5916%" y="757" width="0.1606%" height="15" fill="rgb(231,229,43)" fg:x="854" fg:w="7"/><text x="19.8416%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.11%)</title><rect x="19.6375%" y="741" width="0.1147%" height="15" fill="rgb(250,161,5)" fg:x="856" fg:w="5"/><text x="19.8875%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="19.7293%" y="725" width="0.0229%" height="15" fill="rgb(218,225,18)" fg:x="860" fg:w="1"/><text x="19.9793%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.07%)</title><rect x="19.7522%" y="949" width="0.0688%" height="15" fill="rgb(245,45,42)" fg:x="861" fg:w="3"/><text x="20.0022%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.07%)</title><rect x="19.7522%" y="933" width="0.0688%" height="15" fill="rgb(211,115,1)" fg:x="861" fg:w="3"/><text x="20.0022%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.07%)</title><rect x="19.7522%" y="917" width="0.0688%" height="15" fill="rgb(248,133,52)" fg:x="861" fg:w="3"/><text x="20.0022%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="19.7522%" y="901" width="0.0688%" height="15" fill="rgb(238,100,21)" fg:x="861" fg:w="3"/><text x="20.0022%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="19.7522%" y="885" width="0.0688%" height="15" fill="rgb(247,144,11)" fg:x="861" fg:w="3"/><text x="20.0022%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="19.7522%" y="869" width="0.0688%" height="15" fill="rgb(206,164,16)" fg:x="861" fg:w="3"/><text x="20.0022%" y="879.50"></text></g><g><title>_int_free (3 samples, 0.07%)</title><rect x="19.7522%" y="853" width="0.0688%" height="15" fill="rgb(222,34,3)" fg:x="861" fg:w="3"/><text x="20.0022%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="19.8440%" y="869" width="0.0229%" height="15" fill="rgb(248,82,4)" fg:x="865" fg:w="1"/><text x="20.0940%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="19.8440%" y="853" width="0.0229%" height="15" fill="rgb(228,81,46)" fg:x="865" fg:w="1"/><text x="20.0940%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="19.8440%" y="837" width="0.0229%" height="15" fill="rgb(227,67,47)" fg:x="865" fg:w="1"/><text x="20.0940%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="19.8440%" y="821" width="0.0229%" height="15" fill="rgb(215,93,53)" fg:x="865" fg:w="1"/><text x="20.0940%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="19.8440%" y="805" width="0.0229%" height="15" fill="rgb(248,194,39)" fg:x="865" fg:w="1"/><text x="20.0940%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.07%)</title><rect x="19.8211%" y="885" width="0.0688%" height="15" fill="rgb(215,5,19)" fg:x="864" fg:w="3"/><text x="20.0711%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="19.8669%" y="869" width="0.0229%" height="15" fill="rgb(226,215,51)" fg:x="866" fg:w="1"/><text x="20.1169%" y="879.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="19.8669%" y="853" width="0.0229%" height="15" fill="rgb(225,56,26)" fg:x="866" fg:w="1"/><text x="20.1169%" y="863.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="19.8669%" y="837" width="0.0229%" height="15" fill="rgb(222,75,29)" fg:x="866" fg:w="1"/><text x="20.1169%" y="847.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="19.8669%" y="821" width="0.0229%" height="15" fill="rgb(236,139,6)" fg:x="866" fg:w="1"/><text x="20.1169%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="19.8899%" y="853" width="0.0229%" height="15" fill="rgb(223,137,36)" fg:x="867" fg:w="1"/><text x="20.1399%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="19.8899%" y="837" width="0.0229%" height="15" fill="rgb(226,99,2)" fg:x="867" fg:w="1"/><text x="20.1399%" y="847.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::any_bit_set (1 samples, 0.02%)</title><rect x="19.8899%" y="821" width="0.0229%" height="15" fill="rgb(206,133,23)" fg:x="867" fg:w="1"/><text x="20.1399%" y="831.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (5 samples, 0.11%)</title><rect x="19.8211%" y="949" width="0.1147%" height="15" fill="rgb(243,173,15)" fg:x="864" fg:w="5"/><text x="20.0711%" y="959.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (5 samples, 0.11%)</title><rect x="19.8211%" y="933" width="0.1147%" height="15" fill="rgb(228,69,28)" fg:x="864" fg:w="5"/><text x="20.0711%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (5 samples, 0.11%)</title><rect x="19.8211%" y="917" width="0.1147%" height="15" fill="rgb(212,51,22)" fg:x="864" fg:w="5"/><text x="20.0711%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.11%)</title><rect x="19.8211%" y="901" width="0.1147%" height="15" fill="rgb(227,113,0)" fg:x="864" fg:w="5"/><text x="20.0711%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.05%)</title><rect x="19.8899%" y="885" width="0.0459%" height="15" fill="rgb(252,84,27)" fg:x="867" fg:w="2"/><text x="20.1399%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="19.8899%" y="869" width="0.0459%" height="15" fill="rgb(223,145,39)" fg:x="867" fg:w="2"/><text x="20.1399%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="19.9128%" y="853" width="0.0229%" height="15" fill="rgb(239,219,30)" fg:x="868" fg:w="1"/><text x="20.1628%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="19.9128%" y="837" width="0.0229%" height="15" fill="rgb(224,196,39)" fg:x="868" fg:w="1"/><text x="20.1628%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="19.9128%" y="821" width="0.0229%" height="15" fill="rgb(205,35,43)" fg:x="868" fg:w="1"/><text x="20.1628%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="19.9128%" y="805" width="0.0229%" height="15" fill="rgb(228,201,21)" fg:x="868" fg:w="1"/><text x="20.1628%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="19.9128%" y="789" width="0.0229%" height="15" fill="rgb(237,118,16)" fg:x="868" fg:w="1"/><text x="20.1628%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="19.9128%" y="773" width="0.0229%" height="15" fill="rgb(241,17,19)" fg:x="868" fg:w="1"/><text x="20.1628%" y="783.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="19.9128%" y="757" width="0.0229%" height="15" fill="rgb(214,10,25)" fg:x="868" fg:w="1"/><text x="20.1628%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="19.9358%" y="869" width="0.0459%" height="15" fill="rgb(238,37,29)" fg:x="869" fg:w="2"/><text x="20.1858%" y="879.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="19.9587%" y="853" width="0.0229%" height="15" fill="rgb(253,83,25)" fg:x="870" fg:w="1"/><text x="20.2087%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="19.9587%" y="837" width="0.0229%" height="15" fill="rgb(234,192,12)" fg:x="870" fg:w="1"/><text x="20.2087%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="19.9816%" y="805" width="0.0459%" height="15" fill="rgb(241,216,45)" fg:x="871" fg:w="2"/><text x="20.2316%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="19.9816%" y="789" width="0.0459%" height="15" fill="rgb(242,22,33)" fg:x="871" fg:w="2"/><text x="20.2316%" y="799.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.05%)</title><rect x="19.9816%" y="773" width="0.0459%" height="15" fill="rgb(231,105,49)" fg:x="871" fg:w="2"/><text x="20.2316%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="19.9816%" y="757" width="0.0459%" height="15" fill="rgb(218,204,15)" fg:x="871" fg:w="2"/><text x="20.2316%" y="767.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="19.9816%" y="741" width="0.0459%" height="15" fill="rgb(235,138,41)" fg:x="871" fg:w="2"/><text x="20.2316%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="19.9816%" y="725" width="0.0459%" height="15" fill="rgb(246,0,9)" fg:x="871" fg:w="2"/><text x="20.2316%" y="735.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="20.0046%" y="709" width="0.0229%" height="15" fill="rgb(210,74,4)" fg:x="872" fg:w="1"/><text x="20.2546%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.05%)</title><rect x="20.0275%" y="805" width="0.0459%" height="15" fill="rgb(250,60,41)" fg:x="873" fg:w="2"/><text x="20.2775%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="20.0275%" y="789" width="0.0459%" height="15" fill="rgb(220,115,12)" fg:x="873" fg:w="2"/><text x="20.2775%" y="799.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="20.0275%" y="773" width="0.0459%" height="15" fill="rgb(237,100,13)" fg:x="873" fg:w="2"/><text x="20.2775%" y="783.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.05%)</title><rect x="20.0275%" y="757" width="0.0459%" height="15" fill="rgb(213,55,26)" fg:x="873" fg:w="2"/><text x="20.2775%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="20.0505%" y="741" width="0.0229%" height="15" fill="rgb(216,17,4)" fg:x="874" fg:w="1"/><text x="20.3005%" y="751.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="20.0505%" y="725" width="0.0229%" height="15" fill="rgb(220,153,47)" fg:x="874" fg:w="1"/><text x="20.3005%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="20.0505%" y="709" width="0.0229%" height="15" fill="rgb(215,131,9)" fg:x="874" fg:w="1"/><text x="20.3005%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.09%)</title><rect x="20.3946%" y="709" width="0.0918%" height="15" fill="rgb(233,46,42)" fg:x="889" fg:w="4"/><text x="20.6446%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.09%)</title><rect x="20.3946%" y="693" width="0.0918%" height="15" fill="rgb(226,86,7)" fg:x="889" fg:w="4"/><text x="20.6446%" y="703.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="20.4634%" y="677" width="0.0229%" height="15" fill="rgb(239,226,21)" fg:x="892" fg:w="1"/><text x="20.7134%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.02%)</title><rect x="20.4634%" y="661" width="0.0229%" height="15" fill="rgb(244,137,22)" fg:x="892" fg:w="1"/><text x="20.7134%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (20 samples, 0.46%)</title><rect x="20.0734%" y="805" width="0.4588%" height="15" fill="rgb(211,139,35)" fg:x="875" fg:w="20"/><text x="20.3234%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.32%)</title><rect x="20.2111%" y="789" width="0.3212%" height="15" fill="rgb(214,62,50)" fg:x="881" fg:w="14"/><text x="20.4611%" y="799.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.32%)</title><rect x="20.2111%" y="773" width="0.3212%" height="15" fill="rgb(212,113,44)" fg:x="881" fg:w="14"/><text x="20.4611%" y="783.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (14 samples, 0.32%)</title><rect x="20.2111%" y="757" width="0.3212%" height="15" fill="rgb(226,150,43)" fg:x="881" fg:w="14"/><text x="20.4611%" y="767.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (14 samples, 0.32%)</title><rect x="20.2111%" y="741" width="0.3212%" height="15" fill="rgb(250,71,37)" fg:x="881" fg:w="14"/><text x="20.4611%" y="751.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (12 samples, 0.28%)</title><rect x="20.2569%" y="725" width="0.2753%" height="15" fill="rgb(219,76,19)" fg:x="883" fg:w="12"/><text x="20.5069%" y="735.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (2 samples, 0.05%)</title><rect x="20.4864%" y="709" width="0.0459%" height="15" fill="rgb(250,39,11)" fg:x="893" fg:w="2"/><text x="20.7364%" y="719.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="20.6011%" y="725" width="0.0229%" height="15" fill="rgb(230,64,31)" fg:x="898" fg:w="1"/><text x="20.8511%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="20.6011%" y="709" width="0.0229%" height="15" fill="rgb(208,222,23)" fg:x="898" fg:w="1"/><text x="20.8511%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.02%)</title><rect x="20.6011%" y="693" width="0.0229%" height="15" fill="rgb(227,125,18)" fg:x="898" fg:w="1"/><text x="20.8511%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="20.6011%" y="677" width="0.0229%" height="15" fill="rgb(234,210,9)" fg:x="898" fg:w="1"/><text x="20.8511%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="20.6011%" y="661" width="0.0229%" height="15" fill="rgb(217,127,24)" fg:x="898" fg:w="1"/><text x="20.8511%" y="671.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1 samples, 0.02%)</title><rect x="20.6240%" y="725" width="0.0229%" height="15" fill="rgb(239,141,48)" fg:x="899" fg:w="1"/><text x="20.8740%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="20.6240%" y="709" width="0.0229%" height="15" fill="rgb(227,109,8)" fg:x="899" fg:w="1"/><text x="20.8740%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="20.6240%" y="693" width="0.0229%" height="15" fill="rgb(235,184,23)" fg:x="899" fg:w="1"/><text x="20.8740%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (30 samples, 0.69%)</title><rect x="19.9816%" y="853" width="0.6882%" height="15" fill="rgb(227,226,48)" fg:x="871" fg:w="30"/><text x="20.2316%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30 samples, 0.69%)</title><rect x="19.9816%" y="837" width="0.6882%" height="15" fill="rgb(206,150,11)" fg:x="871" fg:w="30"/><text x="20.2316%" y="847.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (30 samples, 0.69%)</title><rect x="19.9816%" y="821" width="0.6882%" height="15" fill="rgb(254,2,33)" fg:x="871" fg:w="30"/><text x="20.2316%" y="831.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (6 samples, 0.14%)</title><rect x="20.5322%" y="805" width="0.1376%" height="15" fill="rgb(243,160,20)" fg:x="895" fg:w="6"/><text x="20.7822%" y="815.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (6 samples, 0.14%)</title><rect x="20.5322%" y="789" width="0.1376%" height="15" fill="rgb(218,208,30)" fg:x="895" fg:w="6"/><text x="20.7822%" y="799.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (6 samples, 0.14%)</title><rect x="20.5322%" y="773" width="0.1376%" height="15" fill="rgb(224,120,49)" fg:x="895" fg:w="6"/><text x="20.7822%" y="783.50"></text></g><g><title>core::str::pattern::StrSearcher::new (6 samples, 0.14%)</title><rect x="20.5322%" y="757" width="0.1376%" height="15" fill="rgb(246,12,2)" fg:x="895" fg:w="6"/><text x="20.7822%" y="767.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (3 samples, 0.07%)</title><rect x="20.6011%" y="741" width="0.0688%" height="15" fill="rgb(236,117,3)" fg:x="898" fg:w="3"/><text x="20.8511%" y="751.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.02%)</title><rect x="20.6469%" y="725" width="0.0229%" height="15" fill="rgb(216,128,52)" fg:x="900" fg:w="1"/><text x="20.8969%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.78%)</title><rect x="19.9358%" y="933" width="0.7800%" height="15" fill="rgb(246,145,19)" fg:x="869" fg:w="34"/><text x="20.1858%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (34 samples, 0.78%)</title><rect x="19.9358%" y="917" width="0.7800%" height="15" fill="rgb(222,11,46)" fg:x="869" fg:w="34"/><text x="20.1858%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (34 samples, 0.78%)</title><rect x="19.9358%" y="901" width="0.7800%" height="15" fill="rgb(245,82,36)" fg:x="869" fg:w="34"/><text x="20.1858%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34 samples, 0.78%)</title><rect x="19.9358%" y="885" width="0.7800%" height="15" fill="rgb(250,73,51)" fg:x="869" fg:w="34"/><text x="20.1858%" y="895.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (32 samples, 0.73%)</title><rect x="19.9816%" y="869" width="0.7341%" height="15" fill="rgb(221,189,23)" fg:x="871" fg:w="32"/><text x="20.2316%" y="879.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.05%)</title><rect x="20.6699%" y="853" width="0.0459%" height="15" fill="rgb(210,33,7)" fg:x="901" fg:w="2"/><text x="20.9199%" y="863.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="20.7387%" y="885" width="0.0229%" height="15" fill="rgb(210,107,22)" fg:x="904" fg:w="1"/><text x="20.9887%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.02%)</title><rect x="20.8305%" y="725" width="0.0229%" height="15" fill="rgb(222,116,37)" fg:x="908" fg:w="1"/><text x="21.0805%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.18%)</title><rect x="20.8534%" y="709" width="0.1835%" height="15" fill="rgb(254,17,48)" fg:x="909" fg:w="8"/><text x="21.1034%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.18%)</title><rect x="20.8534%" y="693" width="0.1835%" height="15" fill="rgb(224,36,32)" fg:x="909" fg:w="8"/><text x="21.1034%" y="703.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.18%)</title><rect x="20.8534%" y="677" width="0.1835%" height="15" fill="rgb(232,90,46)" fg:x="909" fg:w="8"/><text x="21.1034%" y="687.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.18%)</title><rect x="20.8534%" y="661" width="0.1835%" height="15" fill="rgb(241,66,40)" fg:x="909" fg:w="8"/><text x="21.1034%" y="671.50"></text></g><g><title>_int_realloc (8 samples, 0.18%)</title><rect x="20.8534%" y="645" width="0.1835%" height="15" fill="rgb(249,184,29)" fg:x="909" fg:w="8"/><text x="21.1034%" y="655.50"></text></g><g><title>_int_malloc (6 samples, 0.14%)</title><rect x="20.8993%" y="629" width="0.1376%" height="15" fill="rgb(231,181,1)" fg:x="911" fg:w="6"/><text x="21.1493%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="21.0369%" y="709" width="0.0229%" height="15" fill="rgb(224,94,2)" fg:x="917" fg:w="1"/><text x="21.2869%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="21.0369%" y="693" width="0.0229%" height="15" fill="rgb(229,170,15)" fg:x="917" fg:w="1"/><text x="21.2869%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.30%)</title><rect x="20.7846%" y="789" width="0.2982%" height="15" fill="rgb(240,127,35)" fg:x="906" fg:w="13"/><text x="21.0346%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.30%)</title><rect x="20.7846%" y="773" width="0.2982%" height="15" fill="rgb(248,196,34)" fg:x="906" fg:w="13"/><text x="21.0346%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.28%)</title><rect x="20.8075%" y="757" width="0.2753%" height="15" fill="rgb(236,137,7)" fg:x="907" fg:w="12"/><text x="21.0575%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.25%)</title><rect x="20.8305%" y="741" width="0.2524%" height="15" fill="rgb(235,127,16)" fg:x="908" fg:w="11"/><text x="21.0805%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.23%)</title><rect x="20.8534%" y="725" width="0.2294%" height="15" fill="rgb(250,192,54)" fg:x="909" fg:w="10"/><text x="21.1034%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="21.0599%" y="709" width="0.0229%" height="15" fill="rgb(218,98,20)" fg:x="918" fg:w="1"/><text x="21.3099%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.07%)</title><rect x="21.0828%" y="789" width="0.0688%" height="15" fill="rgb(230,176,47)" fg:x="919" fg:w="3"/><text x="21.3328%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.07%)</title><rect x="21.0828%" y="773" width="0.0688%" height="15" fill="rgb(244,2,33)" fg:x="919" fg:w="3"/><text x="21.3328%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (18 samples, 0.41%)</title><rect x="20.7616%" y="885" width="0.4129%" height="15" fill="rgb(231,100,17)" fg:x="905" fg:w="18"/><text x="21.0116%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (17 samples, 0.39%)</title><rect x="20.7846%" y="869" width="0.3900%" height="15" fill="rgb(245,23,12)" fg:x="906" fg:w="17"/><text x="21.0346%" y="879.50"></text></g><g><title>alloc::string::String::push_str (17 samples, 0.39%)</title><rect x="20.7846%" y="853" width="0.3900%" height="15" fill="rgb(249,55,22)" fg:x="906" fg:w="17"/><text x="21.0346%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (17 samples, 0.39%)</title><rect x="20.7846%" y="837" width="0.3900%" height="15" fill="rgb(207,134,9)" fg:x="906" fg:w="17"/><text x="21.0346%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.39%)</title><rect x="20.7846%" y="821" width="0.3900%" height="15" fill="rgb(218,134,0)" fg:x="906" fg:w="17"/><text x="21.0346%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (17 samples, 0.39%)</title><rect x="20.7846%" y="805" width="0.3900%" height="15" fill="rgb(213,212,33)" fg:x="906" fg:w="17"/><text x="21.0346%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="21.1516%" y="789" width="0.0229%" height="15" fill="rgb(252,106,18)" fg:x="922" fg:w="1"/><text x="21.4016%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="21.1516%" y="773" width="0.0229%" height="15" fill="rgb(208,126,42)" fg:x="922" fg:w="1"/><text x="21.4016%" y="783.50"></text></g><g><title>alloc::fmt::format (21 samples, 0.48%)</title><rect x="20.7158%" y="933" width="0.4818%" height="15" fill="rgb(246,175,29)" fg:x="903" fg:w="21"/><text x="20.9658%" y="943.50"></text></g><g><title>core::fmt::Write::write_fmt (21 samples, 0.48%)</title><rect x="20.7158%" y="917" width="0.4818%" height="15" fill="rgb(215,13,50)" fg:x="903" fg:w="21"/><text x="20.9658%" y="927.50"></text></g><g><title>core::fmt::write (21 samples, 0.48%)</title><rect x="20.7158%" y="901" width="0.4818%" height="15" fill="rgb(216,172,15)" fg:x="903" fg:w="21"/><text x="20.9658%" y="911.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="21.1746%" y="885" width="0.0229%" height="15" fill="rgb(212,103,13)" fg:x="923" fg:w="1"/><text x="21.4246%" y="895.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="21.2205%" y="837" width="0.0229%" height="15" fill="rgb(231,171,36)" fg:x="925" fg:w="1"/><text x="21.4705%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="21.2205%" y="821" width="0.0229%" height="15" fill="rgb(250,123,20)" fg:x="925" fg:w="1"/><text x="21.4705%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="21.1975%" y="869" width="0.0688%" height="15" fill="rgb(212,53,50)" fg:x="924" fg:w="3"/><text x="21.4475%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="21.1975%" y="853" width="0.0688%" height="15" fill="rgb(243,54,12)" fg:x="924" fg:w="3"/><text x="21.4475%" y="863.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="21.2434%" y="837" width="0.0229%" height="15" fill="rgb(234,101,34)" fg:x="926" fg:w="1"/><text x="21.4934%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.09%)</title><rect x="21.1975%" y="933" width="0.0918%" height="15" fill="rgb(254,67,22)" fg:x="924" fg:w="4"/><text x="21.4475%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.09%)</title><rect x="21.1975%" y="917" width="0.0918%" height="15" fill="rgb(250,35,47)" fg:x="924" fg:w="4"/><text x="21.4475%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.09%)</title><rect x="21.1975%" y="901" width="0.0918%" height="15" fill="rgb(226,126,38)" fg:x="924" fg:w="4"/><text x="21.4475%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.09%)</title><rect x="21.1975%" y="885" width="0.0918%" height="15" fill="rgb(216,138,53)" fg:x="924" fg:w="4"/><text x="21.4475%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="21.2663%" y="869" width="0.0229%" height="15" fill="rgb(246,199,43)" fg:x="927" fg:w="1"/><text x="21.5163%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="21.2893%" y="853" width="0.0459%" height="15" fill="rgb(232,125,11)" fg:x="928" fg:w="2"/><text x="21.5393%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.3122%" y="837" width="0.0229%" height="15" fill="rgb(218,219,45)" fg:x="929" fg:w="1"/><text x="21.5622%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.3122%" y="821" width="0.0229%" height="15" fill="rgb(216,102,54)" fg:x="929" fg:w="1"/><text x="21.5622%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.07%)</title><rect x="21.2893%" y="885" width="0.0688%" height="15" fill="rgb(250,228,7)" fg:x="928" fg:w="3"/><text x="21.5393%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.07%)</title><rect x="21.2893%" y="869" width="0.0688%" height="15" fill="rgb(226,125,25)" fg:x="928" fg:w="3"/><text x="21.5393%" y="879.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="21.3352%" y="853" width="0.0229%" height="15" fill="rgb(224,165,27)" fg:x="930" fg:w="1"/><text x="21.5852%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.3352%" y="837" width="0.0229%" height="15" fill="rgb(233,86,3)" fg:x="930" fg:w="1"/><text x="21.5852%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.3352%" y="821" width="0.0229%" height="15" fill="rgb(228,116,20)" fg:x="930" fg:w="1"/><text x="21.5852%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="21.3352%" y="805" width="0.0229%" height="15" fill="rgb(209,192,17)" fg:x="930" fg:w="1"/><text x="21.5852%" y="815.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="21.3352%" y="789" width="0.0229%" height="15" fill="rgb(224,88,34)" fg:x="930" fg:w="1"/><text x="21.5852%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.09%)</title><rect x="21.2893%" y="933" width="0.0918%" height="15" fill="rgb(233,38,6)" fg:x="928" fg:w="4"/><text x="21.5393%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.09%)</title><rect x="21.2893%" y="917" width="0.0918%" height="15" fill="rgb(212,59,30)" fg:x="928" fg:w="4"/><text x="21.5393%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.09%)</title><rect x="21.2893%" y="901" width="0.0918%" height="15" fill="rgb(213,80,3)" fg:x="928" fg:w="4"/><text x="21.5393%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="21.3581%" y="885" width="0.0229%" height="15" fill="rgb(251,178,7)" fg:x="931" fg:w="1"/><text x="21.6081%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="21.3581%" y="869" width="0.0229%" height="15" fill="rgb(213,154,26)" fg:x="931" fg:w="1"/><text x="21.6081%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="21.3581%" y="853" width="0.0229%" height="15" fill="rgb(238,165,49)" fg:x="931" fg:w="1"/><text x="21.6081%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="21.3581%" y="837" width="0.0229%" height="15" fill="rgb(248,91,46)" fg:x="931" fg:w="1"/><text x="21.6081%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="21.3581%" y="821" width="0.0229%" height="15" fill="rgb(244,21,52)" fg:x="931" fg:w="1"/><text x="21.6081%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.11%)</title><rect x="21.3811%" y="821" width="0.1147%" height="15" fill="rgb(247,122,20)" fg:x="932" fg:w="5"/><text x="21.6311%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.11%)</title><rect x="21.3811%" y="805" width="0.1147%" height="15" fill="rgb(218,27,9)" fg:x="932" fg:w="5"/><text x="21.6311%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.11%)</title><rect x="21.3811%" y="789" width="0.1147%" height="15" fill="rgb(246,7,6)" fg:x="932" fg:w="5"/><text x="21.6311%" y="799.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.07%)</title><rect x="21.4269%" y="773" width="0.0688%" height="15" fill="rgb(227,135,54)" fg:x="934" fg:w="3"/><text x="21.6769%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (7 samples, 0.16%)</title><rect x="21.3811%" y="853" width="0.1606%" height="15" fill="rgb(247,14,11)" fg:x="932" fg:w="7"/><text x="21.6311%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (7 samples, 0.16%)</title><rect x="21.3811%" y="837" width="0.1606%" height="15" fill="rgb(206,149,34)" fg:x="932" fg:w="7"/><text x="21.6311%" y="847.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.05%)</title><rect x="21.4958%" y="821" width="0.0459%" height="15" fill="rgb(227,228,4)" fg:x="937" fg:w="2"/><text x="21.7458%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="21.4958%" y="805" width="0.0459%" height="15" fill="rgb(238,218,28)" fg:x="937" fg:w="2"/><text x="21.7458%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="21.4958%" y="789" width="0.0459%" height="15" fill="rgb(252,86,40)" fg:x="937" fg:w="2"/><text x="21.7458%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="21.4958%" y="773" width="0.0459%" height="15" fill="rgb(251,225,11)" fg:x="937" fg:w="2"/><text x="21.7458%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.21%)</title><rect x="21.3811%" y="869" width="0.2065%" height="15" fill="rgb(206,46,49)" fg:x="932" fg:w="9"/><text x="21.6311%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="21.5416%" y="853" width="0.0459%" height="15" fill="rgb(245,128,24)" fg:x="939" fg:w="2"/><text x="21.7916%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="21.5416%" y="837" width="0.0459%" height="15" fill="rgb(219,177,34)" fg:x="939" fg:w="2"/><text x="21.7916%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="21.5416%" y="821" width="0.0459%" height="15" fill="rgb(218,60,48)" fg:x="939" fg:w="2"/><text x="21.7916%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="21.5646%" y="805" width="0.0229%" height="15" fill="rgb(221,11,5)" fg:x="940" fg:w="1"/><text x="21.8146%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="21.5646%" y="789" width="0.0229%" height="15" fill="rgb(220,148,13)" fg:x="940" fg:w="1"/><text x="21.8146%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="21.6334%" y="837" width="0.0229%" height="15" fill="rgb(210,16,3)" fg:x="943" fg:w="1"/><text x="21.8834%" y="847.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="21.6563%" y="837" width="0.0229%" height="15" fill="rgb(236,80,2)" fg:x="944" fg:w="1"/><text x="21.9063%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="21.6563%" y="821" width="0.0229%" height="15" fill="rgb(239,129,19)" fg:x="944" fg:w="1"/><text x="21.9063%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="21.6563%" y="805" width="0.0229%" height="15" fill="rgb(220,106,35)" fg:x="944" fg:w="1"/><text x="21.9063%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="21.6563%" y="789" width="0.0229%" height="15" fill="rgb(252,139,45)" fg:x="944" fg:w="1"/><text x="21.9063%" y="799.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="21.6563%" y="773" width="0.0229%" height="15" fill="rgb(229,8,36)" fg:x="944" fg:w="1"/><text x="21.9063%" y="783.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="21.6563%" y="757" width="0.0229%" height="15" fill="rgb(230,126,33)" fg:x="944" fg:w="1"/><text x="21.9063%" y="767.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (14 samples, 0.32%)</title><rect x="21.3811%" y="933" width="0.3212%" height="15" fill="rgb(239,140,21)" fg:x="932" fg:w="14"/><text x="21.6311%" y="943.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (14 samples, 0.32%)</title><rect x="21.3811%" y="917" width="0.3212%" height="15" fill="rgb(254,104,9)" fg:x="932" fg:w="14"/><text x="21.6311%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (14 samples, 0.32%)</title><rect x="21.3811%" y="901" width="0.3212%" height="15" fill="rgb(239,52,14)" fg:x="932" fg:w="14"/><text x="21.6311%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.32%)</title><rect x="21.3811%" y="885" width="0.3212%" height="15" fill="rgb(208,227,44)" fg:x="932" fg:w="14"/><text x="21.6311%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.11%)</title><rect x="21.5875%" y="869" width="0.1147%" height="15" fill="rgb(246,18,19)" fg:x="941" fg:w="5"/><text x="21.8375%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.11%)</title><rect x="21.5875%" y="853" width="0.1147%" height="15" fill="rgb(235,228,25)" fg:x="941" fg:w="5"/><text x="21.8375%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="21.6793%" y="837" width="0.0229%" height="15" fill="rgb(240,156,20)" fg:x="945" fg:w="1"/><text x="21.9293%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="21.6793%" y="821" width="0.0229%" height="15" fill="rgb(224,8,20)" fg:x="945" fg:w="1"/><text x="21.9293%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="21.6793%" y="805" width="0.0229%" height="15" fill="rgb(214,12,52)" fg:x="945" fg:w="1"/><text x="21.9293%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="21.6793%" y="789" width="0.0229%" height="15" fill="rgb(211,220,47)" fg:x="945" fg:w="1"/><text x="21.9293%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="21.6793%" y="773" width="0.0229%" height="15" fill="rgb(250,173,5)" fg:x="945" fg:w="1"/><text x="21.9293%" y="783.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (3 samples, 0.07%)</title><rect x="21.7022%" y="821" width="0.0688%" height="15" fill="rgb(250,125,52)" fg:x="946" fg:w="3"/><text x="21.9522%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.07%)</title><rect x="21.7022%" y="805" width="0.0688%" height="15" fill="rgb(209,133,18)" fg:x="946" fg:w="3"/><text x="21.9522%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (3 samples, 0.07%)</title><rect x="21.7022%" y="789" width="0.0688%" height="15" fill="rgb(216,173,22)" fg:x="946" fg:w="3"/><text x="21.9522%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.07%)</title><rect x="21.7022%" y="773" width="0.0688%" height="15" fill="rgb(205,3,22)" fg:x="946" fg:w="3"/><text x="21.9522%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="21.7022%" y="757" width="0.0688%" height="15" fill="rgb(248,22,20)" fg:x="946" fg:w="3"/><text x="21.9522%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="21.7022%" y="741" width="0.0688%" height="15" fill="rgb(233,6,29)" fg:x="946" fg:w="3"/><text x="21.9522%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="21.7022%" y="725" width="0.0688%" height="15" fill="rgb(240,22,54)" fg:x="946" fg:w="3"/><text x="21.9522%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.07%)</title><rect x="21.7022%" y="709" width="0.0688%" height="15" fill="rgb(231,133,32)" fg:x="946" fg:w="3"/><text x="21.9522%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="21.7481%" y="693" width="0.0229%" height="15" fill="rgb(248,193,4)" fg:x="948" fg:w="1"/><text x="21.9981%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (3 samples, 0.07%)</title><rect x="21.7710%" y="821" width="0.0688%" height="15" fill="rgb(211,178,46)" fg:x="949" fg:w="3"/><text x="22.0210%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (3 samples, 0.07%)</title><rect x="21.7710%" y="805" width="0.0688%" height="15" fill="rgb(224,5,42)" fg:x="949" fg:w="3"/><text x="22.0210%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.07%)</title><rect x="21.7710%" y="789" width="0.0688%" height="15" fill="rgb(239,176,25)" fg:x="949" fg:w="3"/><text x="22.0210%" y="799.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.05%)</title><rect x="21.7940%" y="773" width="0.0459%" height="15" fill="rgb(245,187,50)" fg:x="950" fg:w="2"/><text x="22.0440%" y="783.50"></text></g><g><title>exc_page_fault (2 samples, 0.05%)</title><rect x="21.7940%" y="757" width="0.0459%" height="15" fill="rgb(248,24,15)" fg:x="950" fg:w="2"/><text x="22.0440%" y="767.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.05%)</title><rect x="21.7940%" y="741" width="0.0459%" height="15" fill="rgb(205,166,13)" fg:x="950" fg:w="2"/><text x="22.0440%" y="751.50"></text></g><g><title>handle_mm_fault (2 samples, 0.05%)</title><rect x="21.7940%" y="725" width="0.0459%" height="15" fill="rgb(208,114,23)" fg:x="950" fg:w="2"/><text x="22.0440%" y="735.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="21.7940%" y="709" width="0.0459%" height="15" fill="rgb(239,127,18)" fg:x="950" fg:w="2"/><text x="22.0440%" y="719.50"></text></g><g><title>do_anonymous_page (2 samples, 0.05%)</title><rect x="21.7940%" y="693" width="0.0459%" height="15" fill="rgb(219,154,28)" fg:x="950" fg:w="2"/><text x="22.0440%" y="703.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.05%)</title><rect x="21.7940%" y="677" width="0.0459%" height="15" fill="rgb(225,157,23)" fg:x="950" fg:w="2"/><text x="22.0440%" y="687.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.05%)</title><rect x="21.7940%" y="661" width="0.0459%" height="15" fill="rgb(219,8,6)" fg:x="950" fg:w="2"/><text x="22.0440%" y="671.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.05%)</title><rect x="21.7940%" y="645" width="0.0459%" height="15" fill="rgb(212,47,6)" fg:x="950" fg:w="2"/><text x="22.0440%" y="655.50"></text></g><g><title>rmqueue (2 samples, 0.05%)</title><rect x="21.7940%" y="629" width="0.0459%" height="15" fill="rgb(224,190,4)" fg:x="950" fg:w="2"/><text x="22.0440%" y="639.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (7 samples, 0.16%)</title><rect x="21.7022%" y="933" width="0.1606%" height="15" fill="rgb(239,183,29)" fg:x="946" fg:w="7"/><text x="21.9522%" y="943.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (7 samples, 0.16%)</title><rect x="21.7022%" y="917" width="0.1606%" height="15" fill="rgb(213,57,7)" fg:x="946" fg:w="7"/><text x="21.9522%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.16%)</title><rect x="21.7022%" y="901" width="0.1606%" height="15" fill="rgb(216,148,1)" fg:x="946" fg:w="7"/><text x="21.9522%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.16%)</title><rect x="21.7022%" y="885" width="0.1606%" height="15" fill="rgb(236,182,29)" fg:x="946" fg:w="7"/><text x="21.9522%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (7 samples, 0.16%)</title><rect x="21.7022%" y="869" width="0.1606%" height="15" fill="rgb(244,120,48)" fg:x="946" fg:w="7"/><text x="21.9522%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.16%)</title><rect x="21.7022%" y="853" width="0.1606%" height="15" fill="rgb(206,71,34)" fg:x="946" fg:w="7"/><text x="21.9522%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (7 samples, 0.16%)</title><rect x="21.7022%" y="837" width="0.1606%" height="15" fill="rgb(242,32,6)" fg:x="946" fg:w="7"/><text x="21.9522%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.02%)</title><rect x="21.8399%" y="821" width="0.0229%" height="15" fill="rgb(241,35,3)" fg:x="952" fg:w="1"/><text x="22.0899%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="21.8399%" y="805" width="0.0229%" height="15" fill="rgb(222,62,19)" fg:x="952" fg:w="1"/><text x="22.0899%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="21.8399%" y="789" width="0.0229%" height="15" fill="rgb(223,110,41)" fg:x="952" fg:w="1"/><text x="22.0899%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="21.8399%" y="773" width="0.0229%" height="15" fill="rgb(208,224,4)" fg:x="952" fg:w="1"/><text x="22.0899%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.14%)</title><rect x="21.9546%" y="789" width="0.1376%" height="15" fill="rgb(241,137,19)" fg:x="957" fg:w="6"/><text x="22.2046%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.14%)</title><rect x="21.9546%" y="773" width="0.1376%" height="15" fill="rgb(244,24,17)" fg:x="957" fg:w="6"/><text x="22.2046%" y="783.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.14%)</title><rect x="21.9546%" y="757" width="0.1376%" height="15" fill="rgb(245,178,49)" fg:x="957" fg:w="6"/><text x="22.2046%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.14%)</title><rect x="21.9546%" y="741" width="0.1376%" height="15" fill="rgb(219,160,38)" fg:x="957" fg:w="6"/><text x="22.2046%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.14%)</title><rect x="21.9546%" y="725" width="0.1376%" height="15" fill="rgb(228,137,14)" fg:x="957" fg:w="6"/><text x="22.2046%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.14%)</title><rect x="21.9546%" y="709" width="0.1376%" height="15" fill="rgb(237,134,11)" fg:x="957" fg:w="6"/><text x="22.2046%" y="719.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.09%)</title><rect x="22.0005%" y="693" width="0.0918%" height="15" fill="rgb(211,126,44)" fg:x="959" fg:w="4"/><text x="22.2505%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.02%)</title><rect x="22.0922%" y="789" width="0.0229%" height="15" fill="rgb(226,171,33)" fg:x="963" fg:w="1"/><text x="22.3422%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="22.0922%" y="773" width="0.0229%" height="15" fill="rgb(253,99,13)" fg:x="963" fg:w="1"/><text x="22.3422%" y="783.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="22.0922%" y="757" width="0.0229%" height="15" fill="rgb(244,48,7)" fg:x="963" fg:w="1"/><text x="22.3422%" y="767.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.02%)</title><rect x="22.0922%" y="741" width="0.0229%" height="15" fill="rgb(244,217,54)" fg:x="963" fg:w="1"/><text x="22.3422%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="22.0922%" y="725" width="0.0229%" height="15" fill="rgb(224,15,18)" fg:x="963" fg:w="1"/><text x="22.3422%" y="735.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.07%)</title><rect x="22.6428%" y="693" width="0.0688%" height="15" fill="rgb(244,99,12)" fg:x="987" fg:w="3"/><text x="22.8928%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.07%)</title><rect x="22.6428%" y="677" width="0.0688%" height="15" fill="rgb(233,226,8)" fg:x="987" fg:w="3"/><text x="22.8928%" y="687.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.05%)</title><rect x="22.6657%" y="661" width="0.0459%" height="15" fill="rgb(229,211,3)" fg:x="988" fg:w="2"/><text x="22.9157%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.05%)</title><rect x="22.6657%" y="645" width="0.0459%" height="15" fill="rgb(216,140,21)" fg:x="988" fg:w="2"/><text x="22.9157%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (28 samples, 0.64%)</title><rect x="22.1152%" y="789" width="0.6423%" height="15" fill="rgb(234,122,30)" fg:x="964" fg:w="28"/><text x="22.3652%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (20 samples, 0.46%)</title><rect x="22.2987%" y="773" width="0.4588%" height="15" fill="rgb(236,25,46)" fg:x="972" fg:w="20"/><text x="22.5487%" y="783.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.41%)</title><rect x="22.3446%" y="757" width="0.4129%" height="15" fill="rgb(217,52,54)" fg:x="974" fg:w="18"/><text x="22.5946%" y="767.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (18 samples, 0.41%)</title><rect x="22.3446%" y="741" width="0.4129%" height="15" fill="rgb(222,29,26)" fg:x="974" fg:w="18"/><text x="22.5946%" y="751.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (18 samples, 0.41%)</title><rect x="22.3446%" y="725" width="0.4129%" height="15" fill="rgb(216,177,29)" fg:x="974" fg:w="18"/><text x="22.5946%" y="735.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (16 samples, 0.37%)</title><rect x="22.3905%" y="709" width="0.3671%" height="15" fill="rgb(247,136,51)" fg:x="976" fg:w="16"/><text x="22.6405%" y="719.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (2 samples, 0.05%)</title><rect x="22.7116%" y="693" width="0.0459%" height="15" fill="rgb(231,47,47)" fg:x="990" fg:w="2"/><text x="22.9616%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.09%)</title><rect x="22.8493%" y="709" width="0.0918%" height="15" fill="rgb(211,192,36)" fg:x="996" fg:w="4"/><text x="23.0993%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.09%)</title><rect x="22.8493%" y="693" width="0.0918%" height="15" fill="rgb(229,156,32)" fg:x="996" fg:w="4"/><text x="23.0993%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="22.8952%" y="677" width="0.0459%" height="15" fill="rgb(248,213,20)" fg:x="998" fg:w="2"/><text x="23.1452%" y="687.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.05%)</title><rect x="22.9410%" y="709" width="0.0459%" height="15" fill="rgb(217,64,7)" fg:x="1000" fg:w="2"/><text x="23.1910%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.05%)</title><rect x="22.9410%" y="693" width="0.0459%" height="15" fill="rgb(232,142,8)" fg:x="1000" fg:w="2"/><text x="23.1910%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (46 samples, 1.06%)</title><rect x="21.9546%" y="837" width="1.0553%" height="15" fill="rgb(224,92,44)" fg:x="957" fg:w="46"/><text x="22.2046%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (46 samples, 1.06%)</title><rect x="21.9546%" y="821" width="1.0553%" height="15" fill="rgb(214,169,17)" fg:x="957" fg:w="46"/><text x="22.2046%" y="831.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (46 samples, 1.06%)</title><rect x="21.9546%" y="805" width="1.0553%" height="15" fill="rgb(210,59,37)" fg:x="957" fg:w="46"/><text x="22.2046%" y="815.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (11 samples, 0.25%)</title><rect x="22.7575%" y="789" width="0.2524%" height="15" fill="rgb(214,116,48)" fg:x="992" fg:w="11"/><text x="23.0075%" y="799.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (11 samples, 0.25%)</title><rect x="22.7575%" y="773" width="0.2524%" height="15" fill="rgb(244,191,6)" fg:x="992" fg:w="11"/><text x="23.0075%" y="783.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (11 samples, 0.25%)</title><rect x="22.7575%" y="757" width="0.2524%" height="15" fill="rgb(241,50,52)" fg:x="992" fg:w="11"/><text x="23.0075%" y="767.50"></text></g><g><title>core::str::pattern::StrSearcher::new (11 samples, 0.25%)</title><rect x="22.7575%" y="741" width="0.2524%" height="15" fill="rgb(236,75,39)" fg:x="992" fg:w="11"/><text x="23.0075%" y="751.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (7 samples, 0.16%)</title><rect x="22.8493%" y="725" width="0.1606%" height="15" fill="rgb(236,99,0)" fg:x="996" fg:w="7"/><text x="23.0993%" y="735.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.02%)</title><rect x="22.9869%" y="709" width="0.0229%" height="15" fill="rgb(207,202,15)" fg:x="1002" fg:w="1"/><text x="23.2369%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 1.10%)</title><rect x="21.9546%" y="917" width="1.1012%" height="15" fill="rgb(233,207,14)" fg:x="957" fg:w="48"/><text x="22.2046%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (48 samples, 1.10%)</title><rect x="21.9546%" y="901" width="1.1012%" height="15" fill="rgb(226,27,51)" fg:x="957" fg:w="48"/><text x="22.2046%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 1.10%)</title><rect x="21.9546%" y="885" width="1.1012%" height="15" fill="rgb(206,104,42)" fg:x="957" fg:w="48"/><text x="22.2046%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (48 samples, 1.10%)</title><rect x="21.9546%" y="869" width="1.1012%" height="15" fill="rgb(212,225,4)" fg:x="957" fg:w="48"/><text x="22.2046%" y="879.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (48 samples, 1.10%)</title><rect x="21.9546%" y="853" width="1.1012%" height="15" fill="rgb(233,96,42)" fg:x="957" fg:w="48"/><text x="22.2046%" y="863.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.05%)</title><rect x="23.0099%" y="837" width="0.0459%" height="15" fill="rgb(229,21,32)" fg:x="1003" fg:w="2"/><text x="23.2599%" y="847.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (3 samples, 0.07%)</title><rect x="23.0787%" y="901" width="0.0688%" height="15" fill="rgb(226,216,24)" fg:x="1006" fg:w="3"/><text x="23.3287%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3 samples, 0.07%)</title><rect x="23.0787%" y="885" width="0.0688%" height="15" fill="rgb(221,163,17)" fg:x="1006" fg:w="3"/><text x="23.3287%" y="895.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3 samples, 0.07%)</title><rect x="23.0787%" y="869" width="0.0688%" height="15" fill="rgb(216,216,42)" fg:x="1006" fg:w="3"/><text x="23.3287%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="23.0787%" y="853" width="0.0688%" height="15" fill="rgb(240,118,7)" fg:x="1006" fg:w="3"/><text x="23.3287%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.07%)</title><rect x="23.0787%" y="837" width="0.0688%" height="15" fill="rgb(221,67,37)" fg:x="1006" fg:w="3"/><text x="23.3287%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="23.0787%" y="821" width="0.0688%" height="15" fill="rgb(241,32,44)" fg:x="1006" fg:w="3"/><text x="23.3287%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.05%)</title><rect x="23.3081%" y="709" width="0.0459%" height="15" fill="rgb(235,204,43)" fg:x="1016" fg:w="2"/><text x="23.5581%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (3 samples, 0.07%)</title><rect x="23.3540%" y="709" width="0.0688%" height="15" fill="rgb(213,116,10)" fg:x="1018" fg:w="3"/><text x="23.6040%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="23.5146%" y="613" width="0.0229%" height="15" fill="rgb(239,15,48)" fg:x="1025" fg:w="1"/><text x="23.7646%" y="623.50"></text></g><g><title>_int_free (3 samples, 0.07%)</title><rect x="23.5375%" y="613" width="0.0688%" height="15" fill="rgb(207,123,36)" fg:x="1026" fg:w="3"/><text x="23.7875%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.23%)</title><rect x="23.4457%" y="693" width="0.2294%" height="15" fill="rgb(209,103,30)" fg:x="1022" fg:w="10"/><text x="23.6957%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.23%)</title><rect x="23.4457%" y="677" width="0.2294%" height="15" fill="rgb(238,100,19)" fg:x="1022" fg:w="10"/><text x="23.6957%" y="687.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.23%)</title><rect x="23.4457%" y="661" width="0.2294%" height="15" fill="rgb(244,30,14)" fg:x="1022" fg:w="10"/><text x="23.6957%" y="671.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.23%)</title><rect x="23.4457%" y="645" width="0.2294%" height="15" fill="rgb(249,174,6)" fg:x="1022" fg:w="10"/><text x="23.6957%" y="655.50"></text></g><g><title>_int_realloc (8 samples, 0.18%)</title><rect x="23.4916%" y="629" width="0.1835%" height="15" fill="rgb(235,213,41)" fg:x="1024" fg:w="8"/><text x="23.7416%" y="639.50"></text></g><g><title>_int_malloc (3 samples, 0.07%)</title><rect x="23.6063%" y="613" width="0.0688%" height="15" fill="rgb(213,118,6)" fg:x="1029" fg:w="3"/><text x="23.8563%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.34%)</title><rect x="23.4228%" y="709" width="0.3441%" height="15" fill="rgb(235,44,51)" fg:x="1021" fg:w="15"/><text x="23.6728%" y="719.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.09%)</title><rect x="23.6752%" y="693" width="0.0918%" height="15" fill="rgb(217,9,53)" fg:x="1032" fg:w="4"/><text x="23.9252%" y="703.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="23.7440%" y="677" width="0.0229%" height="15" fill="rgb(237,172,34)" fg:x="1035" fg:w="1"/><text x="23.9940%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.50%)</title><rect x="23.2852%" y="773" width="0.5047%" height="15" fill="rgb(206,206,11)" fg:x="1015" fg:w="22"/><text x="23.5352%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.50%)</title><rect x="23.2852%" y="757" width="0.5047%" height="15" fill="rgb(214,149,29)" fg:x="1015" fg:w="22"/><text x="23.5352%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.50%)</title><rect x="23.2852%" y="741" width="0.5047%" height="15" fill="rgb(208,123,3)" fg:x="1015" fg:w="22"/><text x="23.5352%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.48%)</title><rect x="23.3081%" y="725" width="0.4818%" height="15" fill="rgb(229,126,4)" fg:x="1016" fg:w="21"/><text x="23.5581%" y="735.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="23.7669%" y="709" width="0.0229%" height="15" fill="rgb(222,92,36)" fg:x="1036" fg:w="1"/><text x="24.0169%" y="719.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="23.7669%" y="693" width="0.0229%" height="15" fill="rgb(216,39,41)" fg:x="1036" fg:w="1"/><text x="24.0169%" y="703.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="23.7669%" y="677" width="0.0229%" height="15" fill="rgb(253,127,28)" fg:x="1036" fg:w="1"/><text x="24.0169%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="23.7899%" y="773" width="0.0459%" height="15" fill="rgb(249,152,51)" fg:x="1037" fg:w="2"/><text x="24.0399%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="23.7899%" y="757" width="0.0459%" height="15" fill="rgb(209,123,42)" fg:x="1037" fg:w="2"/><text x="24.0399%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (27 samples, 0.62%)</title><rect x="23.2393%" y="869" width="0.6194%" height="15" fill="rgb(241,118,22)" fg:x="1013" fg:w="27"/><text x="23.4893%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (27 samples, 0.62%)</title><rect x="23.2393%" y="853" width="0.6194%" height="15" fill="rgb(208,25,7)" fg:x="1013" fg:w="27"/><text x="23.4893%" y="863.50"></text></g><g><title>alloc::string::String::push_str (27 samples, 0.62%)</title><rect x="23.2393%" y="837" width="0.6194%" height="15" fill="rgb(243,144,39)" fg:x="1013" fg:w="27"/><text x="23.4893%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27 samples, 0.62%)</title><rect x="23.2393%" y="821" width="0.6194%" height="15" fill="rgb(250,50,5)" fg:x="1013" fg:w="27"/><text x="23.4893%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.62%)</title><rect x="23.2393%" y="805" width="0.6194%" height="15" fill="rgb(207,67,11)" fg:x="1013" fg:w="27"/><text x="23.4893%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27 samples, 0.62%)</title><rect x="23.2393%" y="789" width="0.6194%" height="15" fill="rgb(245,204,40)" fg:x="1013" fg:w="27"/><text x="23.4893%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="23.8357%" y="773" width="0.0229%" height="15" fill="rgb(238,228,24)" fg:x="1039" fg:w="1"/><text x="24.0857%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="23.8357%" y="757" width="0.0229%" height="15" fill="rgb(217,116,22)" fg:x="1039" fg:w="1"/><text x="24.0857%" y="767.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="23.8587%" y="869" width="0.0229%" height="15" fill="rgb(234,98,12)" fg:x="1040" fg:w="1"/><text x="24.1087%" y="879.50"></text></g><g><title>alloc::fmt::format (37 samples, 0.85%)</title><rect x="23.0557%" y="917" width="0.8488%" height="15" fill="rgb(242,170,50)" fg:x="1005" fg:w="37"/><text x="23.3057%" y="927.50"></text></g><g><title>core::fmt::Write::write_fmt (33 samples, 0.76%)</title><rect x="23.1475%" y="901" width="0.7571%" height="15" fill="rgb(235,7,5)" fg:x="1009" fg:w="33"/><text x="23.3975%" y="911.50"></text></g><g><title>core::fmt::write (32 samples, 0.73%)</title><rect x="23.1705%" y="885" width="0.7341%" height="15" fill="rgb(241,114,28)" fg:x="1010" fg:w="32"/><text x="23.4205%" y="895.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.02%)</title><rect x="23.8816%" y="869" width="0.0229%" height="15" fill="rgb(246,112,42)" fg:x="1041" fg:w="1"/><text x="24.1316%" y="879.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="23.9275%" y="821" width="0.0229%" height="15" fill="rgb(248,228,14)" fg:x="1043" fg:w="1"/><text x="24.1775%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.14%)</title><rect x="23.9046%" y="917" width="0.1376%" height="15" fill="rgb(208,133,18)" fg:x="1042" fg:w="6"/><text x="24.1546%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.14%)</title><rect x="23.9046%" y="901" width="0.1376%" height="15" fill="rgb(207,35,49)" fg:x="1042" fg:w="6"/><text x="24.1546%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.14%)</title><rect x="23.9046%" y="885" width="0.1376%" height="15" fill="rgb(205,68,36)" fg:x="1042" fg:w="6"/><text x="24.1546%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.14%)</title><rect x="23.9046%" y="869" width="0.1376%" height="15" fill="rgb(245,62,40)" fg:x="1042" fg:w="6"/><text x="24.1546%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.14%)</title><rect x="23.9046%" y="853" width="0.1376%" height="15" fill="rgb(228,27,24)" fg:x="1042" fg:w="6"/><text x="24.1546%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.14%)</title><rect x="23.9046%" y="837" width="0.1376%" height="15" fill="rgb(253,19,12)" fg:x="1042" fg:w="6"/><text x="24.1546%" y="847.50"></text></g><g><title>_int_free (4 samples, 0.09%)</title><rect x="23.9504%" y="821" width="0.0918%" height="15" fill="rgb(232,28,20)" fg:x="1044" fg:w="4"/><text x="24.2004%" y="831.50"></text></g><g><title>free_perturb (1 samples, 0.02%)</title><rect x="24.0193%" y="805" width="0.0229%" height="15" fill="rgb(218,35,51)" fg:x="1047" fg:w="1"/><text x="24.2693%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="24.0422%" y="853" width="0.0459%" height="15" fill="rgb(212,90,40)" fg:x="1048" fg:w="2"/><text x="24.2922%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="24.0422%" y="837" width="0.0459%" height="15" fill="rgb(220,172,12)" fg:x="1048" fg:w="2"/><text x="24.2922%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="24.0422%" y="821" width="0.0459%" height="15" fill="rgb(226,159,20)" fg:x="1048" fg:w="2"/><text x="24.2922%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="24.0881%" y="853" width="0.0229%" height="15" fill="rgb(234,205,16)" fg:x="1050" fg:w="1"/><text x="24.3381%" y="863.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="24.0881%" y="837" width="0.0229%" height="15" fill="rgb(207,9,39)" fg:x="1050" fg:w="1"/><text x="24.3381%" y="847.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="24.0881%" y="821" width="0.0229%" height="15" fill="rgb(249,143,15)" fg:x="1050" fg:w="1"/><text x="24.3381%" y="831.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="24.0881%" y="805" width="0.0229%" height="15" fill="rgb(253,133,29)" fg:x="1050" fg:w="1"/><text x="24.3381%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.09%)</title><rect x="24.0422%" y="869" width="0.0918%" height="15" fill="rgb(221,187,0)" fg:x="1048" fg:w="4"/><text x="24.2922%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="24.1110%" y="853" width="0.0229%" height="15" fill="rgb(205,204,26)" fg:x="1051" fg:w="1"/><text x="24.3610%" y="863.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="24.1110%" y="837" width="0.0229%" height="15" fill="rgb(224,68,54)" fg:x="1051" fg:w="1"/><text x="24.3610%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="24.1110%" y="821" width="0.0229%" height="15" fill="rgb(209,67,4)" fg:x="1051" fg:w="1"/><text x="24.3610%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="24.1110%" y="805" width="0.0229%" height="15" fill="rgb(228,229,18)" fg:x="1051" fg:w="1"/><text x="24.3610%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="24.1110%" y="789" width="0.0229%" height="15" fill="rgb(231,89,13)" fg:x="1051" fg:w="1"/><text x="24.3610%" y="799.50"></text></g><g><title>&lt;&amp;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (1 samples, 0.02%)</title><rect x="24.1340%" y="821" width="0.0229%" height="15" fill="rgb(210,182,18)" fg:x="1052" fg:w="1"/><text x="24.3840%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.14%)</title><rect x="24.0422%" y="917" width="0.1376%" height="15" fill="rgb(240,105,2)" fg:x="1048" fg:w="6"/><text x="24.2922%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.14%)</title><rect x="24.0422%" y="901" width="0.1376%" height="15" fill="rgb(207,170,50)" fg:x="1048" fg:w="6"/><text x="24.2922%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.14%)</title><rect x="24.0422%" y="885" width="0.1376%" height="15" fill="rgb(232,133,24)" fg:x="1048" fg:w="6"/><text x="24.2922%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.05%)</title><rect x="24.1340%" y="869" width="0.0459%" height="15" fill="rgb(235,166,27)" fg:x="1052" fg:w="2"/><text x="24.3840%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="24.1340%" y="853" width="0.0459%" height="15" fill="rgb(209,19,13)" fg:x="1052" fg:w="2"/><text x="24.3840%" y="863.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.05%)</title><rect x="24.1340%" y="837" width="0.0459%" height="15" fill="rgb(226,79,39)" fg:x="1052" fg:w="2"/><text x="24.3840%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="24.1569%" y="821" width="0.0229%" height="15" fill="rgb(222,163,10)" fg:x="1053" fg:w="1"/><text x="24.4069%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="24.1569%" y="805" width="0.0229%" height="15" fill="rgb(214,44,19)" fg:x="1053" fg:w="1"/><text x="24.4069%" y="815.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="24.1569%" y="789" width="0.0229%" height="15" fill="rgb(210,217,13)" fg:x="1053" fg:w="1"/><text x="24.4069%" y="799.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="24.1569%" y="773" width="0.0229%" height="15" fill="rgb(237,61,54)" fg:x="1053" fg:w="1"/><text x="24.4069%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="24.1569%" y="757" width="0.0229%" height="15" fill="rgb(226,184,24)" fg:x="1053" fg:w="1"/><text x="24.4069%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.05%)</title><rect x="24.2028%" y="757" width="0.0459%" height="15" fill="rgb(223,226,4)" fg:x="1055" fg:w="2"/><text x="24.4528%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="24.2257%" y="741" width="0.0229%" height="15" fill="rgb(210,26,41)" fg:x="1056" fg:w="1"/><text x="24.4757%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.16%)</title><rect x="24.1799%" y="805" width="0.1606%" height="15" fill="rgb(220,221,6)" fg:x="1054" fg:w="7"/><text x="24.4299%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.16%)</title><rect x="24.1799%" y="789" width="0.1606%" height="15" fill="rgb(225,89,49)" fg:x="1054" fg:w="7"/><text x="24.4299%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.16%)</title><rect x="24.1799%" y="773" width="0.1606%" height="15" fill="rgb(218,70,45)" fg:x="1054" fg:w="7"/><text x="24.4299%" y="783.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.09%)</title><rect x="24.2487%" y="757" width="0.0918%" height="15" fill="rgb(238,166,21)" fg:x="1057" fg:w="4"/><text x="24.4987%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="24.3175%" y="741" width="0.0229%" height="15" fill="rgb(224,141,44)" fg:x="1060" fg:w="1"/><text x="24.5675%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.05%)</title><rect x="24.3634%" y="741" width="0.0459%" height="15" fill="rgb(230,12,49)" fg:x="1062" fg:w="2"/><text x="24.6134%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="24.3634%" y="725" width="0.0459%" height="15" fill="rgb(212,174,12)" fg:x="1062" fg:w="2"/><text x="24.6134%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (12 samples, 0.28%)</title><rect x="24.1799%" y="837" width="0.2753%" height="15" fill="rgb(246,67,9)" fg:x="1054" fg:w="12"/><text x="24.4299%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (12 samples, 0.28%)</title><rect x="24.1799%" y="821" width="0.2753%" height="15" fill="rgb(239,35,23)" fg:x="1054" fg:w="12"/><text x="24.4299%" y="831.50"></text></g><g><title>core::hash::Hasher::write_u8 (5 samples, 0.11%)</title><rect x="24.3404%" y="805" width="0.1147%" height="15" fill="rgb(211,167,0)" fg:x="1061" fg:w="5"/><text x="24.5904%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.11%)</title><rect x="24.3404%" y="789" width="0.1147%" height="15" fill="rgb(225,119,45)" fg:x="1061" fg:w="5"/><text x="24.5904%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.11%)</title><rect x="24.3404%" y="773" width="0.1147%" height="15" fill="rgb(210,162,6)" fg:x="1061" fg:w="5"/><text x="24.5904%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.11%)</title><rect x="24.3404%" y="757" width="0.1147%" height="15" fill="rgb(208,118,35)" fg:x="1061" fg:w="5"/><text x="24.5904%" y="767.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="24.4093%" y="741" width="0.0459%" height="15" fill="rgb(239,4,53)" fg:x="1064" fg:w="2"/><text x="24.6593%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.32%)</title><rect x="24.1799%" y="853" width="0.3212%" height="15" fill="rgb(213,130,21)" fg:x="1054" fg:w="14"/><text x="24.4299%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="24.4552%" y="837" width="0.0459%" height="15" fill="rgb(235,148,0)" fg:x="1066" fg:w="2"/><text x="24.7052%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="24.4552%" y="821" width="0.0459%" height="15" fill="rgb(244,224,18)" fg:x="1066" fg:w="2"/><text x="24.7052%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="24.4552%" y="805" width="0.0459%" height="15" fill="rgb(211,214,4)" fg:x="1066" fg:w="2"/><text x="24.7052%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="24.4781%" y="789" width="0.0229%" height="15" fill="rgb(206,119,25)" fg:x="1067" fg:w="1"/><text x="24.7281%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="24.4781%" y="773" width="0.0229%" height="15" fill="rgb(243,93,47)" fg:x="1067" fg:w="1"/><text x="24.7281%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="24.5240%" y="789" width="0.0229%" height="15" fill="rgb(224,194,6)" fg:x="1069" fg:w="1"/><text x="24.7740%" y="799.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="24.5240%" y="773" width="0.0229%" height="15" fill="rgb(243,229,6)" fg:x="1069" fg:w="1"/><text x="24.7740%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="24.5010%" y="821" width="0.0688%" height="15" fill="rgb(207,23,50)" fg:x="1068" fg:w="3"/><text x="24.7510%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="24.5240%" y="805" width="0.0459%" height="15" fill="rgb(253,192,32)" fg:x="1069" fg:w="2"/><text x="24.7740%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.02%)</title><rect x="24.5469%" y="789" width="0.0229%" height="15" fill="rgb(213,21,6)" fg:x="1070" fg:w="1"/><text x="24.7969%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="24.5469%" y="773" width="0.0229%" height="15" fill="rgb(243,151,13)" fg:x="1070" fg:w="1"/><text x="24.7969%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="24.5469%" y="757" width="0.0229%" height="15" fill="rgb(233,165,41)" fg:x="1070" fg:w="1"/><text x="24.7969%" y="767.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="24.5699%" y="821" width="0.0229%" height="15" fill="rgb(246,176,45)" fg:x="1071" fg:w="1"/><text x="24.8199%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="24.5699%" y="805" width="0.0229%" height="15" fill="rgb(217,170,52)" fg:x="1071" fg:w="1"/><text x="24.8199%" y="815.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="24.5699%" y="789" width="0.0229%" height="15" fill="rgb(214,203,54)" fg:x="1071" fg:w="1"/><text x="24.8199%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="24.5699%" y="773" width="0.0229%" height="15" fill="rgb(248,215,49)" fg:x="1071" fg:w="1"/><text x="24.8199%" y="783.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="24.5699%" y="757" width="0.0229%" height="15" fill="rgb(208,46,10)" fg:x="1071" fg:w="1"/><text x="24.8199%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="24.5699%" y="741" width="0.0229%" height="15" fill="rgb(254,5,31)" fg:x="1071" fg:w="1"/><text x="24.8199%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (20 samples, 0.46%)</title><rect x="24.1799%" y="917" width="0.4588%" height="15" fill="rgb(222,104,33)" fg:x="1054" fg:w="20"/><text x="24.4299%" y="927.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (20 samples, 0.46%)</title><rect x="24.1799%" y="901" width="0.4588%" height="15" fill="rgb(248,49,16)" fg:x="1054" fg:w="20"/><text x="24.4299%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (20 samples, 0.46%)</title><rect x="24.1799%" y="885" width="0.4588%" height="15" fill="rgb(232,198,41)" fg:x="1054" fg:w="20"/><text x="24.4299%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.46%)</title><rect x="24.1799%" y="869" width="0.4588%" height="15" fill="rgb(214,125,3)" fg:x="1054" fg:w="20"/><text x="24.4299%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.14%)</title><rect x="24.5010%" y="853" width="0.1376%" height="15" fill="rgb(229,220,28)" fg:x="1068" fg:w="6"/><text x="24.7510%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.14%)</title><rect x="24.5010%" y="837" width="0.1376%" height="15" fill="rgb(222,64,37)" fg:x="1068" fg:w="6"/><text x="24.7510%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="24.5928%" y="821" width="0.0459%" height="15" fill="rgb(249,184,13)" fg:x="1072" fg:w="2"/><text x="24.8428%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="24.5928%" y="805" width="0.0459%" height="15" fill="rgb(252,176,6)" fg:x="1072" fg:w="2"/><text x="24.8428%" y="815.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.05%)</title><rect x="24.5928%" y="789" width="0.0459%" height="15" fill="rgb(228,153,7)" fg:x="1072" fg:w="2"/><text x="24.8428%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.05%)</title><rect x="24.5928%" y="773" width="0.0459%" height="15" fill="rgb(242,193,5)" fg:x="1072" fg:w="2"/><text x="24.8428%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.05%)</title><rect x="24.5928%" y="757" width="0.0459%" height="15" fill="rgb(232,140,9)" fg:x="1072" fg:w="2"/><text x="24.8428%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.05%)</title><rect x="24.5928%" y="741" width="0.0459%" height="15" fill="rgb(213,222,16)" fg:x="1072" fg:w="2"/><text x="24.8428%" y="751.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.05%)</title><rect x="24.5928%" y="725" width="0.0459%" height="15" fill="rgb(222,75,50)" fg:x="1072" fg:w="2"/><text x="24.8428%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="24.6387%" y="853" width="0.0229%" height="15" fill="rgb(205,180,2)" fg:x="1074" fg:w="1"/><text x="24.8887%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="24.6387%" y="837" width="0.0229%" height="15" fill="rgb(216,34,7)" fg:x="1074" fg:w="1"/><text x="24.8887%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="24.6387%" y="821" width="0.0229%" height="15" fill="rgb(253,16,32)" fg:x="1074" fg:w="1"/><text x="24.8887%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="24.6387%" y="805" width="0.0229%" height="15" fill="rgb(208,97,28)" fg:x="1074" fg:w="1"/><text x="24.8887%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="24.6387%" y="789" width="0.0229%" height="15" fill="rgb(225,92,11)" fg:x="1074" fg:w="1"/><text x="24.8887%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="24.6387%" y="773" width="0.0229%" height="15" fill="rgb(243,38,12)" fg:x="1074" fg:w="1"/><text x="24.8887%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="24.6387%" y="757" width="0.0229%" height="15" fill="rgb(208,139,16)" fg:x="1074" fg:w="1"/><text x="24.8887%" y="767.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.05%)</title><rect x="24.6387%" y="869" width="0.0459%" height="15" fill="rgb(227,24,9)" fg:x="1074" fg:w="2"/><text x="24.8887%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="24.6616%" y="853" width="0.0229%" height="15" fill="rgb(206,62,11)" fg:x="1075" fg:w="1"/><text x="24.9116%" y="863.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="24.6616%" y="837" width="0.0229%" height="15" fill="rgb(228,134,27)" fg:x="1075" fg:w="1"/><text x="24.9116%" y="847.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="24.6616%" y="821" width="0.0229%" height="15" fill="rgb(205,55,33)" fg:x="1075" fg:w="1"/><text x="24.9116%" y="831.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="24.6616%" y="805" width="0.0229%" height="15" fill="rgb(243,75,43)" fg:x="1075" fg:w="1"/><text x="24.9116%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.02%)</title><rect x="24.6846%" y="869" width="0.0229%" height="15" fill="rgb(223,27,42)" fg:x="1076" fg:w="1"/><text x="24.9346%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="24.6846%" y="853" width="0.0229%" height="15" fill="rgb(232,189,33)" fg:x="1076" fg:w="1"/><text x="24.9346%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="24.6846%" y="837" width="0.0229%" height="15" fill="rgb(210,9,39)" fg:x="1076" fg:w="1"/><text x="24.9346%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="24.6846%" y="821" width="0.0229%" height="15" fill="rgb(242,85,26)" fg:x="1076" fg:w="1"/><text x="24.9346%" y="831.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="26.8640%" y="677" width="0.0229%" height="15" fill="rgb(248,44,4)" fg:x="1171" fg:w="1"/><text x="27.1140%" y="687.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="26.8640%" y="661" width="0.0229%" height="15" fill="rgb(250,96,46)" fg:x="1171" fg:w="1"/><text x="27.1140%" y="671.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="26.8640%" y="645" width="0.0229%" height="15" fill="rgb(229,116,26)" fg:x="1171" fg:w="1"/><text x="27.1140%" y="655.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="26.8640%" y="629" width="0.0229%" height="15" fill="rgb(246,94,34)" fg:x="1171" fg:w="1"/><text x="27.1140%" y="639.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="26.8640%" y="613" width="0.0229%" height="15" fill="rgb(251,73,21)" fg:x="1171" fg:w="1"/><text x="27.1140%" y="623.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="26.8640%" y="597" width="0.0229%" height="15" fill="rgb(254,121,25)" fg:x="1171" fg:w="1"/><text x="27.1140%" y="607.50"></text></g><g><title>tick_sched_handle.isra.0 (1 samples, 0.02%)</title><rect x="26.8640%" y="581" width="0.0229%" height="15" fill="rgb(215,161,49)" fg:x="1171" fg:w="1"/><text x="27.1140%" y="591.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="26.8640%" y="565" width="0.0229%" height="15" fill="rgb(221,43,13)" fg:x="1171" fg:w="1"/><text x="27.1140%" y="575.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="26.8640%" y="549" width="0.0229%" height="15" fill="rgb(249,5,37)" fg:x="1171" fg:w="1"/><text x="27.1140%" y="559.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="26.8640%" y="533" width="0.0229%" height="15" fill="rgb(226,25,44)" fg:x="1171" fg:w="1"/><text x="27.1140%" y="543.50"></text></g><g><title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="26.8640%" y="517" width="0.0229%" height="15" fill="rgb(238,189,16)" fg:x="1171" fg:w="1"/><text x="27.1140%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="26.8869%" y="677" width="0.0688%" height="15" fill="rgb(251,186,8)" fg:x="1172" fg:w="3"/><text x="27.1369%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (98 samples, 2.25%)</title><rect x="24.7763%" y="693" width="2.2482%" height="15" fill="rgb(254,34,31)" fg:x="1080" fg:w="98"/><text x="25.0263%" y="703.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="26.9557%" y="677" width="0.0688%" height="15" fill="rgb(225,215,27)" fg:x="1175" fg:w="3"/><text x="27.2057%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (103 samples, 2.36%)</title><rect x="24.7075%" y="741" width="2.3629%" height="15" fill="rgb(221,192,48)" fg:x="1077" fg:w="103"/><text x="24.9575%" y="751.50">&lt;s..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (103 samples, 2.36%)</title><rect x="24.7075%" y="725" width="2.3629%" height="15" fill="rgb(219,137,20)" fg:x="1077" fg:w="103"/><text x="24.9575%" y="735.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (103 samples, 2.36%)</title><rect x="24.7075%" y="709" width="2.3629%" height="15" fill="rgb(219,84,11)" fg:x="1077" fg:w="103"/><text x="24.9575%" y="719.50">&lt;c..</text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="27.0245%" y="693" width="0.0459%" height="15" fill="rgb(224,10,23)" fg:x="1178" fg:w="2"/><text x="27.2745%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (105 samples, 2.41%)</title><rect x="24.7075%" y="773" width="2.4088%" height="15" fill="rgb(248,22,39)" fg:x="1077" fg:w="105"/><text x="24.9575%" y="783.50">&lt;a..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (105 samples, 2.41%)</title><rect x="24.7075%" y="757" width="2.4088%" height="15" fill="rgb(212,154,20)" fg:x="1077" fg:w="105"/><text x="24.9575%" y="767.50">co..</text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.05%)</title><rect x="27.0704%" y="741" width="0.0459%" height="15" fill="rgb(236,199,50)" fg:x="1180" fg:w="2"/><text x="27.3204%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="27.0934%" y="725" width="0.0229%" height="15" fill="rgb(211,9,17)" fg:x="1181" fg:w="1"/><text x="27.3434%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="27.0934%" y="709" width="0.0229%" height="15" fill="rgb(243,216,36)" fg:x="1181" fg:w="1"/><text x="27.3434%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="27.0934%" y="693" width="0.0229%" height="15" fill="rgb(250,2,10)" fg:x="1181" fg:w="1"/><text x="27.3434%" y="703.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="27.0934%" y="677" width="0.0229%" height="15" fill="rgb(226,50,48)" fg:x="1181" fg:w="1"/><text x="27.3434%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.16%)</title><rect x="27.1163%" y="773" width="0.1606%" height="15" fill="rgb(243,81,16)" fg:x="1182" fg:w="7"/><text x="27.3663%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.16%)</title><rect x="27.1163%" y="757" width="0.1606%" height="15" fill="rgb(250,14,2)" fg:x="1182" fg:w="7"/><text x="27.3663%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.16%)</title><rect x="27.1163%" y="741" width="0.1606%" height="15" fill="rgb(233,135,29)" fg:x="1182" fg:w="7"/><text x="27.3663%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.14%)</title><rect x="27.1393%" y="725" width="0.1376%" height="15" fill="rgb(224,64,43)" fg:x="1183" fg:w="6"/><text x="27.3893%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.09%)</title><rect x="27.1851%" y="709" width="0.0918%" height="15" fill="rgb(238,84,13)" fg:x="1185" fg:w="4"/><text x="27.4351%" y="719.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (114 samples, 2.62%)</title><rect x="24.7075%" y="805" width="2.6153%" height="15" fill="rgb(253,48,26)" fg:x="1077" fg:w="114"/><text x="24.9575%" y="815.50">ha..</text></g><g><title>hashbrown::map::make_hash (114 samples, 2.62%)</title><rect x="24.7075%" y="789" width="2.6153%" height="15" fill="rgb(205,223,31)" fg:x="1077" fg:w="114"/><text x="24.9575%" y="799.50">ha..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.05%)</title><rect x="27.2769%" y="773" width="0.0459%" height="15" fill="rgb(221,41,32)" fg:x="1189" fg:w="2"/><text x="27.5269%" y="783.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.05%)</title><rect x="27.2769%" y="757" width="0.0459%" height="15" fill="rgb(213,158,31)" fg:x="1189" fg:w="2"/><text x="27.5269%" y="767.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.05%)</title><rect x="27.2769%" y="741" width="0.0459%" height="15" fill="rgb(245,126,43)" fg:x="1189" fg:w="2"/><text x="27.5269%" y="751.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.05%)</title><rect x="27.2769%" y="725" width="0.0459%" height="15" fill="rgb(227,7,22)" fg:x="1189" fg:w="2"/><text x="27.5269%" y="735.50"></text></g><g><title>find_vma (1 samples, 0.02%)</title><rect x="27.4834%" y="709" width="0.0229%" height="15" fill="rgb(252,90,44)" fg:x="1198" fg:w="1"/><text x="27.7334%" y="719.50"></text></g><g><title>vmacache_find (1 samples, 0.02%)</title><rect x="27.4834%" y="693" width="0.0229%" height="15" fill="rgb(253,91,0)" fg:x="1198" fg:w="1"/><text x="27.7334%" y="703.50"></text></g><g><title>clear_page_rep (7 samples, 0.16%)</title><rect x="27.5292%" y="613" width="0.1606%" height="15" fill="rgb(252,175,49)" fg:x="1200" fg:w="7"/><text x="27.7792%" y="623.50"></text></g><g><title>alloc_pages_vma (9 samples, 0.21%)</title><rect x="27.5292%" y="661" width="0.2065%" height="15" fill="rgb(246,150,1)" fg:x="1200" fg:w="9"/><text x="27.7792%" y="671.50"></text></g><g><title>__alloc_pages_nodemask (9 samples, 0.21%)</title><rect x="27.5292%" y="645" width="0.2065%" height="15" fill="rgb(241,192,25)" fg:x="1200" fg:w="9"/><text x="27.7792%" y="655.50"></text></g><g><title>get_page_from_freelist (9 samples, 0.21%)</title><rect x="27.5292%" y="629" width="0.2065%" height="15" fill="rgb(239,187,11)" fg:x="1200" fg:w="9"/><text x="27.7792%" y="639.50"></text></g><g><title>rmqueue (2 samples, 0.05%)</title><rect x="27.6898%" y="613" width="0.0459%" height="15" fill="rgb(218,202,51)" fg:x="1207" fg:w="2"/><text x="27.9398%" y="623.50"></text></g><g><title>cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="27.7357%" y="661" width="0.0229%" height="15" fill="rgb(225,176,8)" fg:x="1209" fg:w="1"/><text x="27.9857%" y="671.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.02%)</title><rect x="27.7587%" y="661" width="0.0229%" height="15" fill="rgb(219,122,41)" fg:x="1210" fg:w="1"/><text x="28.0087%" y="671.50"></text></g><g><title>lru_cache_add (1 samples, 0.02%)</title><rect x="27.7587%" y="645" width="0.0229%" height="15" fill="rgb(248,140,20)" fg:x="1210" fg:w="1"/><text x="28.0087%" y="655.50"></text></g><g><title>__pagevec_lru_add (1 samples, 0.02%)</title><rect x="27.7587%" y="629" width="0.0229%" height="15" fill="rgb(245,41,37)" fg:x="1210" fg:w="1"/><text x="28.0087%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (21 samples, 0.48%)</title><rect x="27.3228%" y="789" width="0.4818%" height="15" fill="rgb(235,82,39)" fg:x="1191" fg:w="21"/><text x="27.5728%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.48%)</title><rect x="27.3228%" y="773" width="0.4818%" height="15" fill="rgb(230,108,42)" fg:x="1191" fg:w="21"/><text x="27.5728%" y="783.50"></text></g><g><title>asm_exc_page_fault (14 samples, 0.32%)</title><rect x="27.4834%" y="757" width="0.3212%" height="15" fill="rgb(215,150,50)" fg:x="1198" fg:w="14"/><text x="27.7334%" y="767.50"></text></g><g><title>exc_page_fault (14 samples, 0.32%)</title><rect x="27.4834%" y="741" width="0.3212%" height="15" fill="rgb(233,212,5)" fg:x="1198" fg:w="14"/><text x="27.7334%" y="751.50"></text></g><g><title>do_user_addr_fault (14 samples, 0.32%)</title><rect x="27.4834%" y="725" width="0.3212%" height="15" fill="rgb(245,80,22)" fg:x="1198" fg:w="14"/><text x="27.7334%" y="735.50"></text></g><g><title>handle_mm_fault (13 samples, 0.30%)</title><rect x="27.5063%" y="709" width="0.2982%" height="15" fill="rgb(238,129,16)" fg:x="1199" fg:w="13"/><text x="27.7563%" y="719.50"></text></g><g><title>__handle_mm_fault (13 samples, 0.30%)</title><rect x="27.5063%" y="693" width="0.2982%" height="15" fill="rgb(240,19,0)" fg:x="1199" fg:w="13"/><text x="27.7563%" y="703.50"></text></g><g><title>do_anonymous_page (13 samples, 0.30%)</title><rect x="27.5063%" y="677" width="0.2982%" height="15" fill="rgb(232,42,35)" fg:x="1199" fg:w="13"/><text x="27.7563%" y="687.50"></text></g><g><title>mem_cgroup_charge (1 samples, 0.02%)</title><rect x="27.7816%" y="661" width="0.0229%" height="15" fill="rgb(223,130,24)" fg:x="1211" fg:w="1"/><text x="28.0316%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (23 samples, 0.53%)</title><rect x="27.3228%" y="805" width="0.5276%" height="15" fill="rgb(237,16,22)" fg:x="1191" fg:w="23"/><text x="27.5728%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.05%)</title><rect x="27.8045%" y="789" width="0.0459%" height="15" fill="rgb(248,192,20)" fg:x="1212" fg:w="2"/><text x="28.0545%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.05%)</title><rect x="27.8045%" y="773" width="0.0459%" height="15" fill="rgb(233,167,2)" fg:x="1212" fg:w="2"/><text x="28.0545%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.05%)</title><rect x="27.8045%" y="757" width="0.0459%" height="15" fill="rgb(252,71,44)" fg:x="1212" fg:w="2"/><text x="28.0545%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="27.9422%" y="773" width="0.0229%" height="15" fill="rgb(238,37,47)" fg:x="1218" fg:w="1"/><text x="28.1922%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="27.9422%" y="757" width="0.0229%" height="15" fill="rgb(214,202,54)" fg:x="1218" fg:w="1"/><text x="28.1922%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="27.9422%" y="741" width="0.0229%" height="15" fill="rgb(254,165,40)" fg:x="1218" fg:w="1"/><text x="28.1922%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (143 samples, 3.28%)</title><rect x="24.7075%" y="853" width="3.2806%" height="15" fill="rgb(246,173,38)" fg:x="1077" fg:w="143"/><text x="24.9575%" y="863.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (143 samples, 3.28%)</title><rect x="24.7075%" y="837" width="3.2806%" height="15" fill="rgb(215,3,27)" fg:x="1077" fg:w="143"/><text x="24.9575%" y="847.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (143 samples, 3.28%)</title><rect x="24.7075%" y="821" width="3.2806%" height="15" fill="rgb(239,169,51)" fg:x="1077" fg:w="143"/><text x="24.9575%" y="831.50">has..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (6 samples, 0.14%)</title><rect x="27.8504%" y="805" width="0.1376%" height="15" fill="rgb(212,5,25)" fg:x="1214" fg:w="6"/><text x="28.1004%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (6 samples, 0.14%)</title><rect x="27.8504%" y="789" width="0.1376%" height="15" fill="rgb(243,45,17)" fg:x="1214" fg:w="6"/><text x="28.1004%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="27.9651%" y="773" width="0.0229%" height="15" fill="rgb(242,97,9)" fg:x="1219" fg:w="1"/><text x="28.2151%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="27.9651%" y="757" width="0.0229%" height="15" fill="rgb(228,71,31)" fg:x="1219" fg:w="1"/><text x="28.2151%" y="767.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (147 samples, 3.37%)</title><rect x="24.6387%" y="917" width="3.3723%" height="15" fill="rgb(252,184,16)" fg:x="1074" fg:w="147"/><text x="24.8887%" y="927.50">std..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (147 samples, 3.37%)</title><rect x="24.6387%" y="901" width="3.3723%" height="15" fill="rgb(236,169,46)" fg:x="1074" fg:w="147"/><text x="24.8887%" y="911.50">has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (147 samples, 3.37%)</title><rect x="24.6387%" y="885" width="3.3723%" height="15" fill="rgb(207,17,47)" fg:x="1074" fg:w="147"/><text x="24.8887%" y="895.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (144 samples, 3.30%)</title><rect x="24.7075%" y="869" width="3.3035%" height="15" fill="rgb(206,201,28)" fg:x="1077" fg:w="144"/><text x="24.9575%" y="879.50">has..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="27.9881%" y="853" width="0.0229%" height="15" fill="rgb(224,184,23)" fg:x="1220" fg:w="1"/><text x="28.2381%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.09%)</title><rect x="28.1487%" y="773" width="0.0918%" height="15" fill="rgb(208,139,48)" fg:x="1227" fg:w="4"/><text x="28.3987%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.09%)</title><rect x="28.1487%" y="757" width="0.0918%" height="15" fill="rgb(208,130,10)" fg:x="1227" fg:w="4"/><text x="28.3987%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.09%)</title><rect x="28.1487%" y="741" width="0.0918%" height="15" fill="rgb(211,213,45)" fg:x="1227" fg:w="4"/><text x="28.3987%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.09%)</title><rect x="28.1487%" y="725" width="0.0918%" height="15" fill="rgb(235,100,30)" fg:x="1227" fg:w="4"/><text x="28.3987%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.09%)</title><rect x="28.1487%" y="709" width="0.0918%" height="15" fill="rgb(206,144,31)" fg:x="1227" fg:w="4"/><text x="28.3987%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.09%)</title><rect x="28.1487%" y="693" width="0.0918%" height="15" fill="rgb(224,200,26)" fg:x="1227" fg:w="4"/><text x="28.3987%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.07%)</title><rect x="28.1716%" y="677" width="0.0688%" height="15" fill="rgb(247,104,53)" fg:x="1228" fg:w="3"/><text x="28.4216%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (5 samples, 0.11%)</title><rect x="28.2404%" y="773" width="0.1147%" height="15" fill="rgb(220,14,17)" fg:x="1231" fg:w="5"/><text x="28.4904%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.11%)</title><rect x="28.2404%" y="757" width="0.1147%" height="15" fill="rgb(230,140,40)" fg:x="1231" fg:w="5"/><text x="28.4904%" y="767.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.09%)</title><rect x="28.2634%" y="741" width="0.0918%" height="15" fill="rgb(229,2,41)" fg:x="1232" fg:w="4"/><text x="28.5134%" y="751.50"></text></g><g><title>core::str::validations::next_code_point (4 samples, 0.09%)</title><rect x="28.2634%" y="725" width="0.0918%" height="15" fill="rgb(232,89,16)" fg:x="1232" fg:w="4"/><text x="28.5134%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="28.2863%" y="709" width="0.0688%" height="15" fill="rgb(247,59,52)" fg:x="1233" fg:w="3"/><text x="28.5363%" y="719.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="28.3322%" y="693" width="0.0229%" height="15" fill="rgb(226,110,21)" fg:x="1235" fg:w="1"/><text x="28.5822%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="28.3322%" y="677" width="0.0229%" height="15" fill="rgb(224,176,43)" fg:x="1235" fg:w="1"/><text x="28.5822%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.07%)</title><rect x="29.2269%" y="677" width="0.0688%" height="15" fill="rgb(221,73,6)" fg:x="1274" fg:w="3"/><text x="29.4769%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.07%)</title><rect x="29.2269%" y="661" width="0.0688%" height="15" fill="rgb(232,78,19)" fg:x="1274" fg:w="3"/><text x="29.4769%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.05%)</title><rect x="29.2498%" y="645" width="0.0459%" height="15" fill="rgb(233,112,48)" fg:x="1275" fg:w="2"/><text x="29.4998%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (3 samples, 0.07%)</title><rect x="29.2957%" y="677" width="0.0688%" height="15" fill="rgb(243,131,47)" fg:x="1277" fg:w="3"/><text x="29.5457%" y="687.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3 samples, 0.07%)</title><rect x="29.2957%" y="661" width="0.0688%" height="15" fill="rgb(226,51,1)" fg:x="1277" fg:w="3"/><text x="29.5457%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (47 samples, 1.08%)</title><rect x="28.3551%" y="773" width="1.0782%" height="15" fill="rgb(247,58,7)" fg:x="1236" fg:w="47"/><text x="28.6051%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (35 samples, 0.80%)</title><rect x="28.6304%" y="757" width="0.8029%" height="15" fill="rgb(209,7,32)" fg:x="1248" fg:w="35"/><text x="28.8804%" y="767.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.78%)</title><rect x="28.6534%" y="741" width="0.7800%" height="15" fill="rgb(209,39,41)" fg:x="1249" fg:w="34"/><text x="28.9034%" y="751.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (34 samples, 0.78%)</title><rect x="28.6534%" y="725" width="0.7800%" height="15" fill="rgb(226,182,46)" fg:x="1249" fg:w="34"/><text x="28.9034%" y="735.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (32 samples, 0.73%)</title><rect x="28.6992%" y="709" width="0.7341%" height="15" fill="rgb(230,219,10)" fg:x="1251" fg:w="32"/><text x="28.9492%" y="719.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (27 samples, 0.62%)</title><rect x="28.8139%" y="693" width="0.6194%" height="15" fill="rgb(227,175,30)" fg:x="1256" fg:w="27"/><text x="29.0639%" y="703.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (3 samples, 0.07%)</title><rect x="29.3645%" y="677" width="0.0688%" height="15" fill="rgb(217,2,50)" fg:x="1280" fg:w="3"/><text x="29.6145%" y="687.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (1 samples, 0.02%)</title><rect x="29.4334%" y="773" width="0.0229%" height="15" fill="rgb(229,160,0)" fg:x="1283" fg:w="1"/><text x="29.6834%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="29.4334%" y="757" width="0.0229%" height="15" fill="rgb(207,78,37)" fg:x="1283" fg:w="1"/><text x="29.6834%" y="767.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="29.4334%" y="741" width="0.0229%" height="15" fill="rgb(225,57,0)" fg:x="1283" fg:w="1"/><text x="29.6834%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="29.4334%" y="725" width="0.0229%" height="15" fill="rgb(232,154,2)" fg:x="1283" fg:w="1"/><text x="29.6834%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="29.4334%" y="709" width="0.0229%" height="15" fill="rgb(241,212,25)" fg:x="1283" fg:w="1"/><text x="29.6834%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="29.6628%" y="693" width="0.0459%" height="15" fill="rgb(226,69,20)" fg:x="1293" fg:w="2"/><text x="29.9128%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="29.6628%" y="677" width="0.0459%" height="15" fill="rgb(247,184,54)" fg:x="1293" fg:w="2"/><text x="29.9128%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="29.6628%" y="661" width="0.0459%" height="15" fill="rgb(210,145,0)" fg:x="1293" fg:w="2"/><text x="29.9128%" y="671.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (2 samples, 0.05%)</title><rect x="29.7086%" y="693" width="0.0459%" height="15" fill="rgb(253,82,12)" fg:x="1295" fg:w="2"/><text x="29.9586%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="29.7086%" y="677" width="0.0459%" height="15" fill="rgb(245,42,11)" fg:x="1295" fg:w="2"/><text x="29.9586%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="29.7086%" y="661" width="0.0459%" height="15" fill="rgb(219,147,32)" fg:x="1295" fg:w="2"/><text x="29.9586%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 1.65%)</title><rect x="28.1487%" y="901" width="1.6518%" height="15" fill="rgb(246,12,7)" fg:x="1227" fg:w="72"/><text x="28.3987%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (72 samples, 1.65%)</title><rect x="28.1487%" y="885" width="1.6518%" height="15" fill="rgb(243,50,9)" fg:x="1227" fg:w="72"/><text x="28.3987%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (72 samples, 1.65%)</title><rect x="28.1487%" y="869" width="1.6518%" height="15" fill="rgb(219,149,6)" fg:x="1227" fg:w="72"/><text x="28.3987%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (72 samples, 1.65%)</title><rect x="28.1487%" y="853" width="1.6518%" height="15" fill="rgb(241,51,42)" fg:x="1227" fg:w="72"/><text x="28.3987%" y="863.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (72 samples, 1.65%)</title><rect x="28.1487%" y="837" width="1.6518%" height="15" fill="rgb(226,128,27)" fg:x="1227" fg:w="72"/><text x="28.3987%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (72 samples, 1.65%)</title><rect x="28.1487%" y="821" width="1.6518%" height="15" fill="rgb(244,144,4)" fg:x="1227" fg:w="72"/><text x="28.3987%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (72 samples, 1.65%)</title><rect x="28.1487%" y="805" width="1.6518%" height="15" fill="rgb(221,4,13)" fg:x="1227" fg:w="72"/><text x="28.3987%" y="815.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (72 samples, 1.65%)</title><rect x="28.1487%" y="789" width="1.6518%" height="15" fill="rgb(208,170,28)" fg:x="1227" fg:w="72"/><text x="28.3987%" y="799.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (15 samples, 0.34%)</title><rect x="29.4563%" y="773" width="0.3441%" height="15" fill="rgb(226,131,13)" fg:x="1284" fg:w="15"/><text x="29.7063%" y="783.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (15 samples, 0.34%)</title><rect x="29.4563%" y="757" width="0.3441%" height="15" fill="rgb(215,72,41)" fg:x="1284" fg:w="15"/><text x="29.7063%" y="767.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (15 samples, 0.34%)</title><rect x="29.4563%" y="741" width="0.3441%" height="15" fill="rgb(243,108,20)" fg:x="1284" fg:w="15"/><text x="29.7063%" y="751.50"></text></g><g><title>core::str::pattern::StrSearcher::new (13 samples, 0.30%)</title><rect x="29.5022%" y="725" width="0.2982%" height="15" fill="rgb(230,189,17)" fg:x="1286" fg:w="13"/><text x="29.7522%" y="735.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (6 samples, 0.14%)</title><rect x="29.6628%" y="709" width="0.1376%" height="15" fill="rgb(220,50,17)" fg:x="1293" fg:w="6"/><text x="29.9128%" y="719.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (2 samples, 0.05%)</title><rect x="29.7545%" y="693" width="0.0459%" height="15" fill="rgb(248,152,48)" fg:x="1297" fg:w="2"/><text x="30.0045%" y="703.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (3 samples, 0.07%)</title><rect x="29.8692%" y="885" width="0.0688%" height="15" fill="rgb(244,91,11)" fg:x="1302" fg:w="3"/><text x="30.1192%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3 samples, 0.07%)</title><rect x="29.8692%" y="869" width="0.0688%" height="15" fill="rgb(220,157,5)" fg:x="1302" fg:w="3"/><text x="30.1192%" y="879.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3 samples, 0.07%)</title><rect x="29.8692%" y="853" width="0.0688%" height="15" fill="rgb(253,137,8)" fg:x="1302" fg:w="3"/><text x="30.1192%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="29.8692%" y="837" width="0.0688%" height="15" fill="rgb(217,137,51)" fg:x="1302" fg:w="3"/><text x="30.1192%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.07%)</title><rect x="29.8692%" y="821" width="0.0688%" height="15" fill="rgb(218,209,53)" fg:x="1302" fg:w="3"/><text x="30.1192%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="29.8692%" y="805" width="0.0688%" height="15" fill="rgb(249,137,25)" fg:x="1302" fg:w="3"/><text x="30.1192%" y="815.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="30.0528%" y="853" width="0.0229%" height="15" fill="rgb(239,155,26)" fg:x="1310" fg:w="1"/><text x="30.3028%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="30.1216%" y="693" width="0.0229%" height="15" fill="rgb(227,85,46)" fg:x="1313" fg:w="1"/><text x="30.3716%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="30.1445%" y="693" width="0.0229%" height="15" fill="rgb(251,107,43)" fg:x="1314" fg:w="1"/><text x="30.3945%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (5 samples, 0.11%)</title><rect x="30.1675%" y="693" width="0.1147%" height="15" fill="rgb(234,170,33)" fg:x="1315" fg:w="5"/><text x="30.4175%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="30.3969%" y="597" width="0.0229%" height="15" fill="rgb(206,29,35)" fg:x="1325" fg:w="1"/><text x="30.6469%" y="607.50"></text></g><g><title>__GI___libc_realloc (14 samples, 0.32%)</title><rect x="30.2822%" y="629" width="0.3212%" height="15" fill="rgb(227,138,25)" fg:x="1320" fg:w="14"/><text x="30.5322%" y="639.50"></text></g><g><title>_int_realloc (13 samples, 0.30%)</title><rect x="30.3051%" y="613" width="0.2982%" height="15" fill="rgb(249,131,35)" fg:x="1321" fg:w="13"/><text x="30.5551%" y="623.50"></text></g><g><title>_int_free (8 samples, 0.18%)</title><rect x="30.4198%" y="597" width="0.1835%" height="15" fill="rgb(239,6,40)" fg:x="1326" fg:w="8"/><text x="30.6698%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (15 samples, 0.34%)</title><rect x="30.2822%" y="677" width="0.3441%" height="15" fill="rgb(246,136,47)" fg:x="1320" fg:w="15"/><text x="30.5322%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (15 samples, 0.34%)</title><rect x="30.2822%" y="661" width="0.3441%" height="15" fill="rgb(253,58,26)" fg:x="1320" fg:w="15"/><text x="30.5322%" y="671.50"></text></g><g><title>alloc::alloc::realloc (15 samples, 0.34%)</title><rect x="30.2822%" y="645" width="0.3441%" height="15" fill="rgb(237,141,10)" fg:x="1320" fg:w="15"/><text x="30.5322%" y="655.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="30.6033%" y="629" width="0.0229%" height="15" fill="rgb(234,156,12)" fg:x="1334" fg:w="1"/><text x="30.8533%" y="639.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.09%)</title><rect x="30.6263%" y="677" width="0.0918%" height="15" fill="rgb(243,224,36)" fg:x="1335" fg:w="4"/><text x="30.8763%" y="687.50"></text></g><g><title>tcache_get (2 samples, 0.05%)</title><rect x="30.6722%" y="661" width="0.0459%" height="15" fill="rgb(205,229,51)" fg:x="1337" fg:w="2"/><text x="30.9222%" y="671.50"></text></g><g><title>__rdl_alloc (2 samples, 0.05%)</title><rect x="30.7181%" y="677" width="0.0459%" height="15" fill="rgb(223,189,4)" fg:x="1339" fg:w="2"/><text x="30.9681%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.05%)</title><rect x="30.7181%" y="661" width="0.0459%" height="15" fill="rgb(249,167,54)" fg:x="1339" fg:w="2"/><text x="30.9681%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.50%)</title><rect x="30.2822%" y="693" width="0.5047%" height="15" fill="rgb(218,34,28)" fg:x="1320" fg:w="22"/><text x="30.5322%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="30.7639%" y="677" width="0.0229%" height="15" fill="rgb(232,109,42)" fg:x="1341" fg:w="1"/><text x="31.0139%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (31 samples, 0.71%)</title><rect x="30.0986%" y="757" width="0.7112%" height="15" fill="rgb(248,214,46)" fg:x="1312" fg:w="31"/><text x="30.3486%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (31 samples, 0.71%)</title><rect x="30.0986%" y="741" width="0.7112%" height="15" fill="rgb(244,216,40)" fg:x="1312" fg:w="31"/><text x="30.3486%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (31 samples, 0.71%)</title><rect x="30.0986%" y="725" width="0.7112%" height="15" fill="rgb(231,226,31)" fg:x="1312" fg:w="31"/><text x="30.3486%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.69%)</title><rect x="30.1216%" y="709" width="0.6882%" height="15" fill="rgb(238,38,43)" fg:x="1313" fg:w="30"/><text x="30.3716%" y="719.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="30.7869%" y="693" width="0.0229%" height="15" fill="rgb(208,88,43)" fg:x="1342" fg:w="1"/><text x="31.0369%" y="703.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="30.7869%" y="677" width="0.0229%" height="15" fill="rgb(205,136,37)" fg:x="1342" fg:w="1"/><text x="31.0369%" y="687.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="30.7869%" y="661" width="0.0229%" height="15" fill="rgb(237,34,14)" fg:x="1342" fg:w="1"/><text x="31.0369%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned (3 samples, 0.07%)</title><rect x="30.8098%" y="741" width="0.0688%" height="15" fill="rgb(236,193,44)" fg:x="1343" fg:w="3"/><text x="31.0598%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.11%)</title><rect x="30.8098%" y="757" width="0.1147%" height="15" fill="rgb(231,48,10)" fg:x="1343" fg:w="5"/><text x="31.0598%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="30.8786%" y="741" width="0.0459%" height="15" fill="rgb(213,141,34)" fg:x="1346" fg:w="2"/><text x="31.1286%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (39 samples, 0.89%)</title><rect x="30.0757%" y="853" width="0.8947%" height="15" fill="rgb(249,130,34)" fg:x="1311" fg:w="39"/><text x="30.3257%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (38 samples, 0.87%)</title><rect x="30.0986%" y="837" width="0.8718%" height="15" fill="rgb(219,42,41)" fg:x="1312" fg:w="38"/><text x="30.3486%" y="847.50"></text></g><g><title>alloc::string::String::push_str (38 samples, 0.87%)</title><rect x="30.0986%" y="821" width="0.8718%" height="15" fill="rgb(224,100,54)" fg:x="1312" fg:w="38"/><text x="30.3486%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (38 samples, 0.87%)</title><rect x="30.0986%" y="805" width="0.8718%" height="15" fill="rgb(229,200,27)" fg:x="1312" fg:w="38"/><text x="30.3486%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (38 samples, 0.87%)</title><rect x="30.0986%" y="789" width="0.8718%" height="15" fill="rgb(217,118,10)" fg:x="1312" fg:w="38"/><text x="30.3486%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (38 samples, 0.87%)</title><rect x="30.0986%" y="773" width="0.8718%" height="15" fill="rgb(206,22,3)" fg:x="1312" fg:w="38"/><text x="30.3486%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.05%)</title><rect x="30.9245%" y="757" width="0.0459%" height="15" fill="rgb(232,163,46)" fg:x="1348" fg:w="2"/><text x="31.1745%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.05%)</title><rect x="30.9245%" y="741" width="0.0459%" height="15" fill="rgb(206,95,13)" fg:x="1348" fg:w="2"/><text x="31.1745%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="30.9704%" y="853" width="0.0229%" height="15" fill="rgb(253,154,18)" fg:x="1350" fg:w="1"/><text x="31.2204%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="30.9704%" y="837" width="0.0229%" height="15" fill="rgb(219,32,23)" fg:x="1350" fg:w="1"/><text x="31.2204%" y="847.50"></text></g><g><title>alloc::fmt::format (53 samples, 1.22%)</title><rect x="29.8004%" y="901" width="1.2159%" height="15" fill="rgb(230,191,45)" fg:x="1299" fg:w="53"/><text x="30.0504%" y="911.50"></text></g><g><title>core::fmt::Write::write_fmt (47 samples, 1.08%)</title><rect x="29.9381%" y="885" width="1.0782%" height="15" fill="rgb(229,64,36)" fg:x="1305" fg:w="47"/><text x="30.1881%" y="895.50"></text></g><g><title>core::fmt::write (44 samples, 1.01%)</title><rect x="30.0069%" y="869" width="1.0094%" height="15" fill="rgb(205,129,25)" fg:x="1308" fg:w="44"/><text x="30.2569%" y="879.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.02%)</title><rect x="30.9933%" y="853" width="0.0229%" height="15" fill="rgb(254,112,7)" fg:x="1351" fg:w="1"/><text x="31.2433%" y="863.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="31.0163%" y="805" width="0.0229%" height="15" fill="rgb(226,53,48)" fg:x="1352" fg:w="1"/><text x="31.2663%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.07%)</title><rect x="31.0163%" y="901" width="0.0688%" height="15" fill="rgb(214,153,38)" fg:x="1352" fg:w="3"/><text x="31.2663%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.07%)</title><rect x="31.0163%" y="885" width="0.0688%" height="15" fill="rgb(243,101,7)" fg:x="1352" fg:w="3"/><text x="31.2663%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.07%)</title><rect x="31.0163%" y="869" width="0.0688%" height="15" fill="rgb(240,140,22)" fg:x="1352" fg:w="3"/><text x="31.2663%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.07%)</title><rect x="31.0163%" y="853" width="0.0688%" height="15" fill="rgb(235,114,2)" fg:x="1352" fg:w="3"/><text x="31.2663%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.07%)</title><rect x="31.0163%" y="837" width="0.0688%" height="15" fill="rgb(242,59,12)" fg:x="1352" fg:w="3"/><text x="31.2663%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.07%)</title><rect x="31.0163%" y="821" width="0.0688%" height="15" fill="rgb(252,134,9)" fg:x="1352" fg:w="3"/><text x="31.2663%" y="831.50"></text></g><g><title>_int_free (2 samples, 0.05%)</title><rect x="31.0392%" y="805" width="0.0459%" height="15" fill="rgb(236,4,44)" fg:x="1353" fg:w="2"/><text x="31.2892%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.05%)</title><rect x="31.1539%" y="789" width="0.0459%" height="15" fill="rgb(254,172,41)" fg:x="1358" fg:w="2"/><text x="31.4039%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="31.1769%" y="773" width="0.0229%" height="15" fill="rgb(244,63,20)" fg:x="1359" fg:w="1"/><text x="31.4269%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.11%)</title><rect x="31.1081%" y="837" width="0.1147%" height="15" fill="rgb(250,73,31)" fg:x="1356" fg:w="5"/><text x="31.3581%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.11%)</title><rect x="31.1081%" y="821" width="0.1147%" height="15" fill="rgb(241,38,36)" fg:x="1356" fg:w="5"/><text x="31.3581%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.11%)</title><rect x="31.1081%" y="805" width="0.1147%" height="15" fill="rgb(245,211,2)" fg:x="1356" fg:w="5"/><text x="31.3581%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="31.1998%" y="789" width="0.0229%" height="15" fill="rgb(206,120,28)" fg:x="1360" fg:w="1"/><text x="31.4498%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="31.1998%" y="773" width="0.0229%" height="15" fill="rgb(211,59,34)" fg:x="1360" fg:w="1"/><text x="31.4498%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="31.2228%" y="837" width="0.0229%" height="15" fill="rgb(233,168,5)" fg:x="1361" fg:w="1"/><text x="31.4728%" y="847.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="31.2228%" y="821" width="0.0229%" height="15" fill="rgb(234,33,13)" fg:x="1361" fg:w="1"/><text x="31.4728%" y="831.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="31.2228%" y="805" width="0.0229%" height="15" fill="rgb(231,150,26)" fg:x="1361" fg:w="1"/><text x="31.4728%" y="815.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="31.2228%" y="789" width="0.0229%" height="15" fill="rgb(217,191,4)" fg:x="1361" fg:w="1"/><text x="31.4728%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.21%)</title><rect x="31.0851%" y="853" width="0.2065%" height="15" fill="rgb(246,198,38)" fg:x="1355" fg:w="9"/><text x="31.3351%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.05%)</title><rect x="31.2457%" y="837" width="0.0459%" height="15" fill="rgb(245,64,37)" fg:x="1362" fg:w="2"/><text x="31.4957%" y="847.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.05%)</title><rect x="31.2457%" y="821" width="0.0459%" height="15" fill="rgb(250,30,36)" fg:x="1362" fg:w="2"/><text x="31.4957%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="31.2686%" y="805" width="0.0229%" height="15" fill="rgb(217,86,53)" fg:x="1363" fg:w="1"/><text x="31.5186%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.28%)</title><rect x="31.0851%" y="901" width="0.2753%" height="15" fill="rgb(228,157,16)" fg:x="1355" fg:w="12"/><text x="31.3351%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12 samples, 0.28%)</title><rect x="31.0851%" y="885" width="0.2753%" height="15" fill="rgb(217,59,31)" fg:x="1355" fg:w="12"/><text x="31.3351%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 0.28%)</title><rect x="31.0851%" y="869" width="0.2753%" height="15" fill="rgb(237,138,41)" fg:x="1355" fg:w="12"/><text x="31.3351%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.07%)</title><rect x="31.2916%" y="853" width="0.0688%" height="15" fill="rgb(227,91,49)" fg:x="1364" fg:w="3"/><text x="31.5416%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.07%)</title><rect x="31.2916%" y="837" width="0.0688%" height="15" fill="rgb(247,21,44)" fg:x="1364" fg:w="3"/><text x="31.5416%" y="847.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.07%)</title><rect x="31.2916%" y="821" width="0.0688%" height="15" fill="rgb(219,210,51)" fg:x="1364" fg:w="3"/><text x="31.5416%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.07%)</title><rect x="31.2916%" y="805" width="0.0688%" height="15" fill="rgb(209,140,6)" fg:x="1364" fg:w="3"/><text x="31.5416%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.07%)</title><rect x="31.2916%" y="789" width="0.0688%" height="15" fill="rgb(221,188,24)" fg:x="1364" fg:w="3"/><text x="31.5416%" y="799.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.07%)</title><rect x="31.2916%" y="773" width="0.0688%" height="15" fill="rgb(232,154,20)" fg:x="1364" fg:w="3"/><text x="31.5416%" y="783.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.07%)</title><rect x="31.2916%" y="757" width="0.0688%" height="15" fill="rgb(244,137,50)" fg:x="1364" fg:w="3"/><text x="31.5416%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.07%)</title><rect x="31.2916%" y="741" width="0.0688%" height="15" fill="rgb(225,185,43)" fg:x="1364" fg:w="3"/><text x="31.5416%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="31.4522%" y="725" width="0.0229%" height="15" fill="rgb(213,205,38)" fg:x="1371" fg:w="1"/><text x="31.7022%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.07%)</title><rect x="31.4522%" y="741" width="0.0688%" height="15" fill="rgb(236,73,12)" fg:x="1371" fg:w="3"/><text x="31.7022%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="31.4751%" y="725" width="0.0459%" height="15" fill="rgb(235,219,13)" fg:x="1372" fg:w="2"/><text x="31.7251%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.18%)</title><rect x="31.3833%" y="789" width="0.1835%" height="15" fill="rgb(218,59,36)" fg:x="1368" fg:w="8"/><text x="31.6333%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.18%)</title><rect x="31.3833%" y="773" width="0.1835%" height="15" fill="rgb(205,110,39)" fg:x="1368" fg:w="8"/><text x="31.6333%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.18%)</title><rect x="31.3833%" y="757" width="0.1835%" height="15" fill="rgb(218,206,42)" fg:x="1368" fg:w="8"/><text x="31.6333%" y="767.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="31.5210%" y="741" width="0.0459%" height="15" fill="rgb(248,125,24)" fg:x="1374" fg:w="2"/><text x="31.7710%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="31.5439%" y="725" width="0.0229%" height="15" fill="rgb(242,28,27)" fg:x="1375" fg:w="1"/><text x="31.7939%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (9 samples, 0.21%)</title><rect x="31.3833%" y="821" width="0.2065%" height="15" fill="rgb(216,228,15)" fg:x="1368" fg:w="9"/><text x="31.6333%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (9 samples, 0.21%)</title><rect x="31.3833%" y="805" width="0.2065%" height="15" fill="rgb(235,116,46)" fg:x="1368" fg:w="9"/><text x="31.6333%" y="815.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="31.5669%" y="789" width="0.0229%" height="15" fill="rgb(224,18,32)" fg:x="1376" fg:w="1"/><text x="31.8169%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="31.5669%" y="773" width="0.0229%" height="15" fill="rgb(252,5,12)" fg:x="1376" fg:w="1"/><text x="31.8169%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="31.5669%" y="757" width="0.0229%" height="15" fill="rgb(251,36,5)" fg:x="1376" fg:w="1"/><text x="31.8169%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="31.5669%" y="741" width="0.0229%" height="15" fill="rgb(217,53,14)" fg:x="1376" fg:w="1"/><text x="31.8169%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="31.6357%" y="773" width="0.0229%" height="15" fill="rgb(215,86,45)" fg:x="1379" fg:w="1"/><text x="31.8857%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="31.6357%" y="757" width="0.0229%" height="15" fill="rgb(242,169,11)" fg:x="1379" fg:w="1"/><text x="31.8857%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="31.6586%" y="757" width="0.0459%" height="15" fill="rgb(211,213,45)" fg:x="1380" fg:w="2"/><text x="31.9086%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.18%)</title><rect x="31.5898%" y="821" width="0.1835%" height="15" fill="rgb(205,88,11)" fg:x="1377" fg:w="8"/><text x="31.8398%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.18%)</title><rect x="31.5898%" y="805" width="0.1835%" height="15" fill="rgb(252,69,26)" fg:x="1377" fg:w="8"/><text x="31.8398%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.18%)</title><rect x="31.5898%" y="789" width="0.1835%" height="15" fill="rgb(246,123,37)" fg:x="1377" fg:w="8"/><text x="31.8398%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.11%)</title><rect x="31.6586%" y="773" width="0.1147%" height="15" fill="rgb(212,205,5)" fg:x="1380" fg:w="5"/><text x="31.9086%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="31.7045%" y="757" width="0.0688%" height="15" fill="rgb(253,148,0)" fg:x="1382" fg:w="3"/><text x="31.9545%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 0.44%)</title><rect x="31.3604%" y="837" width="0.4359%" height="15" fill="rgb(239,22,4)" fg:x="1367" fg:w="19"/><text x="31.6104%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="31.7733%" y="821" width="0.0229%" height="15" fill="rgb(226,26,53)" fg:x="1385" fg:w="1"/><text x="32.0233%" y="831.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="31.7733%" y="805" width="0.0229%" height="15" fill="rgb(225,229,45)" fg:x="1385" fg:w="1"/><text x="32.0233%" y="815.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="31.7733%" y="789" width="0.0229%" height="15" fill="rgb(220,60,37)" fg:x="1385" fg:w="1"/><text x="32.0233%" y="799.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="31.7733%" y="773" width="0.0229%" height="15" fill="rgb(217,180,35)" fg:x="1385" fg:w="1"/><text x="32.0233%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="31.8422%" y="773" width="0.0459%" height="15" fill="rgb(229,7,53)" fg:x="1388" fg:w="2"/><text x="32.0922%" y="783.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.05%)</title><rect x="31.8422%" y="757" width="0.0459%" height="15" fill="rgb(254,137,3)" fg:x="1388" fg:w="2"/><text x="32.0922%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="31.8192%" y="805" width="0.1147%" height="15" fill="rgb(215,140,41)" fg:x="1387" fg:w="5"/><text x="32.0692%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="31.8192%" y="789" width="0.1147%" height="15" fill="rgb(250,80,15)" fg:x="1387" fg:w="5"/><text x="32.0692%" y="799.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (2 samples, 0.05%)</title><rect x="31.8880%" y="773" width="0.0459%" height="15" fill="rgb(252,191,6)" fg:x="1390" fg:w="2"/><text x="32.1380%" y="783.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.07%)</title><rect x="31.9339%" y="805" width="0.0688%" height="15" fill="rgb(246,217,18)" fg:x="1392" fg:w="3"/><text x="32.1839%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (3 samples, 0.07%)</title><rect x="31.9339%" y="789" width="0.0688%" height="15" fill="rgb(223,93,7)" fg:x="1392" fg:w="3"/><text x="32.1839%" y="799.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.07%)</title><rect x="31.9339%" y="773" width="0.0688%" height="15" fill="rgb(225,55,52)" fg:x="1392" fg:w="3"/><text x="32.1839%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.07%)</title><rect x="31.9339%" y="757" width="0.0688%" height="15" fill="rgb(240,31,24)" fg:x="1392" fg:w="3"/><text x="32.1839%" y="767.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.07%)</title><rect x="31.9339%" y="741" width="0.0688%" height="15" fill="rgb(205,56,52)" fg:x="1392" fg:w="3"/><text x="32.1839%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.07%)</title><rect x="31.9339%" y="725" width="0.0688%" height="15" fill="rgb(246,146,12)" fg:x="1392" fg:w="3"/><text x="32.1839%" y="735.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (30 samples, 0.69%)</title><rect x="31.3604%" y="901" width="0.6882%" height="15" fill="rgb(239,84,36)" fg:x="1367" fg:w="30"/><text x="31.6104%" y="911.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (30 samples, 0.69%)</title><rect x="31.3604%" y="885" width="0.6882%" height="15" fill="rgb(207,41,40)" fg:x="1367" fg:w="30"/><text x="31.6104%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (30 samples, 0.69%)</title><rect x="31.3604%" y="869" width="0.6882%" height="15" fill="rgb(241,179,25)" fg:x="1367" fg:w="30"/><text x="31.6104%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30 samples, 0.69%)</title><rect x="31.3604%" y="853" width="0.6882%" height="15" fill="rgb(210,0,34)" fg:x="1367" fg:w="30"/><text x="31.6104%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11 samples, 0.25%)</title><rect x="31.7963%" y="837" width="0.2524%" height="15" fill="rgb(225,217,29)" fg:x="1386" fg:w="11"/><text x="32.0463%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.25%)</title><rect x="31.7963%" y="821" width="0.2524%" height="15" fill="rgb(216,191,38)" fg:x="1386" fg:w="11"/><text x="32.0463%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="32.0028%" y="805" width="0.0459%" height="15" fill="rgb(232,140,52)" fg:x="1395" fg:w="2"/><text x="32.2528%" y="815.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="32.0028%" y="789" width="0.0459%" height="15" fill="rgb(223,158,51)" fg:x="1395" fg:w="2"/><text x="32.2528%" y="799.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.05%)</title><rect x="32.0028%" y="773" width="0.0459%" height="15" fill="rgb(235,29,51)" fg:x="1395" fg:w="2"/><text x="32.2528%" y="783.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.05%)</title><rect x="32.0028%" y="757" width="0.0459%" height="15" fill="rgb(215,181,18)" fg:x="1395" fg:w="2"/><text x="32.2528%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.05%)</title><rect x="32.0028%" y="741" width="0.0459%" height="15" fill="rgb(227,125,34)" fg:x="1395" fg:w="2"/><text x="32.2528%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.05%)</title><rect x="32.0028%" y="725" width="0.0459%" height="15" fill="rgb(230,197,49)" fg:x="1395" fg:w="2"/><text x="32.2528%" y="735.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.05%)</title><rect x="32.0028%" y="709" width="0.0459%" height="15" fill="rgb(239,141,16)" fg:x="1395" fg:w="2"/><text x="32.2528%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="32.0486%" y="805" width="0.0688%" height="15" fill="rgb(225,105,43)" fg:x="1397" fg:w="3"/><text x="32.2986%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="32.0486%" y="789" width="0.0688%" height="15" fill="rgb(214,131,14)" fg:x="1397" fg:w="3"/><text x="32.2986%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="32.0486%" y="773" width="0.0688%" height="15" fill="rgb(229,177,11)" fg:x="1397" fg:w="3"/><text x="32.2986%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="32.0945%" y="757" width="0.0229%" height="15" fill="rgb(231,180,14)" fg:x="1399" fg:w="1"/><text x="32.3445%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4 samples, 0.09%)</title><rect x="32.0486%" y="837" width="0.0918%" height="15" fill="rgb(232,88,2)" fg:x="1397" fg:w="4"/><text x="32.2986%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.09%)</title><rect x="32.0486%" y="821" width="0.0918%" height="15" fill="rgb(205,220,8)" fg:x="1397" fg:w="4"/><text x="32.2986%" y="831.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="32.1175%" y="805" width="0.0229%" height="15" fill="rgb(225,23,53)" fg:x="1400" fg:w="1"/><text x="32.3675%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="32.1175%" y="789" width="0.0229%" height="15" fill="rgb(213,62,29)" fg:x="1400" fg:w="1"/><text x="32.3675%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="32.1175%" y="773" width="0.0229%" height="15" fill="rgb(227,75,7)" fg:x="1400" fg:w="1"/><text x="32.3675%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="32.1175%" y="757" width="0.0229%" height="15" fill="rgb(207,105,14)" fg:x="1400" fg:w="1"/><text x="32.3675%" y="767.50"></text></g><g><title>hashbrown::map::make_insert_hash (5 samples, 0.11%)</title><rect x="32.0486%" y="853" width="0.1147%" height="15" fill="rgb(245,62,29)" fg:x="1397" fg:w="5"/><text x="32.2986%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="32.1404%" y="837" width="0.0229%" height="15" fill="rgb(236,202,4)" fg:x="1401" fg:w="1"/><text x="32.3904%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="32.1404%" y="821" width="0.0229%" height="15" fill="rgb(250,67,1)" fg:x="1401" fg:w="1"/><text x="32.3904%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="32.1404%" y="805" width="0.0229%" height="15" fill="rgb(253,115,44)" fg:x="1401" fg:w="1"/><text x="32.3904%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="32.1404%" y="789" width="0.0229%" height="15" fill="rgb(251,139,18)" fg:x="1401" fg:w="1"/><text x="32.3904%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="32.1404%" y="773" width="0.0229%" height="15" fill="rgb(218,22,32)" fg:x="1401" fg:w="1"/><text x="32.3904%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.02%)</title><rect x="32.1633%" y="853" width="0.0229%" height="15" fill="rgb(243,53,5)" fg:x="1402" fg:w="1"/><text x="32.4133%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="32.1633%" y="837" width="0.0229%" height="15" fill="rgb(227,56,16)" fg:x="1402" fg:w="1"/><text x="32.4133%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="32.1633%" y="821" width="0.0229%" height="15" fill="rgb(245,53,0)" fg:x="1402" fg:w="1"/><text x="32.4133%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="32.1633%" y="805" width="0.0229%" height="15" fill="rgb(216,170,35)" fg:x="1402" fg:w="1"/><text x="32.4133%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.02%)</title><rect x="32.2092%" y="837" width="0.0229%" height="15" fill="rgb(211,200,8)" fg:x="1404" fg:w="1"/><text x="32.4592%" y="847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.02%)</title><rect x="32.2092%" y="821" width="0.0229%" height="15" fill="rgb(228,204,44)" fg:x="1404" fg:w="1"/><text x="32.4592%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="32.2092%" y="805" width="0.0229%" height="15" fill="rgb(214,121,17)" fg:x="1404" fg:w="1"/><text x="32.4592%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="32.2092%" y="789" width="0.0229%" height="15" fill="rgb(233,64,38)" fg:x="1404" fg:w="1"/><text x="32.4592%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="32.2322%" y="789" width="0.0229%" height="15" fill="rgb(253,54,19)" fg:x="1405" fg:w="1"/><text x="32.4822%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="32.2322%" y="773" width="0.0229%" height="15" fill="rgb(253,94,18)" fg:x="1405" fg:w="1"/><text x="32.4822%" y="783.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="32.2322%" y="757" width="0.0229%" height="15" fill="rgb(227,57,52)" fg:x="1405" fg:w="1"/><text x="32.4822%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (23 samples, 0.53%)</title><rect x="32.3010%" y="677" width="0.5276%" height="15" fill="rgb(230,228,50)" fg:x="1408" fg:w="23"/><text x="32.5510%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="32.8057%" y="661" width="0.0229%" height="15" fill="rgb(217,205,27)" fg:x="1430" fg:w="1"/><text x="33.0557%" y="671.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.07%)</title><rect x="32.8286%" y="677" width="0.0688%" height="15" fill="rgb(252,71,50)" fg:x="1431" fg:w="3"/><text x="33.0786%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="32.8745%" y="661" width="0.0229%" height="15" fill="rgb(209,86,4)" fg:x="1433" fg:w="1"/><text x="33.1245%" y="671.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="32.8745%" y="645" width="0.0229%" height="15" fill="rgb(229,94,0)" fg:x="1433" fg:w="1"/><text x="33.1245%" y="655.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="32.8745%" y="629" width="0.0229%" height="15" fill="rgb(252,223,21)" fg:x="1433" fg:w="1"/><text x="33.1245%" y="639.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="32.8745%" y="613" width="0.0229%" height="15" fill="rgb(230,210,4)" fg:x="1433" fg:w="1"/><text x="33.1245%" y="623.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="32.8745%" y="597" width="0.0229%" height="15" fill="rgb(240,149,38)" fg:x="1433" fg:w="1"/><text x="33.1245%" y="607.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="32.8745%" y="581" width="0.0229%" height="15" fill="rgb(254,105,20)" fg:x="1433" fg:w="1"/><text x="33.1245%" y="591.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="32.8745%" y="565" width="0.0229%" height="15" fill="rgb(253,87,46)" fg:x="1433" fg:w="1"/><text x="33.1245%" y="575.50"></text></g><g><title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="32.8745%" y="549" width="0.0229%" height="15" fill="rgb(253,116,33)" fg:x="1433" fg:w="1"/><text x="33.1245%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (28 samples, 0.64%)</title><rect x="32.2780%" y="757" width="0.6423%" height="15" fill="rgb(229,198,5)" fg:x="1407" fg:w="28"/><text x="32.5280%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (28 samples, 0.64%)</title><rect x="32.2780%" y="741" width="0.6423%" height="15" fill="rgb(242,38,37)" fg:x="1407" fg:w="28"/><text x="32.5280%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 0.64%)</title><rect x="32.2780%" y="725" width="0.6423%" height="15" fill="rgb(242,69,53)" fg:x="1407" fg:w="28"/><text x="32.5280%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (28 samples, 0.64%)</title><rect x="32.2780%" y="709" width="0.6423%" height="15" fill="rgb(249,80,16)" fg:x="1407" fg:w="28"/><text x="32.5280%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.64%)</title><rect x="32.2780%" y="693" width="0.6423%" height="15" fill="rgb(206,128,11)" fg:x="1407" fg:w="28"/><text x="32.5280%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="32.8975%" y="677" width="0.0229%" height="15" fill="rgb(212,35,20)" fg:x="1434" fg:w="1"/><text x="33.1475%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="32.9892%" y="709" width="0.0229%" height="15" fill="rgb(236,79,13)" fg:x="1438" fg:w="1"/><text x="33.2392%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="32.9892%" y="693" width="0.0229%" height="15" fill="rgb(233,123,3)" fg:x="1438" fg:w="1"/><text x="33.2392%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="33.0122%" y="693" width="0.0229%" height="15" fill="rgb(214,93,52)" fg:x="1439" fg:w="1"/><text x="33.2622%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.16%)</title><rect x="32.9204%" y="757" width="0.1606%" height="15" fill="rgb(251,37,40)" fg:x="1435" fg:w="7"/><text x="33.1704%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.16%)</title><rect x="32.9204%" y="741" width="0.1606%" height="15" fill="rgb(227,80,54)" fg:x="1435" fg:w="7"/><text x="33.1704%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.16%)</title><rect x="32.9204%" y="725" width="0.1606%" height="15" fill="rgb(254,48,11)" fg:x="1435" fg:w="7"/><text x="33.1704%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.07%)</title><rect x="33.0122%" y="709" width="0.0688%" height="15" fill="rgb(235,193,26)" fg:x="1439" fg:w="3"/><text x="33.2622%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="33.0351%" y="693" width="0.0459%" height="15" fill="rgb(229,99,21)" fg:x="1440" fg:w="2"/><text x="33.2851%" y="703.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (37 samples, 0.85%)</title><rect x="32.2551%" y="789" width="0.8488%" height="15" fill="rgb(211,140,41)" fg:x="1406" fg:w="37"/><text x="32.5051%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (37 samples, 0.85%)</title><rect x="32.2551%" y="773" width="0.8488%" height="15" fill="rgb(240,227,30)" fg:x="1406" fg:w="37"/><text x="32.5051%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="33.0810%" y="757" width="0.0229%" height="15" fill="rgb(215,224,45)" fg:x="1442" fg:w="1"/><text x="33.3310%" y="767.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="33.0810%" y="741" width="0.0229%" height="15" fill="rgb(206,123,31)" fg:x="1442" fg:w="1"/><text x="33.3310%" y="751.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="33.0810%" y="725" width="0.0229%" height="15" fill="rgb(210,138,16)" fg:x="1442" fg:w="1"/><text x="33.3310%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="33.0810%" y="709" width="0.0229%" height="15" fill="rgb(228,57,28)" fg:x="1442" fg:w="1"/><text x="33.3310%" y="719.50"></text></g><g><title>find_vma (1 samples, 0.02%)</title><rect x="33.1039%" y="693" width="0.0229%" height="15" fill="rgb(242,170,10)" fg:x="1443" fg:w="1"/><text x="33.3539%" y="703.50"></text></g><g><title>vmacache_find (1 samples, 0.02%)</title><rect x="33.1039%" y="677" width="0.0229%" height="15" fill="rgb(228,214,39)" fg:x="1443" fg:w="1"/><text x="33.3539%" y="687.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.07%)</title><rect x="33.1269%" y="645" width="0.0688%" height="15" fill="rgb(218,179,33)" fg:x="1444" fg:w="3"/><text x="33.3769%" y="655.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.07%)</title><rect x="33.1269%" y="629" width="0.0688%" height="15" fill="rgb(235,193,39)" fg:x="1444" fg:w="3"/><text x="33.3769%" y="639.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.07%)</title><rect x="33.1269%" y="613" width="0.0688%" height="15" fill="rgb(219,221,36)" fg:x="1444" fg:w="3"/><text x="33.3769%" y="623.50"></text></g><g><title>clear_page_rep (3 samples, 0.07%)</title><rect x="33.1269%" y="597" width="0.0688%" height="15" fill="rgb(248,218,19)" fg:x="1444" fg:w="3"/><text x="33.3769%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (5 samples, 0.11%)</title><rect x="33.1039%" y="789" width="0.1147%" height="15" fill="rgb(205,50,9)" fg:x="1443" fg:w="5"/><text x="33.3539%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (5 samples, 0.11%)</title><rect x="33.1039%" y="773" width="0.1147%" height="15" fill="rgb(238,81,28)" fg:x="1443" fg:w="5"/><text x="33.3539%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.11%)</title><rect x="33.1039%" y="757" width="0.1147%" height="15" fill="rgb(235,110,19)" fg:x="1443" fg:w="5"/><text x="33.3539%" y="767.50"></text></g><g><title>asm_exc_page_fault (5 samples, 0.11%)</title><rect x="33.1039%" y="741" width="0.1147%" height="15" fill="rgb(214,7,14)" fg:x="1443" fg:w="5"/><text x="33.3539%" y="751.50"></text></g><g><title>exc_page_fault (5 samples, 0.11%)</title><rect x="33.1039%" y="725" width="0.1147%" height="15" fill="rgb(211,77,3)" fg:x="1443" fg:w="5"/><text x="33.3539%" y="735.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.11%)</title><rect x="33.1039%" y="709" width="0.1147%" height="15" fill="rgb(229,5,9)" fg:x="1443" fg:w="5"/><text x="33.3539%" y="719.50"></text></g><g><title>handle_mm_fault (4 samples, 0.09%)</title><rect x="33.1269%" y="693" width="0.0918%" height="15" fill="rgb(225,90,11)" fg:x="1444" fg:w="4"/><text x="33.3769%" y="703.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.09%)</title><rect x="33.1269%" y="677" width="0.0918%" height="15" fill="rgb(242,56,8)" fg:x="1444" fg:w="4"/><text x="33.3769%" y="687.50"></text></g><g><title>do_anonymous_page (4 samples, 0.09%)</title><rect x="33.1269%" y="661" width="0.0918%" height="15" fill="rgb(249,212,39)" fg:x="1444" fg:w="4"/><text x="33.3769%" y="671.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.02%)</title><rect x="33.1957%" y="645" width="0.0229%" height="15" fill="rgb(236,90,9)" fg:x="1447" fg:w="1"/><text x="33.4457%" y="655.50"></text></g><g><title>lru_cache_add (1 samples, 0.02%)</title><rect x="33.1957%" y="629" width="0.0229%" height="15" fill="rgb(206,88,35)" fg:x="1447" fg:w="1"/><text x="33.4457%" y="639.50"></text></g><g><title>__pagevec_lru_add (1 samples, 0.02%)</title><rect x="33.1957%" y="613" width="0.0229%" height="15" fill="rgb(205,126,30)" fg:x="1447" fg:w="1"/><text x="33.4457%" y="623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (53 samples, 1.22%)</title><rect x="32.0486%" y="901" width="1.2159%" height="15" fill="rgb(230,176,12)" fg:x="1397" fg:w="53"/><text x="32.2986%" y="911.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (53 samples, 1.22%)</title><rect x="32.0486%" y="885" width="1.2159%" height="15" fill="rgb(243,19,9)" fg:x="1397" fg:w="53"/><text x="32.2986%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (53 samples, 1.22%)</title><rect x="32.0486%" y="869" width="1.2159%" height="15" fill="rgb(245,171,17)" fg:x="1397" fg:w="53"/><text x="32.2986%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (47 samples, 1.08%)</title><rect x="32.1863%" y="853" width="1.0782%" height="15" fill="rgb(227,52,21)" fg:x="1403" fg:w="47"/><text x="32.4363%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (45 samples, 1.03%)</title><rect x="32.2322%" y="837" width="1.0323%" height="15" fill="rgb(238,69,14)" fg:x="1405" fg:w="45"/><text x="32.4822%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (45 samples, 1.03%)</title><rect x="32.2322%" y="821" width="1.0323%" height="15" fill="rgb(241,156,39)" fg:x="1405" fg:w="45"/><text x="32.4822%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (45 samples, 1.03%)</title><rect x="32.2322%" y="805" width="1.0323%" height="15" fill="rgb(212,227,28)" fg:x="1405" fg:w="45"/><text x="32.4822%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.05%)</title><rect x="33.2186%" y="789" width="0.0459%" height="15" fill="rgb(209,118,27)" fg:x="1448" fg:w="2"/><text x="33.4686%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.05%)</title><rect x="33.2186%" y="773" width="0.0459%" height="15" fill="rgb(226,102,5)" fg:x="1448" fg:w="2"/><text x="33.4686%" y="783.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="33.2416%" y="757" width="0.0229%" height="15" fill="rgb(223,34,3)" fg:x="1449" fg:w="1"/><text x="33.4916%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="33.2416%" y="741" width="0.0229%" height="15" fill="rgb(221,81,38)" fg:x="1449" fg:w="1"/><text x="33.4916%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.16%)</title><rect x="33.4939%" y="757" width="0.1606%" height="15" fill="rgb(236,219,28)" fg:x="1460" fg:w="7"/><text x="33.7439%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.16%)</title><rect x="33.4939%" y="741" width="0.1606%" height="15" fill="rgb(213,200,14)" fg:x="1460" fg:w="7"/><text x="33.7439%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (7 samples, 0.16%)</title><rect x="33.4939%" y="725" width="0.1606%" height="15" fill="rgb(240,33,19)" fg:x="1460" fg:w="7"/><text x="33.7439%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.16%)</title><rect x="33.4939%" y="709" width="0.1606%" height="15" fill="rgb(233,113,27)" fg:x="1460" fg:w="7"/><text x="33.7439%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.16%)</title><rect x="33.4939%" y="693" width="0.1606%" height="15" fill="rgb(220,221,18)" fg:x="1460" fg:w="7"/><text x="33.7439%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.16%)</title><rect x="33.4939%" y="677" width="0.1606%" height="15" fill="rgb(238,92,8)" fg:x="1460" fg:w="7"/><text x="33.7439%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.09%)</title><rect x="33.5627%" y="661" width="0.0918%" height="15" fill="rgb(222,164,16)" fg:x="1463" fg:w="4"/><text x="33.8127%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.07%)</title><rect x="33.6545%" y="757" width="0.0688%" height="15" fill="rgb(241,119,3)" fg:x="1467" fg:w="3"/><text x="33.9045%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.07%)</title><rect x="33.6545%" y="741" width="0.0688%" height="15" fill="rgb(241,44,8)" fg:x="1467" fg:w="3"/><text x="33.9045%" y="751.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="33.6774%" y="725" width="0.0459%" height="15" fill="rgb(230,36,40)" fg:x="1468" fg:w="2"/><text x="33.9274%" y="735.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.05%)</title><rect x="33.6774%" y="709" width="0.0459%" height="15" fill="rgb(243,16,36)" fg:x="1468" fg:w="2"/><text x="33.9274%" y="719.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (1 samples, 0.02%)</title><rect x="34.7098%" y="661" width="0.0229%" height="15" fill="rgb(231,4,26)" fg:x="1513" fg:w="1"/><text x="34.9598%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.11%)</title><rect x="34.7327%" y="661" width="0.1147%" height="15" fill="rgb(240,9,31)" fg:x="1514" fg:w="5"/><text x="34.9827%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.11%)</title><rect x="34.7327%" y="645" width="0.1147%" height="15" fill="rgb(207,173,15)" fg:x="1514" fg:w="5"/><text x="34.9827%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (61 samples, 1.40%)</title><rect x="33.7233%" y="757" width="1.3994%" height="15" fill="rgb(224,192,53)" fg:x="1470" fg:w="61"/><text x="33.9733%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (46 samples, 1.06%)</title><rect x="34.0674%" y="741" width="1.0553%" height="15" fill="rgb(223,67,28)" fg:x="1485" fg:w="46"/><text x="34.3174%" y="751.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 1.06%)</title><rect x="34.0674%" y="725" width="1.0553%" height="15" fill="rgb(211,20,47)" fg:x="1485" fg:w="46"/><text x="34.3174%" y="735.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (46 samples, 1.06%)</title><rect x="34.0674%" y="709" width="1.0553%" height="15" fill="rgb(240,228,2)" fg:x="1485" fg:w="46"/><text x="34.3174%" y="719.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (46 samples, 1.06%)</title><rect x="34.0674%" y="693" width="1.0553%" height="15" fill="rgb(248,151,12)" fg:x="1485" fg:w="46"/><text x="34.3174%" y="703.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (43 samples, 0.99%)</title><rect x="34.1363%" y="677" width="0.9865%" height="15" fill="rgb(244,8,39)" fg:x="1488" fg:w="43"/><text x="34.3863%" y="687.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (12 samples, 0.28%)</title><rect x="34.8474%" y="661" width="0.2753%" height="15" fill="rgb(222,26,8)" fg:x="1519" fg:w="12"/><text x="35.0974%" y="671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.14%)</title><rect x="35.3063%" y="677" width="0.1376%" height="15" fill="rgb(213,106,44)" fg:x="1539" fg:w="6"/><text x="35.5563%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.14%)</title><rect x="35.3063%" y="661" width="0.1376%" height="15" fill="rgb(214,129,20)" fg:x="1539" fg:w="6"/><text x="35.5563%" y="671.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.07%)</title><rect x="35.3751%" y="645" width="0.0688%" height="15" fill="rgb(212,32,13)" fg:x="1542" fg:w="3"/><text x="35.6251%" y="655.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.05%)</title><rect x="35.4439%" y="677" width="0.0459%" height="15" fill="rgb(208,168,33)" fg:x="1545" fg:w="2"/><text x="35.6939%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.05%)</title><rect x="35.4439%" y="661" width="0.0459%" height="15" fill="rgb(231,207,8)" fg:x="1545" fg:w="2"/><text x="35.6939%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.05%)</title><rect x="35.4439%" y="645" width="0.0459%" height="15" fill="rgb(235,219,23)" fg:x="1545" fg:w="2"/><text x="35.6939%" y="655.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1 samples, 0.02%)</title><rect x="35.4898%" y="677" width="0.0229%" height="15" fill="rgb(226,216,26)" fg:x="1547" fg:w="1"/><text x="35.7398%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="35.4898%" y="661" width="0.0229%" height="15" fill="rgb(239,137,16)" fg:x="1547" fg:w="1"/><text x="35.7398%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="35.4898%" y="645" width="0.0229%" height="15" fill="rgb(207,12,36)" fg:x="1547" fg:w="1"/><text x="35.7398%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 samples, 2.11%)</title><rect x="33.4710%" y="885" width="2.1106%" height="15" fill="rgb(210,214,24)" fg:x="1459" fg:w="92"/><text x="33.7210%" y="895.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (92 samples, 2.11%)</title><rect x="33.4710%" y="869" width="2.1106%" height="15" fill="rgb(206,56,30)" fg:x="1459" fg:w="92"/><text x="33.7210%" y="879.50">c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (92 samples, 2.11%)</title><rect x="33.4710%" y="853" width="2.1106%" height="15" fill="rgb(228,143,26)" fg:x="1459" fg:w="92"/><text x="33.7210%" y="863.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (92 samples, 2.11%)</title><rect x="33.4710%" y="837" width="2.1106%" height="15" fill="rgb(216,218,46)" fg:x="1459" fg:w="92"/><text x="33.7210%" y="847.50">c..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (92 samples, 2.11%)</title><rect x="33.4710%" y="821" width="2.1106%" height="15" fill="rgb(206,6,19)" fg:x="1459" fg:w="92"/><text x="33.7210%" y="831.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (92 samples, 2.11%)</title><rect x="33.4710%" y="805" width="2.1106%" height="15" fill="rgb(239,177,51)" fg:x="1459" fg:w="92"/><text x="33.7210%" y="815.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (92 samples, 2.11%)</title><rect x="33.4710%" y="789" width="2.1106%" height="15" fill="rgb(216,55,25)" fg:x="1459" fg:w="92"/><text x="33.7210%" y="799.50">c..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (92 samples, 2.11%)</title><rect x="33.4710%" y="773" width="2.1106%" height="15" fill="rgb(231,163,29)" fg:x="1459" fg:w="92"/><text x="33.7210%" y="783.50">y..</text></g><g><title>core::str::&lt;impl str&gt;::matches (20 samples, 0.46%)</title><rect x="35.1227%" y="757" width="0.4588%" height="15" fill="rgb(232,149,50)" fg:x="1531" fg:w="20"/><text x="35.3727%" y="767.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (20 samples, 0.46%)</title><rect x="35.1227%" y="741" width="0.4588%" height="15" fill="rgb(223,142,48)" fg:x="1531" fg:w="20"/><text x="35.3727%" y="751.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (20 samples, 0.46%)</title><rect x="35.1227%" y="725" width="0.4588%" height="15" fill="rgb(245,83,23)" fg:x="1531" fg:w="20"/><text x="35.3727%" y="735.50"></text></g><g><title>core::str::pattern::StrSearcher::new (20 samples, 0.46%)</title><rect x="35.1227%" y="709" width="0.4588%" height="15" fill="rgb(224,63,2)" fg:x="1531" fg:w="20"/><text x="35.3727%" y="719.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (12 samples, 0.28%)</title><rect x="35.3063%" y="693" width="0.2753%" height="15" fill="rgb(218,65,53)" fg:x="1539" fg:w="12"/><text x="35.5563%" y="703.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (3 samples, 0.07%)</title><rect x="35.5127%" y="677" width="0.0688%" height="15" fill="rgb(221,84,29)" fg:x="1548" fg:w="3"/><text x="35.7627%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="35.5586%" y="661" width="0.0229%" height="15" fill="rgb(234,0,32)" fg:x="1550" fg:w="1"/><text x="35.8086%" y="671.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="35.5586%" y="645" width="0.0229%" height="15" fill="rgb(206,20,16)" fg:x="1550" fg:w="1"/><text x="35.8086%" y="655.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.02%)</title><rect x="35.6045%" y="869" width="0.0229%" height="15" fill="rgb(244,172,18)" fg:x="1552" fg:w="1"/><text x="35.8545%" y="879.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (2 samples, 0.05%)</title><rect x="35.6274%" y="869" width="0.0459%" height="15" fill="rgb(254,133,1)" fg:x="1553" fg:w="2"/><text x="35.8774%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.05%)</title><rect x="35.6274%" y="853" width="0.0459%" height="15" fill="rgb(222,206,41)" fg:x="1553" fg:w="2"/><text x="35.8774%" y="863.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.05%)</title><rect x="35.6274%" y="837" width="0.0459%" height="15" fill="rgb(212,3,42)" fg:x="1553" fg:w="2"/><text x="35.8774%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="35.6274%" y="821" width="0.0459%" height="15" fill="rgb(241,11,4)" fg:x="1553" fg:w="2"/><text x="35.8774%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="35.6274%" y="805" width="0.0459%" height="15" fill="rgb(205,19,26)" fg:x="1553" fg:w="2"/><text x="35.8774%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="35.6274%" y="789" width="0.0459%" height="15" fill="rgb(210,179,32)" fg:x="1553" fg:w="2"/><text x="35.8774%" y="799.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="35.9257%" y="837" width="0.0229%" height="15" fill="rgb(227,116,49)" fg:x="1566" fg:w="1"/><text x="36.1757%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (10 samples, 0.23%)</title><rect x="36.0404%" y="677" width="0.2294%" height="15" fill="rgb(211,146,6)" fg:x="1571" fg:w="10"/><text x="36.2904%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect x="36.4763%" y="581" width="0.0229%" height="15" fill="rgb(219,44,39)" fg:x="1590" fg:w="1"/><text x="36.7263%" y="591.50"></text></g><g><title>_int_free (14 samples, 0.32%)</title><rect x="36.4992%" y="581" width="0.3212%" height="15" fill="rgb(234,128,11)" fg:x="1591" fg:w="14"/><text x="36.7492%" y="591.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="36.7974%" y="565" width="0.0229%" height="15" fill="rgb(220,183,53)" fg:x="1604" fg:w="1"/><text x="37.0474%" y="575.50"></text></g><g><title>_int_realloc (24 samples, 0.55%)</title><rect x="36.4074%" y="597" width="0.5506%" height="15" fill="rgb(213,219,32)" fg:x="1587" fg:w="24"/><text x="36.6574%" y="607.50"></text></g><g><title>_int_malloc (6 samples, 0.14%)</title><rect x="36.8204%" y="581" width="0.1376%" height="15" fill="rgb(232,156,16)" fg:x="1605" fg:w="6"/><text x="37.0704%" y="591.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="36.9351%" y="565" width="0.0229%" height="15" fill="rgb(246,135,34)" fg:x="1610" fg:w="1"/><text x="37.1851%" y="575.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="36.9351%" y="549" width="0.0229%" height="15" fill="rgb(241,99,0)" fg:x="1610" fg:w="1"/><text x="37.1851%" y="559.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="36.9351%" y="533" width="0.0229%" height="15" fill="rgb(222,103,45)" fg:x="1610" fg:w="1"/><text x="37.1851%" y="543.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="36.9351%" y="517" width="0.0229%" height="15" fill="rgb(212,57,4)" fg:x="1610" fg:w="1"/><text x="37.1851%" y="527.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="36.9351%" y="501" width="0.0229%" height="15" fill="rgb(215,68,47)" fg:x="1610" fg:w="1"/><text x="37.1851%" y="511.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="36.9351%" y="485" width="0.0229%" height="15" fill="rgb(230,84,2)" fg:x="1610" fg:w="1"/><text x="37.1851%" y="495.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="36.9351%" y="469" width="0.0229%" height="15" fill="rgb(220,102,14)" fg:x="1610" fg:w="1"/><text x="37.1851%" y="479.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="36.9351%" y="453" width="0.0229%" height="15" fill="rgb(240,10,32)" fg:x="1610" fg:w="1"/><text x="37.1851%" y="463.50"></text></g><g><title>__GI___libc_realloc (30 samples, 0.69%)</title><rect x="36.2927%" y="613" width="0.6882%" height="15" fill="rgb(215,47,27)" fg:x="1582" fg:w="30"/><text x="36.5427%" y="623.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="36.9580%" y="597" width="0.0229%" height="15" fill="rgb(233,188,43)" fg:x="1611" fg:w="1"/><text x="37.2080%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (31 samples, 0.71%)</title><rect x="36.2927%" y="661" width="0.7112%" height="15" fill="rgb(253,190,1)" fg:x="1582" fg:w="31"/><text x="36.5427%" y="671.50"></text></g><g><title>alloc::alloc::Global::grow_impl (31 samples, 0.71%)</title><rect x="36.2927%" y="645" width="0.7112%" height="15" fill="rgb(206,114,52)" fg:x="1582" fg:w="31"/><text x="36.5427%" y="655.50"></text></g><g><title>alloc::alloc::realloc (31 samples, 0.71%)</title><rect x="36.2927%" y="629" width="0.7112%" height="15" fill="rgb(233,120,37)" fg:x="1582" fg:w="31"/><text x="36.5427%" y="639.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="36.9810%" y="613" width="0.0229%" height="15" fill="rgb(214,52,39)" fg:x="1612" fg:w="1"/><text x="37.2310%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="37.0039%" y="661" width="0.0229%" height="15" fill="rgb(223,80,29)" fg:x="1613" fg:w="1"/><text x="37.2539%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (38 samples, 0.87%)</title><rect x="36.2698%" y="677" width="0.8718%" height="15" fill="rgb(230,101,40)" fg:x="1581" fg:w="38"/><text x="36.5198%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (5 samples, 0.11%)</title><rect x="37.0268%" y="661" width="0.1147%" height="15" fill="rgb(219,211,8)" fg:x="1614" fg:w="5"/><text x="37.2768%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (51 samples, 1.17%)</title><rect x="35.9945%" y="741" width="1.1700%" height="15" fill="rgb(252,126,28)" fg:x="1569" fg:w="51"/><text x="36.2445%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (51 samples, 1.17%)</title><rect x="35.9945%" y="725" width="1.1700%" height="15" fill="rgb(215,56,38)" fg:x="1569" fg:w="51"/><text x="36.2445%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (51 samples, 1.17%)</title><rect x="35.9945%" y="709" width="1.1700%" height="15" fill="rgb(249,55,44)" fg:x="1569" fg:w="51"/><text x="36.2445%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (49 samples, 1.12%)</title><rect x="36.0404%" y="693" width="1.1241%" height="15" fill="rgb(220,221,32)" fg:x="1571" fg:w="49"/><text x="36.2904%" y="703.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="37.1415%" y="677" width="0.0229%" height="15" fill="rgb(212,216,41)" fg:x="1619" fg:w="1"/><text x="37.3915%" y="687.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="37.1415%" y="661" width="0.0229%" height="15" fill="rgb(228,213,43)" fg:x="1619" fg:w="1"/><text x="37.3915%" y="671.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="37.1415%" y="645" width="0.0229%" height="15" fill="rgb(211,31,26)" fg:x="1619" fg:w="1"/><text x="37.3915%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect x="37.1645%" y="725" width="0.0229%" height="15" fill="rgb(229,202,19)" fg:x="1620" fg:w="1"/><text x="37.4145%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 samples, 1.26%)</title><rect x="35.9486%" y="837" width="1.2618%" height="15" fill="rgb(229,105,46)" fg:x="1567" fg:w="55"/><text x="36.1986%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (53 samples, 1.22%)</title><rect x="35.9945%" y="821" width="1.2159%" height="15" fill="rgb(235,108,1)" fg:x="1569" fg:w="53"/><text x="36.2445%" y="831.50"></text></g><g><title>alloc::string::String::push_str (53 samples, 1.22%)</title><rect x="35.9945%" y="805" width="1.2159%" height="15" fill="rgb(245,111,35)" fg:x="1569" fg:w="53"/><text x="36.2445%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (53 samples, 1.22%)</title><rect x="35.9945%" y="789" width="1.2159%" height="15" fill="rgb(219,185,31)" fg:x="1569" fg:w="53"/><text x="36.2445%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (53 samples, 1.22%)</title><rect x="35.9945%" y="773" width="1.2159%" height="15" fill="rgb(214,4,43)" fg:x="1569" fg:w="53"/><text x="36.2445%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (53 samples, 1.22%)</title><rect x="35.9945%" y="757" width="1.2159%" height="15" fill="rgb(235,227,40)" fg:x="1569" fg:w="53"/><text x="36.2445%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="37.1645%" y="741" width="0.0459%" height="15" fill="rgb(230,88,30)" fg:x="1620" fg:w="2"/><text x="37.4145%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="37.1874%" y="725" width="0.0229%" height="15" fill="rgb(216,217,1)" fg:x="1621" fg:w="1"/><text x="37.4374%" y="735.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="37.2104%" y="837" width="0.0229%" height="15" fill="rgb(248,139,50)" fg:x="1622" fg:w="1"/><text x="37.4604%" y="847.50"></text></g><g><title>core::fmt::Formatter::new (2 samples, 0.05%)</title><rect x="37.2333%" y="837" width="0.0459%" height="15" fill="rgb(233,1,21)" fg:x="1623" fg:w="2"/><text x="37.4833%" y="847.50"></text></g><g><title>core::fmt::Formatter::pad (6 samples, 0.14%)</title><rect x="37.2792%" y="837" width="0.1376%" height="15" fill="rgb(215,183,12)" fg:x="1625" fg:w="6"/><text x="37.5292%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="37.4168%" y="837" width="0.0229%" height="15" fill="rgb(229,104,42)" fg:x="1631" fg:w="1"/><text x="37.6668%" y="847.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="37.4168%" y="821" width="0.0229%" height="15" fill="rgb(243,34,48)" fg:x="1631" fg:w="1"/><text x="37.6668%" y="831.50"></text></g><g><title>alloc::fmt::format (82 samples, 1.88%)</title><rect x="35.5816%" y="885" width="1.8812%" height="15" fill="rgb(239,11,44)" fg:x="1551" fg:w="82"/><text x="35.8316%" y="895.50">a..</text></g><g><title>core::fmt::Write::write_fmt (78 samples, 1.79%)</title><rect x="35.6733%" y="869" width="1.7894%" height="15" fill="rgb(231,98,35)" fg:x="1555" fg:w="78"/><text x="35.9233%" y="879.50">c..</text></g><g><title>core::fmt::write (76 samples, 1.74%)</title><rect x="35.7192%" y="853" width="1.7435%" height="15" fill="rgb(233,28,25)" fg:x="1557" fg:w="76"/><text x="35.9692%" y="863.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.02%)</title><rect x="37.4398%" y="837" width="0.0229%" height="15" fill="rgb(234,123,11)" fg:x="1632" fg:w="1"/><text x="37.6898%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="37.4627%" y="885" width="0.0229%" height="15" fill="rgb(220,69,3)" fg:x="1633" fg:w="1"/><text x="37.7127%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="37.4627%" y="869" width="0.0229%" height="15" fill="rgb(214,64,36)" fg:x="1633" fg:w="1"/><text x="37.7127%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="37.4627%" y="853" width="0.0229%" height="15" fill="rgb(211,138,32)" fg:x="1633" fg:w="1"/><text x="37.7127%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="37.4627%" y="837" width="0.0229%" height="15" fill="rgb(213,118,47)" fg:x="1633" fg:w="1"/><text x="37.7127%" y="847.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="37.4627%" y="821" width="0.0229%" height="15" fill="rgb(243,124,49)" fg:x="1633" fg:w="1"/><text x="37.7127%" y="831.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="37.4627%" y="805" width="0.0229%" height="15" fill="rgb(221,30,28)" fg:x="1633" fg:w="1"/><text x="37.7127%" y="815.50"></text></g><g><title>__GI___libc_free (2 samples, 0.05%)</title><rect x="37.4857%" y="789" width="0.0459%" height="15" fill="rgb(246,37,13)" fg:x="1634" fg:w="2"/><text x="37.7357%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.16%)</title><rect x="37.4857%" y="885" width="0.1606%" height="15" fill="rgb(249,66,14)" fg:x="1634" fg:w="7"/><text x="37.7357%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.16%)</title><rect x="37.4857%" y="869" width="0.1606%" height="15" fill="rgb(213,166,5)" fg:x="1634" fg:w="7"/><text x="37.7357%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.16%)</title><rect x="37.4857%" y="853" width="0.1606%" height="15" fill="rgb(221,66,24)" fg:x="1634" fg:w="7"/><text x="37.7357%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.16%)</title><rect x="37.4857%" y="837" width="0.1606%" height="15" fill="rgb(210,132,17)" fg:x="1634" fg:w="7"/><text x="37.7357%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.16%)</title><rect x="37.4857%" y="821" width="0.1606%" height="15" fill="rgb(243,202,5)" fg:x="1634" fg:w="7"/><text x="37.7357%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.16%)</title><rect x="37.4857%" y="805" width="0.1606%" height="15" fill="rgb(233,70,48)" fg:x="1634" fg:w="7"/><text x="37.7357%" y="815.50"></text></g><g><title>_int_free (5 samples, 0.11%)</title><rect x="37.5315%" y="789" width="0.1147%" height="15" fill="rgb(238,41,26)" fg:x="1636" fg:w="5"/><text x="37.7815%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="37.6462%" y="821" width="0.0459%" height="15" fill="rgb(241,19,31)" fg:x="1641" fg:w="2"/><text x="37.8962%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="37.6462%" y="805" width="0.0459%" height="15" fill="rgb(214,76,10)" fg:x="1641" fg:w="2"/><text x="37.8962%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="37.6462%" y="789" width="0.0459%" height="15" fill="rgb(254,202,22)" fg:x="1641" fg:w="2"/><text x="37.8962%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.05%)</title><rect x="37.6462%" y="773" width="0.0459%" height="15" fill="rgb(214,72,24)" fg:x="1641" fg:w="2"/><text x="37.8962%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="37.6692%" y="757" width="0.0229%" height="15" fill="rgb(221,92,46)" fg:x="1642" fg:w="1"/><text x="37.9192%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.11%)</title><rect x="37.6462%" y="837" width="0.1147%" height="15" fill="rgb(246,13,50)" fg:x="1641" fg:w="5"/><text x="37.8962%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.07%)</title><rect x="37.6921%" y="821" width="0.0688%" height="15" fill="rgb(240,165,38)" fg:x="1643" fg:w="3"/><text x="37.9421%" y="831.50"></text></g><g><title>core::hash::Hasher::write_u8 (3 samples, 0.07%)</title><rect x="37.6921%" y="805" width="0.0688%" height="15" fill="rgb(241,24,51)" fg:x="1643" fg:w="3"/><text x="37.9421%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="37.7151%" y="789" width="0.0459%" height="15" fill="rgb(227,51,44)" fg:x="1644" fg:w="2"/><text x="37.9651%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="37.7151%" y="773" width="0.0459%" height="15" fill="rgb(231,121,3)" fg:x="1644" fg:w="2"/><text x="37.9651%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="37.7151%" y="757" width="0.0459%" height="15" fill="rgb(245,3,41)" fg:x="1644" fg:w="2"/><text x="37.9651%" y="767.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="37.7380%" y="741" width="0.0229%" height="15" fill="rgb(214,13,26)" fg:x="1645" fg:w="1"/><text x="37.9880%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="37.7839%" y="805" width="0.0229%" height="15" fill="rgb(252,75,11)" fg:x="1647" fg:w="1"/><text x="38.0339%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="37.7839%" y="789" width="0.0229%" height="15" fill="rgb(218,226,17)" fg:x="1647" fg:w="1"/><text x="38.0339%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="37.7839%" y="773" width="0.0229%" height="15" fill="rgb(248,89,38)" fg:x="1647" fg:w="1"/><text x="38.0339%" y="783.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="37.7839%" y="757" width="0.0229%" height="15" fill="rgb(237,73,46)" fg:x="1647" fg:w="1"/><text x="38.0339%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.21%)</title><rect x="37.6462%" y="885" width="0.2065%" height="15" fill="rgb(242,78,33)" fg:x="1641" fg:w="9"/><text x="37.8962%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.21%)</title><rect x="37.6462%" y="869" width="0.2065%" height="15" fill="rgb(235,60,3)" fg:x="1641" fg:w="9"/><text x="37.8962%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.21%)</title><rect x="37.6462%" y="853" width="0.2065%" height="15" fill="rgb(216,172,19)" fg:x="1641" fg:w="9"/><text x="37.8962%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.09%)</title><rect x="37.7610%" y="837" width="0.0918%" height="15" fill="rgb(227,6,42)" fg:x="1646" fg:w="4"/><text x="38.0110%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.09%)</title><rect x="37.7610%" y="821" width="0.0918%" height="15" fill="rgb(223,207,42)" fg:x="1646" fg:w="4"/><text x="38.0110%" y="831.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.05%)</title><rect x="37.8068%" y="805" width="0.0459%" height="15" fill="rgb(246,138,30)" fg:x="1648" fg:w="2"/><text x="38.0568%" y="815.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.05%)</title><rect x="37.8068%" y="789" width="0.0459%" height="15" fill="rgb(251,199,47)" fg:x="1648" fg:w="2"/><text x="38.0568%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="37.8068%" y="773" width="0.0459%" height="15" fill="rgb(228,218,44)" fg:x="1648" fg:w="2"/><text x="38.0568%" y="783.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="37.8068%" y="757" width="0.0459%" height="15" fill="rgb(220,68,6)" fg:x="1648" fg:w="2"/><text x="38.0568%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="37.8068%" y="741" width="0.0459%" height="15" fill="rgb(240,60,26)" fg:x="1648" fg:w="2"/><text x="38.0568%" y="751.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="37.8298%" y="725" width="0.0229%" height="15" fill="rgb(211,200,19)" fg:x="1649" fg:w="1"/><text x="38.0798%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="37.8757%" y="789" width="0.0229%" height="15" fill="rgb(242,145,30)" fg:x="1651" fg:w="1"/><text x="38.1257%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="37.8757%" y="773" width="0.0229%" height="15" fill="rgb(225,64,13)" fg:x="1651" fg:w="1"/><text x="38.1257%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="37.8757%" y="757" width="0.0229%" height="15" fill="rgb(218,103,35)" fg:x="1651" fg:w="1"/><text x="38.1257%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.11%)</title><rect x="37.9674%" y="725" width="0.1147%" height="15" fill="rgb(216,93,46)" fg:x="1655" fg:w="5"/><text x="38.2174%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.09%)</title><rect x="37.9904%" y="709" width="0.0918%" height="15" fill="rgb(225,159,27)" fg:x="1656" fg:w="4"/><text x="38.2404%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.25%)</title><rect x="37.8986%" y="773" width="0.2524%" height="15" fill="rgb(225,204,11)" fg:x="1652" fg:w="11"/><text x="38.1486%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.25%)</title><rect x="37.8986%" y="757" width="0.2524%" height="15" fill="rgb(205,56,4)" fg:x="1652" fg:w="11"/><text x="38.1486%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.25%)</title><rect x="37.8986%" y="741" width="0.2524%" height="15" fill="rgb(206,6,35)" fg:x="1652" fg:w="11"/><text x="38.1486%" y="751.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.07%)</title><rect x="38.0821%" y="725" width="0.0688%" height="15" fill="rgb(247,73,52)" fg:x="1660" fg:w="3"/><text x="38.3321%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (16 samples, 0.37%)</title><rect x="37.8757%" y="805" width="0.3671%" height="15" fill="rgb(246,97,4)" fg:x="1651" fg:w="16"/><text x="38.1257%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (15 samples, 0.34%)</title><rect x="37.8986%" y="789" width="0.3441%" height="15" fill="rgb(212,37,15)" fg:x="1652" fg:w="15"/><text x="38.1486%" y="799.50"></text></g><g><title>core::hash::Hasher::write_u8 (4 samples, 0.09%)</title><rect x="38.1510%" y="773" width="0.0918%" height="15" fill="rgb(208,130,40)" fg:x="1663" fg:w="4"/><text x="38.4010%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.09%)</title><rect x="38.1510%" y="757" width="0.0918%" height="15" fill="rgb(236,55,29)" fg:x="1663" fg:w="4"/><text x="38.4010%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.09%)</title><rect x="38.1510%" y="741" width="0.0918%" height="15" fill="rgb(209,156,45)" fg:x="1663" fg:w="4"/><text x="38.4010%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.09%)</title><rect x="38.1510%" y="725" width="0.0918%" height="15" fill="rgb(249,107,4)" fg:x="1663" fg:w="4"/><text x="38.4010%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="38.2657%" y="757" width="0.0229%" height="15" fill="rgb(227,7,13)" fg:x="1668" fg:w="1"/><text x="38.5157%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="38.2657%" y="741" width="0.0229%" height="15" fill="rgb(250,129,14)" fg:x="1668" fg:w="1"/><text x="38.5157%" y="751.50"></text></g><g><title>asm_sysvec_irq_work (1 samples, 0.02%)</title><rect x="38.3115%" y="741" width="0.0229%" height="15" fill="rgb(229,92,13)" fg:x="1670" fg:w="1"/><text x="38.5615%" y="751.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.02%)</title><rect x="38.3115%" y="725" width="0.0229%" height="15" fill="rgb(245,98,39)" fg:x="1670" fg:w="1"/><text x="38.5615%" y="735.50"></text></g><g><title>irqentry_exit (1 samples, 0.02%)</title><rect x="38.3115%" y="709" width="0.0229%" height="15" fill="rgb(234,135,48)" fg:x="1670" fg:w="1"/><text x="38.5615%" y="719.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="38.3115%" y="693" width="0.0229%" height="15" fill="rgb(230,98,28)" fg:x="1670" fg:w="1"/><text x="38.5615%" y="703.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="38.3115%" y="677" width="0.0229%" height="15" fill="rgb(223,121,0)" fg:x="1670" fg:w="1"/><text x="38.5615%" y="687.50"></text></g><g><title>schedule (1 samples, 0.02%)</title><rect x="38.3115%" y="661" width="0.0229%" height="15" fill="rgb(234,173,33)" fg:x="1670" fg:w="1"/><text x="38.5615%" y="671.50"></text></g><g><title>__schedule (1 samples, 0.02%)</title><rect x="38.3115%" y="645" width="0.0229%" height="15" fill="rgb(245,47,8)" fg:x="1670" fg:w="1"/><text x="38.5615%" y="655.50"></text></g><g><title>psi_task_switch (1 samples, 0.02%)</title><rect x="38.3115%" y="629" width="0.0229%" height="15" fill="rgb(205,17,20)" fg:x="1670" fg:w="1"/><text x="38.5615%" y="639.50"></text></g><g><title>psi_group_change (1 samples, 0.02%)</title><rect x="38.3115%" y="613" width="0.0229%" height="15" fill="rgb(232,151,16)" fg:x="1670" fg:w="1"/><text x="38.5615%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="38.3345%" y="741" width="0.0229%" height="15" fill="rgb(208,30,32)" fg:x="1671" fg:w="1"/><text x="38.5845%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (24 samples, 0.55%)</title><rect x="37.8527%" y="821" width="0.5506%" height="15" fill="rgb(254,26,3)" fg:x="1650" fg:w="24"/><text x="38.1027%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.16%)</title><rect x="38.2427%" y="805" width="0.1606%" height="15" fill="rgb(240,177,30)" fg:x="1667" fg:w="7"/><text x="38.4927%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.16%)</title><rect x="38.2427%" y="789" width="0.1606%" height="15" fill="rgb(248,76,44)" fg:x="1667" fg:w="7"/><text x="38.4927%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.16%)</title><rect x="38.2427%" y="773" width="0.1606%" height="15" fill="rgb(241,186,54)" fg:x="1667" fg:w="7"/><text x="38.4927%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.11%)</title><rect x="38.2886%" y="757" width="0.1147%" height="15" fill="rgb(249,171,29)" fg:x="1669" fg:w="5"/><text x="38.5386%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="38.3574%" y="741" width="0.0459%" height="15" fill="rgb(237,151,44)" fg:x="1672" fg:w="2"/><text x="38.6074%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="38.4492%" y="757" width="0.0459%" height="15" fill="rgb(228,174,30)" fg:x="1676" fg:w="2"/><text x="38.6992%" y="767.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.05%)</title><rect x="38.4492%" y="741" width="0.0459%" height="15" fill="rgb(252,14,37)" fg:x="1676" fg:w="2"/><text x="38.6992%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.09%)</title><rect x="38.4262%" y="789" width="0.0918%" height="15" fill="rgb(207,111,40)" fg:x="1675" fg:w="4"/><text x="38.6762%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="38.4492%" y="773" width="0.0688%" height="15" fill="rgb(248,171,54)" fg:x="1676" fg:w="3"/><text x="38.6992%" y="783.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::any_bit_set (1 samples, 0.02%)</title><rect x="38.4951%" y="757" width="0.0229%" height="15" fill="rgb(211,127,2)" fg:x="1678" fg:w="1"/><text x="38.7451%" y="767.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.14%)</title><rect x="38.5180%" y="789" width="0.1376%" height="15" fill="rgb(236,87,47)" fg:x="1679" fg:w="6"/><text x="38.7680%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (6 samples, 0.14%)</title><rect x="38.5180%" y="773" width="0.1376%" height="15" fill="rgb(223,190,45)" fg:x="1679" fg:w="6"/><text x="38.7680%" y="783.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.14%)</title><rect x="38.5180%" y="757" width="0.1376%" height="15" fill="rgb(215,5,16)" fg:x="1679" fg:w="6"/><text x="38.7680%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.14%)</title><rect x="38.5180%" y="741" width="0.1376%" height="15" fill="rgb(252,82,33)" fg:x="1679" fg:w="6"/><text x="38.7680%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.14%)</title><rect x="38.5180%" y="725" width="0.1376%" height="15" fill="rgb(247,213,44)" fg:x="1679" fg:w="6"/><text x="38.7680%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.14%)</title><rect x="38.5180%" y="709" width="0.1376%" height="15" fill="rgb(205,196,44)" fg:x="1679" fg:w="6"/><text x="38.7680%" y="719.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (37 samples, 0.85%)</title><rect x="37.8527%" y="885" width="0.8488%" height="15" fill="rgb(237,96,54)" fg:x="1650" fg:w="37"/><text x="38.1027%" y="895.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (37 samples, 0.85%)</title><rect x="37.8527%" y="869" width="0.8488%" height="15" fill="rgb(230,113,34)" fg:x="1650" fg:w="37"/><text x="38.1027%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (37 samples, 0.85%)</title><rect x="37.8527%" y="853" width="0.8488%" height="15" fill="rgb(221,224,12)" fg:x="1650" fg:w="37"/><text x="38.1027%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (37 samples, 0.85%)</title><rect x="37.8527%" y="837" width="0.8488%" height="15" fill="rgb(219,112,44)" fg:x="1650" fg:w="37"/><text x="38.1027%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.30%)</title><rect x="38.4033%" y="821" width="0.2982%" height="15" fill="rgb(210,31,13)" fg:x="1674" fg:w="13"/><text x="38.6533%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.30%)</title><rect x="38.4033%" y="805" width="0.2982%" height="15" fill="rgb(230,25,16)" fg:x="1674" fg:w="13"/><text x="38.6533%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="38.6557%" y="789" width="0.0459%" height="15" fill="rgb(246,108,53)" fg:x="1685" fg:w="2"/><text x="38.9057%" y="799.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="38.6557%" y="773" width="0.0459%" height="15" fill="rgb(241,172,50)" fg:x="1685" fg:w="2"/><text x="38.9057%" y="783.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.05%)</title><rect x="38.6557%" y="757" width="0.0459%" height="15" fill="rgb(235,141,10)" fg:x="1685" fg:w="2"/><text x="38.9057%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.05%)</title><rect x="38.6557%" y="741" width="0.0459%" height="15" fill="rgb(220,174,43)" fg:x="1685" fg:w="2"/><text x="38.9057%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.05%)</title><rect x="38.6557%" y="725" width="0.0459%" height="15" fill="rgb(215,181,40)" fg:x="1685" fg:w="2"/><text x="38.9057%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.05%)</title><rect x="38.6557%" y="709" width="0.0459%" height="15" fill="rgb(230,97,2)" fg:x="1685" fg:w="2"/><text x="38.9057%" y="719.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.05%)</title><rect x="38.6557%" y="693" width="0.0459%" height="15" fill="rgb(211,25,27)" fg:x="1685" fg:w="2"/><text x="38.9057%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="38.7015%" y="789" width="0.0459%" height="15" fill="rgb(230,87,26)" fg:x="1687" fg:w="2"/><text x="38.9515%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="38.7015%" y="773" width="0.0459%" height="15" fill="rgb(227,160,17)" fg:x="1687" fg:w="2"/><text x="38.9515%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="38.7015%" y="757" width="0.0459%" height="15" fill="rgb(244,85,34)" fg:x="1687" fg:w="2"/><text x="38.9515%" y="767.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="38.7245%" y="741" width="0.0229%" height="15" fill="rgb(207,70,0)" fg:x="1688" fg:w="1"/><text x="38.9745%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4 samples, 0.09%)</title><rect x="38.7015%" y="821" width="0.0918%" height="15" fill="rgb(223,129,7)" fg:x="1687" fg:w="4"/><text x="38.9515%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.09%)</title><rect x="38.7015%" y="805" width="0.0918%" height="15" fill="rgb(246,105,7)" fg:x="1687" fg:w="4"/><text x="38.9515%" y="815.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.05%)</title><rect x="38.7474%" y="789" width="0.0459%" height="15" fill="rgb(215,154,42)" fg:x="1689" fg:w="2"/><text x="38.9974%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="38.7474%" y="773" width="0.0459%" height="15" fill="rgb(220,215,30)" fg:x="1689" fg:w="2"/><text x="38.9974%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="38.7474%" y="757" width="0.0459%" height="15" fill="rgb(228,81,51)" fg:x="1689" fg:w="2"/><text x="38.9974%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="38.7474%" y="741" width="0.0459%" height="15" fill="rgb(247,71,54)" fg:x="1689" fg:w="2"/><text x="38.9974%" y="751.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="38.7704%" y="725" width="0.0229%" height="15" fill="rgb(234,176,34)" fg:x="1690" fg:w="1"/><text x="39.0204%" y="735.50"></text></g><g><title>hashbrown::map::make_insert_hash (6 samples, 0.14%)</title><rect x="38.7015%" y="837" width="0.1376%" height="15" fill="rgb(241,103,54)" fg:x="1687" fg:w="6"/><text x="38.9515%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="38.7933%" y="821" width="0.0459%" height="15" fill="rgb(228,22,34)" fg:x="1691" fg:w="2"/><text x="39.0433%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="38.7933%" y="805" width="0.0459%" height="15" fill="rgb(241,179,48)" fg:x="1691" fg:w="2"/><text x="39.0433%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="38.7933%" y="789" width="0.0459%" height="15" fill="rgb(235,167,37)" fg:x="1691" fg:w="2"/><text x="39.0433%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.05%)</title><rect x="38.7933%" y="773" width="0.0459%" height="15" fill="rgb(213,109,30)" fg:x="1691" fg:w="2"/><text x="39.0433%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (7 samples, 0.16%)</title><rect x="38.8851%" y="741" width="0.1606%" height="15" fill="rgb(222,172,16)" fg:x="1695" fg:w="7"/><text x="39.1351%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (7 samples, 0.16%)</title><rect x="38.8851%" y="725" width="0.1606%" height="15" fill="rgb(233,192,5)" fg:x="1695" fg:w="7"/><text x="39.1351%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.16%)</title><rect x="38.8851%" y="709" width="0.1606%" height="15" fill="rgb(247,189,41)" fg:x="1695" fg:w="7"/><text x="39.1351%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.16%)</title><rect x="38.8851%" y="693" width="0.1606%" height="15" fill="rgb(218,134,47)" fg:x="1695" fg:w="7"/><text x="39.1351%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.16%)</title><rect x="38.8851%" y="677" width="0.1606%" height="15" fill="rgb(216,29,3)" fg:x="1695" fg:w="7"/><text x="39.1351%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.16%)</title><rect x="38.8851%" y="661" width="0.1606%" height="15" fill="rgb(246,140,12)" fg:x="1695" fg:w="7"/><text x="39.1351%" y="671.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (9 samples, 0.21%)</title><rect x="38.8621%" y="773" width="0.2065%" height="15" fill="rgb(230,136,11)" fg:x="1694" fg:w="9"/><text x="39.1121%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.21%)</title><rect x="38.8621%" y="757" width="0.2065%" height="15" fill="rgb(247,22,47)" fg:x="1694" fg:w="9"/><text x="39.1121%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="39.0457%" y="741" width="0.0229%" height="15" fill="rgb(218,84,22)" fg:x="1702" fg:w="1"/><text x="39.2957%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="39.0457%" y="725" width="0.0229%" height="15" fill="rgb(216,87,39)" fg:x="1702" fg:w="1"/><text x="39.2957%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="39.0457%" y="709" width="0.0229%" height="15" fill="rgb(221,178,8)" fg:x="1702" fg:w="1"/><text x="39.2957%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="39.0457%" y="693" width="0.0229%" height="15" fill="rgb(230,42,11)" fg:x="1702" fg:w="1"/><text x="39.2957%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="39.0457%" y="677" width="0.0229%" height="15" fill="rgb(237,229,4)" fg:x="1702" fg:w="1"/><text x="39.2957%" y="687.50"></text></g><g><title>alloc_pages_vma (3 samples, 0.07%)</title><rect x="39.0686%" y="629" width="0.0688%" height="15" fill="rgb(222,31,33)" fg:x="1703" fg:w="3"/><text x="39.3186%" y="639.50"></text></g><g><title>__alloc_pages_nodemask (3 samples, 0.07%)</title><rect x="39.0686%" y="613" width="0.0688%" height="15" fill="rgb(210,17,39)" fg:x="1703" fg:w="3"/><text x="39.3186%" y="623.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.05%)</title><rect x="39.0915%" y="597" width="0.0459%" height="15" fill="rgb(244,93,20)" fg:x="1704" fg:w="2"/><text x="39.3415%" y="607.50"></text></g><g><title>clear_page_rep (2 samples, 0.05%)</title><rect x="39.0915%" y="581" width="0.0459%" height="15" fill="rgb(210,40,47)" fg:x="1704" fg:w="2"/><text x="39.3415%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (4 samples, 0.09%)</title><rect x="39.0686%" y="773" width="0.0918%" height="15" fill="rgb(239,211,47)" fg:x="1703" fg:w="4"/><text x="39.3186%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (4 samples, 0.09%)</title><rect x="39.0686%" y="757" width="0.0918%" height="15" fill="rgb(251,223,49)" fg:x="1703" fg:w="4"/><text x="39.3186%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.09%)</title><rect x="39.0686%" y="741" width="0.0918%" height="15" fill="rgb(221,149,5)" fg:x="1703" fg:w="4"/><text x="39.3186%" y="751.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.09%)</title><rect x="39.0686%" y="725" width="0.0918%" height="15" fill="rgb(219,224,51)" fg:x="1703" fg:w="4"/><text x="39.3186%" y="735.50"></text></g><g><title>exc_page_fault (4 samples, 0.09%)</title><rect x="39.0686%" y="709" width="0.0918%" height="15" fill="rgb(223,7,8)" fg:x="1703" fg:w="4"/><text x="39.3186%" y="719.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.09%)</title><rect x="39.0686%" y="693" width="0.0918%" height="15" fill="rgb(241,217,22)" fg:x="1703" fg:w="4"/><text x="39.3186%" y="703.50"></text></g><g><title>handle_mm_fault (4 samples, 0.09%)</title><rect x="39.0686%" y="677" width="0.0918%" height="15" fill="rgb(248,209,0)" fg:x="1703" fg:w="4"/><text x="39.3186%" y="687.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.09%)</title><rect x="39.0686%" y="661" width="0.0918%" height="15" fill="rgb(217,205,4)" fg:x="1703" fg:w="4"/><text x="39.3186%" y="671.50"></text></g><g><title>do_anonymous_page (4 samples, 0.09%)</title><rect x="39.0686%" y="645" width="0.0918%" height="15" fill="rgb(228,124,39)" fg:x="1703" fg:w="4"/><text x="39.3186%" y="655.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.02%)</title><rect x="39.1374%" y="629" width="0.0229%" height="15" fill="rgb(250,116,42)" fg:x="1706" fg:w="1"/><text x="39.3874%" y="639.50"></text></g><g><title>lru_cache_add (1 samples, 0.02%)</title><rect x="39.1374%" y="613" width="0.0229%" height="15" fill="rgb(223,202,9)" fg:x="1706" fg:w="1"/><text x="39.3874%" y="623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (23 samples, 0.53%)</title><rect x="38.7015%" y="885" width="0.5276%" height="15" fill="rgb(242,222,40)" fg:x="1687" fg:w="23"/><text x="38.9515%" y="895.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (23 samples, 0.53%)</title><rect x="38.7015%" y="869" width="0.5276%" height="15" fill="rgb(229,99,46)" fg:x="1687" fg:w="23"/><text x="38.9515%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23 samples, 0.53%)</title><rect x="38.7015%" y="853" width="0.5276%" height="15" fill="rgb(225,56,46)" fg:x="1687" fg:w="23"/><text x="38.9515%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (17 samples, 0.39%)</title><rect x="38.8392%" y="837" width="0.3900%" height="15" fill="rgb(227,94,5)" fg:x="1693" fg:w="17"/><text x="39.0892%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (16 samples, 0.37%)</title><rect x="38.8621%" y="821" width="0.3671%" height="15" fill="rgb(205,112,38)" fg:x="1694" fg:w="16"/><text x="39.1121%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (16 samples, 0.37%)</title><rect x="38.8621%" y="805" width="0.3671%" height="15" fill="rgb(231,133,46)" fg:x="1694" fg:w="16"/><text x="39.1121%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (16 samples, 0.37%)</title><rect x="38.8621%" y="789" width="0.3671%" height="15" fill="rgb(217,16,9)" fg:x="1694" fg:w="16"/><text x="39.1121%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (3 samples, 0.07%)</title><rect x="39.1604%" y="773" width="0.0688%" height="15" fill="rgb(249,173,9)" fg:x="1707" fg:w="3"/><text x="39.4104%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (3 samples, 0.07%)</title><rect x="39.1604%" y="757" width="0.0688%" height="15" fill="rgb(205,163,53)" fg:x="1707" fg:w="3"/><text x="39.4104%" y="767.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.05%)</title><rect x="39.1833%" y="741" width="0.0459%" height="15" fill="rgb(217,54,41)" fg:x="1708" fg:w="2"/><text x="39.4333%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.09%)</title><rect x="39.4127%" y="741" width="0.0918%" height="15" fill="rgb(228,216,12)" fg:x="1718" fg:w="4"/><text x="39.6627%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.09%)</title><rect x="39.4127%" y="725" width="0.0918%" height="15" fill="rgb(244,228,15)" fg:x="1718" fg:w="4"/><text x="39.6627%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.09%)</title><rect x="39.4127%" y="709" width="0.0918%" height="15" fill="rgb(221,176,53)" fg:x="1718" fg:w="4"/><text x="39.6627%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.09%)</title><rect x="39.4127%" y="693" width="0.0918%" height="15" fill="rgb(205,94,34)" fg:x="1718" fg:w="4"/><text x="39.6627%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.09%)</title><rect x="39.4127%" y="677" width="0.0918%" height="15" fill="rgb(213,110,48)" fg:x="1718" fg:w="4"/><text x="39.6627%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.09%)</title><rect x="39.4127%" y="661" width="0.0918%" height="15" fill="rgb(236,142,28)" fg:x="1718" fg:w="4"/><text x="39.6627%" y="671.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="39.4586%" y="645" width="0.0459%" height="15" fill="rgb(225,135,29)" fg:x="1720" fg:w="2"/><text x="39.7086%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.05%)</title><rect x="39.5045%" y="741" width="0.0459%" height="15" fill="rgb(252,45,31)" fg:x="1722" fg:w="2"/><text x="39.7545%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="39.5045%" y="725" width="0.0459%" height="15" fill="rgb(211,187,50)" fg:x="1722" fg:w="2"/><text x="39.7545%" y="735.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="39.5274%" y="709" width="0.0229%" height="15" fill="rgb(229,109,7)" fg:x="1723" fg:w="1"/><text x="39.7774%" y="719.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.02%)</title><rect x="39.5274%" y="693" width="0.0229%" height="15" fill="rgb(251,131,51)" fg:x="1723" fg:w="1"/><text x="39.7774%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="39.5274%" y="677" width="0.0229%" height="15" fill="rgb(251,180,35)" fg:x="1723" fg:w="1"/><text x="39.7774%" y="687.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="39.5274%" y="661" width="0.0229%" height="15" fill="rgb(211,46,32)" fg:x="1723" fg:w="1"/><text x="39.7774%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="39.5274%" y="645" width="0.0229%" height="15" fill="rgb(248,123,17)" fg:x="1723" fg:w="1"/><text x="39.7774%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.09%)</title><rect x="40.5368%" y="645" width="0.0918%" height="15" fill="rgb(227,141,18)" fg:x="1767" fg:w="4"/><text x="40.7868%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.09%)</title><rect x="40.5368%" y="629" width="0.0918%" height="15" fill="rgb(216,102,9)" fg:x="1767" fg:w="4"/><text x="40.7868%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.05%)</title><rect x="40.6286%" y="645" width="0.0459%" height="15" fill="rgb(253,47,13)" fg:x="1771" fg:w="2"/><text x="40.8786%" y="655.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.05%)</title><rect x="40.6286%" y="629" width="0.0459%" height="15" fill="rgb(226,93,23)" fg:x="1771" fg:w="2"/><text x="40.8786%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (55 samples, 1.26%)</title><rect x="39.5504%" y="741" width="1.2618%" height="15" fill="rgb(247,104,17)" fg:x="1724" fg:w="55"/><text x="39.8004%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (42 samples, 0.96%)</title><rect x="39.8486%" y="725" width="0.9635%" height="15" fill="rgb(233,203,26)" fg:x="1737" fg:w="42"/><text x="40.0986%" y="735.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.92%)</title><rect x="39.8945%" y="709" width="0.9176%" height="15" fill="rgb(244,98,49)" fg:x="1739" fg:w="40"/><text x="40.1445%" y="719.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (40 samples, 0.92%)</title><rect x="39.8945%" y="693" width="0.9176%" height="15" fill="rgb(235,134,22)" fg:x="1739" fg:w="40"/><text x="40.1445%" y="703.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (39 samples, 0.89%)</title><rect x="39.9174%" y="677" width="0.8947%" height="15" fill="rgb(221,70,32)" fg:x="1740" fg:w="39"/><text x="40.1674%" y="687.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (35 samples, 0.80%)</title><rect x="40.0092%" y="661" width="0.8029%" height="15" fill="rgb(238,15,50)" fg:x="1744" fg:w="35"/><text x="40.2592%" y="671.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (6 samples, 0.14%)</title><rect x="40.6745%" y="645" width="0.1376%" height="15" fill="rgb(215,221,48)" fg:x="1773" fg:w="6"/><text x="40.9245%" y="655.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.07%)</title><rect x="40.9956%" y="661" width="0.0688%" height="15" fill="rgb(236,73,3)" fg:x="1787" fg:w="3"/><text x="41.2456%" y="671.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.07%)</title><rect x="40.9956%" y="645" width="0.0688%" height="15" fill="rgb(250,107,11)" fg:x="1787" fg:w="3"/><text x="41.2456%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="41.0415%" y="629" width="0.0229%" height="15" fill="rgb(242,39,14)" fg:x="1789" fg:w="1"/><text x="41.2915%" y="639.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1 samples, 0.02%)</title><rect x="41.0645%" y="661" width="0.0229%" height="15" fill="rgb(248,164,37)" fg:x="1790" fg:w="1"/><text x="41.3145%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="41.0645%" y="645" width="0.0229%" height="15" fill="rgb(217,60,12)" fg:x="1790" fg:w="1"/><text x="41.3145%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="41.0645%" y="629" width="0.0229%" height="15" fill="rgb(240,125,29)" fg:x="1790" fg:w="1"/><text x="41.3145%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (79 samples, 1.81%)</title><rect x="39.3668%" y="789" width="1.8123%" height="15" fill="rgb(208,207,28)" fg:x="1716" fg:w="79"/><text x="39.6168%" y="799.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (79 samples, 1.81%)</title><rect x="39.3668%" y="773" width="1.8123%" height="15" fill="rgb(209,159,27)" fg:x="1716" fg:w="79"/><text x="39.6168%" y="783.50">c..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (79 samples, 1.81%)</title><rect x="39.3668%" y="757" width="1.8123%" height="15" fill="rgb(251,176,53)" fg:x="1716" fg:w="79"/><text x="39.6168%" y="767.50">y..</text></g><g><title>core::str::&lt;impl str&gt;::matches (16 samples, 0.37%)</title><rect x="40.8121%" y="741" width="0.3671%" height="15" fill="rgb(211,85,7)" fg:x="1779" fg:w="16"/><text x="41.0621%" y="751.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (16 samples, 0.37%)</title><rect x="40.8121%" y="725" width="0.3671%" height="15" fill="rgb(216,64,54)" fg:x="1779" fg:w="16"/><text x="41.0621%" y="735.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (16 samples, 0.37%)</title><rect x="40.8121%" y="709" width="0.3671%" height="15" fill="rgb(217,54,24)" fg:x="1779" fg:w="16"/><text x="41.0621%" y="719.50"></text></g><g><title>core::str::pattern::StrSearcher::new (16 samples, 0.37%)</title><rect x="40.8121%" y="693" width="0.3671%" height="15" fill="rgb(208,206,53)" fg:x="1779" fg:w="16"/><text x="41.0621%" y="703.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (8 samples, 0.18%)</title><rect x="40.9956%" y="677" width="0.1835%" height="15" fill="rgb(251,74,39)" fg:x="1787" fg:w="8"/><text x="41.2456%" y="687.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (4 samples, 0.09%)</title><rect x="41.0874%" y="661" width="0.0918%" height="15" fill="rgb(226,47,5)" fg:x="1791" fg:w="4"/><text x="41.3374%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 1.86%)</title><rect x="39.3668%" y="869" width="1.8582%" height="15" fill="rgb(234,111,33)" fg:x="1716" fg:w="81"/><text x="39.6168%" y="879.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (81 samples, 1.86%)</title><rect x="39.3668%" y="853" width="1.8582%" height="15" fill="rgb(251,14,10)" fg:x="1716" fg:w="81"/><text x="39.6168%" y="863.50">c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (81 samples, 1.86%)</title><rect x="39.3668%" y="837" width="1.8582%" height="15" fill="rgb(232,43,0)" fg:x="1716" fg:w="81"/><text x="39.6168%" y="847.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (81 samples, 1.86%)</title><rect x="39.3668%" y="821" width="1.8582%" height="15" fill="rgb(222,68,43)" fg:x="1716" fg:w="81"/><text x="39.6168%" y="831.50">c..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (81 samples, 1.86%)</title><rect x="39.3668%" y="805" width="1.8582%" height="15" fill="rgb(217,24,23)" fg:x="1716" fg:w="81"/><text x="39.6168%" y="815.50">c..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.05%)</title><rect x="41.1792%" y="789" width="0.0459%" height="15" fill="rgb(229,209,14)" fg:x="1795" fg:w="2"/><text x="41.4292%" y="799.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.02%)</title><rect x="41.3168%" y="853" width="0.0229%" height="15" fill="rgb(250,149,48)" fg:x="1801" fg:w="1"/><text x="41.5668%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.02%)</title><rect x="41.3168%" y="837" width="0.0229%" height="15" fill="rgb(210,120,37)" fg:x="1801" fg:w="1"/><text x="41.5668%" y="847.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.02%)</title><rect x="41.3168%" y="821" width="0.0229%" height="15" fill="rgb(210,21,8)" fg:x="1801" fg:w="1"/><text x="41.5668%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="41.3168%" y="805" width="0.0229%" height="15" fill="rgb(243,145,7)" fg:x="1801" fg:w="1"/><text x="41.5668%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="41.3168%" y="789" width="0.0229%" height="15" fill="rgb(238,178,32)" fg:x="1801" fg:w="1"/><text x="41.5668%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="41.3168%" y="773" width="0.0229%" height="15" fill="rgb(222,4,10)" fg:x="1801" fg:w="1"/><text x="41.5668%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="41.4545%" y="693" width="0.0229%" height="15" fill="rgb(239,7,37)" fg:x="1807" fg:w="1"/><text x="41.7045%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.07%)</title><rect x="41.4774%" y="661" width="0.0688%" height="15" fill="rgb(215,31,37)" fg:x="1808" fg:w="3"/><text x="41.7274%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (6 samples, 0.14%)</title><rect x="41.5462%" y="661" width="0.1376%" height="15" fill="rgb(224,83,33)" fg:x="1811" fg:w="6"/><text x="41.7962%" y="671.50"></text></g><g><title>_int_free (7 samples, 0.16%)</title><rect x="41.7756%" y="565" width="0.1606%" height="15" fill="rgb(239,55,3)" fg:x="1821" fg:w="7"/><text x="42.0256%" y="575.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="42.1656%" y="517" width="0.0229%" height="15" fill="rgb(247,92,11)" fg:x="1838" fg:w="1"/><text x="42.4156%" y="527.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="42.1656%" y="501" width="0.0229%" height="15" fill="rgb(239,200,7)" fg:x="1838" fg:w="1"/><text x="42.4156%" y="511.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="42.1656%" y="485" width="0.0229%" height="15" fill="rgb(227,115,8)" fg:x="1838" fg:w="1"/><text x="42.4156%" y="495.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="42.1656%" y="469" width="0.0229%" height="15" fill="rgb(215,189,27)" fg:x="1838" fg:w="1"/><text x="42.4156%" y="479.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="42.1656%" y="453" width="0.0229%" height="15" fill="rgb(251,216,39)" fg:x="1838" fg:w="1"/><text x="42.4156%" y="463.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="42.1656%" y="437" width="0.0229%" height="15" fill="rgb(207,29,47)" fg:x="1838" fg:w="1"/><text x="42.4156%" y="447.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="42.1656%" y="421" width="0.0229%" height="15" fill="rgb(210,71,34)" fg:x="1838" fg:w="1"/><text x="42.4156%" y="431.50"></text></g><g><title>clear_page_rep (1 samples, 0.02%)</title><rect x="42.1656%" y="405" width="0.0229%" height="15" fill="rgb(253,217,51)" fg:x="1838" fg:w="1"/><text x="42.4156%" y="415.50"></text></g><g><title>__GI___libc_realloc (23 samples, 0.53%)</title><rect x="41.6839%" y="597" width="0.5276%" height="15" fill="rgb(222,117,46)" fg:x="1817" fg:w="23"/><text x="41.9339%" y="607.50"></text></g><g><title>_int_realloc (21 samples, 0.48%)</title><rect x="41.7298%" y="581" width="0.4818%" height="15" fill="rgb(226,132,6)" fg:x="1819" fg:w="21"/><text x="41.9798%" y="591.50"></text></g><g><title>_int_malloc (12 samples, 0.28%)</title><rect x="41.9362%" y="565" width="0.2753%" height="15" fill="rgb(254,145,51)" fg:x="1828" fg:w="12"/><text x="42.1862%" y="575.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.05%)</title><rect x="42.1656%" y="549" width="0.0459%" height="15" fill="rgb(231,199,27)" fg:x="1838" fg:w="2"/><text x="42.4156%" y="559.50"></text></g><g><title>exc_page_fault (2 samples, 0.05%)</title><rect x="42.1656%" y="533" width="0.0459%" height="15" fill="rgb(245,158,14)" fg:x="1838" fg:w="2"/><text x="42.4156%" y="543.50"></text></g><g><title>irqentry_exit (1 samples, 0.02%)</title><rect x="42.1886%" y="517" width="0.0229%" height="15" fill="rgb(240,113,14)" fg:x="1839" fg:w="1"/><text x="42.4386%" y="527.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.02%)</title><rect x="42.1886%" y="501" width="0.0229%" height="15" fill="rgb(210,20,13)" fg:x="1839" fg:w="1"/><text x="42.4386%" y="511.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="42.1886%" y="485" width="0.0229%" height="15" fill="rgb(241,144,13)" fg:x="1839" fg:w="1"/><text x="42.4386%" y="495.50"></text></g><g><title>fpregs_assert_state_consistent (1 samples, 0.02%)</title><rect x="42.1886%" y="469" width="0.0229%" height="15" fill="rgb(235,43,34)" fg:x="1839" fg:w="1"/><text x="42.4386%" y="479.50"></text></g><g><title>__rdl_realloc (1 samples, 0.02%)</title><rect x="42.2115%" y="597" width="0.0229%" height="15" fill="rgb(208,36,20)" fg:x="1840" fg:w="1"/><text x="42.4615%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (26 samples, 0.60%)</title><rect x="41.6839%" y="645" width="0.5965%" height="15" fill="rgb(239,204,10)" fg:x="1817" fg:w="26"/><text x="41.9339%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (26 samples, 0.60%)</title><rect x="41.6839%" y="629" width="0.5965%" height="15" fill="rgb(217,84,43)" fg:x="1817" fg:w="26"/><text x="41.9339%" y="639.50"></text></g><g><title>alloc::alloc::realloc (26 samples, 0.60%)</title><rect x="41.6839%" y="613" width="0.5965%" height="15" fill="rgb(241,170,50)" fg:x="1817" fg:w="26"/><text x="41.9339%" y="623.50"></text></g><g><title>__rust_realloc (2 samples, 0.05%)</title><rect x="42.2345%" y="597" width="0.0459%" height="15" fill="rgb(226,205,29)" fg:x="1841" fg:w="2"/><text x="42.4845%" y="607.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.09%)</title><rect x="42.2803%" y="645" width="0.0918%" height="15" fill="rgb(233,113,1)" fg:x="1843" fg:w="4"/><text x="42.5303%" y="655.50"></text></g><g><title>__rdl_alloc (5 samples, 0.11%)</title><rect x="42.3721%" y="645" width="0.1147%" height="15" fill="rgb(253,98,13)" fg:x="1847" fg:w="5"/><text x="42.6221%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.11%)</title><rect x="42.3721%" y="629" width="0.1147%" height="15" fill="rgb(211,115,12)" fg:x="1847" fg:w="5"/><text x="42.6221%" y="639.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="42.4868%" y="645" width="0.0229%" height="15" fill="rgb(208,12,16)" fg:x="1852" fg:w="1"/><text x="42.7368%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (37 samples, 0.85%)</title><rect x="41.6839%" y="661" width="0.8488%" height="15" fill="rgb(237,193,54)" fg:x="1817" fg:w="37"/><text x="41.9339%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="42.5097%" y="645" width="0.0229%" height="15" fill="rgb(243,22,42)" fg:x="1853" fg:w="1"/><text x="42.7597%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (49 samples, 1.12%)</title><rect x="41.4315%" y="725" width="1.1241%" height="15" fill="rgb(233,151,36)" fg:x="1806" fg:w="49"/><text x="41.6815%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (48 samples, 1.10%)</title><rect x="41.4545%" y="709" width="1.1012%" height="15" fill="rgb(237,57,45)" fg:x="1807" fg:w="48"/><text x="41.7045%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (47 samples, 1.08%)</title><rect x="41.4774%" y="693" width="1.0782%" height="15" fill="rgb(221,88,17)" fg:x="1808" fg:w="47"/><text x="41.7274%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (47 samples, 1.08%)</title><rect x="41.4774%" y="677" width="1.0782%" height="15" fill="rgb(230,79,15)" fg:x="1808" fg:w="47"/><text x="41.7274%" y="687.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="42.5327%" y="661" width="0.0229%" height="15" fill="rgb(213,57,13)" fg:x="1854" fg:w="1"/><text x="42.7827%" y="671.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="42.5327%" y="645" width="0.0229%" height="15" fill="rgb(222,116,39)" fg:x="1854" fg:w="1"/><text x="42.7827%" y="655.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="42.5327%" y="629" width="0.0229%" height="15" fill="rgb(245,107,2)" fg:x="1854" fg:w="1"/><text x="42.7827%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (52 samples, 1.19%)</title><rect x="41.4086%" y="821" width="1.1929%" height="15" fill="rgb(238,1,10)" fg:x="1805" fg:w="52"/><text x="41.6586%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (52 samples, 1.19%)</title><rect x="41.4086%" y="805" width="1.1929%" height="15" fill="rgb(249,4,48)" fg:x="1805" fg:w="52"/><text x="41.6586%" y="815.50"></text></g><g><title>alloc::string::String::push_str (52 samples, 1.19%)</title><rect x="41.4086%" y="789" width="1.1929%" height="15" fill="rgb(223,151,18)" fg:x="1805" fg:w="52"/><text x="41.6586%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (52 samples, 1.19%)</title><rect x="41.4086%" y="773" width="1.1929%" height="15" fill="rgb(227,65,43)" fg:x="1805" fg:w="52"/><text x="41.6586%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (52 samples, 1.19%)</title><rect x="41.4086%" y="757" width="1.1929%" height="15" fill="rgb(218,40,45)" fg:x="1805" fg:w="52"/><text x="41.6586%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (52 samples, 1.19%)</title><rect x="41.4086%" y="741" width="1.1929%" height="15" fill="rgb(252,121,31)" fg:x="1805" fg:w="52"/><text x="41.6586%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.05%)</title><rect x="42.5556%" y="725" width="0.0459%" height="15" fill="rgb(219,158,43)" fg:x="1855" fg:w="2"/><text x="42.8056%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.05%)</title><rect x="42.5556%" y="709" width="0.0459%" height="15" fill="rgb(231,162,42)" fg:x="1855" fg:w="2"/><text x="42.8056%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="42.6015%" y="821" width="0.0688%" height="15" fill="rgb(217,179,25)" fg:x="1857" fg:w="3"/><text x="42.8515%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="42.6015%" y="805" width="0.0688%" height="15" fill="rgb(206,212,31)" fg:x="1857" fg:w="3"/><text x="42.8515%" y="815.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="42.6703%" y="821" width="0.0229%" height="15" fill="rgb(235,144,12)" fg:x="1860" fg:w="1"/><text x="42.9203%" y="831.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.02%)</title><rect x="42.6933%" y="821" width="0.0229%" height="15" fill="rgb(213,51,10)" fg:x="1861" fg:w="1"/><text x="42.9433%" y="831.50"></text></g><g><title>alloc::fmt::format (66 samples, 1.51%)</title><rect x="41.2251%" y="869" width="1.5141%" height="15" fill="rgb(231,145,14)" fg:x="1797" fg:w="66"/><text x="41.4751%" y="879.50"></text></g><g><title>core::fmt::Write::write_fmt (61 samples, 1.40%)</title><rect x="41.3398%" y="853" width="1.3994%" height="15" fill="rgb(235,15,28)" fg:x="1802" fg:w="61"/><text x="41.5898%" y="863.50"></text></g><g><title>core::fmt::write (61 samples, 1.40%)</title><rect x="41.3398%" y="837" width="1.3994%" height="15" fill="rgb(237,206,10)" fg:x="1802" fg:w="61"/><text x="41.5898%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="42.7162%" y="821" width="0.0229%" height="15" fill="rgb(236,227,27)" fg:x="1862" fg:w="1"/><text x="42.9662%" y="831.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="42.7162%" y="805" width="0.0229%" height="15" fill="rgb(246,83,35)" fg:x="1862" fg:w="1"/><text x="42.9662%" y="815.50"></text></g><g><title>core::fmt::Arguments::new_v1 (2 samples, 0.05%)</title><rect x="42.7392%" y="869" width="0.0459%" height="15" fill="rgb(220,136,24)" fg:x="1863" fg:w="2"/><text x="42.9892%" y="879.50"></text></g><g><title>__GI___libc_free (2 samples, 0.05%)</title><rect x="42.7850%" y="773" width="0.0459%" height="15" fill="rgb(217,3,25)" fg:x="1865" fg:w="2"/><text x="43.0350%" y="783.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="42.8309%" y="773" width="0.0229%" height="15" fill="rgb(239,24,14)" fg:x="1867" fg:w="1"/><text x="43.0809%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.11%)</title><rect x="42.7850%" y="869" width="0.1147%" height="15" fill="rgb(244,16,53)" fg:x="1865" fg:w="5"/><text x="43.0350%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.11%)</title><rect x="42.7850%" y="853" width="0.1147%" height="15" fill="rgb(208,175,44)" fg:x="1865" fg:w="5"/><text x="43.0350%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.11%)</title><rect x="42.7850%" y="837" width="0.1147%" height="15" fill="rgb(252,18,48)" fg:x="1865" fg:w="5"/><text x="43.0350%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="42.7850%" y="821" width="0.1147%" height="15" fill="rgb(234,199,32)" fg:x="1865" fg:w="5"/><text x="43.0350%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.11%)</title><rect x="42.7850%" y="805" width="0.1147%" height="15" fill="rgb(225,77,54)" fg:x="1865" fg:w="5"/><text x="43.0350%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.11%)</title><rect x="42.7850%" y="789" width="0.1147%" height="15" fill="rgb(225,42,25)" fg:x="1865" fg:w="5"/><text x="43.0350%" y="799.50"></text></g><g><title>_int_free (2 samples, 0.05%)</title><rect x="42.8539%" y="773" width="0.0459%" height="15" fill="rgb(242,227,46)" fg:x="1868" fg:w="2"/><text x="43.1039%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="42.9456%" y="741" width="0.0229%" height="15" fill="rgb(246,197,35)" fg:x="1872" fg:w="1"/><text x="43.1956%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="42.9227%" y="805" width="0.0688%" height="15" fill="rgb(215,159,26)" fg:x="1871" fg:w="3"/><text x="43.1727%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="42.9227%" y="789" width="0.0688%" height="15" fill="rgb(212,194,50)" fg:x="1871" fg:w="3"/><text x="43.1727%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="42.9227%" y="773" width="0.0688%" height="15" fill="rgb(246,132,1)" fg:x="1871" fg:w="3"/><text x="43.1727%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.05%)</title><rect x="42.9456%" y="757" width="0.0459%" height="15" fill="rgb(217,71,7)" fg:x="1872" fg:w="2"/><text x="43.1956%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="42.9686%" y="741" width="0.0229%" height="15" fill="rgb(252,59,32)" fg:x="1873" fg:w="1"/><text x="43.2186%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.14%)</title><rect x="42.8997%" y="821" width="0.1376%" height="15" fill="rgb(253,204,25)" fg:x="1870" fg:w="6"/><text x="43.1497%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.05%)</title><rect x="42.9915%" y="805" width="0.0459%" height="15" fill="rgb(232,21,16)" fg:x="1874" fg:w="2"/><text x="43.2415%" y="815.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.05%)</title><rect x="42.9915%" y="789" width="0.0459%" height="15" fill="rgb(248,90,29)" fg:x="1874" fg:w="2"/><text x="43.2415%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="42.9915%" y="773" width="0.0459%" height="15" fill="rgb(249,223,7)" fg:x="1874" fg:w="2"/><text x="43.2415%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="42.9915%" y="757" width="0.0459%" height="15" fill="rgb(231,119,42)" fg:x="1874" fg:w="2"/><text x="43.2415%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="42.9915%" y="741" width="0.0459%" height="15" fill="rgb(215,41,35)" fg:x="1874" fg:w="2"/><text x="43.2415%" y="751.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="43.0145%" y="725" width="0.0229%" height="15" fill="rgb(220,44,45)" fg:x="1875" fg:w="1"/><text x="43.2645%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="43.0374%" y="789" width="0.0229%" height="15" fill="rgb(253,197,36)" fg:x="1876" fg:w="1"/><text x="43.2874%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="43.0374%" y="773" width="0.0229%" height="15" fill="rgb(245,225,54)" fg:x="1876" fg:w="1"/><text x="43.2874%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="43.0374%" y="757" width="0.0229%" height="15" fill="rgb(239,94,37)" fg:x="1876" fg:w="1"/><text x="43.2874%" y="767.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="43.0374%" y="741" width="0.0229%" height="15" fill="rgb(242,217,10)" fg:x="1876" fg:w="1"/><text x="43.2874%" y="751.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.09%)</title><rect x="43.0603%" y="789" width="0.0918%" height="15" fill="rgb(250,193,7)" fg:x="1877" fg:w="4"/><text x="43.3103%" y="799.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.09%)</title><rect x="43.0603%" y="773" width="0.0918%" height="15" fill="rgb(230,104,19)" fg:x="1877" fg:w="4"/><text x="43.3103%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.09%)</title><rect x="43.0603%" y="757" width="0.0918%" height="15" fill="rgb(230,181,4)" fg:x="1877" fg:w="4"/><text x="43.3103%" y="767.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.09%)</title><rect x="43.0603%" y="741" width="0.0918%" height="15" fill="rgb(216,219,49)" fg:x="1877" fg:w="4"/><text x="43.3103%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.09%)</title><rect x="43.0603%" y="725" width="0.0918%" height="15" fill="rgb(254,144,0)" fg:x="1877" fg:w="4"/><text x="43.3103%" y="735.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="43.1292%" y="709" width="0.0229%" height="15" fill="rgb(205,209,38)" fg:x="1880" fg:w="1"/><text x="43.3792%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (13 samples, 0.30%)</title><rect x="42.8997%" y="869" width="0.2982%" height="15" fill="rgb(240,21,42)" fg:x="1870" fg:w="13"/><text x="43.1497%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (13 samples, 0.30%)</title><rect x="42.8997%" y="853" width="0.2982%" height="15" fill="rgb(241,132,3)" fg:x="1870" fg:w="13"/><text x="43.1497%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 0.30%)</title><rect x="42.8997%" y="837" width="0.2982%" height="15" fill="rgb(225,14,2)" fg:x="1870" fg:w="13"/><text x="43.1497%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 0.16%)</title><rect x="43.0374%" y="821" width="0.1606%" height="15" fill="rgb(210,141,35)" fg:x="1876" fg:w="7"/><text x="43.2874%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.16%)</title><rect x="43.0374%" y="805" width="0.1606%" height="15" fill="rgb(251,14,44)" fg:x="1876" fg:w="7"/><text x="43.2874%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="43.1521%" y="789" width="0.0459%" height="15" fill="rgb(247,48,18)" fg:x="1881" fg:w="2"/><text x="43.4021%" y="799.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="43.1521%" y="773" width="0.0459%" height="15" fill="rgb(225,0,40)" fg:x="1881" fg:w="2"/><text x="43.4021%" y="783.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.05%)</title><rect x="43.1521%" y="757" width="0.0459%" height="15" fill="rgb(221,31,33)" fg:x="1881" fg:w="2"/><text x="43.4021%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.05%)</title><rect x="43.1521%" y="741" width="0.0459%" height="15" fill="rgb(237,42,40)" fg:x="1881" fg:w="2"/><text x="43.4021%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.05%)</title><rect x="43.1521%" y="725" width="0.0459%" height="15" fill="rgb(233,51,29)" fg:x="1881" fg:w="2"/><text x="43.4021%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.05%)</title><rect x="43.1521%" y="709" width="0.0459%" height="15" fill="rgb(226,58,20)" fg:x="1881" fg:w="2"/><text x="43.4021%" y="719.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.05%)</title><rect x="43.1521%" y="693" width="0.0459%" height="15" fill="rgb(208,98,7)" fg:x="1881" fg:w="2"/><text x="43.4021%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="43.4045%" y="693" width="0.0688%" height="15" fill="rgb(228,143,44)" fg:x="1892" fg:w="3"/><text x="43.6545%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.16%)</title><rect x="43.3356%" y="709" width="0.1606%" height="15" fill="rgb(246,55,38)" fg:x="1889" fg:w="7"/><text x="43.5856%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="43.4733%" y="693" width="0.0229%" height="15" fill="rgb(247,87,16)" fg:x="1895" fg:w="1"/><text x="43.7233%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.30%)</title><rect x="43.2439%" y="757" width="0.2982%" height="15" fill="rgb(234,129,42)" fg:x="1885" fg:w="13"/><text x="43.4939%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.30%)</title><rect x="43.2439%" y="741" width="0.2982%" height="15" fill="rgb(220,82,16)" fg:x="1885" fg:w="13"/><text x="43.4939%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.30%)</title><rect x="43.2439%" y="725" width="0.2982%" height="15" fill="rgb(211,88,4)" fg:x="1885" fg:w="13"/><text x="43.4939%" y="735.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="43.4962%" y="709" width="0.0459%" height="15" fill="rgb(248,151,21)" fg:x="1896" fg:w="2"/><text x="43.7462%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="43.5192%" y="693" width="0.0229%" height="15" fill="rgb(238,163,6)" fg:x="1897" fg:w="1"/><text x="43.7692%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (15 samples, 0.34%)</title><rect x="43.2439%" y="789" width="0.3441%" height="15" fill="rgb(209,183,11)" fg:x="1885" fg:w="15"/><text x="43.4939%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (15 samples, 0.34%)</title><rect x="43.2439%" y="773" width="0.3441%" height="15" fill="rgb(219,37,20)" fg:x="1885" fg:w="15"/><text x="43.4939%" y="783.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.05%)</title><rect x="43.5421%" y="757" width="0.0459%" height="15" fill="rgb(210,158,4)" fg:x="1898" fg:w="2"/><text x="43.7921%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="43.5421%" y="741" width="0.0459%" height="15" fill="rgb(221,167,53)" fg:x="1898" fg:w="2"/><text x="43.7921%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="43.5421%" y="725" width="0.0459%" height="15" fill="rgb(237,151,45)" fg:x="1898" fg:w="2"/><text x="43.7921%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="43.5421%" y="709" width="0.0459%" height="15" fill="rgb(231,39,3)" fg:x="1898" fg:w="2"/><text x="43.7921%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.16%)</title><rect x="43.5880%" y="789" width="0.1606%" height="15" fill="rgb(212,167,28)" fg:x="1900" fg:w="7"/><text x="43.8380%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.16%)</title><rect x="43.5880%" y="773" width="0.1606%" height="15" fill="rgb(232,178,8)" fg:x="1900" fg:w="7"/><text x="43.8380%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.16%)</title><rect x="43.5880%" y="757" width="0.1606%" height="15" fill="rgb(225,151,20)" fg:x="1900" fg:w="7"/><text x="43.8380%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.07%)</title><rect x="43.6797%" y="741" width="0.0688%" height="15" fill="rgb(238,3,37)" fg:x="1904" fg:w="3"/><text x="43.9297%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="43.6797%" y="725" width="0.0688%" height="15" fill="rgb(251,147,42)" fg:x="1904" fg:w="3"/><text x="43.9297%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (29 samples, 0.67%)</title><rect x="43.1980%" y="805" width="0.6653%" height="15" fill="rgb(208,173,10)" fg:x="1883" fg:w="29"/><text x="43.4480%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.11%)</title><rect x="43.7486%" y="789" width="0.1147%" height="15" fill="rgb(246,225,4)" fg:x="1907" fg:w="5"/><text x="43.9986%" y="799.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.07%)</title><rect x="43.7944%" y="773" width="0.0688%" height="15" fill="rgb(248,102,6)" fg:x="1909" fg:w="3"/><text x="44.0444%" y="783.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="43.8403%" y="757" width="0.0229%" height="15" fill="rgb(232,6,21)" fg:x="1911" fg:w="1"/><text x="44.0903%" y="767.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="43.8403%" y="741" width="0.0229%" height="15" fill="rgb(221,179,22)" fg:x="1911" fg:w="1"/><text x="44.0903%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.09%)</title><rect x="43.9321%" y="741" width="0.0918%" height="15" fill="rgb(252,50,20)" fg:x="1915" fg:w="4"/><text x="44.1821%" y="751.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.09%)</title><rect x="43.9321%" y="725" width="0.0918%" height="15" fill="rgb(222,56,38)" fg:x="1915" fg:w="4"/><text x="44.1821%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.16%)</title><rect x="43.8862%" y="773" width="0.1606%" height="15" fill="rgb(206,193,29)" fg:x="1913" fg:w="7"/><text x="44.1362%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.14%)</title><rect x="43.9092%" y="757" width="0.1376%" height="15" fill="rgb(239,192,45)" fg:x="1914" fg:w="6"/><text x="44.1592%" y="767.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::any_bit_set (1 samples, 0.02%)</title><rect x="44.0239%" y="741" width="0.0229%" height="15" fill="rgb(254,18,36)" fg:x="1919" fg:w="1"/><text x="44.2739%" y="751.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.11%)</title><rect x="44.0468%" y="773" width="0.1147%" height="15" fill="rgb(221,127,11)" fg:x="1920" fg:w="5"/><text x="44.2968%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (5 samples, 0.11%)</title><rect x="44.0468%" y="757" width="0.1147%" height="15" fill="rgb(234,146,35)" fg:x="1920" fg:w="5"/><text x="44.2968%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.11%)</title><rect x="44.0468%" y="741" width="0.1147%" height="15" fill="rgb(254,201,37)" fg:x="1920" fg:w="5"/><text x="44.2968%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.11%)</title><rect x="44.0468%" y="725" width="0.1147%" height="15" fill="rgb(211,202,23)" fg:x="1920" fg:w="5"/><text x="44.2968%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.11%)</title><rect x="44.0468%" y="709" width="0.1147%" height="15" fill="rgb(237,91,2)" fg:x="1920" fg:w="5"/><text x="44.2968%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.11%)</title><rect x="44.0468%" y="693" width="0.1147%" height="15" fill="rgb(226,228,36)" fg:x="1920" fg:w="5"/><text x="44.2968%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="44.1156%" y="677" width="0.0459%" height="15" fill="rgb(213,63,50)" fg:x="1923" fg:w="2"/><text x="44.3656%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (44 samples, 1.01%)</title><rect x="43.1980%" y="869" width="1.0094%" height="15" fill="rgb(235,194,19)" fg:x="1883" fg:w="44"/><text x="43.4480%" y="879.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (44 samples, 1.01%)</title><rect x="43.1980%" y="853" width="1.0094%" height="15" fill="rgb(207,204,18)" fg:x="1883" fg:w="44"/><text x="43.4480%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (44 samples, 1.01%)</title><rect x="43.1980%" y="837" width="1.0094%" height="15" fill="rgb(248,8,7)" fg:x="1883" fg:w="44"/><text x="43.4480%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (44 samples, 1.01%)</title><rect x="43.1980%" y="821" width="1.0094%" height="15" fill="rgb(223,145,47)" fg:x="1883" fg:w="44"/><text x="43.4480%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.34%)</title><rect x="43.8633%" y="805" width="0.3441%" height="15" fill="rgb(228,84,11)" fg:x="1912" fg:w="15"/><text x="44.1133%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.34%)</title><rect x="43.8633%" y="789" width="0.3441%" height="15" fill="rgb(218,76,45)" fg:x="1912" fg:w="15"/><text x="44.1133%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="44.1615%" y="773" width="0.0459%" height="15" fill="rgb(223,80,15)" fg:x="1925" fg:w="2"/><text x="44.4115%" y="783.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="44.1615%" y="757" width="0.0459%" height="15" fill="rgb(219,218,33)" fg:x="1925" fg:w="2"/><text x="44.4115%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.05%)</title><rect x="44.1615%" y="741" width="0.0459%" height="15" fill="rgb(208,51,11)" fg:x="1925" fg:w="2"/><text x="44.4115%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.05%)</title><rect x="44.1615%" y="725" width="0.0459%" height="15" fill="rgb(229,165,39)" fg:x="1925" fg:w="2"/><text x="44.4115%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.05%)</title><rect x="44.1615%" y="709" width="0.0459%" height="15" fill="rgb(241,100,24)" fg:x="1925" fg:w="2"/><text x="44.4115%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.05%)</title><rect x="44.1615%" y="693" width="0.0459%" height="15" fill="rgb(228,14,23)" fg:x="1925" fg:w="2"/><text x="44.4115%" y="703.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.05%)</title><rect x="44.1615%" y="677" width="0.0459%" height="15" fill="rgb(247,116,52)" fg:x="1925" fg:w="2"/><text x="44.4115%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="44.2074%" y="773" width="0.0459%" height="15" fill="rgb(216,149,33)" fg:x="1927" fg:w="2"/><text x="44.4574%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="44.2074%" y="757" width="0.0459%" height="15" fill="rgb(238,142,29)" fg:x="1927" fg:w="2"/><text x="44.4574%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="44.2074%" y="741" width="0.0459%" height="15" fill="rgb(224,83,40)" fg:x="1927" fg:w="2"/><text x="44.4574%" y="751.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="44.2303%" y="725" width="0.0229%" height="15" fill="rgb(234,165,11)" fg:x="1928" fg:w="1"/><text x="44.4803%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (3 samples, 0.07%)</title><rect x="44.2074%" y="805" width="0.0688%" height="15" fill="rgb(215,96,23)" fg:x="1927" fg:w="3"/><text x="44.4574%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.07%)</title><rect x="44.2074%" y="789" width="0.0688%" height="15" fill="rgb(233,179,26)" fg:x="1927" fg:w="3"/><text x="44.4574%" y="799.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="44.2533%" y="773" width="0.0229%" height="15" fill="rgb(225,129,33)" fg:x="1929" fg:w="1"/><text x="44.5033%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="44.2533%" y="757" width="0.0229%" height="15" fill="rgb(237,49,13)" fg:x="1929" fg:w="1"/><text x="44.5033%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="44.2533%" y="741" width="0.0229%" height="15" fill="rgb(211,3,31)" fg:x="1929" fg:w="1"/><text x="44.5033%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="44.2533%" y="725" width="0.0229%" height="15" fill="rgb(216,152,19)" fg:x="1929" fg:w="1"/><text x="44.5033%" y="735.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="44.2533%" y="709" width="0.0229%" height="15" fill="rgb(251,121,35)" fg:x="1929" fg:w="1"/><text x="44.5033%" y="719.50"></text></g><g><title>hashbrown::map::make_insert_hash (5 samples, 0.11%)</title><rect x="44.2074%" y="821" width="0.1147%" height="15" fill="rgb(210,217,47)" fg:x="1927" fg:w="5"/><text x="44.4574%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="44.2762%" y="805" width="0.0459%" height="15" fill="rgb(244,116,22)" fg:x="1930" fg:w="2"/><text x="44.5262%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="44.2762%" y="789" width="0.0459%" height="15" fill="rgb(228,17,21)" fg:x="1930" fg:w="2"/><text x="44.5262%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="44.2762%" y="773" width="0.0459%" height="15" fill="rgb(240,149,34)" fg:x="1930" fg:w="2"/><text x="44.5262%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="44.2992%" y="757" width="0.0229%" height="15" fill="rgb(208,125,47)" fg:x="1931" fg:w="1"/><text x="44.5492%" y="767.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="44.3221%" y="789" width="0.0229%" height="15" fill="rgb(249,186,39)" fg:x="1932" fg:w="1"/><text x="44.5721%" y="799.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (7 samples, 0.16%)</title><rect x="44.2074%" y="869" width="0.1606%" height="15" fill="rgb(240,220,33)" fg:x="1927" fg:w="7"/><text x="44.4574%" y="879.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (7 samples, 0.16%)</title><rect x="44.2074%" y="853" width="0.1606%" height="15" fill="rgb(243,110,23)" fg:x="1927" fg:w="7"/><text x="44.4574%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.16%)</title><rect x="44.2074%" y="837" width="0.1606%" height="15" fill="rgb(219,163,46)" fg:x="1927" fg:w="7"/><text x="44.4574%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.05%)</title><rect x="44.3221%" y="821" width="0.0459%" height="15" fill="rgb(216,126,30)" fg:x="1932" fg:w="2"/><text x="44.5721%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.05%)</title><rect x="44.3221%" y="805" width="0.0459%" height="15" fill="rgb(208,139,11)" fg:x="1932" fg:w="2"/><text x="44.5721%" y="815.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.02%)</title><rect x="44.3450%" y="789" width="0.0229%" height="15" fill="rgb(213,118,36)" fg:x="1933" fg:w="1"/><text x="44.5950%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="44.5515%" y="789" width="0.0229%" height="15" fill="rgb(226,43,17)" fg:x="1942" fg:w="1"/><text x="44.8015%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="44.5515%" y="773" width="0.0229%" height="15" fill="rgb(254,217,4)" fg:x="1942" fg:w="1"/><text x="44.8015%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="44.5515%" y="757" width="0.0229%" height="15" fill="rgb(210,134,47)" fg:x="1942" fg:w="1"/><text x="44.8015%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.07%)</title><rect x="44.5744%" y="725" width="0.0688%" height="15" fill="rgb(237,24,49)" fg:x="1943" fg:w="3"/><text x="44.8244%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.07%)</title><rect x="44.5744%" y="709" width="0.0688%" height="15" fill="rgb(251,39,46)" fg:x="1943" fg:w="3"/><text x="44.8244%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.07%)</title><rect x="44.5744%" y="693" width="0.0688%" height="15" fill="rgb(251,220,3)" fg:x="1943" fg:w="3"/><text x="44.8244%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.07%)</title><rect x="44.5744%" y="677" width="0.0688%" height="15" fill="rgb(228,105,12)" fg:x="1943" fg:w="3"/><text x="44.8244%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.07%)</title><rect x="44.5744%" y="661" width="0.0688%" height="15" fill="rgb(215,196,1)" fg:x="1943" fg:w="3"/><text x="44.8244%" y="671.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.07%)</title><rect x="44.5744%" y="645" width="0.0688%" height="15" fill="rgb(214,33,39)" fg:x="1943" fg:w="3"/><text x="44.8244%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="44.6203%" y="629" width="0.0229%" height="15" fill="rgb(220,19,52)" fg:x="1945" fg:w="1"/><text x="44.8703%" y="639.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="44.6203%" y="613" width="0.0229%" height="15" fill="rgb(221,78,38)" fg:x="1945" fg:w="1"/><text x="44.8703%" y="623.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="44.6203%" y="597" width="0.0229%" height="15" fill="rgb(253,30,16)" fg:x="1945" fg:w="1"/><text x="44.8703%" y="607.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="44.6203%" y="581" width="0.0229%" height="15" fill="rgb(242,65,0)" fg:x="1945" fg:w="1"/><text x="44.8703%" y="591.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="44.6203%" y="565" width="0.0229%" height="15" fill="rgb(235,201,12)" fg:x="1945" fg:w="1"/><text x="44.8703%" y="575.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="44.6203%" y="549" width="0.0229%" height="15" fill="rgb(233,161,9)" fg:x="1945" fg:w="1"/><text x="44.8703%" y="559.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="44.6203%" y="533" width="0.0229%" height="15" fill="rgb(241,207,41)" fg:x="1945" fg:w="1"/><text x="44.8703%" y="543.50"></text></g><g><title>tick_sched_handle.isra.0 (1 samples, 0.02%)</title><rect x="44.6203%" y="517" width="0.0229%" height="15" fill="rgb(212,69,46)" fg:x="1945" fg:w="1"/><text x="44.8703%" y="527.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="44.6203%" y="501" width="0.0229%" height="15" fill="rgb(239,69,45)" fg:x="1945" fg:w="1"/><text x="44.8703%" y="511.50"></text></g><g><title>rcu_segcblist_ready_cbs (1 samples, 0.02%)</title><rect x="44.6203%" y="485" width="0.0229%" height="15" fill="rgb(242,117,48)" fg:x="1945" fg:w="1"/><text x="44.8703%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.05%)</title><rect x="44.6433%" y="725" width="0.0459%" height="15" fill="rgb(228,41,36)" fg:x="1946" fg:w="2"/><text x="44.8933%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="44.6433%" y="709" width="0.0459%" height="15" fill="rgb(212,3,32)" fg:x="1946" fg:w="2"/><text x="44.8933%" y="719.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="44.6433%" y="693" width="0.0459%" height="15" fill="rgb(233,41,49)" fg:x="1946" fg:w="2"/><text x="44.8933%" y="703.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.05%)</title><rect x="44.6433%" y="677" width="0.0459%" height="15" fill="rgb(252,170,49)" fg:x="1946" fg:w="2"/><text x="44.8933%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="44.6662%" y="661" width="0.0229%" height="15" fill="rgb(229,53,26)" fg:x="1947" fg:w="1"/><text x="44.9162%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.16%)</title><rect x="46.0886%" y="629" width="0.1606%" height="15" fill="rgb(217,157,12)" fg:x="2009" fg:w="7"/><text x="46.3386%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.16%)</title><rect x="46.0886%" y="613" width="0.1606%" height="15" fill="rgb(227,17,9)" fg:x="2009" fg:w="7"/><text x="46.3386%" y="623.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.05%)</title><rect x="46.2033%" y="597" width="0.0459%" height="15" fill="rgb(218,84,12)" fg:x="2014" fg:w="2"/><text x="46.4533%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.05%)</title><rect x="46.2033%" y="581" width="0.0459%" height="15" fill="rgb(212,79,24)" fg:x="2014" fg:w="2"/><text x="46.4533%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (83 samples, 1.90%)</title><rect x="44.6891%" y="725" width="1.9041%" height="15" fill="rgb(217,222,37)" fg:x="1948" fg:w="83"/><text x="44.9391%" y="735.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (64 samples, 1.47%)</title><rect x="45.1250%" y="709" width="1.4682%" height="15" fill="rgb(246,208,8)" fg:x="1967" fg:w="64"/><text x="45.3750%" y="719.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 1.40%)</title><rect x="45.1939%" y="693" width="1.3994%" height="15" fill="rgb(244,133,10)" fg:x="1970" fg:w="61"/><text x="45.4439%" y="703.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (61 samples, 1.40%)</title><rect x="45.1939%" y="677" width="1.3994%" height="15" fill="rgb(209,219,41)" fg:x="1970" fg:w="61"/><text x="45.4439%" y="687.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (61 samples, 1.40%)</title><rect x="45.1939%" y="661" width="1.3994%" height="15" fill="rgb(253,175,45)" fg:x="1970" fg:w="61"/><text x="45.4439%" y="671.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (54 samples, 1.24%)</title><rect x="45.3544%" y="645" width="1.2388%" height="15" fill="rgb(235,100,37)" fg:x="1977" fg:w="54"/><text x="45.6044%" y="655.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (15 samples, 0.34%)</title><rect x="46.2491%" y="629" width="0.3441%" height="15" fill="rgb(225,87,19)" fg:x="2016" fg:w="15"/><text x="46.4991%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.16%)</title><rect x="46.6391%" y="645" width="0.1606%" height="15" fill="rgb(217,152,17)" fg:x="2033" fg:w="7"/><text x="46.8891%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.16%)</title><rect x="46.6391%" y="629" width="0.1606%" height="15" fill="rgb(235,72,13)" fg:x="2033" fg:w="7"/><text x="46.8891%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="46.7538%" y="613" width="0.0459%" height="15" fill="rgb(233,140,18)" fg:x="2038" fg:w="2"/><text x="47.0038%" y="623.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.05%)</title><rect x="46.7997%" y="645" width="0.0459%" height="15" fill="rgb(207,212,28)" fg:x="2040" fg:w="2"/><text x="47.0497%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.05%)</title><rect x="46.7997%" y="629" width="0.0459%" height="15" fill="rgb(220,130,25)" fg:x="2040" fg:w="2"/><text x="47.0497%" y="639.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (2 samples, 0.05%)</title><rect x="46.8456%" y="645" width="0.0459%" height="15" fill="rgb(205,55,34)" fg:x="2042" fg:w="2"/><text x="47.0956%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="46.8456%" y="629" width="0.0459%" height="15" fill="rgb(237,54,35)" fg:x="2042" fg:w="2"/><text x="47.0956%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="46.8456%" y="613" width="0.0459%" height="15" fill="rgb(208,67,23)" fg:x="2042" fg:w="2"/><text x="47.0956%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (105 samples, 2.41%)</title><rect x="44.5744%" y="773" width="2.4088%" height="15" fill="rgb(206,207,50)" fg:x="1943" fg:w="105"/><text x="44.8244%" y="783.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (105 samples, 2.41%)</title><rect x="44.5744%" y="757" width="2.4088%" height="15" fill="rgb(213,211,42)" fg:x="1943" fg:w="105"/><text x="44.8244%" y="767.50">co..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (105 samples, 2.41%)</title><rect x="44.5744%" y="741" width="2.4088%" height="15" fill="rgb(252,197,50)" fg:x="1943" fg:w="105"/><text x="44.8244%" y="751.50">y2..</text></g><g><title>core::str::&lt;impl str&gt;::matches (17 samples, 0.39%)</title><rect x="46.5933%" y="725" width="0.3900%" height="15" fill="rgb(251,211,41)" fg:x="2031" fg:w="17"/><text x="46.8433%" y="735.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (17 samples, 0.39%)</title><rect x="46.5933%" y="709" width="0.3900%" height="15" fill="rgb(229,211,5)" fg:x="2031" fg:w="17"/><text x="46.8433%" y="719.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (17 samples, 0.39%)</title><rect x="46.5933%" y="693" width="0.3900%" height="15" fill="rgb(239,36,31)" fg:x="2031" fg:w="17"/><text x="46.8433%" y="703.50"></text></g><g><title>core::str::pattern::StrSearcher::new (17 samples, 0.39%)</title><rect x="46.5933%" y="677" width="0.3900%" height="15" fill="rgb(248,67,31)" fg:x="2031" fg:w="17"/><text x="46.8433%" y="687.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (17 samples, 0.39%)</title><rect x="46.5933%" y="661" width="0.3900%" height="15" fill="rgb(249,55,44)" fg:x="2031" fg:w="17"/><text x="46.8433%" y="671.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (4 samples, 0.09%)</title><rect x="46.8915%" y="645" width="0.0918%" height="15" fill="rgb(216,82,12)" fg:x="2044" fg:w="4"/><text x="47.1415%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 samples, 2.45%)</title><rect x="44.5515%" y="853" width="2.4547%" height="15" fill="rgb(242,174,1)" fg:x="1942" fg:w="107"/><text x="44.8015%" y="863.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find (107 samples, 2.45%)</title><rect x="44.5515%" y="837" width="2.4547%" height="15" fill="rgb(208,120,29)" fg:x="1942" fg:w="107"/><text x="44.8015%" y="847.50">co..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (107 samples, 2.45%)</title><rect x="44.5515%" y="821" width="2.4547%" height="15" fill="rgb(221,105,43)" fg:x="1942" fg:w="107"/><text x="44.8015%" y="831.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (107 samples, 2.45%)</title><rect x="44.5515%" y="805" width="2.4547%" height="15" fill="rgb(234,124,22)" fg:x="1942" fg:w="107"/><text x="44.8015%" y="815.50">co..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (106 samples, 2.43%)</title><rect x="44.5744%" y="789" width="2.4318%" height="15" fill="rgb(212,23,30)" fg:x="1943" fg:w="106"/><text x="44.8244%" y="799.50">co..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (1 samples, 0.02%)</title><rect x="46.9833%" y="773" width="0.0229%" height="15" fill="rgb(219,122,53)" fg:x="2048" fg:w="1"/><text x="47.2333%" y="783.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.02%)</title><rect x="47.0980%" y="805" width="0.0229%" height="15" fill="rgb(248,84,24)" fg:x="2053" fg:w="1"/><text x="47.3480%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (4 samples, 0.09%)</title><rect x="47.1668%" y="645" width="0.0918%" height="15" fill="rgb(245,115,18)" fg:x="2056" fg:w="4"/><text x="47.4168%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect x="47.4880%" y="549" width="0.0229%" height="15" fill="rgb(227,176,51)" fg:x="2070" fg:w="1"/><text x="47.7380%" y="559.50"></text></g><g><title>_int_free (4 samples, 0.09%)</title><rect x="47.5109%" y="549" width="0.0918%" height="15" fill="rgb(229,63,42)" fg:x="2071" fg:w="4"/><text x="47.7609%" y="559.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="47.5797%" y="533" width="0.0229%" height="15" fill="rgb(247,202,24)" fg:x="2074" fg:w="1"/><text x="47.8297%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (20 samples, 0.46%)</title><rect x="47.3044%" y="629" width="0.4588%" height="15" fill="rgb(244,173,20)" fg:x="2062" fg:w="20"/><text x="47.5544%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (20 samples, 0.46%)</title><rect x="47.3044%" y="613" width="0.4588%" height="15" fill="rgb(242,81,47)" fg:x="2062" fg:w="20"/><text x="47.5544%" y="623.50"></text></g><g><title>alloc::alloc::realloc (20 samples, 0.46%)</title><rect x="47.3044%" y="597" width="0.4588%" height="15" fill="rgb(231,185,54)" fg:x="2062" fg:w="20"/><text x="47.5544%" y="607.50"></text></g><g><title>__GI___libc_realloc (20 samples, 0.46%)</title><rect x="47.3044%" y="581" width="0.4588%" height="15" fill="rgb(243,55,32)" fg:x="2062" fg:w="20"/><text x="47.5544%" y="591.50"></text></g><g><title>_int_realloc (16 samples, 0.37%)</title><rect x="47.3962%" y="565" width="0.3671%" height="15" fill="rgb(208,167,19)" fg:x="2066" fg:w="16"/><text x="47.6462%" y="575.50"></text></g><g><title>_int_malloc (7 samples, 0.16%)</title><rect x="47.6027%" y="549" width="0.1606%" height="15" fill="rgb(231,72,35)" fg:x="2075" fg:w="7"/><text x="47.8527%" y="559.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="47.7403%" y="533" width="0.0229%" height="15" fill="rgb(250,173,51)" fg:x="2081" fg:w="1"/><text x="47.9903%" y="543.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="47.7403%" y="517" width="0.0229%" height="15" fill="rgb(209,5,22)" fg:x="2081" fg:w="1"/><text x="47.9903%" y="527.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="47.7403%" y="501" width="0.0229%" height="15" fill="rgb(250,174,19)" fg:x="2081" fg:w="1"/><text x="47.9903%" y="511.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="47.7403%" y="485" width="0.0229%" height="15" fill="rgb(217,3,49)" fg:x="2081" fg:w="1"/><text x="47.9903%" y="495.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="47.7403%" y="469" width="0.0229%" height="15" fill="rgb(218,225,5)" fg:x="2081" fg:w="1"/><text x="47.9903%" y="479.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="47.7403%" y="453" width="0.0229%" height="15" fill="rgb(236,89,11)" fg:x="2081" fg:w="1"/><text x="47.9903%" y="463.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="47.7403%" y="437" width="0.0229%" height="15" fill="rgb(206,33,28)" fg:x="2081" fg:w="1"/><text x="47.9903%" y="447.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="47.7403%" y="421" width="0.0229%" height="15" fill="rgb(241,56,42)" fg:x="2081" fg:w="1"/><text x="47.9903%" y="431.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="47.7403%" y="405" width="0.0229%" height="15" fill="rgb(222,44,11)" fg:x="2081" fg:w="1"/><text x="47.9903%" y="415.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="47.7403%" y="389" width="0.0229%" height="15" fill="rgb(234,111,20)" fg:x="2081" fg:w="1"/><text x="47.9903%" y="399.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.07%)</title><rect x="47.7632%" y="629" width="0.0688%" height="15" fill="rgb(237,77,6)" fg:x="2082" fg:w="3"/><text x="48.0132%" y="639.50"></text></g><g><title>tcache_get (2 samples, 0.05%)</title><rect x="47.7862%" y="613" width="0.0459%" height="15" fill="rgb(235,111,23)" fg:x="2083" fg:w="2"/><text x="48.0362%" y="623.50"></text></g><g><title>__rdl_alloc (4 samples, 0.09%)</title><rect x="47.8321%" y="629" width="0.0918%" height="15" fill="rgb(251,135,29)" fg:x="2085" fg:w="4"/><text x="48.0821%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.09%)</title><rect x="47.8321%" y="613" width="0.0918%" height="15" fill="rgb(217,57,1)" fg:x="2085" fg:w="4"/><text x="48.0821%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (36 samples, 0.83%)</title><rect x="47.1209%" y="709" width="0.8259%" height="15" fill="rgb(249,119,31)" fg:x="2054" fg:w="36"/><text x="47.3709%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (36 samples, 0.83%)</title><rect x="47.1209%" y="693" width="0.8259%" height="15" fill="rgb(233,164,33)" fg:x="2054" fg:w="36"/><text x="47.3709%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (34 samples, 0.78%)</title><rect x="47.1668%" y="677" width="0.7800%" height="15" fill="rgb(250,217,43)" fg:x="2056" fg:w="34"/><text x="47.4168%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (34 samples, 0.78%)</title><rect x="47.1668%" y="661" width="0.7800%" height="15" fill="rgb(232,154,50)" fg:x="2056" fg:w="34"/><text x="47.4168%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (30 samples, 0.69%)</title><rect x="47.2585%" y="645" width="0.6882%" height="15" fill="rgb(227,190,8)" fg:x="2060" fg:w="30"/><text x="47.5085%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="47.9238%" y="629" width="0.0229%" height="15" fill="rgb(209,217,32)" fg:x="2089" fg:w="1"/><text x="48.1738%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect x="47.9468%" y="693" width="0.0229%" height="15" fill="rgb(243,203,50)" fg:x="2090" fg:w="1"/><text x="48.1968%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="47.9468%" y="709" width="0.0459%" height="15" fill="rgb(232,152,27)" fg:x="2090" fg:w="2"/><text x="48.1968%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="47.9697%" y="693" width="0.0229%" height="15" fill="rgb(240,34,29)" fg:x="2091" fg:w="1"/><text x="48.2197%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (42 samples, 0.96%)</title><rect x="47.1209%" y="805" width="0.9635%" height="15" fill="rgb(215,185,52)" fg:x="2054" fg:w="42"/><text x="47.3709%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (42 samples, 0.96%)</title><rect x="47.1209%" y="789" width="0.9635%" height="15" fill="rgb(240,89,49)" fg:x="2054" fg:w="42"/><text x="47.3709%" y="799.50"></text></g><g><title>alloc::string::String::push_str (42 samples, 0.96%)</title><rect x="47.1209%" y="773" width="0.9635%" height="15" fill="rgb(225,12,52)" fg:x="2054" fg:w="42"/><text x="47.3709%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (42 samples, 0.96%)</title><rect x="47.1209%" y="757" width="0.9635%" height="15" fill="rgb(239,128,45)" fg:x="2054" fg:w="42"/><text x="47.3709%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (42 samples, 0.96%)</title><rect x="47.1209%" y="741" width="0.9635%" height="15" fill="rgb(211,78,47)" fg:x="2054" fg:w="42"/><text x="47.3709%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (42 samples, 0.96%)</title><rect x="47.1209%" y="725" width="0.9635%" height="15" fill="rgb(232,31,21)" fg:x="2054" fg:w="42"/><text x="47.3709%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.09%)</title><rect x="47.9927%" y="709" width="0.0918%" height="15" fill="rgb(222,168,14)" fg:x="2092" fg:w="4"/><text x="48.2427%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.09%)</title><rect x="47.9927%" y="693" width="0.0918%" height="15" fill="rgb(209,128,24)" fg:x="2092" fg:w="4"/><text x="48.2427%" y="703.50"></text></g><g><title>alloc::fmt::format (50 samples, 1.15%)</title><rect x="47.0062%" y="853" width="1.1471%" height="15" fill="rgb(249,35,13)" fg:x="2049" fg:w="50"/><text x="47.2562%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (49 samples, 1.12%)</title><rect x="47.0291%" y="837" width="1.1241%" height="15" fill="rgb(218,7,2)" fg:x="2050" fg:w="49"/><text x="47.2791%" y="847.50"></text></g><g><title>core::fmt::write (46 samples, 1.06%)</title><rect x="47.0980%" y="821" width="1.0553%" height="15" fill="rgb(238,107,27)" fg:x="2053" fg:w="46"/><text x="47.3480%" y="831.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.07%)</title><rect x="48.0844%" y="805" width="0.0688%" height="15" fill="rgb(217,88,38)" fg:x="2096" fg:w="3"/><text x="48.3344%" y="815.50"></text></g><g><title>core::fmt::Arguments::new_v1 (2 samples, 0.05%)</title><rect x="48.1532%" y="853" width="0.0459%" height="15" fill="rgb(230,207,0)" fg:x="2099" fg:w="2"/><text x="48.4032%" y="863.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="48.1991%" y="757" width="0.0229%" height="15" fill="rgb(249,64,54)" fg:x="2101" fg:w="1"/><text x="48.4491%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.11%)</title><rect x="48.1991%" y="789" width="0.1147%" height="15" fill="rgb(231,7,11)" fg:x="2101" fg:w="5"/><text x="48.4491%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.11%)</title><rect x="48.1991%" y="773" width="0.1147%" height="15" fill="rgb(205,149,21)" fg:x="2101" fg:w="5"/><text x="48.4491%" y="783.50"></text></g><g><title>_int_free (4 samples, 0.09%)</title><rect x="48.2221%" y="757" width="0.0918%" height="15" fill="rgb(215,126,34)" fg:x="2102" fg:w="4"/><text x="48.4721%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.14%)</title><rect x="48.1991%" y="853" width="0.1376%" height="15" fill="rgb(241,132,45)" fg:x="2101" fg:w="6"/><text x="48.4491%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.14%)</title><rect x="48.1991%" y="837" width="0.1376%" height="15" fill="rgb(252,69,32)" fg:x="2101" fg:w="6"/><text x="48.4491%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.14%)</title><rect x="48.1991%" y="821" width="0.1376%" height="15" fill="rgb(232,204,19)" fg:x="2101" fg:w="6"/><text x="48.4491%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.14%)</title><rect x="48.1991%" y="805" width="0.1376%" height="15" fill="rgb(249,15,47)" fg:x="2101" fg:w="6"/><text x="48.4491%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="48.3138%" y="789" width="0.0229%" height="15" fill="rgb(209,227,23)" fg:x="2106" fg:w="1"/><text x="48.5638%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="48.3597%" y="789" width="0.0229%" height="15" fill="rgb(248,92,24)" fg:x="2108" fg:w="1"/><text x="48.6097%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="48.3597%" y="773" width="0.0229%" height="15" fill="rgb(247,59,2)" fg:x="2108" fg:w="1"/><text x="48.6097%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="48.3597%" y="757" width="0.0229%" height="15" fill="rgb(221,30,5)" fg:x="2108" fg:w="1"/><text x="48.6097%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="48.3597%" y="741" width="0.0229%" height="15" fill="rgb(208,108,53)" fg:x="2108" fg:w="1"/><text x="48.6097%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.05%)</title><rect x="48.3597%" y="805" width="0.0459%" height="15" fill="rgb(211,183,26)" fg:x="2108" fg:w="2"/><text x="48.6097%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="48.3827%" y="789" width="0.0229%" height="15" fill="rgb(232,132,4)" fg:x="2109" fg:w="1"/><text x="48.6327%" y="799.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.02%)</title><rect x="48.3827%" y="773" width="0.0229%" height="15" fill="rgb(253,128,37)" fg:x="2109" fg:w="1"/><text x="48.6327%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="48.3827%" y="757" width="0.0229%" height="15" fill="rgb(221,58,24)" fg:x="2109" fg:w="1"/><text x="48.6327%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="48.3827%" y="741" width="0.0229%" height="15" fill="rgb(230,54,45)" fg:x="2109" fg:w="1"/><text x="48.6327%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="48.3827%" y="725" width="0.0229%" height="15" fill="rgb(254,21,18)" fg:x="2109" fg:w="1"/><text x="48.6327%" y="735.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="48.3827%" y="709" width="0.0229%" height="15" fill="rgb(221,108,0)" fg:x="2109" fg:w="1"/><text x="48.6327%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="48.4056%" y="773" width="0.0459%" height="15" fill="rgb(206,95,1)" fg:x="2110" fg:w="2"/><text x="48.6556%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="48.4056%" y="757" width="0.0459%" height="15" fill="rgb(237,52,5)" fg:x="2110" fg:w="2"/><text x="48.6556%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="48.4285%" y="741" width="0.0229%" height="15" fill="rgb(218,150,34)" fg:x="2111" fg:w="1"/><text x="48.6785%" y="751.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="48.4285%" y="725" width="0.0229%" height="15" fill="rgb(235,194,28)" fg:x="2111" fg:w="1"/><text x="48.6785%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.25%)</title><rect x="48.3368%" y="853" width="0.2524%" height="15" fill="rgb(245,92,18)" fg:x="2107" fg:w="11"/><text x="48.5868%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.25%)</title><rect x="48.3368%" y="837" width="0.2524%" height="15" fill="rgb(253,203,53)" fg:x="2107" fg:w="11"/><text x="48.5868%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.25%)</title><rect x="48.3368%" y="821" width="0.2524%" height="15" fill="rgb(249,185,47)" fg:x="2107" fg:w="11"/><text x="48.5868%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.18%)</title><rect x="48.4056%" y="805" width="0.1835%" height="15" fill="rgb(252,194,52)" fg:x="2110" fg:w="8"/><text x="48.6556%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.18%)</title><rect x="48.4056%" y="789" width="0.1835%" height="15" fill="rgb(210,53,36)" fg:x="2110" fg:w="8"/><text x="48.6556%" y="799.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.14%)</title><rect x="48.4515%" y="773" width="0.1376%" height="15" fill="rgb(237,37,25)" fg:x="2112" fg:w="6"/><text x="48.7015%" y="783.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.14%)</title><rect x="48.4515%" y="757" width="0.1376%" height="15" fill="rgb(242,116,27)" fg:x="2112" fg:w="6"/><text x="48.7015%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.14%)</title><rect x="48.4515%" y="741" width="0.1376%" height="15" fill="rgb(213,185,26)" fg:x="2112" fg:w="6"/><text x="48.7015%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.14%)</title><rect x="48.4515%" y="725" width="0.1376%" height="15" fill="rgb(225,204,8)" fg:x="2112" fg:w="6"/><text x="48.7015%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.14%)</title><rect x="48.4515%" y="709" width="0.1376%" height="15" fill="rgb(254,111,37)" fg:x="2112" fg:w="6"/><text x="48.7015%" y="719.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="48.5432%" y="693" width="0.0459%" height="15" fill="rgb(242,35,9)" fg:x="2116" fg:w="2"/><text x="48.7932%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.05%)</title><rect x="48.6579%" y="693" width="0.0459%" height="15" fill="rgb(232,138,49)" fg:x="2121" fg:w="2"/><text x="48.9079%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="48.6809%" y="677" width="0.0229%" height="15" fill="rgb(247,56,4)" fg:x="2122" fg:w="1"/><text x="48.9309%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.16%)</title><rect x="48.5891%" y="741" width="0.1606%" height="15" fill="rgb(226,179,17)" fg:x="2118" fg:w="7"/><text x="48.8391%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.16%)</title><rect x="48.5891%" y="725" width="0.1606%" height="15" fill="rgb(216,163,45)" fg:x="2118" fg:w="7"/><text x="48.8391%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.16%)</title><rect x="48.5891%" y="709" width="0.1606%" height="15" fill="rgb(211,157,3)" fg:x="2118" fg:w="7"/><text x="48.8391%" y="719.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="48.7038%" y="693" width="0.0459%" height="15" fill="rgb(234,44,20)" fg:x="2123" fg:w="2"/><text x="48.9538%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="48.7956%" y="677" width="0.0229%" height="15" fill="rgb(254,138,23)" fg:x="2127" fg:w="1"/><text x="49.0456%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="48.7956%" y="661" width="0.0229%" height="15" fill="rgb(206,119,39)" fg:x="2127" fg:w="1"/><text x="49.0456%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (12 samples, 0.28%)</title><rect x="48.5891%" y="773" width="0.2753%" height="15" fill="rgb(231,105,52)" fg:x="2118" fg:w="12"/><text x="48.8391%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (12 samples, 0.28%)</title><rect x="48.5891%" y="757" width="0.2753%" height="15" fill="rgb(250,20,5)" fg:x="2118" fg:w="12"/><text x="48.8391%" y="767.50"></text></g><g><title>core::hash::Hasher::write_u8 (5 samples, 0.11%)</title><rect x="48.7497%" y="741" width="0.1147%" height="15" fill="rgb(215,198,30)" fg:x="2125" fg:w="5"/><text x="48.9997%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.11%)</title><rect x="48.7497%" y="725" width="0.1147%" height="15" fill="rgb(246,142,8)" fg:x="2125" fg:w="5"/><text x="48.9997%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.11%)</title><rect x="48.7497%" y="709" width="0.1147%" height="15" fill="rgb(243,26,38)" fg:x="2125" fg:w="5"/><text x="48.9997%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.11%)</title><rect x="48.7497%" y="693" width="0.1147%" height="15" fill="rgb(205,133,28)" fg:x="2125" fg:w="5"/><text x="48.9997%" y="703.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="48.8185%" y="677" width="0.0459%" height="15" fill="rgb(212,34,0)" fg:x="2128" fg:w="2"/><text x="49.0685%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.05%)</title><rect x="48.8874%" y="725" width="0.0459%" height="15" fill="rgb(251,226,22)" fg:x="2131" fg:w="2"/><text x="49.1374%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.11%)</title><rect x="48.8644%" y="773" width="0.1147%" height="15" fill="rgb(252,119,9)" fg:x="2130" fg:w="5"/><text x="49.1144%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.11%)</title><rect x="48.8644%" y="757" width="0.1147%" height="15" fill="rgb(213,150,50)" fg:x="2130" fg:w="5"/><text x="49.1144%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.11%)</title><rect x="48.8644%" y="741" width="0.1147%" height="15" fill="rgb(212,24,39)" fg:x="2130" fg:w="5"/><text x="49.1144%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.05%)</title><rect x="48.9332%" y="725" width="0.0459%" height="15" fill="rgb(213,46,39)" fg:x="2133" fg:w="2"/><text x="49.1832%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="48.9332%" y="709" width="0.0459%" height="15" fill="rgb(239,106,12)" fg:x="2133" fg:w="2"/><text x="49.1832%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (18 samples, 0.41%)</title><rect x="48.5891%" y="789" width="0.4129%" height="15" fill="rgb(249,229,21)" fg:x="2118" fg:w="18"/><text x="48.8391%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="48.9791%" y="773" width="0.0229%" height="15" fill="rgb(212,158,3)" fg:x="2135" fg:w="1"/><text x="49.2291%" y="783.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="48.9791%" y="757" width="0.0229%" height="15" fill="rgb(253,26,48)" fg:x="2135" fg:w="1"/><text x="49.2291%" y="767.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="48.9791%" y="741" width="0.0229%" height="15" fill="rgb(238,178,20)" fg:x="2135" fg:w="1"/><text x="49.2291%" y="751.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="48.9791%" y="725" width="0.0229%" height="15" fill="rgb(208,86,15)" fg:x="2135" fg:w="1"/><text x="49.2291%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="49.0938%" y="725" width="0.0459%" height="15" fill="rgb(239,42,53)" fg:x="2140" fg:w="2"/><text x="49.3438%" y="735.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.05%)</title><rect x="49.0938%" y="709" width="0.0459%" height="15" fill="rgb(245,226,8)" fg:x="2140" fg:w="2"/><text x="49.3438%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="49.0479%" y="757" width="0.1147%" height="15" fill="rgb(216,176,32)" fg:x="2138" fg:w="5"/><text x="49.2979%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="49.0479%" y="741" width="0.1147%" height="15" fill="rgb(231,186,21)" fg:x="2138" fg:w="5"/><text x="49.2979%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.02%)</title><rect x="49.1397%" y="725" width="0.0229%" height="15" fill="rgb(205,95,49)" fg:x="2142" fg:w="1"/><text x="49.3897%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="49.1397%" y="709" width="0.0229%" height="15" fill="rgb(217,145,8)" fg:x="2142" fg:w="1"/><text x="49.3897%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="49.1397%" y="693" width="0.0229%" height="15" fill="rgb(239,144,48)" fg:x="2142" fg:w="1"/><text x="49.3897%" y="703.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.05%)</title><rect x="49.1627%" y="757" width="0.0459%" height="15" fill="rgb(214,189,23)" fg:x="2143" fg:w="2"/><text x="49.4127%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="49.1627%" y="741" width="0.0459%" height="15" fill="rgb(229,157,17)" fg:x="2143" fg:w="2"/><text x="49.4127%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.05%)</title><rect x="49.1627%" y="725" width="0.0459%" height="15" fill="rgb(230,5,48)" fg:x="2143" fg:w="2"/><text x="49.4127%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.05%)</title><rect x="49.1627%" y="709" width="0.0459%" height="15" fill="rgb(224,156,48)" fg:x="2143" fg:w="2"/><text x="49.4127%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.05%)</title><rect x="49.1627%" y="693" width="0.0459%" height="15" fill="rgb(223,14,29)" fg:x="2143" fg:w="2"/><text x="49.4127%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.05%)</title><rect x="49.1627%" y="677" width="0.0459%" height="15" fill="rgb(229,96,36)" fg:x="2143" fg:w="2"/><text x="49.4127%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="49.2085%" y="693" width="0.0229%" height="15" fill="rgb(231,102,53)" fg:x="2145" fg:w="1"/><text x="49.4585%" y="703.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (31 samples, 0.71%)</title><rect x="48.5891%" y="853" width="0.7112%" height="15" fill="rgb(210,77,38)" fg:x="2118" fg:w="31"/><text x="48.8391%" y="863.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (31 samples, 0.71%)</title><rect x="48.5891%" y="837" width="0.7112%" height="15" fill="rgb(235,131,6)" fg:x="2118" fg:w="31"/><text x="48.8391%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (31 samples, 0.71%)</title><rect x="48.5891%" y="821" width="0.7112%" height="15" fill="rgb(252,55,38)" fg:x="2118" fg:w="31"/><text x="48.8391%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (31 samples, 0.71%)</title><rect x="48.5891%" y="805" width="0.7112%" height="15" fill="rgb(246,38,14)" fg:x="2118" fg:w="31"/><text x="48.8391%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.30%)</title><rect x="49.0021%" y="789" width="0.2982%" height="15" fill="rgb(242,27,5)" fg:x="2136" fg:w="13"/><text x="49.2521%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.30%)</title><rect x="49.0021%" y="773" width="0.2982%" height="15" fill="rgb(228,65,35)" fg:x="2136" fg:w="13"/><text x="49.2521%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.09%)</title><rect x="49.2085%" y="757" width="0.0918%" height="15" fill="rgb(245,93,11)" fg:x="2145" fg:w="4"/><text x="49.4585%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.09%)</title><rect x="49.2085%" y="741" width="0.0918%" height="15" fill="rgb(213,1,31)" fg:x="2145" fg:w="4"/><text x="49.4585%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.09%)</title><rect x="49.2085%" y="725" width="0.0918%" height="15" fill="rgb(237,205,14)" fg:x="2145" fg:w="4"/><text x="49.4585%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.09%)</title><rect x="49.2085%" y="709" width="0.0918%" height="15" fill="rgb(232,118,45)" fg:x="2145" fg:w="4"/><text x="49.4585%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.07%)</title><rect x="49.2315%" y="693" width="0.0688%" height="15" fill="rgb(218,5,6)" fg:x="2146" fg:w="3"/><text x="49.4815%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.07%)</title><rect x="49.2315%" y="677" width="0.0688%" height="15" fill="rgb(251,87,51)" fg:x="2146" fg:w="3"/><text x="49.4815%" y="687.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.07%)</title><rect x="49.2315%" y="661" width="0.0688%" height="15" fill="rgb(207,225,20)" fg:x="2146" fg:w="3"/><text x="49.4815%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="49.3003%" y="757" width="0.0229%" height="15" fill="rgb(222,78,54)" fg:x="2149" fg:w="1"/><text x="49.5503%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="49.3003%" y="741" width="0.0229%" height="15" fill="rgb(232,85,16)" fg:x="2149" fg:w="1"/><text x="49.5503%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="49.3003%" y="725" width="0.0229%" height="15" fill="rgb(244,25,33)" fg:x="2149" fg:w="1"/><text x="49.5503%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (3 samples, 0.07%)</title><rect x="49.3003%" y="789" width="0.0688%" height="15" fill="rgb(233,24,36)" fg:x="2149" fg:w="3"/><text x="49.5503%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.07%)</title><rect x="49.3003%" y="773" width="0.0688%" height="15" fill="rgb(253,49,54)" fg:x="2149" fg:w="3"/><text x="49.5503%" y="783.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.05%)</title><rect x="49.3232%" y="757" width="0.0459%" height="15" fill="rgb(245,12,22)" fg:x="2150" fg:w="2"/><text x="49.5732%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="49.3232%" y="741" width="0.0459%" height="15" fill="rgb(253,141,28)" fg:x="2150" fg:w="2"/><text x="49.5732%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="49.3232%" y="725" width="0.0459%" height="15" fill="rgb(225,207,27)" fg:x="2150" fg:w="2"/><text x="49.5732%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="49.3232%" y="709" width="0.0459%" height="15" fill="rgb(220,84,2)" fg:x="2150" fg:w="2"/><text x="49.5732%" y="719.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="49.3462%" y="693" width="0.0229%" height="15" fill="rgb(224,37,37)" fg:x="2151" fg:w="1"/><text x="49.5962%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="49.3691%" y="725" width="0.0229%" height="15" fill="rgb(220,143,18)" fg:x="2152" fg:w="1"/><text x="49.6191%" y="735.50"></text></g><g><title>hashbrown::map::make_insert_hash (5 samples, 0.11%)</title><rect x="49.3003%" y="805" width="0.1147%" height="15" fill="rgb(210,88,33)" fg:x="2149" fg:w="5"/><text x="49.5503%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="49.3691%" y="789" width="0.0459%" height="15" fill="rgb(219,87,51)" fg:x="2152" fg:w="2"/><text x="49.6191%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="49.3691%" y="773" width="0.0459%" height="15" fill="rgb(211,7,35)" fg:x="2152" fg:w="2"/><text x="49.6191%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="49.3691%" y="757" width="0.0459%" height="15" fill="rgb(232,77,2)" fg:x="2152" fg:w="2"/><text x="49.6191%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.05%)</title><rect x="49.3691%" y="741" width="0.0459%" height="15" fill="rgb(249,94,25)" fg:x="2152" fg:w="2"/><text x="49.6191%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="49.3921%" y="725" width="0.0229%" height="15" fill="rgb(215,112,2)" fg:x="2153" fg:w="1"/><text x="49.6421%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="49.4150%" y="789" width="0.0229%" height="15" fill="rgb(226,115,48)" fg:x="2154" fg:w="1"/><text x="49.6650%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="49.4150%" y="773" width="0.0229%" height="15" fill="rgb(249,196,10)" fg:x="2154" fg:w="1"/><text x="49.6650%" y="783.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="49.4150%" y="757" width="0.0229%" height="15" fill="rgb(237,109,14)" fg:x="2154" fg:w="1"/><text x="49.6650%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="49.4379%" y="789" width="0.0229%" height="15" fill="rgb(217,103,53)" fg:x="2155" fg:w="1"/><text x="49.6879%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="49.4379%" y="773" width="0.0229%" height="15" fill="rgb(244,137,9)" fg:x="2155" fg:w="1"/><text x="49.6879%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="49.4379%" y="757" width="0.0229%" height="15" fill="rgb(227,201,3)" fg:x="2155" fg:w="1"/><text x="49.6879%" y="767.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.02%)</title><rect x="49.4379%" y="741" width="0.0229%" height="15" fill="rgb(243,94,6)" fg:x="2155" fg:w="1"/><text x="49.6879%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="49.4379%" y="725" width="0.0229%" height="15" fill="rgb(235,118,5)" fg:x="2155" fg:w="1"/><text x="49.6879%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="49.4379%" y="709" width="0.0229%" height="15" fill="rgb(247,10,30)" fg:x="2155" fg:w="1"/><text x="49.6879%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="49.4379%" y="693" width="0.0229%" height="15" fill="rgb(205,26,28)" fg:x="2155" fg:w="1"/><text x="49.6879%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="49.4379%" y="677" width="0.0229%" height="15" fill="rgb(206,99,35)" fg:x="2155" fg:w="1"/><text x="49.6879%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="49.4379%" y="661" width="0.0229%" height="15" fill="rgb(238,130,40)" fg:x="2155" fg:w="1"/><text x="49.6879%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="49.4379%" y="645" width="0.0229%" height="15" fill="rgb(224,126,31)" fg:x="2155" fg:w="1"/><text x="49.6879%" y="655.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="49.4379%" y="629" width="0.0229%" height="15" fill="rgb(254,105,17)" fg:x="2155" fg:w="1"/><text x="49.6879%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="49.4379%" y="613" width="0.0229%" height="15" fill="rgb(216,87,36)" fg:x="2155" fg:w="1"/><text x="49.6879%" y="623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (9 samples, 0.21%)</title><rect x="49.3003%" y="853" width="0.2065%" height="15" fill="rgb(240,21,12)" fg:x="2149" fg:w="9"/><text x="49.5503%" y="863.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (9 samples, 0.21%)</title><rect x="49.3003%" y="837" width="0.2065%" height="15" fill="rgb(245,192,34)" fg:x="2149" fg:w="9"/><text x="49.5503%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.21%)</title><rect x="49.3003%" y="821" width="0.2065%" height="15" fill="rgb(226,100,49)" fg:x="2149" fg:w="9"/><text x="49.5503%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.09%)</title><rect x="49.4150%" y="805" width="0.0918%" height="15" fill="rgb(245,188,27)" fg:x="2154" fg:w="4"/><text x="49.6650%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (2 samples, 0.05%)</title><rect x="49.4609%" y="789" width="0.0459%" height="15" fill="rgb(212,170,8)" fg:x="2156" fg:w="2"/><text x="49.7109%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.02%)</title><rect x="49.4838%" y="773" width="0.0229%" height="15" fill="rgb(217,113,29)" fg:x="2157" fg:w="1"/><text x="49.7338%" y="783.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="49.4838%" y="757" width="0.0229%" height="15" fill="rgb(237,30,3)" fg:x="2157" fg:w="1"/><text x="49.7338%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="49.5985%" y="709" width="0.0229%" height="15" fill="rgb(227,19,28)" fg:x="2162" fg:w="1"/><text x="49.8485%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="49.5985%" y="693" width="0.0229%" height="15" fill="rgb(239,172,45)" fg:x="2162" fg:w="1"/><text x="49.8485%" y="703.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="49.5985%" y="677" width="0.0229%" height="15" fill="rgb(254,55,39)" fg:x="2162" fg:w="1"/><text x="49.8485%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="49.5985%" y="661" width="0.0229%" height="15" fill="rgb(249,208,12)" fg:x="2162" fg:w="1"/><text x="49.8485%" y="671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="49.5985%" y="645" width="0.0229%" height="15" fill="rgb(240,52,13)" fg:x="2162" fg:w="1"/><text x="49.8485%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="49.5985%" y="629" width="0.0229%" height="15" fill="rgb(252,149,13)" fg:x="2162" fg:w="1"/><text x="49.8485%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="49.5985%" y="613" width="0.0229%" height="15" fill="rgb(232,81,48)" fg:x="2162" fg:w="1"/><text x="49.8485%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.05%)</title><rect x="49.6215%" y="709" width="0.0459%" height="15" fill="rgb(222,144,2)" fg:x="2163" fg:w="2"/><text x="49.8715%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.05%)</title><rect x="49.6215%" y="693" width="0.0459%" height="15" fill="rgb(216,81,32)" fg:x="2163" fg:w="2"/><text x="49.8715%" y="703.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="49.6215%" y="677" width="0.0459%" height="15" fill="rgb(244,78,51)" fg:x="2163" fg:w="2"/><text x="49.8715%" y="687.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.05%)</title><rect x="49.6215%" y="661" width="0.0459%" height="15" fill="rgb(217,66,21)" fg:x="2163" fg:w="2"/><text x="49.8715%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="50.8373%" y="613" width="0.0229%" height="15" fill="rgb(247,101,42)" fg:x="2216" fg:w="1"/><text x="51.0873%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.02%)</title><rect x="50.8373%" y="597" width="0.0229%" height="15" fill="rgb(227,81,39)" fg:x="2216" fg:w="1"/><text x="51.0873%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.02%)</title><rect x="50.8373%" y="581" width="0.0229%" height="15" fill="rgb(220,223,44)" fg:x="2216" fg:w="1"/><text x="51.0873%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="50.8373%" y="565" width="0.0229%" height="15" fill="rgb(205,218,2)" fg:x="2216" fg:w="1"/><text x="51.0873%" y="575.50"></text></g><g><title>&lt;core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy&gt;::matching (1 samples, 0.02%)</title><rect x="50.8603%" y="613" width="0.0229%" height="15" fill="rgb(212,207,28)" fg:x="2217" fg:w="1"/><text x="51.1103%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="50.8832%" y="613" width="0.0229%" height="15" fill="rgb(224,12,41)" fg:x="2218" fg:w="1"/><text x="51.1332%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="50.8832%" y="597" width="0.0229%" height="15" fill="rgb(216,118,12)" fg:x="2218" fg:w="1"/><text x="51.1332%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="50.9062%" y="613" width="0.0229%" height="15" fill="rgb(252,97,46)" fg:x="2219" fg:w="1"/><text x="51.1562%" y="623.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="50.9062%" y="597" width="0.0229%" height="15" fill="rgb(244,206,19)" fg:x="2219" fg:w="1"/><text x="51.1562%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (62 samples, 1.42%)</title><rect x="49.6674%" y="709" width="1.4223%" height="15" fill="rgb(231,84,31)" fg:x="2165" fg:w="62"/><text x="49.9174%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (46 samples, 1.06%)</title><rect x="50.0344%" y="693" width="1.0553%" height="15" fill="rgb(244,133,0)" fg:x="2181" fg:w="46"/><text x="50.2844%" y="703.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 1.01%)</title><rect x="50.0803%" y="677" width="1.0094%" height="15" fill="rgb(223,15,50)" fg:x="2183" fg:w="44"/><text x="50.3303%" y="687.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (44 samples, 1.01%)</title><rect x="50.0803%" y="661" width="1.0094%" height="15" fill="rgb(250,118,49)" fg:x="2183" fg:w="44"/><text x="50.3303%" y="671.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (44 samples, 1.01%)</title><rect x="50.0803%" y="645" width="1.0094%" height="15" fill="rgb(248,25,38)" fg:x="2183" fg:w="44"/><text x="50.3303%" y="655.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (37 samples, 0.85%)</title><rect x="50.2409%" y="629" width="0.8488%" height="15" fill="rgb(215,70,14)" fg:x="2190" fg:w="37"/><text x="50.4909%" y="639.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (7 samples, 0.16%)</title><rect x="50.9291%" y="613" width="0.1606%" height="15" fill="rgb(215,28,15)" fg:x="2220" fg:w="7"/><text x="51.1791%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.16%)</title><rect x="51.2273%" y="629" width="0.1606%" height="15" fill="rgb(243,6,28)" fg:x="2233" fg:w="7"/><text x="51.4773%" y="639.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.16%)</title><rect x="51.2273%" y="613" width="0.1606%" height="15" fill="rgb(222,130,1)" fg:x="2233" fg:w="7"/><text x="51.4773%" y="623.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.14%)</title><rect x="51.2503%" y="597" width="0.1376%" height="15" fill="rgb(236,166,44)" fg:x="2234" fg:w="6"/><text x="51.5003%" y="607.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="51.3879%" y="629" width="0.0229%" height="15" fill="rgb(221,108,14)" fg:x="2240" fg:w="1"/><text x="51.6379%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="51.3879%" y="613" width="0.0229%" height="15" fill="rgb(252,3,45)" fg:x="2240" fg:w="1"/><text x="51.6379%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (83 samples, 1.90%)</title><rect x="49.5756%" y="837" width="1.9041%" height="15" fill="rgb(237,68,30)" fg:x="2161" fg:w="83"/><text x="49.8256%" y="847.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (83 samples, 1.90%)</title><rect x="49.5756%" y="821" width="1.9041%" height="15" fill="rgb(211,79,22)" fg:x="2161" fg:w="83"/><text x="49.8256%" y="831.50">c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (83 samples, 1.90%)</title><rect x="49.5756%" y="805" width="1.9041%" height="15" fill="rgb(252,185,21)" fg:x="2161" fg:w="83"/><text x="49.8256%" y="815.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (83 samples, 1.90%)</title><rect x="49.5756%" y="789" width="1.9041%" height="15" fill="rgb(225,189,26)" fg:x="2161" fg:w="83"/><text x="49.8256%" y="799.50">c..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (83 samples, 1.90%)</title><rect x="49.5756%" y="773" width="1.9041%" height="15" fill="rgb(241,30,40)" fg:x="2161" fg:w="83"/><text x="49.8256%" y="783.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (83 samples, 1.90%)</title><rect x="49.5756%" y="757" width="1.9041%" height="15" fill="rgb(235,215,44)" fg:x="2161" fg:w="83"/><text x="49.8256%" y="767.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (83 samples, 1.90%)</title><rect x="49.5756%" y="741" width="1.9041%" height="15" fill="rgb(205,8,29)" fg:x="2161" fg:w="83"/><text x="49.8256%" y="751.50">c..</text></g><g><title>y2021::d12::main2::traverse::{{closure}} (83 samples, 1.90%)</title><rect x="49.5756%" y="725" width="1.9041%" height="15" fill="rgb(241,137,42)" fg:x="2161" fg:w="83"/><text x="49.8256%" y="735.50">y..</text></g><g><title>core::str::&lt;impl str&gt;::matches (17 samples, 0.39%)</title><rect x="51.0897%" y="709" width="0.3900%" height="15" fill="rgb(237,155,2)" fg:x="2227" fg:w="17"/><text x="51.3397%" y="719.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (17 samples, 0.39%)</title><rect x="51.0897%" y="693" width="0.3900%" height="15" fill="rgb(245,29,42)" fg:x="2227" fg:w="17"/><text x="51.3397%" y="703.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (17 samples, 0.39%)</title><rect x="51.0897%" y="677" width="0.3900%" height="15" fill="rgb(234,101,35)" fg:x="2227" fg:w="17"/><text x="51.3397%" y="687.50"></text></g><g><title>core::str::pattern::StrSearcher::new (17 samples, 0.39%)</title><rect x="51.0897%" y="661" width="0.3900%" height="15" fill="rgb(228,64,37)" fg:x="2227" fg:w="17"/><text x="51.3397%" y="671.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (11 samples, 0.25%)</title><rect x="51.2273%" y="645" width="0.2524%" height="15" fill="rgb(217,214,36)" fg:x="2233" fg:w="11"/><text x="51.4773%" y="655.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (3 samples, 0.07%)</title><rect x="51.4109%" y="629" width="0.0688%" height="15" fill="rgb(243,70,3)" fg:x="2241" fg:w="3"/><text x="51.6609%" y="639.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (2 samples, 0.05%)</title><rect x="51.4797%" y="821" width="0.0459%" height="15" fill="rgb(253,158,52)" fg:x="2244" fg:w="2"/><text x="51.7297%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.05%)</title><rect x="51.4797%" y="805" width="0.0459%" height="15" fill="rgb(234,111,54)" fg:x="2244" fg:w="2"/><text x="51.7297%" y="815.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.05%)</title><rect x="51.4797%" y="789" width="0.0459%" height="15" fill="rgb(217,70,32)" fg:x="2244" fg:w="2"/><text x="51.7297%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="51.4797%" y="773" width="0.0459%" height="15" fill="rgb(234,18,33)" fg:x="2244" fg:w="2"/><text x="51.7297%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="51.4797%" y="757" width="0.0459%" height="15" fill="rgb(234,12,49)" fg:x="2244" fg:w="2"/><text x="51.7297%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="51.4797%" y="741" width="0.0459%" height="15" fill="rgb(236,10,21)" fg:x="2244" fg:w="2"/><text x="51.7297%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="51.5485%" y="661" width="0.0229%" height="15" fill="rgb(248,182,45)" fg:x="2247" fg:w="1"/><text x="51.7985%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (5 samples, 0.11%)</title><rect x="51.6173%" y="629" width="0.1147%" height="15" fill="rgb(217,95,36)" fg:x="2250" fg:w="5"/><text x="51.8673%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.09%)</title><rect x="51.7779%" y="613" width="0.0918%" height="15" fill="rgb(212,110,31)" fg:x="2257" fg:w="4"/><text x="52.0279%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.09%)</title><rect x="51.7779%" y="597" width="0.0918%" height="15" fill="rgb(206,32,53)" fg:x="2257" fg:w="4"/><text x="52.0279%" y="607.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.09%)</title><rect x="51.7779%" y="581" width="0.0918%" height="15" fill="rgb(246,141,37)" fg:x="2257" fg:w="4"/><text x="52.0279%" y="591.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.09%)</title><rect x="51.7779%" y="565" width="0.0918%" height="15" fill="rgb(219,16,7)" fg:x="2257" fg:w="4"/><text x="52.0279%" y="575.50"></text></g><g><title>_int_realloc (3 samples, 0.07%)</title><rect x="51.8009%" y="549" width="0.0688%" height="15" fill="rgb(230,205,45)" fg:x="2258" fg:w="3"/><text x="52.0509%" y="559.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.07%)</title><rect x="51.8697%" y="613" width="0.0688%" height="15" fill="rgb(231,43,49)" fg:x="2261" fg:w="3"/><text x="52.1197%" y="623.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="51.9156%" y="597" width="0.0229%" height="15" fill="rgb(212,106,34)" fg:x="2263" fg:w="1"/><text x="52.1656%" y="607.50"></text></g><g><title>__rdl_alloc (2 samples, 0.05%)</title><rect x="51.9385%" y="613" width="0.0459%" height="15" fill="rgb(206,83,17)" fg:x="2264" fg:w="2"/><text x="52.1885%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.05%)</title><rect x="51.9385%" y="597" width="0.0459%" height="15" fill="rgb(244,154,49)" fg:x="2264" fg:w="2"/><text x="52.1885%" y="607.50"></text></g><g><title>__rust_alloc (2 samples, 0.05%)</title><rect x="51.9844%" y="613" width="0.0459%" height="15" fill="rgb(244,149,49)" fg:x="2266" fg:w="2"/><text x="52.2344%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.32%)</title><rect x="51.7320%" y="629" width="0.3212%" height="15" fill="rgb(227,134,18)" fg:x="2255" fg:w="14"/><text x="51.9820%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="52.0303%" y="613" width="0.0229%" height="15" fill="rgb(237,116,36)" fg:x="2268" fg:w="1"/><text x="52.2803%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (23 samples, 0.53%)</title><rect x="51.5485%" y="693" width="0.5276%" height="15" fill="rgb(205,129,40)" fg:x="2247" fg:w="23"/><text x="51.7985%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23 samples, 0.53%)</title><rect x="51.5485%" y="677" width="0.5276%" height="15" fill="rgb(236,178,4)" fg:x="2247" fg:w="23"/><text x="51.7985%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.50%)</title><rect x="51.5715%" y="661" width="0.5047%" height="15" fill="rgb(251,76,53)" fg:x="2248" fg:w="22"/><text x="51.8215%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.46%)</title><rect x="51.6173%" y="645" width="0.4588%" height="15" fill="rgb(242,92,40)" fg:x="2250" fg:w="20"/><text x="51.8673%" y="655.50"></text></g><g><title>core::cmp::max (1 samples, 0.02%)</title><rect x="52.0532%" y="629" width="0.0229%" height="15" fill="rgb(209,45,30)" fg:x="2269" fg:w="1"/><text x="52.3032%" y="639.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="52.0532%" y="613" width="0.0229%" height="15" fill="rgb(218,157,36)" fg:x="2269" fg:w="1"/><text x="52.3032%" y="623.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.02%)</title><rect x="52.0532%" y="597" width="0.0229%" height="15" fill="rgb(222,186,16)" fg:x="2269" fg:w="1"/><text x="52.3032%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="52.0762%" y="693" width="0.0459%" height="15" fill="rgb(254,72,35)" fg:x="2270" fg:w="2"/><text x="52.3262%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="52.0762%" y="677" width="0.0459%" height="15" fill="rgb(224,25,35)" fg:x="2270" fg:w="2"/><text x="52.3262%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (26 samples, 0.60%)</title><rect x="51.5485%" y="789" width="0.5965%" height="15" fill="rgb(206,135,52)" fg:x="2247" fg:w="26"/><text x="51.7985%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (26 samples, 0.60%)</title><rect x="51.5485%" y="773" width="0.5965%" height="15" fill="rgb(229,174,47)" fg:x="2247" fg:w="26"/><text x="51.7985%" y="783.50"></text></g><g><title>alloc::string::String::push_str (26 samples, 0.60%)</title><rect x="51.5485%" y="757" width="0.5965%" height="15" fill="rgb(242,184,21)" fg:x="2247" fg:w="26"/><text x="51.7985%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (26 samples, 0.60%)</title><rect x="51.5485%" y="741" width="0.5965%" height="15" fill="rgb(213,22,45)" fg:x="2247" fg:w="26"/><text x="51.7985%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (26 samples, 0.60%)</title><rect x="51.5485%" y="725" width="0.5965%" height="15" fill="rgb(237,81,54)" fg:x="2247" fg:w="26"/><text x="51.7985%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (26 samples, 0.60%)</title><rect x="51.5485%" y="709" width="0.5965%" height="15" fill="rgb(248,177,18)" fg:x="2247" fg:w="26"/><text x="51.7985%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="52.1220%" y="693" width="0.0229%" height="15" fill="rgb(254,31,16)" fg:x="2272" fg:w="1"/><text x="52.3720%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="52.1220%" y="677" width="0.0229%" height="15" fill="rgb(235,20,31)" fg:x="2272" fg:w="1"/><text x="52.3720%" y="687.50"></text></g><g><title>alloc::fmt::format (30 samples, 0.69%)</title><rect x="51.4797%" y="837" width="0.6882%" height="15" fill="rgb(240,56,43)" fg:x="2244" fg:w="30"/><text x="51.7297%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (28 samples, 0.64%)</title><rect x="51.5256%" y="821" width="0.6423%" height="15" fill="rgb(237,197,51)" fg:x="2246" fg:w="28"/><text x="51.7756%" y="831.50"></text></g><g><title>core::fmt::write (28 samples, 0.64%)</title><rect x="51.5256%" y="805" width="0.6423%" height="15" fill="rgb(241,162,44)" fg:x="2246" fg:w="28"/><text x="51.7756%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.02%)</title><rect x="52.1450%" y="789" width="0.0229%" height="15" fill="rgb(224,23,20)" fg:x="2273" fg:w="1"/><text x="52.3950%" y="799.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.02%)</title><rect x="52.1450%" y="773" width="0.0229%" height="15" fill="rgb(250,109,34)" fg:x="2273" fg:w="1"/><text x="52.3950%" y="783.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.02%)</title><rect x="52.1679%" y="837" width="0.0229%" height="15" fill="rgb(214,175,50)" fg:x="2274" fg:w="1"/><text x="52.4179%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.02%)</title><rect x="52.1909%" y="837" width="0.0229%" height="15" fill="rgb(213,182,5)" fg:x="2275" fg:w="1"/><text x="52.4409%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="52.1909%" y="821" width="0.0229%" height="15" fill="rgb(209,199,19)" fg:x="2275" fg:w="1"/><text x="52.4409%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="52.1909%" y="805" width="0.0229%" height="15" fill="rgb(236,224,42)" fg:x="2275" fg:w="1"/><text x="52.4409%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="52.1909%" y="789" width="0.0229%" height="15" fill="rgb(246,226,29)" fg:x="2275" fg:w="1"/><text x="52.4409%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="52.1909%" y="773" width="0.0229%" height="15" fill="rgb(227,223,11)" fg:x="2275" fg:w="1"/><text x="52.4409%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="52.1909%" y="757" width="0.0229%" height="15" fill="rgb(219,7,51)" fg:x="2275" fg:w="1"/><text x="52.4409%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="52.1909%" y="741" width="0.0229%" height="15" fill="rgb(245,167,10)" fg:x="2275" fg:w="1"/><text x="52.4409%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="52.2368%" y="725" width="0.0229%" height="15" fill="rgb(237,224,16)" fg:x="2277" fg:w="1"/><text x="52.4868%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="52.2368%" y="709" width="0.0229%" height="15" fill="rgb(226,132,13)" fg:x="2277" fg:w="1"/><text x="52.4868%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="52.2138%" y="773" width="0.0688%" height="15" fill="rgb(214,140,3)" fg:x="2276" fg:w="3"/><text x="52.4638%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="52.2138%" y="757" width="0.0688%" height="15" fill="rgb(221,177,4)" fg:x="2276" fg:w="3"/><text x="52.4638%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.07%)</title><rect x="52.2138%" y="741" width="0.0688%" height="15" fill="rgb(238,139,3)" fg:x="2276" fg:w="3"/><text x="52.4638%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="52.2597%" y="725" width="0.0229%" height="15" fill="rgb(216,17,39)" fg:x="2278" fg:w="1"/><text x="52.5097%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.09%)</title><rect x="52.2138%" y="789" width="0.0918%" height="15" fill="rgb(238,120,9)" fg:x="2276" fg:w="4"/><text x="52.4638%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="52.2826%" y="773" width="0.0229%" height="15" fill="rgb(244,92,53)" fg:x="2279" fg:w="1"/><text x="52.5326%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.11%)</title><rect x="52.2138%" y="837" width="0.1147%" height="15" fill="rgb(224,148,33)" fg:x="2276" fg:w="5"/><text x="52.4638%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.11%)</title><rect x="52.2138%" y="821" width="0.1147%" height="15" fill="rgb(243,6,36)" fg:x="2276" fg:w="5"/><text x="52.4638%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.11%)</title><rect x="52.2138%" y="805" width="0.1147%" height="15" fill="rgb(230,102,11)" fg:x="2276" fg:w="5"/><text x="52.4638%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="52.3056%" y="789" width="0.0229%" height="15" fill="rgb(234,148,36)" fg:x="2280" fg:w="1"/><text x="52.5556%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="52.3056%" y="773" width="0.0229%" height="15" fill="rgb(251,153,25)" fg:x="2280" fg:w="1"/><text x="52.5556%" y="783.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="52.3056%" y="757" width="0.0229%" height="15" fill="rgb(215,129,8)" fg:x="2280" fg:w="1"/><text x="52.5556%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="52.3056%" y="741" width="0.0229%" height="15" fill="rgb(224,128,35)" fg:x="2280" fg:w="1"/><text x="52.5556%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="52.3056%" y="725" width="0.0229%" height="15" fill="rgb(237,56,52)" fg:x="2280" fg:w="1"/><text x="52.5556%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="52.3056%" y="709" width="0.0229%" height="15" fill="rgb(234,213,19)" fg:x="2280" fg:w="1"/><text x="52.5556%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="52.3056%" y="693" width="0.0229%" height="15" fill="rgb(252,82,23)" fg:x="2280" fg:w="1"/><text x="52.5556%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="52.3056%" y="677" width="0.0229%" height="15" fill="rgb(254,201,21)" fg:x="2280" fg:w="1"/><text x="52.5556%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.07%)</title><rect x="52.3285%" y="677" width="0.0688%" height="15" fill="rgb(250,186,11)" fg:x="2281" fg:w="3"/><text x="52.5785%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="52.3744%" y="661" width="0.0229%" height="15" fill="rgb(211,174,5)" fg:x="2283" fg:w="1"/><text x="52.6244%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.14%)</title><rect x="52.3285%" y="725" width="0.1376%" height="15" fill="rgb(214,121,10)" fg:x="2281" fg:w="6"/><text x="52.5785%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.14%)</title><rect x="52.3285%" y="709" width="0.1376%" height="15" fill="rgb(241,66,2)" fg:x="2281" fg:w="6"/><text x="52.5785%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.14%)</title><rect x="52.3285%" y="693" width="0.1376%" height="15" fill="rgb(220,167,19)" fg:x="2281" fg:w="6"/><text x="52.5785%" y="703.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.07%)</title><rect x="52.3973%" y="677" width="0.0688%" height="15" fill="rgb(231,54,50)" fg:x="2284" fg:w="3"/><text x="52.6473%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="52.4203%" y="661" width="0.0459%" height="15" fill="rgb(239,217,53)" fg:x="2285" fg:w="2"/><text x="52.6703%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (8 samples, 0.18%)</title><rect x="52.3285%" y="757" width="0.1835%" height="15" fill="rgb(248,8,0)" fg:x="2281" fg:w="8"/><text x="52.5785%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (8 samples, 0.18%)</title><rect x="52.3285%" y="741" width="0.1835%" height="15" fill="rgb(229,118,37)" fg:x="2281" fg:w="8"/><text x="52.5785%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.05%)</title><rect x="52.4662%" y="725" width="0.0459%" height="15" fill="rgb(253,223,43)" fg:x="2287" fg:w="2"/><text x="52.7162%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="52.4662%" y="709" width="0.0459%" height="15" fill="rgb(211,77,36)" fg:x="2287" fg:w="2"/><text x="52.7162%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="52.4662%" y="693" width="0.0459%" height="15" fill="rgb(219,3,53)" fg:x="2287" fg:w="2"/><text x="52.7162%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="52.4662%" y="677" width="0.0459%" height="15" fill="rgb(244,45,42)" fg:x="2287" fg:w="2"/><text x="52.7162%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="52.5120%" y="757" width="0.0459%" height="15" fill="rgb(225,95,27)" fg:x="2289" fg:w="2"/><text x="52.7620%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="52.5120%" y="741" width="0.0459%" height="15" fill="rgb(207,74,8)" fg:x="2289" fg:w="2"/><text x="52.7620%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="52.5120%" y="725" width="0.0459%" height="15" fill="rgb(243,63,36)" fg:x="2289" fg:w="2"/><text x="52.7620%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.05%)</title><rect x="52.5120%" y="709" width="0.0459%" height="15" fill="rgb(211,180,12)" fg:x="2289" fg:w="2"/><text x="52.7620%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="52.5120%" y="693" width="0.0459%" height="15" fill="rgb(254,166,49)" fg:x="2289" fg:w="2"/><text x="52.7620%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.25%)</title><rect x="52.3285%" y="773" width="0.2524%" height="15" fill="rgb(205,19,0)" fg:x="2281" fg:w="11"/><text x="52.5785%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="52.5579%" y="757" width="0.0229%" height="15" fill="rgb(224,172,32)" fg:x="2291" fg:w="1"/><text x="52.8079%" y="767.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="52.5579%" y="741" width="0.0229%" height="15" fill="rgb(254,136,30)" fg:x="2291" fg:w="1"/><text x="52.8079%" y="751.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="52.5579%" y="725" width="0.0229%" height="15" fill="rgb(246,19,35)" fg:x="2291" fg:w="1"/><text x="52.8079%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="52.5579%" y="709" width="0.0229%" height="15" fill="rgb(219,24,36)" fg:x="2291" fg:w="1"/><text x="52.8079%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="52.5809%" y="741" width="0.0229%" height="15" fill="rgb(251,55,1)" fg:x="2292" fg:w="1"/><text x="52.8309%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="52.5809%" y="725" width="0.0229%" height="15" fill="rgb(218,117,39)" fg:x="2292" fg:w="1"/><text x="52.8309%" y="735.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (1 samples, 0.02%)</title><rect x="52.5809%" y="709" width="0.0229%" height="15" fill="rgb(248,169,11)" fg:x="2292" fg:w="1"/><text x="52.8309%" y="719.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="52.6038%" y="741" width="0.0229%" height="15" fill="rgb(244,40,44)" fg:x="2293" fg:w="1"/><text x="52.8538%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="52.6038%" y="725" width="0.0229%" height="15" fill="rgb(234,62,37)" fg:x="2293" fg:w="1"/><text x="52.8538%" y="735.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="52.6038%" y="709" width="0.0229%" height="15" fill="rgb(207,117,42)" fg:x="2293" fg:w="1"/><text x="52.8538%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="52.6038%" y="693" width="0.0229%" height="15" fill="rgb(213,43,2)" fg:x="2293" fg:w="1"/><text x="52.8538%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="52.6038%" y="677" width="0.0229%" height="15" fill="rgb(244,202,51)" fg:x="2293" fg:w="1"/><text x="52.8538%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="52.6038%" y="661" width="0.0229%" height="15" fill="rgb(253,174,46)" fg:x="2293" fg:w="1"/><text x="52.8538%" y="671.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (14 samples, 0.32%)</title><rect x="52.3285%" y="837" width="0.3212%" height="15" fill="rgb(251,23,1)" fg:x="2281" fg:w="14"/><text x="52.5785%" y="847.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (14 samples, 0.32%)</title><rect x="52.3285%" y="821" width="0.3212%" height="15" fill="rgb(253,26,1)" fg:x="2281" fg:w="14"/><text x="52.5785%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (14 samples, 0.32%)</title><rect x="52.3285%" y="805" width="0.3212%" height="15" fill="rgb(216,89,31)" fg:x="2281" fg:w="14"/><text x="52.5785%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.32%)</title><rect x="52.3285%" y="789" width="0.3212%" height="15" fill="rgb(209,109,5)" fg:x="2281" fg:w="14"/><text x="52.5785%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.07%)</title><rect x="52.5809%" y="773" width="0.0688%" height="15" fill="rgb(229,63,13)" fg:x="2292" fg:w="3"/><text x="52.8309%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.07%)</title><rect x="52.5809%" y="757" width="0.0688%" height="15" fill="rgb(238,137,54)" fg:x="2292" fg:w="3"/><text x="52.8309%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="52.6267%" y="741" width="0.0229%" height="15" fill="rgb(228,1,9)" fg:x="2294" fg:w="1"/><text x="52.8767%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="52.6267%" y="725" width="0.0229%" height="15" fill="rgb(249,120,48)" fg:x="2294" fg:w="1"/><text x="52.8767%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="52.6267%" y="709" width="0.0229%" height="15" fill="rgb(209,72,36)" fg:x="2294" fg:w="1"/><text x="52.8767%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="52.6267%" y="693" width="0.0229%" height="15" fill="rgb(247,98,49)" fg:x="2294" fg:w="1"/><text x="52.8767%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="52.6267%" y="677" width="0.0229%" height="15" fill="rgb(233,75,36)" fg:x="2294" fg:w="1"/><text x="52.8767%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="52.6267%" y="661" width="0.0229%" height="15" fill="rgb(225,14,24)" fg:x="2294" fg:w="1"/><text x="52.8767%" y="671.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="52.6267%" y="645" width="0.0229%" height="15" fill="rgb(237,193,20)" fg:x="2294" fg:w="1"/><text x="52.8767%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="52.6497%" y="773" width="0.0229%" height="15" fill="rgb(239,122,19)" fg:x="2295" fg:w="1"/><text x="52.8997%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.02%)</title><rect x="52.6497%" y="757" width="0.0229%" height="15" fill="rgb(231,220,10)" fg:x="2295" fg:w="1"/><text x="52.8997%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="52.6497%" y="741" width="0.0229%" height="15" fill="rgb(220,66,15)" fg:x="2295" fg:w="1"/><text x="52.8997%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="52.6497%" y="725" width="0.0229%" height="15" fill="rgb(215,171,52)" fg:x="2295" fg:w="1"/><text x="52.8997%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="52.6497%" y="709" width="0.0229%" height="15" fill="rgb(241,169,50)" fg:x="2295" fg:w="1"/><text x="52.8997%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="52.6497%" y="693" width="0.0229%" height="15" fill="rgb(236,189,0)" fg:x="2295" fg:w="1"/><text x="52.8997%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="52.6497%" y="677" width="0.0229%" height="15" fill="rgb(217,147,20)" fg:x="2295" fg:w="1"/><text x="52.8997%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="52.6726%" y="773" width="0.0229%" height="15" fill="rgb(206,188,39)" fg:x="2296" fg:w="1"/><text x="52.9226%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="52.6726%" y="757" width="0.0229%" height="15" fill="rgb(227,118,25)" fg:x="2296" fg:w="1"/><text x="52.9226%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="52.6726%" y="741" width="0.0229%" height="15" fill="rgb(248,171,40)" fg:x="2296" fg:w="1"/><text x="52.9226%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="52.6726%" y="725" width="0.0229%" height="15" fill="rgb(251,90,54)" fg:x="2296" fg:w="1"/><text x="52.9226%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="52.6726%" y="709" width="0.0229%" height="15" fill="rgb(234,11,46)" fg:x="2296" fg:w="1"/><text x="52.9226%" y="719.50"></text></g><g><title>hashbrown::map::make_insert_hash (4 samples, 0.09%)</title><rect x="52.6497%" y="789" width="0.0918%" height="15" fill="rgb(229,134,13)" fg:x="2295" fg:w="4"/><text x="52.8997%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.05%)</title><rect x="52.6956%" y="773" width="0.0459%" height="15" fill="rgb(223,129,3)" fg:x="2297" fg:w="2"/><text x="52.9456%" y="783.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.05%)</title><rect x="52.6956%" y="757" width="0.0459%" height="15" fill="rgb(221,124,13)" fg:x="2297" fg:w="2"/><text x="52.9456%" y="767.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="52.7185%" y="741" width="0.0229%" height="15" fill="rgb(234,3,18)" fg:x="2298" fg:w="1"/><text x="52.9685%" y="751.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="52.7185%" y="725" width="0.0229%" height="15" fill="rgb(249,199,20)" fg:x="2298" fg:w="1"/><text x="52.9685%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.05%)</title><rect x="52.7415%" y="789" width="0.0459%" height="15" fill="rgb(224,134,6)" fg:x="2299" fg:w="2"/><text x="52.9915%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="52.7415%" y="773" width="0.0459%" height="15" fill="rgb(254,83,26)" fg:x="2299" fg:w="2"/><text x="52.9915%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="52.7415%" y="757" width="0.0459%" height="15" fill="rgb(217,88,9)" fg:x="2299" fg:w="2"/><text x="52.9915%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="52.7415%" y="741" width="0.0459%" height="15" fill="rgb(225,73,2)" fg:x="2299" fg:w="2"/><text x="52.9915%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="52.7415%" y="725" width="0.0459%" height="15" fill="rgb(226,44,39)" fg:x="2299" fg:w="2"/><text x="52.9915%" y="735.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="52.7644%" y="709" width="0.0229%" height="15" fill="rgb(228,53,17)" fg:x="2300" fg:w="1"/><text x="53.0144%" y="719.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (7 samples, 0.16%)</title><rect x="52.6497%" y="837" width="0.1606%" height="15" fill="rgb(212,27,27)" fg:x="2295" fg:w="7"/><text x="52.8997%" y="847.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (7 samples, 0.16%)</title><rect x="52.6497%" y="821" width="0.1606%" height="15" fill="rgb(241,50,6)" fg:x="2295" fg:w="7"/><text x="52.8997%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.16%)</title><rect x="52.6497%" y="805" width="0.1606%" height="15" fill="rgb(225,28,51)" fg:x="2295" fg:w="7"/><text x="52.8997%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="52.7873%" y="789" width="0.0229%" height="15" fill="rgb(215,33,16)" fg:x="2301" fg:w="1"/><text x="53.0373%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="52.7873%" y="773" width="0.0229%" height="15" fill="rgb(243,40,39)" fg:x="2301" fg:w="1"/><text x="53.0373%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="52.7873%" y="757" width="0.0229%" height="15" fill="rgb(225,11,42)" fg:x="2301" fg:w="1"/><text x="53.0373%" y="767.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="52.7873%" y="741" width="0.0229%" height="15" fill="rgb(241,220,38)" fg:x="2301" fg:w="1"/><text x="53.0373%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="52.8103%" y="757" width="0.0459%" height="15" fill="rgb(244,52,35)" fg:x="2302" fg:w="2"/><text x="53.0603%" y="767.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="52.8332%" y="741" width="0.0229%" height="15" fill="rgb(246,42,46)" fg:x="2303" fg:w="1"/><text x="53.0832%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="52.8332%" y="725" width="0.0229%" height="15" fill="rgb(205,184,13)" fg:x="2303" fg:w="1"/><text x="53.0832%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (10 samples, 0.23%)</title><rect x="52.8562%" y="693" width="0.2294%" height="15" fill="rgb(209,48,36)" fg:x="2304" fg:w="10"/><text x="53.1062%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.11%)</title><rect x="52.9709%" y="677" width="0.1147%" height="15" fill="rgb(244,34,51)" fg:x="2309" fg:w="5"/><text x="53.2209%" y="687.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="53.0167%" y="661" width="0.0688%" height="15" fill="rgb(221,107,33)" fg:x="2311" fg:w="3"/><text x="53.2667%" y="671.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (3 samples, 0.07%)</title><rect x="53.0167%" y="645" width="0.0688%" height="15" fill="rgb(224,203,12)" fg:x="2311" fg:w="3"/><text x="53.2667%" y="655.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (3 samples, 0.07%)</title><rect x="53.0167%" y="629" width="0.0688%" height="15" fill="rgb(230,215,18)" fg:x="2311" fg:w="3"/><text x="53.2667%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.07%)</title><rect x="53.2232%" y="613" width="0.0688%" height="15" fill="rgb(206,185,35)" fg:x="2320" fg:w="3"/><text x="53.4732%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.07%)</title><rect x="53.2232%" y="597" width="0.0688%" height="15" fill="rgb(228,140,34)" fg:x="2320" fg:w="3"/><text x="53.4732%" y="607.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.07%)</title><rect x="53.2232%" y="581" width="0.0688%" height="15" fill="rgb(208,93,13)" fg:x="2320" fg:w="3"/><text x="53.4732%" y="591.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.05%)</title><rect x="53.2920%" y="613" width="0.0459%" height="15" fill="rgb(221,193,39)" fg:x="2323" fg:w="2"/><text x="53.5420%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.05%)</title><rect x="53.2920%" y="597" width="0.0459%" height="15" fill="rgb(241,132,34)" fg:x="2323" fg:w="2"/><text x="53.5420%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (22 samples, 0.50%)</title><rect x="52.8562%" y="741" width="0.5047%" height="15" fill="rgb(221,141,10)" fg:x="2304" fg:w="22"/><text x="53.1062%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (22 samples, 0.50%)</title><rect x="52.8562%" y="725" width="0.5047%" height="15" fill="rgb(226,90,31)" fg:x="2304" fg:w="22"/><text x="53.1062%" y="735.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (22 samples, 0.50%)</title><rect x="52.8562%" y="709" width="0.5047%" height="15" fill="rgb(243,75,5)" fg:x="2304" fg:w="22"/><text x="53.1062%" y="719.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (12 samples, 0.28%)</title><rect x="53.0856%" y="693" width="0.2753%" height="15" fill="rgb(227,156,21)" fg:x="2314" fg:w="12"/><text x="53.3356%" y="703.50"></text></g><g><title>&lt;&amp;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (12 samples, 0.28%)</title><rect x="53.0856%" y="677" width="0.2753%" height="15" fill="rgb(250,195,8)" fg:x="2314" fg:w="12"/><text x="53.3356%" y="687.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (12 samples, 0.28%)</title><rect x="53.0856%" y="661" width="0.2753%" height="15" fill="rgb(220,134,5)" fg:x="2314" fg:w="12"/><text x="53.3356%" y="671.50"></text></g><g><title>core::str::pattern::StrSearcher::new (12 samples, 0.28%)</title><rect x="53.0856%" y="645" width="0.2753%" height="15" fill="rgb(246,106,34)" fg:x="2314" fg:w="12"/><text x="53.3356%" y="655.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (6 samples, 0.14%)</title><rect x="53.2232%" y="629" width="0.1376%" height="15" fill="rgb(205,1,4)" fg:x="2320" fg:w="6"/><text x="53.4732%" y="639.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.02%)</title><rect x="53.3379%" y="613" width="0.0229%" height="15" fill="rgb(224,151,29)" fg:x="2325" fg:w="1"/><text x="53.5879%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.60%)</title><rect x="52.8103%" y="821" width="0.5965%" height="15" fill="rgb(251,196,0)" fg:x="2302" fg:w="26"/><text x="53.0603%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (26 samples, 0.60%)</title><rect x="52.8103%" y="805" width="0.5965%" height="15" fill="rgb(212,127,0)" fg:x="2302" fg:w="26"/><text x="53.0603%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.60%)</title><rect x="52.8103%" y="789" width="0.5965%" height="15" fill="rgb(236,71,53)" fg:x="2302" fg:w="26"/><text x="53.0603%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.60%)</title><rect x="52.8103%" y="773" width="0.5965%" height="15" fill="rgb(227,99,0)" fg:x="2302" fg:w="26"/><text x="53.0603%" y="783.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (24 samples, 0.55%)</title><rect x="52.8562%" y="757" width="0.5506%" height="15" fill="rgb(239,89,21)" fg:x="2304" fg:w="24"/><text x="53.1062%" y="767.50"></text></g><g><title>y2021::d12::main2::traverse::{{closure}} (2 samples, 0.05%)</title><rect x="53.3609%" y="741" width="0.0459%" height="15" fill="rgb(243,122,19)" fg:x="2326" fg:w="2"/><text x="53.6109%" y="751.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="53.4067%" y="741" width="0.0229%" height="15" fill="rgb(229,192,45)" fg:x="2328" fg:w="1"/><text x="53.6567%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.02%)</title><rect x="53.4067%" y="725" width="0.0229%" height="15" fill="rgb(235,165,35)" fg:x="2328" fg:w="1"/><text x="53.6567%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="53.4067%" y="709" width="0.0229%" height="15" fill="rgb(253,202,0)" fg:x="2328" fg:w="1"/><text x="53.6567%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.02%)</title><rect x="53.4067%" y="693" width="0.0229%" height="15" fill="rgb(235,51,20)" fg:x="2328" fg:w="1"/><text x="53.6567%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.02%)</title><rect x="53.4067%" y="677" width="0.0229%" height="15" fill="rgb(218,95,46)" fg:x="2328" fg:w="1"/><text x="53.6567%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.05%)</title><rect x="53.4067%" y="821" width="0.0459%" height="15" fill="rgb(212,81,10)" fg:x="2328" fg:w="2"/><text x="53.6567%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.05%)</title><rect x="53.4067%" y="805" width="0.0459%" height="15" fill="rgb(240,59,0)" fg:x="2328" fg:w="2"/><text x="53.6567%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.05%)</title><rect x="53.4067%" y="789" width="0.0459%" height="15" fill="rgb(212,191,42)" fg:x="2328" fg:w="2"/><text x="53.6567%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.05%)</title><rect x="53.4067%" y="773" width="0.0459%" height="15" fill="rgb(233,140,3)" fg:x="2328" fg:w="2"/><text x="53.6567%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="53.4067%" y="757" width="0.0459%" height="15" fill="rgb(215,69,23)" fg:x="2328" fg:w="2"/><text x="53.6567%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="53.4297%" y="741" width="0.0229%" height="15" fill="rgb(240,202,20)" fg:x="2329" fg:w="1"/><text x="53.6797%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="53.4297%" y="725" width="0.0229%" height="15" fill="rgb(209,146,50)" fg:x="2329" fg:w="1"/><text x="53.6797%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="53.4297%" y="709" width="0.0229%" height="15" fill="rgb(253,102,54)" fg:x="2329" fg:w="1"/><text x="53.6797%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="53.4297%" y="693" width="0.0229%" height="15" fill="rgb(250,173,47)" fg:x="2329" fg:w="1"/><text x="53.6797%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="53.4297%" y="677" width="0.0229%" height="15" fill="rgb(232,142,7)" fg:x="2329" fg:w="1"/><text x="53.6797%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="53.4297%" y="661" width="0.0229%" height="15" fill="rgb(230,157,47)" fg:x="2329" fg:w="1"/><text x="53.6797%" y="671.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="53.4297%" y="645" width="0.0229%" height="15" fill="rgb(214,177,35)" fg:x="2329" fg:w="1"/><text x="53.6797%" y="655.50"></text></g><g><title>y2021::d12::main2::run (1,648 samples, 37.81%)</title><rect x="15.7146%" y="1093" width="37.8068%" height="15" fill="rgb(234,119,46)" fg:x="685" fg:w="1648"/><text x="15.9646%" y="1103.50">y2021::d12::main2::run</text></g><g><title>y2021::d12::main2::p02 (1,600 samples, 36.71%)</title><rect x="16.8158%" y="1077" width="36.7057%" height="15" fill="rgb(241,180,50)" fg:x="733" fg:w="1600"/><text x="17.0658%" y="1087.50">y2021::d12::main2::p02</text></g><g><title>y2021::d12::main2::traverse (1,510 samples, 34.64%)</title><rect x="18.8805%" y="1061" width="34.6410%" height="15" fill="rgb(221,54,25)" fg:x="823" fg:w="1510"/><text x="19.1305%" y="1071.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,510 samples, 34.64%)</title><rect x="18.8805%" y="1045" width="34.6410%" height="15" fill="rgb(209,157,44)" fg:x="823" fg:w="1510"/><text x="19.1305%" y="1055.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,510 samples, 34.64%)</title><rect x="18.8805%" y="1029" width="34.6410%" height="15" fill="rgb(246,115,41)" fg:x="823" fg:w="1510"/><text x="19.1305%" y="1039.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,508 samples, 34.60%)</title><rect x="18.9264%" y="1013" width="34.5951%" height="15" fill="rgb(229,86,1)" fg:x="825" fg:w="1508"/><text x="19.1764%" y="1023.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,505 samples, 34.53%)</title><rect x="18.9952%" y="997" width="34.5263%" height="15" fill="rgb(240,108,53)" fg:x="828" fg:w="1505"/><text x="19.2452%" y="1007.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,502 samples, 34.46%)</title><rect x="19.0640%" y="981" width="34.4574%" height="15" fill="rgb(227,134,2)" fg:x="831" fg:w="1502"/><text x="19.3140%" y="991.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,489 samples, 34.16%)</title><rect x="19.3622%" y="965" width="34.1592%" height="15" fill="rgb(213,129,25)" fg:x="844" fg:w="1489"/><text x="19.6122%" y="975.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,464 samples, 33.59%)</title><rect x="19.9358%" y="949" width="33.5857%" height="15" fill="rgb(226,35,21)" fg:x="869" fg:w="1464"/><text x="20.1858%" y="959.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,380 samples, 31.66%)</title><rect x="21.8628%" y="933" width="31.6586%" height="15" fill="rgb(208,129,26)" fg:x="953" fg:w="1380"/><text x="22.1128%" y="943.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (1,112 samples, 25.51%)</title><rect x="28.0110%" y="917" width="25.5104%" height="15" fill="rgb(224,83,6)" fg:x="1221" fg:w="1112"/><text x="28.2610%" y="927.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (883 samples, 20.26%)</title><rect x="33.2645%" y="901" width="20.2569%" height="15" fill="rgb(227,52,39)" fg:x="1450" fg:w="883"/><text x="33.5145%" y="911.50">y2021::d12::main2::traverse</text></g><g><title>y2021::d12::main2::traverse (623 samples, 14.29%)</title><rect x="39.2292%" y="885" width="14.2923%" height="15" fill="rgb(241,30,17)" fg:x="1710" fg:w="623"/><text x="39.4792%" y="895.50">y2021::d12::main2::tra..</text></g><g><title>y2021::d12::main2::traverse (399 samples, 9.15%)</title><rect x="44.3680%" y="869" width="9.1535%" height="15" fill="rgb(246,186,42)" fg:x="1934" fg:w="399"/><text x="44.6180%" y="879.50">y2021::d12::m..</text></g><g><title>y2021::d12::main2::traverse (175 samples, 4.01%)</title><rect x="49.5068%" y="853" width="4.0147%" height="15" fill="rgb(221,169,15)" fg:x="2158" fg:w="175"/><text x="49.7568%" y="863.50">y202..</text></g><g><title>y2021::d12::main2::traverse (31 samples, 0.71%)</title><rect x="52.8103%" y="837" width="0.7112%" height="15" fill="rgb(235,108,21)" fg:x="2302" fg:w="31"/><text x="53.0603%" y="847.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (3 samples, 0.07%)</title><rect x="53.4526%" y="821" width="0.0688%" height="15" fill="rgb(219,148,30)" fg:x="2330" fg:w="3"/><text x="53.7026%" y="831.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (3 samples, 0.07%)</title><rect x="53.4526%" y="805" width="0.0688%" height="15" fill="rgb(220,109,5)" fg:x="2330" fg:w="3"/><text x="53.7026%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.07%)</title><rect x="53.4526%" y="789" width="0.0688%" height="15" fill="rgb(213,203,48)" fg:x="2330" fg:w="3"/><text x="53.7026%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.07%)</title><rect x="53.4526%" y="773" width="0.0688%" height="15" fill="rgb(244,71,33)" fg:x="2330" fg:w="3"/><text x="53.7026%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.07%)</title><rect x="53.4526%" y="757" width="0.0688%" height="15" fill="rgb(209,23,2)" fg:x="2330" fg:w="3"/><text x="53.7026%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.07%)</title><rect x="53.4526%" y="741" width="0.0688%" height="15" fill="rgb(219,97,7)" fg:x="2330" fg:w="3"/><text x="53.7026%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.07%)</title><rect x="53.4526%" y="725" width="0.0688%" height="15" fill="rgb(216,161,23)" fg:x="2330" fg:w="3"/><text x="53.7026%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.07%)</title><rect x="53.4526%" y="709" width="0.0688%" height="15" fill="rgb(207,45,42)" fg:x="2330" fg:w="3"/><text x="53.7026%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.07%)</title><rect x="53.4526%" y="693" width="0.0688%" height="15" fill="rgb(241,61,4)" fg:x="2330" fg:w="3"/><text x="53.7026%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.07%)</title><rect x="53.4526%" y="677" width="0.0688%" height="15" fill="rgb(236,170,1)" fg:x="2330" fg:w="3"/><text x="53.7026%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.07%)</title><rect x="53.4526%" y="661" width="0.0688%" height="15" fill="rgb(239,72,5)" fg:x="2330" fg:w="3"/><text x="53.7026%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.07%)</title><rect x="53.4526%" y="645" width="0.0688%" height="15" fill="rgb(214,13,50)" fg:x="2330" fg:w="3"/><text x="53.7026%" y="655.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.07%)</title><rect x="53.4526%" y="629" width="0.0688%" height="15" fill="rgb(224,88,9)" fg:x="2330" fg:w="3"/><text x="53.7026%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="53.5214%" y="1029" width="0.0229%" height="15" fill="rgb(238,192,34)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="53.5214%" y="1013" width="0.0229%" height="15" fill="rgb(217,203,50)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="53.5214%" y="997" width="0.0229%" height="15" fill="rgb(241,123,32)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="53.5214%" y="981" width="0.0229%" height="15" fill="rgb(248,151,39)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="53.5214%" y="965" width="0.0229%" height="15" fill="rgb(208,89,6)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="53.5214%" y="949" width="0.0229%" height="15" fill="rgb(254,43,26)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="53.5214%" y="933" width="0.0229%" height="15" fill="rgb(216,158,13)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="53.5214%" y="917" width="0.0229%" height="15" fill="rgb(212,47,37)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="927.50"></text></g><g><title>y2021::d13::main::parse_input::{{closure}} (1 samples, 0.02%)</title><rect x="53.5214%" y="901" width="0.0229%" height="15" fill="rgb(254,16,10)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="53.5214%" y="885" width="0.0229%" height="15" fill="rgb(223,228,16)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="53.5214%" y="869" width="0.0229%" height="15" fill="rgb(249,108,50)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="53.5214%" y="853" width="0.0229%" height="15" fill="rgb(208,220,5)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="53.5214%" y="837" width="0.0229%" height="15" fill="rgb(217,89,48)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="53.5214%" y="821" width="0.0229%" height="15" fill="rgb(212,113,41)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.02%)</title><rect x="53.5214%" y="805" width="0.0229%" height="15" fill="rgb(231,127,5)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="53.5214%" y="789" width="0.0229%" height="15" fill="rgb(217,141,17)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="53.5214%" y="773" width="0.0229%" height="15" fill="rgb(245,125,54)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="53.5214%" y="757" width="0.0229%" height="15" fill="rgb(248,125,3)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="53.5214%" y="741" width="0.0229%" height="15" fill="rgb(236,119,51)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="53.5214%" y="725" width="0.0229%" height="15" fill="rgb(239,99,8)" fg:x="2333" fg:w="1"/><text x="53.7714%" y="735.50"></text></g><g><title>y2021::d13::main::p01 (2 samples, 0.05%)</title><rect x="53.5214%" y="1077" width="0.0459%" height="15" fill="rgb(224,228,4)" fg:x="2333" fg:w="2"/><text x="53.7714%" y="1087.50"></text></g><g><title>y2021::d13::main::parse_input (2 samples, 0.05%)</title><rect x="53.5214%" y="1061" width="0.0459%" height="15" fill="rgb(220,131,45)" fg:x="2333" fg:w="2"/><text x="53.7714%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="53.5214%" y="1045" width="0.0459%" height="15" fill="rgb(215,62,5)" fg:x="2333" fg:w="2"/><text x="53.7714%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="53.5444%" y="1029" width="0.0229%" height="15" fill="rgb(253,12,24)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.5444%" y="1013" width="0.0229%" height="15" fill="rgb(248,120,50)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="1023.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.5444%" y="997" width="0.0229%" height="15" fill="rgb(245,194,10)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="1007.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.5444%" y="981" width="0.0229%" height="15" fill="rgb(241,149,38)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="53.5444%" y="965" width="0.0229%" height="15" fill="rgb(219,215,7)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.5444%" y="949" width="0.0229%" height="15" fill="rgb(208,120,31)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.5444%" y="933" width="0.0229%" height="15" fill="rgb(244,30,8)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="53.5444%" y="917" width="0.0229%" height="15" fill="rgb(238,35,44)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="53.5444%" y="901" width="0.0229%" height="15" fill="rgb(243,218,37)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="53.5444%" y="885" width="0.0229%" height="15" fill="rgb(218,169,10)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="53.5444%" y="869" width="0.0229%" height="15" fill="rgb(221,144,10)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1 samples, 0.02%)</title><rect x="53.5444%" y="853" width="0.0229%" height="15" fill="rgb(226,41,38)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="53.5444%" y="837" width="0.0229%" height="15" fill="rgb(228,3,1)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="847.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="53.5444%" y="821" width="0.0229%" height="15" fill="rgb(209,129,12)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.5444%" y="805" width="0.0229%" height="15" fill="rgb(213,136,33)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.5444%" y="789" width="0.0229%" height="15" fill="rgb(209,181,29)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.5444%" y="773" width="0.0229%" height="15" fill="rgb(234,173,18)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="53.5444%" y="757" width="0.0229%" height="15" fill="rgb(227,73,47)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="53.5444%" y="741" width="0.0229%" height="15" fill="rgb(234,9,34)" fg:x="2334" fg:w="1"/><text x="53.7944%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="53.5673%" y="853" width="0.0229%" height="15" fill="rgb(235,172,15)" fg:x="2335" fg:w="1"/><text x="53.8173%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="53.5673%" y="837" width="0.0229%" height="15" fill="rgb(245,61,2)" fg:x="2335" fg:w="1"/><text x="53.8173%" y="847.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1 samples, 0.02%)</title><rect x="53.5673%" y="821" width="0.0229%" height="15" fill="rgb(238,39,47)" fg:x="2335" fg:w="1"/><text x="53.8173%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.02%)</title><rect x="53.5673%" y="805" width="0.0229%" height="15" fill="rgb(234,37,24)" fg:x="2335" fg:w="1"/><text x="53.8173%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.02%)</title><rect x="53.5673%" y="789" width="0.0229%" height="15" fill="rgb(248,223,24)" fg:x="2335" fg:w="1"/><text x="53.8173%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="53.5673%" y="1061" width="0.0459%" height="15" fill="rgb(223,12,15)" fg:x="2335" fg:w="2"/><text x="53.8173%" y="1071.50"></text></g><g><title>y2021::d13::main::p02::{{closure}} (2 samples, 0.05%)</title><rect x="53.5673%" y="1045" width="0.0459%" height="15" fill="rgb(249,6,3)" fg:x="2335" fg:w="2"/><text x="53.8173%" y="1055.50"></text></g><g><title>y2021::d13::main::fold_points (2 samples, 0.05%)</title><rect x="53.5673%" y="1029" width="0.0459%" height="15" fill="rgb(237,105,33)" fg:x="2335" fg:w="2"/><text x="53.8173%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.05%)</title><rect x="53.5673%" y="1013" width="0.0459%" height="15" fill="rgb(252,208,35)" fg:x="2335" fg:w="2"/><text x="53.8173%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="53.5673%" y="997" width="0.0459%" height="15" fill="rgb(215,181,35)" fg:x="2335" fg:w="2"/><text x="53.8173%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.05%)</title><rect x="53.5673%" y="981" width="0.0459%" height="15" fill="rgb(246,212,3)" fg:x="2335" fg:w="2"/><text x="53.8173%" y="991.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.05%)</title><rect x="53.5673%" y="965" width="0.0459%" height="15" fill="rgb(247,156,24)" fg:x="2335" fg:w="2"/><text x="53.8173%" y="975.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.05%)</title><rect x="53.5673%" y="949" width="0.0459%" height="15" fill="rgb(248,9,31)" fg:x="2335" fg:w="2"/><text x="53.8173%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.05%)</title><rect x="53.5673%" y="933" width="0.0459%" height="15" fill="rgb(234,26,45)" fg:x="2335" fg:w="2"/><text x="53.8173%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="53.5673%" y="917" width="0.0459%" height="15" fill="rgb(249,11,32)" fg:x="2335" fg:w="2"/><text x="53.8173%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="53.5673%" y="901" width="0.0459%" height="15" fill="rgb(249,162,33)" fg:x="2335" fg:w="2"/><text x="53.8173%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="53.5673%" y="885" width="0.0459%" height="15" fill="rgb(232,4,32)" fg:x="2335" fg:w="2"/><text x="53.8173%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.05%)</title><rect x="53.5673%" y="869" width="0.0459%" height="15" fill="rgb(212,5,45)" fg:x="2335" fg:w="2"/><text x="53.8173%" y="879.50"></text></g><g><title>y2021::d13::main::fold_points::{{closure}} (1 samples, 0.02%)</title><rect x="53.5903%" y="853" width="0.0229%" height="15" fill="rgb(227,95,13)" fg:x="2336" fg:w="1"/><text x="53.8403%" y="863.50"></text></g><g><title>y2021::d13::main::fold_points::{{closure}} (1 samples, 0.02%)</title><rect x="53.5903%" y="837" width="0.0229%" height="15" fill="rgb(223,205,10)" fg:x="2336" fg:w="1"/><text x="53.8403%" y="847.50"></text></g><g><title>y2021::d13::main::run (5 samples, 0.11%)</title><rect x="53.5214%" y="1093" width="0.1147%" height="15" fill="rgb(222,178,8)" fg:x="2333" fg:w="5"/><text x="53.7714%" y="1103.50"></text></g><g><title>y2021::d13::main::p02 (3 samples, 0.07%)</title><rect x="53.5673%" y="1077" width="0.0688%" height="15" fill="rgb(216,13,22)" fg:x="2335" fg:w="3"/><text x="53.8173%" y="1087.50"></text></g><g><title>y2021::d13::main::parse_input (1 samples, 0.02%)</title><rect x="53.6132%" y="1061" width="0.0229%" height="15" fill="rgb(240,167,12)" fg:x="2337" fg:w="1"/><text x="53.8632%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.02%)</title><rect x="53.6132%" y="1045" width="0.0229%" height="15" fill="rgb(235,68,35)" fg:x="2337" fg:w="1"/><text x="53.8632%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="53.6132%" y="1029" width="0.0229%" height="15" fill="rgb(253,40,27)" fg:x="2337" fg:w="1"/><text x="53.8632%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.6132%" y="1013" width="0.0229%" height="15" fill="rgb(214,19,28)" fg:x="2337" fg:w="1"/><text x="53.8632%" y="1023.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.6132%" y="997" width="0.0229%" height="15" fill="rgb(210,167,45)" fg:x="2337" fg:w="1"/><text x="53.8632%" y="1007.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="53.6132%" y="981" width="0.0229%" height="15" fill="rgb(232,97,40)" fg:x="2337" fg:w="1"/><text x="53.8632%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="53.6132%" y="965" width="0.0229%" height="15" fill="rgb(250,35,23)" fg:x="2337" fg:w="1"/><text x="53.8632%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.6132%" y="949" width="0.0229%" height="15" fill="rgb(248,47,53)" fg:x="2337" fg:w="1"/><text x="53.8632%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.6132%" y="933" width="0.0229%" height="15" fill="rgb(226,58,50)" fg:x="2337" fg:w="1"/><text x="53.8632%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="53.6132%" y="917" width="0.0229%" height="15" fill="rgb(217,105,26)" fg:x="2337" fg:w="1"/><text x="53.8632%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="53.6132%" y="901" width="0.0229%" height="15" fill="rgb(208,64,1)" fg:x="2337" fg:w="1"/><text x="53.8632%" y="911.50"></text></g><g><title>y2021::d13::main::parse_input::{{closure}} (1 samples, 0.02%)</title><rect x="53.6132%" y="885" width="0.0229%" height="15" fill="rgb(214,80,1)" fg:x="2337" fg:w="1"/><text x="53.8632%" y="895.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 0.02%)</title><rect x="53.6132%" y="869" width="0.0229%" height="15" fill="rgb(206,175,26)" fg:x="2337" fg:w="1"/><text x="53.8632%" y="879.50"></text></g><g><title>&lt;y2021::types::point::Point as core::str::traits::FromStr&gt;::from_str (1 samples, 0.02%)</title><rect x="53.6132%" y="853" width="0.0229%" height="15" fill="rgb(235,156,37)" fg:x="2337" fg:w="1"/><text x="53.8632%" y="863.50"></text></g><g><title>y2021::d14::main::p01 (1 samples, 0.02%)</title><rect x="53.6362%" y="1077" width="0.0229%" height="15" fill="rgb(213,100,9)" fg:x="2338" fg:w="1"/><text x="53.8862%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="53.6362%" y="1061" width="0.0229%" height="15" fill="rgb(241,15,13)" fg:x="2338" fg:w="1"/><text x="53.8862%" y="1071.50"></text></g><g><title>y2021::d14::main::p01::{{closure}} (1 samples, 0.02%)</title><rect x="53.6362%" y="1045" width="0.0229%" height="15" fill="rgb(205,97,43)" fg:x="2338" fg:w="1"/><text x="53.8862%" y="1055.50"></text></g><g><title>y2021::d14::main::better_step (1 samples, 0.02%)</title><rect x="53.6362%" y="1029" width="0.0229%" height="15" fill="rgb(216,106,32)" fg:x="2338" fg:w="1"/><text x="53.8862%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.6362%" y="1013" width="0.0229%" height="15" fill="rgb(226,200,8)" fg:x="2338" fg:w="1"/><text x="53.8862%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.6362%" y="997" width="0.0229%" height="15" fill="rgb(244,54,29)" fg:x="2338" fg:w="1"/><text x="53.8862%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.6362%" y="981" width="0.0229%" height="15" fill="rgb(252,169,12)" fg:x="2338" fg:w="1"/><text x="53.8862%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="53.6362%" y="965" width="0.0229%" height="15" fill="rgb(231,199,11)" fg:x="2338" fg:w="1"/><text x="53.8862%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="53.6362%" y="949" width="0.0229%" height="15" fill="rgb(233,191,18)" fg:x="2338" fg:w="1"/><text x="53.8862%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="53.6362%" y="933" width="0.0229%" height="15" fill="rgb(215,83,47)" fg:x="2338" fg:w="1"/><text x="53.8862%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (1 samples, 0.02%)</title><rect x="53.6362%" y="917" width="0.0229%" height="15" fill="rgb(251,67,19)" fg:x="2338" fg:w="1"/><text x="53.8862%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="53.6362%" y="901" width="0.0229%" height="15" fill="rgb(240,7,20)" fg:x="2338" fg:w="1"/><text x="53.8862%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="53.6362%" y="885" width="0.0229%" height="15" fill="rgb(210,150,26)" fg:x="2338" fg:w="1"/><text x="53.8862%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="53.6820%" y="677" width="0.0229%" height="15" fill="rgb(228,75,42)" fg:x="2340" fg:w="1"/><text x="53.9320%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="53.6820%" y="661" width="0.0229%" height="15" fill="rgb(237,134,48)" fg:x="2340" fg:w="1"/><text x="53.9320%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (3 samples, 0.07%)</title><rect x="53.6591%" y="917" width="0.0688%" height="15" fill="rgb(205,80,50)" fg:x="2339" fg:w="3"/><text x="53.9091%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.07%)</title><rect x="53.6591%" y="901" width="0.0688%" height="15" fill="rgb(217,74,48)" fg:x="2339" fg:w="3"/><text x="53.9091%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.07%)</title><rect x="53.6591%" y="885" width="0.0688%" height="15" fill="rgb(205,82,50)" fg:x="2339" fg:w="3"/><text x="53.9091%" y="895.50"></text></g><g><title>y2021::d14::main::better_step::{{closure}} (3 samples, 0.07%)</title><rect x="53.6591%" y="869" width="0.0688%" height="15" fill="rgb(228,1,33)" fg:x="2339" fg:w="3"/><text x="53.9091%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.07%)</title><rect x="53.6591%" y="853" width="0.0688%" height="15" fill="rgb(214,50,23)" fg:x="2339" fg:w="3"/><text x="53.9091%" y="863.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.07%)</title><rect x="53.6591%" y="837" width="0.0688%" height="15" fill="rgb(210,62,9)" fg:x="2339" fg:w="3"/><text x="53.9091%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (3 samples, 0.07%)</title><rect x="53.6591%" y="821" width="0.0688%" height="15" fill="rgb(210,104,37)" fg:x="2339" fg:w="3"/><text x="53.9091%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.07%)</title><rect x="53.6591%" y="805" width="0.0688%" height="15" fill="rgb(232,104,43)" fg:x="2339" fg:w="3"/><text x="53.9091%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.07%)</title><rect x="53.6591%" y="789" width="0.0688%" height="15" fill="rgb(244,52,6)" fg:x="2339" fg:w="3"/><text x="53.9091%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.07%)</title><rect x="53.6591%" y="773" width="0.0688%" height="15" fill="rgb(211,174,52)" fg:x="2339" fg:w="3"/><text x="53.9091%" y="783.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (3 samples, 0.07%)</title><rect x="53.6591%" y="757" width="0.0688%" height="15" fill="rgb(229,48,4)" fg:x="2339" fg:w="3"/><text x="53.9091%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.07%)</title><rect x="53.6591%" y="741" width="0.0688%" height="15" fill="rgb(205,155,16)" fg:x="2339" fg:w="3"/><text x="53.9091%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="53.6820%" y="725" width="0.0459%" height="15" fill="rgb(211,141,53)" fg:x="2340" fg:w="2"/><text x="53.9320%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="53.6820%" y="709" width="0.0459%" height="15" fill="rgb(240,148,11)" fg:x="2340" fg:w="2"/><text x="53.9320%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="53.6820%" y="693" width="0.0459%" height="15" fill="rgb(214,45,23)" fg:x="2340" fg:w="2"/><text x="53.9320%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="53.7050%" y="677" width="0.0229%" height="15" fill="rgb(248,74,26)" fg:x="2341" fg:w="1"/><text x="53.9550%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="53.7050%" y="661" width="0.0229%" height="15" fill="rgb(218,121,16)" fg:x="2341" fg:w="1"/><text x="53.9550%" y="671.50"></text></g><g><title>y2021::d14::main::run (5 samples, 0.11%)</title><rect x="53.6362%" y="1093" width="0.1147%" height="15" fill="rgb(218,10,47)" fg:x="2338" fg:w="5"/><text x="53.8862%" y="1103.50"></text></g><g><title>y2021::d14::main::p02 (4 samples, 0.09%)</title><rect x="53.6591%" y="1077" width="0.0918%" height="15" fill="rgb(227,99,14)" fg:x="2339" fg:w="4"/><text x="53.9091%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.09%)</title><rect x="53.6591%" y="1061" width="0.0918%" height="15" fill="rgb(229,83,46)" fg:x="2339" fg:w="4"/><text x="53.9091%" y="1071.50"></text></g><g><title>y2021::d14::main::p02::{{closure}} (4 samples, 0.09%)</title><rect x="53.6591%" y="1045" width="0.0918%" height="15" fill="rgb(228,25,1)" fg:x="2339" fg:w="4"/><text x="53.9091%" y="1055.50"></text></g><g><title>y2021::d14::main::better_step (4 samples, 0.09%)</title><rect x="53.6591%" y="1029" width="0.0918%" height="15" fill="rgb(252,190,15)" fg:x="2339" fg:w="4"/><text x="53.9091%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.09%)</title><rect x="53.6591%" y="1013" width="0.0918%" height="15" fill="rgb(213,103,51)" fg:x="2339" fg:w="4"/><text x="53.9091%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.09%)</title><rect x="53.6591%" y="997" width="0.0918%" height="15" fill="rgb(220,38,44)" fg:x="2339" fg:w="4"/><text x="53.9091%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.09%)</title><rect x="53.6591%" y="981" width="0.0918%" height="15" fill="rgb(210,45,26)" fg:x="2339" fg:w="4"/><text x="53.9091%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.09%)</title><rect x="53.6591%" y="965" width="0.0918%" height="15" fill="rgb(205,95,48)" fg:x="2339" fg:w="4"/><text x="53.9091%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.09%)</title><rect x="53.6591%" y="949" width="0.0918%" height="15" fill="rgb(225,179,37)" fg:x="2339" fg:w="4"/><text x="53.9091%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.09%)</title><rect x="53.6591%" y="933" width="0.0918%" height="15" fill="rgb(230,209,3)" fg:x="2339" fg:w="4"/><text x="53.9091%" y="943.50"></text></g><g><title>y2021::d14::main::better_step::{{closure}} (1 samples, 0.02%)</title><rect x="53.7279%" y="917" width="0.0229%" height="15" fill="rgb(248,12,46)" fg:x="2342" fg:w="1"/><text x="53.9779%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.02%)</title><rect x="53.7279%" y="901" width="0.0229%" height="15" fill="rgb(234,18,0)" fg:x="2342" fg:w="1"/><text x="53.9779%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.02%)</title><rect x="53.7279%" y="885" width="0.0229%" height="15" fill="rgb(238,197,14)" fg:x="2342" fg:w="1"/><text x="53.9779%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.02%)</title><rect x="53.7279%" y="869" width="0.0229%" height="15" fill="rgb(251,162,48)" fg:x="2342" fg:w="1"/><text x="53.9779%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.02%)</title><rect x="53.7279%" y="853" width="0.0229%" height="15" fill="rgb(237,73,42)" fg:x="2342" fg:w="1"/><text x="53.9779%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="53.7279%" y="837" width="0.0229%" height="15" fill="rgb(211,108,8)" fg:x="2342" fg:w="1"/><text x="53.9779%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="53.7279%" y="821" width="0.0229%" height="15" fill="rgb(213,45,22)" fg:x="2342" fg:w="1"/><text x="53.9779%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="53.7279%" y="805" width="0.0229%" height="15" fill="rgb(252,154,5)" fg:x="2342" fg:w="1"/><text x="53.9779%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="53.7738%" y="1061" width="0.0229%" height="15" fill="rgb(221,79,52)" fg:x="2344" fg:w="1"/><text x="54.0238%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="53.7738%" y="1045" width="0.0229%" height="15" fill="rgb(229,220,36)" fg:x="2344" fg:w="1"/><text x="54.0238%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="53.7738%" y="1029" width="0.0229%" height="15" fill="rgb(211,17,16)" fg:x="2344" fg:w="1"/><text x="54.0238%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.02%)</title><rect x="53.7738%" y="1013" width="0.0229%" height="15" fill="rgb(222,55,31)" fg:x="2344" fg:w="1"/><text x="54.0238%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="53.7967%" y="1061" width="0.0229%" height="15" fill="rgb(221,221,31)" fg:x="2345" fg:w="1"/><text x="54.0467%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="53.7967%" y="1045" width="0.0229%" height="15" fill="rgb(227,168,26)" fg:x="2345" fg:w="1"/><text x="54.0467%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="53.7967%" y="1029" width="0.0229%" height="15" fill="rgb(224,139,9)" fg:x="2345" fg:w="1"/><text x="54.0467%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="53.7967%" y="1013" width="0.0229%" height="15" fill="rgb(254,172,0)" fg:x="2345" fg:w="1"/><text x="54.0467%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="53.7967%" y="997" width="0.0229%" height="15" fill="rgb(235,203,1)" fg:x="2345" fg:w="1"/><text x="54.0467%" y="1007.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.02%)</title><rect x="53.7967%" y="981" width="0.0229%" height="15" fill="rgb(216,205,24)" fg:x="2345" fg:w="1"/><text x="54.0467%" y="991.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (1 samples, 0.02%)</title><rect x="53.8426%" y="997" width="0.0229%" height="15" fill="rgb(233,24,6)" fg:x="2347" fg:w="1"/><text x="54.0926%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="53.8426%" y="981" width="0.0229%" height="15" fill="rgb(244,110,9)" fg:x="2347" fg:w="1"/><text x="54.0926%" y="991.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (3 samples, 0.07%)</title><rect x="53.8197%" y="1061" width="0.0688%" height="15" fill="rgb(239,222,42)" fg:x="2346" fg:w="3"/><text x="54.0697%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.07%)</title><rect x="53.8197%" y="1045" width="0.0688%" height="15" fill="rgb(218,145,13)" fg:x="2346" fg:w="3"/><text x="54.0697%" y="1055.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (2 samples, 0.05%)</title><rect x="53.8426%" y="1029" width="0.0459%" height="15" fill="rgb(207,69,11)" fg:x="2347" fg:w="2"/><text x="54.0926%" y="1039.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (2 samples, 0.05%)</title><rect x="53.8426%" y="1013" width="0.0459%" height="15" fill="rgb(220,223,22)" fg:x="2347" fg:w="2"/><text x="54.0926%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1 samples, 0.02%)</title><rect x="53.8656%" y="997" width="0.0229%" height="15" fill="rgb(245,102,5)" fg:x="2348" fg:w="1"/><text x="54.1156%" y="1007.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.02%)</title><rect x="53.8656%" y="981" width="0.0229%" height="15" fill="rgb(211,148,2)" fg:x="2348" fg:w="1"/><text x="54.1156%" y="991.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="53.8656%" y="965" width="0.0229%" height="15" fill="rgb(241,13,44)" fg:x="2348" fg:w="1"/><text x="54.1156%" y="975.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect x="53.8656%" y="949" width="0.0229%" height="15" fill="rgb(219,137,21)" fg:x="2348" fg:w="1"/><text x="54.1156%" y="959.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (1 samples, 0.02%)</title><rect x="53.8885%" y="1061" width="0.0229%" height="15" fill="rgb(242,206,5)" fg:x="2349" fg:w="1"/><text x="54.1385%" y="1071.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (1 samples, 0.02%)</title><rect x="53.8885%" y="1045" width="0.0229%" height="15" fill="rgb(217,114,22)" fg:x="2349" fg:w="1"/><text x="54.1385%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1 samples, 0.02%)</title><rect x="53.8885%" y="1029" width="0.0229%" height="15" fill="rgb(253,206,42)" fg:x="2349" fg:w="1"/><text x="54.1385%" y="1039.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.02%)</title><rect x="53.8885%" y="1013" width="0.0229%" height="15" fill="rgb(236,102,18)" fg:x="2349" fg:w="1"/><text x="54.1385%" y="1023.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="53.8885%" y="997" width="0.0229%" height="15" fill="rgb(208,59,49)" fg:x="2349" fg:w="1"/><text x="54.1385%" y="1007.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect x="53.8885%" y="981" width="0.0229%" height="15" fill="rgb(215,194,28)" fg:x="2349" fg:w="1"/><text x="54.1385%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.02%)</title><rect x="53.8885%" y="965" width="0.0229%" height="15" fill="rgb(243,207,11)" fg:x="2349" fg:w="1"/><text x="54.1385%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;(usize,usize),usize&gt;&gt; (1 samples, 0.02%)</title><rect x="53.9114%" y="1061" width="0.0229%" height="15" fill="rgb(254,179,35)" fg:x="2350" fg:w="1"/><text x="54.1614%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;(usize,usize),usize&gt;&gt; (1 samples, 0.02%)</title><rect x="53.9114%" y="1045" width="0.0229%" height="15" fill="rgb(235,97,3)" fg:x="2350" fg:w="1"/><text x="54.1614%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;((usize,usize),usize)&gt;&gt; (1 samples, 0.02%)</title><rect x="53.9114%" y="1029" width="0.0229%" height="15" fill="rgb(215,155,33)" fg:x="2350" fg:w="1"/><text x="54.1614%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="53.9114%" y="1013" width="0.0229%" height="15" fill="rgb(223,128,12)" fg:x="2350" fg:w="1"/><text x="54.1614%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.9344%" y="997" width="0.0229%" height="15" fill="rgb(208,157,18)" fg:x="2351" fg:w="1"/><text x="54.1844%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.9344%" y="981" width="0.0229%" height="15" fill="rgb(249,70,54)" fg:x="2351" fg:w="1"/><text x="54.1844%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="53.9344%" y="965" width="0.0229%" height="15" fill="rgb(244,118,24)" fg:x="2351" fg:w="1"/><text x="54.1844%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.05%)</title><rect x="53.9344%" y="1013" width="0.0459%" height="15" fill="rgb(211,54,0)" fg:x="2351" fg:w="2"/><text x="54.1844%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (1 samples, 0.02%)</title><rect x="53.9573%" y="997" width="0.0229%" height="15" fill="rgb(245,137,45)" fg:x="2352" fg:w="1"/><text x="54.2073%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="53.9573%" y="981" width="0.0229%" height="15" fill="rgb(232,154,31)" fg:x="2352" fg:w="1"/><text x="54.2073%" y="991.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="53.9573%" y="965" width="0.0229%" height="15" fill="rgb(253,6,39)" fg:x="2352" fg:w="1"/><text x="54.2073%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="53.9573%" y="949" width="0.0229%" height="15" fill="rgb(234,183,24)" fg:x="2352" fg:w="1"/><text x="54.2073%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="53.9573%" y="933" width="0.0229%" height="15" fill="rgb(252,84,40)" fg:x="2352" fg:w="1"/><text x="54.2073%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="53.9573%" y="917" width="0.0229%" height="15" fill="rgb(224,65,2)" fg:x="2352" fg:w="1"/><text x="54.2073%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="53.9573%" y="901" width="0.0229%" height="15" fill="rgb(229,38,24)" fg:x="2352" fg:w="1"/><text x="54.2073%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="53.9573%" y="885" width="0.0229%" height="15" fill="rgb(218,131,50)" fg:x="2352" fg:w="1"/><text x="54.2073%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (4 samples, 0.09%)</title><rect x="53.9344%" y="1061" width="0.0918%" height="15" fill="rgb(233,106,18)" fg:x="2351" fg:w="4"/><text x="54.1844%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.09%)</title><rect x="53.9344%" y="1045" width="0.0918%" height="15" fill="rgb(220,216,11)" fg:x="2351" fg:w="4"/><text x="54.1844%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.09%)</title><rect x="53.9344%" y="1029" width="0.0918%" height="15" fill="rgb(251,100,45)" fg:x="2351" fg:w="4"/><text x="54.1844%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.05%)</title><rect x="53.9803%" y="1013" width="0.0459%" height="15" fill="rgb(235,143,32)" fg:x="2353" fg:w="2"/><text x="54.2303%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="53.9803%" y="997" width="0.0459%" height="15" fill="rgb(248,124,34)" fg:x="2353" fg:w="2"/><text x="54.2303%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="54.0032%" y="981" width="0.0229%" height="15" fill="rgb(225,221,4)" fg:x="2354" fg:w="1"/><text x="54.2532%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="54.0032%" y="965" width="0.0229%" height="15" fill="rgb(242,27,43)" fg:x="2354" fg:w="1"/><text x="54.2532%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="54.0262%" y="1013" width="0.0459%" height="15" fill="rgb(227,54,8)" fg:x="2355" fg:w="2"/><text x="54.2762%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="54.0262%" y="997" width="0.0459%" height="15" fill="rgb(253,139,49)" fg:x="2355" fg:w="2"/><text x="54.2762%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="54.0262%" y="981" width="0.0459%" height="15" fill="rgb(231,26,43)" fg:x="2355" fg:w="2"/><text x="54.2762%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="54.0491%" y="965" width="0.0229%" height="15" fill="rgb(207,121,39)" fg:x="2356" fg:w="1"/><text x="54.2991%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="54.0491%" y="949" width="0.0229%" height="15" fill="rgb(223,101,35)" fg:x="2356" fg:w="1"/><text x="54.2991%" y="959.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.07%)</title><rect x="54.0262%" y="1029" width="0.0688%" height="15" fill="rgb(232,87,23)" fg:x="2355" fg:w="3"/><text x="54.2762%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (1 samples, 0.02%)</title><rect x="54.0720%" y="1013" width="0.0229%" height="15" fill="rgb(225,180,29)" fg:x="2357" fg:w="1"/><text x="54.3220%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="54.0720%" y="997" width="0.0229%" height="15" fill="rgb(225,25,17)" fg:x="2357" fg:w="1"/><text x="54.3220%" y="1007.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="54.0720%" y="981" width="0.0229%" height="15" fill="rgb(223,8,52)" fg:x="2357" fg:w="1"/><text x="54.3220%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="54.0720%" y="965" width="0.0229%" height="15" fill="rgb(246,42,21)" fg:x="2357" fg:w="1"/><text x="54.3220%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="54.0720%" y="949" width="0.0229%" height="15" fill="rgb(205,64,43)" fg:x="2357" fg:w="1"/><text x="54.3220%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="54.0720%" y="933" width="0.0229%" height="15" fill="rgb(221,160,13)" fg:x="2357" fg:w="1"/><text x="54.3220%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="54.0720%" y="917" width="0.0229%" height="15" fill="rgb(239,58,35)" fg:x="2357" fg:w="1"/><text x="54.3220%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="54.0720%" y="901" width="0.0229%" height="15" fill="rgb(251,26,40)" fg:x="2357" fg:w="1"/><text x="54.3220%" y="911.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="54.0950%" y="1013" width="0.0229%" height="15" fill="rgb(247,0,4)" fg:x="2358" fg:w="1"/><text x="54.3450%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="54.0950%" y="997" width="0.0229%" height="15" fill="rgb(218,130,10)" fg:x="2358" fg:w="1"/><text x="54.3450%" y="1007.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="54.0950%" y="981" width="0.0229%" height="15" fill="rgb(239,32,7)" fg:x="2358" fg:w="1"/><text x="54.3450%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="54.1179%" y="885" width="0.0229%" height="15" fill="rgb(210,192,24)" fg:x="2359" fg:w="1"/><text x="54.3679%" y="895.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (2 samples, 0.05%)</title><rect x="54.1179%" y="965" width="0.0459%" height="15" fill="rgb(226,212,17)" fg:x="2359" fg:w="2"/><text x="54.3679%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.05%)</title><rect x="54.1179%" y="949" width="0.0459%" height="15" fill="rgb(219,201,28)" fg:x="2359" fg:w="2"/><text x="54.3679%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="54.1179%" y="933" width="0.0459%" height="15" fill="rgb(235,207,41)" fg:x="2359" fg:w="2"/><text x="54.3679%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="54.1179%" y="917" width="0.0459%" height="15" fill="rgb(241,95,54)" fg:x="2359" fg:w="2"/><text x="54.3679%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="54.1179%" y="901" width="0.0459%" height="15" fill="rgb(248,12,23)" fg:x="2359" fg:w="2"/><text x="54.3679%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="54.1409%" y="885" width="0.0229%" height="15" fill="rgb(228,173,4)" fg:x="2360" fg:w="1"/><text x="54.3909%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="54.1409%" y="869" width="0.0229%" height="15" fill="rgb(254,99,5)" fg:x="2360" fg:w="1"/><text x="54.3909%" y="879.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (1 samples, 0.02%)</title><rect x="54.1638%" y="965" width="0.0229%" height="15" fill="rgb(212,184,17)" fg:x="2361" fg:w="1"/><text x="54.4138%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1 samples, 0.02%)</title><rect x="54.1638%" y="949" width="0.0229%" height="15" fill="rgb(252,174,1)" fg:x="2361" fg:w="1"/><text x="54.4138%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="54.1638%" y="933" width="0.0229%" height="15" fill="rgb(241,118,51)" fg:x="2361" fg:w="1"/><text x="54.4138%" y="943.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="54.1638%" y="917" width="0.0229%" height="15" fill="rgb(227,94,47)" fg:x="2361" fg:w="1"/><text x="54.4138%" y="927.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="54.1638%" y="901" width="0.0229%" height="15" fill="rgb(229,104,2)" fg:x="2361" fg:w="1"/><text x="54.4138%" y="911.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="54.1638%" y="885" width="0.0229%" height="15" fill="rgb(219,28,31)" fg:x="2361" fg:w="1"/><text x="54.4138%" y="895.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="54.1638%" y="869" width="0.0229%" height="15" fill="rgb(233,109,36)" fg:x="2361" fg:w="1"/><text x="54.4138%" y="879.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="54.1638%" y="853" width="0.0229%" height="15" fill="rgb(246,88,11)" fg:x="2361" fg:w="1"/><text x="54.4138%" y="863.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="54.1638%" y="837" width="0.0229%" height="15" fill="rgb(209,212,17)" fg:x="2361" fg:w="1"/><text x="54.4138%" y="847.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="54.1638%" y="821" width="0.0229%" height="15" fill="rgb(243,59,29)" fg:x="2361" fg:w="1"/><text x="54.4138%" y="831.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="54.1638%" y="805" width="0.0229%" height="15" fill="rgb(244,205,48)" fg:x="2361" fg:w="1"/><text x="54.4138%" y="815.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="54.1638%" y="789" width="0.0229%" height="15" fill="rgb(227,30,6)" fg:x="2361" fg:w="1"/><text x="54.4138%" y="799.50"></text></g><g><title>clear_page_rep (1 samples, 0.02%)</title><rect x="54.1638%" y="773" width="0.0229%" height="15" fill="rgb(220,205,48)" fg:x="2361" fg:w="1"/><text x="54.4138%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.09%)</title><rect x="54.1179%" y="1013" width="0.0918%" height="15" fill="rgb(250,94,14)" fg:x="2359" fg:w="4"/><text x="54.3679%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.09%)</title><rect x="54.1179%" y="997" width="0.0918%" height="15" fill="rgb(216,119,42)" fg:x="2359" fg:w="4"/><text x="54.3679%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (4 samples, 0.09%)</title><rect x="54.1179%" y="981" width="0.0918%" height="15" fill="rgb(232,155,0)" fg:x="2359" fg:w="4"/><text x="54.3679%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.02%)</title><rect x="54.1867%" y="965" width="0.0229%" height="15" fill="rgb(212,24,32)" fg:x="2362" fg:w="1"/><text x="54.4367%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="54.1867%" y="949" width="0.0229%" height="15" fill="rgb(216,69,20)" fg:x="2362" fg:w="1"/><text x="54.4367%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.21%)</title><rect x="54.0262%" y="1061" width="0.2065%" height="15" fill="rgb(229,73,31)" fg:x="2355" fg:w="9"/><text x="54.2762%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.21%)</title><rect x="54.0262%" y="1045" width="0.2065%" height="15" fill="rgb(224,219,20)" fg:x="2355" fg:w="9"/><text x="54.2762%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.14%)</title><rect x="54.0950%" y="1029" width="0.1376%" height="15" fill="rgb(215,146,41)" fg:x="2358" fg:w="6"/><text x="54.3450%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="54.2097%" y="1013" width="0.0229%" height="15" fill="rgb(244,71,31)" fg:x="2363" fg:w="1"/><text x="54.4597%" y="1023.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.02%)</title><rect x="54.2097%" y="997" width="0.0229%" height="15" fill="rgb(224,24,11)" fg:x="2363" fg:w="1"/><text x="54.4597%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="54.2556%" y="757" width="0.0229%" height="15" fill="rgb(229,76,15)" fg:x="2365" fg:w="1"/><text x="54.5056%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.02%)</title><rect x="54.2556%" y="741" width="0.0229%" height="15" fill="rgb(209,93,2)" fg:x="2365" fg:w="1"/><text x="54.5056%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.02%)</title><rect x="54.2556%" y="725" width="0.0229%" height="15" fill="rgb(216,200,50)" fg:x="2365" fg:w="1"/><text x="54.5056%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.02%)</title><rect x="54.2556%" y="709" width="0.0229%" height="15" fill="rgb(211,67,34)" fg:x="2365" fg:w="1"/><text x="54.5056%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.02%)</title><rect x="54.2556%" y="693" width="0.0229%" height="15" fill="rgb(225,87,47)" fg:x="2365" fg:w="1"/><text x="54.5056%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.02%)</title><rect x="54.2556%" y="677" width="0.0229%" height="15" fill="rgb(217,185,16)" fg:x="2365" fg:w="1"/><text x="54.5056%" y="687.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.02%)</title><rect x="54.2556%" y="661" width="0.0229%" height="15" fill="rgb(205,0,0)" fg:x="2365" fg:w="1"/><text x="54.5056%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="54.2556%" y="645" width="0.0229%" height="15" fill="rgb(207,116,45)" fg:x="2365" fg:w="1"/><text x="54.5056%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="54.2556%" y="629" width="0.0229%" height="15" fill="rgb(221,156,26)" fg:x="2365" fg:w="1"/><text x="54.5056%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="54.2556%" y="613" width="0.0229%" height="15" fill="rgb(213,140,4)" fg:x="2365" fg:w="1"/><text x="54.5056%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="54.2556%" y="597" width="0.0229%" height="15" fill="rgb(231,224,15)" fg:x="2365" fg:w="1"/><text x="54.5056%" y="607.50"></text></g><g><title>tcache_get (1 samples, 0.02%)</title><rect x="54.2556%" y="581" width="0.0229%" height="15" fill="rgb(244,76,20)" fg:x="2365" fg:w="1"/><text x="54.5056%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.05%)</title><rect x="54.2556%" y="821" width="0.0459%" height="15" fill="rgb(238,117,7)" fg:x="2365" fg:w="2"/><text x="54.5056%" y="831.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (2 samples, 0.05%)</title><rect x="54.2556%" y="805" width="0.0459%" height="15" fill="rgb(235,1,10)" fg:x="2365" fg:w="2"/><text x="54.5056%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.05%)</title><rect x="54.2556%" y="789" width="0.0459%" height="15" fill="rgb(216,165,6)" fg:x="2365" fg:w="2"/><text x="54.5056%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.05%)</title><rect x="54.2556%" y="773" width="0.0459%" height="15" fill="rgb(246,91,35)" fg:x="2365" fg:w="2"/><text x="54.5056%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="54.2785%" y="757" width="0.0229%" height="15" fill="rgb(228,96,24)" fg:x="2366" fg:w="1"/><text x="54.5285%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.07%)</title><rect x="54.3014%" y="757" width="0.0688%" height="15" fill="rgb(254,217,53)" fg:x="2367" fg:w="3"/><text x="54.5514%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (2 samples, 0.05%)</title><rect x="54.3244%" y="741" width="0.0459%" height="15" fill="rgb(209,60,0)" fg:x="2368" fg:w="2"/><text x="54.5744%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.05%)</title><rect x="54.3244%" y="725" width="0.0459%" height="15" fill="rgb(250,93,26)" fg:x="2368" fg:w="2"/><text x="54.5744%" y="735.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.05%)</title><rect x="54.3244%" y="709" width="0.0459%" height="15" fill="rgb(211,9,40)" fg:x="2368" fg:w="2"/><text x="54.5744%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="54.3244%" y="693" width="0.0459%" height="15" fill="rgb(242,57,20)" fg:x="2368" fg:w="2"/><text x="54.5744%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="54.3244%" y="677" width="0.0459%" height="15" fill="rgb(248,85,48)" fg:x="2368" fg:w="2"/><text x="54.5744%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="54.3244%" y="661" width="0.0459%" height="15" fill="rgb(212,117,2)" fg:x="2368" fg:w="2"/><text x="54.5744%" y="671.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="54.3244%" y="645" width="0.0459%" height="15" fill="rgb(243,19,3)" fg:x="2368" fg:w="2"/><text x="54.5744%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (8 samples, 0.18%)</title><rect x="54.3014%" y="805" width="0.1835%" height="15" fill="rgb(232,217,24)" fg:x="2367" fg:w="8"/><text x="54.5514%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (8 samples, 0.18%)</title><rect x="54.3014%" y="789" width="0.1835%" height="15" fill="rgb(224,175,40)" fg:x="2367" fg:w="8"/><text x="54.5514%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.18%)</title><rect x="54.3014%" y="773" width="0.1835%" height="15" fill="rgb(212,162,32)" fg:x="2367" fg:w="8"/><text x="54.5514%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.11%)</title><rect x="54.3703%" y="757" width="0.1147%" height="15" fill="rgb(215,9,4)" fg:x="2370" fg:w="5"/><text x="54.6203%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.11%)</title><rect x="54.3703%" y="741" width="0.1147%" height="15" fill="rgb(242,42,7)" fg:x="2370" fg:w="5"/><text x="54.6203%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="54.4391%" y="725" width="0.0459%" height="15" fill="rgb(242,184,45)" fg:x="2373" fg:w="2"/><text x="54.6891%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="54.4391%" y="709" width="0.0459%" height="15" fill="rgb(228,111,51)" fg:x="2373" fg:w="2"/><text x="54.6891%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="54.4391%" y="693" width="0.0459%" height="15" fill="rgb(236,147,17)" fg:x="2373" fg:w="2"/><text x="54.6891%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.4850%" y="741" width="0.0229%" height="15" fill="rgb(210,75,22)" fg:x="2375" fg:w="1"/><text x="54.7350%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.4850%" y="725" width="0.0229%" height="15" fill="rgb(217,159,45)" fg:x="2375" fg:w="1"/><text x="54.7350%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.4850%" y="709" width="0.0229%" height="15" fill="rgb(245,165,53)" fg:x="2375" fg:w="1"/><text x="54.7350%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="54.4850%" y="693" width="0.0229%" height="15" fill="rgb(251,190,50)" fg:x="2375" fg:w="1"/><text x="54.7350%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.05%)</title><rect x="54.4850%" y="757" width="0.0459%" height="15" fill="rgb(208,203,29)" fg:x="2375" fg:w="2"/><text x="54.7350%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (1 samples, 0.02%)</title><rect x="54.5079%" y="741" width="0.0229%" height="15" fill="rgb(207,209,35)" fg:x="2376" fg:w="1"/><text x="54.7579%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="54.5079%" y="725" width="0.0229%" height="15" fill="rgb(230,144,49)" fg:x="2376" fg:w="1"/><text x="54.7579%" y="735.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="54.5079%" y="709" width="0.0229%" height="15" fill="rgb(229,31,6)" fg:x="2376" fg:w="1"/><text x="54.7579%" y="719.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (15 samples, 0.34%)</title><rect x="54.2326%" y="837" width="0.3441%" height="15" fill="rgb(251,129,24)" fg:x="2364" fg:w="15"/><text x="54.4826%" y="847.50"></text></g><g><title>y2021::d15::main::next_points::{{closure}} (12 samples, 0.28%)</title><rect x="54.3014%" y="821" width="0.2753%" height="15" fill="rgb(235,105,15)" fg:x="2367" fg:w="12"/><text x="54.5514%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.09%)</title><rect x="54.4850%" y="805" width="0.0918%" height="15" fill="rgb(216,52,43)" fg:x="2375" fg:w="4"/><text x="54.7350%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.09%)</title><rect x="54.4850%" y="789" width="0.0918%" height="15" fill="rgb(238,144,41)" fg:x="2375" fg:w="4"/><text x="54.7350%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.09%)</title><rect x="54.4850%" y="773" width="0.0918%" height="15" fill="rgb(243,63,9)" fg:x="2375" fg:w="4"/><text x="54.7350%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.05%)</title><rect x="54.5309%" y="757" width="0.0459%" height="15" fill="rgb(246,208,1)" fg:x="2377" fg:w="2"/><text x="54.7809%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="54.5309%" y="741" width="0.0459%" height="15" fill="rgb(233,182,18)" fg:x="2377" fg:w="2"/><text x="54.7809%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.02%)</title><rect x="54.5538%" y="725" width="0.0229%" height="15" fill="rgb(242,224,8)" fg:x="2378" fg:w="1"/><text x="54.8038%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.02%)</title><rect x="54.5538%" y="709" width="0.0229%" height="15" fill="rgb(243,54,37)" fg:x="2378" fg:w="1"/><text x="54.8038%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.02%)</title><rect x="54.5538%" y="693" width="0.0229%" height="15" fill="rgb(233,192,12)" fg:x="2378" fg:w="1"/><text x="54.8038%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="54.5538%" y="677" width="0.0229%" height="15" fill="rgb(251,192,53)" fg:x="2378" fg:w="1"/><text x="54.8038%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="54.5538%" y="661" width="0.0229%" height="15" fill="rgb(246,141,26)" fg:x="2378" fg:w="1"/><text x="54.8038%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.02%)</title><rect x="54.5538%" y="645" width="0.0229%" height="15" fill="rgb(239,195,19)" fg:x="2378" fg:w="1"/><text x="54.8038%" y="655.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.02%)</title><rect x="54.5538%" y="629" width="0.0229%" height="15" fill="rgb(241,16,39)" fg:x="2378" fg:w="1"/><text x="54.8038%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.5767%" y="757" width="0.0229%" height="15" fill="rgb(223,13,53)" fg:x="2379" fg:w="1"/><text x="54.8267%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.5767%" y="741" width="0.0229%" height="15" fill="rgb(214,227,0)" fg:x="2379" fg:w="1"/><text x="54.8267%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.5767%" y="725" width="0.0229%" height="15" fill="rgb(228,103,26)" fg:x="2379" fg:w="1"/><text x="54.8267%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="54.5767%" y="709" width="0.0229%" height="15" fill="rgb(254,177,53)" fg:x="2379" fg:w="1"/><text x="54.8267%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="54.5767%" y="693" width="0.0229%" height="15" fill="rgb(208,201,34)" fg:x="2379" fg:w="1"/><text x="54.8267%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.07%)</title><rect x="54.5767%" y="773" width="0.0688%" height="15" fill="rgb(212,39,5)" fg:x="2379" fg:w="3"/><text x="54.8267%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (2 samples, 0.05%)</title><rect x="54.5997%" y="757" width="0.0459%" height="15" fill="rgb(246,117,3)" fg:x="2380" fg:w="2"/><text x="54.8497%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.05%)</title><rect x="54.5997%" y="741" width="0.0459%" height="15" fill="rgb(244,118,39)" fg:x="2380" fg:w="2"/><text x="54.8497%" y="751.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.05%)</title><rect x="54.5997%" y="725" width="0.0459%" height="15" fill="rgb(241,64,10)" fg:x="2380" fg:w="2"/><text x="54.8497%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.05%)</title><rect x="54.5997%" y="709" width="0.0459%" height="15" fill="rgb(229,39,44)" fg:x="2380" fg:w="2"/><text x="54.8497%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="54.6226%" y="693" width="0.0229%" height="15" fill="rgb(230,226,3)" fg:x="2381" fg:w="1"/><text x="54.8726%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="54.6226%" y="677" width="0.0229%" height="15" fill="rgb(222,13,42)" fg:x="2381" fg:w="1"/><text x="54.8726%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="54.6226%" y="661" width="0.0229%" height="15" fill="rgb(247,180,54)" fg:x="2381" fg:w="1"/><text x="54.8726%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="54.6226%" y="645" width="0.0229%" height="15" fill="rgb(205,96,16)" fg:x="2381" fg:w="1"/><text x="54.8726%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="54.7144%" y="741" width="0.0229%" height="15" fill="rgb(205,100,21)" fg:x="2385" fg:w="1"/><text x="54.9644%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="54.7144%" y="725" width="0.0229%" height="15" fill="rgb(248,51,4)" fg:x="2385" fg:w="1"/><text x="54.9644%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="54.7144%" y="709" width="0.0229%" height="15" fill="rgb(217,197,30)" fg:x="2385" fg:w="1"/><text x="54.9644%" y="719.50"></text></g><g><title>y2021::d15::main::next_points (24 samples, 0.55%)</title><rect x="54.2326%" y="1061" width="0.5506%" height="15" fill="rgb(240,179,40)" fg:x="2364" fg:w="24"/><text x="54.4826%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.55%)</title><rect x="54.2326%" y="1045" width="0.5506%" height="15" fill="rgb(212,185,35)" fg:x="2364" fg:w="24"/><text x="54.4826%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (24 samples, 0.55%)</title><rect x="54.2326%" y="1029" width="0.5506%" height="15" fill="rgb(251,222,31)" fg:x="2364" fg:w="24"/><text x="54.4826%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (24 samples, 0.55%)</title><rect x="54.2326%" y="1013" width="0.5506%" height="15" fill="rgb(208,140,36)" fg:x="2364" fg:w="24"/><text x="54.4826%" y="1023.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (24 samples, 0.55%)</title><rect x="54.2326%" y="997" width="0.5506%" height="15" fill="rgb(220,148,1)" fg:x="2364" fg:w="24"/><text x="54.4826%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (24 samples, 0.55%)</title><rect x="54.2326%" y="981" width="0.5506%" height="15" fill="rgb(254,4,28)" fg:x="2364" fg:w="24"/><text x="54.4826%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.55%)</title><rect x="54.2326%" y="965" width="0.5506%" height="15" fill="rgb(222,185,44)" fg:x="2364" fg:w="24"/><text x="54.4826%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.55%)</title><rect x="54.2326%" y="949" width="0.5506%" height="15" fill="rgb(215,74,39)" fg:x="2364" fg:w="24"/><text x="54.4826%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.55%)</title><rect x="54.2326%" y="933" width="0.5506%" height="15" fill="rgb(247,86,4)" fg:x="2364" fg:w="24"/><text x="54.4826%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.55%)</title><rect x="54.2326%" y="917" width="0.5506%" height="15" fill="rgb(231,105,32)" fg:x="2364" fg:w="24"/><text x="54.4826%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (24 samples, 0.55%)</title><rect x="54.2326%" y="901" width="0.5506%" height="15" fill="rgb(222,65,35)" fg:x="2364" fg:w="24"/><text x="54.4826%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (24 samples, 0.55%)</title><rect x="54.2326%" y="885" width="0.5506%" height="15" fill="rgb(218,145,35)" fg:x="2364" fg:w="24"/><text x="54.4826%" y="895.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (24 samples, 0.55%)</title><rect x="54.2326%" y="869" width="0.5506%" height="15" fill="rgb(208,7,15)" fg:x="2364" fg:w="24"/><text x="54.4826%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (24 samples, 0.55%)</title><rect x="54.2326%" y="853" width="0.5506%" height="15" fill="rgb(209,83,13)" fg:x="2364" fg:w="24"/><text x="54.4826%" y="863.50"></text></g><g><title>y2021::d15::main::next_points::{{closure}} (9 samples, 0.21%)</title><rect x="54.5767%" y="837" width="0.2065%" height="15" fill="rgb(218,3,10)" fg:x="2379" fg:w="9"/><text x="54.8267%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.21%)</title><rect x="54.5767%" y="821" width="0.2065%" height="15" fill="rgb(211,219,4)" fg:x="2379" fg:w="9"/><text x="54.8267%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.21%)</title><rect x="54.5767%" y="805" width="0.2065%" height="15" fill="rgb(228,194,12)" fg:x="2379" fg:w="9"/><text x="54.8267%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.21%)</title><rect x="54.5767%" y="789" width="0.2065%" height="15" fill="rgb(210,175,7)" fg:x="2379" fg:w="9"/><text x="54.8267%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.14%)</title><rect x="54.6456%" y="773" width="0.1376%" height="15" fill="rgb(243,132,6)" fg:x="2382" fg:w="6"/><text x="54.8956%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.14%)</title><rect x="54.6456%" y="757" width="0.1376%" height="15" fill="rgb(207,72,18)" fg:x="2382" fg:w="6"/><text x="54.8956%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.05%)</title><rect x="54.7373%" y="741" width="0.0459%" height="15" fill="rgb(236,1,18)" fg:x="2386" fg:w="2"/><text x="54.9873%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.05%)</title><rect x="54.7373%" y="725" width="0.0459%" height="15" fill="rgb(227,0,18)" fg:x="2386" fg:w="2"/><text x="54.9873%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.05%)</title><rect x="54.7373%" y="709" width="0.0459%" height="15" fill="rgb(247,37,5)" fg:x="2386" fg:w="2"/><text x="54.9873%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.05%)</title><rect x="54.7373%" y="693" width="0.0459%" height="15" fill="rgb(237,179,24)" fg:x="2386" fg:w="2"/><text x="54.9873%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.05%)</title><rect x="54.7373%" y="677" width="0.0459%" height="15" fill="rgb(226,53,20)" fg:x="2386" fg:w="2"/><text x="54.9873%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.05%)</title><rect x="54.7373%" y="661" width="0.0459%" height="15" fill="rgb(247,75,7)" fg:x="2386" fg:w="2"/><text x="54.9873%" y="671.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.05%)</title><rect x="54.7373%" y="645" width="0.0459%" height="15" fill="rgb(233,96,12)" fg:x="2386" fg:w="2"/><text x="54.9873%" y="655.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.05%)</title><rect x="54.7832%" y="709" width="0.0459%" height="15" fill="rgb(224,125,0)" fg:x="2388" fg:w="2"/><text x="55.0332%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="54.7832%" y="693" width="0.0459%" height="15" fill="rgb(224,92,25)" fg:x="2388" fg:w="2"/><text x="55.0332%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="54.7832%" y="677" width="0.0459%" height="15" fill="rgb(224,42,24)" fg:x="2388" fg:w="2"/><text x="55.0332%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="54.7832%" y="661" width="0.0459%" height="15" fill="rgb(234,132,49)" fg:x="2388" fg:w="2"/><text x="55.0332%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="54.8061%" y="645" width="0.0229%" height="15" fill="rgb(248,100,35)" fg:x="2389" fg:w="1"/><text x="55.0561%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="54.8061%" y="629" width="0.0229%" height="15" fill="rgb(239,94,40)" fg:x="2389" fg:w="1"/><text x="55.0561%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.8291%" y="613" width="0.0229%" height="15" fill="rgb(235,139,28)" fg:x="2390" fg:w="1"/><text x="55.0791%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.8291%" y="597" width="0.0229%" height="15" fill="rgb(217,144,7)" fg:x="2390" fg:w="1"/><text x="55.0791%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="54.8291%" y="581" width="0.0229%" height="15" fill="rgb(227,55,4)" fg:x="2390" fg:w="1"/><text x="55.0791%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="54.8291%" y="565" width="0.0229%" height="15" fill="rgb(252,82,54)" fg:x="2390" fg:w="1"/><text x="55.0791%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="54.8291%" y="549" width="0.0229%" height="15" fill="rgb(245,172,4)" fg:x="2390" fg:w="1"/><text x="55.0791%" y="559.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (4 samples, 0.09%)</title><rect x="54.8291%" y="645" width="0.0918%" height="15" fill="rgb(207,26,27)" fg:x="2390" fg:w="4"/><text x="55.0791%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.09%)</title><rect x="54.8291%" y="629" width="0.0918%" height="15" fill="rgb(252,98,18)" fg:x="2390" fg:w="4"/><text x="55.0791%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (3 samples, 0.07%)</title><rect x="54.8520%" y="613" width="0.0688%" height="15" fill="rgb(244,8,26)" fg:x="2391" fg:w="3"/><text x="55.1020%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.07%)</title><rect x="54.8520%" y="597" width="0.0688%" height="15" fill="rgb(237,173,45)" fg:x="2391" fg:w="3"/><text x="55.1020%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.07%)</title><rect x="54.8520%" y="581" width="0.0688%" height="15" fill="rgb(208,213,49)" fg:x="2391" fg:w="3"/><text x="55.1020%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="54.8520%" y="565" width="0.0688%" height="15" fill="rgb(212,122,37)" fg:x="2391" fg:w="3"/><text x="55.1020%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="54.8520%" y="549" width="0.0688%" height="15" fill="rgb(213,80,17)" fg:x="2391" fg:w="3"/><text x="55.1020%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.07%)</title><rect x="54.8520%" y="533" width="0.0688%" height="15" fill="rgb(206,210,43)" fg:x="2391" fg:w="3"/><text x="55.1020%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="54.8979%" y="517" width="0.0229%" height="15" fill="rgb(229,214,3)" fg:x="2393" fg:w="1"/><text x="55.1479%" y="527.50"></text></g><g><title>y2021::d15::main::p01 (52 samples, 1.19%)</title><rect x="53.7509%" y="1077" width="1.1929%" height="15" fill="rgb(235,213,29)" fg:x="2343" fg:w="52"/><text x="54.0009%" y="1087.50"></text></g><g><title>y2021::d15::main::parse_input (7 samples, 0.16%)</title><rect x="54.7832%" y="1061" width="0.1606%" height="15" fill="rgb(248,135,26)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.16%)</title><rect x="54.7832%" y="1045" width="0.1606%" height="15" fill="rgb(242,188,12)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7 samples, 0.16%)</title><rect x="54.7832%" y="1029" width="0.1606%" height="15" fill="rgb(245,38,12)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (7 samples, 0.16%)</title><rect x="54.7832%" y="1013" width="0.1606%" height="15" fill="rgb(218,42,13)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="1023.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (7 samples, 0.16%)</title><rect x="54.7832%" y="997" width="0.1606%" height="15" fill="rgb(238,132,49)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.16%)</title><rect x="54.7832%" y="981" width="0.1606%" height="15" fill="rgb(209,196,19)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.16%)</title><rect x="54.7832%" y="965" width="0.1606%" height="15" fill="rgb(244,131,22)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.16%)</title><rect x="54.7832%" y="949" width="0.1606%" height="15" fill="rgb(223,18,34)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.16%)</title><rect x="54.7832%" y="933" width="0.1606%" height="15" fill="rgb(252,124,54)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.16%)</title><rect x="54.7832%" y="917" width="0.1606%" height="15" fill="rgb(229,106,42)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.16%)</title><rect x="54.7832%" y="901" width="0.1606%" height="15" fill="rgb(221,129,1)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.16%)</title><rect x="54.7832%" y="885" width="0.1606%" height="15" fill="rgb(229,74,15)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.16%)</title><rect x="54.7832%" y="869" width="0.1606%" height="15" fill="rgb(210,206,50)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (7 samples, 0.16%)</title><rect x="54.7832%" y="853" width="0.1606%" height="15" fill="rgb(251,114,31)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="863.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (7 samples, 0.16%)</title><rect x="54.7832%" y="837" width="0.1606%" height="15" fill="rgb(215,225,28)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.16%)</title><rect x="54.7832%" y="821" width="0.1606%" height="15" fill="rgb(237,109,14)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (7 samples, 0.16%)</title><rect x="54.7832%" y="805" width="0.1606%" height="15" fill="rgb(230,13,37)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.16%)</title><rect x="54.7832%" y="789" width="0.1606%" height="15" fill="rgb(231,40,28)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.16%)</title><rect x="54.7832%" y="773" width="0.1606%" height="15" fill="rgb(231,202,18)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7 samples, 0.16%)</title><rect x="54.7832%" y="757" width="0.1606%" height="15" fill="rgb(225,33,18)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="767.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (7 samples, 0.16%)</title><rect x="54.7832%" y="741" width="0.1606%" height="15" fill="rgb(223,64,47)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.16%)</title><rect x="54.7832%" y="725" width="0.1606%" height="15" fill="rgb(234,114,13)" fg:x="2388" fg:w="7"/><text x="55.0332%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.11%)</title><rect x="54.8291%" y="709" width="0.1147%" height="15" fill="rgb(248,56,40)" fg:x="2390" fg:w="5"/><text x="55.0791%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.11%)</title><rect x="54.8291%" y="693" width="0.1147%" height="15" fill="rgb(221,194,21)" fg:x="2390" fg:w="5"/><text x="55.0791%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.11%)</title><rect x="54.8291%" y="677" width="0.1147%" height="15" fill="rgb(242,108,46)" fg:x="2390" fg:w="5"/><text x="55.0791%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (5 samples, 0.11%)</title><rect x="54.8291%" y="661" width="0.1147%" height="15" fill="rgb(220,106,10)" fg:x="2390" fg:w="5"/><text x="55.0791%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (1 samples, 0.02%)</title><rect x="54.9209%" y="645" width="0.0229%" height="15" fill="rgb(211,88,4)" fg:x="2394" fg:w="1"/><text x="55.1709%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1 samples, 0.02%)</title><rect x="54.9209%" y="629" width="0.0229%" height="15" fill="rgb(214,95,34)" fg:x="2394" fg:w="1"/><text x="55.1709%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="54.9209%" y="613" width="0.0229%" height="15" fill="rgb(250,160,33)" fg:x="2394" fg:w="1"/><text x="55.1709%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="55.7467%" y="981" width="0.0229%" height="15" fill="rgb(225,29,10)" fg:x="2430" fg:w="1"/><text x="55.9967%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="55.7467%" y="965" width="0.0229%" height="15" fill="rgb(224,28,30)" fg:x="2430" fg:w="1"/><text x="55.9967%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (3 samples, 0.07%)</title><rect x="55.7697%" y="981" width="0.0688%" height="15" fill="rgb(231,77,4)" fg:x="2431" fg:w="3"/><text x="56.0197%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_iter_from (6 samples, 0.14%)</title><rect x="55.7238%" y="1013" width="0.1376%" height="15" fill="rgb(209,63,21)" fg:x="2429" fg:w="6"/><text x="55.9738%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::into_allocation (5 samples, 0.11%)</title><rect x="55.7467%" y="997" width="0.1147%" height="15" fill="rgb(226,22,11)" fg:x="2430" fg:w="5"/><text x="55.9967%" y="1007.50"></text></g><g><title>hashbrown::raw::calculate_layout (1 samples, 0.02%)</title><rect x="55.8385%" y="981" width="0.0229%" height="15" fill="rgb(216,82,30)" fg:x="2434" fg:w="1"/><text x="56.0885%" y="991.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.02%)</title><rect x="55.8385%" y="965" width="0.0229%" height="15" fill="rgb(246,227,38)" fg:x="2434" fg:w="1"/><text x="56.0885%" y="975.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="55.8385%" y="949" width="0.0229%" height="15" fill="rgb(251,203,53)" fg:x="2434" fg:w="1"/><text x="56.0885%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="55.8385%" y="933" width="0.0229%" height="15" fill="rgb(254,101,1)" fg:x="2434" fg:w="1"/><text x="56.0885%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (35 samples, 0.80%)</title><rect x="55.2420%" y="1061" width="0.8029%" height="15" fill="rgb(241,180,5)" fg:x="2408" fg:w="35"/><text x="55.4920%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (34 samples, 0.78%)</title><rect x="55.2650%" y="1045" width="0.7800%" height="15" fill="rgb(218,168,4)" fg:x="2409" fg:w="34"/><text x="55.5150%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (15 samples, 0.34%)</title><rect x="55.7008%" y="1029" width="0.3441%" height="15" fill="rgb(224,223,32)" fg:x="2428" fg:w="15"/><text x="55.9508%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (8 samples, 0.18%)</title><rect x="55.8614%" y="1013" width="0.1835%" height="15" fill="rgb(236,106,22)" fg:x="2435" fg:w="8"/><text x="56.1114%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.02%)</title><rect x="56.1597%" y="981" width="0.0229%" height="15" fill="rgb(206,121,5)" fg:x="2448" fg:w="1"/><text x="56.4097%" y="991.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="56.1597%" y="965" width="0.0229%" height="15" fill="rgb(233,87,28)" fg:x="2448" fg:w="1"/><text x="56.4097%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.16%)</title><rect x="56.0450%" y="1013" width="0.1606%" height="15" fill="rgb(236,137,17)" fg:x="2443" fg:w="7"/><text x="56.2950%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.14%)</title><rect x="56.0679%" y="997" width="0.1376%" height="15" fill="rgb(209,183,38)" fg:x="2444" fg:w="6"/><text x="56.3179%" y="1007.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="56.1826%" y="981" width="0.0229%" height="15" fill="rgb(206,162,44)" fg:x="2449" fg:w="1"/><text x="56.4326%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.30%)</title><rect x="56.0450%" y="1061" width="0.2982%" height="15" fill="rgb(237,70,39)" fg:x="2443" fg:w="13"/><text x="56.2950%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.30%)</title><rect x="56.0450%" y="1045" width="0.2982%" height="15" fill="rgb(212,176,5)" fg:x="2443" fg:w="13"/><text x="56.2950%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.30%)</title><rect x="56.0450%" y="1029" width="0.2982%" height="15" fill="rgb(232,95,16)" fg:x="2443" fg:w="13"/><text x="56.2950%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::read (6 samples, 0.14%)</title><rect x="56.2056%" y="1013" width="0.1376%" height="15" fill="rgb(219,115,35)" fg:x="2450" fg:w="6"/><text x="56.4556%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (6 samples, 0.14%)</title><rect x="56.2056%" y="997" width="0.1376%" height="15" fill="rgb(251,67,27)" fg:x="2450" fg:w="6"/><text x="56.4556%" y="1007.50"></text></g><g><title>core::ptr::read (6 samples, 0.14%)</title><rect x="56.2056%" y="981" width="0.1376%" height="15" fill="rgb(222,95,40)" fg:x="2450" fg:w="6"/><text x="56.4556%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="56.3432%" y="1061" width="0.0688%" height="15" fill="rgb(250,35,16)" fg:x="2456" fg:w="3"/><text x="56.5932%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="56.3432%" y="1045" width="0.0688%" height="15" fill="rgb(224,86,44)" fg:x="2456" fg:w="3"/><text x="56.5932%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="56.3432%" y="1029" width="0.0688%" height="15" fill="rgb(237,53,53)" fg:x="2456" fg:w="3"/><text x="56.5932%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="56.3432%" y="1013" width="0.0688%" height="15" fill="rgb(208,171,33)" fg:x="2456" fg:w="3"/><text x="56.5932%" y="1023.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.07%)</title><rect x="56.3432%" y="997" width="0.0688%" height="15" fill="rgb(222,64,27)" fg:x="2456" fg:w="3"/><text x="56.5932%" y="1007.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (3 samples, 0.07%)</title><rect x="57.9720%" y="981" width="0.0688%" height="15" fill="rgb(221,121,35)" fg:x="2527" fg:w="3"/><text x="58.2220%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.07%)</title><rect x="57.9720%" y="965" width="0.0688%" height="15" fill="rgb(228,137,42)" fg:x="2527" fg:w="3"/><text x="58.2220%" y="975.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="58.0179%" y="949" width="0.0229%" height="15" fill="rgb(227,54,21)" fg:x="2529" fg:w="1"/><text x="58.2679%" y="959.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="58.0179%" y="933" width="0.0229%" height="15" fill="rgb(240,168,33)" fg:x="2529" fg:w="1"/><text x="58.2679%" y="943.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="58.0179%" y="917" width="0.0229%" height="15" fill="rgb(243,159,6)" fg:x="2529" fg:w="1"/><text x="58.2679%" y="927.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="58.0179%" y="901" width="0.0229%" height="15" fill="rgb(205,211,41)" fg:x="2529" fg:w="1"/><text x="58.2679%" y="911.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="58.0179%" y="885" width="0.0229%" height="15" fill="rgb(253,30,1)" fg:x="2529" fg:w="1"/><text x="58.2679%" y="895.50"></text></g><g><title>hrtimer_wakeup (1 samples, 0.02%)</title><rect x="58.0179%" y="869" width="0.0229%" height="15" fill="rgb(226,80,18)" fg:x="2529" fg:w="1"/><text x="58.2679%" y="879.50"></text></g><g><title>wake_up_process (1 samples, 0.02%)</title><rect x="58.0179%" y="853" width="0.0229%" height="15" fill="rgb(253,156,46)" fg:x="2529" fg:w="1"/><text x="58.2679%" y="863.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="58.0179%" y="837" width="0.0229%" height="15" fill="rgb(248,87,27)" fg:x="2529" fg:w="1"/><text x="58.2679%" y="847.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="58.0179%" y="821" width="0.0229%" height="15" fill="rgb(227,122,2)" fg:x="2529" fg:w="1"/><text x="58.2679%" y="831.50"></text></g><g><title>enqueue_task_rt (1 samples, 0.02%)</title><rect x="58.0179%" y="805" width="0.0229%" height="15" fill="rgb(229,94,39)" fg:x="2529" fg:w="1"/><text x="58.2679%" y="815.50"></text></g><g><title>enqueue_top_rt_rq (1 samples, 0.02%)</title><rect x="58.0179%" y="789" width="0.0229%" height="15" fill="rgb(225,173,31)" fg:x="2529" fg:w="1"/><text x="58.2679%" y="799.50"></text></g><g><title>dbs_update_util_handler (1 samples, 0.02%)</title><rect x="58.0179%" y="773" width="0.0229%" height="15" fill="rgb(239,176,30)" fg:x="2529" fg:w="1"/><text x="58.2679%" y="783.50"></text></g><g><title>cpufreq_this_cpu_can_update (1 samples, 0.02%)</title><rect x="58.0179%" y="757" width="0.0229%" height="15" fill="rgb(212,104,21)" fg:x="2529" fg:w="1"/><text x="58.2679%" y="767.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (3 samples, 0.07%)</title><rect x="58.0408%" y="981" width="0.0688%" height="15" fill="rgb(240,209,40)" fg:x="2530" fg:w="3"/><text x="58.2908%" y="991.50"></text></g><g><title>core::cmp::Ordering::then_with (2 samples, 0.05%)</title><rect x="58.1097%" y="917" width="0.0459%" height="15" fill="rgb(234,195,5)" fg:x="2533" fg:w="2"/><text x="58.3597%" y="927.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp::{{closure}} (1 samples, 0.02%)</title><rect x="58.1326%" y="901" width="0.0229%" height="15" fill="rgb(238,213,1)" fg:x="2534" fg:w="1"/><text x="58.3826%" y="911.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (1 samples, 0.02%)</title><rect x="58.1326%" y="885" width="0.0229%" height="15" fill="rgb(235,182,54)" fg:x="2534" fg:w="1"/><text x="58.3826%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.02%)</title><rect x="58.1326%" y="869" width="0.0229%" height="15" fill="rgb(229,50,46)" fg:x="2534" fg:w="1"/><text x="58.3826%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (4 samples, 0.09%)</title><rect x="58.1097%" y="981" width="0.0918%" height="15" fill="rgb(219,145,13)" fg:x="2533" fg:w="4"/><text x="58.3597%" y="991.50"></text></g><g><title>core::cmp::PartialOrd::le (4 samples, 0.09%)</title><rect x="58.1097%" y="965" width="0.0918%" height="15" fill="rgb(220,226,10)" fg:x="2533" fg:w="4"/><text x="58.3597%" y="975.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::PartialOrd&gt;::partial_cmp (4 samples, 0.09%)</title><rect x="58.1097%" y="949" width="0.0918%" height="15" fill="rgb(248,47,30)" fg:x="2533" fg:w="4"/><text x="58.3597%" y="959.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp (4 samples, 0.09%)</title><rect x="58.1097%" y="933" width="0.0918%" height="15" fill="rgb(231,209,44)" fg:x="2533" fg:w="4"/><text x="58.3597%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (2 samples, 0.05%)</title><rect x="58.1555%" y="917" width="0.0459%" height="15" fill="rgb(209,80,30)" fg:x="2535" fg:w="2"/><text x="58.4055%" y="927.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (14 samples, 0.32%)</title><rect x="57.9261%" y="997" width="0.3212%" height="15" fill="rgb(232,9,14)" fg:x="2525" fg:w="14"/><text x="58.1761%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;y2021::d15::main::SearchPosition&gt;&gt; (2 samples, 0.05%)</title><rect x="58.2014%" y="981" width="0.0459%" height="15" fill="rgb(243,91,43)" fg:x="2537" fg:w="2"/><text x="58.4514%" y="991.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="58.2014%" y="965" width="0.0459%" height="15" fill="rgb(231,90,52)" fg:x="2537" fg:w="2"/><text x="58.4514%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="58.2014%" y="949" width="0.0459%" height="15" fill="rgb(253,192,44)" fg:x="2537" fg:w="2"/><text x="58.4514%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.85%)</title><rect x="58.2473%" y="981" width="0.8488%" height="15" fill="rgb(241,66,31)" fg:x="2539" fg:w="37"/><text x="58.4973%" y="991.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (50 samples, 1.15%)</title><rect x="58.2473%" y="997" width="1.1471%" height="15" fill="rgb(235,81,37)" fg:x="2539" fg:w="50"/><text x="58.4973%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (13 samples, 0.30%)</title><rect x="59.0961%" y="981" width="0.2982%" height="15" fill="rgb(223,221,9)" fg:x="2576" fg:w="13"/><text x="59.3461%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.30%)</title><rect x="59.0961%" y="965" width="0.2982%" height="15" fill="rgb(242,180,7)" fg:x="2576" fg:w="13"/><text x="59.3461%" y="975.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="59.3944%" y="997" width="0.0229%" height="15" fill="rgb(243,78,19)" fg:x="2589" fg:w="1"/><text x="59.6444%" y="1007.50"></text></g><g><title>core::cmp::Ordering::then_with (28 samples, 0.64%)</title><rect x="60.0367%" y="933" width="0.6423%" height="15" fill="rgb(233,23,17)" fg:x="2617" fg:w="28"/><text x="60.2867%" y="943.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp::{{closure}} (19 samples, 0.44%)</title><rect x="60.2432%" y="917" width="0.4359%" height="15" fill="rgb(252,122,45)" fg:x="2626" fg:w="19"/><text x="60.4932%" y="927.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (13 samples, 0.30%)</title><rect x="60.3808%" y="901" width="0.2982%" height="15" fill="rgb(247,108,20)" fg:x="2632" fg:w="13"/><text x="60.6308%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (5 samples, 0.11%)</title><rect x="60.5643%" y="885" width="0.1147%" height="15" fill="rgb(235,84,21)" fg:x="2640" fg:w="5"/><text x="60.8143%" y="895.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (162 samples, 3.72%)</title><rect x="57.3755%" y="1013" width="3.7164%" height="15" fill="rgb(247,129,10)" fg:x="2501" fg:w="162"/><text x="57.6255%" y="1023.50">allo..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (73 samples, 1.67%)</title><rect x="59.4173%" y="997" width="1.6747%" height="15" fill="rgb(208,173,14)" fg:x="2590" fg:w="73"/><text x="59.6673%" y="1007.50"></text></g><g><title>core::cmp::PartialOrd::le (73 samples, 1.67%)</title><rect x="59.4173%" y="981" width="1.6747%" height="15" fill="rgb(236,31,38)" fg:x="2590" fg:w="73"/><text x="59.6673%" y="991.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::PartialOrd&gt;::partial_cmp (65 samples, 1.49%)</title><rect x="59.6008%" y="965" width="1.4912%" height="15" fill="rgb(232,65,17)" fg:x="2598" fg:w="65"/><text x="59.8508%" y="975.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp (65 samples, 1.49%)</title><rect x="59.6008%" y="949" width="1.4912%" height="15" fill="rgb(224,45,49)" fg:x="2598" fg:w="65"/><text x="59.8508%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (18 samples, 0.41%)</title><rect x="60.6791%" y="933" width="0.4129%" height="15" fill="rgb(225,2,53)" fg:x="2645" fg:w="18"/><text x="60.9291%" y="943.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (205 samples, 4.70%)</title><rect x="56.4120%" y="1061" width="4.7029%" height="15" fill="rgb(248,210,53)" fg:x="2459" fg:w="205"/><text x="56.6620%" y="1071.50">alloc..</text></g><g><title>core::option::Option&lt;T&gt;::map (204 samples, 4.68%)</title><rect x="56.4350%" y="1045" width="4.6800%" height="15" fill="rgb(211,1,30)" fg:x="2460" fg:w="204"/><text x="56.6850%" y="1055.50">core:..</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (163 samples, 3.74%)</title><rect x="57.3755%" y="1029" width="3.7394%" height="15" fill="rgb(224,96,15)" fg:x="2501" fg:w="163"/><text x="57.6255%" y="1039.50">allo..</text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="61.0920%" y="1013" width="0.0229%" height="15" fill="rgb(252,45,11)" fg:x="2663" fg:w="1"/><text x="61.3420%" y="1023.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="61.0920%" y="997" width="0.0229%" height="15" fill="rgb(220,125,38)" fg:x="2663" fg:w="1"/><text x="61.3420%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="61.0920%" y="981" width="0.0229%" height="15" fill="rgb(243,161,33)" fg:x="2663" fg:w="1"/><text x="61.3420%" y="991.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (2 samples, 0.05%)</title><rect x="61.1608%" y="1029" width="0.0459%" height="15" fill="rgb(248,197,34)" fg:x="2666" fg:w="2"/><text x="61.4108%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.05%)</title><rect x="61.1608%" y="1013" width="0.0459%" height="15" fill="rgb(228,165,23)" fg:x="2666" fg:w="2"/><text x="61.4108%" y="1023.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="61.2067%" y="1029" width="0.0459%" height="15" fill="rgb(236,94,38)" fg:x="2668" fg:w="2"/><text x="61.4567%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (4 samples, 0.09%)</title><rect x="61.2526%" y="1029" width="0.0918%" height="15" fill="rgb(220,13,23)" fg:x="2670" fg:w="4"/><text x="61.5026%" y="1039.50"></text></g><g><title>core::cmp::PartialOrd::le (4 samples, 0.09%)</title><rect x="61.2526%" y="1013" width="0.0918%" height="15" fill="rgb(234,26,39)" fg:x="2670" fg:w="4"/><text x="61.5026%" y="1023.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::PartialOrd&gt;::partial_cmp (4 samples, 0.09%)</title><rect x="61.2526%" y="997" width="0.0918%" height="15" fill="rgb(205,117,44)" fg:x="2670" fg:w="4"/><text x="61.5026%" y="1007.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp (4 samples, 0.09%)</title><rect x="61.2526%" y="981" width="0.0918%" height="15" fill="rgb(250,42,2)" fg:x="2670" fg:w="4"/><text x="61.5026%" y="991.50"></text></g><g><title>core::cmp::Ordering::then_with (4 samples, 0.09%)</title><rect x="61.2526%" y="965" width="0.0918%" height="15" fill="rgb(223,83,14)" fg:x="2670" fg:w="4"/><text x="61.5026%" y="975.50"></text></g><g><title>&lt;y2021::d15::main::SearchPosition as core::cmp::Ord&gt;::cmp::{{closure}} (4 samples, 0.09%)</title><rect x="61.2526%" y="949" width="0.0918%" height="15" fill="rgb(241,147,50)" fg:x="2670" fg:w="4"/><text x="61.5026%" y="959.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (4 samples, 0.09%)</title><rect x="61.2526%" y="933" width="0.0918%" height="15" fill="rgb(218,90,6)" fg:x="2670" fg:w="4"/><text x="61.5026%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (3 samples, 0.07%)</title><rect x="61.2755%" y="917" width="0.0688%" height="15" fill="rgb(210,191,5)" fg:x="2671" fg:w="3"/><text x="61.5255%" y="927.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (9 samples, 0.21%)</title><rect x="61.1608%" y="1045" width="0.2065%" height="15" fill="rgb(225,139,19)" fg:x="2666" fg:w="9"/><text x="61.4108%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;y2021::d15::main::SearchPosition&gt;&gt; (1 samples, 0.02%)</title><rect x="61.3443%" y="1029" width="0.0229%" height="15" fill="rgb(210,1,33)" fg:x="2674" fg:w="1"/><text x="61.5943%" y="1039.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="61.3443%" y="1013" width="0.0229%" height="15" fill="rgb(213,50,3)" fg:x="2674" fg:w="1"/><text x="61.5943%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="61.3443%" y="997" width="0.0229%" height="15" fill="rgb(234,227,4)" fg:x="2674" fg:w="1"/><text x="61.5943%" y="1007.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (13 samples, 0.30%)</title><rect x="61.1149%" y="1061" width="0.2982%" height="15" fill="rgb(246,63,5)" fg:x="2664" fg:w="13"/><text x="61.3649%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.05%)</title><rect x="61.3673%" y="1045" width="0.0459%" height="15" fill="rgb(245,136,27)" fg:x="2675" fg:w="2"/><text x="61.6173%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="61.3902%" y="1029" width="0.0229%" height="15" fill="rgb(247,199,27)" fg:x="2676" fg:w="1"/><text x="61.6402%" y="1039.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="61.5049%" y="901" width="0.0229%" height="15" fill="rgb(252,158,49)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="911.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="61.5049%" y="885" width="0.0229%" height="15" fill="rgb(254,73,1)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="895.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="61.5049%" y="869" width="0.0229%" height="15" fill="rgb(248,93,19)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="879.50"></text></g><g><title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="61.5049%" y="853" width="0.0229%" height="15" fill="rgb(206,67,5)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="863.50"></text></g><g><title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="61.5049%" y="837" width="0.0229%" height="15" fill="rgb(209,210,4)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="847.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="61.5049%" y="821" width="0.0229%" height="15" fill="rgb(214,185,36)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="831.50"></text></g><g><title>asm_sysvec_irq_work (1 samples, 0.02%)</title><rect x="61.5049%" y="805" width="0.0229%" height="15" fill="rgb(233,191,26)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="815.50"></text></g><g><title>sysvec_irq_work (1 samples, 0.02%)</title><rect x="61.5049%" y="789" width="0.0229%" height="15" fill="rgb(248,94,17)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="799.50"></text></g><g><title>__sysvec_irq_work (1 samples, 0.02%)</title><rect x="61.5049%" y="773" width="0.0229%" height="15" fill="rgb(250,64,4)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="783.50"></text></g><g><title>irq_work_run (1 samples, 0.02%)</title><rect x="61.5049%" y="757" width="0.0229%" height="15" fill="rgb(218,41,53)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="767.50"></text></g><g><title>irq_work_run_list (1 samples, 0.02%)</title><rect x="61.5049%" y="741" width="0.0229%" height="15" fill="rgb(251,176,28)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="751.50"></text></g><g><title>irq_work_single (1 samples, 0.02%)</title><rect x="61.5049%" y="725" width="0.0229%" height="15" fill="rgb(247,22,9)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="735.50"></text></g><g><title>dbs_irq_work (1 samples, 0.02%)</title><rect x="61.5049%" y="709" width="0.0229%" height="15" fill="rgb(218,201,14)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="719.50"></text></g><g><title>queue_work_on (1 samples, 0.02%)</title><rect x="61.5049%" y="693" width="0.0229%" height="15" fill="rgb(218,94,10)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="703.50"></text></g><g><title>__queue_work (1 samples, 0.02%)</title><rect x="61.5049%" y="677" width="0.0229%" height="15" fill="rgb(222,183,52)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="687.50"></text></g><g><title>insert_work (1 samples, 0.02%)</title><rect x="61.5049%" y="661" width="0.0229%" height="15" fill="rgb(242,140,25)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="671.50"></text></g><g><title>wake_up_process (1 samples, 0.02%)</title><rect x="61.5049%" y="645" width="0.0229%" height="15" fill="rgb(235,197,38)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="655.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="61.5049%" y="629" width="0.0229%" height="15" fill="rgb(237,136,15)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="639.50"></text></g><g><title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="61.5049%" y="613" width="0.0229%" height="15" fill="rgb(223,44,49)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="623.50"></text></g><g><title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="61.5049%" y="597" width="0.0229%" height="15" fill="rgb(227,71,15)" fg:x="2681" fg:w="1"/><text x="61.7549%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="61.5279%" y="901" width="0.0229%" height="15" fill="rgb(225,153,20)" fg:x="2682" fg:w="1"/><text x="61.7779%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.16%)</title><rect x="61.4132%" y="981" width="0.1606%" height="15" fill="rgb(210,190,26)" fg:x="2677" fg:w="7"/><text x="61.6632%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.16%)</title><rect x="61.4132%" y="965" width="0.1606%" height="15" fill="rgb(223,147,5)" fg:x="2677" fg:w="7"/><text x="61.6632%" y="975.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="61.5049%" y="949" width="0.0688%" height="15" fill="rgb(207,14,23)" fg:x="2681" fg:w="3"/><text x="61.7549%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="61.5049%" y="933" width="0.0688%" height="15" fill="rgb(211,195,53)" fg:x="2681" fg:w="3"/><text x="61.7549%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="61.5049%" y="917" width="0.0688%" height="15" fill="rgb(237,75,46)" fg:x="2681" fg:w="3"/><text x="61.7549%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (1 samples, 0.02%)</title><rect x="61.5508%" y="901" width="0.0229%" height="15" fill="rgb(254,55,14)" fg:x="2683" fg:w="1"/><text x="61.8008%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="61.5508%" y="885" width="0.0229%" height="15" fill="rgb(230,185,30)" fg:x="2683" fg:w="1"/><text x="61.8008%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="61.5508%" y="869" width="0.0229%" height="15" fill="rgb(220,14,11)" fg:x="2683" fg:w="1"/><text x="61.8008%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by::fold::{{closure}} (8 samples, 0.18%)</title><rect x="61.5738%" y="965" width="0.1835%" height="15" fill="rgb(215,169,44)" fg:x="2684" fg:w="8"/><text x="61.8238%" y="975.50"></text></g><g><title>core::cmp::max_by (8 samples, 0.18%)</title><rect x="61.5738%" y="949" width="0.1835%" height="15" fill="rgb(253,203,20)" fg:x="2684" fg:w="8"/><text x="61.8238%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="61.7343%" y="933" width="0.0229%" height="15" fill="rgb(229,225,17)" fg:x="2691" fg:w="1"/><text x="61.9843%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (16 samples, 0.37%)</title><rect x="61.4132%" y="1061" width="0.3671%" height="15" fill="rgb(236,76,26)" fg:x="2677" fg:w="16"/><text x="61.6632%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (16 samples, 0.37%)</title><rect x="61.4132%" y="1045" width="0.3671%" height="15" fill="rgb(234,15,30)" fg:x="2677" fg:w="16"/><text x="61.6632%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (16 samples, 0.37%)</title><rect x="61.4132%" y="1029" width="0.3671%" height="15" fill="rgb(211,113,48)" fg:x="2677" fg:w="16"/><text x="61.6632%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.37%)</title><rect x="61.4132%" y="1013" width="0.3671%" height="15" fill="rgb(221,31,36)" fg:x="2677" fg:w="16"/><text x="61.6632%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.37%)</title><rect x="61.4132%" y="997" width="0.3671%" height="15" fill="rgb(215,118,52)" fg:x="2677" fg:w="16"/><text x="61.6632%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9 samples, 0.21%)</title><rect x="61.5738%" y="981" width="0.2065%" height="15" fill="rgb(241,151,27)" fg:x="2684" fg:w="9"/><text x="61.8238%" y="991.50"></text></g><g><title>y2021::d15::main::p02::{{closure}} (1 samples, 0.02%)</title><rect x="61.7573%" y="965" width="0.0229%" height="15" fill="rgb(253,51,3)" fg:x="2692" fg:w="1"/><text x="62.0073%" y="975.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="61.7802%" y="773" width="0.0229%" height="15" fill="rgb(216,201,24)" fg:x="2693" fg:w="1"/><text x="62.0302%" y="783.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="61.8032%" y="741" width="0.0229%" height="15" fill="rgb(231,107,4)" fg:x="2694" fg:w="1"/><text x="62.0532%" y="751.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.02%)</title><rect x="61.8032%" y="725" width="0.0229%" height="15" fill="rgb(243,97,54)" fg:x="2694" fg:w="1"/><text x="62.0532%" y="735.50"></text></g><g><title>tlb_finish_mmu (3 samples, 0.07%)</title><rect x="61.7802%" y="821" width="0.0688%" height="15" fill="rgb(221,32,51)" fg:x="2693" fg:w="3"/><text x="62.0302%" y="831.50"></text></g><g><title>tlb_flush_mmu (3 samples, 0.07%)</title><rect x="61.7802%" y="805" width="0.0688%" height="15" fill="rgb(218,171,35)" fg:x="2693" fg:w="3"/><text x="62.0302%" y="815.50"></text></g><g><title>free_pages_and_swap_cache (3 samples, 0.07%)</title><rect x="61.7802%" y="789" width="0.0688%" height="15" fill="rgb(214,20,53)" fg:x="2693" fg:w="3"/><text x="62.0302%" y="799.50"></text></g><g><title>release_pages (2 samples, 0.05%)</title><rect x="61.8032%" y="773" width="0.0459%" height="15" fill="rgb(239,9,52)" fg:x="2694" fg:w="2"/><text x="62.0532%" y="783.50"></text></g><g><title>free_unref_page_list (2 samples, 0.05%)</title><rect x="61.8032%" y="757" width="0.0459%" height="15" fill="rgb(215,114,45)" fg:x="2694" fg:w="2"/><text x="62.0532%" y="767.50"></text></g><g><title>free_unref_page_prepare.part.0 (1 samples, 0.02%)</title><rect x="61.8261%" y="741" width="0.0229%" height="15" fill="rgb(208,118,9)" fg:x="2695" fg:w="1"/><text x="62.0761%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;(usize,usize),usize&gt;&gt; (5 samples, 0.11%)</title><rect x="61.7802%" y="1061" width="0.1147%" height="15" fill="rgb(235,7,39)" fg:x="2693" fg:w="5"/><text x="62.0302%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(usize,usize),usize,std::collections::hash::map::RandomState&gt;&gt; (5 samples, 0.11%)</title><rect x="61.7802%" y="1045" width="0.1147%" height="15" fill="rgb(243,225,15)" fg:x="2693" fg:w="5"/><text x="62.0302%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((usize,usize),usize)&gt;&gt; (5 samples, 0.11%)</title><rect x="61.7802%" y="1029" width="0.1147%" height="15" fill="rgb(225,216,18)" fg:x="2693" fg:w="5"/><text x="62.0302%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.11%)</title><rect x="61.7802%" y="1013" width="0.1147%" height="15" fill="rgb(233,36,38)" fg:x="2693" fg:w="5"/><text x="62.0302%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (5 samples, 0.11%)</title><rect x="61.7802%" y="997" width="0.1147%" height="15" fill="rgb(239,88,23)" fg:x="2693" fg:w="5"/><text x="62.0302%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (5 samples, 0.11%)</title><rect x="61.7802%" y="981" width="0.1147%" height="15" fill="rgb(219,181,35)" fg:x="2693" fg:w="5"/><text x="62.0302%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.11%)</title><rect x="61.7802%" y="965" width="0.1147%" height="15" fill="rgb(215,18,46)" fg:x="2693" fg:w="5"/><text x="62.0302%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.11%)</title><rect x="61.7802%" y="949" width="0.1147%" height="15" fill="rgb(241,38,11)" fg:x="2693" fg:w="5"/><text x="62.0302%" y="959.50"></text></g><g><title>__GI_munmap (5 samples, 0.11%)</title><rect x="61.7802%" y="933" width="0.1147%" height="15" fill="rgb(248,169,45)" fg:x="2693" fg:w="5"/><text x="62.0302%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.11%)</title><rect x="61.7802%" y="917" width="0.1147%" height="15" fill="rgb(239,50,49)" fg:x="2693" fg:w="5"/><text x="62.0302%" y="927.50"></text></g><g><title>do_syscall_64 (5 samples, 0.11%)</title><rect x="61.7802%" y="901" width="0.1147%" height="15" fill="rgb(231,96,31)" fg:x="2693" fg:w="5"/><text x="62.0302%" y="911.50"></text></g><g><title>__x64_sys_munmap (5 samples, 0.11%)</title><rect x="61.7802%" y="885" width="0.1147%" height="15" fill="rgb(224,193,37)" fg:x="2693" fg:w="5"/><text x="62.0302%" y="895.50"></text></g><g><title>__vm_munmap (5 samples, 0.11%)</title><rect x="61.7802%" y="869" width="0.1147%" height="15" fill="rgb(227,153,50)" fg:x="2693" fg:w="5"/><text x="62.0302%" y="879.50"></text></g><g><title>__do_munmap (5 samples, 0.11%)</title><rect x="61.7802%" y="853" width="0.1147%" height="15" fill="rgb(249,228,3)" fg:x="2693" fg:w="5"/><text x="62.0302%" y="863.50"></text></g><g><title>unmap_region (5 samples, 0.11%)</title><rect x="61.7802%" y="837" width="0.1147%" height="15" fill="rgb(219,164,43)" fg:x="2693" fg:w="5"/><text x="62.0302%" y="847.50"></text></g><g><title>unmap_vmas (2 samples, 0.05%)</title><rect x="61.8490%" y="821" width="0.0459%" height="15" fill="rgb(216,45,41)" fg:x="2696" fg:w="2"/><text x="62.0990%" y="831.50"></text></g><g><title>unmap_single_vma (2 samples, 0.05%)</title><rect x="61.8490%" y="805" width="0.0459%" height="15" fill="rgb(210,226,51)" fg:x="2696" fg:w="2"/><text x="62.0990%" y="815.50"></text></g><g><title>unmap_page_range (2 samples, 0.05%)</title><rect x="61.8490%" y="789" width="0.0459%" height="15" fill="rgb(209,117,49)" fg:x="2696" fg:w="2"/><text x="62.0990%" y="799.50"></text></g><g><title>zap_pte_range.isra.0 (2 samples, 0.05%)</title><rect x="61.8490%" y="773" width="0.0459%" height="15" fill="rgb(206,196,24)" fg:x="2696" fg:w="2"/><text x="62.0990%" y="783.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="61.9179%" y="965" width="0.0229%" height="15" fill="rgb(253,218,3)" fg:x="2699" fg:w="1"/><text x="62.1679%" y="975.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.02%)</title><rect x="61.9408%" y="965" width="0.0229%" height="15" fill="rgb(252,166,2)" fg:x="2700" fg:w="1"/><text x="62.1908%" y="975.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.02%)</title><rect x="61.9408%" y="949" width="0.0229%" height="15" fill="rgb(236,218,26)" fg:x="2700" fg:w="1"/><text x="62.1908%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;(usize,usize),usize&gt;&gt; (14 samples, 0.32%)</title><rect x="61.8949%" y="1061" width="0.3212%" height="15" fill="rgb(254,84,19)" fg:x="2698" fg:w="14"/><text x="62.1449%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;(usize,usize),usize&gt;&gt; (14 samples, 0.32%)</title><rect x="61.8949%" y="1045" width="0.3212%" height="15" fill="rgb(219,137,29)" fg:x="2698" fg:w="14"/><text x="62.1449%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;((usize,usize),usize)&gt;&gt; (14 samples, 0.32%)</title><rect x="61.8949%" y="1029" width="0.3212%" height="15" fill="rgb(227,47,52)" fg:x="2698" fg:w="14"/><text x="62.1449%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.32%)</title><rect x="61.8949%" y="1013" width="0.3212%" height="15" fill="rgb(229,167,24)" fg:x="2698" fg:w="14"/><text x="62.1449%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.30%)</title><rect x="61.9179%" y="997" width="0.2982%" height="15" fill="rgb(233,164,1)" fg:x="2699" fg:w="13"/><text x="62.1679%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.30%)</title><rect x="61.9179%" y="981" width="0.2982%" height="15" fill="rgb(218,88,48)" fg:x="2699" fg:w="13"/><text x="62.1679%" y="991.50"></text></g><g><title>_int_free (11 samples, 0.25%)</title><rect x="61.9638%" y="965" width="0.2524%" height="15" fill="rgb(226,214,24)" fg:x="2701" fg:w="11"/><text x="62.2138%" y="975.50"></text></g><g><title>tcache_put (1 samples, 0.02%)</title><rect x="62.1932%" y="949" width="0.0229%" height="15" fill="rgb(233,29,12)" fg:x="2711" fg:w="1"/><text x="62.4432%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.07%)</title><rect x="62.4914%" y="949" width="0.0688%" height="15" fill="rgb(219,120,34)" fg:x="2724" fg:w="3"/><text x="62.7414%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="62.4914%" y="933" width="0.0688%" height="15" fill="rgb(226,78,44)" fg:x="2724" fg:w="3"/><text x="62.7414%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.18%)</title><rect x="62.5832%" y="933" width="0.1835%" height="15" fill="rgb(240,15,48)" fg:x="2728" fg:w="8"/><text x="62.8332%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (17 samples, 0.39%)</title><rect x="62.3996%" y="997" width="0.3900%" height="15" fill="rgb(253,176,7)" fg:x="2720" fg:w="17"/><text x="62.6496%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (17 samples, 0.39%)</title><rect x="62.3996%" y="981" width="0.3900%" height="15" fill="rgb(206,166,28)" fg:x="2720" fg:w="17"/><text x="62.6496%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (17 samples, 0.39%)</title><rect x="62.3996%" y="965" width="0.3900%" height="15" fill="rgb(241,53,51)" fg:x="2720" fg:w="17"/><text x="62.6496%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.23%)</title><rect x="62.5602%" y="949" width="0.2294%" height="15" fill="rgb(249,112,30)" fg:x="2727" fg:w="10"/><text x="62.8102%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="62.7667%" y="933" width="0.0229%" height="15" fill="rgb(217,85,30)" fg:x="2736" fg:w="1"/><text x="63.0167%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.05%)</title><rect x="62.7896%" y="997" width="0.0459%" height="15" fill="rgb(233,49,7)" fg:x="2737" fg:w="2"/><text x="63.0396%" y="1007.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.11%)</title><rect x="63.0649%" y="885" width="0.1147%" height="15" fill="rgb(234,109,9)" fg:x="2749" fg:w="5"/><text x="63.3149%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.18%)</title><rect x="63.0190%" y="901" width="0.1835%" height="15" fill="rgb(253,95,22)" fg:x="2747" fg:w="8"/><text x="63.2690%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="63.1796%" y="885" width="0.0229%" height="15" fill="rgb(233,176,25)" fg:x="2754" fg:w="1"/><text x="63.4296%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (41 samples, 0.94%)</title><rect x="62.3308%" y="1013" width="0.9406%" height="15" fill="rgb(236,33,39)" fg:x="2717" fg:w="41"/><text x="62.5808%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (19 samples, 0.44%)</title><rect x="62.8355%" y="997" width="0.4359%" height="15" fill="rgb(223,226,42)" fg:x="2739" fg:w="19"/><text x="63.0855%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (19 samples, 0.44%)</title><rect x="62.8355%" y="981" width="0.4359%" height="15" fill="rgb(216,99,33)" fg:x="2739" fg:w="19"/><text x="63.0855%" y="991.50"></text></g><g><title>core::hash::Hasher::write_usize (19 samples, 0.44%)</title><rect x="62.8355%" y="965" width="0.4359%" height="15" fill="rgb(235,84,23)" fg:x="2739" fg:w="19"/><text x="63.0855%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.44%)</title><rect x="62.8355%" y="949" width="0.4359%" height="15" fill="rgb(232,2,27)" fg:x="2739" fg:w="19"/><text x="63.0855%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.44%)</title><rect x="62.8355%" y="933" width="0.4359%" height="15" fill="rgb(241,23,22)" fg:x="2739" fg:w="19"/><text x="63.0855%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.44%)</title><rect x="62.8355%" y="917" width="0.4359%" height="15" fill="rgb(211,73,27)" fg:x="2739" fg:w="19"/><text x="63.0855%" y="927.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.07%)</title><rect x="63.2026%" y="901" width="0.0688%" height="15" fill="rgb(235,109,49)" fg:x="2755" fg:w="3"/><text x="63.4526%" y="911.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (1 samples, 0.02%)</title><rect x="63.3173%" y="949" width="0.0229%" height="15" fill="rgb(230,99,29)" fg:x="2760" fg:w="1"/><text x="63.5673%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="63.2943%" y="981" width="0.0688%" height="15" fill="rgb(245,199,7)" fg:x="2759" fg:w="3"/><text x="63.5443%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="63.2943%" y="965" width="0.0688%" height="15" fill="rgb(217,179,10)" fg:x="2759" fg:w="3"/><text x="63.5443%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.02%)</title><rect x="63.3402%" y="949" width="0.0229%" height="15" fill="rgb(254,99,47)" fg:x="2761" fg:w="1"/><text x="63.5902%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="63.3402%" y="933" width="0.0229%" height="15" fill="rgb(251,121,7)" fg:x="2761" fg:w="1"/><text x="63.5902%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="63.3402%" y="917" width="0.0229%" height="15" fill="rgb(250,177,26)" fg:x="2761" fg:w="1"/><text x="63.5902%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (56 samples, 1.28%)</title><rect x="62.2161%" y="1061" width="1.2847%" height="15" fill="rgb(232,88,15)" fg:x="2712" fg:w="56"/><text x="62.4661%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (56 samples, 1.28%)</title><rect x="62.2161%" y="1045" width="1.2847%" height="15" fill="rgb(251,54,54)" fg:x="2712" fg:w="56"/><text x="62.4661%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (56 samples, 1.28%)</title><rect x="62.2161%" y="1029" width="1.2847%" height="15" fill="rgb(208,177,15)" fg:x="2712" fg:w="56"/><text x="62.4661%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.23%)</title><rect x="63.2714%" y="1013" width="0.2294%" height="15" fill="rgb(205,97,32)" fg:x="2758" fg:w="10"/><text x="63.5214%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.23%)</title><rect x="63.2714%" y="997" width="0.2294%" height="15" fill="rgb(217,192,13)" fg:x="2758" fg:w="10"/><text x="63.5214%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.14%)</title><rect x="63.3632%" y="981" width="0.1376%" height="15" fill="rgb(215,163,41)" fg:x="2762" fg:w="6"/><text x="63.6132%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.14%)</title><rect x="63.3632%" y="965" width="0.1376%" height="15" fill="rgb(246,83,29)" fg:x="2762" fg:w="6"/><text x="63.6132%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.14%)</title><rect x="63.3632%" y="949" width="0.1376%" height="15" fill="rgb(219,2,45)" fg:x="2762" fg:w="6"/><text x="63.6132%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.14%)</title><rect x="63.3632%" y="933" width="0.1376%" height="15" fill="rgb(242,215,33)" fg:x="2762" fg:w="6"/><text x="63.6132%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (6 samples, 0.14%)</title><rect x="63.3632%" y="917" width="0.1376%" height="15" fill="rgb(217,1,6)" fg:x="2762" fg:w="6"/><text x="63.6132%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (6 samples, 0.14%)</title><rect x="63.3632%" y="901" width="0.1376%" height="15" fill="rgb(207,85,52)" fg:x="2762" fg:w="6"/><text x="63.6132%" y="911.50"></text></g><g><title>core::core_arch::simd::i8x16::new (6 samples, 0.14%)</title><rect x="63.3632%" y="885" width="0.1376%" height="15" fill="rgb(231,171,19)" fg:x="2762" fg:w="6"/><text x="63.6132%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.11%)</title><rect x="64.4873%" y="949" width="0.1147%" height="15" fill="rgb(207,128,4)" fg:x="2811" fg:w="5"/><text x="64.7373%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.18%)</title><rect x="64.4643%" y="965" width="0.1835%" height="15" fill="rgb(219,208,4)" fg:x="2810" fg:w="8"/><text x="64.7143%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="64.6020%" y="949" width="0.0459%" height="15" fill="rgb(235,161,42)" fg:x="2816" fg:w="2"/><text x="64.8520%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.14%)</title><rect x="64.6937%" y="949" width="0.1376%" height="15" fill="rgb(247,218,18)" fg:x="2820" fg:w="6"/><text x="64.9437%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (29 samples, 0.67%)</title><rect x="64.2349%" y="1013" width="0.6653%" height="15" fill="rgb(232,114,51)" fg:x="2800" fg:w="29"/><text x="64.4849%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (29 samples, 0.67%)</title><rect x="64.2349%" y="997" width="0.6653%" height="15" fill="rgb(222,95,3)" fg:x="2800" fg:w="29"/><text x="64.4849%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (29 samples, 0.67%)</title><rect x="64.2349%" y="981" width="0.6653%" height="15" fill="rgb(240,65,29)" fg:x="2800" fg:w="29"/><text x="64.4849%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.25%)</title><rect x="64.6479%" y="965" width="0.2524%" height="15" fill="rgb(249,209,20)" fg:x="2818" fg:w="11"/><text x="64.8979%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="64.8314%" y="949" width="0.0688%" height="15" fill="rgb(241,48,37)" fg:x="2826" fg:w="3"/><text x="65.0814%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.14%)</title><rect x="64.9002%" y="1013" width="0.1376%" height="15" fill="rgb(230,140,42)" fg:x="2829" fg:w="6"/><text x="65.1502%" y="1023.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.11%)</title><rect x="64.9231%" y="997" width="0.1147%" height="15" fill="rgb(230,176,45)" fg:x="2830" fg:w="5"/><text x="65.1731%" y="1007.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.07%)</title><rect x="64.9690%" y="981" width="0.0688%" height="15" fill="rgb(245,112,21)" fg:x="2832" fg:w="3"/><text x="65.2190%" y="991.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.07%)</title><rect x="64.9690%" y="965" width="0.0688%" height="15" fill="rgb(207,183,35)" fg:x="2832" fg:w="3"/><text x="65.2190%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.09%)</title><rect x="65.3361%" y="901" width="0.0918%" height="15" fill="rgb(227,44,33)" fg:x="2848" fg:w="4"/><text x="65.5861%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.11%)</title><rect x="65.3361%" y="917" width="0.1147%" height="15" fill="rgb(246,120,21)" fg:x="2848" fg:w="5"/><text x="65.5861%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="65.4279%" y="901" width="0.0229%" height="15" fill="rgb(235,57,52)" fg:x="2852" fg:w="1"/><text x="65.6779%" y="911.50"></text></g><g><title>hashbrown::map::make_insert_hash (54 samples, 1.24%)</title><rect x="64.2349%" y="1029" width="1.2388%" height="15" fill="rgb(238,84,10)" fg:x="2800" fg:w="54"/><text x="64.4849%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (19 samples, 0.44%)</title><rect x="65.0379%" y="1013" width="0.4359%" height="15" fill="rgb(251,200,32)" fg:x="2835" fg:w="19"/><text x="65.2879%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (19 samples, 0.44%)</title><rect x="65.0379%" y="997" width="0.4359%" height="15" fill="rgb(247,159,13)" fg:x="2835" fg:w="19"/><text x="65.2879%" y="1007.50"></text></g><g><title>core::hash::Hasher::write_usize (19 samples, 0.44%)</title><rect x="65.0379%" y="981" width="0.4359%" height="15" fill="rgb(238,64,4)" fg:x="2835" fg:w="19"/><text x="65.2879%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.41%)</title><rect x="65.0608%" y="965" width="0.4129%" height="15" fill="rgb(221,131,51)" fg:x="2836" fg:w="18"/><text x="65.3108%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.39%)</title><rect x="65.0837%" y="949" width="0.3900%" height="15" fill="rgb(242,5,29)" fg:x="2837" fg:w="17"/><text x="65.3337%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.39%)</title><rect x="65.0837%" y="933" width="0.3900%" height="15" fill="rgb(214,130,32)" fg:x="2837" fg:w="17"/><text x="65.3337%" y="943.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="65.4508%" y="917" width="0.0229%" height="15" fill="rgb(244,210,16)" fg:x="2853" fg:w="1"/><text x="65.7008%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.09%)</title><rect x="65.7261%" y="965" width="0.0918%" height="15" fill="rgb(234,48,26)" fg:x="2865" fg:w="4"/><text x="65.9761%" y="975.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.07%)</title><rect x="65.7490%" y="949" width="0.0688%" height="15" fill="rgb(231,82,38)" fg:x="2866" fg:w="3"/><text x="65.9990%" y="959.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (2 samples, 0.05%)</title><rect x="65.8178%" y="965" width="0.0459%" height="15" fill="rgb(254,128,41)" fg:x="2869" fg:w="2"/><text x="66.0678%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.25%)</title><rect x="65.6343%" y="997" width="0.2524%" height="15" fill="rgb(212,73,49)" fg:x="2861" fg:w="11"/><text x="65.8843%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.25%)</title><rect x="65.6343%" y="981" width="0.2524%" height="15" fill="rgb(205,62,54)" fg:x="2861" fg:w="11"/><text x="65.8843%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="65.8637%" y="965" width="0.0229%" height="15" fill="rgb(228,0,8)" fg:x="2871" fg:w="1"/><text x="66.1137%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="65.8637%" y="949" width="0.0229%" height="15" fill="rgb(251,28,17)" fg:x="2871" fg:w="1"/><text x="66.1137%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="65.8637%" y="933" width="0.0229%" height="15" fill="rgb(238,105,27)" fg:x="2871" fg:w="1"/><text x="66.1137%" y="943.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="65.8867%" y="949" width="0.0229%" height="15" fill="rgb(237,216,33)" fg:x="2872" fg:w="1"/><text x="66.1367%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (44 samples, 1.01%)</title><rect x="65.4737%" y="1029" width="1.0094%" height="15" fill="rgb(229,228,25)" fg:x="2854" fg:w="44"/><text x="65.7237%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (44 samples, 1.01%)</title><rect x="65.4737%" y="1013" width="1.0094%" height="15" fill="rgb(233,75,23)" fg:x="2854" fg:w="44"/><text x="65.7237%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (26 samples, 0.60%)</title><rect x="65.8867%" y="997" width="0.5965%" height="15" fill="rgb(231,207,16)" fg:x="2872" fg:w="26"/><text x="66.1367%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (26 samples, 0.60%)</title><rect x="65.8867%" y="981" width="0.5965%" height="15" fill="rgb(231,191,45)" fg:x="2872" fg:w="26"/><text x="66.1367%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (26 samples, 0.60%)</title><rect x="65.8867%" y="965" width="0.5965%" height="15" fill="rgb(224,133,17)" fg:x="2872" fg:w="26"/><text x="66.1367%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (25 samples, 0.57%)</title><rect x="65.9096%" y="949" width="0.5735%" height="15" fill="rgb(209,178,27)" fg:x="2873" fg:w="25"/><text x="66.1596%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (25 samples, 0.57%)</title><rect x="65.9096%" y="933" width="0.5735%" height="15" fill="rgb(218,37,11)" fg:x="2873" fg:w="25"/><text x="66.1596%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (25 samples, 0.57%)</title><rect x="65.9096%" y="917" width="0.5735%" height="15" fill="rgb(251,226,25)" fg:x="2873" fg:w="25"/><text x="66.1596%" y="927.50"></text></g><g><title>core::core_arch::simd::i8x16::new (25 samples, 0.57%)</title><rect x="65.9096%" y="901" width="0.5735%" height="15" fill="rgb(209,222,27)" fg:x="2873" fg:w="25"/><text x="66.1596%" y="911.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (25 samples, 0.57%)</title><rect x="66.5290%" y="1013" width="0.5735%" height="15" fill="rgb(238,22,21)" fg:x="2900" fg:w="25"/><text x="66.7790%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (25 samples, 0.57%)</title><rect x="66.5290%" y="997" width="0.5735%" height="15" fill="rgb(233,161,25)" fg:x="2900" fg:w="25"/><text x="66.7790%" y="1007.50"></text></g><g><title>core::ptr::write (25 samples, 0.57%)</title><rect x="66.5290%" y="981" width="0.5735%" height="15" fill="rgb(226,122,53)" fg:x="2900" fg:w="25"/><text x="66.7790%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="67.1025%" y="965" width="0.0459%" height="15" fill="rgb(220,123,17)" fg:x="2925" fg:w="2"/><text x="67.3525%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="67.1025%" y="949" width="0.0459%" height="15" fill="rgb(230,224,35)" fg:x="2925" fg:w="2"/><text x="67.3525%" y="959.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.05%)</title><rect x="67.1025%" y="933" width="0.0459%" height="15" fill="rgb(246,83,8)" fg:x="2925" fg:w="2"/><text x="67.3525%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="67.9514%" y="869" width="0.0459%" height="15" fill="rgb(230,214,17)" fg:x="2962" fg:w="2"/><text x="68.2014%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.18%)</title><rect x="67.8825%" y="885" width="0.1835%" height="15" fill="rgb(222,97,18)" fg:x="2959" fg:w="8"/><text x="68.1325%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="67.9972%" y="869" width="0.0688%" height="15" fill="rgb(206,79,1)" fg:x="2964" fg:w="3"/><text x="68.2472%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (16 samples, 0.37%)</title><rect x="68.2267%" y="869" width="0.3671%" height="15" fill="rgb(214,121,34)" fg:x="2974" fg:w="16"/><text x="68.4767%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (55 samples, 1.26%)</title><rect x="67.4237%" y="933" width="1.2618%" height="15" fill="rgb(249,199,46)" fg:x="2939" fg:w="55"/><text x="67.6737%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (55 samples, 1.26%)</title><rect x="67.4237%" y="917" width="1.2618%" height="15" fill="rgb(214,222,46)" fg:x="2939" fg:w="55"/><text x="67.6737%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (55 samples, 1.26%)</title><rect x="67.4237%" y="901" width="1.2618%" height="15" fill="rgb(248,168,30)" fg:x="2939" fg:w="55"/><text x="67.6737%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (27 samples, 0.62%)</title><rect x="68.0661%" y="885" width="0.6194%" height="15" fill="rgb(226,14,28)" fg:x="2967" fg:w="27"/><text x="68.3161%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.09%)</title><rect x="68.5937%" y="869" width="0.0918%" height="15" fill="rgb(253,123,1)" fg:x="2990" fg:w="4"/><text x="68.8437%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (7 samples, 0.16%)</title><rect x="68.6855%" y="933" width="0.1606%" height="15" fill="rgb(225,24,42)" fg:x="2994" fg:w="7"/><text x="68.9355%" y="943.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.11%)</title><rect x="68.7314%" y="917" width="0.1147%" height="15" fill="rgb(216,161,37)" fg:x="2996" fg:w="5"/><text x="68.9814%" y="927.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.07%)</title><rect x="68.7772%" y="901" width="0.0688%" height="15" fill="rgb(251,164,26)" fg:x="2998" fg:w="3"/><text x="69.0272%" y="911.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.07%)</title><rect x="68.7772%" y="885" width="0.0688%" height="15" fill="rgb(219,177,3)" fg:x="2998" fg:w="3"/><text x="69.0272%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.23%)</title><rect x="69.8096%" y="821" width="0.2294%" height="15" fill="rgb(222,65,0)" fg:x="3043" fg:w="10"/><text x="70.0596%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (27 samples, 0.62%)</title><rect x="69.5343%" y="837" width="0.6194%" height="15" fill="rgb(223,69,54)" fg:x="3031" fg:w="27"/><text x="69.7843%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.11%)</title><rect x="70.0390%" y="821" width="0.1147%" height="15" fill="rgb(235,30,27)" fg:x="3053" fg:w="5"/><text x="70.2890%" y="831.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (141 samples, 3.23%)</title><rect x="67.1484%" y="965" width="3.2347%" height="15" fill="rgb(220,183,50)" fg:x="2927" fg:w="141"/><text x="67.3984%" y="975.50">has..</text></g><g><title>hashbrown::map::make_hash (140 samples, 3.21%)</title><rect x="67.1714%" y="949" width="3.2117%" height="15" fill="rgb(248,198,15)" fg:x="2928" fg:w="140"/><text x="67.4214%" y="959.50">has..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (67 samples, 1.54%)</title><rect x="68.8461%" y="933" width="1.5370%" height="15" fill="rgb(222,211,4)" fg:x="3001" fg:w="67"/><text x="69.0961%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (67 samples, 1.54%)</title><rect x="68.8461%" y="917" width="1.5370%" height="15" fill="rgb(214,102,34)" fg:x="3001" fg:w="67"/><text x="69.0961%" y="927.50"></text></g><g><title>core::hash::Hasher::write_usize (67 samples, 1.54%)</title><rect x="68.8461%" y="901" width="1.5370%" height="15" fill="rgb(245,92,5)" fg:x="3001" fg:w="67"/><text x="69.0961%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (64 samples, 1.47%)</title><rect x="68.9149%" y="885" width="1.4682%" height="15" fill="rgb(252,72,51)" fg:x="3004" fg:w="64"/><text x="69.1649%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (64 samples, 1.47%)</title><rect x="68.9149%" y="869" width="1.4682%" height="15" fill="rgb(252,208,19)" fg:x="3004" fg:w="64"/><text x="69.1649%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (64 samples, 1.47%)</title><rect x="68.9149%" y="853" width="1.4682%" height="15" fill="rgb(211,69,7)" fg:x="3004" fg:w="64"/><text x="69.1649%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (10 samples, 0.23%)</title><rect x="70.1537%" y="837" width="0.2294%" height="15" fill="rgb(211,27,16)" fg:x="3058" fg:w="10"/><text x="70.4037%" y="847.50"></text></g><g><title>__irqentry_text_end (3 samples, 0.07%)</title><rect x="70.7043%" y="917" width="0.0688%" height="15" fill="rgb(219,216,14)" fg:x="3082" fg:w="3"/><text x="70.9543%" y="927.50"></text></g><g><title>down_read_trylock (1 samples, 0.02%)</title><rect x="70.9796%" y="869" width="0.0229%" height="15" fill="rgb(219,71,8)" fg:x="3094" fg:w="1"/><text x="71.2296%" y="879.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="71.0255%" y="837" width="0.0229%" height="15" fill="rgb(223,170,53)" fg:x="3096" fg:w="1"/><text x="71.2755%" y="847.50"></text></g><g><title>__get_vma_policy (2 samples, 0.05%)</title><rect x="71.0713%" y="821" width="0.0459%" height="15" fill="rgb(246,21,26)" fg:x="3098" fg:w="2"/><text x="71.3213%" y="831.50"></text></g><g><title>clear_page_rep (17 samples, 0.39%)</title><rect x="71.1402%" y="773" width="0.3900%" height="15" fill="rgb(248,20,46)" fg:x="3101" fg:w="17"/><text x="71.3902%" y="783.50"></text></g><g><title>prep_new_page (1 samples, 0.02%)</title><rect x="71.5302%" y="773" width="0.0229%" height="15" fill="rgb(252,94,11)" fg:x="3118" fg:w="1"/><text x="71.7802%" y="783.50"></text></g><g><title>alloc_pages_vma (27 samples, 0.62%)</title><rect x="71.1172%" y="821" width="0.6194%" height="15" fill="rgb(236,163,8)" fg:x="3100" fg:w="27"/><text x="71.3672%" y="831.50"></text></g><g><title>__alloc_pages_nodemask (27 samples, 0.62%)</title><rect x="71.1172%" y="805" width="0.6194%" height="15" fill="rgb(217,221,45)" fg:x="3100" fg:w="27"/><text x="71.3672%" y="815.50"></text></g><g><title>get_page_from_freelist (26 samples, 0.60%)</title><rect x="71.1402%" y="789" width="0.5965%" height="15" fill="rgb(238,38,17)" fg:x="3101" fg:w="26"/><text x="71.3902%" y="799.50"></text></g><g><title>rmqueue (8 samples, 0.18%)</title><rect x="71.5531%" y="773" width="0.1835%" height="15" fill="rgb(242,210,23)" fg:x="3119" fg:w="8"/><text x="71.8031%" y="783.50"></text></g><g><title>get_vma_policy.part.0 (1 samples, 0.02%)</title><rect x="71.7366%" y="821" width="0.0229%" height="15" fill="rgb(250,86,53)" fg:x="3127" fg:w="1"/><text x="71.9866%" y="831.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="71.8055%" y="773" width="0.0229%" height="15" fill="rgb(223,168,25)" fg:x="3130" fg:w="1"/><text x="72.0555%" y="783.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="71.8055%" y="757" width="0.0229%" height="15" fill="rgb(251,189,4)" fg:x="3130" fg:w="1"/><text x="72.0555%" y="767.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (4 samples, 0.09%)</title><rect x="71.7596%" y="821" width="0.0918%" height="15" fill="rgb(245,19,28)" fg:x="3128" fg:w="4"/><text x="72.0096%" y="831.50"></text></g><g><title>lru_cache_add (4 samples, 0.09%)</title><rect x="71.7596%" y="805" width="0.0918%" height="15" fill="rgb(207,10,34)" fg:x="3128" fg:w="4"/><text x="72.0096%" y="815.50"></text></g><g><title>__pagevec_lru_add (4 samples, 0.09%)</title><rect x="71.7596%" y="789" width="0.0918%" height="15" fill="rgb(235,153,31)" fg:x="3128" fg:w="4"/><text x="72.0096%" y="799.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="71.8284%" y="773" width="0.0229%" height="15" fill="rgb(228,72,37)" fg:x="3131" fg:w="1"/><text x="72.0784%" y="783.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="71.8513%" y="805" width="0.0229%" height="15" fill="rgb(215,15,16)" fg:x="3132" fg:w="1"/><text x="72.1013%" y="815.50"></text></g><g><title>mem_cgroup_charge (4 samples, 0.09%)</title><rect x="71.8513%" y="821" width="0.0918%" height="15" fill="rgb(250,119,29)" fg:x="3132" fg:w="4"/><text x="72.1013%" y="831.50"></text></g><g><title>try_charge (3 samples, 0.07%)</title><rect x="71.8743%" y="805" width="0.0688%" height="15" fill="rgb(214,59,1)" fg:x="3133" fg:w="3"/><text x="72.1243%" y="815.50"></text></g><g><title>page_counter_try_charge (2 samples, 0.05%)</title><rect x="71.8972%" y="789" width="0.0459%" height="15" fill="rgb(223,109,25)" fg:x="3134" fg:w="2"/><text x="72.1472%" y="799.50"></text></g><g><title>memcg_check_events (1 samples, 0.02%)</title><rect x="71.9431%" y="821" width="0.0229%" height="15" fill="rgb(230,198,22)" fg:x="3136" fg:w="1"/><text x="72.1931%" y="831.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="71.9660%" y="789" width="0.0229%" height="15" fill="rgb(245,184,46)" fg:x="3137" fg:w="1"/><text x="72.2160%" y="799.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="71.9660%" y="773" width="0.0229%" height="15" fill="rgb(253,73,16)" fg:x="3137" fg:w="1"/><text x="72.2160%" y="783.50"></text></g><g><title>__mod_memcg_state (1 samples, 0.02%)</title><rect x="71.9660%" y="757" width="0.0229%" height="15" fill="rgb(206,94,45)" fg:x="3137" fg:w="1"/><text x="72.2160%" y="767.50"></text></g><g><title>do_user_addr_fault (45 samples, 1.03%)</title><rect x="70.9796%" y="885" width="1.0323%" height="15" fill="rgb(236,83,27)" fg:x="3094" fg:w="45"/><text x="71.2296%" y="895.50"></text></g><g><title>handle_mm_fault (44 samples, 1.01%)</title><rect x="71.0025%" y="869" width="1.0094%" height="15" fill="rgb(220,196,8)" fg:x="3095" fg:w="44"/><text x="71.2525%" y="879.50"></text></g><g><title>__handle_mm_fault (43 samples, 0.99%)</title><rect x="71.0255%" y="853" width="0.9865%" height="15" fill="rgb(254,185,14)" fg:x="3096" fg:w="43"/><text x="71.2755%" y="863.50"></text></g><g><title>do_anonymous_page (42 samples, 0.96%)</title><rect x="71.0484%" y="837" width="0.9635%" height="15" fill="rgb(226,50,22)" fg:x="3097" fg:w="42"/><text x="71.2984%" y="847.50"></text></g><g><title>page_add_new_anon_rmap (2 samples, 0.05%)</title><rect x="71.9660%" y="821" width="0.0459%" height="15" fill="rgb(253,147,0)" fg:x="3137" fg:w="2"/><text x="72.2160%" y="831.50"></text></g><g><title>__mod_lruvec_page_state (2 samples, 0.05%)</title><rect x="71.9660%" y="805" width="0.0459%" height="15" fill="rgb(252,46,33)" fg:x="3137" fg:w="2"/><text x="72.2160%" y="815.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="71.9890%" y="789" width="0.0229%" height="15" fill="rgb(242,22,54)" fg:x="3138" fg:w="1"/><text x="72.2390%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (72 samples, 1.65%)</title><rect x="70.3831%" y="965" width="1.6518%" height="15" fill="rgb(223,178,32)" fg:x="3068" fg:w="72"/><text x="70.6331%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (72 samples, 1.65%)</title><rect x="70.3831%" y="949" width="1.6518%" height="15" fill="rgb(214,106,53)" fg:x="3068" fg:w="72"/><text x="70.6331%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (72 samples, 1.65%)</title><rect x="70.3831%" y="933" width="1.6518%" height="15" fill="rgb(232,65,50)" fg:x="3068" fg:w="72"/><text x="70.6331%" y="943.50"></text></g><g><title>asm_exc_page_fault (55 samples, 1.26%)</title><rect x="70.7731%" y="917" width="1.2618%" height="15" fill="rgb(231,110,28)" fg:x="3085" fg:w="55"/><text x="71.0231%" y="927.50"></text></g><g><title>exc_page_fault (47 samples, 1.08%)</title><rect x="70.9566%" y="901" width="1.0782%" height="15" fill="rgb(216,71,40)" fg:x="3093" fg:w="47"/><text x="71.2066%" y="911.50"></text></g><g><title>irqentry_exit (1 samples, 0.02%)</title><rect x="72.0119%" y="885" width="0.0229%" height="15" fill="rgb(229,89,53)" fg:x="3139" fg:w="1"/><text x="72.2619%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.02%)</title><rect x="72.0349%" y="965" width="0.0229%" height="15" fill="rgb(210,124,14)" fg:x="3140" fg:w="1"/><text x="72.2849%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.02%)</title><rect x="72.0349%" y="949" width="0.0229%" height="15" fill="rgb(236,213,6)" fg:x="3140" fg:w="1"/><text x="72.2849%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="72.0349%" y="933" width="0.0229%" height="15" fill="rgb(228,41,5)" fg:x="3140" fg:w="1"/><text x="72.2849%" y="943.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.02%)</title><rect x="72.0349%" y="917" width="0.0229%" height="15" fill="rgb(221,167,25)" fg:x="3140" fg:w="1"/><text x="72.2849%" y="927.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="72.0349%" y="901" width="0.0229%" height="15" fill="rgb(228,144,37)" fg:x="3140" fg:w="1"/><text x="72.2849%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (4 samples, 0.09%)</title><rect x="72.5396%" y="933" width="0.0918%" height="15" fill="rgb(227,189,38)" fg:x="3162" fg:w="4"/><text x="72.7896%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (13 samples, 0.30%)</title><rect x="72.6313%" y="933" width="0.2982%" height="15" fill="rgb(218,8,2)" fg:x="3166" fg:w="13"/><text x="72.8813%" y="943.50"></text></g><g><title>hashbrown::raw::is_full (7 samples, 0.16%)</title><rect x="72.9296%" y="933" width="0.1606%" height="15" fill="rgb(209,61,28)" fg:x="3179" fg:w="7"/><text x="73.1796%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (56 samples, 1.28%)</title><rect x="72.0578%" y="949" width="1.2847%" height="15" fill="rgb(233,140,39)" fg:x="3141" fg:w="56"/><text x="72.3078%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (11 samples, 0.25%)</title><rect x="73.0902%" y="933" width="0.2524%" height="15" fill="rgb(251,66,48)" fg:x="3186" fg:w="11"/><text x="73.3402%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.25%)</title><rect x="73.0902%" y="917" width="0.2524%" height="15" fill="rgb(210,44,45)" fg:x="3186" fg:w="11"/><text x="73.3402%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (60 samples, 1.38%)</title><rect x="72.0578%" y="965" width="1.3765%" height="15" fill="rgb(214,136,46)" fg:x="3141" fg:w="60"/><text x="72.3078%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (4 samples, 0.09%)</title><rect x="73.3425%" y="949" width="0.0918%" height="15" fill="rgb(207,130,50)" fg:x="3197" fg:w="4"/><text x="73.5925%" y="959.50"></text></g><g><title>hashbrown::raw::h2 (4 samples, 0.09%)</title><rect x="73.3425%" y="933" width="0.0918%" height="15" fill="rgb(228,102,49)" fg:x="3197" fg:w="4"/><text x="73.5925%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (2 samples, 0.05%)</title><rect x="73.4343%" y="933" width="0.0459%" height="15" fill="rgb(253,55,1)" fg:x="3201" fg:w="2"/><text x="73.6843%" y="943.50"></text></g><g><title>core::intrinsics::write_bytes (2 samples, 0.05%)</title><rect x="73.4343%" y="917" width="0.0459%" height="15" fill="rgb(238,222,9)" fg:x="3201" fg:w="2"/><text x="73.6843%" y="927.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.05%)</title><rect x="73.4343%" y="901" width="0.0459%" height="15" fill="rgb(246,99,6)" fg:x="3201" fg:w="2"/><text x="73.6843%" y="911.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.05%)</title><rect x="73.4343%" y="885" width="0.0459%" height="15" fill="rgb(219,110,26)" fg:x="3201" fg:w="2"/><text x="73.6843%" y="895.50"></text></g><g><title>exc_page_fault (2 samples, 0.05%)</title><rect x="73.4343%" y="869" width="0.0459%" height="15" fill="rgb(239,160,33)" fg:x="3201" fg:w="2"/><text x="73.6843%" y="879.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.05%)</title><rect x="73.4343%" y="853" width="0.0459%" height="15" fill="rgb(220,202,23)" fg:x="3201" fg:w="2"/><text x="73.6843%" y="863.50"></text></g><g><title>handle_mm_fault (2 samples, 0.05%)</title><rect x="73.4343%" y="837" width="0.0459%" height="15" fill="rgb(208,80,26)" fg:x="3201" fg:w="2"/><text x="73.6843%" y="847.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.05%)</title><rect x="73.4343%" y="821" width="0.0459%" height="15" fill="rgb(243,85,7)" fg:x="3201" fg:w="2"/><text x="73.6843%" y="831.50"></text></g><g><title>do_anonymous_page (2 samples, 0.05%)</title><rect x="73.4343%" y="805" width="0.0459%" height="15" fill="rgb(228,77,47)" fg:x="3201" fg:w="2"/><text x="73.6843%" y="815.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.05%)</title><rect x="73.4343%" y="789" width="0.0459%" height="15" fill="rgb(212,226,8)" fg:x="3201" fg:w="2"/><text x="73.6843%" y="799.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.05%)</title><rect x="73.4343%" y="773" width="0.0459%" height="15" fill="rgb(241,120,54)" fg:x="3201" fg:w="2"/><text x="73.6843%" y="783.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.05%)</title><rect x="73.4343%" y="757" width="0.0459%" height="15" fill="rgb(226,80,16)" fg:x="3201" fg:w="2"/><text x="73.6843%" y="767.50"></text></g><g><title>clear_page_rep (2 samples, 0.05%)</title><rect x="73.4343%" y="741" width="0.0459%" height="15" fill="rgb(240,76,13)" fg:x="3201" fg:w="2"/><text x="73.6843%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (279 samples, 6.40%)</title><rect x="67.1025%" y="1013" width="6.4006%" height="15" fill="rgb(252,74,8)" fg:x="2925" fg:w="279"/><text x="67.3525%" y="1023.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (279 samples, 6.40%)</title><rect x="67.1025%" y="997" width="6.4006%" height="15" fill="rgb(244,155,2)" fg:x="2925" fg:w="279"/><text x="67.3525%" y="1007.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (279 samples, 6.40%)</title><rect x="67.1025%" y="981" width="6.4006%" height="15" fill="rgb(215,81,35)" fg:x="2925" fg:w="279"/><text x="67.3525%" y="991.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (3 samples, 0.07%)</title><rect x="73.4343%" y="965" width="0.0688%" height="15" fill="rgb(206,55,2)" fg:x="3201" fg:w="3"/><text x="73.6843%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (3 samples, 0.07%)</title><rect x="73.4343%" y="949" width="0.0688%" height="15" fill="rgb(231,2,34)" fg:x="3201" fg:w="3"/><text x="73.6843%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.02%)</title><rect x="73.4802%" y="933" width="0.0229%" height="15" fill="rgb(242,176,48)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="943.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.02%)</title><rect x="73.4802%" y="917" width="0.0229%" height="15" fill="rgb(249,31,36)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="73.4802%" y="901" width="0.0229%" height="15" fill="rgb(205,18,17)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="73.4802%" y="885" width="0.0229%" height="15" fill="rgb(254,130,5)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="895.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="73.4802%" y="869" width="0.0229%" height="15" fill="rgb(229,42,45)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="879.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="73.4802%" y="853" width="0.0229%" height="15" fill="rgb(245,95,25)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="863.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="73.4802%" y="837" width="0.0229%" height="15" fill="rgb(249,193,38)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="847.50"></text></g><g><title>sysmalloc (1 samples, 0.02%)</title><rect x="73.4802%" y="821" width="0.0229%" height="15" fill="rgb(241,140,43)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="831.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.02%)</title><rect x="73.4802%" y="805" width="0.0229%" height="15" fill="rgb(245,78,48)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="815.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.02%)</title><rect x="73.4802%" y="789" width="0.0229%" height="15" fill="rgb(214,92,39)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="73.4802%" y="773" width="0.0229%" height="15" fill="rgb(211,189,14)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="783.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="73.4802%" y="757" width="0.0229%" height="15" fill="rgb(218,7,24)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="767.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.02%)</title><rect x="73.4802%" y="741" width="0.0229%" height="15" fill="rgb(224,200,49)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="751.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.02%)</title><rect x="73.4802%" y="725" width="0.0229%" height="15" fill="rgb(218,210,14)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="735.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="73.4802%" y="709" width="0.0229%" height="15" fill="rgb(234,142,31)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="719.50"></text></g><g><title>do_mmap (1 samples, 0.02%)</title><rect x="73.4802%" y="693" width="0.0229%" height="15" fill="rgb(227,165,2)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="703.50"></text></g><g><title>mmap_region (1 samples, 0.02%)</title><rect x="73.4802%" y="677" width="0.0229%" height="15" fill="rgb(232,44,46)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="687.50"></text></g><g><title>perf_event_mmap (1 samples, 0.02%)</title><rect x="73.4802%" y="661" width="0.0229%" height="15" fill="rgb(236,149,47)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="671.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="73.4802%" y="645" width="0.0229%" height="15" fill="rgb(227,45,31)" fg:x="3203" fg:w="1"/><text x="73.7302%" y="655.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="73.6178%" y="997" width="0.0229%" height="15" fill="rgb(240,176,51)" fg:x="3209" fg:w="1"/><text x="73.8678%" y="1007.50"></text></g><g><title>hashbrown::raw::is_full (7 samples, 0.16%)</title><rect x="73.6407%" y="997" width="0.1606%" height="15" fill="rgb(249,146,41)" fg:x="3210" fg:w="7"/><text x="73.8907%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (14 samples, 0.32%)</title><rect x="73.5031%" y="1013" width="0.3212%" height="15" fill="rgb(213,208,4)" fg:x="3204" fg:w="14"/><text x="73.7531%" y="1023.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="73.8013%" y="997" width="0.0229%" height="15" fill="rgb(245,84,36)" fg:x="3217" fg:w="1"/><text x="74.0513%" y="1007.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="73.8013%" y="981" width="0.0229%" height="15" fill="rgb(254,84,18)" fg:x="3217" fg:w="1"/><text x="74.0513%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (454 samples, 10.42%)</title><rect x="63.5008%" y="1061" width="10.4152%" height="15" fill="rgb(225,38,54)" fg:x="2768" fg:w="454"/><text x="63.7508%" y="1071.50">std::collection..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (446 samples, 10.23%)</title><rect x="63.6843%" y="1045" width="10.2317%" height="15" fill="rgb(246,50,30)" fg:x="2776" fg:w="446"/><text x="63.9343%" y="1055.50">hashbrown::map:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (324 samples, 7.43%)</title><rect x="66.4831%" y="1029" width="7.4329%" height="15" fill="rgb(246,148,9)" fg:x="2898" fg:w="324"/><text x="66.7331%" y="1039.50">hashbrown:..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (4 samples, 0.09%)</title><rect x="73.8243%" y="1013" width="0.0918%" height="15" fill="rgb(223,75,4)" fg:x="3218" fg:w="4"/><text x="74.0743%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.02%)</title><rect x="73.8931%" y="997" width="0.0229%" height="15" fill="rgb(239,148,41)" fg:x="3221" fg:w="1"/><text x="74.1431%" y="1007.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.02%)</title><rect x="73.8931%" y="981" width="0.0229%" height="15" fill="rgb(205,195,3)" fg:x="3221" fg:w="1"/><text x="74.1431%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="74.0537%" y="885" width="0.0688%" height="15" fill="rgb(254,161,1)" fg:x="3228" fg:w="3"/><text x="74.3037%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.16%)</title><rect x="74.4437%" y="709" width="0.1606%" height="15" fill="rgb(211,229,8)" fg:x="3245" fg:w="7"/><text x="74.6937%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.09%)</title><rect x="74.5125%" y="693" width="0.0918%" height="15" fill="rgb(220,97,9)" fg:x="3248" fg:w="4"/><text x="74.7625%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.11%)</title><rect x="74.6272%" y="693" width="0.1147%" height="15" fill="rgb(240,218,8)" fg:x="3253" fg:w="5"/><text x="74.8772%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.37%)</title><rect x="74.3978%" y="757" width="0.3671%" height="15" fill="rgb(250,44,0)" fg:x="3243" fg:w="16"/><text x="74.6478%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.37%)</title><rect x="74.3978%" y="741" width="0.3671%" height="15" fill="rgb(236,41,53)" fg:x="3243" fg:w="16"/><text x="74.6478%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.37%)</title><rect x="74.3978%" y="725" width="0.3671%" height="15" fill="rgb(218,227,13)" fg:x="3243" fg:w="16"/><text x="74.6478%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.16%)</title><rect x="74.6043%" y="709" width="0.1606%" height="15" fill="rgb(217,94,32)" fg:x="3252" fg:w="7"/><text x="74.8543%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="74.7419%" y="693" width="0.0229%" height="15" fill="rgb(213,217,12)" fg:x="3258" fg:w="1"/><text x="74.9919%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="74.7649%" y="757" width="0.0229%" height="15" fill="rgb(229,13,46)" fg:x="3259" fg:w="1"/><text x="75.0149%" y="767.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="74.7649%" y="741" width="0.0229%" height="15" fill="rgb(243,139,5)" fg:x="3259" fg:w="1"/><text x="75.0149%" y="751.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="74.7649%" y="725" width="0.0229%" height="15" fill="rgb(249,38,45)" fg:x="3259" fg:w="1"/><text x="75.0149%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="74.7649%" y="709" width="0.0229%" height="15" fill="rgb(216,70,11)" fg:x="3259" fg:w="1"/><text x="75.0149%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="75.1090%" y="645" width="0.0688%" height="15" fill="rgb(253,101,25)" fg:x="3274" fg:w="3"/><text x="75.3590%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.16%)</title><rect x="75.0860%" y="661" width="0.1606%" height="15" fill="rgb(207,197,30)" fg:x="3273" fg:w="7"/><text x="75.3360%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="75.1778%" y="645" width="0.0688%" height="15" fill="rgb(238,87,13)" fg:x="3277" fg:w="3"/><text x="75.4278%" y="655.50"></text></g><g><title>hashbrown::map::make_insert_hash (38 samples, 0.87%)</title><rect x="74.3978%" y="773" width="0.8718%" height="15" fill="rgb(215,155,8)" fg:x="3243" fg:w="38"/><text x="74.6478%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (21 samples, 0.48%)</title><rect x="74.7878%" y="757" width="0.4818%" height="15" fill="rgb(239,166,38)" fg:x="3260" fg:w="21"/><text x="75.0378%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (21 samples, 0.48%)</title><rect x="74.7878%" y="741" width="0.4818%" height="15" fill="rgb(240,194,35)" fg:x="3260" fg:w="21"/><text x="75.0378%" y="751.50"></text></g><g><title>core::hash::Hasher::write_usize (21 samples, 0.48%)</title><rect x="74.7878%" y="725" width="0.4818%" height="15" fill="rgb(219,10,44)" fg:x="3260" fg:w="21"/><text x="75.0378%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.44%)</title><rect x="74.8337%" y="709" width="0.4359%" height="15" fill="rgb(251,220,35)" fg:x="3262" fg:w="19"/><text x="75.0837%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.44%)</title><rect x="74.8337%" y="693" width="0.4359%" height="15" fill="rgb(218,117,13)" fg:x="3262" fg:w="19"/><text x="75.0837%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.44%)</title><rect x="74.8337%" y="677" width="0.4359%" height="15" fill="rgb(221,213,40)" fg:x="3262" fg:w="19"/><text x="75.0837%" y="687.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="75.2466%" y="661" width="0.0229%" height="15" fill="rgb(251,224,35)" fg:x="3280" fg:w="1"/><text x="75.4966%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (6 samples, 0.14%)</title><rect x="75.2696%" y="773" width="0.1376%" height="15" fill="rgb(241,33,39)" fg:x="3281" fg:w="6"/><text x="75.5196%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.14%)</title><rect x="75.2696%" y="757" width="0.1376%" height="15" fill="rgb(222,74,17)" fg:x="3281" fg:w="6"/><text x="75.5196%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.11%)</title><rect x="75.2925%" y="741" width="0.1147%" height="15" fill="rgb(225,103,0)" fg:x="3282" fg:w="5"/><text x="75.5425%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.11%)</title><rect x="75.2925%" y="725" width="0.1147%" height="15" fill="rgb(240,0,12)" fg:x="3282" fg:w="5"/><text x="75.5425%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.11%)</title><rect x="75.2925%" y="709" width="0.1147%" height="15" fill="rgb(233,213,37)" fg:x="3282" fg:w="5"/><text x="75.5425%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.11%)</title><rect x="75.2925%" y="693" width="0.1147%" height="15" fill="rgb(225,84,52)" fg:x="3282" fg:w="5"/><text x="75.5425%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.11%)</title><rect x="75.2925%" y="677" width="0.1147%" height="15" fill="rgb(247,160,51)" fg:x="3282" fg:w="5"/><text x="75.5425%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.11%)</title><rect x="75.2925%" y="661" width="0.1147%" height="15" fill="rgb(244,60,51)" fg:x="3282" fg:w="5"/><text x="75.5425%" y="671.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.11%)</title><rect x="75.2925%" y="645" width="0.1147%" height="15" fill="rgb(233,114,7)" fg:x="3282" fg:w="5"/><text x="75.5425%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.05%)</title><rect x="75.4990%" y="757" width="0.0459%" height="15" fill="rgb(246,136,16)" fg:x="3291" fg:w="2"/><text x="75.7490%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.05%)</title><rect x="75.4990%" y="741" width="0.0459%" height="15" fill="rgb(243,114,45)" fg:x="3291" fg:w="2"/><text x="75.7490%" y="751.50"></text></g><g><title>core::ptr::write (2 samples, 0.05%)</title><rect x="75.4990%" y="725" width="0.0459%" height="15" fill="rgb(247,183,43)" fg:x="3291" fg:w="2"/><text x="75.7490%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="75.5907%" y="709" width="0.0688%" height="15" fill="rgb(251,210,42)" fg:x="3295" fg:w="3"/><text x="75.8407%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="75.5907%" y="693" width="0.0688%" height="15" fill="rgb(221,88,35)" fg:x="3295" fg:w="3"/><text x="75.8407%" y="703.50"></text></g><g><title>core::mem::swap (6 samples, 0.14%)</title><rect x="75.6596%" y="709" width="0.1376%" height="15" fill="rgb(242,21,20)" fg:x="3298" fg:w="6"/><text x="75.9096%" y="719.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (6 samples, 0.14%)</title><rect x="75.6596%" y="693" width="0.1376%" height="15" fill="rgb(233,226,36)" fg:x="3298" fg:w="6"/><text x="75.9096%" y="703.50"></text></g><g><title>core::ptr::swap_nonoverlapping (6 samples, 0.14%)</title><rect x="75.6596%" y="677" width="0.1376%" height="15" fill="rgb(243,189,34)" fg:x="3298" fg:w="6"/><text x="75.9096%" y="687.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (6 samples, 0.14%)</title><rect x="75.6596%" y="661" width="0.1376%" height="15" fill="rgb(207,145,50)" fg:x="3298" fg:w="6"/><text x="75.9096%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.14%)</title><rect x="75.6596%" y="645" width="0.1376%" height="15" fill="rgb(242,1,50)" fg:x="3298" fg:w="6"/><text x="75.9096%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="75.7972%" y="677" width="0.0229%" height="15" fill="rgb(231,65,32)" fg:x="3304" fg:w="1"/><text x="76.0472%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="75.7972%" y="661" width="0.0229%" height="15" fill="rgb(208,68,49)" fg:x="3304" fg:w="1"/><text x="76.0472%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (3 samples, 0.07%)</title><rect x="75.7972%" y="709" width="0.0688%" height="15" fill="rgb(253,54,49)" fg:x="3304" fg:w="3"/><text x="76.0472%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (3 samples, 0.07%)</title><rect x="75.7972%" y="693" width="0.0688%" height="15" fill="rgb(245,186,24)" fg:x="3304" fg:w="3"/><text x="76.0472%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (2 samples, 0.05%)</title><rect x="75.8201%" y="677" width="0.0459%" height="15" fill="rgb(209,2,41)" fg:x="3305" fg:w="2"/><text x="76.0701%" y="687.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (2 samples, 0.05%)</title><rect x="75.8201%" y="661" width="0.0459%" height="15" fill="rgb(242,208,54)" fg:x="3305" fg:w="2"/><text x="76.0701%" y="671.50"></text></g><g><title>__memset_avx2_unaligned (2 samples, 0.05%)</title><rect x="75.8660%" y="645" width="0.0459%" height="15" fill="rgb(225,9,51)" fg:x="3307" fg:w="2"/><text x="76.1160%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (3 samples, 0.07%)</title><rect x="75.8660%" y="677" width="0.0688%" height="15" fill="rgb(207,207,25)" fg:x="3307" fg:w="3"/><text x="76.1160%" y="687.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.07%)</title><rect x="75.8660%" y="661" width="0.0688%" height="15" fill="rgb(253,96,18)" fg:x="3307" fg:w="3"/><text x="76.1160%" y="671.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="75.9119%" y="645" width="0.0229%" height="15" fill="rgb(252,215,20)" fg:x="3309" fg:w="1"/><text x="76.1619%" y="655.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (2 samples, 0.05%)</title><rect x="75.9348%" y="661" width="0.0459%" height="15" fill="rgb(245,227,26)" fg:x="3310" fg:w="2"/><text x="76.1848%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.02%)</title><rect x="75.9578%" y="645" width="0.0229%" height="15" fill="rgb(241,208,0)" fg:x="3311" fg:w="1"/><text x="76.2078%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="75.9578%" y="629" width="0.0229%" height="15" fill="rgb(224,130,10)" fg:x="3311" fg:w="1"/><text x="76.2078%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (11 samples, 0.25%)</title><rect x="75.9348%" y="677" width="0.2524%" height="15" fill="rgb(237,29,0)" fg:x="3310" fg:w="11"/><text x="76.1848%" y="687.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (9 samples, 0.21%)</title><rect x="75.9807%" y="661" width="0.2065%" height="15" fill="rgb(219,27,41)" fg:x="3312" fg:w="9"/><text x="76.2307%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.21%)</title><rect x="75.9807%" y="645" width="0.2065%" height="15" fill="rgb(245,101,19)" fg:x="3312" fg:w="9"/><text x="76.2307%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.21%)</title><rect x="75.9807%" y="629" width="0.2065%" height="15" fill="rgb(243,44,37)" fg:x="3312" fg:w="9"/><text x="76.2307%" y="639.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.21%)</title><rect x="75.9807%" y="613" width="0.2065%" height="15" fill="rgb(228,213,43)" fg:x="3312" fg:w="9"/><text x="76.2307%" y="623.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.18%)</title><rect x="76.0037%" y="597" width="0.1835%" height="15" fill="rgb(219,163,21)" fg:x="3313" fg:w="8"/><text x="76.2537%" y="607.50"></text></g><g><title>tcache_get (4 samples, 0.09%)</title><rect x="76.0954%" y="581" width="0.0918%" height="15" fill="rgb(234,86,24)" fg:x="3317" fg:w="4"/><text x="76.3454%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (27 samples, 0.62%)</title><rect x="75.5907%" y="725" width="0.6194%" height="15" fill="rgb(225,10,24)" fg:x="3295" fg:w="27"/><text x="75.8407%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (15 samples, 0.34%)</title><rect x="75.8660%" y="709" width="0.3441%" height="15" fill="rgb(218,109,7)" fg:x="3307" fg:w="15"/><text x="76.1160%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (15 samples, 0.34%)</title><rect x="75.8660%" y="693" width="0.3441%" height="15" fill="rgb(210,20,26)" fg:x="3307" fg:w="15"/><text x="76.1160%" y="703.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (1 samples, 0.02%)</title><rect x="76.1872%" y="677" width="0.0229%" height="15" fill="rgb(216,18,1)" fg:x="3321" fg:w="1"/><text x="76.4372%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (30 samples, 0.69%)</title><rect x="75.5448%" y="757" width="0.6882%" height="15" fill="rgb(206,163,23)" fg:x="3293" fg:w="30"/><text x="75.7948%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (30 samples, 0.69%)</title><rect x="75.5448%" y="741" width="0.6882%" height="15" fill="rgb(229,150,31)" fg:x="3293" fg:w="30"/><text x="75.7948%" y="751.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (1 samples, 0.02%)</title><rect x="76.2101%" y="725" width="0.0229%" height="15" fill="rgb(231,10,5)" fg:x="3322" fg:w="1"/><text x="76.4601%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.02%)</title><rect x="76.3248%" y="741" width="0.0229%" height="15" fill="rgb(250,40,50)" fg:x="3327" fg:w="1"/><text x="76.5748%" y="751.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.09%)</title><rect x="76.3478%" y="741" width="0.0918%" height="15" fill="rgb(217,119,7)" fg:x="3328" fg:w="4"/><text x="76.5978%" y="751.50"></text></g><g><title>hashbrown::raw::is_full (3 samples, 0.07%)</title><rect x="76.4396%" y="741" width="0.0688%" height="15" fill="rgb(245,214,40)" fg:x="3332" fg:w="3"/><text x="76.6896%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (13 samples, 0.30%)</title><rect x="76.2331%" y="757" width="0.2982%" height="15" fill="rgb(216,187,1)" fg:x="3323" fg:w="13"/><text x="76.4831%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.02%)</title><rect x="76.5084%" y="741" width="0.0229%" height="15" fill="rgb(237,146,21)" fg:x="3335" fg:w="1"/><text x="76.7584%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="76.5084%" y="725" width="0.0229%" height="15" fill="rgb(210,174,47)" fg:x="3335" fg:w="1"/><text x="76.7584%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (103 samples, 2.36%)</title><rect x="74.2143%" y="821" width="2.3629%" height="15" fill="rgb(218,111,39)" fg:x="3235" fg:w="103"/><text x="74.4643%" y="831.50">co..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (103 samples, 2.36%)</title><rect x="74.2143%" y="805" width="2.3629%" height="15" fill="rgb(224,95,19)" fg:x="3235" fg:w="103"/><text x="74.4643%" y="815.50">&lt;h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (103 samples, 2.36%)</title><rect x="74.2143%" y="789" width="2.3629%" height="15" fill="rgb(234,15,38)" fg:x="3235" fg:w="103"/><text x="74.4643%" y="799.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (51 samples, 1.17%)</title><rect x="75.4072%" y="773" width="1.1700%" height="15" fill="rgb(246,56,12)" fg:x="3287" fg:w="51"/><text x="75.6572%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (2 samples, 0.05%)</title><rect x="76.5313%" y="757" width="0.0459%" height="15" fill="rgb(247,16,17)" fg:x="3336" fg:w="2"/><text x="76.7813%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.02%)</title><rect x="76.5543%" y="741" width="0.0229%" height="15" fill="rgb(215,151,11)" fg:x="3337" fg:w="1"/><text x="76.8043%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.02%)</title><rect x="76.5543%" y="725" width="0.0229%" height="15" fill="rgb(225,16,24)" fg:x="3337" fg:w="1"/><text x="76.8043%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="77.0819%" y="677" width="0.0229%" height="15" fill="rgb(217,117,5)" fg:x="3360" fg:w="1"/><text x="77.3319%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.09%)</title><rect x="77.0819%" y="693" width="0.0918%" height="15" fill="rgb(246,187,53)" fg:x="3360" fg:w="4"/><text x="77.3319%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="77.1048%" y="677" width="0.0688%" height="15" fill="rgb(241,71,40)" fg:x="3361" fg:w="3"/><text x="77.3548%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.07%)</title><rect x="77.2425%" y="677" width="0.0688%" height="15" fill="rgb(231,67,39)" fg:x="3367" fg:w="3"/><text x="77.4925%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (26 samples, 0.60%)</title><rect x="76.9213%" y="741" width="0.5965%" height="15" fill="rgb(222,120,24)" fg:x="3353" fg:w="26"/><text x="77.1713%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (26 samples, 0.60%)</title><rect x="76.9213%" y="725" width="0.5965%" height="15" fill="rgb(248,3,3)" fg:x="3353" fg:w="26"/><text x="77.1713%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (26 samples, 0.60%)</title><rect x="76.9213%" y="709" width="0.5965%" height="15" fill="rgb(228,218,5)" fg:x="3353" fg:w="26"/><text x="77.1713%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (15 samples, 0.34%)</title><rect x="77.1737%" y="693" width="0.3441%" height="15" fill="rgb(212,202,43)" fg:x="3364" fg:w="15"/><text x="77.4237%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.21%)</title><rect x="77.3113%" y="677" width="0.2065%" height="15" fill="rgb(235,183,2)" fg:x="3370" fg:w="9"/><text x="77.5613%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.05%)</title><rect x="77.5178%" y="741" width="0.0459%" height="15" fill="rgb(230,165,10)" fg:x="3379" fg:w="2"/><text x="77.7678%" y="751.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="77.5407%" y="725" width="0.0229%" height="15" fill="rgb(219,54,40)" fg:x="3380" fg:w="1"/><text x="77.7907%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="77.5407%" y="709" width="0.0229%" height="15" fill="rgb(244,73,9)" fg:x="3380" fg:w="1"/><text x="77.7907%" y="719.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.02%)</title><rect x="77.5407%" y="693" width="0.0229%" height="15" fill="rgb(212,32,45)" fg:x="3380" fg:w="1"/><text x="77.7907%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.02%)</title><rect x="78.0684%" y="629" width="0.0229%" height="15" fill="rgb(205,58,31)" fg:x="3403" fg:w="1"/><text x="78.3184%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.18%)</title><rect x="77.9537%" y="645" width="0.1835%" height="15" fill="rgb(250,120,43)" fg:x="3398" fg:w="8"/><text x="78.2037%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="78.0913%" y="629" width="0.0459%" height="15" fill="rgb(235,13,10)" fg:x="3404" fg:w="2"/><text x="78.3413%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (69 samples, 1.58%)</title><rect x="76.7148%" y="757" width="1.5829%" height="15" fill="rgb(232,219,31)" fg:x="3344" fg:w="69"/><text x="76.9648%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (32 samples, 0.73%)</title><rect x="77.5637%" y="741" width="0.7341%" height="15" fill="rgb(218,157,51)" fg:x="3381" fg:w="32"/><text x="77.8137%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (32 samples, 0.73%)</title><rect x="77.5637%" y="725" width="0.7341%" height="15" fill="rgb(211,91,52)" fg:x="3381" fg:w="32"/><text x="77.8137%" y="735.50"></text></g><g><title>core::hash::Hasher::write_usize (32 samples, 0.73%)</title><rect x="77.5637%" y="709" width="0.7341%" height="15" fill="rgb(240,173,1)" fg:x="3381" fg:w="32"/><text x="77.8137%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.69%)</title><rect x="77.6095%" y="693" width="0.6882%" height="15" fill="rgb(248,20,47)" fg:x="3383" fg:w="30"/><text x="77.8595%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (25 samples, 0.57%)</title><rect x="77.7242%" y="677" width="0.5735%" height="15" fill="rgb(217,221,40)" fg:x="3388" fg:w="25"/><text x="77.9742%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (25 samples, 0.57%)</title><rect x="77.7242%" y="661" width="0.5735%" height="15" fill="rgb(226,149,51)" fg:x="3388" fg:w="25"/><text x="77.9742%" y="671.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.16%)</title><rect x="78.1372%" y="645" width="0.1606%" height="15" fill="rgb(252,193,7)" fg:x="3406" fg:w="7"/><text x="78.3872%" y="655.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (10 samples, 0.23%)</title><rect x="81.1195%" y="677" width="0.2294%" height="15" fill="rgb(205,123,0)" fg:x="3536" fg:w="10"/><text x="81.3695%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.39%)</title><rect x="81.0048%" y="693" width="0.3900%" height="15" fill="rgb(233,173,25)" fg:x="3531" fg:w="17"/><text x="81.2548%" y="703.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (2 samples, 0.05%)</title><rect x="81.3489%" y="677" width="0.0459%" height="15" fill="rgb(216,63,32)" fg:x="3546" fg:w="2"/><text x="81.5989%" y="687.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::any_bit_set (4 samples, 0.09%)</title><rect x="81.3948%" y="693" width="0.0918%" height="15" fill="rgb(209,56,45)" fg:x="3548" fg:w="4"/><text x="81.6448%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.94%)</title><rect x="80.9131%" y="725" width="0.9406%" height="15" fill="rgb(226,111,49)" fg:x="3527" fg:w="41"/><text x="81.1631%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.94%)</title><rect x="80.9131%" y="709" width="0.9406%" height="15" fill="rgb(244,181,21)" fg:x="3527" fg:w="41"/><text x="81.1631%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (16 samples, 0.37%)</title><rect x="81.4866%" y="693" width="0.3671%" height="15" fill="rgb(222,126,15)" fg:x="3552" fg:w="16"/><text x="81.7366%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (16 samples, 0.37%)</title><rect x="81.4866%" y="677" width="0.3671%" height="15" fill="rgb(222,95,17)" fg:x="3552" fg:w="16"/><text x="81.7366%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (16 samples, 0.37%)</title><rect x="81.4866%" y="661" width="0.3671%" height="15" fill="rgb(254,46,5)" fg:x="3552" fg:w="16"/><text x="81.7366%" y="671.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.11%)</title><rect x="81.8536%" y="725" width="0.1147%" height="15" fill="rgb(236,216,35)" fg:x="3568" fg:w="5"/><text x="82.1036%" y="735.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (5 samples, 0.11%)</title><rect x="81.8536%" y="709" width="0.1147%" height="15" fill="rgb(217,187,26)" fg:x="3568" fg:w="5"/><text x="82.1036%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (5 samples, 0.11%)</title><rect x="81.8536%" y="693" width="0.1147%" height="15" fill="rgb(207,192,25)" fg:x="3568" fg:w="5"/><text x="82.1036%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (299 samples, 6.86%)</title><rect x="76.5772%" y="805" width="6.8594%" height="15" fill="rgb(253,135,27)" fg:x="3338" fg:w="299"/><text x="76.8272%" y="815.50">std::coll..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (299 samples, 6.86%)</title><rect x="76.5772%" y="789" width="6.8594%" height="15" fill="rgb(211,122,29)" fg:x="3338" fg:w="299"/><text x="76.8272%" y="799.50">hashbrown..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (299 samples, 6.86%)</title><rect x="76.5772%" y="773" width="6.8594%" height="15" fill="rgb(233,162,40)" fg:x="3338" fg:w="299"/><text x="76.8272%" y="783.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (224 samples, 5.14%)</title><rect x="78.2978%" y="757" width="5.1388%" height="15" fill="rgb(222,184,47)" fg:x="3413" fg:w="224"/><text x="78.5478%" y="767.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (224 samples, 5.14%)</title><rect x="78.2978%" y="741" width="5.1388%" height="15" fill="rgb(249,99,23)" fg:x="3413" fg:w="224"/><text x="78.5478%" y="751.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (64 samples, 1.47%)</title><rect x="81.9683%" y="725" width="1.4682%" height="15" fill="rgb(214,60,12)" fg:x="3573" fg:w="64"/><text x="82.2183%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (64 samples, 1.47%)</title><rect x="81.9683%" y="709" width="1.4682%" height="15" fill="rgb(250,229,36)" fg:x="3573" fg:w="64"/><text x="82.2183%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (64 samples, 1.47%)</title><rect x="81.9683%" y="693" width="1.4682%" height="15" fill="rgb(232,195,10)" fg:x="3573" fg:w="64"/><text x="82.2183%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (58 samples, 1.33%)</title><rect x="82.1060%" y="677" width="1.3306%" height="15" fill="rgb(205,213,31)" fg:x="3579" fg:w="58"/><text x="82.3560%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (58 samples, 1.33%)</title><rect x="82.1060%" y="661" width="1.3306%" height="15" fill="rgb(237,43,8)" fg:x="3579" fg:w="58"/><text x="82.3560%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (58 samples, 1.33%)</title><rect x="82.1060%" y="645" width="1.3306%" height="15" fill="rgb(216,208,3)" fg:x="3579" fg:w="58"/><text x="82.3560%" y="655.50"></text></g><g><title>core::core_arch::simd::i8x16::new (58 samples, 1.33%)</title><rect x="82.1060%" y="629" width="1.3306%" height="15" fill="rgb(228,179,44)" fg:x="3579" fg:w="58"/><text x="82.3560%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.05%)</title><rect x="83.7119%" y="677" width="0.0459%" height="15" fill="rgb(230,192,27)" fg:x="3649" fg:w="2"/><text x="83.9619%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.11%)</title><rect x="83.6889%" y="693" width="0.1147%" height="15" fill="rgb(251,30,38)" fg:x="3648" fg:w="5"/><text x="83.9389%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.05%)</title><rect x="83.7577%" y="677" width="0.0459%" height="15" fill="rgb(246,55,52)" fg:x="3651" fg:w="2"/><text x="84.0077%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.21%)</title><rect x="83.8036%" y="677" width="0.2065%" height="15" fill="rgb(249,79,26)" fg:x="3653" fg:w="9"/><text x="84.0536%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (22 samples, 0.50%)</title><rect x="83.5283%" y="741" width="0.5047%" height="15" fill="rgb(220,202,16)" fg:x="3641" fg:w="22"/><text x="83.7783%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (22 samples, 0.50%)</title><rect x="83.5283%" y="725" width="0.5047%" height="15" fill="rgb(250,170,23)" fg:x="3641" fg:w="22"/><text x="83.7783%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (22 samples, 0.50%)</title><rect x="83.5283%" y="709" width="0.5047%" height="15" fill="rgb(230,7,37)" fg:x="3641" fg:w="22"/><text x="83.7783%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.23%)</title><rect x="83.8036%" y="693" width="0.2294%" height="15" fill="rgb(213,71,1)" fg:x="3653" fg:w="10"/><text x="84.0536%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="84.0101%" y="677" width="0.0229%" height="15" fill="rgb(227,87,39)" fg:x="3662" fg:w="1"/><text x="84.2601%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.11%)</title><rect x="84.0330%" y="741" width="0.1147%" height="15" fill="rgb(210,41,29)" fg:x="3663" fg:w="5"/><text x="84.2830%" y="751.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.05%)</title><rect x="84.1019%" y="725" width="0.0459%" height="15" fill="rgb(206,191,31)" fg:x="3666" fg:w="2"/><text x="84.3519%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.05%)</title><rect x="84.1019%" y="709" width="0.0459%" height="15" fill="rgb(247,75,54)" fg:x="3666" fg:w="2"/><text x="84.3519%" y="719.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.05%)</title><rect x="84.1019%" y="693" width="0.0459%" height="15" fill="rgb(208,54,50)" fg:x="3666" fg:w="2"/><text x="84.3519%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.14%)</title><rect x="84.4230%" y="645" width="0.1376%" height="15" fill="rgb(214,90,37)" fg:x="3680" fg:w="6"/><text x="84.6730%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.07%)</title><rect x="84.4919%" y="629" width="0.0688%" height="15" fill="rgb(220,132,6)" fg:x="3683" fg:w="3"/><text x="84.7419%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (51 samples, 1.17%)</title><rect x="83.4366%" y="757" width="1.1700%" height="15" fill="rgb(213,167,7)" fg:x="3637" fg:w="51"/><text x="83.6866%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (20 samples, 0.46%)</title><rect x="84.1477%" y="741" width="0.4588%" height="15" fill="rgb(243,36,27)" fg:x="3668" fg:w="20"/><text x="84.3977%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (20 samples, 0.46%)</title><rect x="84.1477%" y="725" width="0.4588%" height="15" fill="rgb(235,147,12)" fg:x="3668" fg:w="20"/><text x="84.3977%" y="735.50"></text></g><g><title>core::hash::Hasher::write_usize (20 samples, 0.46%)</title><rect x="84.1477%" y="709" width="0.4588%" height="15" fill="rgb(212,198,44)" fg:x="3668" fg:w="20"/><text x="84.3977%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.46%)</title><rect x="84.1477%" y="693" width="0.4588%" height="15" fill="rgb(218,68,50)" fg:x="3668" fg:w="20"/><text x="84.3977%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.44%)</title><rect x="84.1707%" y="677" width="0.4359%" height="15" fill="rgb(224,79,48)" fg:x="3669" fg:w="19"/><text x="84.4207%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.44%)</title><rect x="84.1707%" y="661" width="0.4359%" height="15" fill="rgb(213,191,50)" fg:x="3669" fg:w="19"/><text x="84.4207%" y="671.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.05%)</title><rect x="84.5607%" y="645" width="0.0459%" height="15" fill="rgb(254,146,10)" fg:x="3686" fg:w="2"/><text x="84.8107%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.18%)</title><rect x="85.4554%" y="725" width="0.1835%" height="15" fill="rgb(215,175,11)" fg:x="3725" fg:w="8"/><text x="85.7054%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.18%)</title><rect x="85.4554%" y="709" width="0.1835%" height="15" fill="rgb(207,49,7)" fg:x="3725" fg:w="8"/><text x="85.7054%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.16%)</title><rect x="85.4783%" y="693" width="0.1606%" height="15" fill="rgb(234,144,29)" fg:x="3726" fg:w="7"/><text x="85.7283%" y="703.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (5 samples, 0.11%)</title><rect x="85.5242%" y="677" width="0.1147%" height="15" fill="rgb(213,222,48)" fg:x="3728" fg:w="5"/><text x="85.7742%" y="687.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.02%)</title><rect x="85.6389%" y="725" width="0.0229%" height="15" fill="rgb(222,8,6)" fg:x="3733" fg:w="1"/><text x="85.8889%" y="735.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (1 samples, 0.02%)</title><rect x="85.6389%" y="709" width="0.0229%" height="15" fill="rgb(221,114,49)" fg:x="3733" fg:w="1"/><text x="85.8889%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (1 samples, 0.02%)</title><rect x="85.6389%" y="693" width="0.0229%" height="15" fill="rgb(250,140,42)" fg:x="3733" fg:w="1"/><text x="85.8889%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.05%)</title><rect x="85.7307%" y="677" width="0.0459%" height="15" fill="rgb(250,150,27)" fg:x="3737" fg:w="2"/><text x="85.9807%" y="687.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (516 samples, 11.84%)</title><rect x="74.1913%" y="837" width="11.8376%" height="15" fill="rgb(252,159,3)" fg:x="3234" fg:w="516"/><text x="74.4413%" y="847.50">core::iter::adapte..</text></g><g><title>y2021::d15::main::next_points::{{closure}} (412 samples, 9.45%)</title><rect x="76.5772%" y="821" width="9.4517%" height="15" fill="rgb(241,182,3)" fg:x="3338" fg:w="412"/><text x="76.8272%" y="831.50">y2021::d15::ma..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (113 samples, 2.59%)</title><rect x="83.4366%" y="805" width="2.5923%" height="15" fill="rgb(236,3,9)" fg:x="3637" fg:w="113"/><text x="83.6866%" y="815.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (113 samples, 2.59%)</title><rect x="83.4366%" y="789" width="2.5923%" height="15" fill="rgb(223,227,51)" fg:x="3637" fg:w="113"/><text x="83.6866%" y="799.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (113 samples, 2.59%)</title><rect x="83.4366%" y="773" width="2.5923%" height="15" fill="rgb(232,133,30)" fg:x="3637" fg:w="113"/><text x="83.6866%" y="783.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (62 samples, 1.42%)</title><rect x="84.6066%" y="757" width="1.4223%" height="15" fill="rgb(209,93,27)" fg:x="3688" fg:w="62"/><text x="84.8566%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (62 samples, 1.42%)</title><rect x="84.6066%" y="741" width="1.4223%" height="15" fill="rgb(208,108,34)" fg:x="3688" fg:w="62"/><text x="84.8566%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (16 samples, 0.37%)</title><rect x="85.6618%" y="725" width="0.3671%" height="15" fill="rgb(215,189,13)" fg:x="3734" fg:w="16"/><text x="85.9118%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (16 samples, 0.37%)</title><rect x="85.6618%" y="709" width="0.3671%" height="15" fill="rgb(206,88,23)" fg:x="3734" fg:w="16"/><text x="85.9118%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (16 samples, 0.37%)</title><rect x="85.6618%" y="693" width="0.3671%" height="15" fill="rgb(240,173,0)" fg:x="3734" fg:w="16"/><text x="85.9118%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (11 samples, 0.25%)</title><rect x="85.7766%" y="677" width="0.2524%" height="15" fill="rgb(223,106,52)" fg:x="3739" fg:w="11"/><text x="86.0266%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (11 samples, 0.25%)</title><rect x="85.7766%" y="661" width="0.2524%" height="15" fill="rgb(206,130,16)" fg:x="3739" fg:w="11"/><text x="86.0266%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (11 samples, 0.25%)</title><rect x="85.7766%" y="645" width="0.2524%" height="15" fill="rgb(220,54,25)" fg:x="3739" fg:w="11"/><text x="86.0266%" y="655.50"></text></g><g><title>core::core_arch::simd::i8x16::new (11 samples, 0.25%)</title><rect x="85.7766%" y="629" width="0.2524%" height="15" fill="rgb(210,4,38)" fg:x="3739" fg:w="11"/><text x="86.0266%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.16%)</title><rect x="86.6713%" y="693" width="0.1606%" height="15" fill="rgb(238,94,39)" fg:x="3778" fg:w="7"/><text x="86.9213%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.28%)</title><rect x="86.6483%" y="709" width="0.2753%" height="15" fill="rgb(234,124,34)" fg:x="3777" fg:w="12"/><text x="86.8983%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.09%)</title><rect x="86.8318%" y="693" width="0.0918%" height="15" fill="rgb(221,91,40)" fg:x="3785" fg:w="4"/><text x="87.0818%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (25 samples, 0.57%)</title><rect x="87.1071%" y="693" width="0.5735%" height="15" fill="rgb(246,53,28)" fg:x="3797" fg:w="25"/><text x="87.3571%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (74 samples, 1.70%)</title><rect x="86.2354%" y="757" width="1.6976%" height="15" fill="rgb(229,109,7)" fg:x="3759" fg:w="74"/><text x="86.4854%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (74 samples, 1.70%)</title><rect x="86.2354%" y="741" width="1.6976%" height="15" fill="rgb(249,117,8)" fg:x="3759" fg:w="74"/><text x="86.4854%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (74 samples, 1.70%)</title><rect x="86.2354%" y="725" width="1.6976%" height="15" fill="rgb(210,181,1)" fg:x="3759" fg:w="74"/><text x="86.4854%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (44 samples, 1.01%)</title><rect x="86.9236%" y="709" width="1.0094%" height="15" fill="rgb(211,66,1)" fg:x="3789" fg:w="44"/><text x="87.1736%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.25%)</title><rect x="87.6807%" y="693" width="0.2524%" height="15" fill="rgb(221,90,14)" fg:x="3822" fg:w="11"/><text x="87.9307%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (16 samples, 0.37%)</title><rect x="87.9330%" y="757" width="0.3671%" height="15" fill="rgb(219,222,44)" fg:x="3833" fg:w="16"/><text x="88.1830%" y="767.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (13 samples, 0.30%)</title><rect x="88.0018%" y="741" width="0.2982%" height="15" fill="rgb(246,34,33)" fg:x="3836" fg:w="13"/><text x="88.2518%" y="751.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (12 samples, 0.28%)</title><rect x="88.0248%" y="725" width="0.2753%" height="15" fill="rgb(227,135,41)" fg:x="3837" fg:w="12"/><text x="88.2748%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (12 samples, 0.28%)</title><rect x="88.0248%" y="709" width="0.2753%" height="15" fill="rgb(226,15,14)" fg:x="3837" fg:w="12"/><text x="88.2748%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.09%)</title><rect x="89.3783%" y="645" width="0.0918%" height="15" fill="rgb(236,148,47)" fg:x="3896" fg:w="4"/><text x="89.6283%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.28%)</title><rect x="89.2865%" y="661" width="0.2753%" height="15" fill="rgb(233,162,52)" fg:x="3892" fg:w="12"/><text x="89.5365%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.09%)</title><rect x="89.4701%" y="645" width="0.0918%" height="15" fill="rgb(244,35,28)" fg:x="3900" fg:w="4"/><text x="89.7201%" y="655.50"></text></g><g><title>core::hash::sip::u8to64_le (9 samples, 0.21%)</title><rect x="89.5618%" y="661" width="0.2065%" height="15" fill="rgb(205,121,10)" fg:x="3904" fg:w="9"/><text x="89.8118%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (163 samples, 3.74%)</title><rect x="86.0518%" y="773" width="3.7394%" height="15" fill="rgb(250,58,18)" fg:x="3751" fg:w="163"/><text x="86.3018%" y="783.50">hash..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (65 samples, 1.49%)</title><rect x="88.3001%" y="757" width="1.4912%" height="15" fill="rgb(216,37,13)" fg:x="3849" fg:w="65"/><text x="88.5501%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (65 samples, 1.49%)</title><rect x="88.3001%" y="741" width="1.4912%" height="15" fill="rgb(221,215,42)" fg:x="3849" fg:w="65"/><text x="88.5501%" y="751.50"></text></g><g><title>core::hash::Hasher::write_usize (65 samples, 1.49%)</title><rect x="88.3001%" y="725" width="1.4912%" height="15" fill="rgb(217,214,19)" fg:x="3849" fg:w="65"/><text x="88.5501%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (61 samples, 1.40%)</title><rect x="88.3918%" y="709" width="1.3994%" height="15" fill="rgb(233,139,13)" fg:x="3853" fg:w="61"/><text x="88.6418%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (61 samples, 1.40%)</title><rect x="88.3918%" y="693" width="1.3994%" height="15" fill="rgb(247,168,23)" fg:x="3853" fg:w="61"/><text x="88.6418%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (61 samples, 1.40%)</title><rect x="88.3918%" y="677" width="1.3994%" height="15" fill="rgb(207,202,1)" fg:x="3853" fg:w="61"/><text x="88.6418%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="89.7683%" y="661" width="0.0229%" height="15" fill="rgb(220,155,48)" fg:x="3913" fg:w="1"/><text x="90.0183%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.34%)</title><rect x="96.9030%" y="741" width="0.3441%" height="15" fill="rgb(250,43,26)" fg:x="4224" fg:w="15"/><text x="97.1530%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.34%)</title><rect x="96.9030%" y="725" width="0.3441%" height="15" fill="rgb(212,190,23)" fg:x="4224" fg:w="15"/><text x="97.1530%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.32%)</title><rect x="96.9259%" y="709" width="0.3212%" height="15" fill="rgb(216,39,24)" fg:x="4225" fg:w="14"/><text x="97.1759%" y="719.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.18%)</title><rect x="97.0635%" y="693" width="0.1835%" height="15" fill="rgb(252,113,16)" fg:x="4231" fg:w="8"/><text x="97.3135%" y="703.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="97.2471%" y="741" width="0.0229%" height="15" fill="rgb(208,113,19)" fg:x="4239" fg:w="1"/><text x="97.4971%" y="751.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="97.2471%" y="725" width="0.0229%" height="15" fill="rgb(234,107,25)" fg:x="4239" fg:w="1"/><text x="97.4971%" y="735.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="97.2471%" y="709" width="0.0229%" height="15" fill="rgb(234,217,51)" fg:x="4239" fg:w="1"/><text x="97.4971%" y="719.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="97.2471%" y="693" width="0.0229%" height="15" fill="rgb(251,29,42)" fg:x="4239" fg:w="1"/><text x="97.4971%" y="703.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="97.2471%" y="677" width="0.0229%" height="15" fill="rgb(221,62,51)" fg:x="4239" fg:w="1"/><text x="97.4971%" y="687.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="97.2471%" y="661" width="0.0229%" height="15" fill="rgb(240,192,43)" fg:x="4239" fg:w="1"/><text x="97.4971%" y="671.50"></text></g><g><title>tick_sched_handle.isra.0 (1 samples, 0.02%)</title><rect x="97.2471%" y="645" width="0.0229%" height="15" fill="rgb(224,157,47)" fg:x="4239" fg:w="1"/><text x="97.4971%" y="655.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="97.2471%" y="629" width="0.0229%" height="15" fill="rgb(226,84,45)" fg:x="4239" fg:w="1"/><text x="97.4971%" y="639.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="97.2471%" y="613" width="0.0229%" height="15" fill="rgb(208,207,23)" fg:x="4239" fg:w="1"/><text x="97.4971%" y="623.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="97.2471%" y="597" width="0.0229%" height="15" fill="rgb(253,34,51)" fg:x="4239" fg:w="1"/><text x="97.4971%" y="607.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.14%)</title><rect x="97.2700%" y="741" width="0.1376%" height="15" fill="rgb(227,26,34)" fg:x="4240" fg:w="6"/><text x="97.5200%" y="751.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (6 samples, 0.14%)</title><rect x="97.2700%" y="725" width="0.1376%" height="15" fill="rgb(245,75,19)" fg:x="4240" fg:w="6"/><text x="97.5200%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (6 samples, 0.14%)</title><rect x="97.2700%" y="709" width="0.1376%" height="15" fill="rgb(250,191,31)" fg:x="4240" fg:w="6"/><text x="97.5200%" y="719.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1,108 samples, 25.42%)</title><rect x="74.1225%" y="869" width="25.4187%" height="15" fill="rgb(224,11,50)" fg:x="3231" fg:w="1108"/><text x="74.3725%" y="879.50">core::iter::adapters::filter::filter_fold..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,108 samples, 25.42%)</title><rect x="74.1225%" y="853" width="25.4187%" height="15" fill="rgb(231,171,7)" fg:x="3231" fg:w="1108"/><text x="74.3725%" y="863.50">core::iter::adapters::map::map_fold::{{cl..</text></g><g><title>y2021::d15::main::next_points::{{closure}} (589 samples, 13.51%)</title><rect x="86.0289%" y="837" width="13.5123%" height="15" fill="rgb(252,214,10)" fg:x="3750" fg:w="589"/><text x="86.2789%" y="847.50">y2021::d15::main::ne..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (589 samples, 13.51%)</title><rect x="86.0289%" y="821" width="13.5123%" height="15" fill="rgb(249,45,46)" fg:x="3750" fg:w="589"/><text x="86.2789%" y="831.50">std::collections::ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (589 samples, 13.51%)</title><rect x="86.0289%" y="805" width="13.5123%" height="15" fill="rgb(240,173,7)" fg:x="3750" fg:w="589"/><text x="86.2789%" y="815.50">hashbrown::map::Hash..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (589 samples, 13.51%)</title><rect x="86.0289%" y="789" width="13.5123%" height="15" fill="rgb(235,214,13)" fg:x="3750" fg:w="589"/><text x="86.2789%" y="799.50">hashbrown::map::Hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (425 samples, 9.75%)</title><rect x="89.7912%" y="773" width="9.7499%" height="15" fill="rgb(245,156,8)" fg:x="3914" fg:w="425"/><text x="90.0412%" y="783.50">hashbrown::raw..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (425 samples, 9.75%)</title><rect x="89.7912%" y="757" width="9.7499%" height="15" fill="rgb(235,46,12)" fg:x="3914" fg:w="425"/><text x="90.0412%" y="767.50">hashbrown::raw..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (93 samples, 2.13%)</title><rect x="97.4077%" y="741" width="2.1335%" height="15" fill="rgb(221,81,14)" fg:x="4246" fg:w="93"/><text x="97.6577%" y="751.50">h..</text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (93 samples, 2.13%)</title><rect x="97.4077%" y="725" width="2.1335%" height="15" fill="rgb(238,207,9)" fg:x="4246" fg:w="93"/><text x="97.6577%" y="735.50">h..</text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (93 samples, 2.13%)</title><rect x="97.4077%" y="709" width="2.1335%" height="15" fill="rgb(224,129,35)" fg:x="4246" fg:w="93"/><text x="97.6577%" y="719.50">h..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (90 samples, 2.06%)</title><rect x="97.4765%" y="693" width="2.0647%" height="15" fill="rgb(243,218,34)" fg:x="4249" fg:w="90"/><text x="97.7265%" y="703.50">h..</text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (90 samples, 2.06%)</title><rect x="97.4765%" y="677" width="2.0647%" height="15" fill="rgb(220,166,13)" fg:x="4249" fg:w="90"/><text x="97.7265%" y="687.50">c..</text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (90 samples, 2.06%)</title><rect x="97.4765%" y="661" width="2.0647%" height="15" fill="rgb(227,167,49)" fg:x="4249" fg:w="90"/><text x="97.7265%" y="671.50">c..</text></g><g><title>core::core_arch::simd::i8x16::new (90 samples, 2.06%)</title><rect x="97.4765%" y="645" width="2.0647%" height="15" fill="rgb(234,142,12)" fg:x="4249" fg:w="90"/><text x="97.7265%" y="655.50">c..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,118 samples, 25.65%)</title><rect x="73.9160%" y="1013" width="25.6481%" height="15" fill="rgb(207,100,48)" fg:x="3222" fg:w="1118"/><text x="74.1660%" y="1023.50">&lt;std::collections::hash::map::HashMap&lt;K,V..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,118 samples, 25.65%)</title><rect x="73.9160%" y="997" width="25.6481%" height="15" fill="rgb(210,25,14)" fg:x="3222" fg:w="1118"/><text x="74.1660%" y="1007.50">&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,118 samples, 25.65%)</title><rect x="73.9160%" y="981" width="25.6481%" height="15" fill="rgb(246,116,27)" fg:x="3222" fg:w="1118"/><text x="74.1660%" y="991.50">core::iter::traits::iterator::Iterator::f..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,118 samples, 25.65%)</title><rect x="73.9160%" y="965" width="25.6481%" height="15" fill="rgb(214,193,42)" fg:x="3222" fg:w="1118"/><text x="74.1660%" y="975.50">&lt;core::iter::adapters::filter::Filter&lt;I,P..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,118 samples, 25.65%)</title><rect x="73.9160%" y="949" width="25.6481%" height="15" fill="rgb(214,122,8)" fg:x="3222" fg:w="1118"/><text x="74.1660%" y="959.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,115 samples, 25.58%)</title><rect x="73.9849%" y="933" width="25.5793%" height="15" fill="rgb(244,173,18)" fg:x="3225" fg:w="1115"/><text x="74.2349%" y="943.50">&lt;core::iter::adapters::filter::Filter&lt;I,P..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,115 samples, 25.58%)</title><rect x="73.9849%" y="917" width="25.5793%" height="15" fill="rgb(232,68,19)" fg:x="3225" fg:w="1115"/><text x="74.2349%" y="927.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,115 samples, 25.58%)</title><rect x="73.9849%" y="901" width="25.5793%" height="15" fill="rgb(236,224,1)" fg:x="3225" fg:w="1115"/><text x="74.2349%" y="911.50">core::iter::traits::iterator::Iterator::f..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,109 samples, 25.44%)</title><rect x="74.1225%" y="885" width="25.4416%" height="15" fill="rgb(240,11,8)" fg:x="3231" fg:w="1109"/><text x="74.3725%" y="895.50">core::iter::adapters::map::map_fold::{{cl..</text></g><g><title>y2021::d15::main::next_points::{{closure}} (1 samples, 0.02%)</title><rect x="99.5412%" y="869" width="0.0229%" height="15" fill="rgb(244,159,20)" fg:x="4339" fg:w="1"/><text x="99.7912%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="99.5641%" y="933" width="0.0229%" height="15" fill="rgb(240,223,54)" fg:x="4340" fg:w="1"/><text x="99.8141%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="99.5641%" y="917" width="0.0229%" height="15" fill="rgb(237,146,5)" fg:x="4340" fg:w="1"/><text x="99.8141%" y="927.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="99.5641%" y="901" width="0.0229%" height="15" fill="rgb(218,221,32)" fg:x="4340" fg:w="1"/><text x="99.8141%" y="911.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="99.5641%" y="885" width="0.0229%" height="15" fill="rgb(244,96,26)" fg:x="4340" fg:w="1"/><text x="99.8141%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (2 samples, 0.05%)</title><rect x="99.5641%" y="1013" width="0.0459%" height="15" fill="rgb(245,184,37)" fg:x="4340" fg:w="2"/><text x="99.8141%" y="1023.50"></text></g><g><title>std::collections::hash::map::RandomState::new (2 samples, 0.05%)</title><rect x="99.5641%" y="997" width="0.0459%" height="15" fill="rgb(248,91,47)" fg:x="4340" fg:w="2"/><text x="99.8141%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.05%)</title><rect x="99.5641%" y="981" width="0.0459%" height="15" fill="rgb(243,199,8)" fg:x="4340" fg:w="2"/><text x="99.8141%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.05%)</title><rect x="99.5641%" y="965" width="0.0459%" height="15" fill="rgb(249,12,15)" fg:x="4340" fg:w="2"/><text x="99.8141%" y="975.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (2 samples, 0.05%)</title><rect x="99.5641%" y="949" width="0.0459%" height="15" fill="rgb(245,97,12)" fg:x="4340" fg:w="2"/><text x="99.8141%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="99.5871%" y="933" width="0.0229%" height="15" fill="rgb(244,61,1)" fg:x="4341" fg:w="1"/><text x="99.8371%" y="943.50"></text></g><g><title>y2021::d15::main::next_points (1,122 samples, 25.74%)</title><rect x="73.9160%" y="1061" width="25.7398%" height="15" fill="rgb(222,194,10)" fg:x="3222" fg:w="1122"/><text x="74.1660%" y="1071.50">y2021::d15::main::next_points</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,122 samples, 25.74%)</title><rect x="73.9160%" y="1045" width="25.7398%" height="15" fill="rgb(226,178,8)" fg:x="3222" fg:w="1122"/><text x="74.1660%" y="1055.50">core::iter::traits::iterator::Iterator::c..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1,122 samples, 25.74%)</title><rect x="73.9160%" y="1029" width="25.7398%" height="15" fill="rgb(241,32,34)" fg:x="3222" fg:w="1122"/><text x="74.1660%" y="1039.50">&lt;std::collections::hash::map::HashMap&lt;K,V..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (2 samples, 0.05%)</title><rect x="99.6100%" y="1013" width="0.0459%" height="15" fill="rgb(254,26,6)" fg:x="4342" fg:w="2"/><text x="99.8600%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (2 samples, 0.05%)</title><rect x="99.6100%" y="997" width="0.0459%" height="15" fill="rgb(249,71,11)" fg:x="4342" fg:w="2"/><text x="99.8600%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="99.6100%" y="981" width="0.0459%" height="15" fill="rgb(232,170,27)" fg:x="4342" fg:w="2"/><text x="99.8600%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_in (2 samples, 0.05%)</title><rect x="99.6100%" y="965" width="0.0459%" height="15" fill="rgb(214,223,17)" fg:x="4342" fg:w="2"/><text x="99.8600%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::static_empty (2 samples, 0.05%)</title><rect x="99.6100%" y="949" width="0.0459%" height="15" fill="rgb(250,18,15)" fg:x="4342" fg:w="2"/><text x="99.8600%" y="959.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.02%)</title><rect x="99.6559%" y="709" width="0.0229%" height="15" fill="rgb(212,153,51)" fg:x="4344" fg:w="1"/><text x="99.9059%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="99.6559%" y="693" width="0.0229%" height="15" fill="rgb(219,194,12)" fg:x="4344" fg:w="1"/><text x="99.9059%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="99.6559%" y="677" width="0.0229%" height="15" fill="rgb(212,58,17)" fg:x="4344" fg:w="1"/><text x="99.9059%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.02%)</title><rect x="99.6559%" y="661" width="0.0229%" height="15" fill="rgb(254,5,10)" fg:x="4344" fg:w="1"/><text x="99.9059%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="99.6559%" y="645" width="0.0229%" height="15" fill="rgb(246,91,7)" fg:x="4344" fg:w="1"/><text x="99.9059%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="99.6559%" y="629" width="0.0229%" height="15" fill="rgb(218,108,49)" fg:x="4344" fg:w="1"/><text x="99.9059%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.02%)</title><rect x="99.6788%" y="709" width="0.0229%" height="15" fill="rgb(238,123,20)" fg:x="4345" fg:w="1"/><text x="99.9288%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="99.6788%" y="693" width="0.0229%" height="15" fill="rgb(231,69,23)" fg:x="4345" fg:w="1"/><text x="99.9288%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.6788%" y="677" width="0.0229%" height="15" fill="rgb(230,209,3)" fg:x="4345" fg:w="1"/><text x="99.9288%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.6788%" y="661" width="0.0229%" height="15" fill="rgb(231,19,0)" fg:x="4345" fg:w="1"/><text x="99.9288%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.6788%" y="645" width="0.0229%" height="15" fill="rgb(226,192,25)" fg:x="4345" fg:w="1"/><text x="99.9288%" y="655.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.02%)</title><rect x="99.6788%" y="629" width="0.0229%" height="15" fill="rgb(223,175,53)" fg:x="4345" fg:w="1"/><text x="99.9288%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="99.7018%" y="693" width="0.0229%" height="15" fill="rgb(248,35,51)" fg:x="4346" fg:w="1"/><text x="99.9518%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="99.7018%" y="677" width="0.0229%" height="15" fill="rgb(230,37,26)" fg:x="4346" fg:w="1"/><text x="99.9518%" y="687.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="99.7018%" y="661" width="0.0229%" height="15" fill="rgb(206,120,22)" fg:x="4346" fg:w="1"/><text x="99.9518%" y="671.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.02%)</title><rect x="99.7247%" y="645" width="0.0229%" height="15" fill="rgb(207,165,28)" fg:x="4347" fg:w="1"/><text x="99.9747%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="99.7247%" y="629" width="0.0229%" height="15" fill="rgb(226,23,46)" fg:x="4347" fg:w="1"/><text x="99.9747%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (1 samples, 0.02%)</title><rect x="99.7247%" y="613" width="0.0229%" height="15" fill="rgb(208,130,44)" fg:x="4347" fg:w="1"/><text x="99.9747%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="99.7247%" y="597" width="0.0229%" height="15" fill="rgb(231,67,8)" fg:x="4347" fg:w="1"/><text x="99.9747%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="99.7247%" y="581" width="0.0229%" height="15" fill="rgb(205,183,22)" fg:x="4347" fg:w="1"/><text x="99.9747%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="99.7247%" y="565" width="0.0229%" height="15" fill="rgb(224,47,9)" fg:x="4347" fg:w="1"/><text x="99.9747%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="99.7247%" y="549" width="0.0229%" height="15" fill="rgb(250,183,49)" fg:x="4347" fg:w="1"/><text x="99.9747%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="99.7247%" y="533" width="0.0229%" height="15" fill="rgb(220,151,39)" fg:x="4347" fg:w="1"/><text x="99.9747%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="99.7247%" y="517" width="0.0229%" height="15" fill="rgb(220,118,20)" fg:x="4347" fg:w="1"/><text x="99.9747%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.05%)</title><rect x="99.7247%" y="693" width="0.0459%" height="15" fill="rgb(231,65,51)" fg:x="4347" fg:w="2"/><text x="99.9747%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.05%)</title><rect x="99.7247%" y="677" width="0.0459%" height="15" fill="rgb(253,125,37)" fg:x="4347" fg:w="2"/><text x="99.9747%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.05%)</title><rect x="99.7247%" y="661" width="0.0459%" height="15" fill="rgb(232,102,6)" fg:x="4347" fg:w="2"/><text x="99.9747%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.02%)</title><rect x="99.7476%" y="645" width="0.0229%" height="15" fill="rgb(251,105,13)" fg:x="4348" fg:w="1"/><text x="99.9976%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="99.7476%" y="629" width="0.0229%" height="15" fill="rgb(222,179,29)" fg:x="4348" fg:w="1"/><text x="99.9976%" y="639.50"></text></g><g><title>std::panic::catch_unwind (4,288 samples, 98.37%)</title><rect x="1.4223%" y="1221" width="98.3712%" height="15" fill="rgb(229,180,53)" fg:x="62" fg:w="4288"/><text x="1.6723%" y="1231.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,288 samples, 98.37%)</title><rect x="1.4223%" y="1205" width="98.3712%" height="15" fill="rgb(238,104,13)" fg:x="62" fg:w="4288"/><text x="1.6723%" y="1215.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,288 samples, 98.37%)</title><rect x="1.4223%" y="1189" width="98.3712%" height="15" fill="rgb(210,130,5)" fg:x="62" fg:w="4288"/><text x="1.6723%" y="1199.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4,288 samples, 98.37%)</title><rect x="1.4223%" y="1173" width="98.3712%" height="15" fill="rgb(233,87,49)" fg:x="62" fg:w="4288"/><text x="1.6723%" y="1183.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (4,288 samples, 98.37%)</title><rect x="1.4223%" y="1157" width="98.3712%" height="15" fill="rgb(243,34,9)" fg:x="62" fg:w="4288"/><text x="1.6723%" y="1167.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,288 samples, 98.37%)</title><rect x="1.4223%" y="1141" width="98.3712%" height="15" fill="rgb(235,225,10)" fg:x="62" fg:w="4288"/><text x="1.6723%" y="1151.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (4,288 samples, 98.37%)</title><rect x="1.4223%" y="1125" width="98.3712%" height="15" fill="rgb(212,0,30)" fg:x="62" fg:w="4288"/><text x="1.6723%" y="1135.50">core::ops::function::FnOnce::call_once</text></g><g><title>y2021::main (4,288 samples, 98.37%)</title><rect x="1.4223%" y="1109" width="98.3712%" height="15" fill="rgb(211,177,0)" fg:x="62" fg:w="4288"/><text x="1.6723%" y="1119.50">y2021::main</text></g><g><title>y2021::d15::main::run (2,007 samples, 46.04%)</title><rect x="53.7509%" y="1093" width="46.0427%" height="15" fill="rgb(225,220,11)" fg:x="2343" fg:w="2007"/><text x="54.0009%" y="1103.50">y2021::d15::main::run</text></g><g><title>y2021::d15::main::p02 (1,955 samples, 44.85%)</title><rect x="54.9438%" y="1077" width="44.8497%" height="15" fill="rgb(215,10,13)" fg:x="2395" fg:w="1955"/><text x="55.1938%" y="1087.50">y2021::d15::main::p02</text></g><g><title>y2021::d15::main::parse_input (6 samples, 0.14%)</title><rect x="99.6559%" y="1061" width="0.1376%" height="15" fill="rgb(240,177,14)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.14%)</title><rect x="99.6559%" y="1045" width="0.1376%" height="15" fill="rgb(243,7,39)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6 samples, 0.14%)</title><rect x="99.6559%" y="1029" width="0.1376%" height="15" fill="rgb(212,99,0)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.14%)</title><rect x="99.6559%" y="1013" width="0.1376%" height="15" fill="rgb(225,162,48)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="1023.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.14%)</title><rect x="99.6559%" y="997" width="0.1376%" height="15" fill="rgb(246,16,25)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.14%)</title><rect x="99.6559%" y="981" width="0.1376%" height="15" fill="rgb(220,150,2)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="99.6559%" y="965" width="0.1376%" height="15" fill="rgb(237,113,11)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="99.6559%" y="949" width="0.1376%" height="15" fill="rgb(236,70,20)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="99.6559%" y="933" width="0.1376%" height="15" fill="rgb(234,94,7)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="99.6559%" y="917" width="0.1376%" height="15" fill="rgb(250,221,0)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="99.6559%" y="901" width="0.1376%" height="15" fill="rgb(245,149,46)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.14%)</title><rect x="99.6559%" y="885" width="0.1376%" height="15" fill="rgb(215,37,27)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.14%)</title><rect x="99.6559%" y="869" width="0.1376%" height="15" fill="rgb(232,65,3)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (6 samples, 0.14%)</title><rect x="99.6559%" y="853" width="0.1376%" height="15" fill="rgb(214,2,16)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="863.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (6 samples, 0.14%)</title><rect x="99.6559%" y="837" width="0.1376%" height="15" fill="rgb(227,131,50)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.14%)</title><rect x="99.6559%" y="821" width="0.1376%" height="15" fill="rgb(247,131,45)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (6 samples, 0.14%)</title><rect x="99.6559%" y="805" width="0.1376%" height="15" fill="rgb(215,97,47)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.14%)</title><rect x="99.6559%" y="789" width="0.1376%" height="15" fill="rgb(233,143,12)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.14%)</title><rect x="99.6559%" y="773" width="0.1376%" height="15" fill="rgb(222,57,17)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.14%)</title><rect x="99.6559%" y="757" width="0.1376%" height="15" fill="rgb(214,119,38)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="767.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (6 samples, 0.14%)</title><rect x="99.6559%" y="741" width="0.1376%" height="15" fill="rgb(217,28,47)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.14%)</title><rect x="99.6559%" y="725" width="0.1376%" height="15" fill="rgb(231,14,52)" fg:x="4344" fg:w="6"/><text x="99.9059%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.09%)</title><rect x="99.7018%" y="709" width="0.0918%" height="15" fill="rgb(220,158,18)" fg:x="4346" fg:w="4"/><text x="99.9518%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.02%)</title><rect x="99.7706%" y="693" width="0.0229%" height="15" fill="rgb(222,143,46)" fg:x="4349" fg:w="1"/><text x="100.0206%" y="703.50"></text></g><g><title>__libc_start_main (4,289 samples, 98.39%)</title><rect x="1.4223%" y="1333" width="98.3941%" height="15" fill="rgb(227,165,5)" fg:x="62" fg:w="4289"/><text x="1.6723%" y="1343.50">__libc_start_main</text></g><g><title>main (4,289 samples, 98.39%)</title><rect x="1.4223%" y="1317" width="98.3941%" height="15" fill="rgb(216,222,49)" fg:x="62" fg:w="4289"/><text x="1.6723%" y="1327.50">main</text></g><g><title>std::rt::lang_start_internal (4,289 samples, 98.39%)</title><rect x="1.4223%" y="1301" width="98.3941%" height="15" fill="rgb(238,73,39)" fg:x="62" fg:w="4289"/><text x="1.6723%" y="1311.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (4,289 samples, 98.39%)</title><rect x="1.4223%" y="1285" width="98.3941%" height="15" fill="rgb(252,115,9)" fg:x="62" fg:w="4289"/><text x="1.6723%" y="1295.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,289 samples, 98.39%)</title><rect x="1.4223%" y="1269" width="98.3941%" height="15" fill="rgb(238,202,4)" fg:x="62" fg:w="4289"/><text x="1.6723%" y="1279.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,289 samples, 98.39%)</title><rect x="1.4223%" y="1253" width="98.3941%" height="15" fill="rgb(252,153,44)" fg:x="62" fg:w="4289"/><text x="1.6723%" y="1263.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (4,289 samples, 98.39%)</title><rect x="1.4223%" y="1237" width="98.3941%" height="15" fill="rgb(235,128,27)" fg:x="62" fg:w="4289"/><text x="1.6723%" y="1247.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::sys_common::rt::init (1 samples, 0.02%)</title><rect x="99.7935%" y="1221" width="0.0229%" height="15" fill="rgb(221,121,47)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="1231.50"></text></g><g><title>std::sys::unix::thread::guard::init (1 samples, 0.02%)</title><rect x="99.7935%" y="1205" width="0.0229%" height="15" fill="rgb(247,211,47)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="1215.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start_aligned (1 samples, 0.02%)</title><rect x="99.7935%" y="1189" width="0.0229%" height="15" fill="rgb(252,47,49)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="1199.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start (1 samples, 0.02%)</title><rect x="99.7935%" y="1173" width="0.0229%" height="15" fill="rgb(219,119,53)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="1183.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.02%)</title><rect x="99.7935%" y="1157" width="0.0229%" height="15" fill="rgb(243,165,53)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="1167.50"></text></g><g><title>_IO_getdelim (1 samples, 0.02%)</title><rect x="99.7935%" y="1141" width="0.0229%" height="15" fill="rgb(230,12,35)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="1151.50"></text></g><g><title>_IO_new_file_underflow (1 samples, 0.02%)</title><rect x="99.7935%" y="1125" width="0.0229%" height="15" fill="rgb(239,57,49)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="1135.50"></text></g><g><title>__GI___read_nocancel (1 samples, 0.02%)</title><rect x="99.7935%" y="1109" width="0.0229%" height="15" fill="rgb(231,154,7)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="1119.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.7935%" y="1093" width="0.0229%" height="15" fill="rgb(248,81,34)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="1103.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.7935%" y="1077" width="0.0229%" height="15" fill="rgb(247,9,5)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="1087.50"></text></g><g><title>__x64_sys_read (1 samples, 0.02%)</title><rect x="99.7935%" y="1061" width="0.0229%" height="15" fill="rgb(228,172,27)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="1071.50"></text></g><g><title>ksys_read (1 samples, 0.02%)</title><rect x="99.7935%" y="1045" width="0.0229%" height="15" fill="rgb(230,57,44)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="1055.50"></text></g><g><title>vfs_read (1 samples, 0.02%)</title><rect x="99.7935%" y="1029" width="0.0229%" height="15" fill="rgb(249,35,22)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="1039.50"></text></g><g><title>seq_read (1 samples, 0.02%)</title><rect x="99.7935%" y="1013" width="0.0229%" height="15" fill="rgb(250,137,27)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="1023.50"></text></g><g><title>seq_read_iter (1 samples, 0.02%)</title><rect x="99.7935%" y="997" width="0.0229%" height="15" fill="rgb(251,57,31)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="1007.50"></text></g><g><title>show_map (1 samples, 0.02%)</title><rect x="99.7935%" y="981" width="0.0229%" height="15" fill="rgb(238,60,0)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="991.50"></text></g><g><title>show_map_vma (1 samples, 0.02%)</title><rect x="99.7935%" y="965" width="0.0229%" height="15" fill="rgb(242,185,39)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="975.50"></text></g><g><title>seq_file_path (1 samples, 0.02%)</title><rect x="99.7935%" y="949" width="0.0229%" height="15" fill="rgb(240,63,43)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="959.50"></text></g><g><title>seq_path (1 samples, 0.02%)</title><rect x="99.7935%" y="933" width="0.0229%" height="15" fill="rgb(236,155,6)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="943.50"></text></g><g><title>strchr (1 samples, 0.02%)</title><rect x="99.7935%" y="917" width="0.0229%" height="15" fill="rgb(215,11,29)" fg:x="4350" fg:w="1"/><text x="100.0435%" y="927.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.02%)</title><rect x="99.8165%" y="1269" width="0.0229%" height="15" fill="rgb(228,180,48)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1279.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="99.8165%" y="1253" width="0.0229%" height="15" fill="rgb(241,102,12)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1263.50"></text></g><g><title>openaux (1 samples, 0.02%)</title><rect x="99.8165%" y="1237" width="0.0229%" height="15" fill="rgb(246,213,4)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1247.50"></text></g><g><title>_dl_map_object (1 samples, 0.02%)</title><rect x="99.8165%" y="1221" width="0.0229%" height="15" fill="rgb(218,134,35)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1231.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.02%)</title><rect x="99.8165%" y="1205" width="0.0229%" height="15" fill="rgb(251,117,35)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1215.50"></text></g><g><title>_dl_map_segments (1 samples, 0.02%)</title><rect x="99.8165%" y="1189" width="0.0229%" height="15" fill="rgb(206,156,45)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1199.50"></text></g><g><title>__mmap64 (1 samples, 0.02%)</title><rect x="99.8165%" y="1173" width="0.0229%" height="15" fill="rgb(218,52,27)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1183.50"></text></g><g><title>__mmap64 (1 samples, 0.02%)</title><rect x="99.8165%" y="1157" width="0.0229%" height="15" fill="rgb(238,83,36)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1167.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.8165%" y="1141" width="0.0229%" height="15" fill="rgb(218,53,43)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1151.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.8165%" y="1125" width="0.0229%" height="15" fill="rgb(239,54,39)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1135.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.02%)</title><rect x="99.8165%" y="1109" width="0.0229%" height="15" fill="rgb(212,198,13)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1119.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.02%)</title><rect x="99.8165%" y="1093" width="0.0229%" height="15" fill="rgb(234,54,46)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1103.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="99.8165%" y="1077" width="0.0229%" height="15" fill="rgb(217,120,7)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1087.50"></text></g><g><title>do_mmap (1 samples, 0.02%)</title><rect x="99.8165%" y="1061" width="0.0229%" height="15" fill="rgb(246,39,15)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1071.50"></text></g><g><title>mmap_region (1 samples, 0.02%)</title><rect x="99.8165%" y="1045" width="0.0229%" height="15" fill="rgb(242,143,31)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1055.50"></text></g><g><title>perf_event_mmap (1 samples, 0.02%)</title><rect x="99.8165%" y="1029" width="0.0229%" height="15" fill="rgb(252,60,24)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1039.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="99.8165%" y="1013" width="0.0229%" height="15" fill="rgb(249,220,7)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1023.50"></text></g><g><title>__perf_addr_filters_adjust (1 samples, 0.02%)</title><rect x="99.8165%" y="997" width="0.0229%" height="15" fill="rgb(236,67,13)" fg:x="4351" fg:w="1"/><text x="100.0665%" y="1007.50"></text></g><g><title>_dl_start_final (2 samples, 0.05%)</title><rect x="99.8165%" y="1317" width="0.0459%" height="15" fill="rgb(210,62,39)" fg:x="4351" fg:w="2"/><text x="100.0665%" y="1327.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.05%)</title><rect x="99.8165%" y="1301" width="0.0459%" height="15" fill="rgb(219,122,53)" fg:x="4351" fg:w="2"/><text x="100.0665%" y="1311.50"></text></g><g><title>dl_main (2 samples, 0.05%)</title><rect x="99.8165%" y="1285" width="0.0459%" height="15" fill="rgb(218,87,25)" fg:x="4351" fg:w="2"/><text x="100.0665%" y="1295.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.02%)</title><rect x="99.8394%" y="1269" width="0.0229%" height="15" fill="rgb(234,179,48)" fg:x="4352" fg:w="1"/><text x="100.0894%" y="1279.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.02%)</title><rect x="99.8394%" y="1253" width="0.0229%" height="15" fill="rgb(248,90,0)" fg:x="4352" fg:w="1"/><text x="100.0894%" y="1263.50"></text></g><g><title>elf_machine_lazy_rel (1 samples, 0.02%)</title><rect x="99.8394%" y="1237" width="0.0229%" height="15" fill="rgb(207,228,37)" fg:x="4352" fg:w="1"/><text x="100.0894%" y="1247.50"></text></g><g><title>__cos_ifunc (1 samples, 0.02%)</title><rect x="99.8394%" y="1221" width="0.0229%" height="15" fill="rgb(235,214,15)" fg:x="4352" fg:w="1"/><text x="100.0894%" y="1231.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="99.8394%" y="1205" width="0.0229%" height="15" fill="rgb(210,144,39)" fg:x="4352" fg:w="1"/><text x="100.0894%" y="1215.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="99.8394%" y="1189" width="0.0229%" height="15" fill="rgb(222,67,41)" fg:x="4352" fg:w="1"/><text x="100.0894%" y="1199.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="99.8394%" y="1173" width="0.0229%" height="15" fill="rgb(205,35,37)" fg:x="4352" fg:w="1"/><text x="100.0894%" y="1183.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="99.8394%" y="1157" width="0.0229%" height="15" fill="rgb(216,125,40)" fg:x="4352" fg:w="1"/><text x="100.0894%" y="1167.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="99.8394%" y="1141" width="0.0229%" height="15" fill="rgb(228,227,20)" fg:x="4352" fg:w="1"/><text x="100.0894%" y="1151.50"></text></g><g><title>do_fault (1 samples, 0.02%)</title><rect x="99.8394%" y="1125" width="0.0229%" height="15" fill="rgb(242,173,45)" fg:x="4352" fg:w="1"/><text x="100.0894%" y="1135.50"></text></g><g><title>filemap_map_pages (1 samples, 0.02%)</title><rect x="99.8394%" y="1109" width="0.0229%" height="15" fill="rgb(215,79,24)" fg:x="4352" fg:w="1"/><text x="100.0894%" y="1119.50"></text></g><g><title>alloc_set_pte (1 samples, 0.02%)</title><rect x="99.8394%" y="1093" width="0.0229%" height="15" fill="rgb(238,164,38)" fg:x="4352" fg:w="1"/><text x="100.0894%" y="1103.50"></text></g><g><title>_start (4,292 samples, 98.46%)</title><rect x="1.4223%" y="1349" width="98.4630%" height="15" fill="rgb(245,196,38)" fg:x="62" fg:w="4292"/><text x="1.6723%" y="1359.50">_start</text></g><g><title>_dl_start (3 samples, 0.07%)</title><rect x="99.8165%" y="1333" width="0.0688%" height="15" fill="rgb(231,217,29)" fg:x="4351" fg:w="3"/><text x="100.0665%" y="1343.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.02%)</title><rect x="99.8624%" y="1317" width="0.0229%" height="15" fill="rgb(245,6,4)" fg:x="4353" fg:w="1"/><text x="100.1124%" y="1327.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="99.8624%" y="1301" width="0.0229%" height="15" fill="rgb(214,76,49)" fg:x="4353" fg:w="1"/><text x="100.1124%" y="1311.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="99.8853%" y="1317" width="0.0229%" height="15" fill="rgb(205,96,12)" fg:x="4354" fg:w="1"/><text x="100.1353%" y="1327.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.02%)</title><rect x="99.8853%" y="1301" width="0.0229%" height="15" fill="rgb(243,131,4)" fg:x="4354" fg:w="1"/><text x="100.1353%" y="1311.50"></text></g><g><title>bprm_execve (1 samples, 0.02%)</title><rect x="99.8853%" y="1285" width="0.0229%" height="15" fill="rgb(214,114,4)" fg:x="4354" fg:w="1"/><text x="100.1353%" y="1295.50"></text></g><g><title>exec_binprm (1 samples, 0.02%)</title><rect x="99.8853%" y="1269" width="0.0229%" height="15" fill="rgb(234,215,15)" fg:x="4354" fg:w="1"/><text x="100.1353%" y="1279.50"></text></g><g><title>load_elf_binary (1 samples, 0.02%)</title><rect x="99.8853%" y="1253" width="0.0229%" height="15" fill="rgb(250,216,45)" fg:x="4354" fg:w="1"/><text x="100.1353%" y="1263.50"></text></g><g><title>setup_arg_pages (1 samples, 0.02%)</title><rect x="99.8853%" y="1237" width="0.0229%" height="15" fill="rgb(236,128,4)" fg:x="4354" fg:w="1"/><text x="100.1353%" y="1247.50"></text></g><g><title>move_page_tables (1 samples, 0.02%)</title><rect x="99.8853%" y="1221" width="0.0229%" height="15" fill="rgb(234,50,33)" fg:x="4354" fg:w="1"/><text x="100.1353%" y="1231.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="99.9082%" y="1189" width="0.0229%" height="15" fill="rgb(253,131,37)" fg:x="4355" fg:w="1"/><text x="100.1582%" y="1199.50"></text></g><g><title>tlb_finish_mmu (2 samples, 0.05%)</title><rect x="99.9082%" y="1237" width="0.0459%" height="15" fill="rgb(218,55,27)" fg:x="4355" fg:w="2"/><text x="100.1582%" y="1247.50"></text></g><g><title>tlb_flush_mmu (2 samples, 0.05%)</title><rect x="99.9082%" y="1221" width="0.0459%" height="15" fill="rgb(241,220,28)" fg:x="4355" fg:w="2"/><text x="100.1582%" y="1231.50"></text></g><g><title>free_pages_and_swap_cache (2 samples, 0.05%)</title><rect x="99.9082%" y="1205" width="0.0459%" height="15" fill="rgb(241,90,48)" fg:x="4355" fg:w="2"/><text x="100.1582%" y="1215.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="99.9312%" y="1189" width="0.0229%" height="15" fill="rgb(216,43,37)" fg:x="4356" fg:w="1"/><text x="100.1812%" y="1199.50"></text></g><g><title>free_unref_page_list (1 samples, 0.02%)</title><rect x="99.9312%" y="1173" width="0.0229%" height="15" fill="rgb(207,173,9)" fg:x="4356" fg:w="1"/><text x="100.1812%" y="1183.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="99.9312%" y="1157" width="0.0229%" height="15" fill="rgb(240,126,30)" fg:x="4356" fg:w="1"/><text x="100.1812%" y="1167.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.02%)</title><rect x="99.9312%" y="1141" width="0.0229%" height="15" fill="rgb(228,178,53)" fg:x="4356" fg:w="1"/><text x="100.1812%" y="1151.50"></text></g><g><title>vm_normal_page (1 samples, 0.02%)</title><rect x="99.9541%" y="1189" width="0.0229%" height="15" fill="rgb(217,33,4)" fg:x="4357" fg:w="1"/><text x="100.2041%" y="1199.50"></text></g><g><title>all (4,359 samples, 100%)</title><rect x="0.0000%" y="1381" width="100.0000%" height="15" fill="rgb(206,124,34)" fg:x="0" fg:w="4359"/><text x="0.2500%" y="1391.50"></text></g><g><title>y2021 (4,351 samples, 99.82%)</title><rect x="0.1835%" y="1365" width="99.8165%" height="15" fill="rgb(208,122,53)" fg:x="8" fg:w="4351"/><text x="0.4335%" y="1375.50">y2021</text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.11%)</title><rect x="99.8853%" y="1349" width="0.1147%" height="15" fill="rgb(215,202,26)" fg:x="4354" fg:w="5"/><text x="100.1353%" y="1359.50"></text></g><g><title>do_syscall_64 (5 samples, 0.11%)</title><rect x="99.8853%" y="1333" width="0.1147%" height="15" fill="rgb(232,198,31)" fg:x="4354" fg:w="5"/><text x="100.1353%" y="1343.50"></text></g><g><title>__x64_sys_exit_group (4 samples, 0.09%)</title><rect x="99.9082%" y="1317" width="0.0918%" height="15" fill="rgb(222,23,35)" fg:x="4355" fg:w="4"/><text x="100.1582%" y="1327.50"></text></g><g><title>do_group_exit (4 samples, 0.09%)</title><rect x="99.9082%" y="1301" width="0.0918%" height="15" fill="rgb(242,27,53)" fg:x="4355" fg:w="4"/><text x="100.1582%" y="1311.50"></text></g><g><title>do_exit (4 samples, 0.09%)</title><rect x="99.9082%" y="1285" width="0.0918%" height="15" fill="rgb(210,216,42)" fg:x="4355" fg:w="4"/><text x="100.1582%" y="1295.50"></text></g><g><title>mmput (4 samples, 0.09%)</title><rect x="99.9082%" y="1269" width="0.0918%" height="15" fill="rgb(234,39,38)" fg:x="4355" fg:w="4"/><text x="100.1582%" y="1279.50"></text></g><g><title>exit_mmap (4 samples, 0.09%)</title><rect x="99.9082%" y="1253" width="0.0918%" height="15" fill="rgb(235,126,54)" fg:x="4355" fg:w="4"/><text x="100.1582%" y="1263.50"></text></g><g><title>unmap_vmas (2 samples, 0.05%)</title><rect x="99.9541%" y="1237" width="0.0459%" height="15" fill="rgb(235,150,33)" fg:x="4357" fg:w="2"/><text x="100.2041%" y="1247.50"></text></g><g><title>unmap_single_vma (2 samples, 0.05%)</title><rect x="99.9541%" y="1221" width="0.0459%" height="15" fill="rgb(249,49,53)" fg:x="4357" fg:w="2"/><text x="100.2041%" y="1231.50"></text></g><g><title>unmap_page_range (2 samples, 0.05%)</title><rect x="99.9541%" y="1205" width="0.0459%" height="15" fill="rgb(238,60,50)" fg:x="4357" fg:w="2"/><text x="100.2041%" y="1215.50"></text></g><g><title>zap_pte_range.isra.0 (1 samples, 0.02%)</title><rect x="99.9771%" y="1189" width="0.0229%" height="15" fill="rgb(210,5,2)" fg:x="4358" fg:w="1"/><text x="100.2271%" y="1199.50"></text></g><g><title>page_remove_rmap (1 samples, 0.02%)</title><rect x="99.9771%" y="1173" width="0.0229%" height="15" fill="rgb(214,207,24)" fg:x="4358" fg:w="1"/><text x="100.2271%" y="1183.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="99.9771%" y="1157" width="0.0229%" height="15" fill="rgb(228,173,2)" fg:x="4358" fg:w="1"/><text x="100.2271%" y="1167.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="99.9771%" y="1141" width="0.0229%" height="15" fill="rgb(244,26,8)" fg:x="4358" fg:w="1"/><text x="100.2271%" y="1151.50"></text></g></svg></svg>