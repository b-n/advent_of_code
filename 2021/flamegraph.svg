<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1190" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1173.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1173.00"> </text><svg id="frames" x="10" width="1180" total_samples="711"><g><title>perf (5 samples, 0.70%)</title><rect x="0.0000%" y="1125" width="0.7032%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1135.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.70%)</title><rect x="0.0000%" y="1109" width="0.7032%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1119.50"></text></g><g><title>do_syscall_64 (5 samples, 0.70%)</title><rect x="0.0000%" y="1093" width="0.7032%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1103.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.70%)</title><rect x="0.0000%" y="1077" width="0.7032%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1087.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.70%)</title><rect x="0.0000%" y="1061" width="0.7032%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1071.50"></text></g><g><title>bprm_execve (5 samples, 0.70%)</title><rect x="0.0000%" y="1045" width="0.7032%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1055.50"></text></g><g><title>exec_binprm (5 samples, 0.70%)</title><rect x="0.0000%" y="1029" width="0.7032%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1039.50"></text></g><g><title>load_elf_binary (5 samples, 0.70%)</title><rect x="0.0000%" y="1013" width="0.7032%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1023.50"></text></g><g><title>begin_new_exec (5 samples, 0.70%)</title><rect x="0.0000%" y="997" width="0.7032%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1007.50"></text></g><g><title>__set_task_comm (5 samples, 0.70%)</title><rect x="0.0000%" y="981" width="0.7032%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="5"/><text x="0.2500%" y="991.50"></text></g><g><title>perf_event_comm (5 samples, 0.70%)</title><rect x="0.0000%" y="965" width="0.7032%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="5"/><text x="0.2500%" y="975.50"></text></g><g><title>perf_iterate_sb (5 samples, 0.70%)</title><rect x="0.0000%" y="949" width="0.7032%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="5"/><text x="0.2500%" y="959.50"></text></g><g><title>_init (1 samples, 0.14%)</title><rect x="0.7032%" y="1109" width="0.1406%" height="15" fill="rgb(216,20,37)" fg:x="5" fg:w="1"/><text x="0.9532%" y="1119.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="0.7032%" y="1093" width="0.1406%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="1"/><text x="0.9532%" y="1103.50"></text></g><g><title>exc_page_fault (1 samples, 0.14%)</title><rect x="0.7032%" y="1077" width="0.1406%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="0.9532%" y="1087.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="0.7032%" y="1061" width="0.1406%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="1"/><text x="0.9532%" y="1071.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="0.7032%" y="1045" width="0.1406%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="1"/><text x="0.9532%" y="1055.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="0.7032%" y="1029" width="0.1406%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="0.9532%" y="1039.50"></text></g><g><title>do_fault (1 samples, 0.14%)</title><rect x="0.7032%" y="1013" width="0.1406%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="1"/><text x="0.9532%" y="1023.50"></text></g><g><title>filemap_map_pages (1 samples, 0.14%)</title><rect x="0.7032%" y="997" width="0.1406%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="1"/><text x="0.9532%" y="1007.50"></text></g><g><title>alloc_set_pte (1 samples, 0.14%)</title><rect x="0.7032%" y="981" width="0.1406%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="1"/><text x="0.9532%" y="991.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.14%)</title><rect x="0.8439%" y="469" width="0.1406%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="1"/><text x="1.0939%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="0.8439%" y="453" width="0.1406%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="1.0939%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="0.8439%" y="437" width="0.1406%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="1.0939%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="0.8439%" y="421" width="0.1406%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="1.0939%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="0.8439%" y="405" width="0.1406%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="1.0939%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.14%)</title><rect x="0.8439%" y="389" width="0.1406%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="1"/><text x="1.0939%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.14%)</title><rect x="0.8439%" y="373" width="0.1406%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="1"/><text x="1.0939%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (1 samples, 0.14%)</title><rect x="0.9845%" y="469" width="0.1406%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="1"/><text x="1.2345%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1 samples, 0.14%)</title><rect x="0.9845%" y="453" width="0.1406%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="1"/><text x="1.2345%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="0.9845%" y="437" width="0.1406%" height="15" fill="rgb(209,103,24)" fg:x="7" fg:w="1"/><text x="1.2345%" y="447.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="0.9845%" y="421" width="0.1406%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="1"/><text x="1.2345%" y="431.50"></text></g><g><title>exc_page_fault (1 samples, 0.14%)</title><rect x="0.9845%" y="405" width="0.1406%" height="15" fill="rgb(213,181,19)" fg:x="7" fg:w="1"/><text x="1.2345%" y="415.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="0.9845%" y="389" width="0.1406%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="1"/><text x="1.2345%" y="399.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="0.9845%" y="373" width="0.1406%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="1"/><text x="1.2345%" y="383.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="0.9845%" y="357" width="0.1406%" height="15" fill="rgb(233,36,39)" fg:x="7" fg:w="1"/><text x="1.2345%" y="367.50"></text></g><g><title>do_anonymous_page (1 samples, 0.14%)</title><rect x="0.9845%" y="341" width="0.1406%" height="15" fill="rgb(226,3,54)" fg:x="7" fg:w="1"/><text x="1.2345%" y="351.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="0.9845%" y="325" width="0.1406%" height="15" fill="rgb(245,192,40)" fg:x="7" fg:w="1"/><text x="1.2345%" y="335.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="0.9845%" y="309" width="0.1406%" height="15" fill="rgb(238,167,29)" fg:x="7" fg:w="1"/><text x="1.2345%" y="319.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.14%)</title><rect x="0.9845%" y="293" width="0.1406%" height="15" fill="rgb(232,182,51)" fg:x="7" fg:w="1"/><text x="1.2345%" y="303.50"></text></g><g><title>clear_page_rep (1 samples, 0.14%)</title><rect x="0.9845%" y="277" width="0.1406%" height="15" fill="rgb(231,60,39)" fg:x="7" fg:w="1"/><text x="1.2345%" y="287.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.42%)</title><rect x="0.8439%" y="549" width="0.4219%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="3"/><text x="1.0939%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (3 samples, 0.42%)</title><rect x="0.8439%" y="533" width="0.4219%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="3"/><text x="1.0939%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.42%)</title><rect x="0.8439%" y="517" width="0.4219%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="3"/><text x="1.0939%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.42%)</title><rect x="0.8439%" y="501" width="0.4219%" height="15" fill="rgb(222,207,29)" fg:x="6" fg:w="3"/><text x="1.0939%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.42%)</title><rect x="0.8439%" y="485" width="0.4219%" height="15" fill="rgb(206,96,30)" fg:x="6" fg:w="3"/><text x="1.0939%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.14%)</title><rect x="1.1252%" y="469" width="0.1406%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="1"/><text x="1.3752%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.14%)</title><rect x="1.1252%" y="453" width="0.1406%" height="15" fill="rgb(250,191,14)" fg:x="8" fg:w="1"/><text x="1.3752%" y="463.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (4 samples, 0.56%)</title><rect x="0.8439%" y="661" width="0.5626%" height="15" fill="rgb(239,60,40)" fg:x="6" fg:w="4"/><text x="1.0939%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.56%)</title><rect x="0.8439%" y="645" width="0.5626%" height="15" fill="rgb(206,27,48)" fg:x="6" fg:w="4"/><text x="1.0939%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (4 samples, 0.56%)</title><rect x="0.8439%" y="629" width="0.5626%" height="15" fill="rgb(225,35,8)" fg:x="6" fg:w="4"/><text x="1.0939%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.56%)</title><rect x="0.8439%" y="613" width="0.5626%" height="15" fill="rgb(250,213,24)" fg:x="6" fg:w="4"/><text x="1.0939%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.56%)</title><rect x="0.8439%" y="597" width="0.5626%" height="15" fill="rgb(247,123,22)" fg:x="6" fg:w="4"/><text x="1.0939%" y="607.50"></text></g><g><title>y2021::d05::main::p01::{{closure}} (4 samples, 0.56%)</title><rect x="0.8439%" y="581" width="0.5626%" height="15" fill="rgb(231,138,38)" fg:x="6" fg:w="4"/><text x="1.0939%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (4 samples, 0.56%)</title><rect x="0.8439%" y="565" width="0.5626%" height="15" fill="rgb(231,145,46)" fg:x="6" fg:w="4"/><text x="1.0939%" y="575.50"></text></g><g><title>std::collections::hash::map::map_entry (1 samples, 0.14%)</title><rect x="1.2658%" y="549" width="0.1406%" height="15" fill="rgb(251,118,11)" fg:x="9" fg:w="1"/><text x="1.5158%" y="559.50"></text></g><g><title>y2021::d05::main::p01 (5 samples, 0.70%)</title><rect x="0.8439%" y="837" width="0.7032%" height="15" fill="rgb(217,147,25)" fg:x="6" fg:w="5"/><text x="1.0939%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.70%)</title><rect x="0.8439%" y="821" width="0.7032%" height="15" fill="rgb(247,81,37)" fg:x="6" fg:w="5"/><text x="1.0939%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.70%)</title><rect x="0.8439%" y="805" width="0.7032%" height="15" fill="rgb(209,12,38)" fg:x="6" fg:w="5"/><text x="1.0939%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.70%)</title><rect x="0.8439%" y="789" width="0.7032%" height="15" fill="rgb(227,1,9)" fg:x="6" fg:w="5"/><text x="1.0939%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.70%)</title><rect x="0.8439%" y="773" width="0.7032%" height="15" fill="rgb(248,47,43)" fg:x="6" fg:w="5"/><text x="1.0939%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.70%)</title><rect x="0.8439%" y="757" width="0.7032%" height="15" fill="rgb(221,10,30)" fg:x="6" fg:w="5"/><text x="1.0939%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.70%)</title><rect x="0.8439%" y="741" width="0.7032%" height="15" fill="rgb(210,229,1)" fg:x="6" fg:w="5"/><text x="1.0939%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.70%)</title><rect x="0.8439%" y="725" width="0.7032%" height="15" fill="rgb(222,148,37)" fg:x="6" fg:w="5"/><text x="1.0939%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.70%)</title><rect x="0.8439%" y="709" width="0.7032%" height="15" fill="rgb(234,67,33)" fg:x="6" fg:w="5"/><text x="1.0939%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.70%)</title><rect x="0.8439%" y="693" width="0.7032%" height="15" fill="rgb(247,98,35)" fg:x="6" fg:w="5"/><text x="1.0939%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.70%)</title><rect x="0.8439%" y="677" width="0.7032%" height="15" fill="rgb(247,138,52)" fg:x="6" fg:w="5"/><text x="1.0939%" y="687.50"></text></g><g><title>y2021::d05::main::read_path_to_lines::{{closure}} (1 samples, 0.14%)</title><rect x="1.4065%" y="661" width="0.1406%" height="15" fill="rgb(213,79,30)" fg:x="10" fg:w="1"/><text x="1.6565%" y="671.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 0.14%)</title><rect x="1.4065%" y="645" width="0.1406%" height="15" fill="rgb(246,177,23)" fg:x="10" fg:w="1"/><text x="1.6565%" y="655.50"></text></g><g><title>&lt;y2021::types::line::Line as core::str::traits::FromStr&gt;::from_str (1 samples, 0.14%)</title><rect x="1.4065%" y="629" width="0.1406%" height="15" fill="rgb(230,62,27)" fg:x="10" fg:w="1"/><text x="1.6565%" y="639.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 0.14%)</title><rect x="1.4065%" y="613" width="0.1406%" height="15" fill="rgb(216,154,8)" fg:x="10" fg:w="1"/><text x="1.6565%" y="623.50"></text></g><g><title>&lt;y2021::types::point::Point as core::str::traits::FromStr&gt;::from_str (1 samples, 0.14%)</title><rect x="1.4065%" y="597" width="0.1406%" height="15" fill="rgb(244,35,45)" fg:x="10" fg:w="1"/><text x="1.6565%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.14%)</title><rect x="1.4065%" y="581" width="0.1406%" height="15" fill="rgb(251,115,12)" fg:x="10" fg:w="1"/><text x="1.6565%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="1.4065%" y="565" width="0.1406%" height="15" fill="rgb(240,54,50)" fg:x="10" fg:w="1"/><text x="1.6565%" y="575.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="1.5471%" y="709" width="0.1406%" height="15" fill="rgb(233,84,52)" fg:x="11" fg:w="1"/><text x="1.7971%" y="719.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.14%)</title><rect x="1.5471%" y="693" width="0.1406%" height="15" fill="rgb(207,117,47)" fg:x="11" fg:w="1"/><text x="1.7971%" y="703.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.14%)</title><rect x="1.5471%" y="677" width="0.1406%" height="15" fill="rgb(249,43,39)" fg:x="11" fg:w="1"/><text x="1.7971%" y="687.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 0.14%)</title><rect x="1.5471%" y="661" width="0.1406%" height="15" fill="rgb(209,38,44)" fg:x="11" fg:w="1"/><text x="1.7971%" y="671.50"></text></g><g><title>std::io::read_until (1 samples, 0.14%)</title><rect x="1.5471%" y="645" width="0.1406%" height="15" fill="rgb(236,212,23)" fg:x="11" fg:w="1"/><text x="1.7971%" y="655.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.14%)</title><rect x="1.5471%" y="629" width="0.1406%" height="15" fill="rgb(242,79,21)" fg:x="11" fg:w="1"/><text x="1.7971%" y="639.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.14%)</title><rect x="1.5471%" y="613" width="0.1406%" height="15" fill="rgb(211,96,35)" fg:x="11" fg:w="1"/><text x="1.7971%" y="623.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.14%)</title><rect x="1.5471%" y="597" width="0.1406%" height="15" fill="rgb(253,215,40)" fg:x="11" fg:w="1"/><text x="1.7971%" y="607.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.14%)</title><rect x="1.5471%" y="581" width="0.1406%" height="15" fill="rgb(211,81,21)" fg:x="11" fg:w="1"/><text x="1.7971%" y="591.50"></text></g><g><title>__libc_read (1 samples, 0.14%)</title><rect x="1.5471%" y="565" width="0.1406%" height="15" fill="rgb(208,190,38)" fg:x="11" fg:w="1"/><text x="1.7971%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="1.5471%" y="549" width="0.1406%" height="15" fill="rgb(235,213,38)" fg:x="11" fg:w="1"/><text x="1.7971%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="1.5471%" y="533" width="0.1406%" height="15" fill="rgb(237,122,38)" fg:x="11" fg:w="1"/><text x="1.7971%" y="543.50"></text></g><g><title>__x64_sys_read (1 samples, 0.14%)</title><rect x="1.5471%" y="517" width="0.1406%" height="15" fill="rgb(244,218,35)" fg:x="11" fg:w="1"/><text x="1.7971%" y="527.50"></text></g><g><title>ksys_read (1 samples, 0.14%)</title><rect x="1.5471%" y="501" width="0.1406%" height="15" fill="rgb(240,68,47)" fg:x="11" fg:w="1"/><text x="1.7971%" y="511.50"></text></g><g><title>vfs_read (1 samples, 0.14%)</title><rect x="1.5471%" y="485" width="0.1406%" height="15" fill="rgb(210,16,53)" fg:x="11" fg:w="1"/><text x="1.7971%" y="495.50"></text></g><g><title>rw_verify_area (1 samples, 0.14%)</title><rect x="1.5471%" y="469" width="0.1406%" height="15" fill="rgb(235,124,12)" fg:x="11" fg:w="1"/><text x="1.7971%" y="479.50"></text></g><g><title>security_file_permission (1 samples, 0.14%)</title><rect x="1.5471%" y="453" width="0.1406%" height="15" fill="rgb(224,169,11)" fg:x="11" fg:w="1"/><text x="1.7971%" y="463.50"></text></g><g><title>apparmor_file_permission (1 samples, 0.14%)</title><rect x="1.5471%" y="437" width="0.1406%" height="15" fill="rgb(250,166,2)" fg:x="11" fg:w="1"/><text x="1.7971%" y="447.50"></text></g><g><title>common_file_perm (1 samples, 0.14%)</title><rect x="1.5471%" y="421" width="0.1406%" height="15" fill="rgb(242,216,29)" fg:x="11" fg:w="1"/><text x="1.7971%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="2.1097%" y="357" width="0.1406%" height="15" fill="rgb(230,116,27)" fg:x="15" fg:w="1"/><text x="2.3597%" y="367.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (2 samples, 0.28%)</title><rect x="2.1097%" y="501" width="0.2813%" height="15" fill="rgb(228,99,48)" fg:x="15" fg:w="2"/><text x="2.3597%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.28%)</title><rect x="2.1097%" y="485" width="0.2813%" height="15" fill="rgb(253,11,6)" fg:x="15" fg:w="2"/><text x="2.3597%" y="495.50"></text></g><g><title>&lt;y2021::types::point::Point as core::hash::Hash&gt;::hash (2 samples, 0.28%)</title><rect x="2.1097%" y="469" width="0.2813%" height="15" fill="rgb(247,143,39)" fg:x="15" fg:w="2"/><text x="2.3597%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.28%)</title><rect x="2.1097%" y="453" width="0.2813%" height="15" fill="rgb(236,97,10)" fg:x="15" fg:w="2"/><text x="2.3597%" y="463.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.28%)</title><rect x="2.1097%" y="437" width="0.2813%" height="15" fill="rgb(233,208,19)" fg:x="15" fg:w="2"/><text x="2.3597%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.28%)</title><rect x="2.1097%" y="421" width="0.2813%" height="15" fill="rgb(216,164,2)" fg:x="15" fg:w="2"/><text x="2.3597%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.28%)</title><rect x="2.1097%" y="405" width="0.2813%" height="15" fill="rgb(220,129,5)" fg:x="15" fg:w="2"/><text x="2.3597%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.28%)</title><rect x="2.1097%" y="389" width="0.2813%" height="15" fill="rgb(242,17,10)" fg:x="15" fg:w="2"/><text x="2.3597%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.28%)</title><rect x="2.1097%" y="373" width="0.2813%" height="15" fill="rgb(242,107,0)" fg:x="15" fg:w="2"/><text x="2.3597%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.14%)</title><rect x="2.2504%" y="357" width="0.1406%" height="15" fill="rgb(251,28,31)" fg:x="16" fg:w="1"/><text x="2.5004%" y="367.50"></text></g><g><title>_cond_resched (1 samples, 0.14%)</title><rect x="2.5316%" y="405" width="0.1406%" height="15" fill="rgb(233,223,10)" fg:x="18" fg:w="1"/><text x="2.7816%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (3 samples, 0.42%)</title><rect x="2.3910%" y="501" width="0.4219%" height="15" fill="rgb(215,21,27)" fg:x="17" fg:w="3"/><text x="2.6410%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (3 samples, 0.42%)</title><rect x="2.3910%" y="485" width="0.4219%" height="15" fill="rgb(232,23,21)" fg:x="17" fg:w="3"/><text x="2.6410%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.42%)</title><rect x="2.3910%" y="469" width="0.4219%" height="15" fill="rgb(244,5,23)" fg:x="17" fg:w="3"/><text x="2.6410%" y="479.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.28%)</title><rect x="2.5316%" y="453" width="0.2813%" height="15" fill="rgb(226,81,46)" fg:x="18" fg:w="2"/><text x="2.7816%" y="463.50"></text></g><g><title>exc_page_fault (2 samples, 0.28%)</title><rect x="2.5316%" y="437" width="0.2813%" height="15" fill="rgb(247,70,30)" fg:x="18" fg:w="2"/><text x="2.7816%" y="447.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.28%)</title><rect x="2.5316%" y="421" width="0.2813%" height="15" fill="rgb(212,68,19)" fg:x="18" fg:w="2"/><text x="2.7816%" y="431.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="2.6723%" y="405" width="0.1406%" height="15" fill="rgb(240,187,13)" fg:x="19" fg:w="1"/><text x="2.9223%" y="415.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="2.6723%" y="389" width="0.1406%" height="15" fill="rgb(223,113,26)" fg:x="19" fg:w="1"/><text x="2.9223%" y="399.50"></text></g><g><title>do_anonymous_page (1 samples, 0.14%)</title><rect x="2.6723%" y="373" width="0.1406%" height="15" fill="rgb(206,192,2)" fg:x="19" fg:w="1"/><text x="2.9223%" y="383.50"></text></g><g><title>mem_cgroup_charge (1 samples, 0.14%)</title><rect x="2.6723%" y="357" width="0.1406%" height="15" fill="rgb(241,108,4)" fg:x="19" fg:w="1"/><text x="2.9223%" y="367.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.14%)</title><rect x="2.6723%" y="341" width="0.1406%" height="15" fill="rgb(247,173,49)" fg:x="19" fg:w="1"/><text x="2.9223%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (7 samples, 0.98%)</title><rect x="2.1097%" y="565" width="0.9845%" height="15" fill="rgb(224,114,35)" fg:x="15" fg:w="7"/><text x="2.3597%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (7 samples, 0.98%)</title><rect x="2.1097%" y="549" width="0.9845%" height="15" fill="rgb(245,159,27)" fg:x="15" fg:w="7"/><text x="2.3597%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.98%)</title><rect x="2.1097%" y="533" width="0.9845%" height="15" fill="rgb(245,172,44)" fg:x="15" fg:w="7"/><text x="2.3597%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (7 samples, 0.98%)</title><rect x="2.1097%" y="517" width="0.9845%" height="15" fill="rgb(236,23,11)" fg:x="15" fg:w="7"/><text x="2.3597%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (2 samples, 0.28%)</title><rect x="2.8129%" y="501" width="0.2813%" height="15" fill="rgb(205,117,38)" fg:x="20" fg:w="2"/><text x="3.0629%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.28%)</title><rect x="2.8129%" y="485" width="0.2813%" height="15" fill="rgb(237,72,25)" fg:x="20" fg:w="2"/><text x="3.0629%" y="495.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.14%)</title><rect x="3.2349%" y="501" width="0.1406%" height="15" fill="rgb(244,70,9)" fg:x="23" fg:w="1"/><text x="3.4849%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (10 samples, 1.41%)</title><rect x="2.1097%" y="581" width="1.4065%" height="15" fill="rgb(217,125,39)" fg:x="15" fg:w="10"/><text x="2.3597%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.42%)</title><rect x="3.0942%" y="565" width="0.4219%" height="15" fill="rgb(235,36,10)" fg:x="22" fg:w="3"/><text x="3.3442%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.28%)</title><rect x="3.2349%" y="549" width="0.2813%" height="15" fill="rgb(251,123,47)" fg:x="23" fg:w="2"/><text x="3.4849%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.28%)</title><rect x="3.2349%" y="533" width="0.2813%" height="15" fill="rgb(221,13,13)" fg:x="23" fg:w="2"/><text x="3.4849%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.28%)</title><rect x="3.2349%" y="517" width="0.2813%" height="15" fill="rgb(238,131,9)" fg:x="23" fg:w="2"/><text x="3.4849%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.14%)</title><rect x="3.3755%" y="501" width="0.1406%" height="15" fill="rgb(211,50,8)" fg:x="24" fg:w="1"/><text x="3.6255%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.14%)</title><rect x="3.3755%" y="485" width="0.1406%" height="15" fill="rgb(245,182,24)" fg:x="24" fg:w="1"/><text x="3.6255%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.14%)</title><rect x="3.3755%" y="469" width="0.1406%" height="15" fill="rgb(242,14,37)" fg:x="24" fg:w="1"/><text x="3.6255%" y="479.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.14%)</title><rect x="3.3755%" y="453" width="0.1406%" height="15" fill="rgb(246,228,12)" fg:x="24" fg:w="1"/><text x="3.6255%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (15 samples, 2.11%)</title><rect x="1.6878%" y="677" width="2.1097%" height="15" fill="rgb(213,55,15)" fg:x="12" fg:w="15"/><text x="1.9378%" y="687.50">c..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (15 samples, 2.11%)</title><rect x="1.6878%" y="661" width="2.1097%" height="15" fill="rgb(209,9,3)" fg:x="12" fg:w="15"/><text x="1.9378%" y="671.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (15 samples, 2.11%)</title><rect x="1.6878%" y="645" width="2.1097%" height="15" fill="rgb(230,59,30)" fg:x="12" fg:w="15"/><text x="1.9378%" y="655.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 2.11%)</title><rect x="1.6878%" y="629" width="2.1097%" height="15" fill="rgb(209,121,21)" fg:x="12" fg:w="15"/><text x="1.9378%" y="639.50">c..</text></g><g><title>y2021::d05::main::p02::{{closure}} (14 samples, 1.97%)</title><rect x="1.8284%" y="613" width="1.9691%" height="15" fill="rgb(220,109,13)" fg:x="13" fg:w="14"/><text x="2.0784%" y="623.50">y..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (12 samples, 1.69%)</title><rect x="2.1097%" y="597" width="1.6878%" height="15" fill="rgb(232,18,1)" fg:x="15" fg:w="12"/><text x="2.3597%" y="607.50"></text></g><g><title>std::collections::hash::map::map_entry (2 samples, 0.28%)</title><rect x="3.5162%" y="581" width="0.2813%" height="15" fill="rgb(215,41,42)" fg:x="25" fg:w="2"/><text x="3.7662%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 2.39%)</title><rect x="1.5471%" y="821" width="2.3910%" height="15" fill="rgb(224,123,36)" fg:x="11" fg:w="17"/><text x="1.7971%" y="831.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 2.39%)</title><rect x="1.5471%" y="805" width="2.3910%" height="15" fill="rgb(240,125,3)" fg:x="11" fg:w="17"/><text x="1.7971%" y="815.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 2.39%)</title><rect x="1.5471%" y="789" width="2.3910%" height="15" fill="rgb(205,98,50)" fg:x="11" fg:w="17"/><text x="1.7971%" y="799.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 2.39%)</title><rect x="1.5471%" y="773" width="2.3910%" height="15" fill="rgb(205,185,37)" fg:x="11" fg:w="17"/><text x="1.7971%" y="783.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 2.39%)</title><rect x="1.5471%" y="757" width="2.3910%" height="15" fill="rgb(238,207,15)" fg:x="11" fg:w="17"/><text x="1.7971%" y="767.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 2.39%)</title><rect x="1.5471%" y="741" width="2.3910%" height="15" fill="rgb(213,199,42)" fg:x="11" fg:w="17"/><text x="1.7971%" y="751.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (17 samples, 2.39%)</title><rect x="1.5471%" y="725" width="2.3910%" height="15" fill="rgb(235,201,11)" fg:x="11" fg:w="17"/><text x="1.7971%" y="735.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (16 samples, 2.25%)</title><rect x="1.6878%" y="709" width="2.2504%" height="15" fill="rgb(207,46,11)" fg:x="12" fg:w="16"/><text x="1.9378%" y="719.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (16 samples, 2.25%)</title><rect x="1.6878%" y="693" width="2.2504%" height="15" fill="rgb(241,35,35)" fg:x="12" fg:w="16"/><text x="1.9378%" y="703.50">c..</text></g><g><title>y2021::d05::main::read_path_to_lines::{{closure}} (1 samples, 0.14%)</title><rect x="3.7975%" y="677" width="0.1406%" height="15" fill="rgb(243,32,47)" fg:x="27" fg:w="1"/><text x="4.0475%" y="687.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (1 samples, 0.14%)</title><rect x="3.7975%" y="661" width="0.1406%" height="15" fill="rgb(247,202,23)" fg:x="27" fg:w="1"/><text x="4.0475%" y="671.50"></text></g><g><title>&lt;y2021::types::line::Line as core::str::traits::FromStr&gt;::from_str (1 samples, 0.14%)</title><rect x="3.7975%" y="645" width="0.1406%" height="15" fill="rgb(219,102,11)" fg:x="27" fg:w="1"/><text x="4.0475%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.14%)</title><rect x="3.7975%" y="629" width="0.1406%" height="15" fill="rgb(243,110,44)" fg:x="27" fg:w="1"/><text x="4.0475%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="3.7975%" y="613" width="0.1406%" height="15" fill="rgb(222,74,54)" fg:x="27" fg:w="1"/><text x="4.0475%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="3.7975%" y="597" width="0.1406%" height="15" fill="rgb(216,99,12)" fg:x="27" fg:w="1"/><text x="4.0475%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="3.7975%" y="581" width="0.1406%" height="15" fill="rgb(226,22,26)" fg:x="27" fg:w="1"/><text x="4.0475%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.14%)</title><rect x="3.7975%" y="565" width="0.1406%" height="15" fill="rgb(217,163,10)" fg:x="27" fg:w="1"/><text x="4.0475%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.14%)</title><rect x="3.7975%" y="549" width="0.1406%" height="15" fill="rgb(213,25,53)" fg:x="27" fg:w="1"/><text x="4.0475%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="3.7975%" y="533" width="0.1406%" height="15" fill="rgb(252,105,26)" fg:x="27" fg:w="1"/><text x="4.0475%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="3.7975%" y="517" width="0.1406%" height="15" fill="rgb(220,39,43)" fg:x="27" fg:w="1"/><text x="4.0475%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.14%)</title><rect x="3.7975%" y="501" width="0.1406%" height="15" fill="rgb(229,68,48)" fg:x="27" fg:w="1"/><text x="4.0475%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.14%)</title><rect x="3.7975%" y="485" width="0.1406%" height="15" fill="rgb(252,8,32)" fg:x="27" fg:w="1"/><text x="4.0475%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.14%)</title><rect x="3.7975%" y="469" width="0.1406%" height="15" fill="rgb(223,20,43)" fg:x="27" fg:w="1"/><text x="4.0475%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.14%)</title><rect x="3.7975%" y="453" width="0.1406%" height="15" fill="rgb(229,81,49)" fg:x="27" fg:w="1"/><text x="4.0475%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.14%)</title><rect x="3.7975%" y="437" width="0.1406%" height="15" fill="rgb(236,28,36)" fg:x="27" fg:w="1"/><text x="4.0475%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.14%)</title><rect x="3.7975%" y="421" width="0.1406%" height="15" fill="rgb(249,185,26)" fg:x="27" fg:w="1"/><text x="4.0475%" y="431.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="3.7975%" y="405" width="0.1406%" height="15" fill="rgb(249,174,33)" fg:x="27" fg:w="1"/><text x="4.0475%" y="415.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="3.7975%" y="389" width="0.1406%" height="15" fill="rgb(233,201,37)" fg:x="27" fg:w="1"/><text x="4.0475%" y="399.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="3.7975%" y="373" width="0.1406%" height="15" fill="rgb(221,78,26)" fg:x="27" fg:w="1"/><text x="4.0475%" y="383.50"></text></g><g><title>tcache_put (1 samples, 0.14%)</title><rect x="3.7975%" y="357" width="0.1406%" height="15" fill="rgb(250,127,30)" fg:x="27" fg:w="1"/><text x="4.0475%" y="367.50"></text></g><g><title>y2021::d05::main::run (23 samples, 3.23%)</title><rect x="0.8439%" y="853" width="3.2349%" height="15" fill="rgb(230,49,44)" fg:x="6" fg:w="23"/><text x="1.0939%" y="863.50">y20..</text></g><g><title>y2021::d05::main::p02 (18 samples, 2.53%)</title><rect x="1.5471%" y="837" width="2.5316%" height="15" fill="rgb(229,67,23)" fg:x="11" fg:w="18"/><text x="1.7971%" y="847.50">y2..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;y2021::types::point::Point,i32&gt;&gt; (1 samples, 0.14%)</title><rect x="3.9381%" y="821" width="0.1406%" height="15" fill="rgb(249,83,47)" fg:x="28" fg:w="1"/><text x="4.1881%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::types::point::Point,i32,std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.14%)</title><rect x="3.9381%" y="805" width="0.1406%" height="15" fill="rgb(215,43,3)" fg:x="28" fg:w="1"/><text x="4.1881%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::types::point::Point,i32)&gt;&gt; (1 samples, 0.14%)</title><rect x="3.9381%" y="789" width="0.1406%" height="15" fill="rgb(238,154,13)" fg:x="28" fg:w="1"/><text x="4.1881%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="3.9381%" y="773" width="0.1406%" height="15" fill="rgb(219,56,2)" fg:x="28" fg:w="1"/><text x="4.1881%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (1 samples, 0.14%)</title><rect x="3.9381%" y="757" width="0.1406%" height="15" fill="rgb(233,0,4)" fg:x="28" fg:w="1"/><text x="4.1881%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.14%)</title><rect x="3.9381%" y="741" width="0.1406%" height="15" fill="rgb(235,30,7)" fg:x="28" fg:w="1"/><text x="4.1881%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="3.9381%" y="725" width="0.1406%" height="15" fill="rgb(250,79,13)" fg:x="28" fg:w="1"/><text x="4.1881%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="3.9381%" y="709" width="0.1406%" height="15" fill="rgb(211,146,34)" fg:x="28" fg:w="1"/><text x="4.1881%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="3.9381%" y="693" width="0.1406%" height="15" fill="rgb(228,22,38)" fg:x="28" fg:w="1"/><text x="4.1881%" y="703.50"></text></g><g><title>systrim (1 samples, 0.14%)</title><rect x="3.9381%" y="677" width="0.1406%" height="15" fill="rgb(235,168,5)" fg:x="28" fg:w="1"/><text x="4.1881%" y="687.50"></text></g><g><title>__GI___default_morecore (1 samples, 0.14%)</title><rect x="3.9381%" y="661" width="0.1406%" height="15" fill="rgb(221,155,16)" fg:x="28" fg:w="1"/><text x="4.1881%" y="671.50"></text></g><g><title>__GI___sbrk (1 samples, 0.14%)</title><rect x="3.9381%" y="645" width="0.1406%" height="15" fill="rgb(215,215,53)" fg:x="28" fg:w="1"/><text x="4.1881%" y="655.50"></text></g><g><title>__GI___sbrk (1 samples, 0.14%)</title><rect x="3.9381%" y="629" width="0.1406%" height="15" fill="rgb(223,4,10)" fg:x="28" fg:w="1"/><text x="4.1881%" y="639.50"></text></g><g><title>__brk (1 samples, 0.14%)</title><rect x="3.9381%" y="613" width="0.1406%" height="15" fill="rgb(234,103,6)" fg:x="28" fg:w="1"/><text x="4.1881%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="3.9381%" y="597" width="0.1406%" height="15" fill="rgb(227,97,0)" fg:x="28" fg:w="1"/><text x="4.1881%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.14%)</title><rect x="3.9381%" y="581" width="0.1406%" height="15" fill="rgb(234,150,53)" fg:x="28" fg:w="1"/><text x="4.1881%" y="591.50"></text></g><g><title>__x64_sys_brk (1 samples, 0.14%)</title><rect x="3.9381%" y="565" width="0.1406%" height="15" fill="rgb(228,201,54)" fg:x="28" fg:w="1"/><text x="4.1881%" y="575.50"></text></g><g><title>__do_munmap (1 samples, 0.14%)</title><rect x="3.9381%" y="549" width="0.1406%" height="15" fill="rgb(222,22,37)" fg:x="28" fg:w="1"/><text x="4.1881%" y="559.50"></text></g><g><title>unmap_region (1 samples, 0.14%)</title><rect x="3.9381%" y="533" width="0.1406%" height="15" fill="rgb(237,53,32)" fg:x="28" fg:w="1"/><text x="4.1881%" y="543.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.14%)</title><rect x="3.9381%" y="517" width="0.1406%" height="15" fill="rgb(233,25,53)" fg:x="28" fg:w="1"/><text x="4.1881%" y="527.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.14%)</title><rect x="3.9381%" y="501" width="0.1406%" height="15" fill="rgb(210,40,34)" fg:x="28" fg:w="1"/><text x="4.1881%" y="511.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.14%)</title><rect x="3.9381%" y="485" width="0.1406%" height="15" fill="rgb(241,220,44)" fg:x="28" fg:w="1"/><text x="4.1881%" y="495.50"></text></g><g><title>release_pages (1 samples, 0.14%)</title><rect x="3.9381%" y="469" width="0.1406%" height="15" fill="rgb(235,28,35)" fg:x="28" fg:w="1"/><text x="4.1881%" y="479.50"></text></g><g><title>y2021::d07::main::p01 (1 samples, 0.14%)</title><rect x="4.0788%" y="837" width="0.1406%" height="15" fill="rgb(210,56,17)" fg:x="29" fg:w="1"/><text x="4.3288%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.14%)</title><rect x="4.0788%" y="821" width="0.1406%" height="15" fill="rgb(224,130,29)" fg:x="29" fg:w="1"/><text x="4.3288%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="4.0788%" y="805" width="0.1406%" height="15" fill="rgb(235,212,8)" fg:x="29" fg:w="1"/><text x="4.3288%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="4.0788%" y="789" width="0.1406%" height="15" fill="rgb(223,33,50)" fg:x="29" fg:w="1"/><text x="4.3288%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="4.0788%" y="773" width="0.1406%" height="15" fill="rgb(219,149,13)" fg:x="29" fg:w="1"/><text x="4.3288%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.14%)</title><rect x="4.0788%" y="757" width="0.1406%" height="15" fill="rgb(250,156,29)" fg:x="29" fg:w="1"/><text x="4.3288%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.14%)</title><rect x="4.0788%" y="741" width="0.1406%" height="15" fill="rgb(216,193,19)" fg:x="29" fg:w="1"/><text x="4.3288%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="4.0788%" y="725" width="0.1406%" height="15" fill="rgb(216,135,14)" fg:x="29" fg:w="1"/><text x="4.3288%" y="735.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (1 samples, 0.14%)</title><rect x="4.0788%" y="709" width="0.1406%" height="15" fill="rgb(241,47,5)" fg:x="29" fg:w="1"/><text x="4.3288%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (1 samples, 0.14%)</title><rect x="4.0788%" y="693" width="0.1406%" height="15" fill="rgb(233,42,35)" fg:x="29" fg:w="1"/><text x="4.3288%" y="703.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (1 samples, 0.14%)</title><rect x="4.0788%" y="677" width="0.1406%" height="15" fill="rgb(231,13,6)" fg:x="29" fg:w="1"/><text x="4.3288%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (1 samples, 0.14%)</title><rect x="4.0788%" y="661" width="0.1406%" height="15" fill="rgb(207,181,40)" fg:x="29" fg:w="1"/><text x="4.3288%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.14%)</title><rect x="4.0788%" y="645" width="0.1406%" height="15" fill="rgb(254,173,49)" fg:x="29" fg:w="1"/><text x="4.3288%" y="655.50"></text></g><g><title>y2021::d07::main::p01::{{closure}} (1 samples, 0.14%)</title><rect x="4.0788%" y="629" width="0.1406%" height="15" fill="rgb(221,1,38)" fg:x="29" fg:w="1"/><text x="4.3288%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.14%)</title><rect x="4.0788%" y="613" width="0.1406%" height="15" fill="rgb(206,124,46)" fg:x="29" fg:w="1"/><text x="4.3288%" y="623.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.14%)</title><rect x="4.0788%" y="597" width="0.1406%" height="15" fill="rgb(249,21,11)" fg:x="29" fg:w="1"/><text x="4.3288%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="4.0788%" y="581" width="0.1406%" height="15" fill="rgb(222,201,40)" fg:x="29" fg:w="1"/><text x="4.3288%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.14%)</title><rect x="4.0788%" y="565" width="0.1406%" height="15" fill="rgb(235,61,29)" fg:x="29" fg:w="1"/><text x="4.3288%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.14%)</title><rect x="4.0788%" y="549" width="0.1406%" height="15" fill="rgb(219,207,3)" fg:x="29" fg:w="1"/><text x="4.3288%" y="559.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.14%)</title><rect x="4.0788%" y="533" width="0.1406%" height="15" fill="rgb(222,56,46)" fg:x="29" fg:w="1"/><text x="4.3288%" y="543.50"></text></g><g><title>y2021::d07::main::run (2 samples, 0.28%)</title><rect x="4.0788%" y="853" width="0.2813%" height="15" fill="rgb(239,76,54)" fg:x="29" fg:w="2"/><text x="4.3288%" y="863.50"></text></g><g><title>y2021::d07::main::p02 (1 samples, 0.14%)</title><rect x="4.2194%" y="837" width="0.1406%" height="15" fill="rgb(231,124,27)" fg:x="30" fg:w="1"/><text x="4.4694%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.14%)</title><rect x="4.2194%" y="821" width="0.1406%" height="15" fill="rgb(249,195,6)" fg:x="30" fg:w="1"/><text x="4.4694%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="4.2194%" y="805" width="0.1406%" height="15" fill="rgb(237,174,47)" fg:x="30" fg:w="1"/><text x="4.4694%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="4.2194%" y="789" width="0.1406%" height="15" fill="rgb(206,201,31)" fg:x="30" fg:w="1"/><text x="4.4694%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="4.2194%" y="773" width="0.1406%" height="15" fill="rgb(231,57,52)" fg:x="30" fg:w="1"/><text x="4.4694%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.14%)</title><rect x="4.2194%" y="757" width="0.1406%" height="15" fill="rgb(248,177,22)" fg:x="30" fg:w="1"/><text x="4.4694%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.14%)</title><rect x="4.2194%" y="741" width="0.1406%" height="15" fill="rgb(215,211,37)" fg:x="30" fg:w="1"/><text x="4.4694%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="4.2194%" y="725" width="0.1406%" height="15" fill="rgb(241,128,51)" fg:x="30" fg:w="1"/><text x="4.4694%" y="735.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold (1 samples, 0.14%)</title><rect x="4.2194%" y="709" width="0.1406%" height="15" fill="rgb(227,165,31)" fg:x="30" fg:w="1"/><text x="4.4694%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::try_fold (1 samples, 0.14%)</title><rect x="4.2194%" y="693" width="0.1406%" height="15" fill="rgb(228,167,24)" fg:x="30" fg:w="1"/><text x="4.4694%" y="703.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_try_fold (1 samples, 0.14%)</title><rect x="4.2194%" y="677" width="0.1406%" height="15" fill="rgb(228,143,12)" fg:x="30" fg:w="1"/><text x="4.4694%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::fold::ok::{{closure}} (1 samples, 0.14%)</title><rect x="4.2194%" y="661" width="0.1406%" height="15" fill="rgb(249,149,8)" fg:x="30" fg:w="1"/><text x="4.4694%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.14%)</title><rect x="4.2194%" y="645" width="0.1406%" height="15" fill="rgb(243,35,44)" fg:x="30" fg:w="1"/><text x="4.4694%" y="655.50"></text></g><g><title>y2021::d07::main::p02::{{closure}} (1 samples, 0.14%)</title><rect x="4.2194%" y="629" width="0.1406%" height="15" fill="rgb(246,89,9)" fg:x="30" fg:w="1"/><text x="4.4694%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.14%)</title><rect x="4.2194%" y="613" width="0.1406%" height="15" fill="rgb(233,213,13)" fg:x="30" fg:w="1"/><text x="4.4694%" y="623.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.14%)</title><rect x="4.2194%" y="597" width="0.1406%" height="15" fill="rgb(233,141,41)" fg:x="30" fg:w="1"/><text x="4.4694%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="4.2194%" y="581" width="0.1406%" height="15" fill="rgb(239,167,4)" fg:x="30" fg:w="1"/><text x="4.4694%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="4.2194%" y="565" width="0.1406%" height="15" fill="rgb(209,217,16)" fg:x="30" fg:w="1"/><text x="4.4694%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.14%)</title><rect x="4.2194%" y="549" width="0.1406%" height="15" fill="rgb(219,88,35)" fg:x="30" fg:w="1"/><text x="4.4694%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.14%)</title><rect x="4.2194%" y="533" width="0.1406%" height="15" fill="rgb(220,193,23)" fg:x="30" fg:w="1"/><text x="4.4694%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.14%)</title><rect x="4.2194%" y="517" width="0.1406%" height="15" fill="rgb(230,90,52)" fg:x="30" fg:w="1"/><text x="4.4694%" y="527.50"></text></g><g><title>y2021::d07::main::p02::{{closure}}::{{closure}} (1 samples, 0.14%)</title><rect x="4.2194%" y="501" width="0.1406%" height="15" fill="rgb(252,106,19)" fg:x="30" fg:w="1"/><text x="4.4694%" y="511.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="4.3601%" y="533" width="0.1406%" height="15" fill="rgb(206,74,20)" fg:x="31" fg:w="1"/><text x="4.6101%" y="543.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="4.3601%" y="517" width="0.1406%" height="15" fill="rgb(230,138,44)" fg:x="31" fg:w="1"/><text x="4.6101%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="4.3601%" y="501" width="0.1406%" height="15" fill="rgb(235,182,43)" fg:x="31" fg:w="1"/><text x="4.6101%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="4.3601%" y="485" width="0.1406%" height="15" fill="rgb(242,16,51)" fg:x="31" fg:w="1"/><text x="4.6101%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1 samples, 0.14%)</title><rect x="4.3601%" y="469" width="0.1406%" height="15" fill="rgb(248,9,4)" fg:x="31" fg:w="1"/><text x="4.6101%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1 samples, 0.14%)</title><rect x="4.3601%" y="453" width="0.1406%" height="15" fill="rgb(210,31,22)" fg:x="31" fg:w="1"/><text x="4.6101%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="4.3601%" y="437" width="0.1406%" height="15" fill="rgb(239,54,39)" fg:x="31" fg:w="1"/><text x="4.6101%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="4.3601%" y="421" width="0.1406%" height="15" fill="rgb(230,99,41)" fg:x="31" fg:w="1"/><text x="4.6101%" y="431.50"></text></g><g><title>y2021::d08::main::run (2 samples, 0.28%)</title><rect x="4.3601%" y="853" width="0.2813%" height="15" fill="rgb(253,106,12)" fg:x="31" fg:w="2"/><text x="4.6101%" y="863.50"></text></g><g><title>y2021::d08::main::p02 (2 samples, 0.28%)</title><rect x="4.3601%" y="837" width="0.2813%" height="15" fill="rgb(213,46,41)" fg:x="31" fg:w="2"/><text x="4.6101%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.28%)</title><rect x="4.3601%" y="821" width="0.2813%" height="15" fill="rgb(215,133,35)" fg:x="31" fg:w="2"/><text x="4.6101%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::iter::traits::accum::Sum&lt;core::option::Option&lt;U&gt;&gt;&gt;::sum (2 samples, 0.28%)</title><rect x="4.3601%" y="805" width="0.2813%" height="15" fill="rgb(213,28,5)" fg:x="31" fg:w="2"/><text x="4.6101%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.28%)</title><rect x="4.3601%" y="789" width="0.2813%" height="15" fill="rgb(215,77,49)" fg:x="31" fg:w="2"/><text x="4.6101%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::accum::Sum&lt;core::result::Result&lt;U,E&gt;&gt;&gt;::sum (2 samples, 0.28%)</title><rect x="4.3601%" y="773" width="0.2813%" height="15" fill="rgb(248,100,22)" fg:x="31" fg:w="2"/><text x="4.6101%" y="783.50"></text></g><g><title>core::iter::adapters::process_results (2 samples, 0.28%)</title><rect x="4.3601%" y="757" width="0.2813%" height="15" fill="rgb(208,67,9)" fg:x="31" fg:w="2"/><text x="4.6101%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::iter::traits::accum::Sum&lt;core::result::Result&lt;U,E&gt;&gt;&gt;::sum::{{closure}} (2 samples, 0.28%)</title><rect x="4.3601%" y="741" width="0.2813%" height="15" fill="rgb(219,133,21)" fg:x="31" fg:w="2"/><text x="4.6101%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.28%)</title><rect x="4.3601%" y="725" width="0.2813%" height="15" fill="rgb(246,46,29)" fg:x="31" fg:w="2"/><text x="4.6101%" y="735.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.28%)</title><rect x="4.3601%" y="709" width="0.2813%" height="15" fill="rgb(246,185,52)" fg:x="31" fg:w="2"/><text x="4.6101%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.28%)</title><rect x="4.3601%" y="693" width="0.2813%" height="15" fill="rgb(252,136,11)" fg:x="31" fg:w="2"/><text x="4.6101%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.28%)</title><rect x="4.3601%" y="677" width="0.2813%" height="15" fill="rgb(219,138,53)" fg:x="31" fg:w="2"/><text x="4.6101%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.28%)</title><rect x="4.3601%" y="661" width="0.2813%" height="15" fill="rgb(211,51,23)" fg:x="31" fg:w="2"/><text x="4.6101%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.28%)</title><rect x="4.3601%" y="645" width="0.2813%" height="15" fill="rgb(247,221,28)" fg:x="31" fg:w="2"/><text x="4.6101%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.28%)</title><rect x="4.3601%" y="629" width="0.2813%" height="15" fill="rgb(251,222,45)" fg:x="31" fg:w="2"/><text x="4.6101%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.28%)</title><rect x="4.3601%" y="613" width="0.2813%" height="15" fill="rgb(217,162,53)" fg:x="31" fg:w="2"/><text x="4.6101%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.28%)</title><rect x="4.3601%" y="597" width="0.2813%" height="15" fill="rgb(229,93,14)" fg:x="31" fg:w="2"/><text x="4.6101%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.28%)</title><rect x="4.3601%" y="581" width="0.2813%" height="15" fill="rgb(209,67,49)" fg:x="31" fg:w="2"/><text x="4.6101%" y="591.50"></text></g><g><title>y2021::d08::main::p02::{{closure}} (2 samples, 0.28%)</title><rect x="4.3601%" y="565" width="0.2813%" height="15" fill="rgb(213,87,29)" fg:x="31" fg:w="2"/><text x="4.6101%" y="575.50"></text></g><g><title>y2021::d08::main::signal_value (2 samples, 0.28%)</title><rect x="4.3601%" y="549" width="0.2813%" height="15" fill="rgb(205,151,52)" fg:x="31" fg:w="2"/><text x="4.6101%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.14%)</title><rect x="4.5007%" y="533" width="0.1406%" height="15" fill="rgb(253,215,39)" fg:x="32" fg:w="1"/><text x="4.7507%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.14%)</title><rect x="4.5007%" y="517" width="0.1406%" height="15" fill="rgb(221,220,41)" fg:x="32" fg:w="1"/><text x="4.7507%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="4.5007%" y="501" width="0.1406%" height="15" fill="rgb(218,133,21)" fg:x="32" fg:w="1"/><text x="4.7507%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="4.5007%" y="485" width="0.1406%" height="15" fill="rgb(221,193,43)" fg:x="32" fg:w="1"/><text x="4.7507%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="4.5007%" y="469" width="0.1406%" height="15" fill="rgb(240,128,52)" fg:x="32" fg:w="1"/><text x="4.7507%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="4.5007%" y="453" width="0.1406%" height="15" fill="rgb(253,114,12)" fg:x="32" fg:w="1"/><text x="4.7507%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.14%)</title><rect x="4.5007%" y="437" width="0.1406%" height="15" fill="rgb(215,223,47)" fg:x="32" fg:w="1"/><text x="4.7507%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.14%)</title><rect x="4.5007%" y="421" width="0.1406%" height="15" fill="rgb(248,225,23)" fg:x="32" fg:w="1"/><text x="4.7507%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.14%)</title><rect x="4.5007%" y="405" width="0.1406%" height="15" fill="rgb(250,108,0)" fg:x="32" fg:w="1"/><text x="4.7507%" y="415.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}} (1 samples, 0.14%)</title><rect x="4.5007%" y="389" width="0.1406%" height="15" fill="rgb(228,208,7)" fg:x="32" fg:w="1"/><text x="4.7507%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.14%)</title><rect x="4.5007%" y="373" width="0.1406%" height="15" fill="rgb(244,45,10)" fg:x="32" fg:w="1"/><text x="4.7507%" y="383.50"></text></g><g><title>y2021::d08::main::signal_value::{{closure}}::{{closure}} (1 samples, 0.14%)</title><rect x="4.5007%" y="357" width="0.1406%" height="15" fill="rgb(207,125,25)" fg:x="32" fg:w="1"/><text x="4.7507%" y="367.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="4.5007%" y="341" width="0.1406%" height="15" fill="rgb(210,195,18)" fg:x="32" fg:w="1"/><text x="4.7507%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.14%)</title><rect x="4.5007%" y="325" width="0.1406%" height="15" fill="rgb(249,80,12)" fg:x="32" fg:w="1"/><text x="4.7507%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.14%)</title><rect x="4.5007%" y="309" width="0.1406%" height="15" fill="rgb(221,65,9)" fg:x="32" fg:w="1"/><text x="4.7507%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1 samples, 0.14%)</title><rect x="4.5007%" y="293" width="0.1406%" height="15" fill="rgb(235,49,36)" fg:x="32" fg:w="1"/><text x="4.7507%" y="303.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (1 samples, 0.14%)</title><rect x="4.5007%" y="277" width="0.1406%" height="15" fill="rgb(225,32,20)" fg:x="32" fg:w="1"/><text x="4.7507%" y="287.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.14%)</title><rect x="4.5007%" y="261" width="0.1406%" height="15" fill="rgb(215,141,46)" fg:x="32" fg:w="1"/><text x="4.7507%" y="271.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.14%)</title><rect x="4.5007%" y="245" width="0.1406%" height="15" fill="rgb(250,160,47)" fg:x="32" fg:w="1"/><text x="4.7507%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.14%)</title><rect x="4.5007%" y="229" width="0.1406%" height="15" fill="rgb(216,222,40)" fg:x="32" fg:w="1"/><text x="4.7507%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.14%)</title><rect x="4.5007%" y="213" width="0.1406%" height="15" fill="rgb(234,217,39)" fg:x="32" fg:w="1"/><text x="4.7507%" y="223.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="4.5007%" y="197" width="0.1406%" height="15" fill="rgb(207,178,40)" fg:x="32" fg:w="1"/><text x="4.7507%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="4.5007%" y="181" width="0.1406%" height="15" fill="rgb(221,136,13)" fg:x="32" fg:w="1"/><text x="4.7507%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="4.5007%" y="165" width="0.1406%" height="15" fill="rgb(249,199,10)" fg:x="32" fg:w="1"/><text x="4.7507%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="4.5007%" y="149" width="0.1406%" height="15" fill="rgb(249,222,13)" fg:x="32" fg:w="1"/><text x="4.7507%" y="159.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.14%)</title><rect x="4.6414%" y="485" width="0.1406%" height="15" fill="rgb(244,185,38)" fg:x="33" fg:w="1"/><text x="4.8914%" y="495.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.14%)</title><rect x="4.6414%" y="469" width="0.1406%" height="15" fill="rgb(236,202,9)" fg:x="33" fg:w="1"/><text x="4.8914%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.14%)</title><rect x="4.6414%" y="453" width="0.1406%" height="15" fill="rgb(250,229,37)" fg:x="33" fg:w="1"/><text x="4.8914%" y="463.50"></text></g><g><title>y2021::d09::main::run (2 samples, 0.28%)</title><rect x="4.6414%" y="853" width="0.2813%" height="15" fill="rgb(206,174,23)" fg:x="33" fg:w="2"/><text x="4.8914%" y="863.50"></text></g><g><title>y2021::d09::main::p02 (2 samples, 0.28%)</title><rect x="4.6414%" y="837" width="0.2813%" height="15" fill="rgb(211,33,43)" fg:x="33" fg:w="2"/><text x="4.8914%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.28%)</title><rect x="4.6414%" y="821" width="0.2813%" height="15" fill="rgb(245,58,50)" fg:x="33" fg:w="2"/><text x="4.8914%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.28%)</title><rect x="4.6414%" y="805" width="0.2813%" height="15" fill="rgb(244,68,36)" fg:x="33" fg:w="2"/><text x="4.8914%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.28%)</title><rect x="4.6414%" y="789" width="0.2813%" height="15" fill="rgb(232,229,15)" fg:x="33" fg:w="2"/><text x="4.8914%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.28%)</title><rect x="4.6414%" y="773" width="0.2813%" height="15" fill="rgb(254,30,23)" fg:x="33" fg:w="2"/><text x="4.8914%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.28%)</title><rect x="4.6414%" y="757" width="0.2813%" height="15" fill="rgb(235,160,14)" fg:x="33" fg:w="2"/><text x="4.8914%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.28%)</title><rect x="4.6414%" y="741" width="0.2813%" height="15" fill="rgb(212,155,44)" fg:x="33" fg:w="2"/><text x="4.8914%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.28%)</title><rect x="4.6414%" y="725" width="0.2813%" height="15" fill="rgb(226,2,50)" fg:x="33" fg:w="2"/><text x="4.8914%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.28%)</title><rect x="4.6414%" y="709" width="0.2813%" height="15" fill="rgb(234,177,6)" fg:x="33" fg:w="2"/><text x="4.8914%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.28%)</title><rect x="4.6414%" y="693" width="0.2813%" height="15" fill="rgb(217,24,9)" fg:x="33" fg:w="2"/><text x="4.8914%" y="703.50"></text></g><g><title>y2021::d09::main::p02::{{closure}} (2 samples, 0.28%)</title><rect x="4.6414%" y="677" width="0.2813%" height="15" fill="rgb(220,13,46)" fg:x="33" fg:w="2"/><text x="4.8914%" y="687.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.28%)</title><rect x="4.6414%" y="661" width="0.2813%" height="15" fill="rgb(239,221,27)" fg:x="33" fg:w="2"/><text x="4.8914%" y="671.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.28%)</title><rect x="4.6414%" y="645" width="0.2813%" height="15" fill="rgb(222,198,25)" fg:x="33" fg:w="2"/><text x="4.8914%" y="655.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.28%)</title><rect x="4.6414%" y="629" width="0.2813%" height="15" fill="rgb(211,99,13)" fg:x="33" fg:w="2"/><text x="4.8914%" y="639.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.28%)</title><rect x="4.6414%" y="613" width="0.2813%" height="15" fill="rgb(232,111,31)" fg:x="33" fg:w="2"/><text x="4.8914%" y="623.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.28%)</title><rect x="4.6414%" y="597" width="0.2813%" height="15" fill="rgb(245,82,37)" fg:x="33" fg:w="2"/><text x="4.8914%" y="607.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.28%)</title><rect x="4.6414%" y="581" width="0.2813%" height="15" fill="rgb(227,149,46)" fg:x="33" fg:w="2"/><text x="4.8914%" y="591.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.28%)</title><rect x="4.6414%" y="565" width="0.2813%" height="15" fill="rgb(218,36,50)" fg:x="33" fg:w="2"/><text x="4.8914%" y="575.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.28%)</title><rect x="4.6414%" y="549" width="0.2813%" height="15" fill="rgb(226,80,48)" fg:x="33" fg:w="2"/><text x="4.8914%" y="559.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.28%)</title><rect x="4.6414%" y="533" width="0.2813%" height="15" fill="rgb(238,224,15)" fg:x="33" fg:w="2"/><text x="4.8914%" y="543.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.28%)</title><rect x="4.6414%" y="517" width="0.2813%" height="15" fill="rgb(241,136,10)" fg:x="33" fg:w="2"/><text x="4.8914%" y="527.50"></text></g><g><title>y2021::d09::main::get_basin_size (2 samples, 0.28%)</title><rect x="4.6414%" y="501" width="0.2813%" height="15" fill="rgb(208,32,45)" fg:x="33" fg:w="2"/><text x="4.8914%" y="511.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.14%)</title><rect x="4.7820%" y="485" width="0.1406%" height="15" fill="rgb(207,135,9)" fg:x="34" fg:w="1"/><text x="5.0320%" y="495.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.14%)</title><rect x="4.7820%" y="469" width="0.1406%" height="15" fill="rgb(206,86,44)" fg:x="34" fg:w="1"/><text x="5.0320%" y="479.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.14%)</title><rect x="4.7820%" y="453" width="0.1406%" height="15" fill="rgb(245,177,15)" fg:x="34" fg:w="1"/><text x="5.0320%" y="463.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.14%)</title><rect x="4.7820%" y="437" width="0.1406%" height="15" fill="rgb(206,64,50)" fg:x="34" fg:w="1"/><text x="5.0320%" y="447.50"></text></g><g><title>y2021::d09::main::get_basin_size (1 samples, 0.14%)</title><rect x="4.7820%" y="421" width="0.1406%" height="15" fill="rgb(234,36,40)" fg:x="34" fg:w="1"/><text x="5.0320%" y="431.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.14%)</title><rect x="4.7820%" y="405" width="0.1406%" height="15" fill="rgb(213,64,8)" fg:x="34" fg:w="1"/><text x="5.0320%" y="415.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.14%)</title><rect x="4.7820%" y="389" width="0.1406%" height="15" fill="rgb(210,75,36)" fg:x="34" fg:w="1"/><text x="5.0320%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.14%)</title><rect x="4.7820%" y="373" width="0.1406%" height="15" fill="rgb(229,88,21)" fg:x="34" fg:w="1"/><text x="5.0320%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.14%)</title><rect x="4.7820%" y="357" width="0.1406%" height="15" fill="rgb(252,204,47)" fg:x="34" fg:w="1"/><text x="5.0320%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="4.7820%" y="341" width="0.1406%" height="15" fill="rgb(208,77,27)" fg:x="34" fg:w="1"/><text x="5.0320%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="4.7820%" y="325" width="0.1406%" height="15" fill="rgb(221,76,26)" fg:x="34" fg:w="1"/><text x="5.0320%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="4.7820%" y="309" width="0.1406%" height="15" fill="rgb(225,139,18)" fg:x="34" fg:w="1"/><text x="5.0320%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="4.7820%" y="293" width="0.1406%" height="15" fill="rgb(230,137,11)" fg:x="34" fg:w="1"/><text x="5.0320%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.14%)</title><rect x="4.7820%" y="277" width="0.1406%" height="15" fill="rgb(212,28,1)" fg:x="34" fg:w="1"/><text x="5.0320%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="4.7820%" y="261" width="0.1406%" height="15" fill="rgb(248,164,17)" fg:x="34" fg:w="1"/><text x="5.0320%" y="271.50"></text></g><g><title>y2021::d11::main::p01 (1 samples, 0.14%)</title><rect x="4.9226%" y="837" width="0.1406%" height="15" fill="rgb(222,171,42)" fg:x="35" fg:w="1"/><text x="5.1726%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.14%)</title><rect x="4.9226%" y="821" width="0.1406%" height="15" fill="rgb(243,84,45)" fg:x="35" fg:w="1"/><text x="5.1726%" y="831.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.14%)</title><rect x="4.9226%" y="805" width="0.1406%" height="15" fill="rgb(252,49,23)" fg:x="35" fg:w="1"/><text x="5.1726%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="4.9226%" y="789" width="0.1406%" height="15" fill="rgb(215,19,7)" fg:x="35" fg:w="1"/><text x="5.1726%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.14%)</title><rect x="4.9226%" y="773" width="0.1406%" height="15" fill="rgb(238,81,41)" fg:x="35" fg:w="1"/><text x="5.1726%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.14%)</title><rect x="4.9226%" y="757" width="0.1406%" height="15" fill="rgb(210,199,37)" fg:x="35" fg:w="1"/><text x="5.1726%" y="767.50"></text></g><g><title>y2021::d11::main::p01::{{closure}} (1 samples, 0.14%)</title><rect x="4.9226%" y="741" width="0.1406%" height="15" fill="rgb(244,192,49)" fg:x="35" fg:w="1"/><text x="5.1726%" y="751.50"></text></g><g><title>y2021::d11::main::cycle_step (1 samples, 0.14%)</title><rect x="4.9226%" y="725" width="0.1406%" height="15" fill="rgb(226,211,11)" fg:x="35" fg:w="1"/><text x="5.1726%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.14%)</title><rect x="4.9226%" y="709" width="0.1406%" height="15" fill="rgb(236,162,54)" fg:x="35" fg:w="1"/><text x="5.1726%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="4.9226%" y="693" width="0.1406%" height="15" fill="rgb(220,229,9)" fg:x="35" fg:w="1"/><text x="5.1726%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="4.9226%" y="677" width="0.1406%" height="15" fill="rgb(250,87,22)" fg:x="35" fg:w="1"/><text x="5.1726%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="4.9226%" y="661" width="0.1406%" height="15" fill="rgb(239,43,17)" fg:x="35" fg:w="1"/><text x="5.1726%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="4.9226%" y="645" width="0.1406%" height="15" fill="rgb(231,177,25)" fg:x="35" fg:w="1"/><text x="5.1726%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="4.9226%" y="629" width="0.1406%" height="15" fill="rgb(219,179,1)" fg:x="35" fg:w="1"/><text x="5.1726%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.14%)</title><rect x="4.9226%" y="613" width="0.1406%" height="15" fill="rgb(238,219,53)" fg:x="35" fg:w="1"/><text x="5.1726%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.14%)</title><rect x="4.9226%" y="597" width="0.1406%" height="15" fill="rgb(232,167,36)" fg:x="35" fg:w="1"/><text x="5.1726%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.14%)</title><rect x="4.9226%" y="581" width="0.1406%" height="15" fill="rgb(244,19,51)" fg:x="35" fg:w="1"/><text x="5.1726%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.14%)</title><rect x="4.9226%" y="565" width="0.1406%" height="15" fill="rgb(224,6,22)" fg:x="35" fg:w="1"/><text x="5.1726%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (1 samples, 0.14%)</title><rect x="4.9226%" y="549" width="0.1406%" height="15" fill="rgb(224,145,5)" fg:x="35" fg:w="1"/><text x="5.1726%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.14%)</title><rect x="4.9226%" y="533" width="0.1406%" height="15" fill="rgb(234,130,49)" fg:x="35" fg:w="1"/><text x="5.1726%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.14%)</title><rect x="4.9226%" y="517" width="0.1406%" height="15" fill="rgb(254,6,2)" fg:x="35" fg:w="1"/><text x="5.1726%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.14%)</title><rect x="4.9226%" y="501" width="0.1406%" height="15" fill="rgb(208,96,46)" fg:x="35" fg:w="1"/><text x="5.1726%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.14%)</title><rect x="4.9226%" y="485" width="0.1406%" height="15" fill="rgb(239,3,39)" fg:x="35" fg:w="1"/><text x="5.1726%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.14%)</title><rect x="4.9226%" y="469" width="0.1406%" height="15" fill="rgb(233,210,1)" fg:x="35" fg:w="1"/><text x="5.1726%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (1 samples, 0.14%)</title><rect x="4.9226%" y="453" width="0.1406%" height="15" fill="rgb(244,137,37)" fg:x="35" fg:w="1"/><text x="5.1726%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.14%)</title><rect x="4.9226%" y="437" width="0.1406%" height="15" fill="rgb(240,136,2)" fg:x="35" fg:w="1"/><text x="5.1726%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.14%)</title><rect x="4.9226%" y="421" width="0.1406%" height="15" fill="rgb(239,18,37)" fg:x="35" fg:w="1"/><text x="5.1726%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.14%)</title><rect x="4.9226%" y="405" width="0.1406%" height="15" fill="rgb(218,185,22)" fg:x="35" fg:w="1"/><text x="5.1726%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.14%)</title><rect x="4.9226%" y="389" width="0.1406%" height="15" fill="rgb(225,218,4)" fg:x="35" fg:w="1"/><text x="5.1726%" y="399.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (1 samples, 0.14%)</title><rect x="4.9226%" y="373" width="0.1406%" height="15" fill="rgb(230,182,32)" fg:x="35" fg:w="1"/><text x="5.1726%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.14%)</title><rect x="4.9226%" y="357" width="0.1406%" height="15" fill="rgb(242,56,43)" fg:x="35" fg:w="1"/><text x="5.1726%" y="367.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.14%)</title><rect x="4.9226%" y="341" width="0.1406%" height="15" fill="rgb(233,99,24)" fg:x="35" fg:w="1"/><text x="5.1726%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.14%)</title><rect x="4.9226%" y="325" width="0.1406%" height="15" fill="rgb(234,209,42)" fg:x="35" fg:w="1"/><text x="5.1726%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="4.9226%" y="309" width="0.1406%" height="15" fill="rgb(227,7,12)" fg:x="35" fg:w="1"/><text x="5.1726%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.28%)</title><rect x="5.0633%" y="629" width="0.2813%" height="15" fill="rgb(245,203,43)" fg:x="36" fg:w="2"/><text x="5.3133%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (2 samples, 0.28%)</title><rect x="5.0633%" y="613" width="0.2813%" height="15" fill="rgb(238,205,33)" fg:x="36" fg:w="2"/><text x="5.3133%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.28%)</title><rect x="5.0633%" y="597" width="0.2813%" height="15" fill="rgb(231,56,7)" fg:x="36" fg:w="2"/><text x="5.3133%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.28%)</title><rect x="5.0633%" y="581" width="0.2813%" height="15" fill="rgb(244,186,29)" fg:x="36" fg:w="2"/><text x="5.3133%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.28%)</title><rect x="5.0633%" y="565" width="0.2813%" height="15" fill="rgb(234,111,31)" fg:x="36" fg:w="2"/><text x="5.3133%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.28%)</title><rect x="5.0633%" y="549" width="0.2813%" height="15" fill="rgb(241,149,10)" fg:x="36" fg:w="2"/><text x="5.3133%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.28%)</title><rect x="5.0633%" y="533" width="0.2813%" height="15" fill="rgb(249,206,44)" fg:x="36" fg:w="2"/><text x="5.3133%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (2 samples, 0.28%)</title><rect x="5.0633%" y="517" width="0.2813%" height="15" fill="rgb(251,153,30)" fg:x="36" fg:w="2"/><text x="5.3133%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.28%)</title><rect x="5.0633%" y="501" width="0.2813%" height="15" fill="rgb(239,152,38)" fg:x="36" fg:w="2"/><text x="5.3133%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.28%)</title><rect x="5.0633%" y="485" width="0.2813%" height="15" fill="rgb(249,139,47)" fg:x="36" fg:w="2"/><text x="5.3133%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.28%)</title><rect x="5.0633%" y="469" width="0.2813%" height="15" fill="rgb(244,64,35)" fg:x="36" fg:w="2"/><text x="5.3133%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.28%)</title><rect x="5.0633%" y="453" width="0.2813%" height="15" fill="rgb(216,46,15)" fg:x="36" fg:w="2"/><text x="5.3133%" y="463.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (2 samples, 0.28%)</title><rect x="5.0633%" y="437" width="0.2813%" height="15" fill="rgb(250,74,19)" fg:x="36" fg:w="2"/><text x="5.3133%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.28%)</title><rect x="5.0633%" y="421" width="0.2813%" height="15" fill="rgb(249,42,33)" fg:x="36" fg:w="2"/><text x="5.3133%" y="431.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.28%)</title><rect x="5.0633%" y="405" width="0.2813%" height="15" fill="rgb(242,149,17)" fg:x="36" fg:w="2"/><text x="5.3133%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2 samples, 0.28%)</title><rect x="5.0633%" y="389" width="0.2813%" height="15" fill="rgb(244,29,21)" fg:x="36" fg:w="2"/><text x="5.3133%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 1.13%)</title><rect x="5.0633%" y="709" width="1.1252%" height="15" fill="rgb(220,130,37)" fg:x="36" fg:w="8"/><text x="5.3133%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 1.13%)</title><rect x="5.0633%" y="693" width="1.1252%" height="15" fill="rgb(211,67,2)" fg:x="36" fg:w="8"/><text x="5.3133%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (8 samples, 1.13%)</title><rect x="5.0633%" y="677" width="1.1252%" height="15" fill="rgb(235,68,52)" fg:x="36" fg:w="8"/><text x="5.3133%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 1.13%)</title><rect x="5.0633%" y="661" width="1.1252%" height="15" fill="rgb(246,142,3)" fg:x="36" fg:w="8"/><text x="5.3133%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 1.13%)</title><rect x="5.0633%" y="645" width="1.1252%" height="15" fill="rgb(241,25,7)" fg:x="36" fg:w="8"/><text x="5.3133%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.84%)</title><rect x="5.3446%" y="629" width="0.8439%" height="15" fill="rgb(242,119,39)" fg:x="38" fg:w="6"/><text x="5.5946%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.84%)</title><rect x="5.3446%" y="613" width="0.8439%" height="15" fill="rgb(241,98,45)" fg:x="38" fg:w="6"/><text x="5.5946%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (6 samples, 0.84%)</title><rect x="5.3446%" y="597" width="0.8439%" height="15" fill="rgb(254,28,30)" fg:x="38" fg:w="6"/><text x="5.5946%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.84%)</title><rect x="5.3446%" y="581" width="0.8439%" height="15" fill="rgb(241,142,54)" fg:x="38" fg:w="6"/><text x="5.5946%" y="591.50"></text></g><g><title>y2021::d11::main::cycle_step::{{closure}} (6 samples, 0.84%)</title><rect x="5.3446%" y="565" width="0.8439%" height="15" fill="rgb(222,85,15)" fg:x="38" fg:w="6"/><text x="5.5946%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (6 samples, 0.84%)</title><rect x="5.3446%" y="549" width="0.8439%" height="15" fill="rgb(210,85,47)" fg:x="38" fg:w="6"/><text x="5.5946%" y="559.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (6 samples, 0.84%)</title><rect x="5.3446%" y="533" width="0.8439%" height="15" fill="rgb(224,206,25)" fg:x="38" fg:w="6"/><text x="5.5946%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (6 samples, 0.84%)</title><rect x="5.3446%" y="517" width="0.8439%" height="15" fill="rgb(243,201,19)" fg:x="38" fg:w="6"/><text x="5.5946%" y="527.50"></text></g><g><title>y2021::d11::main::run (10 samples, 1.41%)</title><rect x="4.9226%" y="853" width="1.4065%" height="15" fill="rgb(236,59,4)" fg:x="35" fg:w="10"/><text x="5.1726%" y="863.50"></text></g><g><title>y2021::d11::main::p02 (9 samples, 1.27%)</title><rect x="5.0633%" y="837" width="1.2658%" height="15" fill="rgb(254,179,45)" fg:x="36" fg:w="9"/><text x="5.3133%" y="847.50"></text></g><g><title>y2021::d11::main::cycle_step (9 samples, 1.27%)</title><rect x="5.0633%" y="821" width="1.2658%" height="15" fill="rgb(226,14,10)" fg:x="36" fg:w="9"/><text x="5.3133%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 1.27%)</title><rect x="5.0633%" y="805" width="1.2658%" height="15" fill="rgb(244,27,41)" fg:x="36" fg:w="9"/><text x="5.3133%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 1.27%)</title><rect x="5.0633%" y="789" width="1.2658%" height="15" fill="rgb(235,35,32)" fg:x="36" fg:w="9"/><text x="5.3133%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 1.27%)</title><rect x="5.0633%" y="773" width="1.2658%" height="15" fill="rgb(218,68,31)" fg:x="36" fg:w="9"/><text x="5.3133%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 1.27%)</title><rect x="5.0633%" y="757" width="1.2658%" height="15" fill="rgb(207,120,37)" fg:x="36" fg:w="9"/><text x="5.3133%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 1.27%)</title><rect x="5.0633%" y="741" width="1.2658%" height="15" fill="rgb(227,98,0)" fg:x="36" fg:w="9"/><text x="5.3133%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (9 samples, 1.27%)</title><rect x="5.0633%" y="725" width="1.2658%" height="15" fill="rgb(207,7,3)" fg:x="36" fg:w="9"/><text x="5.3133%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="6.1885%" y="709" width="0.1406%" height="15" fill="rgb(206,98,19)" fg:x="44" fg:w="1"/><text x="6.4385%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.14%)</title><rect x="6.1885%" y="693" width="0.1406%" height="15" fill="rgb(217,5,26)" fg:x="44" fg:w="1"/><text x="6.4385%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.14%)</title><rect x="6.1885%" y="677" width="0.1406%" height="15" fill="rgb(235,190,38)" fg:x="44" fg:w="1"/><text x="6.4385%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.14%)</title><rect x="6.1885%" y="661" width="0.1406%" height="15" fill="rgb(247,86,24)" fg:x="44" fg:w="1"/><text x="6.4385%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.14%)</title><rect x="6.1885%" y="645" width="0.1406%" height="15" fill="rgb(205,101,16)" fg:x="44" fg:w="1"/><text x="6.4385%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.14%)</title><rect x="6.1885%" y="629" width="0.1406%" height="15" fill="rgb(246,168,33)" fg:x="44" fg:w="1"/><text x="6.4385%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.14%)</title><rect x="6.1885%" y="613" width="0.1406%" height="15" fill="rgb(231,114,1)" fg:x="44" fg:w="1"/><text x="6.4385%" y="623.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.14%)</title><rect x="6.1885%" y="597" width="0.1406%" height="15" fill="rgb(207,184,53)" fg:x="44" fg:w="1"/><text x="6.4385%" y="607.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.14%)</title><rect x="6.1885%" y="581" width="0.1406%" height="15" fill="rgb(224,95,51)" fg:x="44" fg:w="1"/><text x="6.4385%" y="591.50"></text></g><g><title>_int_realloc (1 samples, 0.14%)</title><rect x="6.1885%" y="565" width="0.1406%" height="15" fill="rgb(212,188,45)" fg:x="44" fg:w="1"/><text x="6.4385%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="6.1885%" y="549" width="0.1406%" height="15" fill="rgb(223,154,38)" fg:x="44" fg:w="1"/><text x="6.4385%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="6.3291%" y="661" width="0.1406%" height="15" fill="rgb(251,22,52)" fg:x="45" fg:w="1"/><text x="6.5791%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.14%)</title><rect x="6.3291%" y="645" width="0.1406%" height="15" fill="rgb(229,209,22)" fg:x="45" fg:w="1"/><text x="6.5791%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.14%)</title><rect x="6.3291%" y="629" width="0.1406%" height="15" fill="rgb(234,138,34)" fg:x="45" fg:w="1"/><text x="6.5791%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.14%)</title><rect x="6.3291%" y="613" width="0.1406%" height="15" fill="rgb(212,95,11)" fg:x="45" fg:w="1"/><text x="6.5791%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.14%)</title><rect x="6.3291%" y="597" width="0.1406%" height="15" fill="rgb(240,179,47)" fg:x="45" fg:w="1"/><text x="6.5791%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.14%)</title><rect x="6.3291%" y="581" width="0.1406%" height="15" fill="rgb(240,163,11)" fg:x="45" fg:w="1"/><text x="6.5791%" y="591.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.14%)</title><rect x="6.3291%" y="565" width="0.1406%" height="15" fill="rgb(236,37,12)" fg:x="45" fg:w="1"/><text x="6.5791%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.14%)</title><rect x="6.3291%" y="549" width="0.1406%" height="15" fill="rgb(232,164,16)" fg:x="45" fg:w="1"/><text x="6.5791%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.14%)</title><rect x="6.3291%" y="533" width="0.1406%" height="15" fill="rgb(244,205,15)" fg:x="45" fg:w="1"/><text x="6.5791%" y="543.50"></text></g><g><title>y2021::d12::main::traverse::{{closure}} (1 samples, 0.14%)</title><rect x="6.3291%" y="517" width="0.1406%" height="15" fill="rgb(223,117,47)" fg:x="45" fg:w="1"/><text x="6.5791%" y="527.50"></text></g><g><title>y2021::d12::node_path::NodePath::count_node (1 samples, 0.14%)</title><rect x="6.3291%" y="501" width="0.1406%" height="15" fill="rgb(244,107,35)" fg:x="45" fg:w="1"/><text x="6.5791%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.14%)</title><rect x="6.3291%" y="485" width="0.1406%" height="15" fill="rgb(205,140,8)" fg:x="45" fg:w="1"/><text x="6.5791%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.14%)</title><rect x="6.3291%" y="469" width="0.1406%" height="15" fill="rgb(228,84,46)" fg:x="45" fg:w="1"/><text x="6.5791%" y="479.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="6.3291%" y="453" width="0.1406%" height="15" fill="rgb(254,188,9)" fg:x="45" fg:w="1"/><text x="6.5791%" y="463.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.14%)</title><rect x="6.3291%" y="437" width="0.1406%" height="15" fill="rgb(206,112,54)" fg:x="45" fg:w="1"/><text x="6.5791%" y="447.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.14%)</title><rect x="6.3291%" y="421" width="0.1406%" height="15" fill="rgb(216,84,49)" fg:x="45" fg:w="1"/><text x="6.5791%" y="431.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.14%)</title><rect x="6.3291%" y="405" width="0.1406%" height="15" fill="rgb(214,194,35)" fg:x="45" fg:w="1"/><text x="6.5791%" y="415.50"></text></g><g><title>y2021::d12::main::traverse (1 samples, 0.14%)</title><rect x="6.4698%" y="645" width="0.1406%" height="15" fill="rgb(249,28,3)" fg:x="46" fg:w="1"/><text x="6.7198%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="6.4698%" y="629" width="0.1406%" height="15" fill="rgb(222,56,52)" fg:x="46" fg:w="1"/><text x="6.7198%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.14%)</title><rect x="6.4698%" y="613" width="0.1406%" height="15" fill="rgb(245,217,50)" fg:x="46" fg:w="1"/><text x="6.7198%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.14%)</title><rect x="6.4698%" y="597" width="0.1406%" height="15" fill="rgb(213,201,24)" fg:x="46" fg:w="1"/><text x="6.7198%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.14%)</title><rect x="6.4698%" y="581" width="0.1406%" height="15" fill="rgb(248,116,28)" fg:x="46" fg:w="1"/><text x="6.7198%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.14%)</title><rect x="6.4698%" y="565" width="0.1406%" height="15" fill="rgb(219,72,43)" fg:x="46" fg:w="1"/><text x="6.7198%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.14%)</title><rect x="6.4698%" y="549" width="0.1406%" height="15" fill="rgb(209,138,14)" fg:x="46" fg:w="1"/><text x="6.7198%" y="559.50"></text></g><g><title>y2021::d12::main::traverse::{{closure}} (1 samples, 0.14%)</title><rect x="6.4698%" y="533" width="0.1406%" height="15" fill="rgb(222,18,33)" fg:x="46" fg:w="1"/><text x="6.7198%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.14%)</title><rect x="6.4698%" y="517" width="0.1406%" height="15" fill="rgb(213,199,7)" fg:x="46" fg:w="1"/><text x="6.7198%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.14%)</title><rect x="6.4698%" y="501" width="0.1406%" height="15" fill="rgb(250,110,10)" fg:x="46" fg:w="1"/><text x="6.7198%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.14%)</title><rect x="6.4698%" y="485" width="0.1406%" height="15" fill="rgb(248,123,6)" fg:x="46" fg:w="1"/><text x="6.7198%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="6.4698%" y="469" width="0.1406%" height="15" fill="rgb(206,91,31)" fg:x="46" fg:w="1"/><text x="6.7198%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.14%)</title><rect x="6.4698%" y="453" width="0.1406%" height="15" fill="rgb(211,154,13)" fg:x="46" fg:w="1"/><text x="6.7198%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.14%)</title><rect x="6.4698%" y="437" width="0.1406%" height="15" fill="rgb(225,148,7)" fg:x="46" fg:w="1"/><text x="6.7198%" y="447.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.14%)</title><rect x="6.4698%" y="421" width="0.1406%" height="15" fill="rgb(220,160,43)" fg:x="46" fg:w="1"/><text x="6.7198%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="6.4698%" y="405" width="0.1406%" height="15" fill="rgb(213,52,39)" fg:x="46" fg:w="1"/><text x="6.7198%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="6.4698%" y="389" width="0.1406%" height="15" fill="rgb(243,137,7)" fg:x="46" fg:w="1"/><text x="6.7198%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="6.4698%" y="373" width="0.1406%" height="15" fill="rgb(230,79,13)" fg:x="46" fg:w="1"/><text x="6.7198%" y="383.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.14%)</title><rect x="6.4698%" y="357" width="0.1406%" height="15" fill="rgb(247,105,23)" fg:x="46" fg:w="1"/><text x="6.7198%" y="367.50"></text></g><g><title>y2021::d12::main::traverse (3 samples, 0.42%)</title><rect x="6.3291%" y="693" width="0.4219%" height="15" fill="rgb(223,179,41)" fg:x="45" fg:w="3"/><text x="6.5791%" y="703.50"></text></g><g><title>y2021::d12::main::traverse (3 samples, 0.42%)</title><rect x="6.3291%" y="677" width="0.4219%" height="15" fill="rgb(218,9,34)" fg:x="45" fg:w="3"/><text x="6.5791%" y="687.50"></text></g><g><title>y2021::d12::main::traverse (2 samples, 0.28%)</title><rect x="6.4698%" y="661" width="0.2813%" height="15" fill="rgb(222,106,8)" fg:x="46" fg:w="2"/><text x="6.7198%" y="671.50"></text></g><g><title>y2021::d12::node_path::NodePath::from (1 samples, 0.14%)</title><rect x="6.6104%" y="645" width="0.1406%" height="15" fill="rgb(211,220,0)" fg:x="47" fg:w="1"/><text x="6.8604%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="6.6104%" y="629" width="0.1406%" height="15" fill="rgb(229,52,16)" fg:x="47" fg:w="1"/><text x="6.8604%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="6.6104%" y="613" width="0.1406%" height="15" fill="rgb(212,155,18)" fg:x="47" fg:w="1"/><text x="6.8604%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="6.6104%" y="597" width="0.1406%" height="15" fill="rgb(242,21,14)" fg:x="47" fg:w="1"/><text x="6.8604%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="6.6104%" y="581" width="0.1406%" height="15" fill="rgb(222,19,48)" fg:x="47" fg:w="1"/><text x="6.8604%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="6.6104%" y="565" width="0.1406%" height="15" fill="rgb(232,45,27)" fg:x="47" fg:w="1"/><text x="6.8604%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="6.6104%" y="549" width="0.1406%" height="15" fill="rgb(249,103,42)" fg:x="47" fg:w="1"/><text x="6.8604%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="6.6104%" y="533" width="0.1406%" height="15" fill="rgb(246,81,33)" fg:x="47" fg:w="1"/><text x="6.8604%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="6.6104%" y="517" width="0.1406%" height="15" fill="rgb(252,33,42)" fg:x="47" fg:w="1"/><text x="6.8604%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="6.6104%" y="501" width="0.1406%" height="15" fill="rgb(209,212,41)" fg:x="47" fg:w="1"/><text x="6.8604%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.14%)</title><rect x="6.6104%" y="485" width="0.1406%" height="15" fill="rgb(207,154,6)" fg:x="47" fg:w="1"/><text x="6.8604%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="6.6104%" y="469" width="0.1406%" height="15" fill="rgb(223,64,47)" fg:x="47" fg:w="1"/><text x="6.8604%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="6.6104%" y="453" width="0.1406%" height="15" fill="rgb(211,161,38)" fg:x="47" fg:w="1"/><text x="6.8604%" y="463.50"></text></g><g><title>y2021::d12::main::p01 (4 samples, 0.56%)</title><rect x="6.3291%" y="837" width="0.5626%" height="15" fill="rgb(219,138,40)" fg:x="45" fg:w="4"/><text x="6.5791%" y="847.50"></text></g><g><title>y2021::d12::main::traverse (4 samples, 0.56%)</title><rect x="6.3291%" y="821" width="0.5626%" height="15" fill="rgb(241,228,46)" fg:x="45" fg:w="4"/><text x="6.5791%" y="831.50"></text></g><g><title>y2021::d12::main::traverse (4 samples, 0.56%)</title><rect x="6.3291%" y="805" width="0.5626%" height="15" fill="rgb(223,209,38)" fg:x="45" fg:w="4"/><text x="6.5791%" y="815.50"></text></g><g><title>y2021::d12::main::traverse (4 samples, 0.56%)</title><rect x="6.3291%" y="789" width="0.5626%" height="15" fill="rgb(236,164,45)" fg:x="45" fg:w="4"/><text x="6.5791%" y="799.50"></text></g><g><title>y2021::d12::main::traverse (4 samples, 0.56%)</title><rect x="6.3291%" y="773" width="0.5626%" height="15" fill="rgb(231,15,5)" fg:x="45" fg:w="4"/><text x="6.5791%" y="783.50"></text></g><g><title>y2021::d12::main::traverse (4 samples, 0.56%)</title><rect x="6.3291%" y="757" width="0.5626%" height="15" fill="rgb(252,35,15)" fg:x="45" fg:w="4"/><text x="6.5791%" y="767.50"></text></g><g><title>y2021::d12::main::traverse (4 samples, 0.56%)</title><rect x="6.3291%" y="741" width="0.5626%" height="15" fill="rgb(248,181,18)" fg:x="45" fg:w="4"/><text x="6.5791%" y="751.50"></text></g><g><title>y2021::d12::main::traverse (4 samples, 0.56%)</title><rect x="6.3291%" y="725" width="0.5626%" height="15" fill="rgb(233,39,42)" fg:x="45" fg:w="4"/><text x="6.5791%" y="735.50"></text></g><g><title>y2021::d12::main::traverse (4 samples, 0.56%)</title><rect x="6.3291%" y="709" width="0.5626%" height="15" fill="rgb(238,110,33)" fg:x="45" fg:w="4"/><text x="6.5791%" y="719.50"></text></g><g><title>y2021::d12::node_path::NodePath::from (1 samples, 0.14%)</title><rect x="6.7511%" y="693" width="0.1406%" height="15" fill="rgb(233,195,10)" fg:x="48" fg:w="1"/><text x="7.0011%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="6.7511%" y="677" width="0.1406%" height="15" fill="rgb(254,105,3)" fg:x="48" fg:w="1"/><text x="7.0011%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="6.7511%" y="661" width="0.1406%" height="15" fill="rgb(221,225,9)" fg:x="48" fg:w="1"/><text x="7.0011%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="6.7511%" y="645" width="0.1406%" height="15" fill="rgb(224,227,45)" fg:x="48" fg:w="1"/><text x="7.0011%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="6.7511%" y="629" width="0.1406%" height="15" fill="rgb(229,198,43)" fg:x="48" fg:w="1"/><text x="7.0011%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="6.7511%" y="613" width="0.1406%" height="15" fill="rgb(206,209,35)" fg:x="48" fg:w="1"/><text x="7.0011%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="6.7511%" y="597" width="0.1406%" height="15" fill="rgb(245,195,53)" fg:x="48" fg:w="1"/><text x="7.0011%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="6.7511%" y="581" width="0.1406%" height="15" fill="rgb(240,92,26)" fg:x="48" fg:w="1"/><text x="7.0011%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="6.7511%" y="565" width="0.1406%" height="15" fill="rgb(207,40,23)" fg:x="48" fg:w="1"/><text x="7.0011%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="6.7511%" y="549" width="0.1406%" height="15" fill="rgb(223,111,35)" fg:x="48" fg:w="1"/><text x="7.0011%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="6.7511%" y="533" width="0.1406%" height="15" fill="rgb(229,147,28)" fg:x="48" fg:w="1"/><text x="7.0011%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="6.7511%" y="517" width="0.1406%" height="15" fill="rgb(211,29,28)" fg:x="48" fg:w="1"/><text x="7.0011%" y="527.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="6.7511%" y="501" width="0.1406%" height="15" fill="rgb(228,72,33)" fg:x="48" fg:w="1"/><text x="7.0011%" y="511.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="6.7511%" y="485" width="0.1406%" height="15" fill="rgb(205,214,31)" fg:x="48" fg:w="1"/><text x="7.0011%" y="495.50"></text></g><g><title>exc_page_fault (1 samples, 0.14%)</title><rect x="6.7511%" y="469" width="0.1406%" height="15" fill="rgb(224,111,15)" fg:x="48" fg:w="1"/><text x="7.0011%" y="479.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="6.7511%" y="453" width="0.1406%" height="15" fill="rgb(253,21,26)" fg:x="48" fg:w="1"/><text x="7.0011%" y="463.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="6.7511%" y="437" width="0.1406%" height="15" fill="rgb(245,139,43)" fg:x="48" fg:w="1"/><text x="7.0011%" y="447.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="6.7511%" y="421" width="0.1406%" height="15" fill="rgb(252,170,7)" fg:x="48" fg:w="1"/><text x="7.0011%" y="431.50"></text></g><g><title>do_anonymous_page (1 samples, 0.14%)</title><rect x="6.7511%" y="405" width="0.1406%" height="15" fill="rgb(231,118,14)" fg:x="48" fg:w="1"/><text x="7.0011%" y="415.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.14%)</title><rect x="6.7511%" y="389" width="0.1406%" height="15" fill="rgb(238,83,0)" fg:x="48" fg:w="1"/><text x="7.0011%" y="399.50"></text></g><g><title>lru_cache_add (1 samples, 0.14%)</title><rect x="6.7511%" y="373" width="0.1406%" height="15" fill="rgb(221,39,39)" fg:x="48" fg:w="1"/><text x="7.0011%" y="383.50"></text></g><g><title>__pagevec_lru_add (1 samples, 0.14%)</title><rect x="6.7511%" y="357" width="0.1406%" height="15" fill="rgb(222,119,46)" fg:x="48" fg:w="1"/><text x="7.0011%" y="367.50"></text></g><g><title>__GI___libc_free (3 samples, 0.42%)</title><rect x="7.0323%" y="565" width="0.4219%" height="15" fill="rgb(222,165,49)" fg:x="50" fg:w="3"/><text x="7.2823%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.56%)</title><rect x="7.0323%" y="661" width="0.5626%" height="15" fill="rgb(219,113,52)" fg:x="50" fg:w="4"/><text x="7.2823%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.56%)</title><rect x="7.0323%" y="645" width="0.5626%" height="15" fill="rgb(214,7,15)" fg:x="50" fg:w="4"/><text x="7.2823%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.56%)</title><rect x="7.0323%" y="629" width="0.5626%" height="15" fill="rgb(235,32,4)" fg:x="50" fg:w="4"/><text x="7.2823%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.56%)</title><rect x="7.0323%" y="613" width="0.5626%" height="15" fill="rgb(238,90,54)" fg:x="50" fg:w="4"/><text x="7.2823%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.56%)</title><rect x="7.0323%" y="597" width="0.5626%" height="15" fill="rgb(213,208,19)" fg:x="50" fg:w="4"/><text x="7.2823%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.56%)</title><rect x="7.0323%" y="581" width="0.5626%" height="15" fill="rgb(233,156,4)" fg:x="50" fg:w="4"/><text x="7.2823%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="7.4543%" y="565" width="0.1406%" height="15" fill="rgb(207,194,5)" fg:x="53" fg:w="1"/><text x="7.7043%" y="575.50"></text></g><g><title>__GI___libc_free (35 samples, 4.92%)</title><rect x="7.7356%" y="517" width="4.9226%" height="15" fill="rgb(206,111,30)" fg:x="55" fg:w="35"/><text x="7.9856%" y="527.50">__GI__..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (52 samples, 7.31%)</title><rect x="7.7356%" y="549" width="7.3136%" height="15" fill="rgb(243,70,54)" fg:x="55" fg:w="52"/><text x="7.9856%" y="559.50">&lt;alloc::al..</text></g><g><title>alloc::alloc::dealloc (52 samples, 7.31%)</title><rect x="7.7356%" y="533" width="7.3136%" height="15" fill="rgb(242,28,8)" fg:x="55" fg:w="52"/><text x="7.9856%" y="543.50">alloc::all..</text></g><g><title>_int_free (17 samples, 2.39%)</title><rect x="12.6582%" y="517" width="2.3910%" height="15" fill="rgb(219,106,18)" fg:x="90" fg:w="17"/><text x="12.9082%" y="527.50">_i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 8.44%)</title><rect x="7.5949%" y="645" width="8.4388%" height="15" fill="rgb(244,222,10)" fg:x="54" fg:w="60"/><text x="7.8449%" y="655.50">&lt;alloc::vec:..</text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (60 samples, 8.44%)</title><rect x="7.5949%" y="629" width="8.4388%" height="15" fill="rgb(236,179,52)" fg:x="54" fg:w="60"/><text x="7.8449%" y="639.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (59 samples, 8.30%)</title><rect x="7.7356%" y="613" width="8.2982%" height="15" fill="rgb(213,23,39)" fg:x="55" fg:w="59"/><text x="7.9856%" y="623.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (59 samples, 8.30%)</title><rect x="7.7356%" y="597" width="8.2982%" height="15" fill="rgb(238,48,10)" fg:x="55" fg:w="59"/><text x="7.9856%" y="607.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (59 samples, 8.30%)</title><rect x="7.7356%" y="581" width="8.2982%" height="15" fill="rgb(251,196,23)" fg:x="55" fg:w="59"/><text x="7.9856%" y="591.50">core::ptr::d..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 8.30%)</title><rect x="7.7356%" y="565" width="8.2982%" height="15" fill="rgb(250,152,24)" fg:x="55" fg:w="59"/><text x="7.9856%" y="575.50">&lt;alloc::raw_..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (7 samples, 0.98%)</title><rect x="15.0492%" y="549" width="0.9845%" height="15" fill="rgb(209,150,17)" fg:x="107" fg:w="7"/><text x="15.2992%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;y2021::d12::node_path::NodePath&gt;&gt; (66 samples, 9.28%)</title><rect x="6.8917%" y="821" width="9.2827%" height="15" fill="rgb(234,202,34)" fg:x="49" fg:w="66"/><text x="7.1417%" y="831.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;y2021::d12::node_path::NodePath,std::collections::hash::map::RandomState&gt;&gt; (66 samples, 9.28%)</title><rect x="6.8917%" y="805" width="9.2827%" height="15" fill="rgb(253,148,53)" fg:x="49" fg:w="66"/><text x="7.1417%" y="815.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;y2021::d12::node_path::NodePath,(),std::collections::hash::map::RandomState&gt;&gt; (66 samples, 9.28%)</title><rect x="6.8917%" y="789" width="9.2827%" height="15" fill="rgb(218,129,16)" fg:x="49" fg:w="66"/><text x="7.1417%" y="799.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(y2021::d12::node_path::NodePath,())&gt;&gt; (66 samples, 9.28%)</title><rect x="6.8917%" y="773" width="9.2827%" height="15" fill="rgb(216,85,19)" fg:x="49" fg:w="66"/><text x="7.1417%" y="783.50">core::ptr::dr..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 9.28%)</title><rect x="6.8917%" y="757" width="9.2827%" height="15" fill="rgb(235,228,7)" fg:x="49" fg:w="66"/><text x="7.1417%" y="767.50">&lt;hashbrown::r..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (66 samples, 9.28%)</title><rect x="6.8917%" y="741" width="9.2827%" height="15" fill="rgb(245,175,0)" fg:x="49" fg:w="66"/><text x="7.1417%" y="751.50">hashbrown::ra..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (65 samples, 9.14%)</title><rect x="7.0323%" y="725" width="9.1421%" height="15" fill="rgb(208,168,36)" fg:x="50" fg:w="65"/><text x="7.2823%" y="735.50">hashbrown::ra..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (65 samples, 9.14%)</title><rect x="7.0323%" y="709" width="9.1421%" height="15" fill="rgb(246,171,24)" fg:x="50" fg:w="65"/><text x="7.2823%" y="719.50">core::ptr::mu..</text></g><g><title>core::ptr::drop_in_place&lt;(y2021::d12::node_path::NodePath,())&gt; (65 samples, 9.14%)</title><rect x="7.0323%" y="693" width="9.1421%" height="15" fill="rgb(215,142,24)" fg:x="50" fg:w="65"/><text x="7.2823%" y="703.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;y2021::d12::node_path::NodePath&gt; (65 samples, 9.14%)</title><rect x="7.0323%" y="677" width="9.1421%" height="15" fill="rgb(250,187,7)" fg:x="50" fg:w="65"/><text x="7.2823%" y="687.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (61 samples, 8.58%)</title><rect x="7.5949%" y="661" width="8.5795%" height="15" fill="rgb(228,66,33)" fg:x="54" fg:w="61"/><text x="7.8449%" y="671.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="16.0338%" y="645" width="0.1406%" height="15" fill="rgb(234,215,21)" fg:x="114" fg:w="1"/><text x="16.2838%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="16.0338%" y="629" width="0.1406%" height="15" fill="rgb(222,191,20)" fg:x="114" fg:w="1"/><text x="16.2838%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="16.0338%" y="613" width="0.1406%" height="15" fill="rgb(245,79,54)" fg:x="114" fg:w="1"/><text x="16.2838%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="16.0338%" y="597" width="0.1406%" height="15" fill="rgb(240,10,37)" fg:x="114" fg:w="1"/><text x="16.2838%" y="607.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="16.0338%" y="581" width="0.1406%" height="15" fill="rgb(214,192,32)" fg:x="114" fg:w="1"/><text x="16.2838%" y="591.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="16.1744%" y="725" width="0.1406%" height="15" fill="rgb(209,36,54)" fg:x="115" fg:w="1"/><text x="16.4244%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="16.1744%" y="709" width="0.1406%" height="15" fill="rgb(220,10,11)" fg:x="115" fg:w="1"/><text x="16.4244%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d12::node_path::NodePath&gt; (1 samples, 0.14%)</title><rect x="16.3150%" y="725" width="0.1406%" height="15" fill="rgb(221,106,17)" fg:x="116" fg:w="1"/><text x="16.5650%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="16.3150%" y="709" width="0.1406%" height="15" fill="rgb(251,142,44)" fg:x="116" fg:w="1"/><text x="16.5650%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="16.3150%" y="693" width="0.1406%" height="15" fill="rgb(238,13,15)" fg:x="116" fg:w="1"/><text x="16.5650%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.14%)</title><rect x="16.3150%" y="677" width="0.1406%" height="15" fill="rgb(208,107,27)" fg:x="116" fg:w="1"/><text x="16.5650%" y="687.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3 samples, 0.42%)</title><rect x="16.5963%" y="613" width="0.4219%" height="15" fill="rgb(205,136,37)" fg:x="118" fg:w="3"/><text x="16.8463%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.42%)</title><rect x="16.5963%" y="597" width="0.4219%" height="15" fill="rgb(250,205,27)" fg:x="118" fg:w="3"/><text x="16.8463%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.42%)</title><rect x="16.5963%" y="581" width="0.4219%" height="15" fill="rgb(210,80,43)" fg:x="118" fg:w="3"/><text x="16.8463%" y="591.50"></text></g><g><title>y2021::d12::main::traverse::{{closure}} (3 samples, 0.42%)</title><rect x="16.5963%" y="565" width="0.4219%" height="15" fill="rgb(247,160,36)" fg:x="118" fg:w="3"/><text x="16.8463%" y="575.50"></text></g><g><title>y2021::d12::node_path::NodePath::count_node (3 samples, 0.42%)</title><rect x="16.5963%" y="549" width="0.4219%" height="15" fill="rgb(234,13,49)" fg:x="118" fg:w="3"/><text x="16.8463%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.28%)</title><rect x="16.7370%" y="533" width="0.2813%" height="15" fill="rgb(234,122,0)" fg:x="119" fg:w="2"/><text x="16.9870%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.28%)</title><rect x="16.7370%" y="517" width="0.2813%" height="15" fill="rgb(207,146,38)" fg:x="119" fg:w="2"/><text x="16.9870%" y="527.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.28%)</title><rect x="16.7370%" y="501" width="0.2813%" height="15" fill="rgb(207,177,25)" fg:x="119" fg:w="2"/><text x="16.9870%" y="511.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (2 samples, 0.28%)</title><rect x="16.7370%" y="485" width="0.2813%" height="15" fill="rgb(211,178,42)" fg:x="119" fg:w="2"/><text x="16.9870%" y="495.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.28%)</title><rect x="16.7370%" y="469" width="0.2813%" height="15" fill="rgb(230,69,54)" fg:x="119" fg:w="2"/><text x="16.9870%" y="479.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.28%)</title><rect x="16.7370%" y="453" width="0.2813%" height="15" fill="rgb(214,135,41)" fg:x="119" fg:w="2"/><text x="16.9870%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.14%)</title><rect x="16.8776%" y="437" width="0.1406%" height="15" fill="rgb(237,67,25)" fg:x="120" fg:w="1"/><text x="17.1276%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.14%)</title><rect x="16.8776%" y="421" width="0.1406%" height="15" fill="rgb(222,189,50)" fg:x="120" fg:w="1"/><text x="17.1276%" y="431.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.14%)</title><rect x="16.8776%" y="405" width="0.1406%" height="15" fill="rgb(245,148,34)" fg:x="120" fg:w="1"/><text x="17.1276%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.14%)</title><rect x="16.8776%" y="389" width="0.1406%" height="15" fill="rgb(222,29,6)" fg:x="120" fg:w="1"/><text x="17.1276%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.56%)</title><rect x="16.5963%" y="709" width="0.5626%" height="15" fill="rgb(221,189,43)" fg:x="118" fg:w="4"/><text x="16.8463%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4 samples, 0.56%)</title><rect x="16.5963%" y="693" width="0.5626%" height="15" fill="rgb(207,36,27)" fg:x="118" fg:w="4"/><text x="16.8463%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.56%)</title><rect x="16.5963%" y="677" width="0.5626%" height="15" fill="rgb(217,90,24)" fg:x="118" fg:w="4"/><text x="16.8463%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.56%)</title><rect x="16.5963%" y="661" width="0.5626%" height="15" fill="rgb(224,66,35)" fg:x="118" fg:w="4"/><text x="16.8463%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.56%)</title><rect x="16.5963%" y="645" width="0.5626%" height="15" fill="rgb(221,13,50)" fg:x="118" fg:w="4"/><text x="16.8463%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.56%)</title><rect x="16.5963%" y="629" width="0.5626%" height="15" fill="rgb(236,68,49)" fg:x="118" fg:w="4"/><text x="16.8463%" y="639.50"></text></g><g><title>y2021::d12::main::traverse::{{closure}} (1 samples, 0.14%)</title><rect x="17.0183%" y="613" width="0.1406%" height="15" fill="rgb(229,146,28)" fg:x="121" fg:w="1"/><text x="17.2683%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.14%)</title><rect x="17.0183%" y="597" width="0.1406%" height="15" fill="rgb(225,31,38)" fg:x="121" fg:w="1"/><text x="17.2683%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.14%)</title><rect x="17.0183%" y="581" width="0.1406%" height="15" fill="rgb(250,208,3)" fg:x="121" fg:w="1"/><text x="17.2683%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.14%)</title><rect x="17.0183%" y="565" width="0.1406%" height="15" fill="rgb(246,54,23)" fg:x="121" fg:w="1"/><text x="17.2683%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="17.0183%" y="549" width="0.1406%" height="15" fill="rgb(243,76,11)" fg:x="121" fg:w="1"/><text x="17.2683%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="17.0183%" y="533" width="0.1406%" height="15" fill="rgb(245,21,50)" fg:x="121" fg:w="1"/><text x="17.2683%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="17.0183%" y="517" width="0.1406%" height="15" fill="rgb(228,9,43)" fg:x="121" fg:w="1"/><text x="17.2683%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="17.0183%" y="501" width="0.1406%" height="15" fill="rgb(208,100,47)" fg:x="121" fg:w="1"/><text x="17.2683%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.14%)</title><rect x="17.0183%" y="485" width="0.1406%" height="15" fill="rgb(232,26,8)" fg:x="121" fg:w="1"/><text x="17.2683%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.14%)</title><rect x="17.0183%" y="469" width="0.1406%" height="15" fill="rgb(216,166,38)" fg:x="121" fg:w="1"/><text x="17.2683%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="17.1589%" y="549" width="0.1406%" height="15" fill="rgb(251,202,51)" fg:x="122" fg:w="1"/><text x="17.4089%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="17.1589%" y="533" width="0.1406%" height="15" fill="rgb(254,216,34)" fg:x="122" fg:w="1"/><text x="17.4089%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="17.1589%" y="517" width="0.1406%" height="15" fill="rgb(251,32,27)" fg:x="122" fg:w="1"/><text x="17.4089%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="17.1589%" y="501" width="0.1406%" height="15" fill="rgb(208,127,28)" fg:x="122" fg:w="1"/><text x="17.4089%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="17.1589%" y="485" width="0.1406%" height="15" fill="rgb(224,137,22)" fg:x="122" fg:w="1"/><text x="17.4089%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="17.1589%" y="469" width="0.1406%" height="15" fill="rgb(254,70,32)" fg:x="122" fg:w="1"/><text x="17.4089%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.14%)</title><rect x="17.1589%" y="453" width="0.1406%" height="15" fill="rgb(229,75,37)" fg:x="122" fg:w="1"/><text x="17.4089%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.14%)</title><rect x="17.1589%" y="437" width="0.1406%" height="15" fill="rgb(252,64,23)" fg:x="122" fg:w="1"/><text x="17.4089%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="17.1589%" y="629" width="0.2813%" height="15" fill="rgb(232,162,48)" fg:x="122" fg:w="2"/><text x="17.4089%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="17.1589%" y="613" width="0.2813%" height="15" fill="rgb(246,160,12)" fg:x="122" fg:w="2"/><text x="17.4089%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.28%)</title><rect x="17.1589%" y="597" width="0.2813%" height="15" fill="rgb(247,166,0)" fg:x="122" fg:w="2"/><text x="17.4089%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.28%)</title><rect x="17.1589%" y="581" width="0.2813%" height="15" fill="rgb(249,219,21)" fg:x="122" fg:w="2"/><text x="17.4089%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.28%)</title><rect x="17.1589%" y="565" width="0.2813%" height="15" fill="rgb(205,209,3)" fg:x="122" fg:w="2"/><text x="17.4089%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.14%)</title><rect x="17.2996%" y="549" width="0.1406%" height="15" fill="rgb(243,44,1)" fg:x="123" fg:w="1"/><text x="17.5496%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="17.2996%" y="533" width="0.1406%" height="15" fill="rgb(206,159,16)" fg:x="123" fg:w="1"/><text x="17.5496%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="17.2996%" y="517" width="0.1406%" height="15" fill="rgb(244,77,30)" fg:x="123" fg:w="1"/><text x="17.5496%" y="527.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::clone::Clone&gt;::clone (5 samples, 0.70%)</title><rect x="17.1589%" y="709" width="0.7032%" height="15" fill="rgb(218,69,12)" fg:x="122" fg:w="5"/><text x="17.4089%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.70%)</title><rect x="17.1589%" y="693" width="0.7032%" height="15" fill="rgb(212,87,7)" fg:x="122" fg:w="5"/><text x="17.4089%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.70%)</title><rect x="17.1589%" y="677" width="0.7032%" height="15" fill="rgb(245,114,25)" fg:x="122" fg:w="5"/><text x="17.4089%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.70%)</title><rect x="17.1589%" y="661" width="0.7032%" height="15" fill="rgb(210,61,42)" fg:x="122" fg:w="5"/><text x="17.4089%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.70%)</title><rect x="17.1589%" y="645" width="0.7032%" height="15" fill="rgb(211,52,33)" fg:x="122" fg:w="5"/><text x="17.4089%" y="655.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.42%)</title><rect x="17.4402%" y="629" width="0.4219%" height="15" fill="rgb(234,58,33)" fg:x="124" fg:w="3"/><text x="17.6902%" y="639.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.14%)</title><rect x="17.8622%" y="709" width="0.1406%" height="15" fill="rgb(220,115,36)" fg:x="127" fg:w="1"/><text x="18.1122%" y="719.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.14%)</title><rect x="17.8622%" y="693" width="0.1406%" height="15" fill="rgb(243,153,54)" fg:x="127" fg:w="1"/><text x="18.1122%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.14%)</title><rect x="17.8622%" y="677" width="0.1406%" height="15" fill="rgb(251,47,18)" fg:x="127" fg:w="1"/><text x="18.1122%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.14%)</title><rect x="17.8622%" y="661" width="0.1406%" height="15" fill="rgb(242,102,42)" fg:x="127" fg:w="1"/><text x="18.1122%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.14%)</title><rect x="17.8622%" y="645" width="0.1406%" height="15" fill="rgb(234,31,38)" fg:x="127" fg:w="1"/><text x="18.1122%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.14%)</title><rect x="17.8622%" y="629" width="0.1406%" height="15" fill="rgb(221,117,51)" fg:x="127" fg:w="1"/><text x="18.1122%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.14%)</title><rect x="17.8622%" y="613" width="0.1406%" height="15" fill="rgb(212,20,18)" fg:x="127" fg:w="1"/><text x="18.1122%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.14%)</title><rect x="17.8622%" y="597" width="0.1406%" height="15" fill="rgb(245,133,36)" fg:x="127" fg:w="1"/><text x="18.1122%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.14%)</title><rect x="17.8622%" y="581" width="0.1406%" height="15" fill="rgb(212,6,19)" fg:x="127" fg:w="1"/><text x="18.1122%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.14%)</title><rect x="17.8622%" y="565" width="0.1406%" height="15" fill="rgb(218,1,36)" fg:x="127" fg:w="1"/><text x="18.1122%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.14%)</title><rect x="17.8622%" y="549" width="0.1406%" height="15" fill="rgb(246,84,54)" fg:x="127" fg:w="1"/><text x="18.1122%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.14%)</title><rect x="17.8622%" y="533" width="0.1406%" height="15" fill="rgb(242,110,6)" fg:x="127" fg:w="1"/><text x="18.1122%" y="543.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.14%)</title><rect x="17.8622%" y="517" width="0.1406%" height="15" fill="rgb(214,47,5)" fg:x="127" fg:w="1"/><text x="18.1122%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.14%)</title><rect x="18.1435%" y="517" width="0.1406%" height="15" fill="rgb(218,159,25)" fg:x="129" fg:w="1"/><text x="18.3935%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.14%)</title><rect x="18.1435%" y="501" width="0.1406%" height="15" fill="rgb(215,211,28)" fg:x="129" fg:w="1"/><text x="18.3935%" y="511.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="18.1435%" y="485" width="0.1406%" height="15" fill="rgb(238,59,32)" fg:x="129" fg:w="1"/><text x="18.3935%" y="495.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.14%)</title><rect x="18.1435%" y="469" width="0.1406%" height="15" fill="rgb(226,82,3)" fg:x="129" fg:w="1"/><text x="18.3935%" y="479.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.14%)</title><rect x="18.1435%" y="453" width="0.1406%" height="15" fill="rgb(240,164,32)" fg:x="129" fg:w="1"/><text x="18.3935%" y="463.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.14%)</title><rect x="18.1435%" y="437" width="0.1406%" height="15" fill="rgb(232,46,7)" fg:x="129" fg:w="1"/><text x="18.3935%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.14%)</title><rect x="18.1435%" y="421" width="0.1406%" height="15" fill="rgb(229,129,53)" fg:x="129" fg:w="1"/><text x="18.3935%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.14%)</title><rect x="18.1435%" y="405" width="0.1406%" height="15" fill="rgb(234,188,29)" fg:x="129" fg:w="1"/><text x="18.3935%" y="415.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3 samples, 0.42%)</title><rect x="18.0028%" y="597" width="0.4219%" height="15" fill="rgb(246,141,4)" fg:x="128" fg:w="3"/><text x="18.2528%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.42%)</title><rect x="18.0028%" y="581" width="0.4219%" height="15" fill="rgb(229,23,39)" fg:x="128" fg:w="3"/><text x="18.2528%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.42%)</title><rect x="18.0028%" y="565" width="0.4219%" height="15" fill="rgb(206,12,3)" fg:x="128" fg:w="3"/><text x="18.2528%" y="575.50"></text></g><g><title>y2021::d12::main::traverse::{{closure}} (3 samples, 0.42%)</title><rect x="18.0028%" y="549" width="0.4219%" height="15" fill="rgb(252,226,20)" fg:x="128" fg:w="3"/><text x="18.2528%" y="559.50"></text></g><g><title>y2021::d12::node_path::NodePath::count_node (2 samples, 0.28%)</title><rect x="18.1435%" y="533" width="0.2813%" height="15" fill="rgb(216,123,35)" fg:x="129" fg:w="2"/><text x="18.3935%" y="543.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (1 samples, 0.14%)</title><rect x="18.2841%" y="517" width="0.1406%" height="15" fill="rgb(212,68,40)" fg:x="130" fg:w="1"/><text x="18.5341%" y="527.50"></text></g><g><title>&lt;&amp;alloc::string::String as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.14%)</title><rect x="18.2841%" y="501" width="0.1406%" height="15" fill="rgb(254,125,32)" fg:x="130" fg:w="1"/><text x="18.5341%" y="511.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.14%)</title><rect x="18.2841%" y="485" width="0.1406%" height="15" fill="rgb(253,97,22)" fg:x="130" fg:w="1"/><text x="18.5341%" y="495.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.14%)</title><rect x="18.2841%" y="469" width="0.1406%" height="15" fill="rgb(241,101,14)" fg:x="130" fg:w="1"/><text x="18.5341%" y="479.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.14%)</title><rect x="18.2841%" y="453" width="0.1406%" height="15" fill="rgb(238,103,29)" fg:x="130" fg:w="1"/><text x="18.5341%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.56%)</title><rect x="18.0028%" y="693" width="0.5626%" height="15" fill="rgb(233,195,47)" fg:x="128" fg:w="4"/><text x="18.2528%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4 samples, 0.56%)</title><rect x="18.0028%" y="677" width="0.5626%" height="15" fill="rgb(246,218,30)" fg:x="128" fg:w="4"/><text x="18.2528%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.56%)</title><rect x="18.0028%" y="661" width="0.5626%" height="15" fill="rgb(219,145,47)" fg:x="128" fg:w="4"/><text x="18.2528%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.56%)</title><rect x="18.0028%" y="645" width="0.5626%" height="15" fill="rgb(243,12,26)" fg:x="128" fg:w="4"/><text x="18.2528%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.56%)</title><rect x="18.0028%" y="629" width="0.5626%" height="15" fill="rgb(214,87,16)" fg:x="128" fg:w="4"/><text x="18.2528%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.56%)</title><rect x="18.0028%" y="613" width="0.5626%" height="15" fill="rgb(208,99,42)" fg:x="128" fg:w="4"/><text x="18.2528%" y="623.50"></text></g><g><title>y2021::d12::main::traverse::{{closure}} (1 samples, 0.14%)</title><rect x="18.4248%" y="597" width="0.1406%" height="15" fill="rgb(253,99,2)" fg:x="131" fg:w="1"/><text x="18.6748%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.14%)</title><rect x="18.4248%" y="581" width="0.1406%" height="15" fill="rgb(220,168,23)" fg:x="131" fg:w="1"/><text x="18.6748%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.14%)</title><rect x="18.4248%" y="565" width="0.1406%" height="15" fill="rgb(242,38,24)" fg:x="131" fg:w="1"/><text x="18.6748%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.14%)</title><rect x="18.4248%" y="549" width="0.1406%" height="15" fill="rgb(225,182,9)" fg:x="131" fg:w="1"/><text x="18.6748%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="18.4248%" y="533" width="0.1406%" height="15" fill="rgb(243,178,37)" fg:x="131" fg:w="1"/><text x="18.6748%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="18.4248%" y="517" width="0.1406%" height="15" fill="rgb(232,139,19)" fg:x="131" fg:w="1"/><text x="18.6748%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="18.4248%" y="501" width="0.1406%" height="15" fill="rgb(225,201,24)" fg:x="131" fg:w="1"/><text x="18.6748%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="18.4248%" y="485" width="0.1406%" height="15" fill="rgb(221,47,46)" fg:x="131" fg:w="1"/><text x="18.6748%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.14%)</title><rect x="18.4248%" y="469" width="0.1406%" height="15" fill="rgb(249,23,13)" fg:x="131" fg:w="1"/><text x="18.6748%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="18.4248%" y="453" width="0.1406%" height="15" fill="rgb(219,9,5)" fg:x="131" fg:w="1"/><text x="18.6748%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="18.5654%" y="613" width="0.2813%" height="15" fill="rgb(254,171,16)" fg:x="132" fg:w="2"/><text x="18.8154%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="18.5654%" y="597" width="0.2813%" height="15" fill="rgb(230,171,20)" fg:x="132" fg:w="2"/><text x="18.8154%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.28%)</title><rect x="18.5654%" y="581" width="0.2813%" height="15" fill="rgb(210,71,41)" fg:x="132" fg:w="2"/><text x="18.8154%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.28%)</title><rect x="18.5654%" y="565" width="0.2813%" height="15" fill="rgb(206,173,20)" fg:x="132" fg:w="2"/><text x="18.8154%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.28%)</title><rect x="18.5654%" y="549" width="0.2813%" height="15" fill="rgb(233,88,34)" fg:x="132" fg:w="2"/><text x="18.8154%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.28%)</title><rect x="18.5654%" y="533" width="0.2813%" height="15" fill="rgb(223,209,46)" fg:x="132" fg:w="2"/><text x="18.8154%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.28%)</title><rect x="18.5654%" y="517" width="0.2813%" height="15" fill="rgb(250,43,18)" fg:x="132" fg:w="2"/><text x="18.8154%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.28%)</title><rect x="18.5654%" y="501" width="0.2813%" height="15" fill="rgb(208,13,10)" fg:x="132" fg:w="2"/><text x="18.8154%" y="511.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::clone::Clone&gt;::clone (5 samples, 0.70%)</title><rect x="18.5654%" y="693" width="0.7032%" height="15" fill="rgb(212,200,36)" fg:x="132" fg:w="5"/><text x="18.8154%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.70%)</title><rect x="18.5654%" y="677" width="0.7032%" height="15" fill="rgb(225,90,30)" fg:x="132" fg:w="5"/><text x="18.8154%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.70%)</title><rect x="18.5654%" y="661" width="0.7032%" height="15" fill="rgb(236,182,39)" fg:x="132" fg:w="5"/><text x="18.8154%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.70%)</title><rect x="18.5654%" y="645" width="0.7032%" height="15" fill="rgb(212,144,35)" fg:x="132" fg:w="5"/><text x="18.8154%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.70%)</title><rect x="18.5654%" y="629" width="0.7032%" height="15" fill="rgb(228,63,44)" fg:x="132" fg:w="5"/><text x="18.8154%" y="639.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.42%)</title><rect x="18.8467%" y="613" width="0.4219%" height="15" fill="rgb(228,109,6)" fg:x="134" fg:w="3"/><text x="19.0967%" y="623.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="19.2686%" y="693" width="0.1406%" height="15" fill="rgb(238,117,24)" fg:x="137" fg:w="1"/><text x="19.5186%" y="703.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="19.5499%" y="533" width="0.1406%" height="15" fill="rgb(242,26,26)" fg:x="139" fg:w="1"/><text x="19.7999%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d12::node_path::NodePath&gt; (4 samples, 0.56%)</title><rect x="19.4093%" y="693" width="0.5626%" height="15" fill="rgb(221,92,48)" fg:x="138" fg:w="4"/><text x="19.6593%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (4 samples, 0.56%)</title><rect x="19.4093%" y="677" width="0.5626%" height="15" fill="rgb(209,209,32)" fg:x="138" fg:w="4"/><text x="19.6593%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.56%)</title><rect x="19.4093%" y="661" width="0.5626%" height="15" fill="rgb(221,70,22)" fg:x="138" fg:w="4"/><text x="19.6593%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (4 samples, 0.56%)</title><rect x="19.4093%" y="645" width="0.5626%" height="15" fill="rgb(248,145,5)" fg:x="138" fg:w="4"/><text x="19.6593%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.56%)</title><rect x="19.4093%" y="629" width="0.5626%" height="15" fill="rgb(226,116,26)" fg:x="138" fg:w="4"/><text x="19.6593%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.56%)</title><rect x="19.4093%" y="613" width="0.5626%" height="15" fill="rgb(244,5,17)" fg:x="138" fg:w="4"/><text x="19.6593%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.56%)</title><rect x="19.4093%" y="597" width="0.5626%" height="15" fill="rgb(252,159,33)" fg:x="138" fg:w="4"/><text x="19.6593%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.56%)</title><rect x="19.4093%" y="581" width="0.5626%" height="15" fill="rgb(206,71,0)" fg:x="138" fg:w="4"/><text x="19.6593%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.56%)</title><rect x="19.4093%" y="565" width="0.5626%" height="15" fill="rgb(233,118,54)" fg:x="138" fg:w="4"/><text x="19.6593%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.56%)</title><rect x="19.4093%" y="549" width="0.5626%" height="15" fill="rgb(234,83,48)" fg:x="138" fg:w="4"/><text x="19.6593%" y="559.50"></text></g><g><title>_int_free (2 samples, 0.28%)</title><rect x="19.6906%" y="533" width="0.2813%" height="15" fill="rgb(228,3,54)" fg:x="140" fg:w="2"/><text x="19.9406%" y="543.50"></text></g><g><title>free_perturb (1 samples, 0.14%)</title><rect x="19.8312%" y="517" width="0.1406%" height="15" fill="rgb(226,155,13)" fg:x="141" fg:w="1"/><text x="20.0812%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.14%)</title><rect x="19.9719%" y="693" width="0.1406%" height="15" fill="rgb(241,28,37)" fg:x="142" fg:w="1"/><text x="20.2219%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.14%)</title><rect x="19.9719%" y="677" width="0.1406%" height="15" fill="rgb(233,93,10)" fg:x="142" fg:w="1"/><text x="20.2219%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.14%)</title><rect x="19.9719%" y="661" width="0.1406%" height="15" fill="rgb(225,113,19)" fg:x="142" fg:w="1"/><text x="20.2219%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.14%)</title><rect x="19.9719%" y="645" width="0.1406%" height="15" fill="rgb(241,2,18)" fg:x="142" fg:w="1"/><text x="20.2219%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.14%)</title><rect x="19.9719%" y="629" width="0.1406%" height="15" fill="rgb(228,207,21)" fg:x="142" fg:w="1"/><text x="20.2219%" y="639.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.28%)</title><rect x="20.1125%" y="693" width="0.2813%" height="15" fill="rgb(213,211,35)" fg:x="143" fg:w="2"/><text x="20.3625%" y="703.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.28%)</title><rect x="20.1125%" y="677" width="0.2813%" height="15" fill="rgb(209,83,10)" fg:x="143" fg:w="2"/><text x="20.3625%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.28%)</title><rect x="20.1125%" y="661" width="0.2813%" height="15" fill="rgb(209,164,1)" fg:x="143" fg:w="2"/><text x="20.3625%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.28%)</title><rect x="20.1125%" y="645" width="0.2813%" height="15" fill="rgb(213,184,43)" fg:x="143" fg:w="2"/><text x="20.3625%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.28%)</title><rect x="20.1125%" y="629" width="0.2813%" height="15" fill="rgb(231,61,34)" fg:x="143" fg:w="2"/><text x="20.3625%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.28%)</title><rect x="20.1125%" y="613" width="0.2813%" height="15" fill="rgb(235,75,3)" fg:x="143" fg:w="2"/><text x="20.3625%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.28%)</title><rect x="20.1125%" y="597" width="0.2813%" height="15" fill="rgb(220,106,47)" fg:x="143" fg:w="2"/><text x="20.3625%" y="607.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (2 samples, 0.28%)</title><rect x="20.1125%" y="581" width="0.2813%" height="15" fill="rgb(210,196,33)" fg:x="143" fg:w="2"/><text x="20.3625%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.28%)</title><rect x="20.1125%" y="565" width="0.2813%" height="15" fill="rgb(229,154,42)" fg:x="143" fg:w="2"/><text x="20.3625%" y="575.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::hash::Hash&gt;::hash (2 samples, 0.28%)</title><rect x="20.1125%" y="549" width="0.2813%" height="15" fill="rgb(228,114,26)" fg:x="143" fg:w="2"/><text x="20.3625%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.28%)</title><rect x="20.1125%" y="533" width="0.2813%" height="15" fill="rgb(208,144,1)" fg:x="143" fg:w="2"/><text x="20.3625%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.28%)</title><rect x="20.1125%" y="517" width="0.2813%" height="15" fill="rgb(239,112,37)" fg:x="143" fg:w="2"/><text x="20.3625%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.28%)</title><rect x="20.1125%" y="501" width="0.2813%" height="15" fill="rgb(210,96,50)" fg:x="143" fg:w="2"/><text x="20.3625%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.28%)</title><rect x="20.1125%" y="485" width="0.2813%" height="15" fill="rgb(222,178,2)" fg:x="143" fg:w="2"/><text x="20.3625%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.28%)</title><rect x="20.1125%" y="469" width="0.2813%" height="15" fill="rgb(226,74,18)" fg:x="143" fg:w="2"/><text x="20.3625%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.28%)</title><rect x="20.1125%" y="453" width="0.2813%" height="15" fill="rgb(225,67,54)" fg:x="143" fg:w="2"/><text x="20.3625%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="20.3938%" y="677" width="0.1406%" height="15" fill="rgb(251,92,32)" fg:x="145" fg:w="1"/><text x="20.6438%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="20.3938%" y="661" width="0.1406%" height="15" fill="rgb(228,149,22)" fg:x="145" fg:w="1"/><text x="20.6438%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="20.3938%" y="645" width="0.1406%" height="15" fill="rgb(243,54,13)" fg:x="145" fg:w="1"/><text x="20.6438%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="20.3938%" y="629" width="0.1406%" height="15" fill="rgb(243,180,28)" fg:x="145" fg:w="1"/><text x="20.6438%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="20.3938%" y="613" width="0.1406%" height="15" fill="rgb(208,167,24)" fg:x="145" fg:w="1"/><text x="20.6438%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="20.3938%" y="597" width="0.1406%" height="15" fill="rgb(245,73,45)" fg:x="145" fg:w="1"/><text x="20.6438%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="20.3938%" y="581" width="0.1406%" height="15" fill="rgb(237,203,48)" fg:x="145" fg:w="1"/><text x="20.6438%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="20.3938%" y="565" width="0.1406%" height="15" fill="rgb(211,197,16)" fg:x="145" fg:w="1"/><text x="20.6438%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="20.3938%" y="549" width="0.1406%" height="15" fill="rgb(243,99,51)" fg:x="145" fg:w="1"/><text x="20.6438%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="20.3938%" y="533" width="0.1406%" height="15" fill="rgb(215,123,29)" fg:x="145" fg:w="1"/><text x="20.6438%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="20.3938%" y="517" width="0.1406%" height="15" fill="rgb(239,186,37)" fg:x="145" fg:w="1"/><text x="20.6438%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="20.3938%" y="501" width="0.1406%" height="15" fill="rgb(252,136,39)" fg:x="145" fg:w="1"/><text x="20.6438%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="20.3938%" y="485" width="0.1406%" height="15" fill="rgb(223,213,32)" fg:x="145" fg:w="1"/><text x="20.6438%" y="495.50"></text></g><g><title>tcache_put (1 samples, 0.14%)</title><rect x="20.3938%" y="469" width="0.1406%" height="15" fill="rgb(233,115,5)" fg:x="145" fg:w="1"/><text x="20.6438%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="20.6751%" y="517" width="0.1406%" height="15" fill="rgb(207,226,44)" fg:x="147" fg:w="1"/><text x="20.9251%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.14%)</title><rect x="20.6751%" y="501" width="0.1406%" height="15" fill="rgb(208,126,0)" fg:x="147" fg:w="1"/><text x="20.9251%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.14%)</title><rect x="20.6751%" y="485" width="0.1406%" height="15" fill="rgb(244,66,21)" fg:x="147" fg:w="1"/><text x="20.9251%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.14%)</title><rect x="20.6751%" y="469" width="0.1406%" height="15" fill="rgb(222,97,12)" fg:x="147" fg:w="1"/><text x="20.9251%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.14%)</title><rect x="20.6751%" y="453" width="0.1406%" height="15" fill="rgb(219,213,19)" fg:x="147" fg:w="1"/><text x="20.9251%" y="463.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="20.6751%" y="437" width="0.1406%" height="15" fill="rgb(252,169,30)" fg:x="147" fg:w="1"/><text x="20.9251%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2 samples, 0.28%)</title><rect x="20.8158%" y="501" width="0.2813%" height="15" fill="rgb(206,32,51)" fg:x="148" fg:w="2"/><text x="21.0658%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.28%)</title><rect x="20.8158%" y="485" width="0.2813%" height="15" fill="rgb(250,172,42)" fg:x="148" fg:w="2"/><text x="21.0658%" y="495.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.28%)</title><rect x="20.8158%" y="469" width="0.2813%" height="15" fill="rgb(209,34,43)" fg:x="148" fg:w="2"/><text x="21.0658%" y="479.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (2 samples, 0.28%)</title><rect x="20.8158%" y="453" width="0.2813%" height="15" fill="rgb(223,11,35)" fg:x="148" fg:w="2"/><text x="21.0658%" y="463.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.28%)</title><rect x="20.8158%" y="437" width="0.2813%" height="15" fill="rgb(251,219,26)" fg:x="148" fg:w="2"/><text x="21.0658%" y="447.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (5 samples, 0.70%)</title><rect x="20.5345%" y="581" width="0.7032%" height="15" fill="rgb(231,119,3)" fg:x="146" fg:w="5"/><text x="20.7845%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (5 samples, 0.70%)</title><rect x="20.5345%" y="565" width="0.7032%" height="15" fill="rgb(216,97,11)" fg:x="146" fg:w="5"/><text x="20.7845%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.70%)</title><rect x="20.5345%" y="549" width="0.7032%" height="15" fill="rgb(223,59,9)" fg:x="146" fg:w="5"/><text x="20.7845%" y="559.50"></text></g><g><title>y2021::d12::main::traverse::{{closure}} (5 samples, 0.70%)</title><rect x="20.5345%" y="533" width="0.7032%" height="15" fill="rgb(233,93,31)" fg:x="146" fg:w="5"/><text x="20.7845%" y="543.50"></text></g><g><title>y2021::d12::node_path::NodePath::count_node (3 samples, 0.42%)</title><rect x="20.8158%" y="517" width="0.4219%" height="15" fill="rgb(239,81,33)" fg:x="148" fg:w="3"/><text x="21.0658%" y="527.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (1 samples, 0.14%)</title><rect x="21.0970%" y="501" width="0.1406%" height="15" fill="rgb(213,120,34)" fg:x="150" fg:w="1"/><text x="21.3470%" y="511.50"></text></g><g><title>&lt;&amp;alloc::string::String as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.14%)</title><rect x="21.0970%" y="485" width="0.1406%" height="15" fill="rgb(243,49,53)" fg:x="150" fg:w="1"/><text x="21.3470%" y="495.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.14%)</title><rect x="21.0970%" y="469" width="0.1406%" height="15" fill="rgb(247,216,33)" fg:x="150" fg:w="1"/><text x="21.3470%" y="479.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.14%)</title><rect x="21.0970%" y="453" width="0.1406%" height="15" fill="rgb(226,26,14)" fg:x="150" fg:w="1"/><text x="21.3470%" y="463.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.14%)</title><rect x="21.0970%" y="437" width="0.1406%" height="15" fill="rgb(215,49,53)" fg:x="150" fg:w="1"/><text x="21.3470%" y="447.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::maximal_suffix (1 samples, 0.14%)</title><rect x="21.0970%" y="421" width="0.1406%" height="15" fill="rgb(245,162,40)" fg:x="150" fg:w="1"/><text x="21.3470%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="21.2377%" y="501" width="0.1406%" height="15" fill="rgb(229,68,17)" fg:x="151" fg:w="1"/><text x="21.4877%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="21.2377%" y="485" width="0.1406%" height="15" fill="rgb(213,182,10)" fg:x="151" fg:w="1"/><text x="21.4877%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="21.2377%" y="469" width="0.1406%" height="15" fill="rgb(245,125,30)" fg:x="151" fg:w="1"/><text x="21.4877%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.14%)</title><rect x="21.2377%" y="453" width="0.1406%" height="15" fill="rgb(232,202,2)" fg:x="151" fg:w="1"/><text x="21.4877%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="21.2377%" y="437" width="0.1406%" height="15" fill="rgb(237,140,51)" fg:x="151" fg:w="1"/><text x="21.4877%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.98%)</title><rect x="20.5345%" y="677" width="0.9845%" height="15" fill="rgb(236,157,25)" fg:x="146" fg:w="7"/><text x="20.7845%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (7 samples, 0.98%)</title><rect x="20.5345%" y="661" width="0.9845%" height="15" fill="rgb(219,209,0)" fg:x="146" fg:w="7"/><text x="20.7845%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.98%)</title><rect x="20.5345%" y="645" width="0.9845%" height="15" fill="rgb(240,116,54)" fg:x="146" fg:w="7"/><text x="20.7845%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.98%)</title><rect x="20.5345%" y="629" width="0.9845%" height="15" fill="rgb(216,10,36)" fg:x="146" fg:w="7"/><text x="20.7845%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.98%)</title><rect x="20.5345%" y="613" width="0.9845%" height="15" fill="rgb(222,72,44)" fg:x="146" fg:w="7"/><text x="20.7845%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (7 samples, 0.98%)</title><rect x="20.5345%" y="597" width="0.9845%" height="15" fill="rgb(232,159,9)" fg:x="146" fg:w="7"/><text x="20.7845%" y="607.50"></text></g><g><title>y2021::d12::main::traverse::{{closure}} (2 samples, 0.28%)</title><rect x="21.2377%" y="581" width="0.2813%" height="15" fill="rgb(210,39,32)" fg:x="151" fg:w="2"/><text x="21.4877%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.28%)</title><rect x="21.2377%" y="565" width="0.2813%" height="15" fill="rgb(216,194,45)" fg:x="151" fg:w="2"/><text x="21.4877%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.28%)</title><rect x="21.2377%" y="549" width="0.2813%" height="15" fill="rgb(218,18,35)" fg:x="151" fg:w="2"/><text x="21.4877%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.28%)</title><rect x="21.2377%" y="533" width="0.2813%" height="15" fill="rgb(207,83,51)" fg:x="151" fg:w="2"/><text x="21.4877%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.28%)</title><rect x="21.2377%" y="517" width="0.2813%" height="15" fill="rgb(225,63,43)" fg:x="151" fg:w="2"/><text x="21.4877%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.14%)</title><rect x="21.3783%" y="501" width="0.1406%" height="15" fill="rgb(207,57,36)" fg:x="152" fg:w="1"/><text x="21.6283%" y="511.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.14%)</title><rect x="21.3783%" y="485" width="0.1406%" height="15" fill="rgb(216,99,33)" fg:x="152" fg:w="1"/><text x="21.6283%" y="495.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.14%)</title><rect x="21.3783%" y="469" width="0.1406%" height="15" fill="rgb(225,42,16)" fg:x="152" fg:w="1"/><text x="21.6283%" y="479.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.14%)</title><rect x="21.3783%" y="453" width="0.1406%" height="15" fill="rgb(220,201,45)" fg:x="152" fg:w="1"/><text x="21.6283%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="21.5190%" y="661" width="0.1406%" height="15" fill="rgb(225,33,4)" fg:x="153" fg:w="1"/><text x="21.7690%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="21.5190%" y="645" width="0.1406%" height="15" fill="rgb(224,33,50)" fg:x="153" fg:w="1"/><text x="21.7690%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="21.5190%" y="629" width="0.1406%" height="15" fill="rgb(246,198,51)" fg:x="153" fg:w="1"/><text x="21.7690%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="21.5190%" y="613" width="0.1406%" height="15" fill="rgb(205,22,4)" fg:x="153" fg:w="1"/><text x="21.7690%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="21.5190%" y="597" width="0.1406%" height="15" fill="rgb(206,3,8)" fg:x="153" fg:w="1"/><text x="21.7690%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="21.5190%" y="581" width="0.1406%" height="15" fill="rgb(251,23,15)" fg:x="153" fg:w="1"/><text x="21.7690%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="21.5190%" y="565" width="0.1406%" height="15" fill="rgb(252,88,28)" fg:x="153" fg:w="1"/><text x="21.7690%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="21.5190%" y="549" width="0.1406%" height="15" fill="rgb(212,127,14)" fg:x="153" fg:w="1"/><text x="21.7690%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="21.5190%" y="533" width="0.1406%" height="15" fill="rgb(247,145,37)" fg:x="153" fg:w="1"/><text x="21.7690%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="21.5190%" y="517" width="0.1406%" height="15" fill="rgb(209,117,53)" fg:x="153" fg:w="1"/><text x="21.7690%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="21.5190%" y="501" width="0.1406%" height="15" fill="rgb(212,90,42)" fg:x="153" fg:w="1"/><text x="21.7690%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="21.5190%" y="485" width="0.1406%" height="15" fill="rgb(218,164,37)" fg:x="153" fg:w="1"/><text x="21.7690%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="21.6596%" y="421" width="0.1406%" height="15" fill="rgb(246,65,34)" fg:x="154" fg:w="1"/><text x="21.9096%" y="431.50"></text></g><g><title>tcache_get (1 samples, 0.14%)</title><rect x="21.6596%" y="405" width="0.1406%" height="15" fill="rgb(231,100,33)" fg:x="154" fg:w="1"/><text x="21.9096%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="21.6596%" y="597" width="0.2813%" height="15" fill="rgb(228,126,14)" fg:x="154" fg:w="2"/><text x="21.9096%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="21.6596%" y="581" width="0.2813%" height="15" fill="rgb(215,173,21)" fg:x="154" fg:w="2"/><text x="21.9096%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.28%)</title><rect x="21.6596%" y="565" width="0.2813%" height="15" fill="rgb(210,6,40)" fg:x="154" fg:w="2"/><text x="21.9096%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.28%)</title><rect x="21.6596%" y="549" width="0.2813%" height="15" fill="rgb(212,48,18)" fg:x="154" fg:w="2"/><text x="21.9096%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.28%)</title><rect x="21.6596%" y="533" width="0.2813%" height="15" fill="rgb(230,214,11)" fg:x="154" fg:w="2"/><text x="21.9096%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="21.6596%" y="517" width="0.2813%" height="15" fill="rgb(254,105,39)" fg:x="154" fg:w="2"/><text x="21.9096%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="21.6596%" y="501" width="0.2813%" height="15" fill="rgb(245,158,5)" fg:x="154" fg:w="2"/><text x="21.9096%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="21.6596%" y="485" width="0.2813%" height="15" fill="rgb(249,208,11)" fg:x="154" fg:w="2"/><text x="21.9096%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.28%)</title><rect x="21.6596%" y="469" width="0.2813%" height="15" fill="rgb(210,39,28)" fg:x="154" fg:w="2"/><text x="21.9096%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="21.6596%" y="453" width="0.2813%" height="15" fill="rgb(211,56,53)" fg:x="154" fg:w="2"/><text x="21.9096%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="21.6596%" y="437" width="0.2813%" height="15" fill="rgb(226,201,30)" fg:x="154" fg:w="2"/><text x="21.9096%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.14%)</title><rect x="21.8003%" y="421" width="0.1406%" height="15" fill="rgb(239,101,34)" fg:x="155" fg:w="1"/><text x="22.0503%" y="431.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::clone::Clone&gt;::clone (6 samples, 0.84%)</title><rect x="21.5190%" y="677" width="0.8439%" height="15" fill="rgb(226,209,5)" fg:x="153" fg:w="6"/><text x="21.7690%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.70%)</title><rect x="21.6596%" y="661" width="0.7032%" height="15" fill="rgb(250,105,47)" fg:x="154" fg:w="5"/><text x="21.9096%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.70%)</title><rect x="21.6596%" y="645" width="0.7032%" height="15" fill="rgb(230,72,3)" fg:x="154" fg:w="5"/><text x="21.9096%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.70%)</title><rect x="21.6596%" y="629" width="0.7032%" height="15" fill="rgb(232,218,39)" fg:x="154" fg:w="5"/><text x="21.9096%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.70%)</title><rect x="21.6596%" y="613" width="0.7032%" height="15" fill="rgb(248,166,6)" fg:x="154" fg:w="5"/><text x="21.9096%" y="623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.42%)</title><rect x="21.9409%" y="597" width="0.4219%" height="15" fill="rgb(247,89,20)" fg:x="156" fg:w="3"/><text x="22.1909%" y="607.50"></text></g><g><title>__GI___libc_free (2 samples, 0.28%)</title><rect x="22.3629%" y="517" width="0.2813%" height="15" fill="rgb(248,130,54)" fg:x="159" fg:w="2"/><text x="22.6129%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.70%)</title><rect x="22.3629%" y="549" width="0.7032%" height="15" fill="rgb(234,196,4)" fg:x="159" fg:w="5"/><text x="22.6129%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.70%)</title><rect x="22.3629%" y="533" width="0.7032%" height="15" fill="rgb(250,143,31)" fg:x="159" fg:w="5"/><text x="22.6129%" y="543.50"></text></g><g><title>_int_free (3 samples, 0.42%)</title><rect x="22.6442%" y="517" width="0.4219%" height="15" fill="rgb(211,110,34)" fg:x="161" fg:w="3"/><text x="22.8942%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d12::node_path::NodePath&gt; (6 samples, 0.84%)</title><rect x="22.3629%" y="677" width="0.8439%" height="15" fill="rgb(215,124,48)" fg:x="159" fg:w="6"/><text x="22.6129%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (6 samples, 0.84%)</title><rect x="22.3629%" y="661" width="0.8439%" height="15" fill="rgb(216,46,13)" fg:x="159" fg:w="6"/><text x="22.6129%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.84%)</title><rect x="22.3629%" y="645" width="0.8439%" height="15" fill="rgb(205,184,25)" fg:x="159" fg:w="6"/><text x="22.6129%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (6 samples, 0.84%)</title><rect x="22.3629%" y="629" width="0.8439%" height="15" fill="rgb(228,1,10)" fg:x="159" fg:w="6"/><text x="22.6129%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.84%)</title><rect x="22.3629%" y="613" width="0.8439%" height="15" fill="rgb(213,116,27)" fg:x="159" fg:w="6"/><text x="22.6129%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.84%)</title><rect x="22.3629%" y="597" width="0.8439%" height="15" fill="rgb(241,95,50)" fg:x="159" fg:w="6"/><text x="22.6129%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.84%)</title><rect x="22.3629%" y="581" width="0.8439%" height="15" fill="rgb(238,48,32)" fg:x="159" fg:w="6"/><text x="22.6129%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.84%)</title><rect x="22.3629%" y="565" width="0.8439%" height="15" fill="rgb(235,113,49)" fg:x="159" fg:w="6"/><text x="22.6129%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.14%)</title><rect x="23.0661%" y="549" width="0.1406%" height="15" fill="rgb(205,127,43)" fg:x="164" fg:w="1"/><text x="23.3161%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.14%)</title><rect x="23.2068%" y="677" width="0.1406%" height="15" fill="rgb(250,162,2)" fg:x="165" fg:w="1"/><text x="23.4568%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.14%)</title><rect x="23.2068%" y="661" width="0.1406%" height="15" fill="rgb(220,13,41)" fg:x="165" fg:w="1"/><text x="23.4568%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.14%)</title><rect x="23.2068%" y="645" width="0.1406%" height="15" fill="rgb(249,221,25)" fg:x="165" fg:w="1"/><text x="23.4568%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="23.2068%" y="629" width="0.1406%" height="15" fill="rgb(215,208,19)" fg:x="165" fg:w="1"/><text x="23.4568%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="23.2068%" y="613" width="0.1406%" height="15" fill="rgb(236,175,2)" fg:x="165" fg:w="1"/><text x="23.4568%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="23.2068%" y="597" width="0.1406%" height="15" fill="rgb(241,52,2)" fg:x="165" fg:w="1"/><text x="23.4568%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="23.2068%" y="581" width="0.1406%" height="15" fill="rgb(248,140,14)" fg:x="165" fg:w="1"/><text x="23.4568%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.14%)</title><rect x="23.2068%" y="565" width="0.1406%" height="15" fill="rgb(253,22,42)" fg:x="165" fg:w="1"/><text x="23.4568%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="23.2068%" y="549" width="0.1406%" height="15" fill="rgb(234,61,47)" fg:x="165" fg:w="1"/><text x="23.4568%" y="559.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.28%)</title><rect x="23.3474%" y="677" width="0.2813%" height="15" fill="rgb(208,226,15)" fg:x="166" fg:w="2"/><text x="23.5974%" y="687.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.28%)</title><rect x="23.3474%" y="661" width="0.2813%" height="15" fill="rgb(217,221,4)" fg:x="166" fg:w="2"/><text x="23.5974%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.28%)</title><rect x="23.3474%" y="645" width="0.2813%" height="15" fill="rgb(212,174,34)" fg:x="166" fg:w="2"/><text x="23.5974%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.14%)</title><rect x="23.4880%" y="629" width="0.1406%" height="15" fill="rgb(253,83,4)" fg:x="167" fg:w="1"/><text x="23.7380%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.14%)</title><rect x="23.4880%" y="613" width="0.1406%" height="15" fill="rgb(250,195,49)" fg:x="167" fg:w="1"/><text x="23.7380%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.14%)</title><rect x="23.4880%" y="597" width="0.1406%" height="15" fill="rgb(241,192,25)" fg:x="167" fg:w="1"/><text x="23.7380%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="23.4880%" y="581" width="0.1406%" height="15" fill="rgb(208,124,10)" fg:x="167" fg:w="1"/><text x="23.7380%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="23.4880%" y="565" width="0.1406%" height="15" fill="rgb(222,33,0)" fg:x="167" fg:w="1"/><text x="23.7380%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="23.4880%" y="549" width="0.1406%" height="15" fill="rgb(234,209,28)" fg:x="167" fg:w="1"/><text x="23.7380%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.14%)</title><rect x="23.4880%" y="533" width="0.1406%" height="15" fill="rgb(224,11,23)" fg:x="167" fg:w="1"/><text x="23.7380%" y="543.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.14%)</title><rect x="23.6287%" y="629" width="0.1406%" height="15" fill="rgb(232,99,1)" fg:x="168" fg:w="1"/><text x="23.8787%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="23.6287%" y="613" width="0.1406%" height="15" fill="rgb(237,95,45)" fg:x="168" fg:w="1"/><text x="23.8787%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="23.6287%" y="597" width="0.1406%" height="15" fill="rgb(208,109,11)" fg:x="168" fg:w="1"/><text x="23.8787%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="23.6287%" y="581" width="0.1406%" height="15" fill="rgb(216,190,48)" fg:x="168" fg:w="1"/><text x="23.8787%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.28%)</title><rect x="23.7693%" y="533" width="0.2813%" height="15" fill="rgb(251,171,36)" fg:x="169" fg:w="2"/><text x="24.0193%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.28%)</title><rect x="23.7693%" y="517" width="0.2813%" height="15" fill="rgb(230,62,22)" fg:x="169" fg:w="2"/><text x="24.0193%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.28%)</title><rect x="23.7693%" y="501" width="0.2813%" height="15" fill="rgb(225,114,35)" fg:x="169" fg:w="2"/><text x="24.0193%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.14%)</title><rect x="23.9100%" y="485" width="0.1406%" height="15" fill="rgb(215,118,42)" fg:x="170" fg:w="1"/><text x="24.1600%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="23.9100%" y="469" width="0.1406%" height="15" fill="rgb(243,119,21)" fg:x="170" fg:w="1"/><text x="24.1600%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.14%)</title><rect x="24.0506%" y="501" width="0.1406%" height="15" fill="rgb(252,177,53)" fg:x="171" fg:w="1"/><text x="24.3006%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.14%)</title><rect x="24.0506%" y="485" width="0.1406%" height="15" fill="rgb(237,209,29)" fg:x="171" fg:w="1"/><text x="24.3006%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 1.83%)</title><rect x="24.1913%" y="437" width="1.8284%" height="15" fill="rgb(212,65,23)" fg:x="172" fg:w="13"/><text x="24.4413%" y="447.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="25.8790%" y="421" width="0.1406%" height="15" fill="rgb(230,222,46)" fg:x="184" fg:w="1"/><text x="26.1290%" y="431.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (18 samples, 2.53%)</title><rect x="23.7693%" y="565" width="2.5316%" height="15" fill="rgb(215,135,32)" fg:x="169" fg:w="18"/><text x="24.0193%" y="575.50">ha..</text></g><g><title>hashbrown::map::make_hash (18 samples, 2.53%)</title><rect x="23.7693%" y="549" width="2.5316%" height="15" fill="rgb(246,101,22)" fg:x="169" fg:w="18"/><text x="24.0193%" y="559.50">ha..</text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::hash::Hash&gt;::hash (16 samples, 2.25%)</title><rect x="24.0506%" y="533" width="2.2504%" height="15" fill="rgb(206,107,13)" fg:x="171" fg:w="16"/><text x="24.3006%" y="543.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (16 samples, 2.25%)</title><rect x="24.0506%" y="517" width="2.2504%" height="15" fill="rgb(250,100,44)" fg:x="171" fg:w="16"/><text x="24.3006%" y="527.50">&lt;..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (15 samples, 2.11%)</title><rect x="24.1913%" y="501" width="2.1097%" height="15" fill="rgb(231,147,38)" fg:x="172" fg:w="15"/><text x="24.4413%" y="511.50">c..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 2.11%)</title><rect x="24.1913%" y="485" width="2.1097%" height="15" fill="rgb(229,8,40)" fg:x="172" fg:w="15"/><text x="24.4413%" y="495.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 2.11%)</title><rect x="24.1913%" y="469" width="2.1097%" height="15" fill="rgb(221,135,30)" fg:x="172" fg:w="15"/><text x="24.4413%" y="479.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 2.11%)</title><rect x="24.1913%" y="453" width="2.1097%" height="15" fill="rgb(249,193,18)" fg:x="172" fg:w="15"/><text x="24.4413%" y="463.50">&lt;..</text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.28%)</title><rect x="26.0197%" y="437" width="0.2813%" height="15" fill="rgb(209,133,39)" fg:x="185" fg:w="2"/><text x="26.2697%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="26.1603%" y="421" width="0.1406%" height="15" fill="rgb(232,100,14)" fg:x="186" fg:w="1"/><text x="26.4103%" y="431.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="26.3010%" y="469" width="0.1406%" height="15" fill="rgb(224,185,1)" fg:x="187" fg:w="1"/><text x="26.5510%" y="479.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="26.3010%" y="453" width="0.1406%" height="15" fill="rgb(223,139,8)" fg:x="187" fg:w="1"/><text x="26.5510%" y="463.50"></text></g><g><title>do_anonymous_page (1 samples, 0.14%)</title><rect x="26.3010%" y="437" width="0.1406%" height="15" fill="rgb(232,213,38)" fg:x="187" fg:w="1"/><text x="26.5510%" y="447.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="26.3010%" y="421" width="0.1406%" height="15" fill="rgb(207,94,22)" fg:x="187" fg:w="1"/><text x="26.5510%" y="431.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="26.3010%" y="405" width="0.1406%" height="15" fill="rgb(219,183,54)" fg:x="187" fg:w="1"/><text x="26.5510%" y="415.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.14%)</title><rect x="26.3010%" y="389" width="0.1406%" height="15" fill="rgb(216,185,54)" fg:x="187" fg:w="1"/><text x="26.5510%" y="399.50"></text></g><g><title>clear_page_rep (1 samples, 0.14%)</title><rect x="26.3010%" y="373" width="0.1406%" height="15" fill="rgb(254,217,39)" fg:x="187" fg:w="1"/><text x="26.5510%" y="383.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.28%)</title><rect x="26.3010%" y="517" width="0.2813%" height="15" fill="rgb(240,178,23)" fg:x="187" fg:w="2"/><text x="26.5510%" y="527.50"></text></g><g><title>exc_page_fault (2 samples, 0.28%)</title><rect x="26.3010%" y="501" width="0.2813%" height="15" fill="rgb(218,11,47)" fg:x="187" fg:w="2"/><text x="26.5510%" y="511.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.28%)</title><rect x="26.3010%" y="485" width="0.2813%" height="15" fill="rgb(218,51,51)" fg:x="187" fg:w="2"/><text x="26.5510%" y="495.50"></text></g><g><title>mem_cgroup_from_task (1 samples, 0.14%)</title><rect x="26.4416%" y="469" width="0.1406%" height="15" fill="rgb(238,126,27)" fg:x="188" fg:w="1"/><text x="26.6916%" y="479.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (22 samples, 3.09%)</title><rect x="23.6287%" y="677" width="3.0942%" height="15" fill="rgb(249,202,22)" fg:x="168" fg:w="22"/><text x="23.8787%" y="687.50">std..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (22 samples, 3.09%)</title><rect x="23.6287%" y="661" width="3.0942%" height="15" fill="rgb(254,195,49)" fg:x="168" fg:w="22"/><text x="23.8787%" y="671.50">has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 3.09%)</title><rect x="23.6287%" y="645" width="3.0942%" height="15" fill="rgb(208,123,14)" fg:x="168" fg:w="22"/><text x="23.8787%" y="655.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (21 samples, 2.95%)</title><rect x="23.7693%" y="629" width="2.9536%" height="15" fill="rgb(224,200,8)" fg:x="169" fg:w="21"/><text x="24.0193%" y="639.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (21 samples, 2.95%)</title><rect x="23.7693%" y="613" width="2.9536%" height="15" fill="rgb(217,61,36)" fg:x="169" fg:w="21"/><text x="24.0193%" y="623.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (21 samples, 2.95%)</title><rect x="23.7693%" y="597" width="2.9536%" height="15" fill="rgb(206,35,45)" fg:x="169" fg:w="21"/><text x="24.0193%" y="607.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (21 samples, 2.95%)</title><rect x="23.7693%" y="581" width="2.9536%" height="15" fill="rgb(217,65,33)" fg:x="169" fg:w="21"/><text x="24.0193%" y="591.50">has..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (3 samples, 0.42%)</title><rect x="26.3010%" y="565" width="0.4219%" height="15" fill="rgb(222,158,48)" fg:x="187" fg:w="3"/><text x="26.5510%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (3 samples, 0.42%)</title><rect x="26.3010%" y="549" width="0.4219%" height="15" fill="rgb(254,2,54)" fg:x="187" fg:w="3"/><text x="26.5510%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.42%)</title><rect x="26.3010%" y="533" width="0.4219%" height="15" fill="rgb(250,143,38)" fg:x="187" fg:w="3"/><text x="26.5510%" y="543.50"></text></g><g><title>sync_regs (1 samples, 0.14%)</title><rect x="26.5823%" y="517" width="0.1406%" height="15" fill="rgb(248,25,0)" fg:x="189" fg:w="1"/><text x="26.8323%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.14%)</title><rect x="27.2855%" y="485" width="0.1406%" height="15" fill="rgb(206,152,27)" fg:x="194" fg:w="1"/><text x="27.5355%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.14%)</title><rect x="27.2855%" y="469" width="0.1406%" height="15" fill="rgb(240,77,30)" fg:x="194" fg:w="1"/><text x="27.5355%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.14%)</title><rect x="27.2855%" y="453" width="0.1406%" height="15" fill="rgb(231,5,3)" fg:x="194" fg:w="1"/><text x="27.5355%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.14%)</title><rect x="27.8481%" y="389" width="0.1406%" height="15" fill="rgb(207,226,32)" fg:x="198" fg:w="1"/><text x="28.0981%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.14%)</title><rect x="27.8481%" y="373" width="0.1406%" height="15" fill="rgb(222,207,47)" fg:x="198" fg:w="1"/><text x="28.0981%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (6 samples, 0.84%)</title><rect x="27.4262%" y="485" width="0.8439%" height="15" fill="rgb(229,115,45)" fg:x="195" fg:w="6"/><text x="27.6762%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.84%)</title><rect x="27.4262%" y="469" width="0.8439%" height="15" fill="rgb(224,191,6)" fg:x="195" fg:w="6"/><text x="27.6762%" y="479.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.84%)</title><rect x="27.4262%" y="453" width="0.8439%" height="15" fill="rgb(230,227,24)" fg:x="195" fg:w="6"/><text x="27.6762%" y="463.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (6 samples, 0.84%)</title><rect x="27.4262%" y="437" width="0.8439%" height="15" fill="rgb(228,80,19)" fg:x="195" fg:w="6"/><text x="27.6762%" y="447.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (6 samples, 0.84%)</title><rect x="27.4262%" y="421" width="0.8439%" height="15" fill="rgb(247,229,0)" fg:x="195" fg:w="6"/><text x="27.6762%" y="431.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (6 samples, 0.84%)</title><rect x="27.4262%" y="405" width="0.8439%" height="15" fill="rgb(237,194,15)" fg:x="195" fg:w="6"/><text x="27.6762%" y="415.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (2 samples, 0.28%)</title><rect x="27.9887%" y="389" width="0.2813%" height="15" fill="rgb(219,203,20)" fg:x="199" fg:w="2"/><text x="28.2387%" y="399.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (10 samples, 1.41%)</title><rect x="27.0042%" y="565" width="1.4065%" height="15" fill="rgb(234,128,8)" fg:x="192" fg:w="10"/><text x="27.2542%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (10 samples, 1.41%)</title><rect x="27.0042%" y="549" width="1.4065%" height="15" fill="rgb(248,202,8)" fg:x="192" fg:w="10"/><text x="27.2542%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 1.41%)</title><rect x="27.0042%" y="533" width="1.4065%" height="15" fill="rgb(206,104,37)" fg:x="192" fg:w="10"/><text x="27.2542%" y="543.50"></text></g><g><title>y2021::d12::main::traverse::{{closure}} (10 samples, 1.41%)</title><rect x="27.0042%" y="517" width="1.4065%" height="15" fill="rgb(223,8,27)" fg:x="192" fg:w="10"/><text x="27.2542%" y="527.50"></text></g><g><title>y2021::d12::node_path::NodePath::count_node (9 samples, 1.27%)</title><rect x="27.1449%" y="501" width="1.2658%" height="15" fill="rgb(216,217,28)" fg:x="193" fg:w="9"/><text x="27.3949%" y="511.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (1 samples, 0.14%)</title><rect x="28.2700%" y="485" width="0.1406%" height="15" fill="rgb(249,199,1)" fg:x="201" fg:w="1"/><text x="28.5200%" y="495.50"></text></g><g><title>&lt;&amp;alloc::string::String as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.14%)</title><rect x="28.2700%" y="469" width="0.1406%" height="15" fill="rgb(240,85,17)" fg:x="201" fg:w="1"/><text x="28.5200%" y="479.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.14%)</title><rect x="28.2700%" y="453" width="0.1406%" height="15" fill="rgb(206,108,45)" fg:x="201" fg:w="1"/><text x="28.5200%" y="463.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.14%)</title><rect x="28.2700%" y="437" width="0.1406%" height="15" fill="rgb(245,210,41)" fg:x="201" fg:w="1"/><text x="28.5200%" y="447.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.14%)</title><rect x="28.2700%" y="421" width="0.1406%" height="15" fill="rgb(206,13,37)" fg:x="201" fg:w="1"/><text x="28.5200%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="28.4107%" y="501" width="0.1406%" height="15" fill="rgb(250,61,18)" fg:x="202" fg:w="1"/><text x="28.6607%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.14%)</title><rect x="28.4107%" y="485" width="0.1406%" height="15" fill="rgb(235,172,48)" fg:x="202" fg:w="1"/><text x="28.6607%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.14%)</title><rect x="28.4107%" y="469" width="0.1406%" height="15" fill="rgb(249,201,17)" fg:x="202" fg:w="1"/><text x="28.6607%" y="479.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.14%)</title><rect x="28.4107%" y="453" width="0.1406%" height="15" fill="rgb(219,208,6)" fg:x="202" fg:w="1"/><text x="28.6607%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="28.4107%" y="437" width="0.1406%" height="15" fill="rgb(248,31,23)" fg:x="202" fg:w="1"/><text x="28.6607%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="28.4107%" y="421" width="0.1406%" height="15" fill="rgb(245,15,42)" fg:x="202" fg:w="1"/><text x="28.6607%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="28.4107%" y="405" width="0.1406%" height="15" fill="rgb(222,217,39)" fg:x="202" fg:w="1"/><text x="28.6607%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="28.5513%" y="469" width="0.1406%" height="15" fill="rgb(210,219,27)" fg:x="203" fg:w="1"/><text x="28.8013%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="28.5513%" y="453" width="0.1406%" height="15" fill="rgb(252,166,36)" fg:x="203" fg:w="1"/><text x="28.8013%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="28.5513%" y="437" width="0.1406%" height="15" fill="rgb(245,132,34)" fg:x="203" fg:w="1"/><text x="28.8013%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.14%)</title><rect x="28.5513%" y="421" width="0.1406%" height="15" fill="rgb(236,54,3)" fg:x="203" fg:w="1"/><text x="28.8013%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.83%)</title><rect x="27.0042%" y="661" width="1.8284%" height="15" fill="rgb(241,173,43)" fg:x="192" fg:w="13"/><text x="27.2542%" y="671.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (13 samples, 1.83%)</title><rect x="27.0042%" y="645" width="1.8284%" height="15" fill="rgb(215,190,9)" fg:x="192" fg:w="13"/><text x="27.2542%" y="655.50">c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 1.83%)</title><rect x="27.0042%" y="629" width="1.8284%" height="15" fill="rgb(242,101,16)" fg:x="192" fg:w="13"/><text x="27.2542%" y="639.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 1.83%)</title><rect x="27.0042%" y="613" width="1.8284%" height="15" fill="rgb(223,190,21)" fg:x="192" fg:w="13"/><text x="27.2542%" y="623.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 1.83%)</title><rect x="27.0042%" y="597" width="1.8284%" height="15" fill="rgb(215,228,25)" fg:x="192" fg:w="13"/><text x="27.2542%" y="607.50">c..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13 samples, 1.83%)</title><rect x="27.0042%" y="581" width="1.8284%" height="15" fill="rgb(225,36,22)" fg:x="192" fg:w="13"/><text x="27.2542%" y="591.50">c..</text></g><g><title>y2021::d12::main::traverse::{{closure}} (3 samples, 0.42%)</title><rect x="28.4107%" y="565" width="0.4219%" height="15" fill="rgb(251,106,46)" fg:x="202" fg:w="3"/><text x="28.6607%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.42%)</title><rect x="28.4107%" y="549" width="0.4219%" height="15" fill="rgb(208,90,1)" fg:x="202" fg:w="3"/><text x="28.6607%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.42%)</title><rect x="28.4107%" y="533" width="0.4219%" height="15" fill="rgb(243,10,4)" fg:x="202" fg:w="3"/><text x="28.6607%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.42%)</title><rect x="28.4107%" y="517" width="0.4219%" height="15" fill="rgb(212,137,27)" fg:x="202" fg:w="3"/><text x="28.6607%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.28%)</title><rect x="28.5513%" y="501" width="0.2813%" height="15" fill="rgb(231,220,49)" fg:x="203" fg:w="2"/><text x="28.8013%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.28%)</title><rect x="28.5513%" y="485" width="0.2813%" height="15" fill="rgb(237,96,20)" fg:x="203" fg:w="2"/><text x="28.8013%" y="495.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.14%)</title><rect x="28.6920%" y="469" width="0.1406%" height="15" fill="rgb(239,229,30)" fg:x="204" fg:w="1"/><text x="28.9420%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="28.6920%" y="453" width="0.1406%" height="15" fill="rgb(219,65,33)" fg:x="204" fg:w="1"/><text x="28.9420%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.14%)</title><rect x="28.6920%" y="437" width="0.1406%" height="15" fill="rgb(243,134,7)" fg:x="204" fg:w="1"/><text x="28.9420%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.14%)</title><rect x="28.6920%" y="421" width="0.1406%" height="15" fill="rgb(216,177,54)" fg:x="204" fg:w="1"/><text x="28.9420%" y="431.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.14%)</title><rect x="28.6920%" y="405" width="0.1406%" height="15" fill="rgb(211,160,20)" fg:x="204" fg:w="1"/><text x="28.9420%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.14%)</title><rect x="28.6920%" y="389" width="0.1406%" height="15" fill="rgb(239,85,39)" fg:x="204" fg:w="1"/><text x="28.9420%" y="399.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="28.6920%" y="373" width="0.1406%" height="15" fill="rgb(232,125,22)" fg:x="204" fg:w="1"/><text x="28.9420%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="28.8326%" y="645" width="0.1406%" height="15" fill="rgb(244,57,34)" fg:x="205" fg:w="1"/><text x="29.0826%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="28.8326%" y="629" width="0.1406%" height="15" fill="rgb(214,203,32)" fg:x="205" fg:w="1"/><text x="29.0826%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="28.8326%" y="613" width="0.1406%" height="15" fill="rgb(207,58,43)" fg:x="205" fg:w="1"/><text x="29.0826%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="28.8326%" y="597" width="0.1406%" height="15" fill="rgb(215,193,15)" fg:x="205" fg:w="1"/><text x="29.0826%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="28.8326%" y="581" width="0.1406%" height="15" fill="rgb(232,15,44)" fg:x="205" fg:w="1"/><text x="29.0826%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="28.8326%" y="565" width="0.1406%" height="15" fill="rgb(212,3,48)" fg:x="205" fg:w="1"/><text x="29.0826%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="28.8326%" y="549" width="0.1406%" height="15" fill="rgb(218,128,7)" fg:x="205" fg:w="1"/><text x="29.0826%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="28.8326%" y="533" width="0.1406%" height="15" fill="rgb(226,216,39)" fg:x="205" fg:w="1"/><text x="29.0826%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="28.8326%" y="517" width="0.1406%" height="15" fill="rgb(243,47,51)" fg:x="205" fg:w="1"/><text x="29.0826%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="28.8326%" y="501" width="0.1406%" height="15" fill="rgb(241,183,40)" fg:x="205" fg:w="1"/><text x="29.0826%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="28.8326%" y="485" width="0.1406%" height="15" fill="rgb(231,217,32)" fg:x="205" fg:w="1"/><text x="29.0826%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="28.8326%" y="469" width="0.1406%" height="15" fill="rgb(229,61,38)" fg:x="205" fg:w="1"/><text x="29.0826%" y="479.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="28.8326%" y="453" width="0.1406%" height="15" fill="rgb(225,210,5)" fg:x="205" fg:w="1"/><text x="29.0826%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.56%)</title><rect x="29.2546%" y="501" width="0.5626%" height="15" fill="rgb(231,79,45)" fg:x="208" fg:w="4"/><text x="29.5046%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.56%)</title><rect x="29.2546%" y="485" width="0.5626%" height="15" fill="rgb(224,100,7)" fg:x="208" fg:w="4"/><text x="29.5046%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.56%)</title><rect x="29.2546%" y="469" width="0.5626%" height="15" fill="rgb(241,198,18)" fg:x="208" fg:w="4"/><text x="29.5046%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.56%)</title><rect x="29.2546%" y="453" width="0.5626%" height="15" fill="rgb(252,97,53)" fg:x="208" fg:w="4"/><text x="29.5046%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.56%)</title><rect x="29.2546%" y="437" width="0.5626%" height="15" fill="rgb(220,88,7)" fg:x="208" fg:w="4"/><text x="29.5046%" y="447.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.56%)</title><rect x="29.2546%" y="421" width="0.5626%" height="15" fill="rgb(213,176,14)" fg:x="208" fg:w="4"/><text x="29.5046%" y="431.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.56%)</title><rect x="29.2546%" y="405" width="0.5626%" height="15" fill="rgb(246,73,7)" fg:x="208" fg:w="4"/><text x="29.5046%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.98%)</title><rect x="28.9733%" y="581" width="0.9845%" height="15" fill="rgb(245,64,36)" fg:x="206" fg:w="7"/><text x="29.2233%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.70%)</title><rect x="29.2546%" y="565" width="0.7032%" height="15" fill="rgb(245,80,10)" fg:x="208" fg:w="5"/><text x="29.5046%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.70%)</title><rect x="29.2546%" y="549" width="0.7032%" height="15" fill="rgb(232,107,50)" fg:x="208" fg:w="5"/><text x="29.5046%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.70%)</title><rect x="29.2546%" y="533" width="0.7032%" height="15" fill="rgb(253,3,0)" fg:x="208" fg:w="5"/><text x="29.5046%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.70%)</title><rect x="29.2546%" y="517" width="0.7032%" height="15" fill="rgb(212,99,53)" fg:x="208" fg:w="5"/><text x="29.5046%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.14%)</title><rect x="29.8172%" y="501" width="0.1406%" height="15" fill="rgb(249,111,54)" fg:x="212" fg:w="1"/><text x="30.0672%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="29.8172%" y="485" width="0.1406%" height="15" fill="rgb(249,55,30)" fg:x="212" fg:w="1"/><text x="30.0672%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.14%)</title><rect x="29.8172%" y="469" width="0.1406%" height="15" fill="rgb(237,47,42)" fg:x="212" fg:w="1"/><text x="30.0672%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="29.9578%" y="485" width="0.1406%" height="15" fill="rgb(211,20,18)" fg:x="213" fg:w="1"/><text x="30.2078%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="29.9578%" y="469" width="0.1406%" height="15" fill="rgb(231,203,46)" fg:x="213" fg:w="1"/><text x="30.2078%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="29.9578%" y="581" width="0.2813%" height="15" fill="rgb(237,142,3)" fg:x="213" fg:w="2"/><text x="30.2078%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="29.9578%" y="565" width="0.2813%" height="15" fill="rgb(241,107,1)" fg:x="213" fg:w="2"/><text x="30.2078%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="29.9578%" y="549" width="0.2813%" height="15" fill="rgb(229,83,13)" fg:x="213" fg:w="2"/><text x="30.2078%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.28%)</title><rect x="29.9578%" y="533" width="0.2813%" height="15" fill="rgb(241,91,40)" fg:x="213" fg:w="2"/><text x="30.2078%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="29.9578%" y="517" width="0.2813%" height="15" fill="rgb(225,3,45)" fg:x="213" fg:w="2"/><text x="30.2078%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="29.9578%" y="501" width="0.2813%" height="15" fill="rgb(244,223,14)" fg:x="213" fg:w="2"/><text x="30.2078%" y="511.50"></text></g><g><title>__rust_alloc (1 samples, 0.14%)</title><rect x="30.0985%" y="485" width="0.1406%" height="15" fill="rgb(224,124,37)" fg:x="214" fg:w="1"/><text x="30.3485%" y="495.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::clone::Clone&gt;::clone (11 samples, 1.55%)</title><rect x="28.8326%" y="661" width="1.5471%" height="15" fill="rgb(251,171,30)" fg:x="205" fg:w="11"/><text x="29.0826%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 1.41%)</title><rect x="28.9733%" y="645" width="1.4065%" height="15" fill="rgb(236,46,54)" fg:x="206" fg:w="10"/><text x="29.2233%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 1.41%)</title><rect x="28.9733%" y="629" width="1.4065%" height="15" fill="rgb(245,213,5)" fg:x="206" fg:w="10"/><text x="29.2233%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 1.41%)</title><rect x="28.9733%" y="613" width="1.4065%" height="15" fill="rgb(230,144,27)" fg:x="206" fg:w="10"/><text x="29.2233%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 1.41%)</title><rect x="28.9733%" y="597" width="1.4065%" height="15" fill="rgb(220,86,6)" fg:x="206" fg:w="10"/><text x="29.2233%" y="607.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.14%)</title><rect x="30.2391%" y="581" width="0.1406%" height="15" fill="rgb(240,20,13)" fg:x="215" fg:w="1"/><text x="30.4891%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.14%)</title><rect x="30.3797%" y="661" width="0.1406%" height="15" fill="rgb(217,89,34)" fg:x="216" fg:w="1"/><text x="30.6297%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="30.3797%" y="645" width="0.1406%" height="15" fill="rgb(229,13,5)" fg:x="216" fg:w="1"/><text x="30.6297%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="30.3797%" y="629" width="0.1406%" height="15" fill="rgb(244,67,35)" fg:x="216" fg:w="1"/><text x="30.6297%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="30.3797%" y="613" width="0.1406%" height="15" fill="rgb(221,40,2)" fg:x="216" fg:w="1"/><text x="30.6297%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="30.3797%" y="597" width="0.1406%" height="15" fill="rgb(237,157,21)" fg:x="216" fg:w="1"/><text x="30.6297%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="30.3797%" y="581" width="0.1406%" height="15" fill="rgb(222,94,11)" fg:x="216" fg:w="1"/><text x="30.6297%" y="591.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="30.3797%" y="565" width="0.1406%" height="15" fill="rgb(249,113,6)" fg:x="216" fg:w="1"/><text x="30.6297%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="30.5204%" y="629" width="0.1406%" height="15" fill="rgb(238,137,36)" fg:x="217" fg:w="1"/><text x="30.7704%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.14%)</title><rect x="30.5204%" y="613" width="0.1406%" height="15" fill="rgb(210,102,26)" fg:x="217" fg:w="1"/><text x="30.7704%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.14%)</title><rect x="30.5204%" y="597" width="0.1406%" height="15" fill="rgb(218,30,30)" fg:x="217" fg:w="1"/><text x="30.7704%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="30.5204%" y="581" width="0.1406%" height="15" fill="rgb(214,67,26)" fg:x="217" fg:w="1"/><text x="30.7704%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="30.5204%" y="565" width="0.1406%" height="15" fill="rgb(251,9,53)" fg:x="217" fg:w="1"/><text x="30.7704%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="30.5204%" y="549" width="0.1406%" height="15" fill="rgb(228,204,25)" fg:x="217" fg:w="1"/><text x="30.7704%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="30.5204%" y="533" width="0.1406%" height="15" fill="rgb(207,153,8)" fg:x="217" fg:w="1"/><text x="30.7704%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="30.5204%" y="517" width="0.1406%" height="15" fill="rgb(242,9,16)" fg:x="217" fg:w="1"/><text x="30.7704%" y="527.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="30.5204%" y="501" width="0.1406%" height="15" fill="rgb(217,211,10)" fg:x="217" fg:w="1"/><text x="30.7704%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d12::node_path::NodePath&gt; (2 samples, 0.28%)</title><rect x="30.5204%" y="661" width="0.2813%" height="15" fill="rgb(219,228,52)" fg:x="217" fg:w="2"/><text x="30.7704%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (2 samples, 0.28%)</title><rect x="30.5204%" y="645" width="0.2813%" height="15" fill="rgb(231,92,29)" fg:x="217" fg:w="2"/><text x="30.7704%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="30.6610%" y="629" width="0.1406%" height="15" fill="rgb(232,8,23)" fg:x="218" fg:w="1"/><text x="30.9110%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="30.6610%" y="613" width="0.1406%" height="15" fill="rgb(216,211,34)" fg:x="218" fg:w="1"/><text x="30.9110%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.14%)</title><rect x="30.8017%" y="661" width="0.1406%" height="15" fill="rgb(236,151,0)" fg:x="219" fg:w="1"/><text x="31.0517%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.14%)</title><rect x="30.8017%" y="645" width="0.1406%" height="15" fill="rgb(209,168,3)" fg:x="219" fg:w="1"/><text x="31.0517%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.14%)</title><rect x="30.8017%" y="629" width="0.1406%" height="15" fill="rgb(208,129,28)" fg:x="219" fg:w="1"/><text x="31.0517%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="30.8017%" y="613" width="0.1406%" height="15" fill="rgb(229,78,22)" fg:x="219" fg:w="1"/><text x="31.0517%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="30.8017%" y="597" width="0.1406%" height="15" fill="rgb(228,187,13)" fg:x="219" fg:w="1"/><text x="31.0517%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="30.8017%" y="581" width="0.1406%" height="15" fill="rgb(240,119,24)" fg:x="219" fg:w="1"/><text x="31.0517%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="30.8017%" y="565" width="0.1406%" height="15" fill="rgb(209,194,42)" fg:x="219" fg:w="1"/><text x="31.0517%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.14%)</title><rect x="30.8017%" y="549" width="0.1406%" height="15" fill="rgb(247,200,46)" fg:x="219" fg:w="1"/><text x="31.0517%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="30.8017%" y="533" width="0.1406%" height="15" fill="rgb(218,76,16)" fg:x="219" fg:w="1"/><text x="31.0517%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="30.9423%" y="581" width="0.1406%" height="15" fill="rgb(225,21,48)" fg:x="220" fg:w="1"/><text x="31.1923%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="30.9423%" y="565" width="0.1406%" height="15" fill="rgb(239,223,50)" fg:x="220" fg:w="1"/><text x="31.1923%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="30.9423%" y="549" width="0.1406%" height="15" fill="rgb(244,45,21)" fg:x="220" fg:w="1"/><text x="31.1923%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.14%)</title><rect x="30.9423%" y="533" width="0.1406%" height="15" fill="rgb(232,33,43)" fg:x="220" fg:w="1"/><text x="31.1923%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.14%)</title><rect x="31.0830%" y="549" width="0.1406%" height="15" fill="rgb(209,8,3)" fg:x="221" fg:w="1"/><text x="31.3330%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.14%)</title><rect x="31.0830%" y="533" width="0.1406%" height="15" fill="rgb(214,25,53)" fg:x="221" fg:w="1"/><text x="31.3330%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.42%)</title><rect x="30.9423%" y="597" width="0.4219%" height="15" fill="rgb(254,186,54)" fg:x="220" fg:w="3"/><text x="31.1923%" y="607.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::hash::Hash&gt;::hash (2 samples, 0.28%)</title><rect x="31.0830%" y="581" width="0.2813%" height="15" fill="rgb(208,174,49)" fg:x="221" fg:w="2"/><text x="31.3330%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.28%)</title><rect x="31.0830%" y="565" width="0.2813%" height="15" fill="rgb(233,191,51)" fg:x="221" fg:w="2"/><text x="31.3330%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.14%)</title><rect x="31.2236%" y="549" width="0.1406%" height="15" fill="rgb(222,134,10)" fg:x="222" fg:w="1"/><text x="31.4736%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="31.2236%" y="533" width="0.1406%" height="15" fill="rgb(230,226,20)" fg:x="222" fg:w="1"/><text x="31.4736%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="31.2236%" y="517" width="0.1406%" height="15" fill="rgb(251,111,25)" fg:x="222" fg:w="1"/><text x="31.4736%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="31.2236%" y="501" width="0.1406%" height="15" fill="rgb(224,40,46)" fg:x="222" fg:w="1"/><text x="31.4736%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.14%)</title><rect x="31.2236%" y="485" width="0.1406%" height="15" fill="rgb(236,108,47)" fg:x="222" fg:w="1"/><text x="31.4736%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="31.2236%" y="469" width="0.1406%" height="15" fill="rgb(234,93,0)" fg:x="222" fg:w="1"/><text x="31.4736%" y="479.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (4 samples, 0.56%)</title><rect x="30.9423%" y="661" width="0.5626%" height="15" fill="rgb(224,213,32)" fg:x="220" fg:w="4"/><text x="31.1923%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (4 samples, 0.56%)</title><rect x="30.9423%" y="645" width="0.5626%" height="15" fill="rgb(251,11,48)" fg:x="220" fg:w="4"/><text x="31.1923%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.56%)</title><rect x="30.9423%" y="629" width="0.5626%" height="15" fill="rgb(236,173,5)" fg:x="220" fg:w="4"/><text x="31.1923%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.56%)</title><rect x="30.9423%" y="613" width="0.5626%" height="15" fill="rgb(230,95,12)" fg:x="220" fg:w="4"/><text x="31.1923%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.14%)</title><rect x="31.3643%" y="597" width="0.1406%" height="15" fill="rgb(232,209,1)" fg:x="223" fg:w="1"/><text x="31.6143%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.14%)</title><rect x="31.3643%" y="581" width="0.1406%" height="15" fill="rgb(232,6,1)" fg:x="223" fg:w="1"/><text x="31.6143%" y="591.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.14%)</title><rect x="31.3643%" y="565" width="0.1406%" height="15" fill="rgb(210,224,50)" fg:x="223" fg:w="1"/><text x="31.6143%" y="575.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="31.3643%" y="549" width="0.1406%" height="15" fill="rgb(228,127,35)" fg:x="223" fg:w="1"/><text x="31.6143%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="31.3643%" y="533" width="0.1406%" height="15" fill="rgb(245,102,45)" fg:x="223" fg:w="1"/><text x="31.6143%" y="543.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.14%)</title><rect x="31.3643%" y="517" width="0.1406%" height="15" fill="rgb(214,1,49)" fg:x="223" fg:w="1"/><text x="31.6143%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.14%)</title><rect x="31.3643%" y="501" width="0.1406%" height="15" fill="rgb(226,163,40)" fg:x="223" fg:w="1"/><text x="31.6143%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.14%)</title><rect x="31.3643%" y="485" width="0.1406%" height="15" fill="rgb(239,212,28)" fg:x="223" fg:w="1"/><text x="31.6143%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.14%)</title><rect x="31.3643%" y="469" width="0.1406%" height="15" fill="rgb(220,20,13)" fg:x="223" fg:w="1"/><text x="31.6143%" y="479.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (7 samples, 0.98%)</title><rect x="31.5049%" y="549" width="0.9845%" height="15" fill="rgb(210,164,35)" fg:x="224" fg:w="7"/><text x="31.7549%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.98%)</title><rect x="31.5049%" y="533" width="0.9845%" height="15" fill="rgb(248,109,41)" fg:x="224" fg:w="7"/><text x="31.7549%" y="543.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::hash::Hash&gt;::hash (7 samples, 0.98%)</title><rect x="31.5049%" y="517" width="0.9845%" height="15" fill="rgb(238,23,50)" fg:x="224" fg:w="7"/><text x="31.7549%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (7 samples, 0.98%)</title><rect x="31.5049%" y="501" width="0.9845%" height="15" fill="rgb(211,48,49)" fg:x="224" fg:w="7"/><text x="31.7549%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (7 samples, 0.98%)</title><rect x="31.5049%" y="485" width="0.9845%" height="15" fill="rgb(223,36,21)" fg:x="224" fg:w="7"/><text x="31.7549%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.98%)</title><rect x="31.5049%" y="469" width="0.9845%" height="15" fill="rgb(207,123,46)" fg:x="224" fg:w="7"/><text x="31.7549%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.98%)</title><rect x="31.5049%" y="453" width="0.9845%" height="15" fill="rgb(240,218,32)" fg:x="224" fg:w="7"/><text x="31.7549%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.98%)</title><rect x="31.5049%" y="437" width="0.9845%" height="15" fill="rgb(252,5,43)" fg:x="224" fg:w="7"/><text x="31.7549%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.98%)</title><rect x="31.5049%" y="421" width="0.9845%" height="15" fill="rgb(252,84,19)" fg:x="224" fg:w="7"/><text x="31.7549%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.14%)</title><rect x="32.3488%" y="405" width="0.1406%" height="15" fill="rgb(243,152,39)" fg:x="230" fg:w="1"/><text x="32.5988%" y="415.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="32.4895%" y="405" width="0.1406%" height="15" fill="rgb(234,160,15)" fg:x="231" fg:w="1"/><text x="32.7395%" y="415.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="32.4895%" y="389" width="0.1406%" height="15" fill="rgb(237,34,20)" fg:x="231" fg:w="1"/><text x="32.7395%" y="399.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.14%)</title><rect x="32.4895%" y="373" width="0.1406%" height="15" fill="rgb(229,97,13)" fg:x="231" fg:w="1"/><text x="32.7395%" y="383.50"></text></g><g><title>clear_page_rep (1 samples, 0.14%)</title><rect x="32.4895%" y="357" width="0.1406%" height="15" fill="rgb(234,71,50)" fg:x="231" fg:w="1"/><text x="32.7395%" y="367.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (9 samples, 1.27%)</title><rect x="31.5049%" y="661" width="1.2658%" height="15" fill="rgb(253,155,4)" fg:x="224" fg:w="9"/><text x="31.7549%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (9 samples, 1.27%)</title><rect x="31.5049%" y="645" width="1.2658%" height="15" fill="rgb(222,185,37)" fg:x="224" fg:w="9"/><text x="31.7549%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 1.27%)</title><rect x="31.5049%" y="629" width="1.2658%" height="15" fill="rgb(251,177,13)" fg:x="224" fg:w="9"/><text x="31.7549%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (9 samples, 1.27%)</title><rect x="31.5049%" y="613" width="1.2658%" height="15" fill="rgb(250,179,40)" fg:x="224" fg:w="9"/><text x="31.7549%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (9 samples, 1.27%)</title><rect x="31.5049%" y="597" width="1.2658%" height="15" fill="rgb(242,44,2)" fg:x="224" fg:w="9"/><text x="31.7549%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 1.27%)</title><rect x="31.5049%" y="581" width="1.2658%" height="15" fill="rgb(216,177,13)" fg:x="224" fg:w="9"/><text x="31.7549%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (9 samples, 1.27%)</title><rect x="31.5049%" y="565" width="1.2658%" height="15" fill="rgb(216,106,43)" fg:x="224" fg:w="9"/><text x="31.7549%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (2 samples, 0.28%)</title><rect x="32.4895%" y="549" width="0.2813%" height="15" fill="rgb(216,183,2)" fg:x="231" fg:w="2"/><text x="32.7395%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (2 samples, 0.28%)</title><rect x="32.4895%" y="533" width="0.2813%" height="15" fill="rgb(249,75,3)" fg:x="231" fg:w="2"/><text x="32.7395%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.28%)</title><rect x="32.4895%" y="517" width="0.2813%" height="15" fill="rgb(219,67,39)" fg:x="231" fg:w="2"/><text x="32.7395%" y="527.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.28%)</title><rect x="32.4895%" y="501" width="0.2813%" height="15" fill="rgb(253,228,2)" fg:x="231" fg:w="2"/><text x="32.7395%" y="511.50"></text></g><g><title>exc_page_fault (2 samples, 0.28%)</title><rect x="32.4895%" y="485" width="0.2813%" height="15" fill="rgb(235,138,27)" fg:x="231" fg:w="2"/><text x="32.7395%" y="495.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.28%)</title><rect x="32.4895%" y="469" width="0.2813%" height="15" fill="rgb(236,97,51)" fg:x="231" fg:w="2"/><text x="32.7395%" y="479.50"></text></g><g><title>handle_mm_fault (2 samples, 0.28%)</title><rect x="32.4895%" y="453" width="0.2813%" height="15" fill="rgb(240,80,30)" fg:x="231" fg:w="2"/><text x="32.7395%" y="463.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.28%)</title><rect x="32.4895%" y="437" width="0.2813%" height="15" fill="rgb(230,178,19)" fg:x="231" fg:w="2"/><text x="32.7395%" y="447.50"></text></g><g><title>do_anonymous_page (2 samples, 0.28%)</title><rect x="32.4895%" y="421" width="0.2813%" height="15" fill="rgb(210,190,27)" fg:x="231" fg:w="2"/><text x="32.7395%" y="431.50"></text></g><g><title>cgroup_throttle_swaprate (1 samples, 0.14%)</title><rect x="32.6301%" y="405" width="0.1406%" height="15" fill="rgb(222,107,31)" fg:x="232" fg:w="1"/><text x="32.8801%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="33.0520%" y="645" width="0.2813%" height="15" fill="rgb(216,127,34)" fg:x="235" fg:w="2"/><text x="33.3020%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="33.0520%" y="629" width="0.2813%" height="15" fill="rgb(234,116,52)" fg:x="235" fg:w="2"/><text x="33.3020%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.28%)</title><rect x="33.0520%" y="613" width="0.2813%" height="15" fill="rgb(222,124,15)" fg:x="235" fg:w="2"/><text x="33.3020%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.28%)</title><rect x="33.0520%" y="597" width="0.2813%" height="15" fill="rgb(231,179,28)" fg:x="235" fg:w="2"/><text x="33.3020%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.28%)</title><rect x="33.0520%" y="581" width="0.2813%" height="15" fill="rgb(226,93,45)" fg:x="235" fg:w="2"/><text x="33.3020%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="33.0520%" y="565" width="0.2813%" height="15" fill="rgb(215,8,51)" fg:x="235" fg:w="2"/><text x="33.3020%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="33.0520%" y="549" width="0.2813%" height="15" fill="rgb(223,106,5)" fg:x="235" fg:w="2"/><text x="33.3020%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="33.0520%" y="533" width="0.2813%" height="15" fill="rgb(250,191,5)" fg:x="235" fg:w="2"/><text x="33.3020%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.28%)</title><rect x="33.0520%" y="517" width="0.2813%" height="15" fill="rgb(242,132,44)" fg:x="235" fg:w="2"/><text x="33.3020%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="33.0520%" y="501" width="0.2813%" height="15" fill="rgb(251,152,29)" fg:x="235" fg:w="2"/><text x="33.3020%" y="511.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="33.0520%" y="485" width="0.2813%" height="15" fill="rgb(218,179,5)" fg:x="235" fg:w="2"/><text x="33.3020%" y="495.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="33.0520%" y="469" width="0.2813%" height="15" fill="rgb(227,67,19)" fg:x="235" fg:w="2"/><text x="33.3020%" y="479.50"></text></g><g><title>_int_malloc (2 samples, 0.28%)</title><rect x="33.0520%" y="453" width="0.2813%" height="15" fill="rgb(233,119,31)" fg:x="235" fg:w="2"/><text x="33.3020%" y="463.50"></text></g><g><title>tcache_put (1 samples, 0.14%)</title><rect x="33.1927%" y="437" width="0.1406%" height="15" fill="rgb(241,120,22)" fg:x="236" fg:w="1"/><text x="33.4427%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="33.4740%" y="565" width="0.1406%" height="15" fill="rgb(224,102,30)" fg:x="238" fg:w="1"/><text x="33.7240%" y="575.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.14%)</title><rect x="33.4740%" y="549" width="0.1406%" height="15" fill="rgb(210,164,37)" fg:x="238" fg:w="1"/><text x="33.7240%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.14%)</title><rect x="33.4740%" y="533" width="0.1406%" height="15" fill="rgb(226,191,16)" fg:x="238" fg:w="1"/><text x="33.7240%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="33.6146%" y="485" width="0.1406%" height="15" fill="rgb(214,40,45)" fg:x="239" fg:w="1"/><text x="33.8646%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.14%)</title><rect x="33.6146%" y="469" width="0.1406%" height="15" fill="rgb(244,29,26)" fg:x="239" fg:w="1"/><text x="33.8646%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.14%)</title><rect x="33.6146%" y="453" width="0.1406%" height="15" fill="rgb(216,16,5)" fg:x="239" fg:w="1"/><text x="33.8646%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.14%)</title><rect x="33.6146%" y="437" width="0.1406%" height="15" fill="rgb(249,76,35)" fg:x="239" fg:w="1"/><text x="33.8646%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.14%)</title><rect x="33.6146%" y="421" width="0.1406%" height="15" fill="rgb(207,11,44)" fg:x="239" fg:w="1"/><text x="33.8646%" y="431.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="33.6146%" y="405" width="0.1406%" height="15" fill="rgb(228,190,49)" fg:x="239" fg:w="1"/><text x="33.8646%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (8 samples, 1.13%)</title><rect x="34.0366%" y="469" width="1.1252%" height="15" fill="rgb(214,173,12)" fg:x="242" fg:w="8"/><text x="34.2866%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 1.13%)</title><rect x="34.0366%" y="453" width="1.1252%" height="15" fill="rgb(218,26,35)" fg:x="242" fg:w="8"/><text x="34.2866%" y="463.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.98%)</title><rect x="34.1772%" y="437" width="0.9845%" height="15" fill="rgb(220,200,19)" fg:x="243" fg:w="7"/><text x="34.4272%" y="447.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (7 samples, 0.98%)</title><rect x="34.1772%" y="421" width="0.9845%" height="15" fill="rgb(239,95,49)" fg:x="243" fg:w="7"/><text x="34.4272%" y="431.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (7 samples, 0.98%)</title><rect x="34.1772%" y="405" width="0.9845%" height="15" fill="rgb(235,85,53)" fg:x="243" fg:w="7"/><text x="34.4272%" y="415.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (7 samples, 0.98%)</title><rect x="34.1772%" y="389" width="0.9845%" height="15" fill="rgb(233,133,31)" fg:x="243" fg:w="7"/><text x="34.4272%" y="399.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (5 samples, 0.70%)</title><rect x="34.4585%" y="373" width="0.7032%" height="15" fill="rgb(218,25,20)" fg:x="245" fg:w="5"/><text x="34.7085%" y="383.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (14 samples, 1.97%)</title><rect x="33.6146%" y="549" width="1.9691%" height="15" fill="rgb(252,210,38)" fg:x="239" fg:w="14"/><text x="33.8646%" y="559.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (14 samples, 1.97%)</title><rect x="33.6146%" y="533" width="1.9691%" height="15" fill="rgb(242,134,21)" fg:x="239" fg:w="14"/><text x="33.8646%" y="543.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14 samples, 1.97%)</title><rect x="33.6146%" y="517" width="1.9691%" height="15" fill="rgb(213,28,48)" fg:x="239" fg:w="14"/><text x="33.8646%" y="527.50">c..</text></g><g><title>y2021::d12::main::traverse::{{closure}} (14 samples, 1.97%)</title><rect x="33.6146%" y="501" width="1.9691%" height="15" fill="rgb(250,196,2)" fg:x="239" fg:w="14"/><text x="33.8646%" y="511.50">y..</text></g><g><title>y2021::d12::node_path::NodePath::count_node (13 samples, 1.83%)</title><rect x="33.7553%" y="485" width="1.8284%" height="15" fill="rgb(227,5,17)" fg:x="240" fg:w="13"/><text x="34.0053%" y="495.50">y..</text></g><g><title>core::str::&lt;impl str&gt;::matches (3 samples, 0.42%)</title><rect x="35.1617%" y="469" width="0.4219%" height="15" fill="rgb(221,226,24)" fg:x="250" fg:w="3"/><text x="35.4117%" y="479.50"></text></g><g><title>&lt;&amp;alloc::string::String as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.28%)</title><rect x="35.3024%" y="453" width="0.2813%" height="15" fill="rgb(211,5,48)" fg:x="251" fg:w="2"/><text x="35.5524%" y="463.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.28%)</title><rect x="35.3024%" y="437" width="0.2813%" height="15" fill="rgb(219,150,6)" fg:x="251" fg:w="2"/><text x="35.5524%" y="447.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.28%)</title><rect x="35.3024%" y="421" width="0.2813%" height="15" fill="rgb(251,46,16)" fg:x="251" fg:w="2"/><text x="35.5524%" y="431.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.14%)</title><rect x="35.4430%" y="405" width="0.1406%" height="15" fill="rgb(220,204,40)" fg:x="252" fg:w="1"/><text x="35.6930%" y="415.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.14%)</title><rect x="35.4430%" y="389" width="0.1406%" height="15" fill="rgb(211,85,2)" fg:x="252" fg:w="1"/><text x="35.6930%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.14%)</title><rect x="35.4430%" y="373" width="0.1406%" height="15" fill="rgb(229,17,7)" fg:x="252" fg:w="1"/><text x="35.6930%" y="383.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="35.4430%" y="357" width="0.1406%" height="15" fill="rgb(239,72,28)" fg:x="252" fg:w="1"/><text x="35.6930%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="35.5837%" y="437" width="0.1406%" height="15" fill="rgb(230,47,54)" fg:x="253" fg:w="1"/><text x="35.8337%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="35.5837%" y="421" width="0.1406%" height="15" fill="rgb(214,50,8)" fg:x="253" fg:w="1"/><text x="35.8337%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="35.5837%" y="405" width="0.1406%" height="15" fill="rgb(216,198,43)" fg:x="253" fg:w="1"/><text x="35.8337%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.28%)</title><rect x="35.5837%" y="469" width="0.2813%" height="15" fill="rgb(234,20,35)" fg:x="253" fg:w="2"/><text x="35.8337%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.28%)</title><rect x="35.5837%" y="453" width="0.2813%" height="15" fill="rgb(254,45,19)" fg:x="253" fg:w="2"/><text x="35.8337%" y="463.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.14%)</title><rect x="35.7243%" y="437" width="0.1406%" height="15" fill="rgb(219,14,44)" fg:x="254" fg:w="1"/><text x="35.9743%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="35.7243%" y="421" width="0.1406%" height="15" fill="rgb(217,220,26)" fg:x="254" fg:w="1"/><text x="35.9743%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="35.7243%" y="405" width="0.1406%" height="15" fill="rgb(213,158,28)" fg:x="254" fg:w="1"/><text x="35.9743%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="35.7243%" y="389" width="0.1406%" height="15" fill="rgb(252,51,52)" fg:x="254" fg:w="1"/><text x="35.9743%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.42%)</title><rect x="35.8650%" y="469" width="0.4219%" height="15" fill="rgb(246,89,16)" fg:x="255" fg:w="3"/><text x="36.1150%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.42%)</title><rect x="35.8650%" y="453" width="0.4219%" height="15" fill="rgb(216,158,49)" fg:x="255" fg:w="3"/><text x="36.1150%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.42%)</title><rect x="35.8650%" y="437" width="0.4219%" height="15" fill="rgb(236,107,19)" fg:x="255" fg:w="3"/><text x="36.1150%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.14%)</title><rect x="36.1463%" y="421" width="0.1406%" height="15" fill="rgb(228,185,30)" fg:x="257" fg:w="1"/><text x="36.3963%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="36.1463%" y="405" width="0.1406%" height="15" fill="rgb(246,134,8)" fg:x="257" fg:w="1"/><text x="36.3963%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.84%)</title><rect x="35.5837%" y="485" width="0.8439%" height="15" fill="rgb(214,143,50)" fg:x="253" fg:w="6"/><text x="35.8337%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.14%)</title><rect x="36.2869%" y="469" width="0.1406%" height="15" fill="rgb(228,75,8)" fg:x="258" fg:w="1"/><text x="36.5369%" y="479.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.14%)</title><rect x="36.2869%" y="453" width="0.1406%" height="15" fill="rgb(207,175,4)" fg:x="258" fg:w="1"/><text x="36.5369%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 3.66%)</title><rect x="33.3333%" y="645" width="3.6568%" height="15" fill="rgb(205,108,24)" fg:x="237" fg:w="26"/><text x="33.5833%" y="655.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find (26 samples, 3.66%)</title><rect x="33.3333%" y="629" width="3.6568%" height="15" fill="rgb(244,120,49)" fg:x="237" fg:w="26"/><text x="33.5833%" y="639.50">core..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 3.66%)</title><rect x="33.3333%" y="613" width="3.6568%" height="15" fill="rgb(223,47,38)" fg:x="237" fg:w="26"/><text x="33.5833%" y="623.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 3.66%)</title><rect x="33.3333%" y="597" width="3.6568%" height="15" fill="rgb(229,179,11)" fg:x="237" fg:w="26"/><text x="33.5833%" y="607.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25 samples, 3.52%)</title><rect x="33.4740%" y="581" width="3.5162%" height="15" fill="rgb(231,122,1)" fg:x="238" fg:w="25"/><text x="33.7240%" y="591.50">cor..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (24 samples, 3.38%)</title><rect x="33.6146%" y="565" width="3.3755%" height="15" fill="rgb(245,119,9)" fg:x="239" fg:w="24"/><text x="33.8646%" y="575.50">cor..</text></g><g><title>y2021::d12::main::traverse::{{closure}} (10 samples, 1.41%)</title><rect x="35.5837%" y="549" width="1.4065%" height="15" fill="rgb(241,163,25)" fg:x="253" fg:w="10"/><text x="35.8337%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 1.41%)</title><rect x="35.5837%" y="533" width="1.4065%" height="15" fill="rgb(217,214,3)" fg:x="253" fg:w="10"/><text x="35.8337%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 1.41%)</title><rect x="35.5837%" y="517" width="1.4065%" height="15" fill="rgb(240,86,28)" fg:x="253" fg:w="10"/><text x="35.8337%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 1.41%)</title><rect x="35.5837%" y="501" width="1.4065%" height="15" fill="rgb(215,47,9)" fg:x="253" fg:w="10"/><text x="35.8337%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.56%)</title><rect x="36.4276%" y="485" width="0.5626%" height="15" fill="rgb(252,25,45)" fg:x="259" fg:w="4"/><text x="36.6776%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.56%)</title><rect x="36.4276%" y="469" width="0.5626%" height="15" fill="rgb(251,164,9)" fg:x="259" fg:w="4"/><text x="36.6776%" y="479.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.42%)</title><rect x="36.5682%" y="453" width="0.4219%" height="15" fill="rgb(233,194,0)" fg:x="260" fg:w="3"/><text x="36.8182%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (3 samples, 0.42%)</title><rect x="36.5682%" y="437" width="0.4219%" height="15" fill="rgb(249,111,24)" fg:x="260" fg:w="3"/><text x="36.8182%" y="447.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.42%)</title><rect x="36.5682%" y="421" width="0.4219%" height="15" fill="rgb(250,223,3)" fg:x="260" fg:w="3"/><text x="36.8182%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.42%)</title><rect x="36.5682%" y="405" width="0.4219%" height="15" fill="rgb(236,178,37)" fg:x="260" fg:w="3"/><text x="36.8182%" y="415.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.42%)</title><rect x="36.5682%" y="389" width="0.4219%" height="15" fill="rgb(241,158,50)" fg:x="260" fg:w="3"/><text x="36.8182%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.42%)</title><rect x="36.5682%" y="373" width="0.4219%" height="15" fill="rgb(213,121,41)" fg:x="260" fg:w="3"/><text x="36.8182%" y="383.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.28%)</title><rect x="36.7089%" y="357" width="0.2813%" height="15" fill="rgb(240,92,3)" fg:x="261" fg:w="2"/><text x="36.9589%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="37.1308%" y="629" width="0.1406%" height="15" fill="rgb(205,123,3)" fg:x="264" fg:w="1"/><text x="37.3808%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="37.1308%" y="613" width="0.1406%" height="15" fill="rgb(205,97,47)" fg:x="264" fg:w="1"/><text x="37.3808%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="37.1308%" y="597" width="0.1406%" height="15" fill="rgb(247,152,14)" fg:x="264" fg:w="1"/><text x="37.3808%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="37.1308%" y="581" width="0.1406%" height="15" fill="rgb(248,195,53)" fg:x="264" fg:w="1"/><text x="37.3808%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="37.1308%" y="565" width="0.1406%" height="15" fill="rgb(226,201,16)" fg:x="264" fg:w="1"/><text x="37.3808%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="37.1308%" y="549" width="0.1406%" height="15" fill="rgb(205,98,0)" fg:x="264" fg:w="1"/><text x="37.3808%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="37.1308%" y="533" width="0.1406%" height="15" fill="rgb(214,191,48)" fg:x="264" fg:w="1"/><text x="37.3808%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="37.1308%" y="517" width="0.1406%" height="15" fill="rgb(237,112,39)" fg:x="264" fg:w="1"/><text x="37.3808%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="37.1308%" y="501" width="0.1406%" height="15" fill="rgb(247,203,27)" fg:x="264" fg:w="1"/><text x="37.3808%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="37.1308%" y="485" width="0.1406%" height="15" fill="rgb(235,124,28)" fg:x="264" fg:w="1"/><text x="37.3808%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="37.1308%" y="469" width="0.1406%" height="15" fill="rgb(208,207,46)" fg:x="264" fg:w="1"/><text x="37.3808%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="37.1308%" y="453" width="0.1406%" height="15" fill="rgb(234,176,4)" fg:x="264" fg:w="1"/><text x="37.3808%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="37.1308%" y="437" width="0.1406%" height="15" fill="rgb(230,133,28)" fg:x="264" fg:w="1"/><text x="37.3808%" y="447.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="37.1308%" y="421" width="0.1406%" height="15" fill="rgb(211,137,40)" fg:x="264" fg:w="1"/><text x="37.3808%" y="431.50"></text></g><g><title>exc_page_fault (1 samples, 0.14%)</title><rect x="37.1308%" y="405" width="0.1406%" height="15" fill="rgb(254,35,13)" fg:x="264" fg:w="1"/><text x="37.3808%" y="415.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="37.1308%" y="389" width="0.1406%" height="15" fill="rgb(225,49,51)" fg:x="264" fg:w="1"/><text x="37.3808%" y="399.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="37.1308%" y="373" width="0.1406%" height="15" fill="rgb(251,10,15)" fg:x="264" fg:w="1"/><text x="37.3808%" y="383.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="37.1308%" y="357" width="0.1406%" height="15" fill="rgb(228,207,15)" fg:x="264" fg:w="1"/><text x="37.3808%" y="367.50"></text></g><g><title>do_anonymous_page (1 samples, 0.14%)</title><rect x="37.1308%" y="341" width="0.1406%" height="15" fill="rgb(241,99,19)" fg:x="264" fg:w="1"/><text x="37.3808%" y="351.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="37.1308%" y="325" width="0.1406%" height="15" fill="rgb(207,104,49)" fg:x="264" fg:w="1"/><text x="37.3808%" y="335.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="37.1308%" y="309" width="0.1406%" height="15" fill="rgb(234,99,18)" fg:x="264" fg:w="1"/><text x="37.3808%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.56%)</title><rect x="37.2714%" y="565" width="0.5626%" height="15" fill="rgb(213,191,49)" fg:x="265" fg:w="4"/><text x="37.5214%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="37.6934%" y="549" width="0.1406%" height="15" fill="rgb(210,226,19)" fg:x="268" fg:w="1"/><text x="37.9434%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="37.6934%" y="533" width="0.1406%" height="15" fill="rgb(229,97,18)" fg:x="268" fg:w="1"/><text x="37.9434%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="37.6934%" y="517" width="0.1406%" height="15" fill="rgb(211,167,15)" fg:x="268" fg:w="1"/><text x="37.9434%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="37.6934%" y="501" width="0.1406%" height="15" fill="rgb(210,169,34)" fg:x="268" fg:w="1"/><text x="37.9434%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="37.6934%" y="485" width="0.1406%" height="15" fill="rgb(241,121,31)" fg:x="268" fg:w="1"/><text x="37.9434%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="37.6934%" y="469" width="0.1406%" height="15" fill="rgb(232,40,11)" fg:x="268" fg:w="1"/><text x="37.9434%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="37.6934%" y="453" width="0.1406%" height="15" fill="rgb(205,86,26)" fg:x="268" fg:w="1"/><text x="37.9434%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="37.6934%" y="437" width="0.1406%" height="15" fill="rgb(231,126,28)" fg:x="268" fg:w="1"/><text x="37.9434%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="37.6934%" y="421" width="0.1406%" height="15" fill="rgb(219,221,18)" fg:x="268" fg:w="1"/><text x="37.9434%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="37.6934%" y="405" width="0.1406%" height="15" fill="rgb(211,40,0)" fg:x="268" fg:w="1"/><text x="37.9434%" y="415.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="37.6934%" y="389" width="0.1406%" height="15" fill="rgb(239,85,43)" fg:x="268" fg:w="1"/><text x="37.9434%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="37.8340%" y="565" width="0.1406%" height="15" fill="rgb(231,55,21)" fg:x="269" fg:w="1"/><text x="38.0840%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="37.9747%" y="565" width="0.1406%" height="15" fill="rgb(225,184,43)" fg:x="270" fg:w="1"/><text x="38.2247%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="37.9747%" y="549" width="0.1406%" height="15" fill="rgb(251,158,41)" fg:x="270" fg:w="1"/><text x="38.2247%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="37.9747%" y="533" width="0.1406%" height="15" fill="rgb(234,159,37)" fg:x="270" fg:w="1"/><text x="38.2247%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="37.9747%" y="517" width="0.1406%" height="15" fill="rgb(216,204,22)" fg:x="270" fg:w="1"/><text x="38.2247%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="37.9747%" y="501" width="0.1406%" height="15" fill="rgb(214,17,3)" fg:x="270" fg:w="1"/><text x="38.2247%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="37.9747%" y="485" width="0.1406%" height="15" fill="rgb(212,111,17)" fg:x="270" fg:w="1"/><text x="38.2247%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.14%)</title><rect x="37.9747%" y="469" width="0.1406%" height="15" fill="rgb(221,157,24)" fg:x="270" fg:w="1"/><text x="38.2247%" y="479.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::clone::Clone&gt;::clone (13 samples, 1.83%)</title><rect x="36.9902%" y="645" width="1.8284%" height="15" fill="rgb(252,16,13)" fg:x="263" fg:w="13"/><text x="37.2402%" y="655.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 1.55%)</title><rect x="37.2714%" y="629" width="1.5471%" height="15" fill="rgb(221,62,2)" fg:x="265" fg:w="11"/><text x="37.5214%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 1.55%)</title><rect x="37.2714%" y="613" width="1.5471%" height="15" fill="rgb(247,87,22)" fg:x="265" fg:w="11"/><text x="37.5214%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 1.55%)</title><rect x="37.2714%" y="597" width="1.5471%" height="15" fill="rgb(215,73,9)" fg:x="265" fg:w="11"/><text x="37.5214%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 1.55%)</title><rect x="37.2714%" y="581" width="1.5471%" height="15" fill="rgb(207,175,33)" fg:x="265" fg:w="11"/><text x="37.5214%" y="591.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5 samples, 0.70%)</title><rect x="38.1153%" y="565" width="0.7032%" height="15" fill="rgb(243,129,54)" fg:x="271" fg:w="5"/><text x="38.3653%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="38.8186%" y="645" width="0.1406%" height="15" fill="rgb(227,119,45)" fg:x="276" fg:w="1"/><text x="39.0686%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="38.9592%" y="485" width="0.1406%" height="15" fill="rgb(205,109,36)" fg:x="277" fg:w="1"/><text x="39.2092%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 1.41%)</title><rect x="38.9592%" y="517" width="1.4065%" height="15" fill="rgb(205,6,39)" fg:x="277" fg:w="10"/><text x="39.2092%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 1.41%)</title><rect x="38.9592%" y="501" width="1.4065%" height="15" fill="rgb(221,32,16)" fg:x="277" fg:w="10"/><text x="39.2092%" y="511.50"></text></g><g><title>_int_free (9 samples, 1.27%)</title><rect x="39.0999%" y="485" width="1.2658%" height="15" fill="rgb(228,144,50)" fg:x="278" fg:w="9"/><text x="39.3499%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d12::node_path::NodePath&gt; (11 samples, 1.55%)</title><rect x="38.9592%" y="645" width="1.5471%" height="15" fill="rgb(229,201,53)" fg:x="277" fg:w="11"/><text x="39.2092%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (11 samples, 1.55%)</title><rect x="38.9592%" y="629" width="1.5471%" height="15" fill="rgb(249,153,27)" fg:x="277" fg:w="11"/><text x="39.2092%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 1.55%)</title><rect x="38.9592%" y="613" width="1.5471%" height="15" fill="rgb(227,106,25)" fg:x="277" fg:w="11"/><text x="39.2092%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (11 samples, 1.55%)</title><rect x="38.9592%" y="597" width="1.5471%" height="15" fill="rgb(230,65,29)" fg:x="277" fg:w="11"/><text x="39.2092%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (11 samples, 1.55%)</title><rect x="38.9592%" y="581" width="1.5471%" height="15" fill="rgb(221,57,46)" fg:x="277" fg:w="11"/><text x="39.2092%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (11 samples, 1.55%)</title><rect x="38.9592%" y="565" width="1.5471%" height="15" fill="rgb(229,161,17)" fg:x="277" fg:w="11"/><text x="39.2092%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (11 samples, 1.55%)</title><rect x="38.9592%" y="549" width="1.5471%" height="15" fill="rgb(222,213,11)" fg:x="277" fg:w="11"/><text x="39.2092%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 1.55%)</title><rect x="38.9592%" y="533" width="1.5471%" height="15" fill="rgb(235,35,13)" fg:x="277" fg:w="11"/><text x="39.2092%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.14%)</title><rect x="40.3657%" y="517" width="0.1406%" height="15" fill="rgb(233,158,34)" fg:x="287" fg:w="1"/><text x="40.6157%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.14%)</title><rect x="40.5063%" y="581" width="0.1406%" height="15" fill="rgb(215,151,48)" fg:x="288" fg:w="1"/><text x="40.7563%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.14%)</title><rect x="40.5063%" y="565" width="0.1406%" height="15" fill="rgb(229,84,14)" fg:x="288" fg:w="1"/><text x="40.7563%" y="575.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.14%)</title><rect x="40.5063%" y="549" width="0.1406%" height="15" fill="rgb(229,68,14)" fg:x="288" fg:w="1"/><text x="40.7563%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="40.5063%" y="533" width="0.1406%" height="15" fill="rgb(243,106,26)" fg:x="288" fg:w="1"/><text x="40.7563%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="40.5063%" y="517" width="0.1406%" height="15" fill="rgb(206,45,38)" fg:x="288" fg:w="1"/><text x="40.7563%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="40.5063%" y="501" width="0.1406%" height="15" fill="rgb(226,6,15)" fg:x="288" fg:w="1"/><text x="40.7563%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.28%)</title><rect x="40.5063%" y="597" width="0.2813%" height="15" fill="rgb(232,22,54)" fg:x="288" fg:w="2"/><text x="40.7563%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="40.6470%" y="581" width="0.1406%" height="15" fill="rgb(229,222,32)" fg:x="289" fg:w="1"/><text x="40.8970%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="40.6470%" y="565" width="0.1406%" height="15" fill="rgb(228,62,29)" fg:x="289" fg:w="1"/><text x="40.8970%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="40.6470%" y="549" width="0.1406%" height="15" fill="rgb(251,103,34)" fg:x="289" fg:w="1"/><text x="40.8970%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.14%)</title><rect x="40.6470%" y="533" width="0.1406%" height="15" fill="rgb(233,12,30)" fg:x="289" fg:w="1"/><text x="40.8970%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="40.6470%" y="517" width="0.1406%" height="15" fill="rgb(238,52,0)" fg:x="289" fg:w="1"/><text x="40.8970%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.42%)</title><rect x="40.5063%" y="645" width="0.4219%" height="15" fill="rgb(223,98,5)" fg:x="288" fg:w="3"/><text x="40.7563%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.42%)</title><rect x="40.5063%" y="629" width="0.4219%" height="15" fill="rgb(228,75,37)" fg:x="288" fg:w="3"/><text x="40.7563%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.42%)</title><rect x="40.5063%" y="613" width="0.4219%" height="15" fill="rgb(205,115,49)" fg:x="288" fg:w="3"/><text x="40.7563%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.14%)</title><rect x="40.7876%" y="597" width="0.1406%" height="15" fill="rgb(250,154,43)" fg:x="290" fg:w="1"/><text x="41.0376%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.14%)</title><rect x="40.7876%" y="581" width="0.1406%" height="15" fill="rgb(226,43,29)" fg:x="290" fg:w="1"/><text x="41.0376%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="40.7876%" y="565" width="0.1406%" height="15" fill="rgb(249,228,39)" fg:x="290" fg:w="1"/><text x="41.0376%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="40.7876%" y="549" width="0.1406%" height="15" fill="rgb(216,79,43)" fg:x="290" fg:w="1"/><text x="41.0376%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="40.7876%" y="533" width="0.1406%" height="15" fill="rgb(228,95,12)" fg:x="290" fg:w="1"/><text x="41.0376%" y="543.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.14%)</title><rect x="40.7876%" y="517" width="0.1406%" height="15" fill="rgb(249,221,15)" fg:x="290" fg:w="1"/><text x="41.0376%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.42%)</title><rect x="40.9283%" y="565" width="0.4219%" height="15" fill="rgb(233,34,13)" fg:x="291" fg:w="3"/><text x="41.1783%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.42%)</title><rect x="40.9283%" y="549" width="0.4219%" height="15" fill="rgb(214,103,39)" fg:x="291" fg:w="3"/><text x="41.1783%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.42%)</title><rect x="40.9283%" y="533" width="0.4219%" height="15" fill="rgb(251,126,39)" fg:x="291" fg:w="3"/><text x="41.1783%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.28%)</title><rect x="41.0689%" y="517" width="0.2813%" height="15" fill="rgb(214,216,36)" fg:x="292" fg:w="2"/><text x="41.3189%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="41.3502%" y="517" width="0.1406%" height="15" fill="rgb(220,221,8)" fg:x="294" fg:w="1"/><text x="41.6002%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="41.3502%" y="501" width="0.1406%" height="15" fill="rgb(240,216,3)" fg:x="294" fg:w="1"/><text x="41.6002%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="41.3502%" y="485" width="0.1406%" height="15" fill="rgb(232,218,17)" fg:x="294" fg:w="1"/><text x="41.6002%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.14%)</title><rect x="41.3502%" y="469" width="0.1406%" height="15" fill="rgb(229,163,45)" fg:x="294" fg:w="1"/><text x="41.6002%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="41.3502%" y="453" width="0.1406%" height="15" fill="rgb(231,110,42)" fg:x="294" fg:w="1"/><text x="41.6002%" y="463.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (5 samples, 0.70%)</title><rect x="40.9283%" y="645" width="0.7032%" height="15" fill="rgb(208,170,48)" fg:x="291" fg:w="5"/><text x="41.1783%" y="655.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (5 samples, 0.70%)</title><rect x="40.9283%" y="629" width="0.7032%" height="15" fill="rgb(239,116,25)" fg:x="291" fg:w="5"/><text x="41.1783%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (5 samples, 0.70%)</title><rect x="40.9283%" y="613" width="0.7032%" height="15" fill="rgb(219,200,50)" fg:x="291" fg:w="5"/><text x="41.1783%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.70%)</title><rect x="40.9283%" y="597" width="0.7032%" height="15" fill="rgb(245,200,0)" fg:x="291" fg:w="5"/><text x="41.1783%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.70%)</title><rect x="40.9283%" y="581" width="0.7032%" height="15" fill="rgb(245,119,33)" fg:x="291" fg:w="5"/><text x="41.1783%" y="591.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::hash::Hash&gt;::hash (2 samples, 0.28%)</title><rect x="41.3502%" y="565" width="0.2813%" height="15" fill="rgb(231,125,12)" fg:x="294" fg:w="2"/><text x="41.6002%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.28%)</title><rect x="41.3502%" y="549" width="0.2813%" height="15" fill="rgb(216,96,41)" fg:x="294" fg:w="2"/><text x="41.6002%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.28%)</title><rect x="41.3502%" y="533" width="0.2813%" height="15" fill="rgb(248,43,45)" fg:x="294" fg:w="2"/><text x="41.6002%" y="543.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.14%)</title><rect x="41.4909%" y="517" width="0.1406%" height="15" fill="rgb(217,222,7)" fg:x="295" fg:w="1"/><text x="41.7409%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="41.4909%" y="501" width="0.1406%" height="15" fill="rgb(233,28,6)" fg:x="295" fg:w="1"/><text x="41.7409%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="41.4909%" y="485" width="0.1406%" height="15" fill="rgb(231,218,15)" fg:x="295" fg:w="1"/><text x="41.7409%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="41.4909%" y="469" width="0.1406%" height="15" fill="rgb(226,171,48)" fg:x="295" fg:w="1"/><text x="41.7409%" y="479.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (3 samples, 0.42%)</title><rect x="41.6315%" y="533" width="0.4219%" height="15" fill="rgb(235,201,9)" fg:x="296" fg:w="3"/><text x="41.8815%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.42%)</title><rect x="41.6315%" y="517" width="0.4219%" height="15" fill="rgb(217,80,15)" fg:x="296" fg:w="3"/><text x="41.8815%" y="527.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::hash::Hash&gt;::hash (3 samples, 0.42%)</title><rect x="41.6315%" y="501" width="0.4219%" height="15" fill="rgb(219,152,8)" fg:x="296" fg:w="3"/><text x="41.8815%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (3 samples, 0.42%)</title><rect x="41.6315%" y="485" width="0.4219%" height="15" fill="rgb(243,107,38)" fg:x="296" fg:w="3"/><text x="41.8815%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.42%)</title><rect x="41.6315%" y="469" width="0.4219%" height="15" fill="rgb(231,17,5)" fg:x="296" fg:w="3"/><text x="41.8815%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.42%)</title><rect x="41.6315%" y="453" width="0.4219%" height="15" fill="rgb(209,25,54)" fg:x="296" fg:w="3"/><text x="41.8815%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.42%)</title><rect x="41.6315%" y="437" width="0.4219%" height="15" fill="rgb(219,0,2)" fg:x="296" fg:w="3"/><text x="41.8815%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.42%)</title><rect x="41.6315%" y="421" width="0.4219%" height="15" fill="rgb(246,9,5)" fg:x="296" fg:w="3"/><text x="41.8815%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.42%)</title><rect x="41.6315%" y="405" width="0.4219%" height="15" fill="rgb(226,159,4)" fg:x="296" fg:w="3"/><text x="41.8815%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.56%)</title><rect x="41.6315%" y="581" width="0.5626%" height="15" fill="rgb(219,175,34)" fg:x="296" fg:w="4"/><text x="41.8815%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.56%)</title><rect x="41.6315%" y="565" width="0.5626%" height="15" fill="rgb(236,10,46)" fg:x="296" fg:w="4"/><text x="41.8815%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (4 samples, 0.56%)</title><rect x="41.6315%" y="549" width="0.5626%" height="15" fill="rgb(240,211,16)" fg:x="296" fg:w="4"/><text x="41.8815%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.14%)</title><rect x="42.0534%" y="533" width="0.1406%" height="15" fill="rgb(205,3,43)" fg:x="299" fg:w="1"/><text x="42.3034%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.14%)</title><rect x="42.0534%" y="517" width="0.1406%" height="15" fill="rgb(245,7,22)" fg:x="299" fg:w="1"/><text x="42.3034%" y="527.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.14%)</title><rect x="42.0534%" y="501" width="0.1406%" height="15" fill="rgb(239,132,32)" fg:x="299" fg:w="1"/><text x="42.3034%" y="511.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (5 samples, 0.70%)</title><rect x="41.6315%" y="645" width="0.7032%" height="15" fill="rgb(228,202,34)" fg:x="296" fg:w="5"/><text x="41.8815%" y="655.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (5 samples, 0.70%)</title><rect x="41.6315%" y="629" width="0.7032%" height="15" fill="rgb(254,200,22)" fg:x="296" fg:w="5"/><text x="41.8815%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.70%)</title><rect x="41.6315%" y="613" width="0.7032%" height="15" fill="rgb(219,10,39)" fg:x="296" fg:w="5"/><text x="41.8815%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.70%)</title><rect x="41.6315%" y="597" width="0.7032%" height="15" fill="rgb(226,210,39)" fg:x="296" fg:w="5"/><text x="41.8815%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.14%)</title><rect x="42.1941%" y="581" width="0.1406%" height="15" fill="rgb(208,219,16)" fg:x="300" fg:w="1"/><text x="42.4441%" y="591.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.14%)</title><rect x="42.1941%" y="565" width="0.1406%" height="15" fill="rgb(216,158,51)" fg:x="300" fg:w="1"/><text x="42.4441%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="42.3347%" y="629" width="0.2813%" height="15" fill="rgb(233,14,44)" fg:x="301" fg:w="2"/><text x="42.5847%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="42.3347%" y="613" width="0.2813%" height="15" fill="rgb(237,97,39)" fg:x="301" fg:w="2"/><text x="42.5847%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.28%)</title><rect x="42.3347%" y="597" width="0.2813%" height="15" fill="rgb(218,198,43)" fg:x="301" fg:w="2"/><text x="42.5847%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.28%)</title><rect x="42.3347%" y="581" width="0.2813%" height="15" fill="rgb(231,104,20)" fg:x="301" fg:w="2"/><text x="42.5847%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.28%)</title><rect x="42.3347%" y="565" width="0.2813%" height="15" fill="rgb(254,36,13)" fg:x="301" fg:w="2"/><text x="42.5847%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="42.3347%" y="549" width="0.2813%" height="15" fill="rgb(248,14,50)" fg:x="301" fg:w="2"/><text x="42.5847%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="42.3347%" y="533" width="0.2813%" height="15" fill="rgb(217,107,29)" fg:x="301" fg:w="2"/><text x="42.5847%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="42.3347%" y="517" width="0.2813%" height="15" fill="rgb(251,169,33)" fg:x="301" fg:w="2"/><text x="42.5847%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.28%)</title><rect x="42.3347%" y="501" width="0.2813%" height="15" fill="rgb(217,108,32)" fg:x="301" fg:w="2"/><text x="42.5847%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="42.3347%" y="485" width="0.2813%" height="15" fill="rgb(219,66,42)" fg:x="301" fg:w="2"/><text x="42.5847%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="42.3347%" y="469" width="0.2813%" height="15" fill="rgb(206,180,7)" fg:x="301" fg:w="2"/><text x="42.5847%" y="479.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="42.3347%" y="453" width="0.2813%" height="15" fill="rgb(208,226,31)" fg:x="301" fg:w="2"/><text x="42.5847%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="42.4754%" y="437" width="0.1406%" height="15" fill="rgb(218,26,49)" fg:x="302" fg:w="1"/><text x="42.7254%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="42.7567%" y="469" width="0.1406%" height="15" fill="rgb(233,197,48)" fg:x="304" fg:w="1"/><text x="43.0067%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.14%)</title><rect x="42.7567%" y="453" width="0.1406%" height="15" fill="rgb(252,181,51)" fg:x="304" fg:w="1"/><text x="43.0067%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.14%)</title><rect x="42.7567%" y="437" width="0.1406%" height="15" fill="rgb(253,90,19)" fg:x="304" fg:w="1"/><text x="43.0067%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.14%)</title><rect x="42.7567%" y="421" width="0.1406%" height="15" fill="rgb(215,171,30)" fg:x="304" fg:w="1"/><text x="43.0067%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.14%)</title><rect x="42.7567%" y="405" width="0.1406%" height="15" fill="rgb(214,222,9)" fg:x="304" fg:w="1"/><text x="43.0067%" y="415.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="42.7567%" y="389" width="0.1406%" height="15" fill="rgb(223,3,22)" fg:x="304" fg:w="1"/><text x="43.0067%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (2 samples, 0.28%)</title><rect x="42.8973%" y="453" width="0.2813%" height="15" fill="rgb(225,196,46)" fg:x="305" fg:w="2"/><text x="43.1473%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.28%)</title><rect x="42.8973%" y="437" width="0.2813%" height="15" fill="rgb(209,110,37)" fg:x="305" fg:w="2"/><text x="43.1473%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.28%)</title><rect x="42.8973%" y="421" width="0.2813%" height="15" fill="rgb(249,89,12)" fg:x="305" fg:w="2"/><text x="43.1473%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.14%)</title><rect x="43.1786%" y="357" width="0.1406%" height="15" fill="rgb(226,27,33)" fg:x="307" fg:w="1"/><text x="43.4286%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.14%)</title><rect x="43.1786%" y="341" width="0.1406%" height="15" fill="rgb(213,82,22)" fg:x="307" fg:w="1"/><text x="43.4286%" y="351.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.14%)</title><rect x="43.1786%" y="325" width="0.1406%" height="15" fill="rgb(248,140,0)" fg:x="307" fg:w="1"/><text x="43.4286%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.14%)</title><rect x="43.1786%" y="309" width="0.1406%" height="15" fill="rgb(228,106,3)" fg:x="307" fg:w="1"/><text x="43.4286%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (4 samples, 0.56%)</title><rect x="43.1786%" y="453" width="0.5626%" height="15" fill="rgb(209,23,37)" fg:x="307" fg:w="4"/><text x="43.4286%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.56%)</title><rect x="43.1786%" y="437" width="0.5626%" height="15" fill="rgb(241,93,50)" fg:x="307" fg:w="4"/><text x="43.4286%" y="447.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.56%)</title><rect x="43.1786%" y="421" width="0.5626%" height="15" fill="rgb(253,46,43)" fg:x="307" fg:w="4"/><text x="43.4286%" y="431.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (4 samples, 0.56%)</title><rect x="43.1786%" y="405" width="0.5626%" height="15" fill="rgb(226,206,43)" fg:x="307" fg:w="4"/><text x="43.4286%" y="415.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (4 samples, 0.56%)</title><rect x="43.1786%" y="389" width="0.5626%" height="15" fill="rgb(217,54,7)" fg:x="307" fg:w="4"/><text x="43.4286%" y="399.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (4 samples, 0.56%)</title><rect x="43.1786%" y="373" width="0.5626%" height="15" fill="rgb(223,5,52)" fg:x="307" fg:w="4"/><text x="43.4286%" y="383.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (3 samples, 0.42%)</title><rect x="43.3193%" y="357" width="0.4219%" height="15" fill="rgb(206,52,46)" fg:x="308" fg:w="3"/><text x="43.5693%" y="367.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (10 samples, 1.41%)</title><rect x="42.7567%" y="533" width="1.4065%" height="15" fill="rgb(253,136,11)" fg:x="304" fg:w="10"/><text x="43.0067%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (10 samples, 1.41%)</title><rect x="42.7567%" y="517" width="1.4065%" height="15" fill="rgb(208,106,33)" fg:x="304" fg:w="10"/><text x="43.0067%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 1.41%)</title><rect x="42.7567%" y="501" width="1.4065%" height="15" fill="rgb(206,54,4)" fg:x="304" fg:w="10"/><text x="43.0067%" y="511.50"></text></g><g><title>y2021::d12::main::traverse::{{closure}} (10 samples, 1.41%)</title><rect x="42.7567%" y="485" width="1.4065%" height="15" fill="rgb(213,3,15)" fg:x="304" fg:w="10"/><text x="43.0067%" y="495.50"></text></g><g><title>y2021::d12::node_path::NodePath::count_node (9 samples, 1.27%)</title><rect x="42.8973%" y="469" width="1.2658%" height="15" fill="rgb(252,211,39)" fg:x="305" fg:w="9"/><text x="43.1473%" y="479.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (3 samples, 0.42%)</title><rect x="43.7412%" y="453" width="0.4219%" height="15" fill="rgb(223,6,36)" fg:x="311" fg:w="3"/><text x="43.9912%" y="463.50"></text></g><g><title>&lt;&amp;alloc::string::String as core::str::pattern::Pattern&gt;::into_searcher (3 samples, 0.42%)</title><rect x="43.7412%" y="437" width="0.4219%" height="15" fill="rgb(252,169,45)" fg:x="311" fg:w="3"/><text x="43.9912%" y="447.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (3 samples, 0.42%)</title><rect x="43.7412%" y="421" width="0.4219%" height="15" fill="rgb(212,48,26)" fg:x="311" fg:w="3"/><text x="43.9912%" y="431.50"></text></g><g><title>core::str::pattern::StrSearcher::new (3 samples, 0.42%)</title><rect x="43.7412%" y="405" width="0.4219%" height="15" fill="rgb(251,102,48)" fg:x="311" fg:w="3"/><text x="43.9912%" y="415.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (2 samples, 0.28%)</title><rect x="43.8819%" y="389" width="0.2813%" height="15" fill="rgb(243,208,16)" fg:x="312" fg:w="2"/><text x="44.1319%" y="399.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.28%)</title><rect x="43.8819%" y="373" width="0.2813%" height="15" fill="rgb(219,96,24)" fg:x="312" fg:w="2"/><text x="44.1319%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.28%)</title><rect x="43.8819%" y="357" width="0.2813%" height="15" fill="rgb(219,33,29)" fg:x="312" fg:w="2"/><text x="44.1319%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.28%)</title><rect x="44.1632%" y="421" width="0.2813%" height="15" fill="rgb(223,176,5)" fg:x="314" fg:w="2"/><text x="44.4132%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="44.3038%" y="405" width="0.1406%" height="15" fill="rgb(228,140,14)" fg:x="315" fg:w="1"/><text x="44.5538%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="44.3038%" y="389" width="0.1406%" height="15" fill="rgb(217,179,31)" fg:x="315" fg:w="1"/><text x="44.5538%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.14%)</title><rect x="44.3038%" y="373" width="0.1406%" height="15" fill="rgb(230,9,30)" fg:x="315" fg:w="1"/><text x="44.5538%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (3 samples, 0.42%)</title><rect x="44.1632%" y="453" width="0.4219%" height="15" fill="rgb(230,136,20)" fg:x="314" fg:w="3"/><text x="44.4132%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.42%)</title><rect x="44.1632%" y="437" width="0.4219%" height="15" fill="rgb(215,210,22)" fg:x="314" fg:w="3"/><text x="44.4132%" y="447.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.14%)</title><rect x="44.4444%" y="421" width="0.1406%" height="15" fill="rgb(218,43,5)" fg:x="316" fg:w="1"/><text x="44.6944%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="44.4444%" y="405" width="0.1406%" height="15" fill="rgb(216,11,5)" fg:x="316" fg:w="1"/><text x="44.6944%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="44.4444%" y="389" width="0.1406%" height="15" fill="rgb(209,82,29)" fg:x="316" fg:w="1"/><text x="44.6944%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="44.4444%" y="373" width="0.1406%" height="15" fill="rgb(244,115,12)" fg:x="316" fg:w="1"/><text x="44.6944%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.14%)</title><rect x="44.7257%" y="405" width="0.1406%" height="15" fill="rgb(222,82,18)" fg:x="318" fg:w="1"/><text x="44.9757%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 2.39%)</title><rect x="42.6160%" y="629" width="2.3910%" height="15" fill="rgb(249,227,8)" fg:x="303" fg:w="17"/><text x="42.8660%" y="639.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find (17 samples, 2.39%)</title><rect x="42.6160%" y="613" width="2.3910%" height="15" fill="rgb(253,141,45)" fg:x="303" fg:w="17"/><text x="42.8660%" y="623.50">co..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 2.39%)</title><rect x="42.6160%" y="597" width="2.3910%" height="15" fill="rgb(234,184,4)" fg:x="303" fg:w="17"/><text x="42.8660%" y="607.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 2.39%)</title><rect x="42.6160%" y="581" width="2.3910%" height="15" fill="rgb(218,194,23)" fg:x="303" fg:w="17"/><text x="42.8660%" y="591.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (16 samples, 2.25%)</title><rect x="42.7567%" y="565" width="2.2504%" height="15" fill="rgb(235,66,41)" fg:x="304" fg:w="16"/><text x="43.0067%" y="575.50">c..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (16 samples, 2.25%)</title><rect x="42.7567%" y="549" width="2.2504%" height="15" fill="rgb(245,217,1)" fg:x="304" fg:w="16"/><text x="43.0067%" y="559.50">c..</text></g><g><title>y2021::d12::main::traverse::{{closure}} (6 samples, 0.84%)</title><rect x="44.1632%" y="533" width="0.8439%" height="15" fill="rgb(229,91,1)" fg:x="314" fg:w="6"/><text x="44.4132%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.84%)</title><rect x="44.1632%" y="517" width="0.8439%" height="15" fill="rgb(207,101,30)" fg:x="314" fg:w="6"/><text x="44.4132%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.84%)</title><rect x="44.1632%" y="501" width="0.8439%" height="15" fill="rgb(223,82,49)" fg:x="314" fg:w="6"/><text x="44.4132%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.84%)</title><rect x="44.1632%" y="485" width="0.8439%" height="15" fill="rgb(218,167,17)" fg:x="314" fg:w="6"/><text x="44.4132%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.84%)</title><rect x="44.1632%" y="469" width="0.8439%" height="15" fill="rgb(208,103,14)" fg:x="314" fg:w="6"/><text x="44.4132%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.42%)</title><rect x="44.5851%" y="453" width="0.4219%" height="15" fill="rgb(238,20,8)" fg:x="317" fg:w="3"/><text x="44.8351%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.42%)</title><rect x="44.5851%" y="437" width="0.4219%" height="15" fill="rgb(218,80,54)" fg:x="317" fg:w="3"/><text x="44.8351%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.42%)</title><rect x="44.5851%" y="421" width="0.4219%" height="15" fill="rgb(240,144,17)" fg:x="317" fg:w="3"/><text x="44.8351%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.14%)</title><rect x="44.8664%" y="405" width="0.1406%" height="15" fill="rgb(245,27,50)" fg:x="319" fg:w="1"/><text x="45.1164%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="44.8664%" y="389" width="0.1406%" height="15" fill="rgb(251,51,7)" fg:x="319" fg:w="1"/><text x="45.1164%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="45.0070%" y="613" width="0.1406%" height="15" fill="rgb(245,217,29)" fg:x="320" fg:w="1"/><text x="45.2570%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="45.0070%" y="597" width="0.1406%" height="15" fill="rgb(221,176,29)" fg:x="320" fg:w="1"/><text x="45.2570%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="45.0070%" y="581" width="0.1406%" height="15" fill="rgb(212,180,24)" fg:x="320" fg:w="1"/><text x="45.2570%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="45.0070%" y="565" width="0.1406%" height="15" fill="rgb(254,24,2)" fg:x="320" fg:w="1"/><text x="45.2570%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="45.0070%" y="549" width="0.1406%" height="15" fill="rgb(230,100,2)" fg:x="320" fg:w="1"/><text x="45.2570%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="45.0070%" y="533" width="0.1406%" height="15" fill="rgb(219,142,25)" fg:x="320" fg:w="1"/><text x="45.2570%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="45.0070%" y="517" width="0.1406%" height="15" fill="rgb(240,73,43)" fg:x="320" fg:w="1"/><text x="45.2570%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="45.0070%" y="501" width="0.1406%" height="15" fill="rgb(214,114,15)" fg:x="320" fg:w="1"/><text x="45.2570%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="45.0070%" y="485" width="0.1406%" height="15" fill="rgb(207,130,4)" fg:x="320" fg:w="1"/><text x="45.2570%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="45.0070%" y="469" width="0.1406%" height="15" fill="rgb(221,25,40)" fg:x="320" fg:w="1"/><text x="45.2570%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="45.0070%" y="453" width="0.1406%" height="15" fill="rgb(241,184,7)" fg:x="320" fg:w="1"/><text x="45.2570%" y="463.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="45.0070%" y="437" width="0.1406%" height="15" fill="rgb(235,159,4)" fg:x="320" fg:w="1"/><text x="45.2570%" y="447.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="45.0070%" y="421" width="0.1406%" height="15" fill="rgb(214,87,48)" fg:x="320" fg:w="1"/><text x="45.2570%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.70%)</title><rect x="45.2883%" y="469" width="0.7032%" height="15" fill="rgb(246,198,24)" fg:x="322" fg:w="5"/><text x="45.5383%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.70%)</title><rect x="45.2883%" y="453" width="0.7032%" height="15" fill="rgb(209,66,40)" fg:x="322" fg:w="5"/><text x="45.5383%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.70%)</title><rect x="45.2883%" y="437" width="0.7032%" height="15" fill="rgb(233,147,39)" fg:x="322" fg:w="5"/><text x="45.5383%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.70%)</title><rect x="45.2883%" y="421" width="0.7032%" height="15" fill="rgb(231,145,52)" fg:x="322" fg:w="5"/><text x="45.5383%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.70%)</title><rect x="45.2883%" y="405" width="0.7032%" height="15" fill="rgb(206,20,26)" fg:x="322" fg:w="5"/><text x="45.5383%" y="415.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.70%)</title><rect x="45.2883%" y="389" width="0.7032%" height="15" fill="rgb(238,220,4)" fg:x="322" fg:w="5"/><text x="45.5383%" y="399.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.70%)</title><rect x="45.2883%" y="373" width="0.7032%" height="15" fill="rgb(252,195,42)" fg:x="322" fg:w="5"/><text x="45.5383%" y="383.50"></text></g><g><title>_int_malloc (2 samples, 0.28%)</title><rect x="45.7103%" y="357" width="0.2813%" height="15" fill="rgb(209,10,6)" fg:x="325" fg:w="2"/><text x="45.9603%" y="367.50"></text></g><g><title>checked_request2size (1 samples, 0.14%)</title><rect x="45.8509%" y="341" width="0.1406%" height="15" fill="rgb(229,3,52)" fg:x="326" fg:w="1"/><text x="46.1009%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.98%)</title><rect x="45.1477%" y="549" width="0.9845%" height="15" fill="rgb(253,49,37)" fg:x="321" fg:w="7"/><text x="45.3977%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.84%)</title><rect x="45.2883%" y="533" width="0.8439%" height="15" fill="rgb(240,103,49)" fg:x="322" fg:w="6"/><text x="45.5383%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.84%)</title><rect x="45.2883%" y="517" width="0.8439%" height="15" fill="rgb(250,182,30)" fg:x="322" fg:w="6"/><text x="45.5383%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.84%)</title><rect x="45.2883%" y="501" width="0.8439%" height="15" fill="rgb(248,8,30)" fg:x="322" fg:w="6"/><text x="45.5383%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.84%)</title><rect x="45.2883%" y="485" width="0.8439%" height="15" fill="rgb(237,120,30)" fg:x="322" fg:w="6"/><text x="45.5383%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.14%)</title><rect x="45.9916%" y="469" width="0.1406%" height="15" fill="rgb(221,146,34)" fg:x="327" fg:w="1"/><text x="46.2416%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="45.9916%" y="453" width="0.1406%" height="15" fill="rgb(242,55,13)" fg:x="327" fg:w="1"/><text x="46.2416%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.14%)</title><rect x="45.9916%" y="437" width="0.1406%" height="15" fill="rgb(242,112,31)" fg:x="327" fg:w="1"/><text x="46.2416%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.42%)</title><rect x="46.1322%" y="549" width="0.4219%" height="15" fill="rgb(249,192,27)" fg:x="328" fg:w="3"/><text x="46.3822%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 1.83%)</title><rect x="45.1477%" y="613" width="1.8284%" height="15" fill="rgb(208,204,44)" fg:x="321" fg:w="13"/><text x="45.3977%" y="623.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 1.83%)</title><rect x="45.1477%" y="597" width="1.8284%" height="15" fill="rgb(208,93,54)" fg:x="321" fg:w="13"/><text x="45.3977%" y="607.50">a..</text></g><g><title>alloc::slice::hack::to_vec (13 samples, 1.83%)</title><rect x="45.1477%" y="581" width="1.8284%" height="15" fill="rgb(242,1,31)" fg:x="321" fg:w="13"/><text x="45.3977%" y="591.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 1.83%)</title><rect x="45.1477%" y="565" width="1.8284%" height="15" fill="rgb(241,83,25)" fg:x="321" fg:w="13"/><text x="45.3977%" y="575.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.42%)</title><rect x="46.5541%" y="549" width="0.4219%" height="15" fill="rgb(205,169,50)" fg:x="331" fg:w="3"/><text x="46.8041%" y="559.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::clone::Clone&gt;::clone (15 samples, 2.11%)</title><rect x="45.0070%" y="629" width="2.1097%" height="15" fill="rgb(239,186,37)" fg:x="320" fg:w="15"/><text x="45.2570%" y="639.50">&lt;..</text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="46.9761%" y="613" width="0.1406%" height="15" fill="rgb(205,221,10)" fg:x="334" fg:w="1"/><text x="47.2261%" y="623.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="46.9761%" y="597" width="0.1406%" height="15" fill="rgb(218,196,15)" fg:x="334" fg:w="1"/><text x="47.2261%" y="607.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="47.1167%" y="629" width="0.1406%" height="15" fill="rgb(218,196,35)" fg:x="335" fg:w="1"/><text x="47.3667%" y="639.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.14%)</title><rect x="47.2574%" y="533" width="0.1406%" height="15" fill="rgb(233,63,24)" fg:x="336" fg:w="1"/><text x="47.5074%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.14%)</title><rect x="47.2574%" y="517" width="0.1406%" height="15" fill="rgb(225,8,4)" fg:x="336" fg:w="1"/><text x="47.5074%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.28%)</title><rect x="47.2574%" y="629" width="0.2813%" height="15" fill="rgb(234,105,35)" fg:x="336" fg:w="2"/><text x="47.5074%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.28%)</title><rect x="47.2574%" y="613" width="0.2813%" height="15" fill="rgb(236,21,32)" fg:x="336" fg:w="2"/><text x="47.5074%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.28%)</title><rect x="47.2574%" y="597" width="0.2813%" height="15" fill="rgb(228,109,6)" fg:x="336" fg:w="2"/><text x="47.5074%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.28%)</title><rect x="47.2574%" y="581" width="0.2813%" height="15" fill="rgb(229,215,31)" fg:x="336" fg:w="2"/><text x="47.5074%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.28%)</title><rect x="47.2574%" y="565" width="0.2813%" height="15" fill="rgb(221,52,54)" fg:x="336" fg:w="2"/><text x="47.5074%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.28%)</title><rect x="47.2574%" y="549" width="0.2813%" height="15" fill="rgb(252,129,43)" fg:x="336" fg:w="2"/><text x="47.5074%" y="559.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="47.3980%" y="533" width="0.1406%" height="15" fill="rgb(248,183,27)" fg:x="337" fg:w="1"/><text x="47.6480%" y="543.50"></text></g><g><title>__GI___libc_free (2 samples, 0.28%)</title><rect x="47.5387%" y="469" width="0.2813%" height="15" fill="rgb(250,0,22)" fg:x="338" fg:w="2"/><text x="47.7887%" y="479.50"></text></g><g><title>__rust_dealloc (1 samples, 0.14%)</title><rect x="47.8200%" y="469" width="0.1406%" height="15" fill="rgb(213,166,10)" fg:x="340" fg:w="1"/><text x="48.0700%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 1.27%)</title><rect x="47.5387%" y="501" width="1.2658%" height="15" fill="rgb(207,163,36)" fg:x="338" fg:w="9"/><text x="47.7887%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 1.27%)</title><rect x="47.5387%" y="485" width="1.2658%" height="15" fill="rgb(208,122,22)" fg:x="338" fg:w="9"/><text x="47.7887%" y="495.50"></text></g><g><title>_int_free (6 samples, 0.84%)</title><rect x="47.9606%" y="469" width="0.8439%" height="15" fill="rgb(207,104,49)" fg:x="341" fg:w="6"/><text x="48.2106%" y="479.50"></text></g><g><title>free_perturb (1 samples, 0.14%)</title><rect x="48.6639%" y="453" width="0.1406%" height="15" fill="rgb(248,211,50)" fg:x="346" fg:w="1"/><text x="48.9139%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 1.41%)</title><rect x="47.5387%" y="597" width="1.4065%" height="15" fill="rgb(217,13,45)" fg:x="338" fg:w="10"/><text x="47.7887%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (10 samples, 1.41%)</title><rect x="47.5387%" y="581" width="1.4065%" height="15" fill="rgb(211,216,49)" fg:x="338" fg:w="10"/><text x="47.7887%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (10 samples, 1.41%)</title><rect x="47.5387%" y="565" width="1.4065%" height="15" fill="rgb(221,58,53)" fg:x="338" fg:w="10"/><text x="47.7887%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (10 samples, 1.41%)</title><rect x="47.5387%" y="549" width="1.4065%" height="15" fill="rgb(220,112,41)" fg:x="338" fg:w="10"/><text x="47.7887%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10 samples, 1.41%)</title><rect x="47.5387%" y="533" width="1.4065%" height="15" fill="rgb(236,38,28)" fg:x="338" fg:w="10"/><text x="47.7887%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 1.41%)</title><rect x="47.5387%" y="517" width="1.4065%" height="15" fill="rgb(227,195,22)" fg:x="338" fg:w="10"/><text x="47.7887%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.14%)</title><rect x="48.8045%" y="501" width="0.1406%" height="15" fill="rgb(214,55,33)" fg:x="347" fg:w="1"/><text x="49.0545%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="48.9451%" y="565" width="0.1406%" height="15" fill="rgb(248,80,13)" fg:x="348" fg:w="1"/><text x="49.1951%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="48.9451%" y="549" width="0.1406%" height="15" fill="rgb(238,52,6)" fg:x="348" fg:w="1"/><text x="49.1951%" y="559.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="48.9451%" y="533" width="0.1406%" height="15" fill="rgb(224,198,47)" fg:x="348" fg:w="1"/><text x="49.1951%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d12::node_path::NodePath&gt; (12 samples, 1.69%)</title><rect x="47.5387%" y="629" width="1.6878%" height="15" fill="rgb(233,171,20)" fg:x="338" fg:w="12"/><text x="47.7887%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (12 samples, 1.69%)</title><rect x="47.5387%" y="613" width="1.6878%" height="15" fill="rgb(241,30,25)" fg:x="338" fg:w="12"/><text x="47.7887%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (2 samples, 0.28%)</title><rect x="48.9451%" y="597" width="0.2813%" height="15" fill="rgb(207,171,38)" fg:x="348" fg:w="2"/><text x="49.1951%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.28%)</title><rect x="48.9451%" y="581" width="0.2813%" height="15" fill="rgb(234,70,1)" fg:x="348" fg:w="2"/><text x="49.1951%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.14%)</title><rect x="49.0858%" y="565" width="0.1406%" height="15" fill="rgb(232,178,18)" fg:x="349" fg:w="1"/><text x="49.3358%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.14%)</title><rect x="49.2264%" y="565" width="0.1406%" height="15" fill="rgb(241,78,40)" fg:x="350" fg:w="1"/><text x="49.4764%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.14%)</title><rect x="49.2264%" y="549" width="0.1406%" height="15" fill="rgb(222,35,25)" fg:x="350" fg:w="1"/><text x="49.4764%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="49.2264%" y="533" width="0.1406%" height="15" fill="rgb(207,92,16)" fg:x="350" fg:w="1"/><text x="49.4764%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="49.2264%" y="517" width="0.1406%" height="15" fill="rgb(216,59,51)" fg:x="350" fg:w="1"/><text x="49.4764%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="49.2264%" y="501" width="0.1406%" height="15" fill="rgb(213,80,28)" fg:x="350" fg:w="1"/><text x="49.4764%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.28%)</title><rect x="49.2264%" y="629" width="0.2813%" height="15" fill="rgb(220,93,7)" fg:x="350" fg:w="2"/><text x="49.4764%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.28%)</title><rect x="49.2264%" y="613" width="0.2813%" height="15" fill="rgb(225,24,44)" fg:x="350" fg:w="2"/><text x="49.4764%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.28%)</title><rect x="49.2264%" y="597" width="0.2813%" height="15" fill="rgb(243,74,40)" fg:x="350" fg:w="2"/><text x="49.4764%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.28%)</title><rect x="49.2264%" y="581" width="0.2813%" height="15" fill="rgb(228,39,7)" fg:x="350" fg:w="2"/><text x="49.4764%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="49.3671%" y="565" width="0.1406%" height="15" fill="rgb(227,79,8)" fg:x="351" fg:w="1"/><text x="49.6171%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="49.3671%" y="549" width="0.1406%" height="15" fill="rgb(236,58,11)" fg:x="351" fg:w="1"/><text x="49.6171%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="49.3671%" y="533" width="0.1406%" height="15" fill="rgb(249,63,35)" fg:x="351" fg:w="1"/><text x="49.6171%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.14%)</title><rect x="49.3671%" y="517" width="0.1406%" height="15" fill="rgb(252,114,16)" fg:x="351" fg:w="1"/><text x="49.6171%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.14%)</title><rect x="49.3671%" y="501" width="0.1406%" height="15" fill="rgb(254,151,24)" fg:x="351" fg:w="1"/><text x="49.6171%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="49.5077%" y="533" width="0.1406%" height="15" fill="rgb(253,54,39)" fg:x="352" fg:w="1"/><text x="49.7577%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="49.5077%" y="517" width="0.1406%" height="15" fill="rgb(243,25,45)" fg:x="352" fg:w="1"/><text x="49.7577%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.28%)</title><rect x="49.5077%" y="629" width="0.2813%" height="15" fill="rgb(234,134,9)" fg:x="352" fg:w="2"/><text x="49.7577%" y="639.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.28%)</title><rect x="49.5077%" y="613" width="0.2813%" height="15" fill="rgb(227,166,31)" fg:x="352" fg:w="2"/><text x="49.7577%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.28%)</title><rect x="49.5077%" y="597" width="0.2813%" height="15" fill="rgb(245,143,41)" fg:x="352" fg:w="2"/><text x="49.7577%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.28%)</title><rect x="49.5077%" y="581" width="0.2813%" height="15" fill="rgb(238,181,32)" fg:x="352" fg:w="2"/><text x="49.7577%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.28%)</title><rect x="49.5077%" y="565" width="0.2813%" height="15" fill="rgb(224,113,18)" fg:x="352" fg:w="2"/><text x="49.7577%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.28%)</title><rect x="49.5077%" y="549" width="0.2813%" height="15" fill="rgb(240,229,28)" fg:x="352" fg:w="2"/><text x="49.7577%" y="559.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.14%)</title><rect x="49.6484%" y="533" width="0.1406%" height="15" fill="rgb(250,185,3)" fg:x="353" fg:w="1"/><text x="49.8984%" y="543.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="49.6484%" y="517" width="0.1406%" height="15" fill="rgb(212,59,25)" fg:x="353" fg:w="1"/><text x="49.8984%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="49.6484%" y="501" width="0.1406%" height="15" fill="rgb(221,87,20)" fg:x="353" fg:w="1"/><text x="49.8984%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.14%)</title><rect x="49.6484%" y="485" width="0.1406%" height="15" fill="rgb(213,74,28)" fg:x="353" fg:w="1"/><text x="49.8984%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.14%)</title><rect x="49.6484%" y="469" width="0.1406%" height="15" fill="rgb(224,132,34)" fg:x="353" fg:w="1"/><text x="49.8984%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.14%)</title><rect x="49.6484%" y="453" width="0.1406%" height="15" fill="rgb(222,101,24)" fg:x="353" fg:w="1"/><text x="49.8984%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.14%)</title><rect x="49.6484%" y="437" width="0.1406%" height="15" fill="rgb(254,142,4)" fg:x="353" fg:w="1"/><text x="49.8984%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (2 samples, 0.28%)</title><rect x="50.4923%" y="437" width="0.2813%" height="15" fill="rgb(230,229,49)" fg:x="359" fg:w="2"/><text x="50.7423%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.28%)</title><rect x="50.4923%" y="421" width="0.2813%" height="15" fill="rgb(238,70,47)" fg:x="359" fg:w="2"/><text x="50.7423%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.28%)</title><rect x="50.4923%" y="405" width="0.2813%" height="15" fill="rgb(231,160,17)" fg:x="359" fg:w="2"/><text x="50.7423%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.14%)</title><rect x="50.7736%" y="437" width="0.1406%" height="15" fill="rgb(218,68,53)" fg:x="361" fg:w="1"/><text x="51.0236%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.14%)</title><rect x="50.7736%" y="421" width="0.1406%" height="15" fill="rgb(236,111,10)" fg:x="361" fg:w="1"/><text x="51.0236%" y="431.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="50.7736%" y="405" width="0.1406%" height="15" fill="rgb(224,34,41)" fg:x="361" fg:w="1"/><text x="51.0236%" y="415.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.14%)</title><rect x="50.7736%" y="389" width="0.1406%" height="15" fill="rgb(241,118,19)" fg:x="361" fg:w="1"/><text x="51.0236%" y="399.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.14%)</title><rect x="50.7736%" y="373" width="0.1406%" height="15" fill="rgb(238,129,25)" fg:x="361" fg:w="1"/><text x="51.0236%" y="383.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.14%)</title><rect x="50.7736%" y="357" width="0.1406%" height="15" fill="rgb(238,22,31)" fg:x="361" fg:w="1"/><text x="51.0236%" y="367.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (7 samples, 0.98%)</title><rect x="50.2110%" y="517" width="0.9845%" height="15" fill="rgb(222,174,48)" fg:x="357" fg:w="7"/><text x="50.4610%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (7 samples, 0.98%)</title><rect x="50.2110%" y="501" width="0.9845%" height="15" fill="rgb(206,152,40)" fg:x="357" fg:w="7"/><text x="50.4610%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.98%)</title><rect x="50.2110%" y="485" width="0.9845%" height="15" fill="rgb(218,99,54)" fg:x="357" fg:w="7"/><text x="50.4610%" y="495.50"></text></g><g><title>y2021::d12::main::traverse::{{closure}} (7 samples, 0.98%)</title><rect x="50.2110%" y="469" width="0.9845%" height="15" fill="rgb(220,174,26)" fg:x="357" fg:w="7"/><text x="50.4610%" y="479.50"></text></g><g><title>y2021::d12::node_path::NodePath::count_node (6 samples, 0.84%)</title><rect x="50.3516%" y="453" width="0.8439%" height="15" fill="rgb(245,116,9)" fg:x="358" fg:w="6"/><text x="50.6016%" y="463.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (2 samples, 0.28%)</title><rect x="50.9142%" y="437" width="0.2813%" height="15" fill="rgb(209,72,35)" fg:x="362" fg:w="2"/><text x="51.1642%" y="447.50"></text></g><g><title>&lt;&amp;alloc::string::String as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.28%)</title><rect x="50.9142%" y="421" width="0.2813%" height="15" fill="rgb(226,126,21)" fg:x="362" fg:w="2"/><text x="51.1642%" y="431.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.28%)</title><rect x="50.9142%" y="405" width="0.2813%" height="15" fill="rgb(227,192,1)" fg:x="362" fg:w="2"/><text x="51.1642%" y="415.50"></text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.28%)</title><rect x="50.9142%" y="389" width="0.2813%" height="15" fill="rgb(237,180,29)" fg:x="362" fg:w="2"/><text x="51.1642%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.28%)</title><rect x="51.1955%" y="405" width="0.2813%" height="15" fill="rgb(230,197,35)" fg:x="364" fg:w="2"/><text x="51.4455%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.28%)</title><rect x="51.1955%" y="389" width="0.2813%" height="15" fill="rgb(246,193,31)" fg:x="364" fg:w="2"/><text x="51.4455%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.28%)</title><rect x="51.1955%" y="373" width="0.2813%" height="15" fill="rgb(241,36,4)" fg:x="364" fg:w="2"/><text x="51.4455%" y="383.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.28%)</title><rect x="51.1955%" y="357" width="0.2813%" height="15" fill="rgb(241,130,17)" fg:x="364" fg:w="2"/><text x="51.4455%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (3 samples, 0.42%)</title><rect x="51.1955%" y="437" width="0.4219%" height="15" fill="rgb(206,137,32)" fg:x="364" fg:w="3"/><text x="51.4455%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.42%)</title><rect x="51.1955%" y="421" width="0.4219%" height="15" fill="rgb(237,228,51)" fg:x="364" fg:w="3"/><text x="51.4455%" y="431.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.14%)</title><rect x="51.4768%" y="405" width="0.1406%" height="15" fill="rgb(243,6,42)" fg:x="366" fg:w="1"/><text x="51.7268%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="51.4768%" y="389" width="0.1406%" height="15" fill="rgb(251,74,28)" fg:x="366" fg:w="1"/><text x="51.7268%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="51.4768%" y="373" width="0.1406%" height="15" fill="rgb(218,20,49)" fg:x="366" fg:w="1"/><text x="51.7268%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="51.4768%" y="357" width="0.1406%" height="15" fill="rgb(238,28,14)" fg:x="366" fg:w="1"/><text x="51.7268%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.56%)</title><rect x="51.1955%" y="453" width="0.5626%" height="15" fill="rgb(229,40,46)" fg:x="364" fg:w="4"/><text x="51.4455%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.14%)</title><rect x="51.6174%" y="437" width="0.1406%" height="15" fill="rgb(244,195,20)" fg:x="367" fg:w="1"/><text x="51.8674%" y="447.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.14%)</title><rect x="51.6174%" y="421" width="0.1406%" height="15" fill="rgb(253,56,35)" fg:x="367" fg:w="1"/><text x="51.8674%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.14%)</title><rect x="51.6174%" y="405" width="0.1406%" height="15" fill="rgb(210,149,44)" fg:x="367" fg:w="1"/><text x="51.8674%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.14%)</title><rect x="51.6174%" y="389" width="0.1406%" height="15" fill="rgb(240,135,12)" fg:x="367" fg:w="1"/><text x="51.8674%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.14%)</title><rect x="51.7581%" y="373" width="0.1406%" height="15" fill="rgb(251,24,50)" fg:x="368" fg:w="1"/><text x="52.0081%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.28%)</title><rect x="51.7581%" y="421" width="0.2813%" height="15" fill="rgb(243,200,47)" fg:x="368" fg:w="2"/><text x="52.0081%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.28%)</title><rect x="51.7581%" y="405" width="0.2813%" height="15" fill="rgb(224,166,26)" fg:x="368" fg:w="2"/><text x="52.0081%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.28%)</title><rect x="51.7581%" y="389" width="0.2813%" height="15" fill="rgb(233,0,47)" fg:x="368" fg:w="2"/><text x="52.0081%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.14%)</title><rect x="51.8987%" y="373" width="0.1406%" height="15" fill="rgb(253,80,5)" fg:x="369" fg:w="1"/><text x="52.1487%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 2.11%)</title><rect x="50.0703%" y="613" width="2.1097%" height="15" fill="rgb(214,133,25)" fg:x="356" fg:w="15"/><text x="50.3203%" y="623.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find (15 samples, 2.11%)</title><rect x="50.0703%" y="597" width="2.1097%" height="15" fill="rgb(209,27,14)" fg:x="356" fg:w="15"/><text x="50.3203%" y="607.50">c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 2.11%)</title><rect x="50.0703%" y="581" width="2.1097%" height="15" fill="rgb(219,102,51)" fg:x="356" fg:w="15"/><text x="50.3203%" y="591.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 2.11%)</title><rect x="50.0703%" y="565" width="2.1097%" height="15" fill="rgb(237,18,16)" fg:x="356" fg:w="15"/><text x="50.3203%" y="575.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 2.11%)</title><rect x="50.0703%" y="549" width="2.1097%" height="15" fill="rgb(241,85,17)" fg:x="356" fg:w="15"/><text x="50.3203%" y="559.50">c..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (14 samples, 1.97%)</title><rect x="50.2110%" y="533" width="1.9691%" height="15" fill="rgb(236,90,42)" fg:x="357" fg:w="14"/><text x="50.4610%" y="543.50">c..</text></g><g><title>y2021::d12::main::traverse::{{closure}} (7 samples, 0.98%)</title><rect x="51.1955%" y="517" width="0.9845%" height="15" fill="rgb(249,57,21)" fg:x="364" fg:w="7"/><text x="51.4455%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 0.98%)</title><rect x="51.1955%" y="501" width="0.9845%" height="15" fill="rgb(243,12,36)" fg:x="364" fg:w="7"/><text x="51.4455%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 0.98%)</title><rect x="51.1955%" y="485" width="0.9845%" height="15" fill="rgb(253,128,47)" fg:x="364" fg:w="7"/><text x="51.4455%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.98%)</title><rect x="51.1955%" y="469" width="0.9845%" height="15" fill="rgb(207,33,20)" fg:x="364" fg:w="7"/><text x="51.4455%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.42%)</title><rect x="51.7581%" y="453" width="0.4219%" height="15" fill="rgb(233,215,35)" fg:x="368" fg:w="3"/><text x="52.0081%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.42%)</title><rect x="51.7581%" y="437" width="0.4219%" height="15" fill="rgb(249,188,52)" fg:x="368" fg:w="3"/><text x="52.0081%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.14%)</title><rect x="52.0394%" y="421" width="0.1406%" height="15" fill="rgb(225,12,32)" fg:x="370" fg:w="1"/><text x="52.2894%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.14%)</title><rect x="52.0394%" y="405" width="0.1406%" height="15" fill="rgb(247,98,14)" fg:x="370" fg:w="1"/><text x="52.2894%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.14%)</title><rect x="52.0394%" y="389" width="0.1406%" height="15" fill="rgb(247,219,48)" fg:x="370" fg:w="1"/><text x="52.2894%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.14%)</title><rect x="52.0394%" y="373" width="0.1406%" height="15" fill="rgb(253,60,48)" fg:x="370" fg:w="1"/><text x="52.2894%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.14%)</title><rect x="52.0394%" y="357" width="0.1406%" height="15" fill="rgb(245,15,52)" fg:x="370" fg:w="1"/><text x="52.2894%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.14%)</title><rect x="52.0394%" y="341" width="0.1406%" height="15" fill="rgb(220,133,28)" fg:x="370" fg:w="1"/><text x="52.2894%" y="351.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.14%)</title><rect x="52.0394%" y="325" width="0.1406%" height="15" fill="rgb(217,180,4)" fg:x="370" fg:w="1"/><text x="52.2894%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="52.1800%" y="597" width="0.1406%" height="15" fill="rgb(251,24,1)" fg:x="371" fg:w="1"/><text x="52.4300%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="52.1800%" y="581" width="0.1406%" height="15" fill="rgb(212,185,49)" fg:x="371" fg:w="1"/><text x="52.4300%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="52.1800%" y="565" width="0.1406%" height="15" fill="rgb(215,175,22)" fg:x="371" fg:w="1"/><text x="52.4300%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="52.1800%" y="549" width="0.1406%" height="15" fill="rgb(250,205,14)" fg:x="371" fg:w="1"/><text x="52.4300%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="52.1800%" y="533" width="0.1406%" height="15" fill="rgb(225,211,22)" fg:x="371" fg:w="1"/><text x="52.4300%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="52.1800%" y="517" width="0.1406%" height="15" fill="rgb(251,179,42)" fg:x="371" fg:w="1"/><text x="52.4300%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="52.1800%" y="501" width="0.1406%" height="15" fill="rgb(208,216,51)" fg:x="371" fg:w="1"/><text x="52.4300%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="52.1800%" y="485" width="0.1406%" height="15" fill="rgb(235,36,11)" fg:x="371" fg:w="1"/><text x="52.4300%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="52.1800%" y="469" width="0.1406%" height="15" fill="rgb(213,189,28)" fg:x="371" fg:w="1"/><text x="52.4300%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="52.1800%" y="453" width="0.1406%" height="15" fill="rgb(227,203,42)" fg:x="371" fg:w="1"/><text x="52.4300%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="52.1800%" y="437" width="0.1406%" height="15" fill="rgb(244,72,36)" fg:x="371" fg:w="1"/><text x="52.4300%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="52.1800%" y="421" width="0.1406%" height="15" fill="rgb(213,53,17)" fg:x="371" fg:w="1"/><text x="52.4300%" y="431.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="52.1800%" y="405" width="0.1406%" height="15" fill="rgb(207,167,3)" fg:x="371" fg:w="1"/><text x="52.4300%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="52.3207%" y="453" width="0.2813%" height="15" fill="rgb(216,98,30)" fg:x="372" fg:w="2"/><text x="52.5707%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="52.3207%" y="437" width="0.2813%" height="15" fill="rgb(236,123,15)" fg:x="372" fg:w="2"/><text x="52.5707%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="52.3207%" y="421" width="0.2813%" height="15" fill="rgb(248,81,50)" fg:x="372" fg:w="2"/><text x="52.5707%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.28%)</title><rect x="52.3207%" y="405" width="0.2813%" height="15" fill="rgb(214,120,4)" fg:x="372" fg:w="2"/><text x="52.5707%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="52.3207%" y="389" width="0.2813%" height="15" fill="rgb(208,179,34)" fg:x="372" fg:w="2"/><text x="52.5707%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="52.3207%" y="373" width="0.2813%" height="15" fill="rgb(227,140,7)" fg:x="372" fg:w="2"/><text x="52.5707%" y="383.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="52.3207%" y="357" width="0.2813%" height="15" fill="rgb(214,22,6)" fg:x="372" fg:w="2"/><text x="52.5707%" y="367.50"></text></g><g><title>_int_malloc (2 samples, 0.28%)</title><rect x="52.3207%" y="341" width="0.2813%" height="15" fill="rgb(207,137,27)" fg:x="372" fg:w="2"/><text x="52.5707%" y="351.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="52.4613%" y="325" width="0.1406%" height="15" fill="rgb(210,8,46)" fg:x="373" fg:w="1"/><text x="52.7113%" y="335.50"></text></g><g><title>exc_page_fault (1 samples, 0.14%)</title><rect x="52.4613%" y="309" width="0.1406%" height="15" fill="rgb(240,16,54)" fg:x="373" fg:w="1"/><text x="52.7113%" y="319.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="52.4613%" y="293" width="0.1406%" height="15" fill="rgb(211,209,29)" fg:x="373" fg:w="1"/><text x="52.7113%" y="303.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="52.4613%" y="277" width="0.1406%" height="15" fill="rgb(226,228,24)" fg:x="373" fg:w="1"/><text x="52.7113%" y="287.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="52.4613%" y="261" width="0.1406%" height="15" fill="rgb(222,84,9)" fg:x="373" fg:w="1"/><text x="52.7113%" y="271.50"></text></g><g><title>do_anonymous_page (1 samples, 0.14%)</title><rect x="52.4613%" y="245" width="0.1406%" height="15" fill="rgb(234,203,30)" fg:x="373" fg:w="1"/><text x="52.7113%" y="255.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="52.4613%" y="229" width="0.1406%" height="15" fill="rgb(238,109,14)" fg:x="373" fg:w="1"/><text x="52.7113%" y="239.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="52.4613%" y="213" width="0.1406%" height="15" fill="rgb(233,206,34)" fg:x="373" fg:w="1"/><text x="52.7113%" y="223.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.14%)</title><rect x="52.4613%" y="197" width="0.1406%" height="15" fill="rgb(220,167,47)" fg:x="373" fg:w="1"/><text x="52.7113%" y="207.50"></text></g><g><title>clear_page_rep (1 samples, 0.14%)</title><rect x="52.4613%" y="181" width="0.1406%" height="15" fill="rgb(238,105,10)" fg:x="373" fg:w="1"/><text x="52.7113%" y="191.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.14%)</title><rect x="52.6020%" y="421" width="0.1406%" height="15" fill="rgb(213,227,17)" fg:x="374" fg:w="1"/><text x="52.8520%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.56%)</title><rect x="52.3207%" y="533" width="0.5626%" height="15" fill="rgb(217,132,38)" fg:x="372" fg:w="4"/><text x="52.5707%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.56%)</title><rect x="52.3207%" y="517" width="0.5626%" height="15" fill="rgb(242,146,4)" fg:x="372" fg:w="4"/><text x="52.5707%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.56%)</title><rect x="52.3207%" y="501" width="0.5626%" height="15" fill="rgb(212,61,9)" fg:x="372" fg:w="4"/><text x="52.5707%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.56%)</title><rect x="52.3207%" y="485" width="0.5626%" height="15" fill="rgb(247,126,22)" fg:x="372" fg:w="4"/><text x="52.5707%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.56%)</title><rect x="52.3207%" y="469" width="0.5626%" height="15" fill="rgb(220,196,2)" fg:x="372" fg:w="4"/><text x="52.5707%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.28%)</title><rect x="52.6020%" y="453" width="0.2813%" height="15" fill="rgb(208,46,4)" fg:x="374" fg:w="2"/><text x="52.8520%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.28%)</title><rect x="52.6020%" y="437" width="0.2813%" height="15" fill="rgb(252,104,46)" fg:x="374" fg:w="2"/><text x="52.8520%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="52.7426%" y="421" width="0.1406%" height="15" fill="rgb(237,152,48)" fg:x="375" fg:w="1"/><text x="52.9926%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="52.8833%" y="533" width="0.1406%" height="15" fill="rgb(221,59,37)" fg:x="376" fg:w="1"/><text x="53.1333%" y="543.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::clone::Clone&gt;::clone (10 samples, 1.41%)</title><rect x="52.1800%" y="613" width="1.4065%" height="15" fill="rgb(209,202,51)" fg:x="371" fg:w="10"/><text x="52.4300%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 1.27%)</title><rect x="52.3207%" y="597" width="1.2658%" height="15" fill="rgb(228,81,30)" fg:x="372" fg:w="9"/><text x="52.5707%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 1.27%)</title><rect x="52.3207%" y="581" width="1.2658%" height="15" fill="rgb(227,42,39)" fg:x="372" fg:w="9"/><text x="52.5707%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 1.27%)</title><rect x="52.3207%" y="565" width="1.2658%" height="15" fill="rgb(221,26,2)" fg:x="372" fg:w="9"/><text x="52.5707%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 1.27%)</title><rect x="52.3207%" y="549" width="1.2658%" height="15" fill="rgb(254,61,31)" fg:x="372" fg:w="9"/><text x="52.5707%" y="559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.56%)</title><rect x="53.0239%" y="533" width="0.5626%" height="15" fill="rgb(222,173,38)" fg:x="377" fg:w="4"/><text x="53.2739%" y="543.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="53.5865%" y="613" width="0.1406%" height="15" fill="rgb(218,50,12)" fg:x="381" fg:w="1"/><text x="53.8365%" y="623.50"></text></g><g><title>_int_free (3 samples, 0.42%)</title><rect x="53.7271%" y="613" width="0.4219%" height="15" fill="rgb(223,88,40)" fg:x="382" fg:w="3"/><text x="53.9771%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.14%)</title><rect x="54.1491%" y="613" width="0.1406%" height="15" fill="rgb(237,54,19)" fg:x="385" fg:w="1"/><text x="54.3991%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="54.1491%" y="597" width="0.1406%" height="15" fill="rgb(251,129,25)" fg:x="385" fg:w="1"/><text x="54.3991%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="54.1491%" y="581" width="0.1406%" height="15" fill="rgb(238,97,19)" fg:x="385" fg:w="1"/><text x="54.3991%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="54.1491%" y="565" width="0.1406%" height="15" fill="rgb(240,169,18)" fg:x="385" fg:w="1"/><text x="54.3991%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="54.1491%" y="549" width="0.1406%" height="15" fill="rgb(230,187,49)" fg:x="385" fg:w="1"/><text x="54.3991%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="54.1491%" y="533" width="0.1406%" height="15" fill="rgb(209,44,26)" fg:x="385" fg:w="1"/><text x="54.3991%" y="543.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="54.1491%" y="517" width="0.1406%" height="15" fill="rgb(244,0,6)" fg:x="385" fg:w="1"/><text x="54.3991%" y="527.50"></text></g><g><title>__GI___libc_free (5 samples, 0.70%)</title><rect x="54.2897%" y="453" width="0.7032%" height="15" fill="rgb(248,18,21)" fg:x="386" fg:w="5"/><text x="54.5397%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 1.41%)</title><rect x="54.2897%" y="485" width="1.4065%" height="15" fill="rgb(245,180,19)" fg:x="386" fg:w="10"/><text x="54.5397%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 1.41%)</title><rect x="54.2897%" y="469" width="1.4065%" height="15" fill="rgb(252,118,36)" fg:x="386" fg:w="10"/><text x="54.5397%" y="479.50"></text></g><g><title>_int_free (5 samples, 0.70%)</title><rect x="54.9930%" y="453" width="0.7032%" height="15" fill="rgb(210,224,19)" fg:x="391" fg:w="5"/><text x="55.2430%" y="463.50"></text></g><g><title>free_perturb (1 samples, 0.14%)</title><rect x="55.5556%" y="437" width="0.1406%" height="15" fill="rgb(218,30,24)" fg:x="395" fg:w="1"/><text x="55.8056%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 1.69%)</title><rect x="54.2897%" y="581" width="1.6878%" height="15" fill="rgb(219,75,50)" fg:x="386" fg:w="12"/><text x="54.5397%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (12 samples, 1.69%)</title><rect x="54.2897%" y="565" width="1.6878%" height="15" fill="rgb(234,72,50)" fg:x="386" fg:w="12"/><text x="54.5397%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12 samples, 1.69%)</title><rect x="54.2897%" y="549" width="1.6878%" height="15" fill="rgb(219,100,48)" fg:x="386" fg:w="12"/><text x="54.5397%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 1.69%)</title><rect x="54.2897%" y="533" width="1.6878%" height="15" fill="rgb(253,5,41)" fg:x="386" fg:w="12"/><text x="54.5397%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 1.69%)</title><rect x="54.2897%" y="517" width="1.6878%" height="15" fill="rgb(247,181,11)" fg:x="386" fg:w="12"/><text x="54.5397%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 1.69%)</title><rect x="54.2897%" y="501" width="1.6878%" height="15" fill="rgb(222,223,25)" fg:x="386" fg:w="12"/><text x="54.5397%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.28%)</title><rect x="55.6962%" y="485" width="0.2813%" height="15" fill="rgb(214,198,28)" fg:x="396" fg:w="2"/><text x="55.9462%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="55.9775%" y="549" width="0.1406%" height="15" fill="rgb(230,46,43)" fg:x="398" fg:w="1"/><text x="56.2275%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="55.9775%" y="533" width="0.1406%" height="15" fill="rgb(233,65,53)" fg:x="398" fg:w="1"/><text x="56.2275%" y="543.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="55.9775%" y="517" width="0.1406%" height="15" fill="rgb(221,121,27)" fg:x="398" fg:w="1"/><text x="56.2275%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d12::node_path::NodePath&gt; (14 samples, 1.97%)</title><rect x="54.2897%" y="613" width="1.9691%" height="15" fill="rgb(247,70,47)" fg:x="386" fg:w="14"/><text x="54.5397%" y="623.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (14 samples, 1.97%)</title><rect x="54.2897%" y="597" width="1.9691%" height="15" fill="rgb(228,85,35)" fg:x="386" fg:w="14"/><text x="54.5397%" y="607.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (2 samples, 0.28%)</title><rect x="55.9775%" y="581" width="0.2813%" height="15" fill="rgb(209,50,18)" fg:x="398" fg:w="2"/><text x="56.2275%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.28%)</title><rect x="55.9775%" y="565" width="0.2813%" height="15" fill="rgb(250,19,35)" fg:x="398" fg:w="2"/><text x="56.2275%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.14%)</title><rect x="56.1181%" y="549" width="0.1406%" height="15" fill="rgb(253,107,29)" fg:x="399" fg:w="1"/><text x="56.3681%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="56.2588%" y="565" width="0.1406%" height="15" fill="rgb(252,179,29)" fg:x="400" fg:w="1"/><text x="56.5088%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.14%)</title><rect x="56.2588%" y="549" width="0.1406%" height="15" fill="rgb(238,194,6)" fg:x="400" fg:w="1"/><text x="56.5088%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.14%)</title><rect x="56.2588%" y="533" width="0.1406%" height="15" fill="rgb(238,164,29)" fg:x="400" fg:w="1"/><text x="56.5088%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.28%)</title><rect x="56.2588%" y="613" width="0.2813%" height="15" fill="rgb(224,25,9)" fg:x="400" fg:w="2"/><text x="56.5088%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.28%)</title><rect x="56.2588%" y="597" width="0.2813%" height="15" fill="rgb(244,153,23)" fg:x="400" fg:w="2"/><text x="56.5088%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.28%)</title><rect x="56.2588%" y="581" width="0.2813%" height="15" fill="rgb(212,203,14)" fg:x="400" fg:w="2"/><text x="56.5088%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.14%)</title><rect x="56.3994%" y="565" width="0.1406%" height="15" fill="rgb(220,164,20)" fg:x="401" fg:w="1"/><text x="56.6494%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.14%)</title><rect x="56.3994%" y="549" width="0.1406%" height="15" fill="rgb(222,203,48)" fg:x="401" fg:w="1"/><text x="56.6494%" y="559.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.14%)</title><rect x="56.3994%" y="533" width="0.1406%" height="15" fill="rgb(215,159,22)" fg:x="401" fg:w="1"/><text x="56.6494%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="56.3994%" y="517" width="0.1406%" height="15" fill="rgb(216,183,47)" fg:x="401" fg:w="1"/><text x="56.6494%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.14%)</title><rect x="56.3994%" y="501" width="0.1406%" height="15" fill="rgb(229,195,25)" fg:x="401" fg:w="1"/><text x="56.6494%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.14%)</title><rect x="56.3994%" y="485" width="0.1406%" height="15" fill="rgb(224,132,51)" fg:x="401" fg:w="1"/><text x="56.6494%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.14%)</title><rect x="56.3994%" y="469" width="0.1406%" height="15" fill="rgb(240,63,7)" fg:x="401" fg:w="1"/><text x="56.6494%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.14%)</title><rect x="56.3994%" y="453" width="0.1406%" height="15" fill="rgb(249,182,41)" fg:x="401" fg:w="1"/><text x="56.6494%" y="463.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="56.3994%" y="437" width="0.1406%" height="15" fill="rgb(243,47,26)" fg:x="401" fg:w="1"/><text x="56.6494%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.42%)</title><rect x="56.5401%" y="549" width="0.4219%" height="15" fill="rgb(233,48,2)" fg:x="402" fg:w="3"/><text x="56.7901%" y="559.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::hash::Hash&gt;::hash (3 samples, 0.42%)</title><rect x="56.5401%" y="533" width="0.4219%" height="15" fill="rgb(244,165,34)" fg:x="402" fg:w="3"/><text x="56.7901%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (3 samples, 0.42%)</title><rect x="56.5401%" y="517" width="0.4219%" height="15" fill="rgb(207,89,7)" fg:x="402" fg:w="3"/><text x="56.7901%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.42%)</title><rect x="56.5401%" y="501" width="0.4219%" height="15" fill="rgb(244,117,36)" fg:x="402" fg:w="3"/><text x="56.7901%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.42%)</title><rect x="56.5401%" y="485" width="0.4219%" height="15" fill="rgb(226,144,34)" fg:x="402" fg:w="3"/><text x="56.7901%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.42%)</title><rect x="56.5401%" y="469" width="0.4219%" height="15" fill="rgb(213,23,19)" fg:x="402" fg:w="3"/><text x="56.7901%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.42%)</title><rect x="56.5401%" y="453" width="0.4219%" height="15" fill="rgb(217,75,12)" fg:x="402" fg:w="3"/><text x="56.7901%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.42%)</title><rect x="56.5401%" y="437" width="0.4219%" height="15" fill="rgb(224,159,17)" fg:x="402" fg:w="3"/><text x="56.7901%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="56.8214%" y="421" width="0.1406%" height="15" fill="rgb(217,118,1)" fg:x="404" fg:w="1"/><text x="57.0714%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.14%)</title><rect x="57.1027%" y="517" width="0.1406%" height="15" fill="rgb(232,180,48)" fg:x="406" fg:w="1"/><text x="57.3527%" y="527.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="57.1027%" y="501" width="0.1406%" height="15" fill="rgb(230,27,33)" fg:x="406" fg:w="1"/><text x="57.3527%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="57.1027%" y="485" width="0.1406%" height="15" fill="rgb(205,31,21)" fg:x="406" fg:w="1"/><text x="57.3527%" y="495.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.14%)</title><rect x="57.1027%" y="469" width="0.1406%" height="15" fill="rgb(253,59,4)" fg:x="406" fg:w="1"/><text x="57.3527%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.14%)</title><rect x="57.1027%" y="453" width="0.1406%" height="15" fill="rgb(224,201,9)" fg:x="406" fg:w="1"/><text x="57.3527%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.14%)</title><rect x="57.1027%" y="437" width="0.1406%" height="15" fill="rgb(229,206,30)" fg:x="406" fg:w="1"/><text x="57.3527%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.14%)</title><rect x="57.1027%" y="421" width="0.1406%" height="15" fill="rgb(212,67,47)" fg:x="406" fg:w="1"/><text x="57.3527%" y="431.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (7 samples, 0.98%)</title><rect x="56.5401%" y="613" width="0.9845%" height="15" fill="rgb(211,96,50)" fg:x="402" fg:w="7"/><text x="56.7901%" y="623.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (7 samples, 0.98%)</title><rect x="56.5401%" y="597" width="0.9845%" height="15" fill="rgb(252,114,18)" fg:x="402" fg:w="7"/><text x="56.7901%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (7 samples, 0.98%)</title><rect x="56.5401%" y="581" width="0.9845%" height="15" fill="rgb(223,58,37)" fg:x="402" fg:w="7"/><text x="56.7901%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.98%)</title><rect x="56.5401%" y="565" width="0.9845%" height="15" fill="rgb(237,70,4)" fg:x="402" fg:w="7"/><text x="56.7901%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.56%)</title><rect x="56.9620%" y="549" width="0.5626%" height="15" fill="rgb(244,85,46)" fg:x="405" fg:w="4"/><text x="57.2120%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.56%)</title><rect x="56.9620%" y="533" width="0.5626%" height="15" fill="rgb(223,39,52)" fg:x="405" fg:w="4"/><text x="57.2120%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.28%)</title><rect x="57.2433%" y="517" width="0.2813%" height="15" fill="rgb(218,200,14)" fg:x="407" fg:w="2"/><text x="57.4933%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.28%)</title><rect x="57.2433%" y="501" width="0.2813%" height="15" fill="rgb(208,171,16)" fg:x="407" fg:w="2"/><text x="57.4933%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.28%)</title><rect x="57.2433%" y="485" width="0.2813%" height="15" fill="rgb(234,200,18)" fg:x="407" fg:w="2"/><text x="57.4933%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.28%)</title><rect x="57.2433%" y="469" width="0.2813%" height="15" fill="rgb(228,45,11)" fg:x="407" fg:w="2"/><text x="57.4933%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.28%)</title><rect x="57.2433%" y="453" width="0.2813%" height="15" fill="rgb(237,182,11)" fg:x="407" fg:w="2"/><text x="57.4933%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.28%)</title><rect x="57.2433%" y="437" width="0.2813%" height="15" fill="rgb(241,175,49)" fg:x="407" fg:w="2"/><text x="57.4933%" y="447.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.28%)</title><rect x="57.2433%" y="421" width="0.2813%" height="15" fill="rgb(247,38,35)" fg:x="407" fg:w="2"/><text x="57.4933%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.14%)</title><rect x="57.5246%" y="421" width="0.1406%" height="15" fill="rgb(228,39,49)" fg:x="409" fg:w="1"/><text x="57.7746%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.14%)</title><rect x="57.5246%" y="405" width="0.1406%" height="15" fill="rgb(226,101,26)" fg:x="409" fg:w="1"/><text x="57.7746%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.14%)</title><rect x="57.5246%" y="389" width="0.1406%" height="15" fill="rgb(206,141,19)" fg:x="409" fg:w="1"/><text x="57.7746%" y="399.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (5 samples, 0.70%)</title><rect x="57.5246%" y="501" width="0.7032%" height="15" fill="rgb(211,200,13)" fg:x="409" fg:w="5"/><text x="57.7746%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (5 samples, 0.70%)</title><rect x="57.5246%" y="485" width="0.7032%" height="15" fill="rgb(241,121,6)" fg:x="409" fg:w="5"/><text x="57.7746%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.70%)</title><rect x="57.5246%" y="469" width="0.7032%" height="15" fill="rgb(234,221,29)" fg:x="409" fg:w="5"/><text x="57.7746%" y="479.50"></text></g><g><title>y2021::d12::main::traverse::{{closure}} (5 samples, 0.70%)</title><rect x="57.5246%" y="453" width="0.7032%" height="15" fill="rgb(229,136,5)" fg:x="409" fg:w="5"/><text x="57.7746%" y="463.50"></text></g><g><title>y2021::d12::node_path::NodePath::count_node (5 samples, 0.70%)</title><rect x="57.5246%" y="437" width="0.7032%" height="15" fill="rgb(238,36,11)" fg:x="409" fg:w="5"/><text x="57.7746%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (4 samples, 0.56%)</title><rect x="57.6653%" y="421" width="0.5626%" height="15" fill="rgb(251,55,41)" fg:x="410" fg:w="4"/><text x="57.9153%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.56%)</title><rect x="57.6653%" y="405" width="0.5626%" height="15" fill="rgb(242,34,40)" fg:x="410" fg:w="4"/><text x="57.9153%" y="415.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.56%)</title><rect x="57.6653%" y="389" width="0.5626%" height="15" fill="rgb(215,42,17)" fg:x="410" fg:w="4"/><text x="57.9153%" y="399.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (4 samples, 0.56%)</title><rect x="57.6653%" y="373" width="0.5626%" height="15" fill="rgb(207,44,46)" fg:x="410" fg:w="4"/><text x="57.9153%" y="383.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (4 samples, 0.56%)</title><rect x="57.6653%" y="357" width="0.5626%" height="15" fill="rgb(211,206,28)" fg:x="410" fg:w="4"/><text x="57.9153%" y="367.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (4 samples, 0.56%)</title><rect x="57.6653%" y="341" width="0.5626%" height="15" fill="rgb(237,167,16)" fg:x="410" fg:w="4"/><text x="57.9153%" y="351.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (2 samples, 0.28%)</title><rect x="57.9466%" y="325" width="0.2813%" height="15" fill="rgb(233,66,6)" fg:x="412" fg:w="2"/><text x="58.1966%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.28%)</title><rect x="58.2278%" y="437" width="0.2813%" height="15" fill="rgb(246,123,29)" fg:x="414" fg:w="2"/><text x="58.4778%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.28%)</title><rect x="58.2278%" y="421" width="0.2813%" height="15" fill="rgb(209,62,40)" fg:x="414" fg:w="2"/><text x="58.4778%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.28%)</title><rect x="58.2278%" y="405" width="0.2813%" height="15" fill="rgb(218,4,25)" fg:x="414" fg:w="2"/><text x="58.4778%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.28%)</title><rect x="58.2278%" y="389" width="0.2813%" height="15" fill="rgb(253,91,49)" fg:x="414" fg:w="2"/><text x="58.4778%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.14%)</title><rect x="58.3685%" y="373" width="0.1406%" height="15" fill="rgb(228,155,29)" fg:x="415" fg:w="1"/><text x="58.6185%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="58.3685%" y="357" width="0.1406%" height="15" fill="rgb(243,57,37)" fg:x="415" fg:w="1"/><text x="58.6185%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 1.27%)</title><rect x="57.5246%" y="597" width="1.2658%" height="15" fill="rgb(244,167,17)" fg:x="409" fg:w="9"/><text x="57.7746%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (9 samples, 1.27%)</title><rect x="57.5246%" y="581" width="1.2658%" height="15" fill="rgb(207,181,38)" fg:x="409" fg:w="9"/><text x="57.7746%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 1.27%)</title><rect x="57.5246%" y="565" width="1.2658%" height="15" fill="rgb(211,8,23)" fg:x="409" fg:w="9"/><text x="57.7746%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 1.27%)</title><rect x="57.5246%" y="549" width="1.2658%" height="15" fill="rgb(235,11,44)" fg:x="409" fg:w="9"/><text x="57.7746%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 1.27%)</title><rect x="57.5246%" y="533" width="1.2658%" height="15" fill="rgb(248,18,52)" fg:x="409" fg:w="9"/><text x="57.7746%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (9 samples, 1.27%)</title><rect x="57.5246%" y="517" width="1.2658%" height="15" fill="rgb(208,4,7)" fg:x="409" fg:w="9"/><text x="57.7746%" y="527.50"></text></g><g><title>y2021::d12::main::traverse::{{closure}} (4 samples, 0.56%)</title><rect x="58.2278%" y="501" width="0.5626%" height="15" fill="rgb(240,17,39)" fg:x="414" fg:w="4"/><text x="58.4778%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.56%)</title><rect x="58.2278%" y="485" width="0.5626%" height="15" fill="rgb(207,170,3)" fg:x="414" fg:w="4"/><text x="58.4778%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.56%)</title><rect x="58.2278%" y="469" width="0.5626%" height="15" fill="rgb(236,100,52)" fg:x="414" fg:w="4"/><text x="58.4778%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.56%)</title><rect x="58.2278%" y="453" width="0.5626%" height="15" fill="rgb(246,78,51)" fg:x="414" fg:w="4"/><text x="58.4778%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.28%)</title><rect x="58.5091%" y="437" width="0.2813%" height="15" fill="rgb(211,17,15)" fg:x="416" fg:w="2"/><text x="58.7591%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.28%)</title><rect x="58.5091%" y="421" width="0.2813%" height="15" fill="rgb(209,59,46)" fg:x="416" fg:w="2"/><text x="58.7591%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.28%)</title><rect x="58.5091%" y="405" width="0.2813%" height="15" fill="rgb(210,92,25)" fg:x="416" fg:w="2"/><text x="58.7591%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.28%)</title><rect x="58.5091%" y="389" width="0.2813%" height="15" fill="rgb(238,174,52)" fg:x="416" fg:w="2"/><text x="58.7591%" y="399.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.28%)</title><rect x="58.5091%" y="373" width="0.2813%" height="15" fill="rgb(230,73,7)" fg:x="416" fg:w="2"/><text x="58.7591%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.28%)</title><rect x="58.5091%" y="357" width="0.2813%" height="15" fill="rgb(243,124,40)" fg:x="416" fg:w="2"/><text x="58.7591%" y="367.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.28%)</title><rect x="58.5091%" y="341" width="0.2813%" height="15" fill="rgb(244,170,11)" fg:x="416" fg:w="2"/><text x="58.7591%" y="351.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.28%)</title><rect x="58.5091%" y="325" width="0.2813%" height="15" fill="rgb(207,114,54)" fg:x="416" fg:w="2"/><text x="58.7591%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="58.7904%" y="517" width="0.1406%" height="15" fill="rgb(205,42,20)" fg:x="418" fg:w="1"/><text x="59.0404%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="58.7904%" y="501" width="0.1406%" height="15" fill="rgb(230,30,28)" fg:x="418" fg:w="1"/><text x="59.0404%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="58.7904%" y="485" width="0.1406%" height="15" fill="rgb(205,73,54)" fg:x="418" fg:w="1"/><text x="59.0404%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="58.7904%" y="469" width="0.1406%" height="15" fill="rgb(254,227,23)" fg:x="418" fg:w="1"/><text x="59.0404%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="58.7904%" y="453" width="0.1406%" height="15" fill="rgb(228,202,34)" fg:x="418" fg:w="1"/><text x="59.0404%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="58.7904%" y="437" width="0.1406%" height="15" fill="rgb(222,225,37)" fg:x="418" fg:w="1"/><text x="59.0404%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="58.7904%" y="421" width="0.1406%" height="15" fill="rgb(221,14,54)" fg:x="418" fg:w="1"/><text x="59.0404%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="58.7904%" y="405" width="0.1406%" height="15" fill="rgb(254,102,2)" fg:x="418" fg:w="1"/><text x="59.0404%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="58.7904%" y="389" width="0.1406%" height="15" fill="rgb(232,104,17)" fg:x="418" fg:w="1"/><text x="59.0404%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="58.7904%" y="373" width="0.1406%" height="15" fill="rgb(250,220,14)" fg:x="418" fg:w="1"/><text x="59.0404%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="58.7904%" y="357" width="0.1406%" height="15" fill="rgb(241,158,9)" fg:x="418" fg:w="1"/><text x="59.0404%" y="367.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="58.7904%" y="341" width="0.1406%" height="15" fill="rgb(246,9,43)" fg:x="418" fg:w="1"/><text x="59.0404%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="58.9311%" y="517" width="0.1406%" height="15" fill="rgb(206,73,33)" fg:x="419" fg:w="1"/><text x="59.1811%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="58.9311%" y="501" width="0.1406%" height="15" fill="rgb(222,79,8)" fg:x="419" fg:w="1"/><text x="59.1811%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="58.9311%" y="485" width="0.1406%" height="15" fill="rgb(234,8,54)" fg:x="419" fg:w="1"/><text x="59.1811%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="58.9311%" y="469" width="0.1406%" height="15" fill="rgb(209,134,38)" fg:x="419" fg:w="1"/><text x="59.1811%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="58.9311%" y="453" width="0.1406%" height="15" fill="rgb(230,127,29)" fg:x="419" fg:w="1"/><text x="59.1811%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="58.9311%" y="437" width="0.1406%" height="15" fill="rgb(242,44,41)" fg:x="419" fg:w="1"/><text x="59.1811%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="58.9311%" y="421" width="0.1406%" height="15" fill="rgb(222,56,43)" fg:x="419" fg:w="1"/><text x="59.1811%" y="431.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="58.9311%" y="405" width="0.1406%" height="15" fill="rgb(238,39,47)" fg:x="419" fg:w="1"/><text x="59.1811%" y="415.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="58.9311%" y="389" width="0.1406%" height="15" fill="rgb(226,79,43)" fg:x="419" fg:w="1"/><text x="59.1811%" y="399.50"></text></g><g><title>exc_page_fault (1 samples, 0.14%)</title><rect x="58.9311%" y="373" width="0.1406%" height="15" fill="rgb(242,105,53)" fg:x="419" fg:w="1"/><text x="59.1811%" y="383.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="58.9311%" y="357" width="0.1406%" height="15" fill="rgb(251,132,46)" fg:x="419" fg:w="1"/><text x="59.1811%" y="367.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="58.9311%" y="341" width="0.1406%" height="15" fill="rgb(231,77,14)" fg:x="419" fg:w="1"/><text x="59.1811%" y="351.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="58.9311%" y="325" width="0.1406%" height="15" fill="rgb(240,135,9)" fg:x="419" fg:w="1"/><text x="59.1811%" y="335.50"></text></g><g><title>do_anonymous_page (1 samples, 0.14%)</title><rect x="58.9311%" y="309" width="0.1406%" height="15" fill="rgb(248,109,14)" fg:x="419" fg:w="1"/><text x="59.1811%" y="319.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.14%)</title><rect x="58.9311%" y="293" width="0.1406%" height="15" fill="rgb(227,146,52)" fg:x="419" fg:w="1"/><text x="59.1811%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.14%)</title><rect x="58.9311%" y="277" width="0.1406%" height="15" fill="rgb(232,54,3)" fg:x="419" fg:w="1"/><text x="59.1811%" y="287.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.14%)</title><rect x="58.9311%" y="261" width="0.1406%" height="15" fill="rgb(229,201,43)" fg:x="419" fg:w="1"/><text x="59.1811%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.14%)</title><rect x="58.9311%" y="245" width="0.1406%" height="15" fill="rgb(252,161,33)" fg:x="419" fg:w="1"/><text x="59.1811%" y="255.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::clone::Clone&gt;::clone (3 samples, 0.42%)</title><rect x="58.7904%" y="597" width="0.4219%" height="15" fill="rgb(226,146,40)" fg:x="418" fg:w="3"/><text x="59.0404%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.42%)</title><rect x="58.7904%" y="581" width="0.4219%" height="15" fill="rgb(219,47,25)" fg:x="418" fg:w="3"/><text x="59.0404%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.42%)</title><rect x="58.7904%" y="565" width="0.4219%" height="15" fill="rgb(250,135,13)" fg:x="418" fg:w="3"/><text x="59.0404%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.42%)</title><rect x="58.7904%" y="549" width="0.4219%" height="15" fill="rgb(219,229,18)" fg:x="418" fg:w="3"/><text x="59.0404%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.42%)</title><rect x="58.7904%" y="533" width="0.4219%" height="15" fill="rgb(217,152,27)" fg:x="418" fg:w="3"/><text x="59.0404%" y="543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.14%)</title><rect x="59.0717%" y="517" width="0.1406%" height="15" fill="rgb(225,71,47)" fg:x="420" fg:w="1"/><text x="59.3217%" y="527.50"></text></g><g><title>__GI___libc_free (2 samples, 0.28%)</title><rect x="59.2124%" y="437" width="0.2813%" height="15" fill="rgb(220,139,14)" fg:x="421" fg:w="2"/><text x="59.4624%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d12::node_path::NodePath&gt; (3 samples, 0.42%)</title><rect x="59.2124%" y="597" width="0.4219%" height="15" fill="rgb(247,54,32)" fg:x="421" fg:w="3"/><text x="59.4624%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (3 samples, 0.42%)</title><rect x="59.2124%" y="581" width="0.4219%" height="15" fill="rgb(252,131,39)" fg:x="421" fg:w="3"/><text x="59.4624%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.42%)</title><rect x="59.2124%" y="565" width="0.4219%" height="15" fill="rgb(210,108,39)" fg:x="421" fg:w="3"/><text x="59.4624%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (3 samples, 0.42%)</title><rect x="59.2124%" y="549" width="0.4219%" height="15" fill="rgb(205,23,29)" fg:x="421" fg:w="3"/><text x="59.4624%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.42%)</title><rect x="59.2124%" y="533" width="0.4219%" height="15" fill="rgb(246,139,46)" fg:x="421" fg:w="3"/><text x="59.4624%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.42%)</title><rect x="59.2124%" y="517" width="0.4219%" height="15" fill="rgb(250,81,26)" fg:x="421" fg:w="3"/><text x="59.4624%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.42%)</title><rect x="59.2124%" y="501" width="0.4219%" height="15" fill="rgb(214,104,7)" fg:x="421" fg:w="3"/><text x="59.4624%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.42%)</title><rect x="59.2124%" y="485" width="0.4219%" height="15" fill="rgb(233,189,8)" fg:x="421" fg:w="3"/><text x="59.4624%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.42%)</title><rect x="59.2124%" y="469" width="0.4219%" height="15" fill="rgb(228,141,17)" fg:x="421" fg:w="3"/><text x="59.4624%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.42%)</title><rect x="59.2124%" y="453" width="0.4219%" height="15" fill="rgb(247,157,1)" fg:x="421" fg:w="3"/><text x="59.4624%" y="463.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="59.4937%" y="437" width="0.1406%" height="15" fill="rgb(249,225,5)" fg:x="423" fg:w="1"/><text x="59.7437%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.14%)</title><rect x="59.6343%" y="533" width="0.1406%" height="15" fill="rgb(242,55,13)" fg:x="424" fg:w="1"/><text x="59.8843%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.14%)</title><rect x="59.6343%" y="517" width="0.1406%" height="15" fill="rgb(230,49,50)" fg:x="424" fg:w="1"/><text x="59.8843%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="59.6343%" y="501" width="0.1406%" height="15" fill="rgb(241,111,38)" fg:x="424" fg:w="1"/><text x="59.8843%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="59.6343%" y="485" width="0.1406%" height="15" fill="rgb(252,155,4)" fg:x="424" fg:w="1"/><text x="59.8843%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.14%)</title><rect x="59.6343%" y="469" width="0.1406%" height="15" fill="rgb(212,69,32)" fg:x="424" fg:w="1"/><text x="59.8843%" y="479.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.14%)</title><rect x="59.6343%" y="453" width="0.1406%" height="15" fill="rgb(243,107,47)" fg:x="424" fg:w="1"/><text x="59.8843%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.28%)</title><rect x="59.6343%" y="597" width="0.2813%" height="15" fill="rgb(247,130,12)" fg:x="424" fg:w="2"/><text x="59.8843%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.28%)</title><rect x="59.6343%" y="581" width="0.2813%" height="15" fill="rgb(233,74,16)" fg:x="424" fg:w="2"/><text x="59.8843%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.28%)</title><rect x="59.6343%" y="565" width="0.2813%" height="15" fill="rgb(208,58,18)" fg:x="424" fg:w="2"/><text x="59.8843%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.28%)</title><rect x="59.6343%" y="549" width="0.2813%" height="15" fill="rgb(242,225,1)" fg:x="424" fg:w="2"/><text x="59.8843%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="59.7750%" y="533" width="0.1406%" height="15" fill="rgb(249,39,40)" fg:x="425" fg:w="1"/><text x="60.0250%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="59.7750%" y="517" width="0.1406%" height="15" fill="rgb(207,72,44)" fg:x="425" fg:w="1"/><text x="60.0250%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="59.7750%" y="501" width="0.1406%" height="15" fill="rgb(215,193,12)" fg:x="425" fg:w="1"/><text x="60.0250%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.14%)</title><rect x="59.7750%" y="485" width="0.1406%" height="15" fill="rgb(248,41,39)" fg:x="425" fg:w="1"/><text x="60.0250%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.14%)</title><rect x="59.7750%" y="469" width="0.1406%" height="15" fill="rgb(253,85,4)" fg:x="425" fg:w="1"/><text x="60.0250%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.14%)</title><rect x="59.9156%" y="517" width="0.1406%" height="15" fill="rgb(243,70,31)" fg:x="426" fg:w="1"/><text x="60.1656%" y="527.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.14%)</title><rect x="59.9156%" y="501" width="0.1406%" height="15" fill="rgb(253,195,26)" fg:x="426" fg:w="1"/><text x="60.1656%" y="511.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.14%)</title><rect x="59.9156%" y="485" width="0.1406%" height="15" fill="rgb(243,42,11)" fg:x="426" fg:w="1"/><text x="60.1656%" y="495.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.14%)</title><rect x="59.9156%" y="469" width="0.1406%" height="15" fill="rgb(239,66,17)" fg:x="426" fg:w="1"/><text x="60.1656%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.42%)</title><rect x="60.0563%" y="421" width="0.4219%" height="15" fill="rgb(217,132,21)" fg:x="427" fg:w="3"/><text x="60.3063%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.42%)</title><rect x="60.0563%" y="405" width="0.4219%" height="15" fill="rgb(252,202,21)" fg:x="427" fg:w="3"/><text x="60.3063%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.70%)</title><rect x="59.9156%" y="533" width="0.7032%" height="15" fill="rgb(233,98,36)" fg:x="426" fg:w="5"/><text x="60.1656%" y="543.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::hash::Hash&gt;::hash (4 samples, 0.56%)</title><rect x="60.0563%" y="517" width="0.5626%" height="15" fill="rgb(216,153,54)" fg:x="427" fg:w="4"/><text x="60.3063%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4 samples, 0.56%)</title><rect x="60.0563%" y="501" width="0.5626%" height="15" fill="rgb(250,99,7)" fg:x="427" fg:w="4"/><text x="60.3063%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.56%)</title><rect x="60.0563%" y="485" width="0.5626%" height="15" fill="rgb(207,56,50)" fg:x="427" fg:w="4"/><text x="60.3063%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.56%)</title><rect x="60.0563%" y="469" width="0.5626%" height="15" fill="rgb(244,61,34)" fg:x="427" fg:w="4"/><text x="60.3063%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.56%)</title><rect x="60.0563%" y="453" width="0.5626%" height="15" fill="rgb(241,50,38)" fg:x="427" fg:w="4"/><text x="60.3063%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.56%)</title><rect x="60.0563%" y="437" width="0.5626%" height="15" fill="rgb(212,166,30)" fg:x="427" fg:w="4"/><text x="60.3063%" y="447.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.14%)</title><rect x="60.4782%" y="421" width="0.1406%" height="15" fill="rgb(249,127,32)" fg:x="430" fg:w="1"/><text x="60.7282%" y="431.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (6 samples, 0.84%)</title><rect x="59.9156%" y="597" width="0.8439%" height="15" fill="rgb(209,103,0)" fg:x="426" fg:w="6"/><text x="60.1656%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (6 samples, 0.84%)</title><rect x="59.9156%" y="581" width="0.8439%" height="15" fill="rgb(238,209,51)" fg:x="426" fg:w="6"/><text x="60.1656%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (6 samples, 0.84%)</title><rect x="59.9156%" y="565" width="0.8439%" height="15" fill="rgb(237,56,23)" fg:x="426" fg:w="6"/><text x="60.1656%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.84%)</title><rect x="59.9156%" y="549" width="0.8439%" height="15" fill="rgb(215,153,46)" fg:x="426" fg:w="6"/><text x="60.1656%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.14%)</title><rect x="60.6188%" y="533" width="0.1406%" height="15" fill="rgb(224,49,31)" fg:x="431" fg:w="1"/><text x="60.8688%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.14%)</title><rect x="60.6188%" y="517" width="0.1406%" height="15" fill="rgb(250,18,42)" fg:x="431" fg:w="1"/><text x="60.8688%" y="527.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.14%)</title><rect x="60.6188%" y="501" width="0.1406%" height="15" fill="rgb(215,176,39)" fg:x="431" fg:w="1"/><text x="60.8688%" y="511.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="60.6188%" y="485" width="0.1406%" height="15" fill="rgb(223,77,29)" fg:x="431" fg:w="1"/><text x="60.8688%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.14%)</title><rect x="60.6188%" y="469" width="0.1406%" height="15" fill="rgb(234,94,52)" fg:x="431" fg:w="1"/><text x="60.8688%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.14%)</title><rect x="60.6188%" y="453" width="0.1406%" height="15" fill="rgb(220,154,50)" fg:x="431" fg:w="1"/><text x="60.8688%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.14%)</title><rect x="60.6188%" y="437" width="0.1406%" height="15" fill="rgb(212,11,10)" fg:x="431" fg:w="1"/><text x="60.8688%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.14%)</title><rect x="60.6188%" y="421" width="0.1406%" height="15" fill="rgb(205,166,19)" fg:x="431" fg:w="1"/><text x="60.8688%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.14%)</title><rect x="60.6188%" y="405" width="0.1406%" height="15" fill="rgb(244,198,16)" fg:x="431" fg:w="1"/><text x="60.8688%" y="415.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="60.6188%" y="389" width="0.1406%" height="15" fill="rgb(219,69,12)" fg:x="431" fg:w="1"/><text x="60.8688%" y="399.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.14%)</title><rect x="60.7595%" y="549" width="0.1406%" height="15" fill="rgb(245,30,7)" fg:x="432" fg:w="1"/><text x="61.0095%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="60.7595%" y="533" width="0.1406%" height="15" fill="rgb(218,221,48)" fg:x="432" fg:w="1"/><text x="61.0095%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="60.7595%" y="517" width="0.1406%" height="15" fill="rgb(216,66,15)" fg:x="432" fg:w="1"/><text x="61.0095%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="60.7595%" y="501" width="0.1406%" height="15" fill="rgb(226,122,50)" fg:x="432" fg:w="1"/><text x="61.0095%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.14%)</title><rect x="60.7595%" y="485" width="0.1406%" height="15" fill="rgb(239,156,16)" fg:x="432" fg:w="1"/><text x="61.0095%" y="495.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.28%)</title><rect x="60.7595%" y="597" width="0.2813%" height="15" fill="rgb(224,27,38)" fg:x="432" fg:w="2"/><text x="61.0095%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.28%)</title><rect x="60.7595%" y="581" width="0.2813%" height="15" fill="rgb(224,39,27)" fg:x="432" fg:w="2"/><text x="61.0095%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.28%)</title><rect x="60.7595%" y="565" width="0.2813%" height="15" fill="rgb(215,92,29)" fg:x="432" fg:w="2"/><text x="61.0095%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.14%)</title><rect x="60.9001%" y="549" width="0.1406%" height="15" fill="rgb(207,159,16)" fg:x="433" fg:w="1"/><text x="61.1501%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.14%)</title><rect x="61.0408%" y="405" width="0.1406%" height="15" fill="rgb(238,163,47)" fg:x="434" fg:w="1"/><text x="61.2908%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.14%)</title><rect x="61.0408%" y="389" width="0.1406%" height="15" fill="rgb(219,91,49)" fg:x="434" fg:w="1"/><text x="61.2908%" y="399.50"></text></g><g><title>&lt;core::str::iter::Matches&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="61.0408%" y="373" width="0.1406%" height="15" fill="rgb(227,167,31)" fg:x="434" fg:w="1"/><text x="61.2908%" y="383.50"></text></g><g><title>core::str::iter::MatchesInternal&lt;P&gt;::next (1 samples, 0.14%)</title><rect x="61.0408%" y="357" width="0.1406%" height="15" fill="rgb(234,80,54)" fg:x="434" fg:w="1"/><text x="61.2908%" y="367.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.14%)</title><rect x="61.0408%" y="341" width="0.1406%" height="15" fill="rgb(212,114,2)" fg:x="434" fg:w="1"/><text x="61.2908%" y="351.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.14%)</title><rect x="61.0408%" y="325" width="0.1406%" height="15" fill="rgb(234,50,24)" fg:x="434" fg:w="1"/><text x="61.2908%" y="335.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3 samples, 0.42%)</title><rect x="61.0408%" y="485" width="0.4219%" height="15" fill="rgb(221,68,8)" fg:x="434" fg:w="3"/><text x="61.2908%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.42%)</title><rect x="61.0408%" y="469" width="0.4219%" height="15" fill="rgb(254,180,31)" fg:x="434" fg:w="3"/><text x="61.2908%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.42%)</title><rect x="61.0408%" y="453" width="0.4219%" height="15" fill="rgb(247,130,50)" fg:x="434" fg:w="3"/><text x="61.2908%" y="463.50"></text></g><g><title>y2021::d12::main::traverse::{{closure}} (3 samples, 0.42%)</title><rect x="61.0408%" y="437" width="0.4219%" height="15" fill="rgb(211,109,4)" fg:x="434" fg:w="3"/><text x="61.2908%" y="447.50"></text></g><g><title>y2021::d12::node_path::NodePath::count_node (3 samples, 0.42%)</title><rect x="61.0408%" y="421" width="0.4219%" height="15" fill="rgb(238,50,21)" fg:x="434" fg:w="3"/><text x="61.2908%" y="431.50"></text></g><g><title>core::str::&lt;impl str&gt;::matches (2 samples, 0.28%)</title><rect x="61.1814%" y="405" width="0.2813%" height="15" fill="rgb(225,57,45)" fg:x="435" fg:w="2"/><text x="61.4314%" y="415.50"></text></g><g><title>&lt;&amp;alloc::string::String as core::str::pattern::Pattern&gt;::into_searcher (1 samples, 0.14%)</title><rect x="61.3221%" y="389" width="0.1406%" height="15" fill="rgb(209,196,50)" fg:x="436" fg:w="1"/><text x="61.5721%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="61.4627%" y="421" width="0.1406%" height="15" fill="rgb(242,140,13)" fg:x="437" fg:w="1"/><text x="61.7127%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="61.4627%" y="405" width="0.1406%" height="15" fill="rgb(217,111,7)" fg:x="437" fg:w="1"/><text x="61.7127%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="61.4627%" y="389" width="0.1406%" height="15" fill="rgb(253,193,51)" fg:x="437" fg:w="1"/><text x="61.7127%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="61.4627%" y="373" width="0.1406%" height="15" fill="rgb(252,70,29)" fg:x="437" fg:w="1"/><text x="61.7127%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.14%)</title><rect x="61.4627%" y="357" width="0.1406%" height="15" fill="rgb(232,127,12)" fg:x="437" fg:w="1"/><text x="61.7127%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.14%)</title><rect x="61.4627%" y="341" width="0.1406%" height="15" fill="rgb(211,180,21)" fg:x="437" fg:w="1"/><text x="61.7127%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.84%)</title><rect x="61.0408%" y="581" width="0.8439%" height="15" fill="rgb(229,72,13)" fg:x="434" fg:w="6"/><text x="61.2908%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (6 samples, 0.84%)</title><rect x="61.0408%" y="565" width="0.8439%" height="15" fill="rgb(240,211,49)" fg:x="434" fg:w="6"/><text x="61.2908%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.84%)</title><rect x="61.0408%" y="549" width="0.8439%" height="15" fill="rgb(219,149,40)" fg:x="434" fg:w="6"/><text x="61.2908%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.84%)</title><rect x="61.0408%" y="533" width="0.8439%" height="15" fill="rgb(210,127,46)" fg:x="434" fg:w="6"/><text x="61.2908%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.84%)</title><rect x="61.0408%" y="517" width="0.8439%" height="15" fill="rgb(220,106,7)" fg:x="434" fg:w="6"/><text x="61.2908%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.84%)</title><rect x="61.0408%" y="501" width="0.8439%" height="15" fill="rgb(249,31,22)" fg:x="434" fg:w="6"/><text x="61.2908%" y="511.50"></text></g><g><title>y2021::d12::main::traverse::{{closure}} (3 samples, 0.42%)</title><rect x="61.4627%" y="485" width="0.4219%" height="15" fill="rgb(253,1,49)" fg:x="437" fg:w="3"/><text x="61.7127%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.42%)</title><rect x="61.4627%" y="469" width="0.4219%" height="15" fill="rgb(227,144,33)" fg:x="437" fg:w="3"/><text x="61.7127%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.42%)</title><rect x="61.4627%" y="453" width="0.4219%" height="15" fill="rgb(249,163,44)" fg:x="437" fg:w="3"/><text x="61.7127%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.42%)</title><rect x="61.4627%" y="437" width="0.4219%" height="15" fill="rgb(234,15,39)" fg:x="437" fg:w="3"/><text x="61.7127%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.28%)</title><rect x="61.6034%" y="421" width="0.2813%" height="15" fill="rgb(207,66,16)" fg:x="438" fg:w="2"/><text x="61.8534%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.28%)</title><rect x="61.6034%" y="405" width="0.2813%" height="15" fill="rgb(233,112,24)" fg:x="438" fg:w="2"/><text x="61.8534%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.28%)</title><rect x="61.6034%" y="389" width="0.2813%" height="15" fill="rgb(230,90,22)" fg:x="438" fg:w="2"/><text x="61.8534%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.28%)</title><rect x="61.6034%" y="373" width="0.2813%" height="15" fill="rgb(229,61,13)" fg:x="438" fg:w="2"/><text x="61.8534%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.28%)</title><rect x="61.6034%" y="357" width="0.2813%" height="15" fill="rgb(225,57,24)" fg:x="438" fg:w="2"/><text x="61.8534%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.28%)</title><rect x="61.6034%" y="341" width="0.2813%" height="15" fill="rgb(208,169,48)" fg:x="438" fg:w="2"/><text x="61.8534%" y="351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.28%)</title><rect x="61.6034%" y="325" width="0.2813%" height="15" fill="rgb(244,218,51)" fg:x="438" fg:w="2"/><text x="61.8534%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.28%)</title><rect x="61.6034%" y="309" width="0.2813%" height="15" fill="rgb(214,148,10)" fg:x="438" fg:w="2"/><text x="61.8534%" y="319.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="61.7440%" y="293" width="0.1406%" height="15" fill="rgb(225,174,27)" fg:x="439" fg:w="1"/><text x="61.9940%" y="303.50"></text></g><g><title>&lt;y2021::d12::node_path::NodePath as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="61.8847%" y="581" width="0.1406%" height="15" fill="rgb(230,96,26)" fg:x="440" fg:w="1"/><text x="62.1347%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="61.8847%" y="565" width="0.1406%" height="15" fill="rgb(232,10,30)" fg:x="440" fg:w="1"/><text x="62.1347%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="61.8847%" y="549" width="0.1406%" height="15" fill="rgb(222,8,50)" fg:x="440" fg:w="1"/><text x="62.1347%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="61.8847%" y="533" width="0.1406%" height="15" fill="rgb(213,81,27)" fg:x="440" fg:w="1"/><text x="62.1347%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="61.8847%" y="517" width="0.1406%" height="15" fill="rgb(245,50,10)" fg:x="440" fg:w="1"/><text x="62.1347%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="61.8847%" y="501" width="0.1406%" height="15" fill="rgb(216,100,18)" fg:x="440" fg:w="1"/><text x="62.1347%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="61.8847%" y="485" width="0.1406%" height="15" fill="rgb(236,147,54)" fg:x="440" fg:w="1"/><text x="62.1347%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="61.8847%" y="469" width="0.1406%" height="15" fill="rgb(205,143,26)" fg:x="440" fg:w="1"/><text x="62.1347%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="61.8847%" y="453" width="0.1406%" height="15" fill="rgb(236,26,9)" fg:x="440" fg:w="1"/><text x="62.1347%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="61.8847%" y="437" width="0.1406%" height="15" fill="rgb(221,165,53)" fg:x="440" fg:w="1"/><text x="62.1347%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="61.8847%" y="421" width="0.1406%" height="15" fill="rgb(214,110,17)" fg:x="440" fg:w="1"/><text x="62.1347%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="61.8847%" y="405" width="0.1406%" height="15" fill="rgb(237,197,12)" fg:x="440" fg:w="1"/><text x="62.1347%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="61.8847%" y="389" width="0.1406%" height="15" fill="rgb(205,84,17)" fg:x="440" fg:w="1"/><text x="62.1347%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="61.8847%" y="373" width="0.1406%" height="15" fill="rgb(237,18,45)" fg:x="440" fg:w="1"/><text x="62.1347%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="61.8847%" y="357" width="0.1406%" height="15" fill="rgb(221,87,14)" fg:x="440" fg:w="1"/><text x="62.1347%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="61.8847%" y="341" width="0.1406%" height="15" fill="rgb(238,186,15)" fg:x="440" fg:w="1"/><text x="62.1347%" y="351.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="61.8847%" y="325" width="0.1406%" height="15" fill="rgb(208,115,11)" fg:x="440" fg:w="1"/><text x="62.1347%" y="335.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="62.0253%" y="421" width="0.1406%" height="15" fill="rgb(254,175,0)" fg:x="441" fg:w="1"/><text x="62.2753%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d12::node_path::NodePath&gt; (3 samples, 0.42%)</title><rect x="62.0253%" y="581" width="0.4219%" height="15" fill="rgb(227,24,42)" fg:x="441" fg:w="3"/><text x="62.2753%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (3 samples, 0.42%)</title><rect x="62.0253%" y="565" width="0.4219%" height="15" fill="rgb(223,211,37)" fg:x="441" fg:w="3"/><text x="62.2753%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.42%)</title><rect x="62.0253%" y="549" width="0.4219%" height="15" fill="rgb(235,49,27)" fg:x="441" fg:w="3"/><text x="62.2753%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (3 samples, 0.42%)</title><rect x="62.0253%" y="533" width="0.4219%" height="15" fill="rgb(254,97,51)" fg:x="441" fg:w="3"/><text x="62.2753%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.42%)</title><rect x="62.0253%" y="517" width="0.4219%" height="15" fill="rgb(249,51,40)" fg:x="441" fg:w="3"/><text x="62.2753%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.42%)</title><rect x="62.0253%" y="501" width="0.4219%" height="15" fill="rgb(210,128,45)" fg:x="441" fg:w="3"/><text x="62.2753%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.42%)</title><rect x="62.0253%" y="485" width="0.4219%" height="15" fill="rgb(224,137,50)" fg:x="441" fg:w="3"/><text x="62.2753%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.42%)</title><rect x="62.0253%" y="469" width="0.4219%" height="15" fill="rgb(242,15,9)" fg:x="441" fg:w="3"/><text x="62.2753%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.42%)</title><rect x="62.0253%" y="453" width="0.4219%" height="15" fill="rgb(233,187,41)" fg:x="441" fg:w="3"/><text x="62.2753%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.42%)</title><rect x="62.0253%" y="437" width="0.4219%" height="15" fill="rgb(227,2,29)" fg:x="441" fg:w="3"/><text x="62.2753%" y="447.50"></text></g><g><title>_int_free (2 samples, 0.28%)</title><rect x="62.1660%" y="421" width="0.2813%" height="15" fill="rgb(222,70,3)" fg:x="442" fg:w="2"/><text x="62.4160%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.14%)</title><rect x="62.4473%" y="581" width="0.1406%" height="15" fill="rgb(213,11,42)" fg:x="444" fg:w="1"/><text x="62.6973%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.14%)</title><rect x="62.4473%" y="565" width="0.1406%" height="15" fill="rgb(225,150,9)" fg:x="444" fg:w="1"/><text x="62.6973%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.14%)</title><rect x="62.4473%" y="549" width="0.1406%" height="15" fill="rgb(230,162,45)" fg:x="444" fg:w="1"/><text x="62.6973%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.14%)</title><rect x="62.4473%" y="533" width="0.1406%" height="15" fill="rgb(222,14,52)" fg:x="444" fg:w="1"/><text x="62.6973%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="62.4473%" y="517" width="0.1406%" height="15" fill="rgb(254,198,14)" fg:x="444" fg:w="1"/><text x="62.6973%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="62.4473%" y="501" width="0.1406%" height="15" fill="rgb(220,217,30)" fg:x="444" fg:w="1"/><text x="62.6973%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.14%)</title><rect x="62.4473%" y="485" width="0.1406%" height="15" fill="rgb(215,146,41)" fg:x="444" fg:w="1"/><text x="62.6973%" y="495.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.14%)</title><rect x="62.5879%" y="581" width="0.1406%" height="15" fill="rgb(217,27,36)" fg:x="445" fg:w="1"/><text x="62.8379%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.14%)</title><rect x="62.5879%" y="565" width="0.1406%" height="15" fill="rgb(219,218,39)" fg:x="445" fg:w="1"/><text x="62.8379%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.14%)</title><rect x="62.5879%" y="549" width="0.1406%" height="15" fill="rgb(219,4,42)" fg:x="445" fg:w="1"/><text x="62.8379%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.14%)</title><rect x="62.5879%" y="533" width="0.1406%" height="15" fill="rgb(249,119,36)" fg:x="445" fg:w="1"/><text x="62.8379%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.14%)</title><rect x="62.5879%" y="517" width="0.1406%" height="15" fill="rgb(209,23,33)" fg:x="445" fg:w="1"/><text x="62.8379%" y="527.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.14%)</title><rect x="62.5879%" y="501" width="0.1406%" height="15" fill="rgb(211,10,0)" fg:x="445" fg:w="1"/><text x="62.8379%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;y2021::d12::node_path::NodePath&gt; (1 samples, 0.14%)</title><rect x="62.7286%" y="565" width="0.1406%" height="15" fill="rgb(208,99,37)" fg:x="446" fg:w="1"/><text x="62.9786%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="62.7286%" y="549" width="0.1406%" height="15" fill="rgb(213,132,31)" fg:x="446" fg:w="1"/><text x="62.9786%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="62.7286%" y="533" width="0.1406%" height="15" fill="rgb(243,129,40)" fg:x="446" fg:w="1"/><text x="62.9786%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.14%)</title><rect x="62.7286%" y="517" width="0.1406%" height="15" fill="rgb(210,66,33)" fg:x="446" fg:w="1"/><text x="62.9786%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.14%)</title><rect x="62.7286%" y="501" width="0.1406%" height="15" fill="rgb(209,189,4)" fg:x="446" fg:w="1"/><text x="62.9786%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="62.7286%" y="485" width="0.1406%" height="15" fill="rgb(214,107,37)" fg:x="446" fg:w="1"/><text x="62.9786%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="62.7286%" y="469" width="0.1406%" height="15" fill="rgb(245,88,54)" fg:x="446" fg:w="1"/><text x="62.9786%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="62.7286%" y="453" width="0.1406%" height="15" fill="rgb(205,146,20)" fg:x="446" fg:w="1"/><text x="62.9786%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="62.7286%" y="437" width="0.1406%" height="15" fill="rgb(220,161,25)" fg:x="446" fg:w="1"/><text x="62.9786%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="62.7286%" y="421" width="0.1406%" height="15" fill="rgb(215,152,15)" fg:x="446" fg:w="1"/><text x="62.9786%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="62.8692%" y="485" width="0.1406%" height="15" fill="rgb(233,192,44)" fg:x="447" fg:w="1"/><text x="63.1192%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="62.8692%" y="469" width="0.1406%" height="15" fill="rgb(240,170,46)" fg:x="447" fg:w="1"/><text x="63.1192%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="62.8692%" y="453" width="0.1406%" height="15" fill="rgb(207,104,33)" fg:x="447" fg:w="1"/><text x="63.1192%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="62.8692%" y="437" width="0.1406%" height="15" fill="rgb(219,21,39)" fg:x="447" fg:w="1"/><text x="63.1192%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="62.8692%" y="421" width="0.1406%" height="15" fill="rgb(214,133,29)" fg:x="447" fg:w="1"/><text x="63.1192%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="62.8692%" y="405" width="0.1406%" height="15" fill="rgb(226,93,6)" fg:x="447" fg:w="1"/><text x="63.1192%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="62.8692%" y="389" width="0.1406%" height="15" fill="rgb(252,222,34)" fg:x="447" fg:w="1"/><text x="63.1192%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="62.8692%" y="373" width="0.1406%" height="15" fill="rgb(252,92,48)" fg:x="447" fg:w="1"/><text x="63.1192%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="62.8692%" y="357" width="0.1406%" height="15" fill="rgb(245,223,24)" fg:x="447" fg:w="1"/><text x="63.1192%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="62.8692%" y="341" width="0.1406%" height="15" fill="rgb(205,176,3)" fg:x="447" fg:w="1"/><text x="63.1192%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="62.8692%" y="325" width="0.1406%" height="15" fill="rgb(235,151,15)" fg:x="447" fg:w="1"/><text x="63.1192%" y="335.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="62.8692%" y="309" width="0.1406%" height="15" fill="rgb(237,209,11)" fg:x="447" fg:w="1"/><text x="63.1192%" y="319.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="62.8692%" y="293" width="0.1406%" height="15" fill="rgb(243,227,24)" fg:x="447" fg:w="1"/><text x="63.1192%" y="303.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="62.8692%" y="277" width="0.1406%" height="15" fill="rgb(239,193,16)" fg:x="447" fg:w="1"/><text x="63.1192%" y="287.50"></text></g><g><title>exc_page_fault (1 samples, 0.14%)</title><rect x="62.8692%" y="261" width="0.1406%" height="15" fill="rgb(231,27,9)" fg:x="447" fg:w="1"/><text x="63.1192%" y="271.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="62.8692%" y="245" width="0.1406%" height="15" fill="rgb(219,169,10)" fg:x="447" fg:w="1"/><text x="63.1192%" y="255.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="62.8692%" y="229" width="0.1406%" height="15" fill="rgb(244,229,43)" fg:x="447" fg:w="1"/><text x="63.1192%" y="239.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="62.8692%" y="213" width="0.1406%" height="15" fill="rgb(254,38,20)" fg:x="447" fg:w="1"/><text x="63.1192%" y="223.50"></text></g><g><title>do_anonymous_page (1 samples, 0.14%)</title><rect x="62.8692%" y="197" width="0.1406%" height="15" fill="rgb(250,47,30)" fg:x="447" fg:w="1"/><text x="63.1192%" y="207.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.14%)</title><rect x="62.8692%" y="181" width="0.1406%" height="15" fill="rgb(224,124,36)" fg:x="447" fg:w="1"/><text x="63.1192%" y="191.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.14%)</title><rect x="62.8692%" y="165" width="0.1406%" height="15" fill="rgb(246,68,51)" fg:x="447" fg:w="1"/><text x="63.1192%" y="175.50"></text></g><g><title>y2021::d12::main::traverse (3 samples, 0.42%)</title><rect x="62.7286%" y="581" width="0.4219%" height="15" fill="rgb(253,43,49)" fg:x="446" fg:w="3"/><text x="62.9786%" y="591.50"></text></g><g><title>y2021::d12::node_path::NodePath::from (2 samples, 0.28%)</title><rect x="62.8692%" y="565" width="0.2813%" height="15" fill="rgb(219,54,36)" fg:x="447" fg:w="2"/><text x="63.1192%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="62.8692%" y="549" width="0.2813%" height="15" fill="rgb(227,133,34)" fg:x="447" fg:w="2"/><text x="63.1192%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.28%)</title><rect x="62.8692%" y="533" width="0.2813%" height="15" fill="rgb(247,227,15)" fg:x="447" fg:w="2"/><text x="63.1192%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.28%)</title><rect x="62.8692%" y="517" width="0.2813%" height="15" fill="rgb(229,96,14)" fg:x="447" fg:w="2"/><text x="63.1192%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.28%)</title><rect x="62.8692%" y="501" width="0.2813%" height="15" fill="rgb(220,79,17)" fg:x="447" fg:w="2"/><text x="63.1192%" y="511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.14%)</title><rect x="63.0098%" y="485" width="0.1406%" height="15" fill="rgb(205,131,53)" fg:x="448" fg:w="1"/><text x="63.2598%" y="495.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="63.4318%" y="325" width="0.2813%" height="15" fill="rgb(209,50,29)" fg:x="451" fg:w="2"/><text x="63.6818%" y="335.50"></text></g><g><title>_int_malloc (2 samples, 0.28%)</title><rect x="63.4318%" y="309" width="0.2813%" height="15" fill="rgb(245,86,46)" fg:x="451" fg:w="2"/><text x="63.6818%" y="319.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="63.5724%" y="293" width="0.1406%" height="15" fill="rgb(235,66,46)" fg:x="452" fg:w="1"/><text x="63.8224%" y="303.50"></text></g><g><title>exc_page_fault (1 samples, 0.14%)</title><rect x="63.5724%" y="277" width="0.1406%" height="15" fill="rgb(232,148,31)" fg:x="452" fg:w="1"/><text x="63.8224%" y="287.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="63.5724%" y="261" width="0.1406%" height="15" fill="rgb(217,149,8)" fg:x="452" fg:w="1"/><text x="63.8224%" y="271.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="63.5724%" y="245" width="0.1406%" height="15" fill="rgb(209,183,11)" fg:x="452" fg:w="1"/><text x="63.8224%" y="255.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="63.5724%" y="229" width="0.1406%" height="15" fill="rgb(208,55,20)" fg:x="452" fg:w="1"/><text x="63.8224%" y="239.50"></text></g><g><title>do_anonymous_page (1 samples, 0.14%)</title><rect x="63.5724%" y="213" width="0.1406%" height="15" fill="rgb(218,39,14)" fg:x="452" fg:w="1"/><text x="63.8224%" y="223.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="63.5724%" y="197" width="0.1406%" height="15" fill="rgb(216,169,33)" fg:x="452" fg:w="1"/><text x="63.8224%" y="207.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="63.5724%" y="181" width="0.1406%" height="15" fill="rgb(233,80,24)" fg:x="452" fg:w="1"/><text x="63.8224%" y="191.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.14%)</title><rect x="63.5724%" y="165" width="0.1406%" height="15" fill="rgb(213,179,31)" fg:x="452" fg:w="1"/><text x="63.8224%" y="175.50"></text></g><g><title>clear_page_rep (1 samples, 0.14%)</title><rect x="63.5724%" y="149" width="0.1406%" height="15" fill="rgb(209,19,5)" fg:x="452" fg:w="1"/><text x="63.8224%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.56%)</title><rect x="63.2911%" y="501" width="0.5626%" height="15" fill="rgb(219,18,35)" fg:x="450" fg:w="4"/><text x="63.5411%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.42%)</title><rect x="63.4318%" y="485" width="0.4219%" height="15" fill="rgb(209,169,16)" fg:x="451" fg:w="3"/><text x="63.6818%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.42%)</title><rect x="63.4318%" y="469" width="0.4219%" height="15" fill="rgb(245,90,51)" fg:x="451" fg:w="3"/><text x="63.6818%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.42%)</title><rect x="63.4318%" y="453" width="0.4219%" height="15" fill="rgb(220,99,45)" fg:x="451" fg:w="3"/><text x="63.6818%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.42%)</title><rect x="63.4318%" y="437" width="0.4219%" height="15" fill="rgb(249,89,25)" fg:x="451" fg:w="3"/><text x="63.6818%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.42%)</title><rect x="63.4318%" y="421" width="0.4219%" height="15" fill="rgb(239,193,0)" fg:x="451" fg:w="3"/><text x="63.6818%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.42%)</title><rect x="63.4318%" y="405" width="0.4219%" height="15" fill="rgb(231,126,1)" fg:x="451" fg:w="3"/><text x="63.6818%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.42%)</title><rect x="63.4318%" y="389" width="0.4219%" height="15" fill="rgb(243,166,3)" fg:x="451" fg:w="3"/><text x="63.6818%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.42%)</title><rect x="63.4318%" y="373" width="0.4219%" height="15" fill="rgb(223,22,34)" fg:x="451" fg:w="3"/><text x="63.6818%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.42%)</title><rect x="63.4318%" y="357" width="0.4219%" height="15" fill="rgb(251,52,51)" fg:x="451" fg:w="3"/><text x="63.6818%" y="367.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.42%)</title><rect x="63.4318%" y="341" width="0.4219%" height="15" fill="rgb(221,165,28)" fg:x="451" fg:w="3"/><text x="63.6818%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.14%)</title><rect x="63.7131%" y="325" width="0.1406%" height="15" fill="rgb(218,121,47)" fg:x="453" fg:w="1"/><text x="63.9631%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.14%)</title><rect x="63.7131%" y="309" width="0.1406%" height="15" fill="rgb(209,120,9)" fg:x="453" fg:w="1"/><text x="63.9631%" y="319.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="63.8537%" y="373" width="0.1406%" height="15" fill="rgb(236,68,12)" fg:x="454" fg:w="1"/><text x="64.1037%" y="383.50"></text></g><g><title>exc_page_fault (1 samples, 0.14%)</title><rect x="63.8537%" y="357" width="0.1406%" height="15" fill="rgb(225,194,26)" fg:x="454" fg:w="1"/><text x="64.1037%" y="367.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="63.8537%" y="341" width="0.1406%" height="15" fill="rgb(231,84,39)" fg:x="454" fg:w="1"/><text x="64.1037%" y="351.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="63.8537%" y="325" width="0.1406%" height="15" fill="rgb(210,11,45)" fg:x="454" fg:w="1"/><text x="64.1037%" y="335.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="63.8537%" y="309" width="0.1406%" height="15" fill="rgb(224,54,52)" fg:x="454" fg:w="1"/><text x="64.1037%" y="319.50"></text></g><g><title>do_anonymous_page (1 samples, 0.14%)</title><rect x="63.8537%" y="293" width="0.1406%" height="15" fill="rgb(238,102,14)" fg:x="454" fg:w="1"/><text x="64.1037%" y="303.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="63.8537%" y="277" width="0.1406%" height="15" fill="rgb(243,160,52)" fg:x="454" fg:w="1"/><text x="64.1037%" y="287.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="63.8537%" y="261" width="0.1406%" height="15" fill="rgb(216,114,19)" fg:x="454" fg:w="1"/><text x="64.1037%" y="271.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.14%)</title><rect x="63.8537%" y="245" width="0.1406%" height="15" fill="rgb(244,166,37)" fg:x="454" fg:w="1"/><text x="64.1037%" y="255.50"></text></g><g><title>clear_page_rep (1 samples, 0.14%)</title><rect x="63.8537%" y="229" width="0.1406%" height="15" fill="rgb(246,29,44)" fg:x="454" fg:w="1"/><text x="64.1037%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="63.8537%" y="501" width="0.2813%" height="15" fill="rgb(215,56,53)" fg:x="454" fg:w="2"/><text x="64.1037%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="63.8537%" y="485" width="0.2813%" height="15" fill="rgb(217,60,2)" fg:x="454" fg:w="2"/><text x="64.1037%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="63.8537%" y="469" width="0.2813%" height="15" fill="rgb(207,26,24)" fg:x="454" fg:w="2"/><text x="64.1037%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.28%)</title><rect x="63.8537%" y="453" width="0.2813%" height="15" fill="rgb(252,210,15)" fg:x="454" fg:w="2"/><text x="64.1037%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="63.8537%" y="437" width="0.2813%" height="15" fill="rgb(253,209,26)" fg:x="454" fg:w="2"/><text x="64.1037%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="63.8537%" y="421" width="0.2813%" height="15" fill="rgb(238,170,14)" fg:x="454" fg:w="2"/><text x="64.1037%" y="431.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="63.8537%" y="405" width="0.2813%" height="15" fill="rgb(216,178,15)" fg:x="454" fg:w="2"/><text x="64.1037%" y="415.50"></text></g><g><title>_int_malloc (2 samples, 0.28%)</title><rect x="63.8537%" y="389" width="0.2813%" height="15" fill="rgb(250,197,2)" fg:x="454" fg:w="2"/><text x="64.1037%" y="399.50"></text></g><g><title>checked_request2size (1 samples, 0.14%)</title><rect x="63.9944%" y="373" width="0.1406%" height="15" fill="rgb(212,70,42)" fg:x="455" fg:w="1"/><text x="64.2444%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 1.13%)</title><rect x="63.1505%" y="565" width="1.1252%" height="15" fill="rgb(227,213,9)" fg:x="449" fg:w="8"/><text x="63.4005%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.98%)</title><rect x="63.2911%" y="549" width="0.9845%" height="15" fill="rgb(245,99,25)" fg:x="450" fg:w="7"/><text x="63.5411%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.98%)</title><rect x="63.2911%" y="533" width="0.9845%" height="15" fill="rgb(250,82,29)" fg:x="450" fg:w="7"/><text x="63.5411%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.98%)</title><rect x="63.2911%" y="517" width="0.9845%" height="15" fill="rgb(241,226,54)" fg:x="450" fg:w="7"/><text x="63.5411%" y="527.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.14%)</title><rect x="64.1350%" y="501" width="0.1406%" height="15" fill="rgb(221,99,41)" fg:x="456" fg:w="1"/><text x="64.3850%" y="511.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="64.2757%" y="437" width="0.1406%" height="15" fill="rgb(213,90,21)" fg:x="457" fg:w="1"/><text x="64.5257%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.14%)</title><rect x="64.2757%" y="421" width="0.1406%" height="15" fill="rgb(205,208,24)" fg:x="457" fg:w="1"/><text x="64.5257%" y="431.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.14%)</title><rect x="64.2757%" y="405" width="0.1406%" height="15" fill="rgb(246,31,12)" fg:x="457" fg:w="1"/><text x="64.5257%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.14%)</title><rect x="64.2757%" y="389" width="0.1406%" height="15" fill="rgb(213,154,6)" fg:x="457" fg:w="1"/><text x="64.5257%" y="399.50"></text></g><g><title>y2021::d12::node_path::NodePath::from::{{closure}} (1 samples, 0.14%)</title><rect x="64.2757%" y="373" width="0.1406%" height="15" fill="rgb(222,163,29)" fg:x="457" fg:w="1"/><text x="64.5257%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.14%)</title><rect x="64.2757%" y="357" width="0.1406%" height="15" fill="rgb(227,201,8)" fg:x="457" fg:w="1"/><text x="64.5257%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="64.2757%" y="341" width="0.1406%" height="15" fill="rgb(233,9,32)" fg:x="457" fg:w="1"/><text x="64.5257%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="64.2757%" y="325" width="0.1406%" height="15" fill="rgb(217,54,24)" fg:x="457" fg:w="1"/><text x="64.5257%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="64.2757%" y="309" width="0.1406%" height="15" fill="rgb(235,192,0)" fg:x="457" fg:w="1"/><text x="64.5257%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="64.2757%" y="293" width="0.1406%" height="15" fill="rgb(235,45,9)" fg:x="457" fg:w="1"/><text x="64.5257%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="64.2757%" y="277" width="0.1406%" height="15" fill="rgb(246,42,40)" fg:x="457" fg:w="1"/><text x="64.5257%" y="287.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="64.2757%" y="261" width="0.1406%" height="15" fill="rgb(248,111,24)" fg:x="457" fg:w="1"/><text x="64.5257%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.56%)</title><rect x="64.4163%" y="373" width="0.5626%" height="15" fill="rgb(249,65,22)" fg:x="458" fg:w="4"/><text x="64.6663%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="64.8383%" y="357" width="0.1406%" height="15" fill="rgb(238,111,51)" fg:x="461" fg:w="1"/><text x="65.0883%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="64.8383%" y="341" width="0.1406%" height="15" fill="rgb(250,118,22)" fg:x="461" fg:w="1"/><text x="65.0883%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="64.8383%" y="325" width="0.1406%" height="15" fill="rgb(234,84,26)" fg:x="461" fg:w="1"/><text x="65.0883%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="64.8383%" y="309" width="0.1406%" height="15" fill="rgb(243,172,12)" fg:x="461" fg:w="1"/><text x="65.0883%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="64.8383%" y="293" width="0.1406%" height="15" fill="rgb(236,150,49)" fg:x="461" fg:w="1"/><text x="65.0883%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="64.8383%" y="277" width="0.1406%" height="15" fill="rgb(225,197,26)" fg:x="461" fg:w="1"/><text x="65.0883%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="64.8383%" y="261" width="0.1406%" height="15" fill="rgb(214,17,42)" fg:x="461" fg:w="1"/><text x="65.0883%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="64.8383%" y="245" width="0.1406%" height="15" fill="rgb(224,165,40)" fg:x="461" fg:w="1"/><text x="65.0883%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="64.8383%" y="229" width="0.1406%" height="15" fill="rgb(246,100,4)" fg:x="461" fg:w="1"/><text x="65.0883%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="64.8383%" y="213" width="0.1406%" height="15" fill="rgb(222,103,0)" fg:x="461" fg:w="1"/><text x="65.0883%" y="223.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="64.8383%" y="197" width="0.1406%" height="15" fill="rgb(227,189,26)" fg:x="461" fg:w="1"/><text x="65.0883%" y="207.50"></text></g><g><title>y2021::d12::main::traverse (29 samples, 4.08%)</title><rect x="61.0408%" y="597" width="4.0788%" height="15" fill="rgb(214,202,17)" fg:x="434" fg:w="29"/><text x="61.2908%" y="607.50">y202..</text></g><g><title>y2021::d12::node_path::NodePath::from (14 samples, 1.97%)</title><rect x="63.1505%" y="581" width="1.9691%" height="15" fill="rgb(229,111,3)" fg:x="449" fg:w="14"/><text x="63.4005%" y="591.50">y..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.84%)</title><rect x="64.2757%" y="565" width="0.8439%" height="15" fill="rgb(229,172,15)" fg:x="457" fg:w="6"/><text x="64.5257%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.84%)</title><rect x="64.2757%" y="549" width="0.8439%" height="15" fill="rgb(230,224,35)" fg:x="457" fg:w="6"/><text x="64.5257%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.84%)</title><rect x="64.2757%" y="533" width="0.8439%" height="15" fill="rgb(251,141,6)" fg:x="457" fg:w="6"/><text x="64.5257%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.84%)</title><rect x="64.2757%" y="517" width="0.8439%" height="15" fill="rgb(225,208,6)" fg:x="457" fg:w="6"/><text x="64.5257%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.84%)</title><rect x="64.2757%" y="501" width="0.8439%" height="15" fill="rgb(246,181,16)" fg:x="457" fg:w="6"/><text x="64.5257%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.84%)</title><rect x="64.2757%" y="485" width="0.8439%" height="15" fill="rgb(227,129,36)" fg:x="457" fg:w="6"/><text x="64.5257%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.84%)</title><rect x="64.2757%" y="469" width="0.8439%" height="15" fill="rgb(248,117,24)" fg:x="457" fg:w="6"/><text x="64.5257%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.84%)</title><rect x="64.2757%" y="453" width="0.8439%" height="15" fill="rgb(214,185,35)" fg:x="457" fg:w="6"/><text x="64.5257%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.70%)</title><rect x="64.4163%" y="437" width="0.7032%" height="15" fill="rgb(236,150,34)" fg:x="458" fg:w="5"/><text x="64.6663%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.70%)</title><rect x="64.4163%" y="421" width="0.7032%" height="15" fill="rgb(243,228,27)" fg:x="458" fg:w="5"/><text x="64.6663%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.70%)</title><rect x="64.4163%" y="405" width="0.7032%" height="15" fill="rgb(245,77,44)" fg:x="458" fg:w="5"/><text x="64.6663%" y="415.50"></text></g><g><title>y2021::d12::node_path::NodePath::from::{{closure}} (5 samples, 0.70%)</title><rect x="64.4163%" y="389" width="0.7032%" height="15" fill="rgb(235,214,42)" fg:x="458" fg:w="5"/><text x="64.6663%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.14%)</title><rect x="64.9789%" y="373" width="0.1406%" height="15" fill="rgb(221,74,3)" fg:x="462" fg:w="1"/><text x="65.2289%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="64.9789%" y="357" width="0.1406%" height="15" fill="rgb(206,121,29)" fg:x="462" fg:w="1"/><text x="65.2289%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="64.9789%" y="341" width="0.1406%" height="15" fill="rgb(249,131,53)" fg:x="462" fg:w="1"/><text x="65.2289%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="64.9789%" y="325" width="0.1406%" height="15" fill="rgb(236,170,29)" fg:x="462" fg:w="1"/><text x="65.2289%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="64.9789%" y="309" width="0.1406%" height="15" fill="rgb(247,96,15)" fg:x="462" fg:w="1"/><text x="65.2289%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="64.9789%" y="293" width="0.1406%" height="15" fill="rgb(211,210,7)" fg:x="462" fg:w="1"/><text x="65.2289%" y="303.50"></text></g><g><title>__rust_dealloc (1 samples, 0.14%)</title><rect x="64.9789%" y="277" width="0.1406%" height="15" fill="rgb(240,88,50)" fg:x="462" fg:w="1"/><text x="65.2289%" y="287.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="65.8228%" y="309" width="0.1406%" height="15" fill="rgb(209,229,26)" fg:x="468" fg:w="1"/><text x="66.0728%" y="319.50"></text></g><g><title>exc_page_fault (1 samples, 0.14%)</title><rect x="65.8228%" y="293" width="0.1406%" height="15" fill="rgb(210,68,23)" fg:x="468" fg:w="1"/><text x="66.0728%" y="303.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="65.8228%" y="277" width="0.1406%" height="15" fill="rgb(229,180,13)" fg:x="468" fg:w="1"/><text x="66.0728%" y="287.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="65.8228%" y="261" width="0.1406%" height="15" fill="rgb(236,53,44)" fg:x="468" fg:w="1"/><text x="66.0728%" y="271.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="65.8228%" y="245" width="0.1406%" height="15" fill="rgb(244,214,29)" fg:x="468" fg:w="1"/><text x="66.0728%" y="255.50"></text></g><g><title>do_anonymous_page (1 samples, 0.14%)</title><rect x="65.8228%" y="229" width="0.1406%" height="15" fill="rgb(220,75,29)" fg:x="468" fg:w="1"/><text x="66.0728%" y="239.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="65.8228%" y="213" width="0.1406%" height="15" fill="rgb(214,183,37)" fg:x="468" fg:w="1"/><text x="66.0728%" y="223.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="65.8228%" y="197" width="0.1406%" height="15" fill="rgb(239,117,29)" fg:x="468" fg:w="1"/><text x="66.0728%" y="207.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.14%)</title><rect x="65.8228%" y="181" width="0.1406%" height="15" fill="rgb(237,171,35)" fg:x="468" fg:w="1"/><text x="66.0728%" y="191.50"></text></g><g><title>clear_page_rep (1 samples, 0.14%)</title><rect x="65.8228%" y="165" width="0.1406%" height="15" fill="rgb(229,178,53)" fg:x="468" fg:w="1"/><text x="66.0728%" y="175.50"></text></g><g><title>_int_malloc (3 samples, 0.42%)</title><rect x="65.6821%" y="325" width="0.4219%" height="15" fill="rgb(210,102,19)" fg:x="467" fg:w="3"/><text x="65.9321%" y="335.50"></text></g><g><title>tcache_put (1 samples, 0.14%)</title><rect x="65.9634%" y="309" width="0.1406%" height="15" fill="rgb(235,127,22)" fg:x="469" fg:w="1"/><text x="66.2134%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 1.13%)</title><rect x="65.1195%" y="517" width="1.1252%" height="15" fill="rgb(244,31,31)" fg:x="463" fg:w="8"/><text x="65.3695%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.56%)</title><rect x="65.6821%" y="501" width="0.5626%" height="15" fill="rgb(231,43,21)" fg:x="467" fg:w="4"/><text x="65.9321%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.56%)</title><rect x="65.6821%" y="485" width="0.5626%" height="15" fill="rgb(217,131,35)" fg:x="467" fg:w="4"/><text x="65.9321%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.56%)</title><rect x="65.6821%" y="469" width="0.5626%" height="15" fill="rgb(221,149,4)" fg:x="467" fg:w="4"/><text x="65.9321%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.56%)</title><rect x="65.6821%" y="453" width="0.5626%" height="15" fill="rgb(232,170,28)" fg:x="467" fg:w="4"/><text x="65.9321%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.56%)</title><rect x="65.6821%" y="437" width="0.5626%" height="15" fill="rgb(238,56,10)" fg:x="467" fg:w="4"/><text x="65.9321%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.56%)</title><rect x="65.6821%" y="421" width="0.5626%" height="15" fill="rgb(235,196,14)" fg:x="467" fg:w="4"/><text x="65.9321%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.56%)</title><rect x="65.6821%" y="405" width="0.5626%" height="15" fill="rgb(216,45,48)" fg:x="467" fg:w="4"/><text x="65.9321%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.56%)</title><rect x="65.6821%" y="389" width="0.5626%" height="15" fill="rgb(238,213,17)" fg:x="467" fg:w="4"/><text x="65.9321%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.56%)</title><rect x="65.6821%" y="373" width="0.5626%" height="15" fill="rgb(212,13,2)" fg:x="467" fg:w="4"/><text x="65.9321%" y="383.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.56%)</title><rect x="65.6821%" y="357" width="0.5626%" height="15" fill="rgb(240,114,20)" fg:x="467" fg:w="4"/><text x="65.9321%" y="367.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.56%)</title><rect x="65.6821%" y="341" width="0.5626%" height="15" fill="rgb(228,41,40)" fg:x="467" fg:w="4"/><text x="65.9321%" y="351.50"></text></g><g><title>tcache_get (1 samples, 0.14%)</title><rect x="66.1041%" y="325" width="0.1406%" height="15" fill="rgb(244,132,35)" fg:x="470" fg:w="1"/><text x="66.3541%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 2.11%)</title><rect x="65.1195%" y="581" width="2.1097%" height="15" fill="rgb(253,189,4)" fg:x="463" fg:w="15"/><text x="65.3695%" y="591.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 2.11%)</title><rect x="65.1195%" y="565" width="2.1097%" height="15" fill="rgb(224,37,19)" fg:x="463" fg:w="15"/><text x="65.3695%" y="575.50">a..</text></g><g><title>alloc::slice::hack::to_vec (15 samples, 2.11%)</title><rect x="65.1195%" y="549" width="2.1097%" height="15" fill="rgb(235,223,18)" fg:x="463" fg:w="15"/><text x="65.3695%" y="559.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 2.11%)</title><rect x="65.1195%" y="533" width="2.1097%" height="15" fill="rgb(235,163,25)" fg:x="463" fg:w="15"/><text x="65.3695%" y="543.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (7 samples, 0.98%)</title><rect x="66.2447%" y="517" width="0.9845%" height="15" fill="rgb(217,145,28)" fg:x="471" fg:w="7"/><text x="66.4947%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="67.3699%" y="437" width="0.1406%" height="15" fill="rgb(223,223,32)" fg:x="479" fg:w="1"/><text x="67.6199%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.14%)</title><rect x="67.5105%" y="405" width="0.1406%" height="15" fill="rgb(227,189,39)" fg:x="480" fg:w="1"/><text x="67.7605%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.14%)</title><rect x="67.5105%" y="389" width="0.1406%" height="15" fill="rgb(248,10,22)" fg:x="480" fg:w="1"/><text x="67.7605%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.14%)</title><rect x="67.5105%" y="373" width="0.1406%" height="15" fill="rgb(248,46,39)" fg:x="480" fg:w="1"/><text x="67.7605%" y="383.50"></text></g><g><title>_int_malloc (2 samples, 0.28%)</title><rect x="68.0731%" y="197" width="0.2813%" height="15" fill="rgb(248,113,48)" fg:x="484" fg:w="2"/><text x="68.3231%" y="207.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="68.2138%" y="181" width="0.1406%" height="15" fill="rgb(245,16,25)" fg:x="485" fg:w="1"/><text x="68.4638%" y="191.50"></text></g><g><title>exc_page_fault (1 samples, 0.14%)</title><rect x="68.2138%" y="165" width="0.1406%" height="15" fill="rgb(249,152,16)" fg:x="485" fg:w="1"/><text x="68.4638%" y="175.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="68.2138%" y="149" width="0.1406%" height="15" fill="rgb(250,16,1)" fg:x="485" fg:w="1"/><text x="68.4638%" y="159.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="68.2138%" y="133" width="0.1406%" height="15" fill="rgb(249,138,3)" fg:x="485" fg:w="1"/><text x="68.4638%" y="143.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="68.2138%" y="117" width="0.1406%" height="15" fill="rgb(227,71,41)" fg:x="485" fg:w="1"/><text x="68.4638%" y="127.50"></text></g><g><title>do_anonymous_page (1 samples, 0.14%)</title><rect x="68.2138%" y="101" width="0.1406%" height="15" fill="rgb(209,184,23)" fg:x="485" fg:w="1"/><text x="68.4638%" y="111.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.14%)</title><rect x="68.2138%" y="85" width="0.1406%" height="15" fill="rgb(223,215,31)" fg:x="485" fg:w="1"/><text x="68.4638%" y="95.50"></text></g><g><title>__alloc_pages_nodemask (1 samples, 0.14%)</title><rect x="68.2138%" y="69" width="0.1406%" height="15" fill="rgb(210,146,28)" fg:x="485" fg:w="1"/><text x="68.4638%" y="79.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.14%)</title><rect x="68.2138%" y="53" width="0.1406%" height="15" fill="rgb(209,183,41)" fg:x="485" fg:w="1"/><text x="68.4638%" y="63.50"></text></g><g><title>clear_page_rep (1 samples, 0.14%)</title><rect x="68.2138%" y="37" width="0.1406%" height="15" fill="rgb(209,224,45)" fg:x="485" fg:w="1"/><text x="68.4638%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.84%)</title><rect x="67.6512%" y="389" width="0.8439%" height="15" fill="rgb(224,209,51)" fg:x="481" fg:w="6"/><text x="67.9012%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.70%)</title><rect x="67.7918%" y="373" width="0.7032%" height="15" fill="rgb(223,17,39)" fg:x="482" fg:w="5"/><text x="68.0418%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.70%)</title><rect x="67.7918%" y="357" width="0.7032%" height="15" fill="rgb(234,204,37)" fg:x="482" fg:w="5"/><text x="68.0418%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.70%)</title><rect x="67.7918%" y="341" width="0.7032%" height="15" fill="rgb(236,120,5)" fg:x="482" fg:w="5"/><text x="68.0418%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.70%)</title><rect x="67.7918%" y="325" width="0.7032%" height="15" fill="rgb(248,97,27)" fg:x="482" fg:w="5"/><text x="68.0418%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.70%)</title><rect x="67.7918%" y="309" width="0.7032%" height="15" fill="rgb(240,66,17)" fg:x="482" fg:w="5"/><text x="68.0418%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.70%)</title><rect x="67.7918%" y="293" width="0.7032%" height="15" fill="rgb(210,79,3)" fg:x="482" fg:w="5"/><text x="68.0418%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.70%)</title><rect x="67.7918%" y="277" width="0.7032%" height="15" fill="rgb(214,176,27)" fg:x="482" fg:w="5"/><text x="68.0418%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.70%)</title><rect x="67.7918%" y="261" width="0.7032%" height="15" fill="rgb(235,185,3)" fg:x="482" fg:w="5"/><text x="68.0418%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.70%)</title><rect x="67.7918%" y="245" width="0.7032%" height="15" fill="rgb(227,24,12)" fg:x="482" fg:w="5"/><text x="68.0418%" y="255.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.70%)</title><rect x="67.7918%" y="229" width="0.7032%" height="15" fill="rgb(252,169,48)" fg:x="482" fg:w="5"/><text x="68.0418%" y="239.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.70%)</title><rect x="67.7918%" y="213" width="0.7032%" height="15" fill="rgb(212,65,1)" fg:x="482" fg:w="5"/><text x="68.0418%" y="223.50"></text></g><g><title>tcache_get (1 samples, 0.14%)</title><rect x="68.3544%" y="197" width="0.1406%" height="15" fill="rgb(242,39,24)" fg:x="486" fg:w="1"/><text x="68.6044%" y="207.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="68.4951%" y="293" width="0.1406%" height="15" fill="rgb(249,32,23)" fg:x="487" fg:w="1"/><text x="68.7451%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 1.55%)</title><rect x="67.5105%" y="437" width="1.5471%" height="15" fill="rgb(251,195,23)" fg:x="480" fg:w="11"/><text x="67.7605%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 1.55%)</title><rect x="67.5105%" y="421" width="1.5471%" height="15" fill="rgb(236,174,8)" fg:x="480" fg:w="11"/><text x="67.7605%" y="431.50"></text></g><g><title>y2021::d12::node_path::NodePath::from::{{closure}} (10 samples, 1.41%)</title><rect x="67.6512%" y="405" width="1.4065%" height="15" fill="rgb(220,197,8)" fg:x="481" fg:w="10"/><text x="67.9012%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.56%)</title><rect x="68.4951%" y="389" width="0.5626%" height="15" fill="rgb(240,108,37)" fg:x="487" fg:w="4"/><text x="68.7451%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.56%)</title><rect x="68.4951%" y="373" width="0.5626%" height="15" fill="rgb(232,176,24)" fg:x="487" fg:w="4"/><text x="68.7451%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.56%)</title><rect x="68.4951%" y="357" width="0.5626%" height="15" fill="rgb(243,35,29)" fg:x="487" fg:w="4"/><text x="68.7451%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.56%)</title><rect x="68.4951%" y="341" width="0.5626%" height="15" fill="rgb(210,37,18)" fg:x="487" fg:w="4"/><text x="68.7451%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.56%)</title><rect x="68.4951%" y="325" width="0.5626%" height="15" fill="rgb(224,184,40)" fg:x="487" fg:w="4"/><text x="68.7451%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.56%)</title><rect x="68.4951%" y="309" width="0.5626%" height="15" fill="rgb(236,39,29)" fg:x="487" fg:w="4"/><text x="68.7451%" y="319.50"></text></g><g><title>_int_free (3 samples, 0.42%)</title><rect x="68.6357%" y="293" width="0.4219%" height="15" fill="rgb(232,48,39)" fg:x="488" fg:w="3"/><text x="68.8857%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 1.97%)</title><rect x="67.2293%" y="581" width="1.9691%" height="15" fill="rgb(236,34,42)" fg:x="478" fg:w="14"/><text x="67.4793%" y="591.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 1.97%)</title><rect x="67.2293%" y="565" width="1.9691%" height="15" fill="rgb(243,106,37)" fg:x="478" fg:w="14"/><text x="67.4793%" y="575.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.97%)</title><rect x="67.2293%" y="549" width="1.9691%" height="15" fill="rgb(218,96,6)" fg:x="478" fg:w="14"/><text x="67.4793%" y="559.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 1.83%)</title><rect x="67.3699%" y="533" width="1.8284%" height="15" fill="rgb(235,130,12)" fg:x="479" fg:w="13"/><text x="67.6199%" y="543.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 1.83%)</title><rect x="67.3699%" y="517" width="1.8284%" height="15" fill="rgb(231,95,0)" fg:x="479" fg:w="13"/><text x="67.6199%" y="527.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 1.83%)</title><rect x="67.3699%" y="501" width="1.8284%" height="15" fill="rgb(228,12,23)" fg:x="479" fg:w="13"/><text x="67.6199%" y="511.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 1.83%)</title><rect x="67.3699%" y="485" width="1.8284%" height="15" fill="rgb(216,12,1)" fg:x="479" fg:w="13"/><text x="67.6199%" y="495.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 1.83%)</title><rect x="67.3699%" y="469" width="1.8284%" height="15" fill="rgb(219,59,3)" fg:x="479" fg:w="13"/><text x="67.6199%" y="479.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 1.83%)</title><rect x="67.3699%" y="453" width="1.8284%" height="15" fill="rgb(215,208,46)" fg:x="479" fg:w="13"/><text x="67.6199%" y="463.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="69.0577%" y="437" width="0.1406%" height="15" fill="rgb(254,224,29)" fg:x="491" fg:w="1"/><text x="69.3077%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="69.0577%" y="421" width="0.1406%" height="15" fill="rgb(232,14,29)" fg:x="491" fg:w="1"/><text x="69.3077%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::string::String,alloc::alloc::Global&gt;&gt; (1 samples, 0.14%)</title><rect x="69.0577%" y="405" width="0.1406%" height="15" fill="rgb(208,45,52)" fg:x="491" fg:w="1"/><text x="69.3077%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="69.0577%" y="389" width="0.1406%" height="15" fill="rgb(234,191,28)" fg:x="491" fg:w="1"/><text x="69.3077%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="69.0577%" y="373" width="0.1406%" height="15" fill="rgb(244,67,43)" fg:x="491" fg:w="1"/><text x="69.3077%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="69.0577%" y="357" width="0.1406%" height="15" fill="rgb(236,189,24)" fg:x="491" fg:w="1"/><text x="69.3077%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="69.0577%" y="341" width="0.1406%" height="15" fill="rgb(239,214,33)" fg:x="491" fg:w="1"/><text x="69.3077%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="69.0577%" y="325" width="0.1406%" height="15" fill="rgb(226,176,41)" fg:x="491" fg:w="1"/><text x="69.3077%" y="335.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="69.0577%" y="309" width="0.1406%" height="15" fill="rgb(248,47,8)" fg:x="491" fg:w="1"/><text x="69.3077%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.14%)</title><rect x="69.3390%" y="517" width="0.1406%" height="15" fill="rgb(218,81,44)" fg:x="493" fg:w="1"/><text x="69.5890%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.28%)</title><rect x="69.4796%" y="517" width="0.2813%" height="15" fill="rgb(213,98,6)" fg:x="494" fg:w="2"/><text x="69.7296%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="69.4796%" y="501" width="0.2813%" height="15" fill="rgb(222,85,22)" fg:x="494" fg:w="2"/><text x="69.7296%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="69.4796%" y="485" width="0.2813%" height="15" fill="rgb(239,46,39)" fg:x="494" fg:w="2"/><text x="69.7296%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="69.4796%" y="469" width="0.2813%" height="15" fill="rgb(237,12,29)" fg:x="494" fg:w="2"/><text x="69.7296%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.28%)</title><rect x="69.4796%" y="453" width="0.2813%" height="15" fill="rgb(214,77,8)" fg:x="494" fg:w="2"/><text x="69.7296%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="69.4796%" y="437" width="0.2813%" height="15" fill="rgb(217,168,37)" fg:x="494" fg:w="2"/><text x="69.7296%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="69.4796%" y="421" width="0.2813%" height="15" fill="rgb(221,217,23)" fg:x="494" fg:w="2"/><text x="69.7296%" y="431.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="69.4796%" y="405" width="0.2813%" height="15" fill="rgb(243,229,36)" fg:x="494" fg:w="2"/><text x="69.7296%" y="415.50"></text></g><g><title>_int_malloc (2 samples, 0.28%)</title><rect x="69.4796%" y="389" width="0.2813%" height="15" fill="rgb(251,163,40)" fg:x="494" fg:w="2"/><text x="69.7296%" y="399.50"></text></g><g><title>alloc_perturb (1 samples, 0.14%)</title><rect x="69.6203%" y="373" width="0.1406%" height="15" fill="rgb(237,222,12)" fg:x="495" fg:w="1"/><text x="69.8703%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.14%)</title><rect x="69.7609%" y="517" width="0.1406%" height="15" fill="rgb(248,132,6)" fg:x="496" fg:w="1"/><text x="70.0109%" y="527.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (1 samples, 0.14%)</title><rect x="69.7609%" y="501" width="0.1406%" height="15" fill="rgb(227,167,50)" fg:x="496" fg:w="1"/><text x="70.0109%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.14%)</title><rect x="69.7609%" y="485" width="0.1406%" height="15" fill="rgb(242,84,37)" fg:x="496" fg:w="1"/><text x="70.0109%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.14%)</title><rect x="69.7609%" y="469" width="0.1406%" height="15" fill="rgb(212,4,50)" fg:x="496" fg:w="1"/><text x="70.0109%" y="479.50"></text></g><g><title>y2021::d12::main::traverse (89 samples, 12.52%)</title><rect x="57.5246%" y="613" width="12.5176%" height="15" fill="rgb(230,228,32)" fg:x="409" fg:w="89"/><text x="57.7746%" y="623.50">y2021::d12::main::t..</text></g><g><title>y2021::d12::node_path::NodePath::from (35 samples, 4.92%)</title><rect x="65.1195%" y="597" width="4.9226%" height="15" fill="rgb(248,217,23)" fg:x="463" fg:w="35"/><text x="65.3695%" y="607.50">y2021:..</text></g><g><title>y2021::d12::node_path::NodePath::new (6 samples, 0.84%)</title><rect x="69.1983%" y="581" width="0.8439%" height="15" fill="rgb(238,197,32)" fg:x="492" fg:w="6"/><text x="69.4483%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (6 samples, 0.84%)</title><rect x="69.1983%" y="565" width="0.8439%" height="15" fill="rgb(236,106,1)" fg:x="492" fg:w="6"/><text x="69.4483%" y="575.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (6 samples, 0.84%)</title><rect x="69.1983%" y="549" width="0.8439%" height="15" fill="rgb(219,228,13)" fg:x="492" fg:w="6"/><text x="69.4483%" y="559.50"></text></g><g><title>alloc::str::join_generic_copy (6 samples, 0.84%)</title><rect x="69.1983%" y="533" width="0.8439%" height="15" fill="rgb(238,30,35)" fg:x="492" fg:w="6"/><text x="69.4483%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.14%)</title><rect x="69.9015%" y="517" width="0.1406%" height="15" fill="rgb(236,70,23)" fg:x="497" fg:w="1"/><text x="70.1515%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="70.0422%" y="597" width="0.1406%" height="15" fill="rgb(249,104,48)" fg:x="498" fg:w="1"/><text x="70.2922%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="70.0422%" y="581" width="0.1406%" height="15" fill="rgb(254,117,50)" fg:x="498" fg:w="1"/><text x="70.2922%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="70.0422%" y="565" width="0.1406%" height="15" fill="rgb(223,152,4)" fg:x="498" fg:w="1"/><text x="70.2922%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="70.0422%" y="549" width="0.1406%" height="15" fill="rgb(245,6,2)" fg:x="498" fg:w="1"/><text x="70.2922%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="70.0422%" y="533" width="0.1406%" height="15" fill="rgb(249,150,24)" fg:x="498" fg:w="1"/><text x="70.2922%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="70.0422%" y="517" width="0.1406%" height="15" fill="rgb(228,185,42)" fg:x="498" fg:w="1"/><text x="70.2922%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="70.0422%" y="501" width="0.1406%" height="15" fill="rgb(226,39,33)" fg:x="498" fg:w="1"/><text x="70.2922%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="70.0422%" y="485" width="0.1406%" height="15" fill="rgb(221,166,19)" fg:x="498" fg:w="1"/><text x="70.2922%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="70.0422%" y="469" width="0.1406%" height="15" fill="rgb(209,109,2)" fg:x="498" fg:w="1"/><text x="70.2922%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="70.0422%" y="453" width="0.1406%" height="15" fill="rgb(252,216,26)" fg:x="498" fg:w="1"/><text x="70.2922%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="70.0422%" y="437" width="0.1406%" height="15" fill="rgb(227,173,36)" fg:x="498" fg:w="1"/><text x="70.2922%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="70.0422%" y="421" width="0.1406%" height="15" fill="rgb(209,90,7)" fg:x="498" fg:w="1"/><text x="70.2922%" y="431.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="70.0422%" y="405" width="0.1406%" height="15" fill="rgb(250,194,11)" fg:x="498" fg:w="1"/><text x="70.2922%" y="415.50"></text></g><g><title>__GI___libc_malloc (8 samples, 1.13%)</title><rect x="70.3235%" y="357" width="1.1252%" height="15" fill="rgb(220,72,50)" fg:x="500" fg:w="8"/><text x="70.5735%" y="367.50"></text></g><g><title>_int_malloc (5 samples, 0.70%)</title><rect x="70.7454%" y="341" width="0.7032%" height="15" fill="rgb(222,106,48)" fg:x="503" fg:w="5"/><text x="70.9954%" y="351.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.28%)</title><rect x="71.1674%" y="325" width="0.2813%" height="15" fill="rgb(216,220,45)" fg:x="506" fg:w="2"/><text x="71.4174%" y="335.50"></text></g><g><title>exc_page_fault (2 samples, 0.28%)</title><rect x="71.1674%" y="309" width="0.2813%" height="15" fill="rgb(234,112,18)" fg:x="506" fg:w="2"/><text x="71.4174%" y="319.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.28%)</title><rect x="71.1674%" y="293" width="0.2813%" height="15" fill="rgb(206,179,9)" fg:x="506" fg:w="2"/><text x="71.4174%" y="303.50"></text></g><g><title>handle_mm_fault (2 samples, 0.28%)</title><rect x="71.1674%" y="277" width="0.2813%" height="15" fill="rgb(215,115,40)" fg:x="506" fg:w="2"/><text x="71.4174%" y="287.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.28%)</title><rect x="71.1674%" y="261" width="0.2813%" height="15" fill="rgb(222,69,34)" fg:x="506" fg:w="2"/><text x="71.4174%" y="271.50"></text></g><g><title>do_anonymous_page (2 samples, 0.28%)</title><rect x="71.1674%" y="245" width="0.2813%" height="15" fill="rgb(209,161,10)" fg:x="506" fg:w="2"/><text x="71.4174%" y="255.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.28%)</title><rect x="71.1674%" y="229" width="0.2813%" height="15" fill="rgb(217,6,38)" fg:x="506" fg:w="2"/><text x="71.4174%" y="239.50"></text></g><g><title>__alloc_pages_nodemask (2 samples, 0.28%)</title><rect x="71.1674%" y="213" width="0.2813%" height="15" fill="rgb(229,229,48)" fg:x="506" fg:w="2"/><text x="71.4174%" y="223.50"></text></g><g><title>get_page_from_freelist (2 samples, 0.28%)</title><rect x="71.1674%" y="197" width="0.2813%" height="15" fill="rgb(225,21,28)" fg:x="506" fg:w="2"/><text x="71.4174%" y="207.50"></text></g><g><title>clear_page_rep (2 samples, 0.28%)</title><rect x="71.1674%" y="181" width="0.2813%" height="15" fill="rgb(206,33,13)" fg:x="506" fg:w="2"/><text x="71.4174%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 1.41%)</title><rect x="70.3235%" y="453" width="1.4065%" height="15" fill="rgb(242,178,17)" fg:x="500" fg:w="10"/><text x="70.5735%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 1.41%)</title><rect x="70.3235%" y="437" width="1.4065%" height="15" fill="rgb(220,162,5)" fg:x="500" fg:w="10"/><text x="70.5735%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 1.41%)</title><rect x="70.3235%" y="421" width="1.4065%" height="15" fill="rgb(210,33,43)" fg:x="500" fg:w="10"/><text x="70.5735%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 1.41%)</title><rect x="70.3235%" y="405" width="1.4065%" height="15" fill="rgb(216,116,54)" fg:x="500" fg:w="10"/><text x="70.5735%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 1.41%)</title><rect x="70.3235%" y="389" width="1.4065%" height="15" fill="rgb(249,92,24)" fg:x="500" fg:w="10"/><text x="70.5735%" y="399.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 1.41%)</title><rect x="70.3235%" y="373" width="1.4065%" height="15" fill="rgb(231,189,14)" fg:x="500" fg:w="10"/><text x="70.5735%" y="383.50"></text></g><g><title>__rust_alloc (2 samples, 0.28%)</title><rect x="71.4487%" y="357" width="0.2813%" height="15" fill="rgb(230,8,41)" fg:x="508" fg:w="2"/><text x="71.6987%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 1.69%)</title><rect x="70.1828%" y="533" width="1.6878%" height="15" fill="rgb(249,7,27)" fg:x="499" fg:w="12"/><text x="70.4328%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 1.55%)</title><rect x="70.3235%" y="517" width="1.5471%" height="15" fill="rgb(232,86,5)" fg:x="500" fg:w="11"/><text x="70.5735%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 1.55%)</title><rect x="70.3235%" y="501" width="1.5471%" height="15" fill="rgb(224,175,18)" fg:x="500" fg:w="11"/><text x="70.5735%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 1.55%)</title><rect x="70.3235%" y="485" width="1.5471%" height="15" fill="rgb(220,129,12)" fg:x="500" fg:w="11"/><text x="70.5735%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 1.55%)</title><rect x="70.3235%" y="469" width="1.5471%" height="15" fill="rgb(210,19,36)" fg:x="500" fg:w="11"/><text x="70.5735%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.14%)</title><rect x="71.7300%" y="453" width="0.1406%" height="15" fill="rgb(219,96,14)" fg:x="510" fg:w="1"/><text x="71.9800%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="71.7300%" y="437" width="0.1406%" height="15" fill="rgb(249,106,1)" fg:x="510" fg:w="1"/><text x="71.9800%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="71.7300%" y="421" width="0.1406%" height="15" fill="rgb(249,155,20)" fg:x="510" fg:w="1"/><text x="71.9800%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="71.8706%" y="533" width="0.1406%" height="15" fill="rgb(244,168,9)" fg:x="511" fg:w="1"/><text x="72.1206%" y="543.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.14%)</title><rect x="72.0113%" y="309" width="0.1406%" height="15" fill="rgb(216,23,50)" fg:x="512" fg:w="1"/><text x="72.2613%" y="319.50"></text></g><g><title>lru_cache_add (1 samples, 0.14%)</title><rect x="72.0113%" y="293" width="0.1406%" height="15" fill="rgb(224,219,20)" fg:x="512" fg:w="1"/><text x="72.2613%" y="303.50"></text></g><g><title>__pagevec_lru_add (1 samples, 0.14%)</title><rect x="72.0113%" y="277" width="0.1406%" height="15" fill="rgb(222,156,15)" fg:x="512" fg:w="1"/><text x="72.2613%" y="287.50"></text></g><g><title>lock_page_lruvec_irqsave (1 samples, 0.14%)</title><rect x="72.0113%" y="261" width="0.1406%" height="15" fill="rgb(231,97,17)" fg:x="512" fg:w="1"/><text x="72.2613%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="72.0113%" y="533" width="0.2813%" height="15" fill="rgb(218,70,48)" fg:x="512" fg:w="2"/><text x="72.2613%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="72.0113%" y="517" width="0.2813%" height="15" fill="rgb(212,196,52)" fg:x="512" fg:w="2"/><text x="72.2613%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="72.0113%" y="501" width="0.2813%" height="15" fill="rgb(243,203,18)" fg:x="512" fg:w="2"/><text x="72.2613%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.28%)</title><rect x="72.0113%" y="485" width="0.2813%" height="15" fill="rgb(252,125,41)" fg:x="512" fg:w="2"/><text x="72.2613%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="72.0113%" y="469" width="0.2813%" height="15" fill="rgb(223,180,33)" fg:x="512" fg:w="2"/><text x="72.2613%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="72.0113%" y="453" width="0.2813%" height="15" fill="rgb(254,159,46)" fg:x="512" fg:w="2"/><text x="72.2613%" y="463.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="72.0113%" y="437" width="0.2813%" height="15" fill="rgb(254,38,10)" fg:x="512" fg:w="2"/><text x="72.2613%" y="447.50"></text></g><g><title>_int_malloc (2 samples, 0.28%)</title><rect x="72.0113%" y="421" width="0.2813%" height="15" fill="rgb(208,217,32)" fg:x="512" fg:w="2"/><text x="72.2613%" y="431.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.28%)</title><rect x="72.0113%" y="405" width="0.2813%" height="15" fill="rgb(221,120,13)" fg:x="512" fg:w="2"/><text x="72.2613%" y="415.50"></text></g><g><title>exc_page_fault (2 samples, 0.28%)</title><rect x="72.0113%" y="389" width="0.2813%" height="15" fill="rgb(246,54,52)" fg:x="512" fg:w="2"/><text x="72.2613%" y="399.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.28%)</title><rect x="72.0113%" y="373" width="0.2813%" height="15" fill="rgb(242,34,25)" fg:x="512" fg:w="2"/><text x="72.2613%" y="383.50"></text></g><g><title>handle_mm_fault (2 samples, 0.28%)</title><rect x="72.0113%" y="357" width="0.2813%" height="15" fill="rgb(247,209,9)" fg:x="512" fg:w="2"/><text x="72.2613%" y="367.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.28%)</title><rect x="72.0113%" y="341" width="0.2813%" height="15" fill="rgb(228,71,26)" fg:x="512" fg:w="2"/><text x="72.2613%" y="351.50"></text></g><g><title>do_anonymous_page (2 samples, 0.28%)</title><rect x="72.0113%" y="325" width="0.2813%" height="15" fill="rgb(222,145,49)" fg:x="512" fg:w="2"/><text x="72.2613%" y="335.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.14%)</title><rect x="72.1519%" y="309" width="0.1406%" height="15" fill="rgb(218,121,17)" fg:x="513" fg:w="1"/><text x="72.4019%" y="319.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.14%)</title><rect x="72.1519%" y="293" width="0.1406%" height="15" fill="rgb(244,50,7)" fg:x="513" fg:w="1"/><text x="72.4019%" y="303.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.14%)</title><rect x="72.1519%" y="277" width="0.1406%" height="15" fill="rgb(246,229,37)" fg:x="513" fg:w="1"/><text x="72.4019%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 3.09%)</title><rect x="70.1828%" y="597" width="3.0942%" height="15" fill="rgb(225,18,5)" fg:x="499" fg:w="22"/><text x="70.4328%" y="607.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 3.09%)</title><rect x="70.1828%" y="581" width="3.0942%" height="15" fill="rgb(213,204,8)" fg:x="499" fg:w="22"/><text x="70.4328%" y="591.50">all..</text></g><g><title>alloc::slice::hack::to_vec (22 samples, 3.09%)</title><rect x="70.1828%" y="565" width="3.0942%" height="15" fill="rgb(238,103,6)" fg:x="499" fg:w="22"/><text x="70.4328%" y="575.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 3.09%)</title><rect x="70.1828%" y="549" width="3.0942%" height="15" fill="rgb(222,25,35)" fg:x="499" fg:w="22"/><text x="70.4328%" y="559.50">&lt;T ..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (7 samples, 0.98%)</title><rect x="72.2925%" y="533" width="0.9845%" height="15" fill="rgb(213,203,35)" fg:x="514" fg:w="7"/><text x="72.5425%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.14%)</title><rect x="73.2771%" y="421" width="0.1406%" height="15" fill="rgb(221,79,53)" fg:x="521" fg:w="1"/><text x="73.5271%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.14%)</title><rect x="73.2771%" y="405" width="0.1406%" height="15" fill="rgb(243,200,35)" fg:x="521" fg:w="1"/><text x="73.5271%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.14%)</title><rect x="73.2771%" y="389" width="0.1406%" height="15" fill="rgb(248,60,25)" fg:x="521" fg:w="1"/><text x="73.5271%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="73.9803%" y="213" width="0.1406%" height="15" fill="rgb(227,53,46)" fg:x="526" fg:w="1"/><text x="74.2303%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.84%)</title><rect x="73.6990%" y="325" width="0.8439%" height="15" fill="rgb(216,120,32)" fg:x="524" fg:w="6"/><text x="73.9490%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.84%)</title><rect x="73.6990%" y="309" width="0.8439%" height="15" fill="rgb(220,134,1)" fg:x="524" fg:w="6"/><text x="73.9490%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.84%)</title><rect x="73.6990%" y="293" width="0.8439%" height="15" fill="rgb(237,168,5)" fg:x="524" fg:w="6"/><text x="73.9490%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.84%)</title><rect x="73.6990%" y="277" width="0.8439%" height="15" fill="rgb(231,100,33)" fg:x="524" fg:w="6"/><text x="73.9490%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.84%)</title><rect x="73.6990%" y="261" width="0.8439%" height="15" fill="rgb(236,177,47)" fg:x="524" fg:w="6"/><text x="73.9490%" y="271.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.84%)</title><rect x="73.6990%" y="245" width="0.8439%" height="15" fill="rgb(235,7,49)" fg:x="524" fg:w="6"/><text x="73.9490%" y="255.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.84%)</title><rect x="73.6990%" y="229" width="0.8439%" height="15" fill="rgb(232,119,22)" fg:x="524" fg:w="6"/><text x="73.9490%" y="239.50"></text></g><g><title>tcache_get (3 samples, 0.42%)</title><rect x="74.1210%" y="213" width="0.4219%" height="15" fill="rgb(254,73,53)" fg:x="527" fg:w="3"/><text x="74.3710%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 1.27%)</title><rect x="73.4177%" y="405" width="1.2658%" height="15" fill="rgb(251,35,20)" fg:x="522" fg:w="9"/><text x="73.6677%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.98%)</title><rect x="73.6990%" y="389" width="0.9845%" height="15" fill="rgb(241,119,20)" fg:x="524" fg:w="7"/><text x="73.9490%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.98%)</title><rect x="73.6990%" y="373" width="0.9845%" height="15" fill="rgb(207,102,14)" fg:x="524" fg:w="7"/><text x="73.9490%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.98%)</title><rect x="73.6990%" y="357" width="0.9845%" height="15" fill="rgb(248,201,50)" fg:x="524" fg:w="7"/><text x="73.9490%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.98%)</title><rect x="73.6990%" y="341" width="0.9845%" height="15" fill="rgb(222,185,44)" fg:x="524" fg:w="7"/><text x="73.9490%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.14%)</title><rect x="74.5429%" y="325" width="0.1406%" height="15" fill="rgb(218,107,18)" fg:x="530" fg:w="1"/><text x="74.7929%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="74.5429%" y="309" width="0.1406%" height="15" fill="rgb(237,177,39)" fg:x="530" fg:w="1"/><text x="74.7929%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.14%)</title><rect x="74.5429%" y="293" width="0.1406%" height="15" fill="rgb(246,69,6)" fg:x="530" fg:w="1"/><text x="74.7929%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 2.11%)</title><rect x="73.2771%" y="453" width="2.1097%" height="15" fill="rgb(234,208,37)" fg:x="521" fg:w="15"/><text x="73.5271%" y="463.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (15 samples, 2.11%)</title><rect x="73.2771%" y="437" width="2.1097%" height="15" fill="rgb(225,4,6)" fg:x="521" fg:w="15"/><text x="73.5271%" y="447.50">c..</text></g><g><title>y2021::d12::node_path::NodePath::from::{{closure}} (14 samples, 1.97%)</title><rect x="73.4177%" y="421" width="1.9691%" height="15" fill="rgb(233,45,0)" fg:x="522" fg:w="14"/><text x="73.6677%" y="431.50">y..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.70%)</title><rect x="74.6835%" y="405" width="0.7032%" height="15" fill="rgb(226,136,5)" fg:x="531" fg:w="5"/><text x="74.9335%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.70%)</title><rect x="74.6835%" y="389" width="0.7032%" height="15" fill="rgb(211,91,47)" fg:x="531" fg:w="5"/><text x="74.9335%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.70%)</title><rect x="74.6835%" y="373" width="0.7032%" height="15" fill="rgb(242,88,51)" fg:x="531" fg:w="5"/><text x="74.9335%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.70%)</title><rect x="74.6835%" y="357" width="0.7032%" height="15" fill="rgb(230,91,28)" fg:x="531" fg:w="5"/><text x="74.9335%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.70%)</title><rect x="74.6835%" y="341" width="0.7032%" height="15" fill="rgb(254,186,29)" fg:x="531" fg:w="5"/><text x="74.9335%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.70%)</title><rect x="74.6835%" y="325" width="0.7032%" height="15" fill="rgb(238,6,4)" fg:x="531" fg:w="5"/><text x="74.9335%" y="335.50"></text></g><g><title>_int_free (5 samples, 0.70%)</title><rect x="74.6835%" y="309" width="0.7032%" height="15" fill="rgb(221,151,16)" fg:x="531" fg:w="5"/><text x="74.9335%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (16 samples, 2.25%)</title><rect x="73.2771%" y="597" width="2.2504%" height="15" fill="rgb(251,143,52)" fg:x="521" fg:w="16"/><text x="73.5271%" y="607.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 2.25%)</title><rect x="73.2771%" y="581" width="2.2504%" height="15" fill="rgb(206,90,15)" fg:x="521" fg:w="16"/><text x="73.5271%" y="591.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 2.25%)</title><rect x="73.2771%" y="565" width="2.2504%" height="15" fill="rgb(218,35,8)" fg:x="521" fg:w="16"/><text x="73.5271%" y="575.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 2.25%)</title><rect x="73.2771%" y="549" width="2.2504%" height="15" fill="rgb(239,215,6)" fg:x="521" fg:w="16"/><text x="73.5271%" y="559.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (16 samples, 2.25%)</title><rect x="73.2771%" y="533" width="2.2504%" height="15" fill="rgb(245,116,39)" fg:x="521" fg:w="16"/><text x="73.5271%" y="543.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (16 samples, 2.25%)</title><rect x="73.2771%" y="517" width="2.2504%" height="15" fill="rgb(242,65,28)" fg:x="521" fg:w="16"/><text x="73.5271%" y="527.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 2.25%)</title><rect x="73.2771%" y="501" width="2.2504%" height="15" fill="rgb(252,132,53)" fg:x="521" fg:w="16"/><text x="73.5271%" y="511.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 2.25%)</title><rect x="73.2771%" y="485" width="2.2504%" height="15" fill="rgb(224,159,50)" fg:x="521" fg:w="16"/><text x="73.5271%" y="495.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 2.25%)</title><rect x="73.2771%" y="469" width="2.2504%" height="15" fill="rgb(224,93,4)" fg:x="521" fg:w="16"/><text x="73.5271%" y="479.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="75.3868%" y="453" width="0.1406%" height="15" fill="rgb(208,81,34)" fg:x="536" fg:w="1"/><text x="75.6368%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="75.3868%" y="437" width="0.1406%" height="15" fill="rgb(233,92,54)" fg:x="536" fg:w="1"/><text x="75.6368%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::string::String,alloc::alloc::Global&gt;&gt; (1 samples, 0.14%)</title><rect x="75.3868%" y="421" width="0.1406%" height="15" fill="rgb(237,21,14)" fg:x="536" fg:w="1"/><text x="75.6368%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="75.3868%" y="405" width="0.1406%" height="15" fill="rgb(249,128,51)" fg:x="536" fg:w="1"/><text x="75.6368%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="75.3868%" y="389" width="0.1406%" height="15" fill="rgb(223,129,24)" fg:x="536" fg:w="1"/><text x="75.6368%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="75.3868%" y="373" width="0.1406%" height="15" fill="rgb(231,168,25)" fg:x="536" fg:w="1"/><text x="75.6368%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="75.3868%" y="357" width="0.1406%" height="15" fill="rgb(224,39,20)" fg:x="536" fg:w="1"/><text x="75.6368%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="75.3868%" y="341" width="0.1406%" height="15" fill="rgb(225,152,53)" fg:x="536" fg:w="1"/><text x="75.6368%" y="351.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="75.3868%" y="325" width="0.1406%" height="15" fill="rgb(252,17,24)" fg:x="536" fg:w="1"/><text x="75.6368%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.28%)</title><rect x="75.6681%" y="533" width="0.2813%" height="15" fill="rgb(250,114,30)" fg:x="538" fg:w="2"/><text x="75.9181%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="75.6681%" y="517" width="0.2813%" height="15" fill="rgb(229,5,4)" fg:x="538" fg:w="2"/><text x="75.9181%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="75.6681%" y="501" width="0.2813%" height="15" fill="rgb(225,176,49)" fg:x="538" fg:w="2"/><text x="75.9181%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="75.6681%" y="485" width="0.2813%" height="15" fill="rgb(224,221,49)" fg:x="538" fg:w="2"/><text x="75.9181%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.28%)</title><rect x="75.6681%" y="469" width="0.2813%" height="15" fill="rgb(253,169,27)" fg:x="538" fg:w="2"/><text x="75.9181%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="75.6681%" y="453" width="0.2813%" height="15" fill="rgb(211,206,16)" fg:x="538" fg:w="2"/><text x="75.9181%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="75.6681%" y="437" width="0.2813%" height="15" fill="rgb(244,87,35)" fg:x="538" fg:w="2"/><text x="75.9181%" y="447.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="75.6681%" y="421" width="0.2813%" height="15" fill="rgb(246,28,10)" fg:x="538" fg:w="2"/><text x="75.9181%" y="431.50"></text></g><g><title>_int_malloc (2 samples, 0.28%)</title><rect x="75.6681%" y="405" width="0.2813%" height="15" fill="rgb(229,12,44)" fg:x="538" fg:w="2"/><text x="75.9181%" y="415.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.14%)</title><rect x="75.8087%" y="389" width="0.1406%" height="15" fill="rgb(210,145,37)" fg:x="539" fg:w="1"/><text x="76.0587%" y="399.50"></text></g><g><title>exc_page_fault (1 samples, 0.14%)</title><rect x="75.8087%" y="373" width="0.1406%" height="15" fill="rgb(227,112,52)" fg:x="539" fg:w="1"/><text x="76.0587%" y="383.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.14%)</title><rect x="75.8087%" y="357" width="0.1406%" height="15" fill="rgb(238,155,34)" fg:x="539" fg:w="1"/><text x="76.0587%" y="367.50"></text></g><g><title>handle_mm_fault (1 samples, 0.14%)</title><rect x="75.8087%" y="341" width="0.1406%" height="15" fill="rgb(239,226,36)" fg:x="539" fg:w="1"/><text x="76.0587%" y="351.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.14%)</title><rect x="75.8087%" y="325" width="0.1406%" height="15" fill="rgb(230,16,23)" fg:x="539" fg:w="1"/><text x="76.0587%" y="335.50"></text></g><g><title>do_anonymous_page (1 samples, 0.14%)</title><rect x="75.8087%" y="309" width="0.1406%" height="15" fill="rgb(236,171,36)" fg:x="539" fg:w="1"/><text x="76.0587%" y="319.50"></text></g><g><title>mem_cgroup_charge (1 samples, 0.14%)</title><rect x="75.8087%" y="293" width="0.1406%" height="15" fill="rgb(221,22,14)" fg:x="539" fg:w="1"/><text x="76.0587%" y="303.50"></text></g><g><title>try_charge (1 samples, 0.14%)</title><rect x="75.8087%" y="277" width="0.1406%" height="15" fill="rgb(242,43,11)" fg:x="539" fg:w="1"/><text x="76.0587%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.14%)</title><rect x="75.9494%" y="533" width="0.1406%" height="15" fill="rgb(232,69,23)" fg:x="540" fg:w="1"/><text x="76.1994%" y="543.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (1 samples, 0.14%)</title><rect x="75.9494%" y="517" width="0.1406%" height="15" fill="rgb(216,180,54)" fg:x="540" fg:w="1"/><text x="76.1994%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.14%)</title><rect x="75.9494%" y="501" width="0.1406%" height="15" fill="rgb(216,5,24)" fg:x="540" fg:w="1"/><text x="76.1994%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.14%)</title><rect x="75.9494%" y="485" width="0.1406%" height="15" fill="rgb(225,89,9)" fg:x="540" fg:w="1"/><text x="76.1994%" y="495.50"></text></g><g><title>y2021::d12::main::traverse (188 samples, 26.44%)</title><rect x="49.7890%" y="629" width="26.4416%" height="15" fill="rgb(243,75,33)" fg:x="354" fg:w="188"/><text x="50.0390%" y="639.50">y2021::d12::main::traverse</text></g><g><title>y2021::d12::node_path::NodePath::from (44 samples, 6.19%)</title><rect x="70.0422%" y="613" width="6.1885%" height="15" fill="rgb(247,141,45)" fg:x="498" fg:w="44"/><text x="70.2922%" y="623.50">y2021::d..</text></g><g><title>y2021::d12::node_path::NodePath::new (5 samples, 0.70%)</title><rect x="75.5274%" y="597" width="0.7032%" height="15" fill="rgb(232,177,36)" fg:x="537" fg:w="5"/><text x="75.7774%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (4 samples, 0.56%)</title><rect x="75.6681%" y="581" width="0.5626%" height="15" fill="rgb(219,125,36)" fg:x="538" fg:w="4"/><text x="75.9181%" y="591.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (4 samples, 0.56%)</title><rect x="75.6681%" y="565" width="0.5626%" height="15" fill="rgb(227,94,9)" fg:x="538" fg:w="4"/><text x="75.9181%" y="575.50"></text></g><g><title>alloc::str::join_generic_copy (4 samples, 0.56%)</title><rect x="75.6681%" y="549" width="0.5626%" height="15" fill="rgb(240,34,52)" fg:x="538" fg:w="4"/><text x="75.9181%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.14%)</title><rect x="76.0900%" y="533" width="0.1406%" height="15" fill="rgb(216,45,12)" fg:x="541" fg:w="1"/><text x="76.3400%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.14%)</title><rect x="76.0900%" y="517" width="0.1406%" height="15" fill="rgb(246,21,19)" fg:x="541" fg:w="1"/><text x="76.3400%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.14%)</title><rect x="76.0900%" y="501" width="0.1406%" height="15" fill="rgb(213,98,42)" fg:x="541" fg:w="1"/><text x="76.3400%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.14%)</title><rect x="76.0900%" y="485" width="0.1406%" height="15" fill="rgb(250,136,47)" fg:x="541" fg:w="1"/><text x="76.3400%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="76.5120%" y="613" width="0.1406%" height="15" fill="rgb(251,124,27)" fg:x="544" fg:w="1"/><text x="76.7620%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="76.5120%" y="597" width="0.1406%" height="15" fill="rgb(229,180,14)" fg:x="544" fg:w="1"/><text x="76.7620%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="76.5120%" y="581" width="0.1406%" height="15" fill="rgb(245,216,25)" fg:x="544" fg:w="1"/><text x="76.7620%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="76.5120%" y="565" width="0.1406%" height="15" fill="rgb(251,43,5)" fg:x="544" fg:w="1"/><text x="76.7620%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="76.5120%" y="549" width="0.1406%" height="15" fill="rgb(250,128,24)" fg:x="544" fg:w="1"/><text x="76.7620%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.14%)</title><rect x="76.5120%" y="533" width="0.1406%" height="15" fill="rgb(217,117,27)" fg:x="544" fg:w="1"/><text x="76.7620%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="76.5120%" y="517" width="0.1406%" height="15" fill="rgb(245,147,4)" fg:x="544" fg:w="1"/><text x="76.7620%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.14%)</title><rect x="76.5120%" y="501" width="0.1406%" height="15" fill="rgb(242,201,35)" fg:x="544" fg:w="1"/><text x="76.7620%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="76.9339%" y="357" width="0.1406%" height="15" fill="rgb(218,181,1)" fg:x="547" fg:w="1"/><text x="77.1839%" y="367.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.84%)</title><rect x="76.7932%" y="373" width="0.8439%" height="15" fill="rgb(222,6,29)" fg:x="546" fg:w="6"/><text x="77.0432%" y="383.50"></text></g><g><title>tcache_get (4 samples, 0.56%)</title><rect x="77.0745%" y="357" width="0.5626%" height="15" fill="rgb(208,186,3)" fg:x="548" fg:w="4"/><text x="77.3245%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 1.13%)</title><rect x="76.7932%" y="469" width="1.1252%" height="15" fill="rgb(216,36,26)" fg:x="546" fg:w="8"/><text x="77.0432%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 1.13%)</title><rect x="76.7932%" y="453" width="1.1252%" height="15" fill="rgb(248,201,23)" fg:x="546" fg:w="8"/><text x="77.0432%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 1.13%)</title><rect x="76.7932%" y="437" width="1.1252%" height="15" fill="rgb(251,170,31)" fg:x="546" fg:w="8"/><text x="77.0432%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 1.13%)</title><rect x="76.7932%" y="421" width="1.1252%" height="15" fill="rgb(207,110,25)" fg:x="546" fg:w="8"/><text x="77.0432%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 1.13%)</title><rect x="76.7932%" y="405" width="1.1252%" height="15" fill="rgb(250,54,15)" fg:x="546" fg:w="8"/><text x="77.0432%" y="415.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 1.13%)</title><rect x="76.7932%" y="389" width="1.1252%" height="15" fill="rgb(227,68,33)" fg:x="546" fg:w="8"/><text x="77.0432%" y="399.50"></text></g><g><title>__rdl_alloc (2 samples, 0.28%)</title><rect x="77.6371%" y="373" width="0.2813%" height="15" fill="rgb(238,34,41)" fg:x="552" fg:w="2"/><text x="77.8871%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.14%)</title><rect x="77.7778%" y="357" width="0.1406%" height="15" fill="rgb(220,11,15)" fg:x="553" fg:w="1"/><text x="78.0278%" y="367.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.14%)</title><rect x="77.9184%" y="437" width="0.1406%" height="15" fill="rgb(246,111,35)" fg:x="554" fg:w="1"/><text x="78.1684%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 1.55%)</title><rect x="76.6526%" y="549" width="1.5471%" height="15" fill="rgb(209,88,53)" fg:x="545" fg:w="11"/><text x="76.9026%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 1.41%)</title><rect x="76.7932%" y="533" width="1.4065%" height="15" fill="rgb(231,185,47)" fg:x="546" fg:w="10"/><text x="77.0432%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 1.41%)</title><rect x="76.7932%" y="517" width="1.4065%" height="15" fill="rgb(233,154,1)" fg:x="546" fg:w="10"/><text x="77.0432%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 1.41%)</title><rect x="76.7932%" y="501" width="1.4065%" height="15" fill="rgb(225,15,46)" fg:x="546" fg:w="10"/><text x="77.0432%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 1.41%)</title><rect x="76.7932%" y="485" width="1.4065%" height="15" fill="rgb(211,135,41)" fg:x="546" fg:w="10"/><text x="77.0432%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.28%)</title><rect x="77.9184%" y="469" width="0.2813%" height="15" fill="rgb(208,54,0)" fg:x="554" fg:w="2"/><text x="78.1684%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.28%)</title><rect x="77.9184%" y="453" width="0.2813%" height="15" fill="rgb(244,136,14)" fg:x="554" fg:w="2"/><text x="78.1684%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="78.0591%" y="437" width="0.1406%" height="15" fill="rgb(241,56,14)" fg:x="555" fg:w="1"/><text x="78.3091%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="78.1997%" y="549" width="0.1406%" height="15" fill="rgb(205,80,24)" fg:x="556" fg:w="1"/><text x="78.4497%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 2.81%)</title><rect x="76.6526%" y="613" width="2.8129%" height="15" fill="rgb(220,57,4)" fg:x="545" fg:w="20"/><text x="76.9026%" y="623.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 2.81%)</title><rect x="76.6526%" y="597" width="2.8129%" height="15" fill="rgb(226,193,50)" fg:x="545" fg:w="20"/><text x="76.9026%" y="607.50">al..</text></g><g><title>alloc::slice::hack::to_vec (20 samples, 2.81%)</title><rect x="76.6526%" y="581" width="2.8129%" height="15" fill="rgb(231,168,22)" fg:x="545" fg:w="20"/><text x="76.9026%" y="591.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 2.81%)</title><rect x="76.6526%" y="565" width="2.8129%" height="15" fill="rgb(254,215,14)" fg:x="545" fg:w="20"/><text x="76.9026%" y="575.50">&lt;T..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (8 samples, 1.13%)</title><rect x="78.3404%" y="549" width="1.1252%" height="15" fill="rgb(211,115,16)" fg:x="557" fg:w="8"/><text x="78.5904%" y="559.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="79.6062%" y="485" width="0.1406%" height="15" fill="rgb(236,210,16)" fg:x="566" fg:w="1"/><text x="79.8562%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.14%)</title><rect x="79.6062%" y="469" width="0.1406%" height="15" fill="rgb(221,94,12)" fg:x="566" fg:w="1"/><text x="79.8562%" y="479.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.14%)</title><rect x="79.6062%" y="453" width="0.1406%" height="15" fill="rgb(235,218,49)" fg:x="566" fg:w="1"/><text x="79.8562%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.14%)</title><rect x="79.6062%" y="437" width="0.1406%" height="15" fill="rgb(217,114,14)" fg:x="566" fg:w="1"/><text x="79.8562%" y="447.50"></text></g><g><title>y2021::d12::node_path::NodePath::from::{{closure}} (1 samples, 0.14%)</title><rect x="79.6062%" y="421" width="0.1406%" height="15" fill="rgb(216,145,22)" fg:x="566" fg:w="1"/><text x="79.8562%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.14%)</title><rect x="79.7468%" y="437" width="0.1406%" height="15" fill="rgb(217,112,39)" fg:x="567" fg:w="1"/><text x="79.9968%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.14%)</title><rect x="79.7468%" y="421" width="0.1406%" height="15" fill="rgb(225,85,32)" fg:x="567" fg:w="1"/><text x="79.9968%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.14%)</title><rect x="79.7468%" y="405" width="0.1406%" height="15" fill="rgb(245,209,47)" fg:x="567" fg:w="1"/><text x="79.9968%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.84%)</title><rect x="80.0281%" y="341" width="0.8439%" height="15" fill="rgb(218,220,15)" fg:x="569" fg:w="6"/><text x="80.2781%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.84%)</title><rect x="80.0281%" y="325" width="0.8439%" height="15" fill="rgb(222,202,31)" fg:x="569" fg:w="6"/><text x="80.2781%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.84%)</title><rect x="80.0281%" y="309" width="0.8439%" height="15" fill="rgb(243,203,4)" fg:x="569" fg:w="6"/><text x="80.2781%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.84%)</title><rect x="80.0281%" y="293" width="0.8439%" height="15" fill="rgb(237,92,17)" fg:x="569" fg:w="6"/><text x="80.2781%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.84%)</title><rect x="80.0281%" y="277" width="0.8439%" height="15" fill="rgb(231,119,7)" fg:x="569" fg:w="6"/><text x="80.2781%" y="287.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.84%)</title><rect x="80.0281%" y="261" width="0.8439%" height="15" fill="rgb(237,82,41)" fg:x="569" fg:w="6"/><text x="80.2781%" y="271.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.84%)</title><rect x="80.0281%" y="245" width="0.8439%" height="15" fill="rgb(226,81,48)" fg:x="569" fg:w="6"/><text x="80.2781%" y="255.50"></text></g><g><title>tcache_get (2 samples, 0.28%)</title><rect x="80.5907%" y="229" width="0.2813%" height="15" fill="rgb(234,70,51)" fg:x="573" fg:w="2"/><text x="80.8407%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 1.13%)</title><rect x="79.8875%" y="421" width="1.1252%" height="15" fill="rgb(251,86,4)" fg:x="568" fg:w="8"/><text x="80.1375%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.98%)</title><rect x="80.0281%" y="405" width="0.9845%" height="15" fill="rgb(244,144,28)" fg:x="569" fg:w="7"/><text x="80.2781%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.98%)</title><rect x="80.0281%" y="389" width="0.9845%" height="15" fill="rgb(232,161,39)" fg:x="569" fg:w="7"/><text x="80.2781%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.98%)</title><rect x="80.0281%" y="373" width="0.9845%" height="15" fill="rgb(247,34,51)" fg:x="569" fg:w="7"/><text x="80.2781%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.98%)</title><rect x="80.0281%" y="357" width="0.9845%" height="15" fill="rgb(225,132,2)" fg:x="569" fg:w="7"/><text x="80.2781%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.14%)</title><rect x="80.8720%" y="341" width="0.1406%" height="15" fill="rgb(209,159,44)" fg:x="575" fg:w="1"/><text x="81.1220%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="80.8720%" y="325" width="0.1406%" height="15" fill="rgb(251,214,1)" fg:x="575" fg:w="1"/><text x="81.1220%" y="335.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.14%)</title><rect x="80.8720%" y="309" width="0.1406%" height="15" fill="rgb(247,84,47)" fg:x="575" fg:w="1"/><text x="81.1220%" y="319.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="81.0127%" y="325" width="0.1406%" height="15" fill="rgb(240,111,43)" fg:x="576" fg:w="1"/><text x="81.2627%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (16 samples, 2.25%)</title><rect x="79.7468%" y="469" width="2.2504%" height="15" fill="rgb(215,214,35)" fg:x="567" fg:w="16"/><text x="79.9968%" y="479.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (16 samples, 2.25%)</title><rect x="79.7468%" y="453" width="2.2504%" height="15" fill="rgb(248,207,23)" fg:x="567" fg:w="16"/><text x="79.9968%" y="463.50">c..</text></g><g><title>y2021::d12::node_path::NodePath::from::{{closure}} (15 samples, 2.11%)</title><rect x="79.8875%" y="437" width="2.1097%" height="15" fill="rgb(214,186,4)" fg:x="568" fg:w="15"/><text x="80.1375%" y="447.50">y..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.98%)</title><rect x="81.0127%" y="421" width="0.9845%" height="15" fill="rgb(220,133,22)" fg:x="576" fg:w="7"/><text x="81.2627%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.98%)</title><rect x="81.0127%" y="405" width="0.9845%" height="15" fill="rgb(239,134,19)" fg:x="576" fg:w="7"/><text x="81.2627%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.98%)</title><rect x="81.0127%" y="389" width="0.9845%" height="15" fill="rgb(250,140,9)" fg:x="576" fg:w="7"/><text x="81.2627%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.98%)</title><rect x="81.0127%" y="373" width="0.9845%" height="15" fill="rgb(225,59,14)" fg:x="576" fg:w="7"/><text x="81.2627%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.98%)</title><rect x="81.0127%" y="357" width="0.9845%" height="15" fill="rgb(214,152,51)" fg:x="576" fg:w="7"/><text x="81.2627%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.98%)</title><rect x="81.0127%" y="341" width="0.9845%" height="15" fill="rgb(251,227,43)" fg:x="576" fg:w="7"/><text x="81.2627%" y="351.50"></text></g><g><title>_int_free (6 samples, 0.84%)</title><rect x="81.1533%" y="325" width="0.8439%" height="15" fill="rgb(241,96,17)" fg:x="577" fg:w="6"/><text x="81.4033%" y="335.50"></text></g><g><title>tcache_put (1 samples, 0.14%)</title><rect x="81.8565%" y="309" width="0.1406%" height="15" fill="rgb(234,198,43)" fg:x="582" fg:w="1"/><text x="82.1065%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 2.67%)</title><rect x="79.4655%" y="613" width="2.6723%" height="15" fill="rgb(220,108,29)" fg:x="565" fg:w="19"/><text x="79.7155%" y="623.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 2.67%)</title><rect x="79.4655%" y="597" width="2.6723%" height="15" fill="rgb(226,163,33)" fg:x="565" fg:w="19"/><text x="79.7155%" y="607.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 2.67%)</title><rect x="79.4655%" y="581" width="2.6723%" height="15" fill="rgb(205,194,45)" fg:x="565" fg:w="19"/><text x="79.7155%" y="591.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (19 samples, 2.67%)</title><rect x="79.4655%" y="565" width="2.6723%" height="15" fill="rgb(206,143,44)" fg:x="565" fg:w="19"/><text x="79.7155%" y="575.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (19 samples, 2.67%)</title><rect x="79.4655%" y="549" width="2.6723%" height="15" fill="rgb(236,136,36)" fg:x="565" fg:w="19"/><text x="79.7155%" y="559.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (19 samples, 2.67%)</title><rect x="79.4655%" y="533" width="2.6723%" height="15" fill="rgb(249,172,42)" fg:x="565" fg:w="19"/><text x="79.7155%" y="543.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 2.67%)</title><rect x="79.4655%" y="517" width="2.6723%" height="15" fill="rgb(216,139,23)" fg:x="565" fg:w="19"/><text x="79.7155%" y="527.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 2.53%)</title><rect x="79.6062%" y="501" width="2.5316%" height="15" fill="rgb(207,166,20)" fg:x="566" fg:w="18"/><text x="79.8562%" y="511.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (17 samples, 2.39%)</title><rect x="79.7468%" y="485" width="2.3910%" height="15" fill="rgb(210,209,22)" fg:x="567" fg:w="17"/><text x="79.9968%" y="495.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="81.9972%" y="469" width="0.1406%" height="15" fill="rgb(232,118,20)" fg:x="583" fg:w="1"/><text x="82.2472%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="81.9972%" y="453" width="0.1406%" height="15" fill="rgb(238,113,42)" fg:x="583" fg:w="1"/><text x="82.2472%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::string::String,alloc::alloc::Global&gt;&gt; (1 samples, 0.14%)</title><rect x="81.9972%" y="437" width="0.1406%" height="15" fill="rgb(231,42,5)" fg:x="583" fg:w="1"/><text x="82.2472%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="81.9972%" y="421" width="0.1406%" height="15" fill="rgb(243,166,24)" fg:x="583" fg:w="1"/><text x="82.2472%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="81.9972%" y="405" width="0.1406%" height="15" fill="rgb(237,226,12)" fg:x="583" fg:w="1"/><text x="82.2472%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="81.9972%" y="389" width="0.1406%" height="15" fill="rgb(229,133,24)" fg:x="583" fg:w="1"/><text x="82.2472%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.14%)</title><rect x="81.9972%" y="373" width="0.1406%" height="15" fill="rgb(238,33,43)" fg:x="583" fg:w="1"/><text x="82.2472%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.28%)</title><rect x="82.1378%" y="549" width="0.2813%" height="15" fill="rgb(227,59,38)" fg:x="584" fg:w="2"/><text x="82.3878%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.28%)</title><rect x="82.1378%" y="533" width="0.2813%" height="15" fill="rgb(230,97,0)" fg:x="584" fg:w="2"/><text x="82.3878%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="82.2785%" y="517" width="0.1406%" height="15" fill="rgb(250,173,50)" fg:x="585" fg:w="1"/><text x="82.5285%" y="527.50"></text></g><g><title>y2021::d12::main::traverse (286 samples, 40.23%)</title><rect x="42.3347%" y="645" width="40.2250%" height="15" fill="rgb(240,15,50)" fg:x="301" fg:w="286"/><text x="42.5847%" y="655.50">y2021::d12::main::traverse</text></g><g><title>y2021::d12::node_path::NodePath::from (45 samples, 6.33%)</title><rect x="76.2307%" y="629" width="6.3291%" height="15" fill="rgb(221,93,22)" fg:x="542" fg:w="45"/><text x="76.4807%" y="639.50">y2021::d..</text></g><g><title>y2021::d12::node_path::NodePath::new (3 samples, 0.42%)</title><rect x="82.1378%" y="613" width="0.4219%" height="15" fill="rgb(245,180,53)" fg:x="584" fg:w="3"/><text x="82.3878%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (3 samples, 0.42%)</title><rect x="82.1378%" y="597" width="0.4219%" height="15" fill="rgb(231,88,51)" fg:x="584" fg:w="3"/><text x="82.3878%" y="607.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (3 samples, 0.42%)</title><rect x="82.1378%" y="581" width="0.4219%" height="15" fill="rgb(240,58,21)" fg:x="584" fg:w="3"/><text x="82.3878%" y="591.50"></text></g><g><title>alloc::str::join_generic_copy (3 samples, 0.42%)</title><rect x="82.1378%" y="565" width="0.4219%" height="15" fill="rgb(237,21,10)" fg:x="584" fg:w="3"/><text x="82.3878%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.14%)</title><rect x="82.4191%" y="549" width="0.1406%" height="15" fill="rgb(218,43,11)" fg:x="586" fg:w="1"/><text x="82.6691%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.14%)</title><rect x="82.4191%" y="533" width="0.1406%" height="15" fill="rgb(218,221,29)" fg:x="586" fg:w="1"/><text x="82.6691%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.14%)</title><rect x="82.4191%" y="517" width="0.1406%" height="15" fill="rgb(214,118,42)" fg:x="586" fg:w="1"/><text x="82.6691%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.14%)</title><rect x="82.4191%" y="501" width="0.1406%" height="15" fill="rgb(251,200,26)" fg:x="586" fg:w="1"/><text x="82.6691%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="82.7004%" y="389" width="0.1406%" height="15" fill="rgb(237,101,39)" fg:x="588" fg:w="1"/><text x="82.9504%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="82.7004%" y="373" width="0.1406%" height="15" fill="rgb(251,117,11)" fg:x="588" fg:w="1"/><text x="82.9504%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.42%)</title><rect x="82.7004%" y="485" width="0.4219%" height="15" fill="rgb(216,223,23)" fg:x="588" fg:w="3"/><text x="82.9504%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.42%)</title><rect x="82.7004%" y="469" width="0.4219%" height="15" fill="rgb(251,54,12)" fg:x="588" fg:w="3"/><text x="82.9504%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.42%)</title><rect x="82.7004%" y="453" width="0.4219%" height="15" fill="rgb(254,176,54)" fg:x="588" fg:w="3"/><text x="82.9504%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.42%)</title><rect x="82.7004%" y="437" width="0.4219%" height="15" fill="rgb(210,32,8)" fg:x="588" fg:w="3"/><text x="82.9504%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.42%)</title><rect x="82.7004%" y="421" width="0.4219%" height="15" fill="rgb(235,52,38)" fg:x="588" fg:w="3"/><text x="82.9504%" y="431.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.42%)</title><rect x="82.7004%" y="405" width="0.4219%" height="15" fill="rgb(231,4,44)" fg:x="588" fg:w="3"/><text x="82.9504%" y="415.50"></text></g><g><title>__rust_alloc (2 samples, 0.28%)</title><rect x="82.8411%" y="389" width="0.2813%" height="15" fill="rgb(249,2,32)" fg:x="589" fg:w="2"/><text x="83.0911%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.14%)</title><rect x="83.1224%" y="453" width="0.1406%" height="15" fill="rgb(224,65,26)" fg:x="591" fg:w="1"/><text x="83.3724%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.98%)</title><rect x="82.5598%" y="565" width="0.9845%" height="15" fill="rgb(250,73,40)" fg:x="587" fg:w="7"/><text x="82.8098%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.84%)</title><rect x="82.7004%" y="549" width="0.8439%" height="15" fill="rgb(253,177,16)" fg:x="588" fg:w="6"/><text x="82.9504%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.84%)</title><rect x="82.7004%" y="533" width="0.8439%" height="15" fill="rgb(217,32,34)" fg:x="588" fg:w="6"/><text x="82.9504%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.84%)</title><rect x="82.7004%" y="517" width="0.8439%" height="15" fill="rgb(212,7,10)" fg:x="588" fg:w="6"/><text x="82.9504%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.84%)</title><rect x="82.7004%" y="501" width="0.8439%" height="15" fill="rgb(245,89,8)" fg:x="588" fg:w="6"/><text x="82.9504%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.42%)</title><rect x="83.1224%" y="485" width="0.4219%" height="15" fill="rgb(237,16,53)" fg:x="591" fg:w="3"/><text x="83.3724%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.42%)</title><rect x="83.1224%" y="469" width="0.4219%" height="15" fill="rgb(250,204,30)" fg:x="591" fg:w="3"/><text x="83.3724%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.28%)</title><rect x="83.2630%" y="453" width="0.2813%" height="15" fill="rgb(208,77,27)" fg:x="592" fg:w="2"/><text x="83.5130%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="83.5443%" y="565" width="0.1406%" height="15" fill="rgb(250,204,28)" fg:x="594" fg:w="1"/><text x="83.7943%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="83.6850%" y="565" width="0.2813%" height="15" fill="rgb(244,63,21)" fg:x="595" fg:w="2"/><text x="83.9350%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="83.6850%" y="549" width="0.2813%" height="15" fill="rgb(236,85,44)" fg:x="595" fg:w="2"/><text x="83.9350%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="83.6850%" y="533" width="0.2813%" height="15" fill="rgb(215,98,4)" fg:x="595" fg:w="2"/><text x="83.9350%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.28%)</title><rect x="83.6850%" y="517" width="0.2813%" height="15" fill="rgb(235,38,11)" fg:x="595" fg:w="2"/><text x="83.9350%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="83.6850%" y="501" width="0.2813%" height="15" fill="rgb(254,186,25)" fg:x="595" fg:w="2"/><text x="83.9350%" y="511.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="83.6850%" y="485" width="0.2813%" height="15" fill="rgb(225,55,31)" fg:x="595" fg:w="2"/><text x="83.9350%" y="495.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="83.6850%" y="469" width="0.2813%" height="15" fill="rgb(211,15,21)" fg:x="595" fg:w="2"/><text x="83.9350%" y="479.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="83.8256%" y="453" width="0.1406%" height="15" fill="rgb(215,187,41)" fg:x="596" fg:w="1"/><text x="84.0756%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 2.53%)</title><rect x="82.5598%" y="629" width="2.5316%" height="15" fill="rgb(248,69,32)" fg:x="587" fg:w="18"/><text x="82.8098%" y="639.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 2.53%)</title><rect x="82.5598%" y="613" width="2.5316%" height="15" fill="rgb(252,102,52)" fg:x="587" fg:w="18"/><text x="82.8098%" y="623.50">al..</text></g><g><title>alloc::slice::hack::to_vec (18 samples, 2.53%)</title><rect x="82.5598%" y="597" width="2.5316%" height="15" fill="rgb(253,140,32)" fg:x="587" fg:w="18"/><text x="82.8098%" y="607.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 2.53%)</title><rect x="82.5598%" y="581" width="2.5316%" height="15" fill="rgb(216,56,42)" fg:x="587" fg:w="18"/><text x="82.8098%" y="591.50">&lt;T..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (8 samples, 1.13%)</title><rect x="83.9662%" y="565" width="1.1252%" height="15" fill="rgb(216,184,14)" fg:x="597" fg:w="8"/><text x="84.2162%" y="575.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="85.0914%" y="501" width="0.1406%" height="15" fill="rgb(237,187,27)" fg:x="605" fg:w="1"/><text x="85.3414%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.14%)</title><rect x="85.0914%" y="485" width="0.1406%" height="15" fill="rgb(219,65,3)" fg:x="605" fg:w="1"/><text x="85.3414%" y="495.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.14%)</title><rect x="85.0914%" y="469" width="0.1406%" height="15" fill="rgb(245,83,25)" fg:x="605" fg:w="1"/><text x="85.3414%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.14%)</title><rect x="85.0914%" y="453" width="0.1406%" height="15" fill="rgb(214,205,45)" fg:x="605" fg:w="1"/><text x="85.3414%" y="463.50"></text></g><g><title>y2021::d12::node_path::NodePath::from::{{closure}} (1 samples, 0.14%)</title><rect x="85.0914%" y="437" width="0.1406%" height="15" fill="rgb(241,20,18)" fg:x="605" fg:w="1"/><text x="85.3414%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.14%)</title><rect x="85.0914%" y="421" width="0.1406%" height="15" fill="rgb(232,163,23)" fg:x="605" fg:w="1"/><text x="85.3414%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="85.0914%" y="405" width="0.1406%" height="15" fill="rgb(214,5,46)" fg:x="605" fg:w="1"/><text x="85.3414%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="85.0914%" y="389" width="0.1406%" height="15" fill="rgb(229,78,17)" fg:x="605" fg:w="1"/><text x="85.3414%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="85.0914%" y="373" width="0.1406%" height="15" fill="rgb(248,89,10)" fg:x="605" fg:w="1"/><text x="85.3414%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="85.0914%" y="357" width="0.1406%" height="15" fill="rgb(248,54,15)" fg:x="605" fg:w="1"/><text x="85.3414%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="85.0914%" y="341" width="0.1406%" height="15" fill="rgb(223,116,6)" fg:x="605" fg:w="1"/><text x="85.3414%" y="351.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="85.0914%" y="325" width="0.1406%" height="15" fill="rgb(205,125,38)" fg:x="605" fg:w="1"/><text x="85.3414%" y="335.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.70%)</title><rect x="85.6540%" y="261" width="0.7032%" height="15" fill="rgb(251,78,38)" fg:x="609" fg:w="5"/><text x="85.9040%" y="271.50"></text></g><g><title>tcache_get (1 samples, 0.14%)</title><rect x="86.2166%" y="245" width="0.1406%" height="15" fill="rgb(253,78,28)" fg:x="613" fg:w="1"/><text x="86.4666%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.98%)</title><rect x="85.5134%" y="357" width="0.9845%" height="15" fill="rgb(209,120,3)" fg:x="608" fg:w="7"/><text x="85.7634%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.98%)</title><rect x="85.5134%" y="341" width="0.9845%" height="15" fill="rgb(238,229,9)" fg:x="608" fg:w="7"/><text x="85.7634%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.98%)</title><rect x="85.5134%" y="325" width="0.9845%" height="15" fill="rgb(253,159,18)" fg:x="608" fg:w="7"/><text x="85.7634%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.98%)</title><rect x="85.5134%" y="309" width="0.9845%" height="15" fill="rgb(244,42,34)" fg:x="608" fg:w="7"/><text x="85.7634%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.98%)</title><rect x="85.5134%" y="293" width="0.9845%" height="15" fill="rgb(224,8,7)" fg:x="608" fg:w="7"/><text x="85.7634%" y="303.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.98%)</title><rect x="85.5134%" y="277" width="0.9845%" height="15" fill="rgb(210,201,45)" fg:x="608" fg:w="7"/><text x="85.7634%" y="287.50"></text></g><g><title>__rust_alloc (1 samples, 0.14%)</title><rect x="86.3572%" y="261" width="0.1406%" height="15" fill="rgb(252,185,21)" fg:x="614" fg:w="1"/><text x="86.6072%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 1.27%)</title><rect x="85.3727%" y="437" width="1.2658%" height="15" fill="rgb(223,131,1)" fg:x="607" fg:w="9"/><text x="85.6227%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 1.13%)</title><rect x="85.5134%" y="421" width="1.1252%" height="15" fill="rgb(245,141,16)" fg:x="608" fg:w="8"/><text x="85.7634%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 1.13%)</title><rect x="85.5134%" y="405" width="1.1252%" height="15" fill="rgb(229,55,45)" fg:x="608" fg:w="8"/><text x="85.7634%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 1.13%)</title><rect x="85.5134%" y="389" width="1.1252%" height="15" fill="rgb(208,92,15)" fg:x="608" fg:w="8"/><text x="85.7634%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 1.13%)</title><rect x="85.5134%" y="373" width="1.1252%" height="15" fill="rgb(234,185,47)" fg:x="608" fg:w="8"/><text x="85.7634%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.14%)</title><rect x="86.4979%" y="357" width="0.1406%" height="15" fill="rgb(253,104,50)" fg:x="615" fg:w="1"/><text x="86.7479%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="86.4979%" y="341" width="0.1406%" height="15" fill="rgb(205,70,7)" fg:x="615" fg:w="1"/><text x="86.7479%" y="351.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.14%)</title><rect x="86.4979%" y="325" width="0.1406%" height="15" fill="rgb(240,178,43)" fg:x="615" fg:w="1"/><text x="86.7479%" y="335.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="86.6385%" y="341" width="0.1406%" height="15" fill="rgb(214,112,2)" fg:x="616" fg:w="1"/><text x="86.8885%" y="351.50"></text></g><g><title>__rust_dealloc (1 samples, 0.14%)</title><rect x="86.7792%" y="341" width="0.1406%" height="15" fill="rgb(206,46,17)" fg:x="617" fg:w="1"/><text x="87.0292%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (16 samples, 2.25%)</title><rect x="85.3727%" y="485" width="2.2504%" height="15" fill="rgb(225,220,16)" fg:x="607" fg:w="16"/><text x="85.6227%" y="495.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (16 samples, 2.25%)</title><rect x="85.3727%" y="469" width="2.2504%" height="15" fill="rgb(238,65,40)" fg:x="607" fg:w="16"/><text x="85.6227%" y="479.50">c..</text></g><g><title>y2021::d12::node_path::NodePath::from::{{closure}} (16 samples, 2.25%)</title><rect x="85.3727%" y="453" width="2.2504%" height="15" fill="rgb(230,151,21)" fg:x="607" fg:w="16"/><text x="85.6227%" y="463.50">y..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.98%)</title><rect x="86.6385%" y="437" width="0.9845%" height="15" fill="rgb(218,58,49)" fg:x="616" fg:w="7"/><text x="86.8885%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.98%)</title><rect x="86.6385%" y="421" width="0.9845%" height="15" fill="rgb(219,179,14)" fg:x="616" fg:w="7"/><text x="86.8885%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.98%)</title><rect x="86.6385%" y="405" width="0.9845%" height="15" fill="rgb(223,72,1)" fg:x="616" fg:w="7"/><text x="86.8885%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.98%)</title><rect x="86.6385%" y="389" width="0.9845%" height="15" fill="rgb(238,126,10)" fg:x="616" fg:w="7"/><text x="86.8885%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.98%)</title><rect x="86.6385%" y="373" width="0.9845%" height="15" fill="rgb(224,206,38)" fg:x="616" fg:w="7"/><text x="86.8885%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.98%)</title><rect x="86.6385%" y="357" width="0.9845%" height="15" fill="rgb(212,201,54)" fg:x="616" fg:w="7"/><text x="86.8885%" y="367.50"></text></g><g><title>_int_free (5 samples, 0.70%)</title><rect x="86.9198%" y="341" width="0.7032%" height="15" fill="rgb(218,154,48)" fg:x="618" fg:w="5"/><text x="87.1698%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 2.67%)</title><rect x="85.0914%" y="629" width="2.6723%" height="15" fill="rgb(232,93,24)" fg:x="605" fg:w="19"/><text x="85.3414%" y="639.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 2.67%)</title><rect x="85.0914%" y="613" width="2.6723%" height="15" fill="rgb(245,30,21)" fg:x="605" fg:w="19"/><text x="85.3414%" y="623.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 2.67%)</title><rect x="85.0914%" y="597" width="2.6723%" height="15" fill="rgb(242,148,29)" fg:x="605" fg:w="19"/><text x="85.3414%" y="607.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (19 samples, 2.67%)</title><rect x="85.0914%" y="581" width="2.6723%" height="15" fill="rgb(244,153,54)" fg:x="605" fg:w="19"/><text x="85.3414%" y="591.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (19 samples, 2.67%)</title><rect x="85.0914%" y="565" width="2.6723%" height="15" fill="rgb(252,87,22)" fg:x="605" fg:w="19"/><text x="85.3414%" y="575.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (19 samples, 2.67%)</title><rect x="85.0914%" y="549" width="2.6723%" height="15" fill="rgb(210,51,29)" fg:x="605" fg:w="19"/><text x="85.3414%" y="559.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 2.67%)</title><rect x="85.0914%" y="533" width="2.6723%" height="15" fill="rgb(242,136,47)" fg:x="605" fg:w="19"/><text x="85.3414%" y="543.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 2.67%)</title><rect x="85.0914%" y="517" width="2.6723%" height="15" fill="rgb(238,68,4)" fg:x="605" fg:w="19"/><text x="85.3414%" y="527.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 2.53%)</title><rect x="85.2321%" y="501" width="2.5316%" height="15" fill="rgb(242,161,30)" fg:x="606" fg:w="18"/><text x="85.4821%" y="511.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="87.6231%" y="485" width="0.1406%" height="15" fill="rgb(218,58,44)" fg:x="623" fg:w="1"/><text x="87.8731%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="87.6231%" y="469" width="0.1406%" height="15" fill="rgb(252,125,32)" fg:x="623" fg:w="1"/><text x="87.8731%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::string::String,alloc::alloc::Global&gt;&gt; (1 samples, 0.14%)</title><rect x="87.6231%" y="453" width="0.1406%" height="15" fill="rgb(219,178,0)" fg:x="623" fg:w="1"/><text x="87.8731%" y="463.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="87.6231%" y="437" width="0.1406%" height="15" fill="rgb(213,152,7)" fg:x="623" fg:w="1"/><text x="87.8731%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="87.6231%" y="421" width="0.1406%" height="15" fill="rgb(249,109,34)" fg:x="623" fg:w="1"/><text x="87.8731%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="87.6231%" y="405" width="0.1406%" height="15" fill="rgb(232,96,21)" fg:x="623" fg:w="1"/><text x="87.8731%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="87.6231%" y="389" width="0.1406%" height="15" fill="rgb(228,27,39)" fg:x="623" fg:w="1"/><text x="87.8731%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="87.6231%" y="373" width="0.1406%" height="15" fill="rgb(211,182,52)" fg:x="623" fg:w="1"/><text x="87.8731%" y="383.50"></text></g><g><title>__rust_dealloc (1 samples, 0.14%)</title><rect x="87.6231%" y="357" width="0.1406%" height="15" fill="rgb(234,178,38)" fg:x="623" fg:w="1"/><text x="87.8731%" y="367.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="88.3263%" y="453" width="0.2813%" height="15" fill="rgb(221,111,3)" fg:x="628" fg:w="2"/><text x="88.5763%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.42%)</title><rect x="88.3263%" y="565" width="0.4219%" height="15" fill="rgb(228,175,21)" fg:x="628" fg:w="3"/><text x="88.5763%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.42%)</title><rect x="88.3263%" y="549" width="0.4219%" height="15" fill="rgb(228,174,43)" fg:x="628" fg:w="3"/><text x="88.5763%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.42%)</title><rect x="88.3263%" y="533" width="0.4219%" height="15" fill="rgb(211,191,0)" fg:x="628" fg:w="3"/><text x="88.5763%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.42%)</title><rect x="88.3263%" y="517" width="0.4219%" height="15" fill="rgb(253,117,3)" fg:x="628" fg:w="3"/><text x="88.5763%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.42%)</title><rect x="88.3263%" y="501" width="0.4219%" height="15" fill="rgb(241,127,19)" fg:x="628" fg:w="3"/><text x="88.5763%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.42%)</title><rect x="88.3263%" y="485" width="0.4219%" height="15" fill="rgb(218,103,12)" fg:x="628" fg:w="3"/><text x="88.5763%" y="495.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.42%)</title><rect x="88.3263%" y="469" width="0.4219%" height="15" fill="rgb(236,214,43)" fg:x="628" fg:w="3"/><text x="88.5763%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.14%)</title><rect x="88.6076%" y="453" width="0.1406%" height="15" fill="rgb(244,144,19)" fg:x="630" fg:w="1"/><text x="88.8576%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.14%)</title><rect x="88.6076%" y="437" width="0.1406%" height="15" fill="rgb(246,188,10)" fg:x="630" fg:w="1"/><text x="88.8576%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.14%)</title><rect x="88.7482%" y="565" width="0.1406%" height="15" fill="rgb(212,193,33)" fg:x="631" fg:w="1"/><text x="88.9982%" y="575.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (1 samples, 0.14%)</title><rect x="88.7482%" y="549" width="0.1406%" height="15" fill="rgb(241,51,29)" fg:x="631" fg:w="1"/><text x="88.9982%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.14%)</title><rect x="88.7482%" y="533" width="0.1406%" height="15" fill="rgb(211,58,19)" fg:x="631" fg:w="1"/><text x="88.9982%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.14%)</title><rect x="88.7482%" y="517" width="0.1406%" height="15" fill="rgb(229,111,26)" fg:x="631" fg:w="1"/><text x="88.9982%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="88.7482%" y="501" width="0.1406%" height="15" fill="rgb(213,115,40)" fg:x="631" fg:w="1"/><text x="88.9982%" y="511.50"></text></g><g><title>y2021::d12::main::traverse (400 samples, 56.26%)</title><rect x="32.7707%" y="661" width="56.2588%" height="15" fill="rgb(209,56,44)" fg:x="233" fg:w="400"/><text x="33.0207%" y="671.50">y2021::d12::main::traverse</text></g><g><title>y2021::d12::node_path::NodePath::from (46 samples, 6.47%)</title><rect x="82.5598%" y="645" width="6.4698%" height="15" fill="rgb(230,108,32)" fg:x="587" fg:w="46"/><text x="82.8098%" y="655.50">y2021::d..</text></g><g><title>y2021::d12::node_path::NodePath::new (9 samples, 1.27%)</title><rect x="87.7637%" y="629" width="1.2658%" height="15" fill="rgb(216,165,31)" fg:x="624" fg:w="9"/><text x="88.0137%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (9 samples, 1.27%)</title><rect x="87.7637%" y="613" width="1.2658%" height="15" fill="rgb(218,122,21)" fg:x="624" fg:w="9"/><text x="88.0137%" y="623.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (9 samples, 1.27%)</title><rect x="87.7637%" y="597" width="1.2658%" height="15" fill="rgb(223,224,47)" fg:x="624" fg:w="9"/><text x="88.0137%" y="607.50"></text></g><g><title>alloc::str::join_generic_copy (9 samples, 1.27%)</title><rect x="87.7637%" y="581" width="1.2658%" height="15" fill="rgb(238,102,44)" fg:x="624" fg:w="9"/><text x="88.0137%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.14%)</title><rect x="88.8889%" y="565" width="0.1406%" height="15" fill="rgb(236,46,40)" fg:x="632" fg:w="1"/><text x="89.1389%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="88.8889%" y="549" width="0.1406%" height="15" fill="rgb(247,202,50)" fg:x="632" fg:w="1"/><text x="89.1389%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.42%)</title><rect x="89.3108%" y="581" width="0.4219%" height="15" fill="rgb(209,99,20)" fg:x="635" fg:w="3"/><text x="89.5608%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="89.4515%" y="565" width="0.2813%" height="15" fill="rgb(252,27,34)" fg:x="636" fg:w="2"/><text x="89.7015%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.28%)</title><rect x="89.4515%" y="549" width="0.2813%" height="15" fill="rgb(215,206,23)" fg:x="636" fg:w="2"/><text x="89.7015%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.28%)</title><rect x="89.4515%" y="533" width="0.2813%" height="15" fill="rgb(212,135,36)" fg:x="636" fg:w="2"/><text x="89.7015%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.28%)</title><rect x="89.4515%" y="517" width="0.2813%" height="15" fill="rgb(240,189,1)" fg:x="636" fg:w="2"/><text x="89.7015%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.28%)</title><rect x="89.4515%" y="501" width="0.2813%" height="15" fill="rgb(242,56,20)" fg:x="636" fg:w="2"/><text x="89.7015%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.28%)</title><rect x="89.4515%" y="485" width="0.2813%" height="15" fill="rgb(247,132,33)" fg:x="636" fg:w="2"/><text x="89.7015%" y="495.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.28%)</title><rect x="89.4515%" y="469" width="0.2813%" height="15" fill="rgb(208,149,11)" fg:x="636" fg:w="2"/><text x="89.7015%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="89.7328%" y="581" width="0.1406%" height="15" fill="rgb(211,33,11)" fg:x="638" fg:w="1"/><text x="89.9828%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="89.8734%" y="581" width="0.1406%" height="15" fill="rgb(221,29,38)" fg:x="639" fg:w="1"/><text x="90.1234%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="89.8734%" y="565" width="0.1406%" height="15" fill="rgb(206,182,49)" fg:x="639" fg:w="1"/><text x="90.1234%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="89.8734%" y="549" width="0.1406%" height="15" fill="rgb(216,140,1)" fg:x="639" fg:w="1"/><text x="90.1234%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="89.8734%" y="533" width="0.1406%" height="15" fill="rgb(232,57,40)" fg:x="639" fg:w="1"/><text x="90.1234%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="89.8734%" y="517" width="0.1406%" height="15" fill="rgb(224,186,18)" fg:x="639" fg:w="1"/><text x="90.1234%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="89.8734%" y="501" width="0.1406%" height="15" fill="rgb(215,121,11)" fg:x="639" fg:w="1"/><text x="90.1234%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.14%)</title><rect x="89.8734%" y="485" width="0.1406%" height="15" fill="rgb(245,147,10)" fg:x="639" fg:w="1"/><text x="90.1234%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.14%)</title><rect x="89.8734%" y="469" width="0.1406%" height="15" fill="rgb(238,153,13)" fg:x="639" fg:w="1"/><text x="90.1234%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 1.97%)</title><rect x="89.1702%" y="645" width="1.9691%" height="15" fill="rgb(233,108,0)" fg:x="634" fg:w="14"/><text x="89.4202%" y="655.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 1.83%)</title><rect x="89.3108%" y="629" width="1.8284%" height="15" fill="rgb(212,157,17)" fg:x="635" fg:w="13"/><text x="89.5608%" y="639.50">a..</text></g><g><title>alloc::slice::hack::to_vec (13 samples, 1.83%)</title><rect x="89.3108%" y="613" width="1.8284%" height="15" fill="rgb(225,213,38)" fg:x="635" fg:w="13"/><text x="89.5608%" y="623.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 1.83%)</title><rect x="89.3108%" y="597" width="1.8284%" height="15" fill="rgb(248,16,11)" fg:x="635" fg:w="13"/><text x="89.5608%" y="607.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (8 samples, 1.13%)</title><rect x="90.0141%" y="581" width="1.1252%" height="15" fill="rgb(241,33,4)" fg:x="640" fg:w="8"/><text x="90.2641%" y="591.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.14%)</title><rect x="91.2799%" y="485" width="0.1406%" height="15" fill="rgb(222,26,43)" fg:x="649" fg:w="1"/><text x="91.5299%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.14%)</title><rect x="91.2799%" y="469" width="0.1406%" height="15" fill="rgb(243,29,36)" fg:x="649" fg:w="1"/><text x="91.5299%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.14%)</title><rect x="91.2799%" y="453" width="0.1406%" height="15" fill="rgb(241,9,27)" fg:x="649" fg:w="1"/><text x="91.5299%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.14%)</title><rect x="91.2799%" y="437" width="0.1406%" height="15" fill="rgb(205,117,26)" fg:x="649" fg:w="1"/><text x="91.5299%" y="447.50"></text></g><g><title>core::ptr::write (1 samples, 0.14%)</title><rect x="91.2799%" y="421" width="0.1406%" height="15" fill="rgb(209,80,39)" fg:x="649" fg:w="1"/><text x="91.5299%" y="431.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.28%)</title><rect x="91.2799%" y="517" width="0.2813%" height="15" fill="rgb(239,155,6)" fg:x="649" fg:w="2"/><text x="91.5299%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.28%)</title><rect x="91.2799%" y="501" width="0.2813%" height="15" fill="rgb(212,104,12)" fg:x="649" fg:w="2"/><text x="91.5299%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.14%)</title><rect x="91.4205%" y="485" width="0.1406%" height="15" fill="rgb(234,204,3)" fg:x="650" fg:w="1"/><text x="91.6705%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.14%)</title><rect x="91.4205%" y="469" width="0.1406%" height="15" fill="rgb(251,218,7)" fg:x="650" fg:w="1"/><text x="91.6705%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.14%)</title><rect x="91.4205%" y="453" width="0.1406%" height="15" fill="rgb(221,81,32)" fg:x="650" fg:w="1"/><text x="91.6705%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.56%)</title><rect x="91.5612%" y="453" width="0.5626%" height="15" fill="rgb(214,152,26)" fg:x="651" fg:w="4"/><text x="91.8112%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.56%)</title><rect x="91.5612%" y="437" width="0.5626%" height="15" fill="rgb(223,22,3)" fg:x="651" fg:w="4"/><text x="91.8112%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.56%)</title><rect x="91.5612%" y="421" width="0.5626%" height="15" fill="rgb(207,174,7)" fg:x="651" fg:w="4"/><text x="91.8112%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.56%)</title><rect x="91.5612%" y="405" width="0.5626%" height="15" fill="rgb(224,19,52)" fg:x="651" fg:w="4"/><text x="91.8112%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.56%)</title><rect x="91.5612%" y="389" width="0.5626%" height="15" fill="rgb(228,24,14)" fg:x="651" fg:w="4"/><text x="91.8112%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.56%)</title><rect x="91.5612%" y="373" width="0.5626%" height="15" fill="rgb(230,153,43)" fg:x="651" fg:w="4"/><text x="91.8112%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.56%)</title><rect x="91.5612%" y="357" width="0.5626%" height="15" fill="rgb(231,106,12)" fg:x="651" fg:w="4"/><text x="91.8112%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.56%)</title><rect x="91.5612%" y="341" width="0.5626%" height="15" fill="rgb(215,92,2)" fg:x="651" fg:w="4"/><text x="91.8112%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.56%)</title><rect x="91.5612%" y="325" width="0.5626%" height="15" fill="rgb(249,143,25)" fg:x="651" fg:w="4"/><text x="91.8112%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.56%)</title><rect x="91.5612%" y="309" width="0.5626%" height="15" fill="rgb(252,7,35)" fg:x="651" fg:w="4"/><text x="91.8112%" y="319.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.56%)</title><rect x="91.5612%" y="293" width="0.5626%" height="15" fill="rgb(216,69,40)" fg:x="651" fg:w="4"/><text x="91.8112%" y="303.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.56%)</title><rect x="91.5612%" y="277" width="0.5626%" height="15" fill="rgb(240,36,33)" fg:x="651" fg:w="4"/><text x="91.8112%" y="287.50"></text></g><g><title>tcache_get (2 samples, 0.28%)</title><rect x="91.8425%" y="261" width="0.2813%" height="15" fill="rgb(231,128,14)" fg:x="653" fg:w="2"/><text x="92.0925%" y="271.50"></text></g><g><title>__GI___libc_free (2 samples, 0.28%)</title><rect x="92.1238%" y="357" width="0.2813%" height="15" fill="rgb(245,143,14)" fg:x="655" fg:w="2"/><text x="92.3738%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (9 samples, 1.27%)</title><rect x="91.5612%" y="501" width="1.2658%" height="15" fill="rgb(222,130,28)" fg:x="651" fg:w="9"/><text x="91.8112%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9 samples, 1.27%)</title><rect x="91.5612%" y="485" width="1.2658%" height="15" fill="rgb(212,10,48)" fg:x="651" fg:w="9"/><text x="91.8112%" y="495.50"></text></g><g><title>y2021::d12::node_path::NodePath::from::{{closure}} (9 samples, 1.27%)</title><rect x="91.5612%" y="469" width="1.2658%" height="15" fill="rgb(254,118,45)" fg:x="651" fg:w="9"/><text x="91.8112%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.70%)</title><rect x="92.1238%" y="453" width="0.7032%" height="15" fill="rgb(228,6,45)" fg:x="655" fg:w="5"/><text x="92.3738%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.70%)</title><rect x="92.1238%" y="437" width="0.7032%" height="15" fill="rgb(241,18,35)" fg:x="655" fg:w="5"/><text x="92.3738%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.70%)</title><rect x="92.1238%" y="421" width="0.7032%" height="15" fill="rgb(227,214,53)" fg:x="655" fg:w="5"/><text x="92.3738%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.70%)</title><rect x="92.1238%" y="405" width="0.7032%" height="15" fill="rgb(224,107,51)" fg:x="655" fg:w="5"/><text x="92.3738%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.70%)</title><rect x="92.1238%" y="389" width="0.7032%" height="15" fill="rgb(248,60,28)" fg:x="655" fg:w="5"/><text x="92.3738%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.70%)</title><rect x="92.1238%" y="373" width="0.7032%" height="15" fill="rgb(249,101,23)" fg:x="655" fg:w="5"/><text x="92.3738%" y="383.50"></text></g><g><title>_int_free (3 samples, 0.42%)</title><rect x="92.4051%" y="357" width="0.4219%" height="15" fill="rgb(228,51,19)" fg:x="657" fg:w="3"/><text x="92.6551%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 1.97%)</title><rect x="91.1392%" y="645" width="1.9691%" height="15" fill="rgb(213,20,6)" fg:x="648" fg:w="14"/><text x="91.3892%" y="655.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 1.97%)</title><rect x="91.1392%" y="629" width="1.9691%" height="15" fill="rgb(212,124,10)" fg:x="648" fg:w="14"/><text x="91.3892%" y="639.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.97%)</title><rect x="91.1392%" y="613" width="1.9691%" height="15" fill="rgb(248,3,40)" fg:x="648" fg:w="14"/><text x="91.3892%" y="623.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 1.97%)</title><rect x="91.1392%" y="597" width="1.9691%" height="15" fill="rgb(223,178,23)" fg:x="648" fg:w="14"/><text x="91.3892%" y="607.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 1.97%)</title><rect x="91.1392%" y="581" width="1.9691%" height="15" fill="rgb(240,132,45)" fg:x="648" fg:w="14"/><text x="91.3892%" y="591.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14 samples, 1.97%)</title><rect x="91.1392%" y="565" width="1.9691%" height="15" fill="rgb(245,164,36)" fg:x="648" fg:w="14"/><text x="91.3892%" y="575.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.97%)</title><rect x="91.1392%" y="549" width="1.9691%" height="15" fill="rgb(231,188,53)" fg:x="648" fg:w="14"/><text x="91.3892%" y="559.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.97%)</title><rect x="91.1392%" y="533" width="1.9691%" height="15" fill="rgb(237,198,39)" fg:x="648" fg:w="14"/><text x="91.3892%" y="543.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 1.55%)</title><rect x="91.5612%" y="517" width="1.5471%" height="15" fill="rgb(223,120,35)" fg:x="651" fg:w="11"/><text x="91.8112%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::string::String&gt;&gt; (2 samples, 0.28%)</title><rect x="92.8270%" y="501" width="0.2813%" height="15" fill="rgb(253,107,49)" fg:x="660" fg:w="2"/><text x="93.0770%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.28%)</title><rect x="92.8270%" y="485" width="0.2813%" height="15" fill="rgb(216,44,31)" fg:x="660" fg:w="2"/><text x="93.0770%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::string::String,alloc::alloc::Global&gt;&gt; (2 samples, 0.28%)</title><rect x="92.8270%" y="469" width="0.2813%" height="15" fill="rgb(253,87,21)" fg:x="660" fg:w="2"/><text x="93.0770%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.28%)</title><rect x="92.8270%" y="453" width="0.2813%" height="15" fill="rgb(226,18,2)" fg:x="660" fg:w="2"/><text x="93.0770%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (2 samples, 0.28%)</title><rect x="92.8270%" y="437" width="0.2813%" height="15" fill="rgb(216,8,46)" fg:x="660" fg:w="2"/><text x="93.0770%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.28%)</title><rect x="92.8270%" y="421" width="0.2813%" height="15" fill="rgb(226,140,39)" fg:x="660" fg:w="2"/><text x="93.0770%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.28%)</title><rect x="92.8270%" y="405" width="0.2813%" height="15" fill="rgb(221,194,54)" fg:x="660" fg:w="2"/><text x="93.0770%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.28%)</title><rect x="92.8270%" y="389" width="0.2813%" height="15" fill="rgb(213,92,11)" fg:x="660" fg:w="2"/><text x="93.0770%" y="399.50"></text></g><g><title>__GI___libc_free (2 samples, 0.28%)</title><rect x="92.8270%" y="373" width="0.2813%" height="15" fill="rgb(229,162,46)" fg:x="660" fg:w="2"/><text x="93.0770%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="93.2489%" y="581" width="0.1406%" height="15" fill="rgb(214,111,36)" fg:x="663" fg:w="1"/><text x="93.4989%" y="591.50"></text></g><g><title>y2021::d12::main::traverse (475 samples, 66.81%)</title><rect x="26.7229%" y="677" width="66.8073%" height="15" fill="rgb(207,6,21)" fg:x="190" fg:w="475"/><text x="26.9729%" y="687.50">y2021::d12::main::traverse</text></g><g><title>y2021::d12::node_path::NodePath::from (32 samples, 4.50%)</title><rect x="89.0295%" y="661" width="4.5007%" height="15" fill="rgb(213,127,38)" fg:x="633" fg:w="32"/><text x="89.2795%" y="671.50">y2021..</text></g><g><title>y2021::d12::node_path::NodePath::new (3 samples, 0.42%)</title><rect x="93.1083%" y="645" width="0.4219%" height="15" fill="rgb(238,118,32)" fg:x="662" fg:w="3"/><text x="93.3583%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (3 samples, 0.42%)</title><rect x="93.1083%" y="629" width="0.4219%" height="15" fill="rgb(240,139,39)" fg:x="662" fg:w="3"/><text x="93.3583%" y="639.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (3 samples, 0.42%)</title><rect x="93.1083%" y="613" width="0.4219%" height="15" fill="rgb(235,10,37)" fg:x="662" fg:w="3"/><text x="93.3583%" y="623.50"></text></g><g><title>alloc::str::join_generic_copy (3 samples, 0.42%)</title><rect x="93.1083%" y="597" width="0.4219%" height="15" fill="rgb(249,171,38)" fg:x="662" fg:w="3"/><text x="93.3583%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="93.3896%" y="581" width="0.1406%" height="15" fill="rgb(242,144,32)" fg:x="664" fg:w="1"/><text x="93.6396%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="93.3896%" y="565" width="0.1406%" height="15" fill="rgb(217,117,21)" fg:x="664" fg:w="1"/><text x="93.6396%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="93.3896%" y="549" width="0.1406%" height="15" fill="rgb(249,87,1)" fg:x="664" fg:w="1"/><text x="93.6396%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="93.3896%" y="533" width="0.1406%" height="15" fill="rgb(248,196,48)" fg:x="664" fg:w="1"/><text x="93.6396%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="93.3896%" y="517" width="0.1406%" height="15" fill="rgb(251,206,33)" fg:x="664" fg:w="1"/><text x="93.6396%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="93.3896%" y="501" width="0.1406%" height="15" fill="rgb(232,141,28)" fg:x="664" fg:w="1"/><text x="93.6396%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="93.3896%" y="485" width="0.1406%" height="15" fill="rgb(209,167,14)" fg:x="664" fg:w="1"/><text x="93.6396%" y="495.50"></text></g><g><title>__rust_alloc (1 samples, 0.14%)</title><rect x="93.3896%" y="469" width="0.1406%" height="15" fill="rgb(225,11,50)" fg:x="664" fg:w="1"/><text x="93.6396%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="93.8115%" y="597" width="0.1406%" height="15" fill="rgb(209,50,20)" fg:x="667" fg:w="1"/><text x="94.0615%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="93.8115%" y="581" width="0.1406%" height="15" fill="rgb(212,17,46)" fg:x="667" fg:w="1"/><text x="94.0615%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="93.8115%" y="565" width="0.1406%" height="15" fill="rgb(216,101,39)" fg:x="667" fg:w="1"/><text x="94.0615%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="93.8115%" y="549" width="0.1406%" height="15" fill="rgb(212,228,48)" fg:x="667" fg:w="1"/><text x="94.0615%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="93.8115%" y="533" width="0.1406%" height="15" fill="rgb(250,6,50)" fg:x="667" fg:w="1"/><text x="94.0615%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="93.8115%" y="517" width="0.1406%" height="15" fill="rgb(250,160,48)" fg:x="667" fg:w="1"/><text x="94.0615%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="93.8115%" y="501" width="0.1406%" height="15" fill="rgb(244,216,33)" fg:x="667" fg:w="1"/><text x="94.0615%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="93.8115%" y="485" width="0.1406%" height="15" fill="rgb(207,157,5)" fg:x="667" fg:w="1"/><text x="94.0615%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="93.8115%" y="469" width="0.1406%" height="15" fill="rgb(228,199,8)" fg:x="667" fg:w="1"/><text x="94.0615%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="93.8115%" y="453" width="0.1406%" height="15" fill="rgb(227,80,20)" fg:x="667" fg:w="1"/><text x="94.0615%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="93.8115%" y="437" width="0.1406%" height="15" fill="rgb(222,9,33)" fg:x="667" fg:w="1"/><text x="94.0615%" y="447.50"></text></g><g><title>__rust_alloc (1 samples, 0.14%)</title><rect x="93.8115%" y="421" width="0.1406%" height="15" fill="rgb(239,44,28)" fg:x="667" fg:w="1"/><text x="94.0615%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="93.9522%" y="597" width="0.1406%" height="15" fill="rgb(249,187,43)" fg:x="668" fg:w="1"/><text x="94.2022%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.56%)</title><rect x="93.8115%" y="661" width="0.5626%" height="15" fill="rgb(216,141,28)" fg:x="667" fg:w="4"/><text x="94.0615%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.56%)</title><rect x="93.8115%" y="645" width="0.5626%" height="15" fill="rgb(230,154,53)" fg:x="667" fg:w="4"/><text x="94.0615%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.56%)</title><rect x="93.8115%" y="629" width="0.5626%" height="15" fill="rgb(227,82,4)" fg:x="667" fg:w="4"/><text x="94.0615%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.56%)</title><rect x="93.8115%" y="613" width="0.5626%" height="15" fill="rgb(220,107,16)" fg:x="667" fg:w="4"/><text x="94.0615%" y="623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.28%)</title><rect x="94.0928%" y="597" width="0.2813%" height="15" fill="rgb(207,187,2)" fg:x="669" fg:w="2"/><text x="94.3428%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.14%)</title><rect x="94.3741%" y="485" width="0.1406%" height="15" fill="rgb(210,162,52)" fg:x="671" fg:w="1"/><text x="94.6241%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.14%)</title><rect x="94.3741%" y="469" width="0.1406%" height="15" fill="rgb(217,216,49)" fg:x="671" fg:w="1"/><text x="94.6241%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.14%)</title><rect x="94.3741%" y="453" width="0.1406%" height="15" fill="rgb(218,146,49)" fg:x="671" fg:w="1"/><text x="94.6241%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="94.5148%" y="469" width="0.2813%" height="15" fill="rgb(216,55,40)" fg:x="672" fg:w="2"/><text x="94.7648%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.28%)</title><rect x="94.5148%" y="453" width="0.2813%" height="15" fill="rgb(208,196,21)" fg:x="672" fg:w="2"/><text x="94.7648%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.28%)</title><rect x="94.5148%" y="437" width="0.2813%" height="15" fill="rgb(242,117,42)" fg:x="672" fg:w="2"/><text x="94.7648%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.28%)</title><rect x="94.5148%" y="421" width="0.2813%" height="15" fill="rgb(210,11,23)" fg:x="672" fg:w="2"/><text x="94.7648%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.28%)</title><rect x="94.5148%" y="405" width="0.2813%" height="15" fill="rgb(217,110,2)" fg:x="672" fg:w="2"/><text x="94.7648%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="94.5148%" y="389" width="0.2813%" height="15" fill="rgb(229,77,54)" fg:x="672" fg:w="2"/><text x="94.7648%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="94.5148%" y="373" width="0.2813%" height="15" fill="rgb(218,53,16)" fg:x="672" fg:w="2"/><text x="94.7648%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="94.5148%" y="357" width="0.2813%" height="15" fill="rgb(215,38,13)" fg:x="672" fg:w="2"/><text x="94.7648%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.28%)</title><rect x="94.5148%" y="341" width="0.2813%" height="15" fill="rgb(235,42,18)" fg:x="672" fg:w="2"/><text x="94.7648%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="94.5148%" y="325" width="0.2813%" height="15" fill="rgb(219,66,54)" fg:x="672" fg:w="2"/><text x="94.7648%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.28%)</title><rect x="94.5148%" y="309" width="0.2813%" height="15" fill="rgb(222,205,4)" fg:x="672" fg:w="2"/><text x="94.7648%" y="319.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.28%)</title><rect x="94.5148%" y="293" width="0.2813%" height="15" fill="rgb(227,213,46)" fg:x="672" fg:w="2"/><text x="94.7648%" y="303.50"></text></g><g><title>tcache_get (1 samples, 0.14%)</title><rect x="94.6554%" y="277" width="0.1406%" height="15" fill="rgb(250,145,42)" fg:x="673" fg:w="1"/><text x="94.9054%" y="287.50"></text></g><g><title>__GI___libc_free (1 samples, 0.14%)</title><rect x="94.7961%" y="373" width="0.1406%" height="15" fill="rgb(219,15,2)" fg:x="674" fg:w="1"/><text x="95.0461%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.84%)</title><rect x="94.3741%" y="661" width="0.8439%" height="15" fill="rgb(231,181,52)" fg:x="671" fg:w="6"/><text x="94.6241%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.84%)</title><rect x="94.3741%" y="645" width="0.8439%" height="15" fill="rgb(235,1,42)" fg:x="671" fg:w="6"/><text x="94.6241%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.84%)</title><rect x="94.3741%" y="629" width="0.8439%" height="15" fill="rgb(249,88,27)" fg:x="671" fg:w="6"/><text x="94.6241%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.84%)</title><rect x="94.3741%" y="613" width="0.8439%" height="15" fill="rgb(235,145,16)" fg:x="671" fg:w="6"/><text x="94.6241%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.84%)</title><rect x="94.3741%" y="597" width="0.8439%" height="15" fill="rgb(237,114,19)" fg:x="671" fg:w="6"/><text x="94.6241%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.84%)</title><rect x="94.3741%" y="581" width="0.8439%" height="15" fill="rgb(238,51,50)" fg:x="671" fg:w="6"/><text x="94.6241%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.84%)</title><rect x="94.3741%" y="565" width="0.8439%" height="15" fill="rgb(205,194,25)" fg:x="671" fg:w="6"/><text x="94.6241%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.84%)</title><rect x="94.3741%" y="549" width="0.8439%" height="15" fill="rgb(215,203,17)" fg:x="671" fg:w="6"/><text x="94.6241%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.84%)</title><rect x="94.3741%" y="533" width="0.8439%" height="15" fill="rgb(233,112,49)" fg:x="671" fg:w="6"/><text x="94.6241%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.84%)</title><rect x="94.3741%" y="517" width="0.8439%" height="15" fill="rgb(241,130,26)" fg:x="671" fg:w="6"/><text x="94.6241%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (6 samples, 0.84%)</title><rect x="94.3741%" y="501" width="0.8439%" height="15" fill="rgb(252,223,19)" fg:x="671" fg:w="6"/><text x="94.6241%" y="511.50"></text></g><g><title>y2021::d12::node_path::NodePath::from::{{closure}} (5 samples, 0.70%)</title><rect x="94.5148%" y="485" width="0.7032%" height="15" fill="rgb(211,95,25)" fg:x="672" fg:w="5"/><text x="94.7648%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.42%)</title><rect x="94.7961%" y="469" width="0.4219%" height="15" fill="rgb(251,182,27)" fg:x="674" fg:w="3"/><text x="95.0461%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.42%)</title><rect x="94.7961%" y="453" width="0.4219%" height="15" fill="rgb(238,24,4)" fg:x="674" fg:w="3"/><text x="95.0461%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.42%)</title><rect x="94.7961%" y="437" width="0.4219%" height="15" fill="rgb(224,220,25)" fg:x="674" fg:w="3"/><text x="95.0461%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.42%)</title><rect x="94.7961%" y="421" width="0.4219%" height="15" fill="rgb(239,133,26)" fg:x="674" fg:w="3"/><text x="95.0461%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.42%)</title><rect x="94.7961%" y="405" width="0.4219%" height="15" fill="rgb(211,94,48)" fg:x="674" fg:w="3"/><text x="95.0461%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.42%)</title><rect x="94.7961%" y="389" width="0.4219%" height="15" fill="rgb(239,87,6)" fg:x="674" fg:w="3"/><text x="95.0461%" y="399.50"></text></g><g><title>_int_free (2 samples, 0.28%)</title><rect x="94.9367%" y="373" width="0.2813%" height="15" fill="rgb(227,62,0)" fg:x="675" fg:w="2"/><text x="95.1867%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.28%)</title><rect x="95.3586%" y="597" width="0.2813%" height="15" fill="rgb(211,226,4)" fg:x="678" fg:w="2"/><text x="95.6086%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="95.3586%" y="581" width="0.2813%" height="15" fill="rgb(253,38,52)" fg:x="678" fg:w="2"/><text x="95.6086%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.28%)</title><rect x="95.3586%" y="565" width="0.2813%" height="15" fill="rgb(229,126,40)" fg:x="678" fg:w="2"/><text x="95.6086%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.28%)</title><rect x="95.3586%" y="549" width="0.2813%" height="15" fill="rgb(229,165,44)" fg:x="678" fg:w="2"/><text x="95.6086%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.28%)</title><rect x="95.3586%" y="533" width="0.2813%" height="15" fill="rgb(247,95,47)" fg:x="678" fg:w="2"/><text x="95.6086%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.28%)</title><rect x="95.3586%" y="517" width="0.2813%" height="15" fill="rgb(216,140,30)" fg:x="678" fg:w="2"/><text x="95.6086%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="95.4993%" y="501" width="0.1406%" height="15" fill="rgb(246,214,8)" fg:x="679" fg:w="1"/><text x="95.7493%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.14%)</title><rect x="95.4993%" y="485" width="0.1406%" height="15" fill="rgb(227,224,15)" fg:x="679" fg:w="1"/><text x="95.7493%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.14%)</title><rect x="95.4993%" y="469" width="0.1406%" height="15" fill="rgb(233,175,4)" fg:x="679" fg:w="1"/><text x="95.7493%" y="479.50"></text></g><g><title>y2021::d12::main::traverse (537 samples, 75.53%)</title><rect x="20.3938%" y="693" width="75.5274%" height="15" fill="rgb(221,66,45)" fg:x="145" fg:w="537"/><text x="20.6438%" y="703.50">y2021::d12::main::traverse</text></g><g><title>y2021::d12::node_path::NodePath::from (17 samples, 2.39%)</title><rect x="93.5302%" y="677" width="2.3910%" height="15" fill="rgb(221,178,18)" fg:x="665" fg:w="17"/><text x="93.7802%" y="687.50">y2..</text></g><g><title>y2021::d12::node_path::NodePath::new (5 samples, 0.70%)</title><rect x="95.2180%" y="661" width="0.7032%" height="15" fill="rgb(213,81,29)" fg:x="677" fg:w="5"/><text x="95.4680%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (5 samples, 0.70%)</title><rect x="95.2180%" y="645" width="0.7032%" height="15" fill="rgb(220,89,49)" fg:x="677" fg:w="5"/><text x="95.4680%" y="655.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (5 samples, 0.70%)</title><rect x="95.2180%" y="629" width="0.7032%" height="15" fill="rgb(227,60,33)" fg:x="677" fg:w="5"/><text x="95.4680%" y="639.50"></text></g><g><title>alloc::str::join_generic_copy (5 samples, 0.70%)</title><rect x="95.2180%" y="613" width="0.7032%" height="15" fill="rgb(205,113,12)" fg:x="677" fg:w="5"/><text x="95.4680%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.28%)</title><rect x="95.6399%" y="597" width="0.2813%" height="15" fill="rgb(211,32,1)" fg:x="680" fg:w="2"/><text x="95.8899%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.28%)</title><rect x="95.6399%" y="581" width="0.2813%" height="15" fill="rgb(246,2,12)" fg:x="680" fg:w="2"/><text x="95.8899%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="95.7806%" y="565" width="0.1406%" height="15" fill="rgb(243,37,27)" fg:x="681" fg:w="1"/><text x="96.0306%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="95.9212%" y="613" width="0.1406%" height="15" fill="rgb(248,211,31)" fg:x="682" fg:w="1"/><text x="96.1712%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="95.9212%" y="597" width="0.1406%" height="15" fill="rgb(242,146,47)" fg:x="682" fg:w="1"/><text x="96.1712%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="95.9212%" y="581" width="0.1406%" height="15" fill="rgb(206,70,20)" fg:x="682" fg:w="1"/><text x="96.1712%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="95.9212%" y="565" width="0.1406%" height="15" fill="rgb(215,10,51)" fg:x="682" fg:w="1"/><text x="96.1712%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="95.9212%" y="549" width="0.1406%" height="15" fill="rgb(243,178,53)" fg:x="682" fg:w="1"/><text x="96.1712%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="95.9212%" y="533" width="0.1406%" height="15" fill="rgb(233,221,20)" fg:x="682" fg:w="1"/><text x="96.1712%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="95.9212%" y="517" width="0.1406%" height="15" fill="rgb(218,95,35)" fg:x="682" fg:w="1"/><text x="96.1712%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="95.9212%" y="501" width="0.1406%" height="15" fill="rgb(229,13,5)" fg:x="682" fg:w="1"/><text x="96.1712%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="95.9212%" y="485" width="0.1406%" height="15" fill="rgb(252,164,30)" fg:x="682" fg:w="1"/><text x="96.1712%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="95.9212%" y="469" width="0.1406%" height="15" fill="rgb(232,68,36)" fg:x="682" fg:w="1"/><text x="96.1712%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="95.9212%" y="453" width="0.1406%" height="15" fill="rgb(219,59,54)" fg:x="682" fg:w="1"/><text x="96.1712%" y="463.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="95.9212%" y="437" width="0.1406%" height="15" fill="rgb(250,92,33)" fg:x="682" fg:w="1"/><text x="96.1712%" y="447.50"></text></g><g><title>_int_malloc (1 samples, 0.14%)</title><rect x="95.9212%" y="421" width="0.1406%" height="15" fill="rgb(229,162,54)" fg:x="682" fg:w="1"/><text x="96.1712%" y="431.50"></text></g><g><title>tcache_put (1 samples, 0.14%)</title><rect x="95.9212%" y="405" width="0.1406%" height="15" fill="rgb(244,114,52)" fg:x="682" fg:w="1"/><text x="96.1712%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.14%)</title><rect x="96.0619%" y="613" width="0.1406%" height="15" fill="rgb(212,211,43)" fg:x="683" fg:w="1"/><text x="96.3119%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.42%)</title><rect x="95.9212%" y="677" width="0.4219%" height="15" fill="rgb(226,147,8)" fg:x="682" fg:w="3"/><text x="96.1712%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.42%)</title><rect x="95.9212%" y="661" width="0.4219%" height="15" fill="rgb(226,23,13)" fg:x="682" fg:w="3"/><text x="96.1712%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.42%)</title><rect x="95.9212%" y="645" width="0.4219%" height="15" fill="rgb(240,63,4)" fg:x="682" fg:w="3"/><text x="96.1712%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.42%)</title><rect x="95.9212%" y="629" width="0.4219%" height="15" fill="rgb(221,1,32)" fg:x="682" fg:w="3"/><text x="96.1712%" y="639.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.14%)</title><rect x="96.2025%" y="613" width="0.1406%" height="15" fill="rgb(242,117,10)" fg:x="684" fg:w="1"/><text x="96.4525%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.56%)</title><rect x="96.9058%" y="485" width="0.5626%" height="15" fill="rgb(249,172,44)" fg:x="689" fg:w="4"/><text x="97.1558%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.42%)</title><rect x="97.0464%" y="469" width="0.4219%" height="15" fill="rgb(244,46,45)" fg:x="690" fg:w="3"/><text x="97.2964%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.42%)</title><rect x="97.0464%" y="453" width="0.4219%" height="15" fill="rgb(206,43,17)" fg:x="690" fg:w="3"/><text x="97.2964%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.42%)</title><rect x="97.0464%" y="437" width="0.4219%" height="15" fill="rgb(239,218,39)" fg:x="690" fg:w="3"/><text x="97.2964%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.42%)</title><rect x="97.0464%" y="421" width="0.4219%" height="15" fill="rgb(208,169,54)" fg:x="690" fg:w="3"/><text x="97.2964%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.42%)</title><rect x="97.0464%" y="405" width="0.4219%" height="15" fill="rgb(247,25,42)" fg:x="690" fg:w="3"/><text x="97.2964%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.42%)</title><rect x="97.0464%" y="389" width="0.4219%" height="15" fill="rgb(226,23,31)" fg:x="690" fg:w="3"/><text x="97.2964%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.42%)</title><rect x="97.0464%" y="373" width="0.4219%" height="15" fill="rgb(247,16,28)" fg:x="690" fg:w="3"/><text x="97.2964%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.42%)</title><rect x="97.0464%" y="357" width="0.4219%" height="15" fill="rgb(231,147,38)" fg:x="690" fg:w="3"/><text x="97.2964%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.42%)</title><rect x="97.0464%" y="341" width="0.4219%" height="15" fill="rgb(253,81,48)" fg:x="690" fg:w="3"/><text x="97.2964%" y="351.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.42%)</title><rect x="97.0464%" y="325" width="0.4219%" height="15" fill="rgb(249,222,43)" fg:x="690" fg:w="3"/><text x="97.2964%" y="335.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.42%)</title><rect x="97.0464%" y="309" width="0.4219%" height="15" fill="rgb(221,3,27)" fg:x="690" fg:w="3"/><text x="97.2964%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.98%)</title><rect x="96.6245%" y="533" width="0.9845%" height="15" fill="rgb(228,180,5)" fg:x="687" fg:w="7"/><text x="96.8745%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.98%)</title><rect x="96.6245%" y="517" width="0.9845%" height="15" fill="rgb(227,131,42)" fg:x="687" fg:w="7"/><text x="96.8745%" y="527.50"></text></g><g><title>y2021::d12::node_path::NodePath::from::{{closure}} (5 samples, 0.70%)</title><rect x="96.9058%" y="501" width="0.7032%" height="15" fill="rgb(212,3,39)" fg:x="689" fg:w="5"/><text x="97.1558%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.14%)</title><rect x="97.4684%" y="485" width="0.1406%" height="15" fill="rgb(226,45,5)" fg:x="693" fg:w="1"/><text x="97.7184%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="97.4684%" y="469" width="0.1406%" height="15" fill="rgb(215,167,45)" fg:x="693" fg:w="1"/><text x="97.7184%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="97.4684%" y="453" width="0.1406%" height="15" fill="rgb(250,218,53)" fg:x="693" fg:w="1"/><text x="97.7184%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="97.4684%" y="437" width="0.1406%" height="15" fill="rgb(207,140,0)" fg:x="693" fg:w="1"/><text x="97.7184%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="97.4684%" y="421" width="0.1406%" height="15" fill="rgb(238,133,51)" fg:x="693" fg:w="1"/><text x="97.7184%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="97.4684%" y="405" width="0.1406%" height="15" fill="rgb(218,203,53)" fg:x="693" fg:w="1"/><text x="97.7184%" y="415.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="97.4684%" y="389" width="0.1406%" height="15" fill="rgb(226,184,25)" fg:x="693" fg:w="1"/><text x="97.7184%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 1.41%)</title><rect x="96.3432%" y="677" width="1.4065%" height="15" fill="rgb(231,121,21)" fg:x="685" fg:w="10"/><text x="96.5932%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 1.41%)</title><rect x="96.3432%" y="661" width="1.4065%" height="15" fill="rgb(251,14,34)" fg:x="685" fg:w="10"/><text x="96.5932%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 1.41%)</title><rect x="96.3432%" y="645" width="1.4065%" height="15" fill="rgb(249,193,11)" fg:x="685" fg:w="10"/><text x="96.5932%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 1.41%)</title><rect x="96.3432%" y="629" width="1.4065%" height="15" fill="rgb(220,172,37)" fg:x="685" fg:w="10"/><text x="96.5932%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 1.41%)</title><rect x="96.3432%" y="613" width="1.4065%" height="15" fill="rgb(231,229,43)" fg:x="685" fg:w="10"/><text x="96.5932%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 1.41%)</title><rect x="96.3432%" y="597" width="1.4065%" height="15" fill="rgb(250,161,5)" fg:x="685" fg:w="10"/><text x="96.5932%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 1.41%)</title><rect x="96.3432%" y="581" width="1.4065%" height="15" fill="rgb(218,225,18)" fg:x="685" fg:w="10"/><text x="96.5932%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 1.41%)</title><rect x="96.3432%" y="565" width="1.4065%" height="15" fill="rgb(245,45,42)" fg:x="685" fg:w="10"/><text x="96.5932%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 1.41%)</title><rect x="96.3432%" y="549" width="1.4065%" height="15" fill="rgb(211,115,1)" fg:x="685" fg:w="10"/><text x="96.5932%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="97.6090%" y="533" width="0.1406%" height="15" fill="rgb(248,133,52)" fg:x="694" fg:w="1"/><text x="97.8590%" y="543.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="97.6090%" y="517" width="0.1406%" height="15" fill="rgb(238,100,21)" fg:x="694" fg:w="1"/><text x="97.8590%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::string::String,alloc::alloc::Global&gt;&gt; (1 samples, 0.14%)</title><rect x="97.6090%" y="501" width="0.1406%" height="15" fill="rgb(247,144,11)" fg:x="694" fg:w="1"/><text x="97.8590%" y="511.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="97.6090%" y="485" width="0.1406%" height="15" fill="rgb(206,164,16)" fg:x="694" fg:w="1"/><text x="97.8590%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="97.6090%" y="469" width="0.1406%" height="15" fill="rgb(222,34,3)" fg:x="694" fg:w="1"/><text x="97.8590%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="97.6090%" y="453" width="0.1406%" height="15" fill="rgb(248,82,4)" fg:x="694" fg:w="1"/><text x="97.8590%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="97.6090%" y="437" width="0.1406%" height="15" fill="rgb(228,81,46)" fg:x="694" fg:w="1"/><text x="97.8590%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="97.6090%" y="421" width="0.1406%" height="15" fill="rgb(227,67,47)" fg:x="694" fg:w="1"/><text x="97.8590%" y="431.50"></text></g><g><title>__rust_dealloc (1 samples, 0.14%)</title><rect x="97.6090%" y="405" width="0.1406%" height="15" fill="rgb(215,93,53)" fg:x="694" fg:w="1"/><text x="97.8590%" y="415.50"></text></g><g><title>y2021::d12::main::traverse (568 samples, 79.89%)</title><rect x="18.0028%" y="709" width="79.8875%" height="15" fill="rgb(248,194,39)" fg:x="128" fg:w="568"/><text x="18.2528%" y="719.50">y2021::d12::main::traverse</text></g><g><title>y2021::d12::node_path::NodePath::from (14 samples, 1.97%)</title><rect x="95.9212%" y="693" width="1.9691%" height="15" fill="rgb(215,5,19)" fg:x="682" fg:w="14"/><text x="96.1712%" y="703.50">y..</text></g><g><title>y2021::d12::node_path::NodePath::new (1 samples, 0.14%)</title><rect x="97.7496%" y="677" width="0.1406%" height="15" fill="rgb(226,215,51)" fg:x="695" fg:w="1"/><text x="97.9996%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (1 samples, 0.14%)</title><rect x="97.7496%" y="661" width="0.1406%" height="15" fill="rgb(225,56,26)" fg:x="695" fg:w="1"/><text x="97.9996%" y="671.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (1 samples, 0.14%)</title><rect x="97.7496%" y="645" width="0.1406%" height="15" fill="rgb(222,75,29)" fg:x="695" fg:w="1"/><text x="97.9996%" y="655.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.14%)</title><rect x="97.7496%" y="629" width="0.1406%" height="15" fill="rgb(236,139,6)" fg:x="695" fg:w="1"/><text x="97.9996%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.14%)</title><rect x="97.7496%" y="613" width="0.1406%" height="15" fill="rgb(223,137,36)" fg:x="695" fg:w="1"/><text x="97.9996%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="97.7496%" y="597" width="0.1406%" height="15" fill="rgb(226,99,2)" fg:x="695" fg:w="1"/><text x="97.9996%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="97.7496%" y="581" width="0.1406%" height="15" fill="rgb(206,133,23)" fg:x="695" fg:w="1"/><text x="97.9996%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="97.7496%" y="565" width="0.1406%" height="15" fill="rgb(243,173,15)" fg:x="695" fg:w="1"/><text x="97.9996%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="97.7496%" y="549" width="0.1406%" height="15" fill="rgb(228,69,28)" fg:x="695" fg:w="1"/><text x="97.9996%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="97.7496%" y="533" width="0.1406%" height="15" fill="rgb(212,51,22)" fg:x="695" fg:w="1"/><text x="97.9996%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="97.7496%" y="517" width="0.1406%" height="15" fill="rgb(227,113,0)" fg:x="695" fg:w="1"/><text x="97.9996%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.14%)</title><rect x="97.7496%" y="501" width="0.1406%" height="15" fill="rgb(252,84,27)" fg:x="695" fg:w="1"/><text x="97.9996%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.14%)</title><rect x="97.7496%" y="485" width="0.1406%" height="15" fill="rgb(223,145,39)" fg:x="695" fg:w="1"/><text x="97.9996%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="98.0309%" y="693" width="0.1406%" height="15" fill="rgb(239,219,30)" fg:x="697" fg:w="1"/><text x="98.2809%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="98.0309%" y="677" width="0.1406%" height="15" fill="rgb(224,196,39)" fg:x="697" fg:w="1"/><text x="98.2809%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="98.0309%" y="661" width="0.1406%" height="15" fill="rgb(205,35,43)" fg:x="697" fg:w="1"/><text x="98.2809%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="98.0309%" y="645" width="0.1406%" height="15" fill="rgb(228,201,21)" fg:x="697" fg:w="1"/><text x="98.2809%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="98.0309%" y="629" width="0.1406%" height="15" fill="rgb(237,118,16)" fg:x="697" fg:w="1"/><text x="98.2809%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="98.0309%" y="613" width="0.1406%" height="15" fill="rgb(241,17,19)" fg:x="697" fg:w="1"/><text x="98.2809%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="98.0309%" y="597" width="0.1406%" height="15" fill="rgb(214,10,25)" fg:x="697" fg:w="1"/><text x="98.2809%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="98.0309%" y="581" width="0.1406%" height="15" fill="rgb(238,37,29)" fg:x="697" fg:w="1"/><text x="98.2809%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="98.0309%" y="565" width="0.1406%" height="15" fill="rgb(253,83,25)" fg:x="697" fg:w="1"/><text x="98.2809%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.14%)</title><rect x="98.0309%" y="549" width="0.1406%" height="15" fill="rgb(234,192,12)" fg:x="697" fg:w="1"/><text x="98.2809%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="98.0309%" y="533" width="0.1406%" height="15" fill="rgb(241,216,45)" fg:x="697" fg:w="1"/><text x="98.2809%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.14%)</title><rect x="98.0309%" y="517" width="0.1406%" height="15" fill="rgb(242,22,33)" fg:x="697" fg:w="1"/><text x="98.2809%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="98.1716%" y="485" width="0.1406%" height="15" fill="rgb(231,105,49)" fg:x="698" fg:w="1"/><text x="98.4216%" y="495.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.28%)</title><rect x="98.1716%" y="565" width="0.2813%" height="15" fill="rgb(218,204,15)" fg:x="698" fg:w="2"/><text x="98.4216%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.28%)</title><rect x="98.1716%" y="549" width="0.2813%" height="15" fill="rgb(235,138,41)" fg:x="698" fg:w="2"/><text x="98.4216%" y="559.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (2 samples, 0.28%)</title><rect x="98.1716%" y="533" width="0.2813%" height="15" fill="rgb(246,0,9)" fg:x="698" fg:w="2"/><text x="98.4216%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.28%)</title><rect x="98.1716%" y="517" width="0.2813%" height="15" fill="rgb(210,74,4)" fg:x="698" fg:w="2"/><text x="98.4216%" y="527.50"></text></g><g><title>y2021::d12::node_path::NodePath::from::{{closure}} (2 samples, 0.28%)</title><rect x="98.1716%" y="501" width="0.2813%" height="15" fill="rgb(250,60,41)" fg:x="698" fg:w="2"/><text x="98.4216%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.14%)</title><rect x="98.3122%" y="485" width="0.1406%" height="15" fill="rgb(220,115,12)" fg:x="699" fg:w="1"/><text x="98.5622%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="98.3122%" y="469" width="0.1406%" height="15" fill="rgb(237,100,13)" fg:x="699" fg:w="1"/><text x="98.5622%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.14%)</title><rect x="98.3122%" y="453" width="0.1406%" height="15" fill="rgb(213,55,26)" fg:x="699" fg:w="1"/><text x="98.5622%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="98.3122%" y="437" width="0.1406%" height="15" fill="rgb(216,17,4)" fg:x="699" fg:w="1"/><text x="98.5622%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="98.3122%" y="421" width="0.1406%" height="15" fill="rgb(220,153,47)" fg:x="699" fg:w="1"/><text x="98.5622%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="98.3122%" y="405" width="0.1406%" height="15" fill="rgb(215,131,9)" fg:x="699" fg:w="1"/><text x="98.5622%" y="415.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="98.3122%" y="389" width="0.1406%" height="15" fill="rgb(233,46,42)" fg:x="699" fg:w="1"/><text x="98.5622%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="98.5935%" y="501" width="0.1406%" height="15" fill="rgb(226,86,7)" fg:x="701" fg:w="1"/><text x="98.8435%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="98.5935%" y="485" width="0.1406%" height="15" fill="rgb(239,226,21)" fg:x="701" fg:w="1"/><text x="98.8435%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="98.5935%" y="469" width="0.1406%" height="15" fill="rgb(244,137,22)" fg:x="701" fg:w="1"/><text x="98.8435%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="98.5935%" y="453" width="0.1406%" height="15" fill="rgb(211,139,35)" fg:x="701" fg:w="1"/><text x="98.8435%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="98.5935%" y="437" width="0.1406%" height="15" fill="rgb(214,62,50)" fg:x="701" fg:w="1"/><text x="98.8435%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="98.5935%" y="421" width="0.1406%" height="15" fill="rgb(212,113,44)" fg:x="701" fg:w="1"/><text x="98.8435%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.14%)</title><rect x="98.5935%" y="405" width="0.1406%" height="15" fill="rgb(226,150,43)" fg:x="701" fg:w="1"/><text x="98.8435%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.14%)</title><rect x="98.5935%" y="389" width="0.1406%" height="15" fill="rgb(250,71,37)" fg:x="701" fg:w="1"/><text x="98.8435%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.14%)</title><rect x="98.5935%" y="373" width="0.1406%" height="15" fill="rgb(219,76,19)" fg:x="701" fg:w="1"/><text x="98.8435%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.14%)</title><rect x="98.5935%" y="357" width="0.1406%" height="15" fill="rgb(250,39,11)" fg:x="701" fg:w="1"/><text x="98.8435%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.14%)</title><rect x="98.5935%" y="341" width="0.1406%" height="15" fill="rgb(230,64,31)" fg:x="701" fg:w="1"/><text x="98.8435%" y="351.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.14%)</title><rect x="98.5935%" y="325" width="0.1406%" height="15" fill="rgb(208,222,23)" fg:x="701" fg:w="1"/><text x="98.8435%" y="335.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.14%)</title><rect x="98.7342%" y="405" width="0.1406%" height="15" fill="rgb(227,125,18)" fg:x="702" fg:w="1"/><text x="98.9842%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.14%)</title><rect x="98.7342%" y="389" width="0.1406%" height="15" fill="rgb(234,210,9)" fg:x="702" fg:w="1"/><text x="98.9842%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.56%)</title><rect x="98.4529%" y="549" width="0.5626%" height="15" fill="rgb(217,127,24)" fg:x="700" fg:w="4"/><text x="98.7029%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.56%)</title><rect x="98.4529%" y="533" width="0.5626%" height="15" fill="rgb(239,141,48)" fg:x="700" fg:w="4"/><text x="98.7029%" y="543.50"></text></g><g><title>y2021::d12::node_path::NodePath::from::{{closure}} (4 samples, 0.56%)</title><rect x="98.4529%" y="517" width="0.5626%" height="15" fill="rgb(227,109,8)" fg:x="700" fg:w="4"/><text x="98.7029%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.28%)</title><rect x="98.7342%" y="501" width="0.2813%" height="15" fill="rgb(235,184,23)" fg:x="702" fg:w="2"/><text x="98.9842%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.28%)</title><rect x="98.7342%" y="485" width="0.2813%" height="15" fill="rgb(227,226,48)" fg:x="702" fg:w="2"/><text x="98.9842%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.28%)</title><rect x="98.7342%" y="469" width="0.2813%" height="15" fill="rgb(206,150,11)" fg:x="702" fg:w="2"/><text x="98.9842%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.28%)</title><rect x="98.7342%" y="453" width="0.2813%" height="15" fill="rgb(254,2,33)" fg:x="702" fg:w="2"/><text x="98.9842%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.28%)</title><rect x="98.7342%" y="437" width="0.2813%" height="15" fill="rgb(243,160,20)" fg:x="702" fg:w="2"/><text x="98.9842%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.28%)</title><rect x="98.7342%" y="421" width="0.2813%" height="15" fill="rgb(218,208,30)" fg:x="702" fg:w="2"/><text x="98.9842%" y="431.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="98.8748%" y="405" width="0.1406%" height="15" fill="rgb(224,120,49)" fg:x="703" fg:w="1"/><text x="99.1248%" y="415.50"></text></g><g><title>y2021::d12::main::traverse (588 samples, 82.70%)</title><rect x="16.4557%" y="725" width="82.7004%" height="15" fill="rgb(246,12,2)" fg:x="117" fg:w="588"/><text x="16.7057%" y="735.50">y2021::d12::main::traverse</text></g><g><title>y2021::d12::node_path::NodePath::from (9 samples, 1.27%)</title><rect x="97.8903%" y="709" width="1.2658%" height="15" fill="rgb(236,117,3)" fg:x="696" fg:w="9"/><text x="98.1403%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.98%)</title><rect x="98.1716%" y="693" width="0.9845%" height="15" fill="rgb(216,128,52)" fg:x="698" fg:w="7"/><text x="98.4216%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.98%)</title><rect x="98.1716%" y="677" width="0.9845%" height="15" fill="rgb(246,145,19)" fg:x="698" fg:w="7"/><text x="98.4216%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.98%)</title><rect x="98.1716%" y="661" width="0.9845%" height="15" fill="rgb(222,11,46)" fg:x="698" fg:w="7"/><text x="98.4216%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.98%)</title><rect x="98.1716%" y="645" width="0.9845%" height="15" fill="rgb(245,82,36)" fg:x="698" fg:w="7"/><text x="98.4216%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.98%)</title><rect x="98.1716%" y="629" width="0.9845%" height="15" fill="rgb(250,73,51)" fg:x="698" fg:w="7"/><text x="98.4216%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.98%)</title><rect x="98.1716%" y="613" width="0.9845%" height="15" fill="rgb(221,189,23)" fg:x="698" fg:w="7"/><text x="98.4216%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.98%)</title><rect x="98.1716%" y="597" width="0.9845%" height="15" fill="rgb(210,33,7)" fg:x="698" fg:w="7"/><text x="98.4216%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.98%)</title><rect x="98.1716%" y="581" width="0.9845%" height="15" fill="rgb(210,107,22)" fg:x="698" fg:w="7"/><text x="98.4216%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.70%)</title><rect x="98.4529%" y="565" width="0.7032%" height="15" fill="rgb(222,116,37)" fg:x="700" fg:w="5"/><text x="98.7029%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="99.0155%" y="549" width="0.1406%" height="15" fill="rgb(254,17,48)" fg:x="704" fg:w="1"/><text x="99.2655%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="99.0155%" y="533" width="0.1406%" height="15" fill="rgb(224,36,32)" fg:x="704" fg:w="1"/><text x="99.2655%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::string::String,alloc::alloc::Global&gt;&gt; (1 samples, 0.14%)</title><rect x="99.0155%" y="517" width="0.1406%" height="15" fill="rgb(232,90,46)" fg:x="704" fg:w="1"/><text x="99.2655%" y="527.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="99.0155%" y="501" width="0.1406%" height="15" fill="rgb(241,66,40)" fg:x="704" fg:w="1"/><text x="99.2655%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (1 samples, 0.14%)</title><rect x="99.0155%" y="485" width="0.1406%" height="15" fill="rgb(249,184,29)" fg:x="704" fg:w="1"/><text x="99.2655%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.14%)</title><rect x="99.0155%" y="469" width="0.1406%" height="15" fill="rgb(231,181,1)" fg:x="704" fg:w="1"/><text x="99.2655%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.14%)</title><rect x="99.0155%" y="453" width="0.1406%" height="15" fill="rgb(224,94,2)" fg:x="704" fg:w="1"/><text x="99.2655%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.14%)</title><rect x="99.0155%" y="437" width="0.1406%" height="15" fill="rgb(229,170,15)" fg:x="704" fg:w="1"/><text x="99.2655%" y="447.50"></text></g><g><title>_int_free (1 samples, 0.14%)</title><rect x="99.0155%" y="421" width="0.1406%" height="15" fill="rgb(240,127,35)" fg:x="704" fg:w="1"/><text x="99.2655%" y="431.50"></text></g><g><title>y2021::d12::main::traverse (591 samples, 83.12%)</title><rect x="16.1744%" y="741" width="83.1224%" height="15" fill="rgb(248,196,34)" fg:x="115" fg:w="591"/><text x="16.4244%" y="751.50">y2021::d12::main::traverse</text></g><g><title>y2021::d12::node_path::NodePath::from (1 samples, 0.14%)</title><rect x="99.1561%" y="725" width="0.1406%" height="15" fill="rgb(236,137,7)" fg:x="705" fg:w="1"/><text x="99.4061%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="99.1561%" y="709" width="0.1406%" height="15" fill="rgb(235,127,16)" fg:x="705" fg:w="1"/><text x="99.4061%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="99.1561%" y="693" width="0.1406%" height="15" fill="rgb(250,192,54)" fg:x="705" fg:w="1"/><text x="99.4061%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="99.1561%" y="677" width="0.1406%" height="15" fill="rgb(218,98,20)" fg:x="705" fg:w="1"/><text x="99.4061%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="99.1561%" y="661" width="0.1406%" height="15" fill="rgb(230,176,47)" fg:x="705" fg:w="1"/><text x="99.4061%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="99.1561%" y="645" width="0.1406%" height="15" fill="rgb(244,2,33)" fg:x="705" fg:w="1"/><text x="99.4061%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="99.1561%" y="629" width="0.1406%" height="15" fill="rgb(231,100,17)" fg:x="705" fg:w="1"/><text x="99.4061%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.14%)</title><rect x="99.1561%" y="613" width="0.1406%" height="15" fill="rgb(245,23,12)" fg:x="705" fg:w="1"/><text x="99.4061%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.14%)</title><rect x="99.1561%" y="597" width="0.1406%" height="15" fill="rgb(249,55,22)" fg:x="705" fg:w="1"/><text x="99.4061%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.14%)</title><rect x="99.1561%" y="581" width="0.1406%" height="15" fill="rgb(207,134,9)" fg:x="705" fg:w="1"/><text x="99.4061%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.14%)</title><rect x="99.1561%" y="565" width="0.1406%" height="15" fill="rgb(218,134,0)" fg:x="705" fg:w="1"/><text x="99.4061%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.14%)</title><rect x="99.1561%" y="549" width="0.1406%" height="15" fill="rgb(213,212,33)" fg:x="705" fg:w="1"/><text x="99.4061%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="99.1561%" y="533" width="0.1406%" height="15" fill="rgb(252,106,18)" fg:x="705" fg:w="1"/><text x="99.4061%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.14%)</title><rect x="99.2968%" y="725" width="0.1406%" height="15" fill="rgb(208,126,42)" fg:x="706" fg:w="1"/><text x="99.5468%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="99.2968%" y="709" width="0.1406%" height="15" fill="rgb(246,175,29)" fg:x="706" fg:w="1"/><text x="99.5468%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="99.2968%" y="693" width="0.1406%" height="15" fill="rgb(215,13,50)" fg:x="706" fg:w="1"/><text x="99.5468%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.14%)</title><rect x="99.2968%" y="677" width="0.1406%" height="15" fill="rgb(216,172,15)" fg:x="706" fg:w="1"/><text x="99.5468%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.14%)</title><rect x="99.2968%" y="661" width="0.1406%" height="15" fill="rgb(212,103,13)" fg:x="706" fg:w="1"/><text x="99.5468%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.14%)</title><rect x="99.2968%" y="645" width="0.1406%" height="15" fill="rgb(231,171,36)" fg:x="706" fg:w="1"/><text x="99.5468%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="99.2968%" y="629" width="0.1406%" height="15" fill="rgb(250,123,20)" fg:x="706" fg:w="1"/><text x="99.5468%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.14%)</title><rect x="99.2968%" y="613" width="0.1406%" height="15" fill="rgb(212,53,50)" fg:x="706" fg:w="1"/><text x="99.5468%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.14%)</title><rect x="99.2968%" y="597" width="0.1406%" height="15" fill="rgb(243,54,12)" fg:x="706" fg:w="1"/><text x="99.5468%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.14%)</title><rect x="99.2968%" y="581" width="0.1406%" height="15" fill="rgb(234,101,34)" fg:x="706" fg:w="1"/><text x="99.5468%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.14%)</title><rect x="99.2968%" y="565" width="0.1406%" height="15" fill="rgb(254,67,22)" fg:x="706" fg:w="1"/><text x="99.5468%" y="575.50"></text></g><g><title>y2021::d12::node_path::NodePath::from::{{closure}} (1 samples, 0.14%)</title><rect x="99.2968%" y="549" width="0.1406%" height="15" fill="rgb(250,35,47)" fg:x="706" fg:w="1"/><text x="99.5468%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.14%)</title><rect x="99.2968%" y="533" width="0.1406%" height="15" fill="rgb(226,126,38)" fg:x="706" fg:w="1"/><text x="99.5468%" y="543.50"></text></g><g><title>_start (702 samples, 98.73%)</title><rect x="0.8439%" y="1109" width="98.7342%" height="15" fill="rgb(216,138,53)" fg:x="6" fg:w="702"/><text x="1.0939%" y="1119.50">_start</text></g><g><title>__libc_start_main (702 samples, 98.73%)</title><rect x="0.8439%" y="1093" width="98.7342%" height="15" fill="rgb(246,199,43)" fg:x="6" fg:w="702"/><text x="1.0939%" y="1103.50">__libc_start_main</text></g><g><title>main (702 samples, 98.73%)</title><rect x="0.8439%" y="1077" width="98.7342%" height="15" fill="rgb(232,125,11)" fg:x="6" fg:w="702"/><text x="1.0939%" y="1087.50">main</text></g><g><title>std::rt::lang_start_internal (702 samples, 98.73%)</title><rect x="0.8439%" y="1061" width="98.7342%" height="15" fill="rgb(218,219,45)" fg:x="6" fg:w="702"/><text x="1.0939%" y="1071.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (702 samples, 98.73%)</title><rect x="0.8439%" y="1045" width="98.7342%" height="15" fill="rgb(216,102,54)" fg:x="6" fg:w="702"/><text x="1.0939%" y="1055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (702 samples, 98.73%)</title><rect x="0.8439%" y="1029" width="98.7342%" height="15" fill="rgb(250,228,7)" fg:x="6" fg:w="702"/><text x="1.0939%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (702 samples, 98.73%)</title><rect x="0.8439%" y="1013" width="98.7342%" height="15" fill="rgb(226,125,25)" fg:x="6" fg:w="702"/><text x="1.0939%" y="1023.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (702 samples, 98.73%)</title><rect x="0.8439%" y="997" width="98.7342%" height="15" fill="rgb(224,165,27)" fg:x="6" fg:w="702"/><text x="1.0939%" y="1007.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (702 samples, 98.73%)</title><rect x="0.8439%" y="981" width="98.7342%" height="15" fill="rgb(233,86,3)" fg:x="6" fg:w="702"/><text x="1.0939%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (702 samples, 98.73%)</title><rect x="0.8439%" y="965" width="98.7342%" height="15" fill="rgb(228,116,20)" fg:x="6" fg:w="702"/><text x="1.0939%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (702 samples, 98.73%)</title><rect x="0.8439%" y="949" width="98.7342%" height="15" fill="rgb(209,192,17)" fg:x="6" fg:w="702"/><text x="1.0939%" y="959.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (702 samples, 98.73%)</title><rect x="0.8439%" y="933" width="98.7342%" height="15" fill="rgb(224,88,34)" fg:x="6" fg:w="702"/><text x="1.0939%" y="943.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (702 samples, 98.73%)</title><rect x="0.8439%" y="917" width="98.7342%" height="15" fill="rgb(233,38,6)" fg:x="6" fg:w="702"/><text x="1.0939%" y="927.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (702 samples, 98.73%)</title><rect x="0.8439%" y="901" width="98.7342%" height="15" fill="rgb(212,59,30)" fg:x="6" fg:w="702"/><text x="1.0939%" y="911.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (702 samples, 98.73%)</title><rect x="0.8439%" y="885" width="98.7342%" height="15" fill="rgb(213,80,3)" fg:x="6" fg:w="702"/><text x="1.0939%" y="895.50">core::ops::function::FnOnce::call_once</text></g><g><title>y2021::main (702 samples, 98.73%)</title><rect x="0.8439%" y="869" width="98.7342%" height="15" fill="rgb(251,178,7)" fg:x="6" fg:w="702"/><text x="1.0939%" y="879.50">y2021::main</text></g><g><title>y2021::d12::main::run (663 samples, 93.25%)</title><rect x="6.3291%" y="853" width="93.2489%" height="15" fill="rgb(213,154,26)" fg:x="45" fg:w="663"/><text x="6.5791%" y="863.50">y2021::d12::main::run</text></g><g><title>y2021::d12::main::p02 (659 samples, 92.69%)</title><rect x="6.8917%" y="837" width="92.6864%" height="15" fill="rgb(238,165,49)" fg:x="49" fg:w="659"/><text x="7.1417%" y="847.50">y2021::d12::main::p02</text></g><g><title>y2021::d12::main::traverse (593 samples, 83.40%)</title><rect x="16.1744%" y="821" width="83.4037%" height="15" fill="rgb(248,91,46)" fg:x="115" fg:w="593"/><text x="16.4244%" y="831.50">y2021::d12::main::traverse</text></g><g><title>y2021::d12::main::traverse (593 samples, 83.40%)</title><rect x="16.1744%" y="805" width="83.4037%" height="15" fill="rgb(244,21,52)" fg:x="115" fg:w="593"/><text x="16.4244%" y="815.50">y2021::d12::main::traverse</text></g><g><title>y2021::d12::main::traverse (593 samples, 83.40%)</title><rect x="16.1744%" y="789" width="83.4037%" height="15" fill="rgb(247,122,20)" fg:x="115" fg:w="593"/><text x="16.4244%" y="799.50">y2021::d12::main::traverse</text></g><g><title>y2021::d12::main::traverse (593 samples, 83.40%)</title><rect x="16.1744%" y="773" width="83.4037%" height="15" fill="rgb(218,27,9)" fg:x="115" fg:w="593"/><text x="16.4244%" y="783.50">y2021::d12::main::traverse</text></g><g><title>y2021::d12::main::traverse (593 samples, 83.40%)</title><rect x="16.1744%" y="757" width="83.4037%" height="15" fill="rgb(246,7,6)" fg:x="115" fg:w="593"/><text x="16.4244%" y="767.50">y2021::d12::main::traverse</text></g><g><title>y2021::d12::node_path::NodePath::from (2 samples, 0.28%)</title><rect x="99.2968%" y="741" width="0.2813%" height="15" fill="rgb(227,135,54)" fg:x="706" fg:w="2"/><text x="99.5468%" y="751.50"></text></g><g><title>y2021::d12::node_path::NodePath::new (1 samples, 0.14%)</title><rect x="99.4374%" y="725" width="0.1406%" height="15" fill="rgb(247,14,11)" fg:x="707" fg:w="1"/><text x="99.6874%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (1 samples, 0.14%)</title><rect x="99.4374%" y="709" width="0.1406%" height="15" fill="rgb(206,149,34)" fg:x="707" fg:w="1"/><text x="99.6874%" y="719.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (1 samples, 0.14%)</title><rect x="99.4374%" y="693" width="0.1406%" height="15" fill="rgb(227,228,4)" fg:x="707" fg:w="1"/><text x="99.6874%" y="703.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.14%)</title><rect x="99.4374%" y="677" width="0.1406%" height="15" fill="rgb(238,218,28)" fg:x="707" fg:w="1"/><text x="99.6874%" y="687.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.14%)</title><rect x="99.5781%" y="1077" width="0.1406%" height="15" fill="rgb(252,86,40)" fg:x="708" fg:w="1"/><text x="99.8281%" y="1087.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.14%)</title><rect x="99.5781%" y="1061" width="0.1406%" height="15" fill="rgb(251,225,11)" fg:x="708" fg:w="1"/><text x="99.8281%" y="1071.50"></text></g><g><title>bprm_execve (1 samples, 0.14%)</title><rect x="99.5781%" y="1045" width="0.1406%" height="15" fill="rgb(206,46,49)" fg:x="708" fg:w="1"/><text x="99.8281%" y="1055.50"></text></g><g><title>exec_binprm (1 samples, 0.14%)</title><rect x="99.5781%" y="1029" width="0.1406%" height="15" fill="rgb(245,128,24)" fg:x="708" fg:w="1"/><text x="99.8281%" y="1039.50"></text></g><g><title>load_elf_binary (1 samples, 0.14%)</title><rect x="99.5781%" y="1013" width="0.1406%" height="15" fill="rgb(219,177,34)" fg:x="708" fg:w="1"/><text x="99.8281%" y="1023.50"></text></g><g><title>setup_arg_pages (1 samples, 0.14%)</title><rect x="99.5781%" y="997" width="0.1406%" height="15" fill="rgb(218,60,48)" fg:x="708" fg:w="1"/><text x="99.8281%" y="1007.50"></text></g><g><title>mprotect_fixup (1 samples, 0.14%)</title><rect x="99.5781%" y="981" width="0.1406%" height="15" fill="rgb(221,11,5)" fg:x="708" fg:w="1"/><text x="99.8281%" y="991.50"></text></g><g><title>perf_event_mmap (1 samples, 0.14%)</title><rect x="99.5781%" y="965" width="0.1406%" height="15" fill="rgb(220,148,13)" fg:x="708" fg:w="1"/><text x="99.8281%" y="975.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.14%)</title><rect x="99.5781%" y="949" width="0.1406%" height="15" fill="rgb(210,16,3)" fg:x="708" fg:w="1"/><text x="99.8281%" y="959.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.14%)</title><rect x="99.5781%" y="933" width="0.1406%" height="15" fill="rgb(236,80,2)" fg:x="708" fg:w="1"/><text x="99.8281%" y="943.50"></text></g><g><title>all (711 samples, 100%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(239,129,19)" fg:x="0" fg:w="711"/><text x="0.2500%" y="1151.50"></text></g><g><title>y2021 (706 samples, 99.30%)</title><rect x="0.7032%" y="1125" width="99.2968%" height="15" fill="rgb(220,106,35)" fg:x="5" fg:w="706"/><text x="0.9532%" y="1135.50">y2021</text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.42%)</title><rect x="99.5781%" y="1109" width="0.4219%" height="15" fill="rgb(252,139,45)" fg:x="708" fg:w="3"/><text x="99.8281%" y="1119.50"></text></g><g><title>do_syscall_64 (3 samples, 0.42%)</title><rect x="99.5781%" y="1093" width="0.4219%" height="15" fill="rgb(229,8,36)" fg:x="708" fg:w="3"/><text x="99.8281%" y="1103.50"></text></g><g><title>__x64_sys_exit_group (2 samples, 0.28%)</title><rect x="99.7187%" y="1077" width="0.2813%" height="15" fill="rgb(230,126,33)" fg:x="709" fg:w="2"/><text x="99.9687%" y="1087.50"></text></g><g><title>do_group_exit (2 samples, 0.28%)</title><rect x="99.7187%" y="1061" width="0.2813%" height="15" fill="rgb(239,140,21)" fg:x="709" fg:w="2"/><text x="99.9687%" y="1071.50"></text></g><g><title>do_exit (2 samples, 0.28%)</title><rect x="99.7187%" y="1045" width="0.2813%" height="15" fill="rgb(254,104,9)" fg:x="709" fg:w="2"/><text x="99.9687%" y="1055.50"></text></g><g><title>mmput (2 samples, 0.28%)</title><rect x="99.7187%" y="1029" width="0.2813%" height="15" fill="rgb(239,52,14)" fg:x="709" fg:w="2"/><text x="99.9687%" y="1039.50"></text></g><g><title>exit_mmap (2 samples, 0.28%)</title><rect x="99.7187%" y="1013" width="0.2813%" height="15" fill="rgb(208,227,44)" fg:x="709" fg:w="2"/><text x="99.9687%" y="1023.50"></text></g><g><title>unmap_vmas (2 samples, 0.28%)</title><rect x="99.7187%" y="997" width="0.2813%" height="15" fill="rgb(246,18,19)" fg:x="709" fg:w="2"/><text x="99.9687%" y="1007.50"></text></g><g><title>unmap_single_vma (2 samples, 0.28%)</title><rect x="99.7187%" y="981" width="0.2813%" height="15" fill="rgb(235,228,25)" fg:x="709" fg:w="2"/><text x="99.9687%" y="991.50"></text></g><g><title>unmap_page_range (2 samples, 0.28%)</title><rect x="99.7187%" y="965" width="0.2813%" height="15" fill="rgb(240,156,20)" fg:x="709" fg:w="2"/><text x="99.9687%" y="975.50"></text></g><g><title>zap_pte_range.isra.0 (2 samples, 0.28%)</title><rect x="99.7187%" y="949" width="0.2813%" height="15" fill="rgb(224,8,20)" fg:x="709" fg:w="2"/><text x="99.9687%" y="959.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.14%)</title><rect x="99.8594%" y="933" width="0.1406%" height="15" fill="rgb(214,12,52)" fg:x="710" fg:w="1"/><text x="100.1094%" y="943.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.14%)</title><rect x="99.8594%" y="917" width="0.1406%" height="15" fill="rgb(211,220,47)" fg:x="710" fg:w="1"/><text x="100.1094%" y="927.50"></text></g><g><title>release_pages (1 samples, 0.14%)</title><rect x="99.8594%" y="901" width="0.1406%" height="15" fill="rgb(250,173,5)" fg:x="710" fg:w="1"/><text x="100.1094%" y="911.50"></text></g><g><title>free_unref_page_prepare.part.0 (1 samples, 0.14%)</title><rect x="99.8594%" y="885" width="0.1406%" height="15" fill="rgb(250,125,52)" fg:x="710" fg:w="1"/><text x="100.1094%" y="895.50"></text></g></svg></svg>